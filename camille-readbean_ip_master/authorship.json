[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"# Leto project template","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"3. After that, locate the `src/main/java/Leto.java` file, right-click it, and choose `Run Leto.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"camille-readbean":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"    mainClass.set(\"me.ruibin.leto.Main\")","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"    archiveBaseName \u003d \"leto\"","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"camille-readbean":2}},{"path":"src/main/java/me/ruibin/leto/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.parser.Parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.ui.Ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"/** Main program for Leto. */","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"public class Main {","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"        Ui.letoLogo();","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"        TaskList.initFromFile();","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"        Parser.readCommandAndExecute();","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"camille-readbean":14}},{"path":"src/main/java/me/ruibin/leto/parser/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"/** Save tasks and exit by returning \u003ccode\u003eResults.EXIT\u003c/code\u003e*/","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"public class ByeCommand implements Function\u003cString, Results\u003e {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"    public Results apply(String s) {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"        TaskList.saveTasks();","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"        return Results.EXIT;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"camille-readbean":14}},{"path":"src/main/java/me/ruibin/leto/parser/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"enum Commands {","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"    BYE(new ByeCommand()),","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"    EXIT(new ByeCommand()),","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"    QUIT(new ByeCommand()),","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"    LIST(new ListCommand()),","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"    TODO(new NewTaskCommand()),","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"    EVENT(new NewTaskCommand()),","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"    DEADLINE(new NewTaskCommand()),","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"    MARK(new MarkCommand()),","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"    UNMARK(new UnmarkCommand()),","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"    DELETE(new DeleteCommand()),","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"    SAVE(new SaveCommand()),","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"    HELP(new HelpCommand()),","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"    DEFAULT(new HelpCommand()),","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"    FIND(new FindCommand());","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"    private Function\u003cString, Results\u003e commandAction;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"    private Commands(Function\u003cString, Results\u003e function) {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"        this.commandAction \u003d function;","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"    /** Run the specific command. */","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"    public Results run(String inputs) {","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"        return this.commandAction.apply(inputs);","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"camille-readbean":30}},{"path":"src/main/java/me/ruibin/leto/parser/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"/** Deletes task and returns \u003ccode\u003eResults.OK\u003c/code\u003e*/","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"public class DeleteCommand implements Function\u003cString, Results\u003e {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"    public Results apply(String s) {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"        TaskList.deleteTask(s);","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"        return Results.OK;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"camille-readbean":14}},{"path":"src/main/java/me/ruibin/leto/parser/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.parser;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.ui.Ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.TaskList;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"import java.util.List;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"import static me.ruibin.leto.ui.Ui.letoSpeak;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"/** Command for printing tasks found by a keyword search. */","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"public class FindCommand implements Function\u003cString, Results\u003e {","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"     * Run a keyword search in task message from the keyword extracted from the command.","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"     * Prints output as a list","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"     * @param command the command from the user","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"     * @return \u003ccode\u003eResults.OK\u003c/code\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"    public Results apply(String command) {","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"        String[] parts \u003d command.split(\" \");","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"            Ui.shortSay(\"find command: find \u003ckeyword\u003e, please ensure no space in between\");","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"            return Results.OK;","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"        String keyword \u003d parts[1];","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"        List\u003cTask\u003e tasks \u003d TaskList.getTasks();","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"        StringBuilder outputListMessage \u003d new StringBuilder(\"Tasks matching \\\"\" + keyword + \"\\\":\\n\");","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"        int index \u003d 1;","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"        for (Task t: tasks) {","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"            if (t.toCsvString().split(\",\")[2].contains(keyword)) {","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"                outputListMessage.append(index).append(\". \").append(t).append(\"\\n\");","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"                index++;","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"        letoSpeak(outputListMessage.toString());","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"camille-readbean"},"content":"        return Results.OK;","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"camille-readbean":42}},{"path":"src/main/java/me/ruibin/leto/parser/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"/** Prints help message and returns \u003ccode\u003eResults.OK\u003c/code\u003e*/","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"public class HelpCommand implements Function\u003cString, Results\u003e {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"    public Results apply(String s) {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"        Ui.letoHelp();","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"        return Results.OK;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"camille-readbean":14}},{"path":"src/main/java/me/ruibin/leto/parser/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"/** Prints the list of tasks and returns \u003ccode\u003eResults.OK\u003c/code\u003e*/","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"public class ListCommand implements Function\u003cString, Results\u003e {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"    public Results apply(String s) {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"        TaskList.printList();","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"        return Results.OK;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"camille-readbean":14}},{"path":"src/main/java/me/ruibin/leto/parser/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"/** Marks task as completed and returns \u003ccode\u003eResults.OK\u003c/code\u003e*/","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"public class MarkCommand implements Function\u003cString, Results\u003e {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"    public Results apply(String s) {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"        TaskList.markTaskCompleted(s);","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"        return Results.OK;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"camille-readbean":14}},{"path":"src/main/java/me/ruibin/leto/parser/NewTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"/** Read input for new task to add to list and returns \u003ccode\u003eResults.OK\u003c/code\u003e*/","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"public class NewTaskCommand implements Function\u003cString, Results\u003e {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"    public Results apply(String s) {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"        TaskList.addToList(s);","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"        return Results.OK;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"camille-readbean":14}},{"path":"src/main/java/me/ruibin/leto/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"public class Parser {","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"    private static Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"    public Parser() {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"     * Reads user inputs and parse it, running the resulting command.","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"     * Loops until it encounters a command that returns \u003ccode\u003eResults.EXIT\u003c/code\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"    public static void readCommandAndExecute() {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"        boolean isBye \u003d false;","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"        while (!isBye) {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"            String inputs \u003d sc.nextLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"            String[] commands \u003d inputs.split(\" \");","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"            Commands cmd;","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"            try {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"                cmd \u003d Commands.valueOf(commands[0].toUpperCase());","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"                Results r \u003d cmd.run(inputs);","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"                if (r.equals(Results.EXIT)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"                    isBye \u003d true;","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"                } else if (r.equals(Results.ERROR)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"                    Ui.shortSay(\"Error encountered!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"            } catch (ArrayIndexOutOfBoundsException | IllegalArgumentException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"                Commands.HELP.run(\"\");","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"            } // End try","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"        } // End command while loop","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"        System.out.println(\"  \u003c\u003cDuke Leto\u003e\u003e\\n  \u003e I bid you farewell\");","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"camille-readbean":39}},{"path":"src/main/java/me/ruibin/leto/parser/Results.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"/** Enum containing possible outcome produced by Command that ran */","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"public enum Results {","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"    EXIT,","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"    OK,","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"    ERROR","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"camille-readbean":8}},{"path":"src/main/java/me/ruibin/leto/parser/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"/** Save tasks and returns \u003ccode\u003eResults.OK\u003c/code\u003e*/","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"public class SaveCommand implements Function\u003cString, Results\u003e {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"    public Results apply(String s) {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"        TaskList.saveTasks();","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"        return Results.OK;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"camille-readbean":14}},{"path":"src/main/java/me/ruibin/leto/parser/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"/** Marks task as uncompleted and returns \u003ccode\u003eResults.OK\u003c/code\u003e*/","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"public class UnmarkCommand implements Function\u003cString, Results\u003e {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"    public Results apply(String s) {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"        TaskList.markTaskUncompleted(s);","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"        return Results.OK;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"camille-readbean":14}},{"path":"src/main/java/me/ruibin/leto/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import java.io.File;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"import java.io.UncheckedIOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.Deadline;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.Event;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.InvalidTaskException;","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.Todo;","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"/**  returns \u003ccode\u003eResults.OK\u003c/code\u003e*/","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"public class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"    private static final String PATH_TO_STORE \u003d \"Leto-Tasks.csv\";","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"     * Read the files, takes in a ArrayList of taskLists and","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"     * populates it. Throws Error if file is invalid.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"     * If file is not found, will create one by default.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"    public static void readFile() {","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(PATH_TO_STORE));","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"            Ui.letoSpeak(\"We found an existing file, will attempt to import it to the list\\nGive me a while\");","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"            File f \u003d new File(PATH_TO_STORE);","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"            String absPath \u003d f.getAbsolutePath();","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"            Ui.shortSay(\"File path: \" + absPath);","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"            Stream\u003cString\u003e s \u003d br.lines();","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"camille-readbean"},"content":"            List\u003cString\u003e l \u003d s.collect(Collectors.toList());","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"camille-readbean"},"content":"            for (String entry : l) {","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"camille-readbean"},"content":"                readEntry(entry);","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"camille-readbean"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"camille-readbean"},"content":"            Ui.shortSay(\"Import completed\");","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"camille-readbean"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"camille-readbean"},"content":"            Ui.letoSpeak(\"We did not find an existing file containing tasks\"","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"camille-readbean"},"content":"                    + \"\\n  We will carry on without a blank list\");","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"camille-readbean"},"content":"        } catch (UncheckedIOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"camille-readbean"},"content":"            Ui.letoSpeak(\"Blast! Ran into error while reading the file.\\n\"","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"camille-readbean"},"content":"                    + \"We will proceed with an empty list.\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"camille-readbean"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"camille-readbean"},"content":"            Ui.letoSpeak(\"File might be corrupted\\n\"","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"camille-readbean"},"content":"                    + \"Full error report below: \" + e);","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"camille-readbean"},"content":"     * Read an entry from the file into a Task and add it to the list.","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"camille-readbean"},"content":"     * Throws Error if entry is invalid.","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"camille-readbean"},"content":"     * If file is not found, will create one by default.","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"camille-readbean"},"content":"     * @throws InvalidTaskException entry cannot be parsed.","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"camille-readbean"},"content":"    private static void readEntry(String entry) throws InvalidTaskException {","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"camille-readbean"},"content":"        String[] parts \u003d entry.split(\",\");","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"camille-readbean"},"content":"        switch (parts[0]) {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"camille-readbean"},"content":"        case \"T\":","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"camille-readbean"},"content":"            TaskList.addTaskToList(Todo.todoFromCsv(entry));","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"camille-readbean"},"content":"            Ui.shortSay(\"Todo added\");","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"camille-readbean"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"camille-readbean"},"content":"        case \"D\":","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"camille-readbean"},"content":"            TaskList.addTaskToList(Deadline.deadlineFromCsv(entry));","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"camille-readbean"},"content":"            Ui.shortSay(\"Deadline added\");","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"camille-readbean"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"camille-readbean"},"content":"        case \"E\":","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"camille-readbean"},"content":"            TaskList.addTaskToList(Event.eventFromCsv(entry));","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"camille-readbean"},"content":"            Ui.shortSay(\"Event added\");","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"camille-readbean"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"camille-readbean"},"content":"        default:","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"camille-readbean"},"content":"            throw new InvalidTaskException(\"Bad command for creating new entry\");","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"camille-readbean"},"content":"     * Write the current task lists to a csv file.","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"camille-readbean"},"content":"    public static void writeFile() {","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"camille-readbean"},"content":"        int saved \u003d 0;","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"camille-readbean"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(PATH_TO_STORE));","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"camille-readbean"},"content":"            Ui.letoSpeak(\"Saving tasks\");","lastModifiedDate":"2024-02-05"},{"lineNumber":92,"author":{"gitId":"camille-readbean"},"content":"            for (Task t : TaskList.getTasks()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"camille-readbean"},"content":"                writeTask(bw, t);","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"camille-readbean"},"content":"                saved++;","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"camille-readbean"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"camille-readbean"},"content":"            bw.flush();","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"camille-readbean"},"content":"            bw.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"camille-readbean"},"content":"            Ui.shortSay(\"Saving completed: \" + saved + \" tasks saved\");","lastModifiedDate":"2024-02-05"},{"lineNumber":99,"author":{"gitId":"camille-readbean"},"content":"            File f \u003d new File(PATH_TO_STORE);","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"camille-readbean"},"content":"            String absPath \u003d f.getAbsolutePath();","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"camille-readbean"},"content":"            Ui.shortSay(\"File path: \" + absPath);","lastModifiedDate":"2024-02-05"},{"lineNumber":102,"author":{"gitId":"camille-readbean"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"camille-readbean"},"content":"            Ui.letoSpeak(\"Blast! Ran into error while writing the file.\\n\"","lastModifiedDate":"2024-02-05"},{"lineNumber":104,"author":{"gitId":"camille-readbean"},"content":"                    + \"Saved \" + saved + \" tasks in the list.\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":109,"author":{"gitId":"camille-readbean"},"content":"     * Helper method for writing an individual task to BufferedWriter.","lastModifiedDate":"2024-02-08"},{"lineNumber":110,"author":{"gitId":"camille-readbean"},"content":"     * Used within WriteFile.","lastModifiedDate":"2024-02-08"},{"lineNumber":111,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":112,"author":{"gitId":"camille-readbean"},"content":"     * @param bw BufferedWriter for the csv file.","lastModifiedDate":"2024-02-08"},{"lineNumber":113,"author":{"gitId":"camille-readbean"},"content":"     * @param t Task to write.","lastModifiedDate":"2024-02-08"},{"lineNumber":114,"author":{"gitId":"camille-readbean"},"content":"     * @throws IOException Pass up possible IOException from bw write.","lastModifiedDate":"2024-02-08"},{"lineNumber":115,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":116,"author":{"gitId":"camille-readbean"},"content":"    private static void writeTask(BufferedWriter bw, Task t) throws IOException {","lastModifiedDate":"2024-02-07"},{"lineNumber":117,"author":{"gitId":"camille-readbean"},"content":"        bw.write(t.toCsvString() + \"\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":118,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"camille-readbean":119}},{"path":"src/main/java/me/ruibin/leto/tasklist/BadTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.tasklist;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"public class BadTaskIndexException extends InvalidTaskException {","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"     * Constructor for BadTaskIndexException to tell range that the index they entered","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"     * should fall under.","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"     * Also give an appropriate help or what to do message.","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"     * @param CurrentIndex current max length of task list.","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"    public BadTaskIndexException(int currentIndex) {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"        super(","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"                \"Bad task index number, should be a integer more than 0 and less than: \"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"                        + (currentIndex + 1) + \" see /list for all the tasks\");","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"camille-readbean":16}},{"path":"src/main/java/me/ruibin/leto/tasklist/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.tasklist;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"/** A type of Task with a deadline LocalDate field. */","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"    private LocalDate deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"    private Deadline(Boolean completed, String taskString, LocalDate deadline) {","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"        // Call to \u0027super()\u0027 must be first statement in constructor body","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"        super(completed, taskString);","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"     * Read user input and generate a new instance of Deadline.","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"     * @param input Command inputs from user.","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"     * @return A new instance of Deadline.","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"     * @throws InvalidTaskException If input do not fit valid command format.","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"    public static Deadline deadlineFromCommand(String input) throws InvalidTaskException {","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"        String regex \u003d \"(?i)deadline ([^,]+) /by (\\\\d{4}-\\\\d{2}-\\\\d{2}) *\";","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"        Matcher matcher \u003d Pattern.compile(regex).matcher(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"            throw new InvalidTaskException(\"deadline \u003cdescription\u003e /by \u003cdate\u003e,\"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"                    + \" \u003cdate\u003e should be in the format YYYY-MM-DD.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"        LocalDate deadline \u003d LocalDate.parse(matcher.group(2).trim());","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"        return new Deadline(false, matcher.group(1).trim(), deadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"    private String remainingDaysMessage() {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"        long remainingDays \u003d ChronoUnit.DAYS.between(LocalDate.now(), this.deadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"        if (remainingDays \u003d\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"camille-readbean"},"content":"            return \"due today\";","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"camille-readbean"},"content":"        } else if (remainingDays \u003c 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"camille-readbean"},"content":"            return Math.abs(remainingDays) + \" days past deadline\";","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"camille-readbean"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"camille-readbean"},"content":"            return remainingDays + \" days remaining\";","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"camille-readbean"},"content":"     * Create a Deadline task from csv format, Type,Completed,Task,By,From,To.","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"camille-readbean"},"content":"     * @param entry text string containing the row in the csv","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"camille-readbean"},"content":"     * @return a Deadline task","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"camille-readbean"},"content":"    public static Deadline deadlineFromCsv(String entry) throws InvalidTaskException {","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"camille-readbean"},"content":"        String regex \u003d \"([DTE]),([YN]),([^,]*),([^,]*),([^,]*),([^,]*)(\\\\n?)\";","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"camille-readbean"},"content":"        Matcher matcher \u003d Pattern.compile(regex).matcher(entry.trim());","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"camille-readbean"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"camille-readbean"},"content":"            throw new InvalidTaskException(\"Cannot match \" + entry + \" with regex\");","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"camille-readbean"},"content":"        Boolean completed \u003d matcher.group(2).equals(\"Y\");","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"camille-readbean"},"content":"        String message \u003d matcher.group(3);","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"camille-readbean"},"content":"            LocalDate deadline \u003d LocalDate.parse(matcher.group(4));","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"camille-readbean"},"content":"            return new Deadline(completed, message, deadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"camille-readbean"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"camille-readbean"},"content":"            throw new InvalidTaskException(\"By field, [\" + matcher.group(4) + \"] is invalid!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"camille-readbean"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"camille-readbean"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.deadline.toString() + \")\"","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"camille-readbean"},"content":"                + \" \" + this.remainingDaysMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"camille-readbean"},"content":"     * Returns the object as a row in a csv table according to format:\u003cbr\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"camille-readbean"},"content":"     * \u003ccode\u003eType,Completed,Task,By,From,To\u003c/code\u003e.","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"camille-readbean"},"content":"     * @return String in csv format","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"camille-readbean"},"content":"    public String toCsvString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"camille-readbean"},"content":"        return \"D,\" + super.toCsvString() + \",\" + this.deadline.toString() + \",,\";","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"camille-readbean":85}},{"path":"src/main/java/me/ruibin/leto/tasklist/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.tasklist;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"/** A type of Task with LocalDate fields specifying from date and to date. */","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"    private LocalDate from;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"    private LocalDate to;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"    private Event(Boolean completed, String taskString, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"        // Call to \u0027super()\u0027 must be first statement in constructor body","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"        super(completed, taskString);","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"    private String eventDaysMessage() {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"        long daysToStart \u003d ChronoUnit.DAYS.between(LocalDate.now(), this.from);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"        long daysToEnd \u003d ChronoUnit.DAYS.between(LocalDate.now(), this.to);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"        if (daysToStart \u003e 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"            return Math.abs(daysToStart) + \" days to the event\";","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"        } else if (daysToEnd \u003c 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"            return \"ended \" + Math.abs(daysToEnd) + \" days ago\";","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"            return daysToEnd + \" days remaining\";","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"     * Create a new instance of Event from user command.","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"     * @param input Command inputs from user.","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"     * @return A new instance of Event.","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"     * @throws InvalidTaskException If input is not a valid event command.","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"    public static Event eventFromCommand(String input) throws InvalidTaskException {","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"camille-readbean"},"content":"        String regex \u003d \"(?i)event ([^,]+) /from (\\\\d{4}-\\\\d{2}-\\\\d{2}) /to (\\\\d{4}-\\\\d{2}-\\\\d{2}) *\";","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"camille-readbean"},"content":"        Matcher matcher \u003d Pattern.compile(regex).matcher(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"camille-readbean"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"camille-readbean"},"content":"            throw new EventInvalidCmdException();","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"camille-readbean"},"content":"        String taskMessage \u003d matcher.group(1).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"camille-readbean"},"content":"        LocalDate from \u003d LocalDate.parse(matcher.group(2).trim());","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"camille-readbean"},"content":"        LocalDate to \u003d LocalDate.parse(matcher.group(3).trim());","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"camille-readbean"},"content":"        return new Event(false, taskMessage, from, to);","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"camille-readbean"},"content":"     * Create an Event task from csv format:\u003cbr\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"camille-readbean"},"content":"     * \u003ccode\u003eType,Completed,Task,By,From,To\u003c/code\u003e.","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"camille-readbean"},"content":"     * @param entry text string containing the row in the csv","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"camille-readbean"},"content":"     * @return an Event task","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"camille-readbean"},"content":"    public static Event eventFromCsv(String entry) throws InvalidTaskException {","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"camille-readbean"},"content":"        String regex \u003d \"([DTE]),([YN]),([^,]*),([^,]*),(\\\\d{4}-\\\\d{2}-\\\\d{2}),(\\\\d{4}-\\\\d{2}-\\\\d{2})(\\\\n?)\";","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"camille-readbean"},"content":"        Matcher matcher \u003d Pattern.compile(regex).matcher(entry);","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"camille-readbean"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"camille-readbean"},"content":"            throw new InvalidTaskException(\"Cannot match \" + entry + \" with regex\");","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"camille-readbean"},"content":"        Boolean completed \u003d matcher.group(2).equals(\"Y\");","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"camille-readbean"},"content":"        String message \u003d matcher.group(3);","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"camille-readbean"},"content":"        LocalDate from \u003d LocalDate.parse(matcher.group(5));","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"camille-readbean"},"content":"        LocalDate to \u003d LocalDate.parse(matcher.group(6));","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"camille-readbean"},"content":"        return new Event(completed, message, from, to);","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"camille-readbean"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"camille-readbean"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\"","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"camille-readbean"},"content":"                + \" \" + this.eventDaysMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"camille-readbean"},"content":"     * Returns the object as a row in a csv table according to format:\u003cbr\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"camille-readbean"},"content":"     * \u003ccode\u003eType,Completed,Task,By,From,To\u003c/code\u003e.","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"camille-readbean"},"content":"     * @return String in csv format","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"camille-readbean"},"content":"    public String toCsvString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"camille-readbean"},"content":"        return \"E,\" + super.toCsvString() + \",,\" + this.from + \",\" + this.to;","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"camille-readbean":86}},{"path":"src/main/java/me/ruibin/leto/tasklist/EventInvalidCmdException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.tasklist;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"/** Exception for entering an invalid command for creating Event tasks. */","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"public class EventInvalidCmdException extends InvalidTaskException {","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"    /** Further help message specifying how to correctly enter a command for Event. */","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"    public EventInvalidCmdException() {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"        super(\"event command should be in the format:\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"                + \"  event \u003cdescription\u003e /from \u003cdate\u003e /to \u003cdate\u003e\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"                + \"    \u003cdate\u003e should be in the format YYYY-MM-DD.\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"                + \"    Note: NO commas are allowed in the command\");","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"camille-readbean":12}},{"path":"src/main/java/me/ruibin/leto/tasklist/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.tasklist;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.ui.Ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"/** Exception for invalid input for a Task */","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"public class InvalidTaskException extends Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"    public InvalidTaskException(String message) {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"        super(message);","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"    /** Print the error message according using Ui.letoSpeak. */","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"    public void printException() {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"        Ui.letoSpeak(\"We have a problem! \" + this.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"camille-readbean":15}},{"path":"src/main/java/me/ruibin/leto/tasklist/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.tasklist;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"/** Class representing a task being keep tracked of by Leto. */","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"    private boolean completed;","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"    private String message;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"     * Constructor for task allowing the specification on whether it is completed","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"     * and the description.","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"     * @param completed Whether the task is completed.","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"     * @param message Description of the task.","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"    public Task(Boolean completed, String message) {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"        this.completed \u003d completed;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"        this.message \u003d message;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"        return completed;","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"    public void markCompleted() {","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"        this.completed \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"    public void markUncompleted() {","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"        this.completed \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"        return \"[\" + (isCompleted() ? \"X\" : \" \") + \"] \" + this.message;","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"     * Returns the object as a string formatted as a row in a csv table according to format","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"     * Completed,Task","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"camille-readbean"},"content":"     * @return String in csv format","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"camille-readbean"},"content":"    public String toCsvString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"camille-readbean"},"content":"        return (isCompleted() ? \"Y\" : \"N\") + \",\" + this.message;","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"camille-readbean":47}},{"path":"src/main/java/me/ruibin/leto/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.tasklist;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"/** Class representing the list of tasks in Leto. */","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"public class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"    private static final ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"    public TaskList() {}","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"    /** Static method to initialise the task list from csv file. */","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"    public static void initFromFile() {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"        Storage.readFile();","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"    /** Save task list to csv file. */","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"    public static void saveTasks() {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"        Storage.writeFile();","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"     * Provides a way to add a task to task list.","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"     * For example in Storage class readEntry.","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"     * */","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"    public static void addTaskToList(Task t) {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"        list.add(t);","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"    /** In charge of reading inputs and adding the corresponding task to the list */","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"    public static void addToList(String inputs) {","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"            Task t \u003d null;","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"            String typeOfTask \u003d inputs.split(\" \")[0];","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"            switch (typeOfTask.toLowerCase()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"camille-readbean"},"content":"            case \"event\":","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"camille-readbean"},"content":"                t \u003d Event.eventFromCommand(inputs);","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"camille-readbean"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"camille-readbean"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"camille-readbean"},"content":"                t \u003d Deadline.deadlineFromCommand(inputs);","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"camille-readbean"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"camille-readbean"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"camille-readbean"},"content":"                t \u003d Todo.todoFromCmd(inputs);","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"camille-readbean"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"camille-readbean"},"content":"            default:","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"camille-readbean"},"content":"                throw new InvalidTaskException(\"This task does not fit known tasks (event, deadline, todo)\");","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"camille-readbean"},"content":"            } // end switch for type of task","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"camille-readbean"},"content":"            TaskList.list.add(t);","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"camille-readbean"},"content":"            Ui.letoSpeak(\"Task added, \" + t","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"camille-readbean"},"content":"                    + \"\\n  \u003e You have \" + TaskList.list.size() + \" tasks.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"camille-readbean"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"camille-readbean"},"content":"            e.printException();","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"camille-readbean"},"content":"     * From user input mark the task specified as completed.","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"camille-readbean"},"content":"     * @param inputs Command from the user.","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"camille-readbean"},"content":"    public static void markTaskCompleted(String inputs) {","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"camille-readbean"},"content":"        Task temp;","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"camille-readbean"},"content":"            int index \u003d getIndexFromInput(inputs);","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"camille-readbean"},"content":"            temp \u003d TaskList.list.get(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"camille-readbean"},"content":"            if (temp \u003d\u003d null) {","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"camille-readbean"},"content":"                // should never happen","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"camille-readbean"},"content":"                throw new InvalidTaskException(\"WARNING Task is null, try creating a task first!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"camille-readbean"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":74,"author":{"gitId":"camille-readbean"},"content":"            if (temp.isCompleted()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":75,"author":{"gitId":"camille-readbean"},"content":"                throw new InvalidTaskException(\"Task already completed\");","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"camille-readbean"},"content":"            } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":77,"author":{"gitId":"camille-readbean"},"content":"                temp.markCompleted();","lastModifiedDate":"2024-01-23"},{"lineNumber":78,"author":{"gitId":"camille-readbean"},"content":"                Ui.letoSpeak(\"Task marked as completed! Congratulations\");","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"camille-readbean"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"camille-readbean"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"camille-readbean"},"content":"            e.printException();","lastModifiedDate":"2024-01-23"},{"lineNumber":82,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":83,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":84,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":85,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"camille-readbean"},"content":"     * From user input mark the task specified as uncompleted.","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"camille-readbean"},"content":"     * @param inputs Command from the user.","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"camille-readbean"},"content":"    public static void markTaskUncompleted(String inputs) {","lastModifiedDate":"2024-01-23"},{"lineNumber":91,"author":{"gitId":"camille-readbean"},"content":"        Task temp;","lastModifiedDate":"2024-01-23"},{"lineNumber":92,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":93,"author":{"gitId":"camille-readbean"},"content":"            int index \u003d getIndexFromInput(inputs);","lastModifiedDate":"2024-01-23"},{"lineNumber":94,"author":{"gitId":"camille-readbean"},"content":"            temp \u003d TaskList.list.get(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"camille-readbean"},"content":"            if (temp \u003d\u003d null) {","lastModifiedDate":"2024-01-23"},{"lineNumber":96,"author":{"gitId":"camille-readbean"},"content":"                // should not happen btw","lastModifiedDate":"2024-01-23"},{"lineNumber":97,"author":{"gitId":"camille-readbean"},"content":"                throw new InvalidTaskException(\"WARNING Task is null, try creating a task first!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"camille-readbean"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":99,"author":{"gitId":"camille-readbean"},"content":"            if (!temp.isCompleted()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":100,"author":{"gitId":"camille-readbean"},"content":"                Ui.letoSpeak(\"Task is already not completed :\u003c \");","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"camille-readbean"},"content":"            } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":102,"author":{"gitId":"camille-readbean"},"content":"                temp.markUncompleted();","lastModifiedDate":"2024-01-23"},{"lineNumber":103,"author":{"gitId":"camille-readbean"},"content":"                Ui.letoSpeak(\"Task marked as uncompleted! Things happen, don\u0027t worry we account for it\");","lastModifiedDate":"2024-02-05"},{"lineNumber":104,"author":{"gitId":"camille-readbean"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":105,"author":{"gitId":"camille-readbean"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"camille-readbean"},"content":"            e.printException();","lastModifiedDate":"2024-01-23"},{"lineNumber":107,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":108,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":109,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":110,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":111,"author":{"gitId":"camille-readbean"},"content":"     * From user input delete the task specified.","lastModifiedDate":"2024-02-08"},{"lineNumber":112,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":113,"author":{"gitId":"camille-readbean"},"content":"     * @param inputs Command from the user.","lastModifiedDate":"2024-02-08"},{"lineNumber":114,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":115,"author":{"gitId":"camille-readbean"},"content":"    public static void deleteTask(String inputs) {","lastModifiedDate":"2024-01-23"},{"lineNumber":116,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":117,"author":{"gitId":"camille-readbean"},"content":"            int index \u003d getIndexFromInput(inputs);","lastModifiedDate":"2024-01-23"},{"lineNumber":118,"author":{"gitId":"camille-readbean"},"content":"            Task t \u003d TaskList.list.get(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"camille-readbean"},"content":"            TaskList.list.remove(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"camille-readbean"},"content":"            Ui.letoSpeak(\"Task deleted, [\" + t.toString()","lastModifiedDate":"2024-02-07"},{"lineNumber":121,"author":{"gitId":"camille-readbean"},"content":"                    + \"]\\n  \u003e You have \" + TaskList.list.size() + \" tasks.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":122,"author":{"gitId":"camille-readbean"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"camille-readbean"},"content":"            e.printException();","lastModifiedDate":"2024-01-23"},{"lineNumber":124,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":125,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":126,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":127,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":128,"author":{"gitId":"camille-readbean"},"content":"     * Helper method to get index of the task from user command.","lastModifiedDate":"2024-02-08"},{"lineNumber":129,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":130,"author":{"gitId":"camille-readbean"},"content":"     * @param input Command from the user.","lastModifiedDate":"2024-02-08"},{"lineNumber":131,"author":{"gitId":"camille-readbean"},"content":"     * @throws InvalidTaskException Invalid task index or parsing issue.","lastModifiedDate":"2024-02-08"},{"lineNumber":132,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":133,"author":{"gitId":"camille-readbean"},"content":"    private static int getIndexFromInput(String input) throws InvalidTaskException {","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":135,"author":{"gitId":"camille-readbean"},"content":"            String[] inputs \u003d input.split(\" \");","lastModifiedDate":"2024-01-23"},{"lineNumber":136,"author":{"gitId":"camille-readbean"},"content":"            if (inputs.length !\u003d 2) {","lastModifiedDate":"2024-01-23"},{"lineNumber":137,"author":{"gitId":"camille-readbean"},"content":"                throw new InvalidTaskException(\"You need to enter a task index number\");","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"camille-readbean"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":139,"author":{"gitId":"camille-readbean"},"content":"            int i \u003d Integer.parseInt(inputs[1]) - 1;","lastModifiedDate":"2024-01-23"},{"lineNumber":140,"author":{"gitId":"camille-readbean"},"content":"            if (TaskList.list.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"camille-readbean"},"content":"                throw new InvalidTaskException(\"Good news at least, you have no task!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"camille-readbean"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":143,"author":{"gitId":"camille-readbean"},"content":"            if (i \u003e\u003d TaskList.list.size() || i \u003c 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"camille-readbean"},"content":"                throw new BadTaskIndexException(TaskList.list.size());","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"camille-readbean"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":146,"author":{"gitId":"camille-readbean"},"content":"            return i;","lastModifiedDate":"2024-01-23"},{"lineNumber":147,"author":{"gitId":"camille-readbean"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":148,"author":{"gitId":"camille-readbean"},"content":"            throw new InvalidTaskException(\"We cannot get task index from your input, \"","lastModifiedDate":"2024-02-07"},{"lineNumber":149,"author":{"gitId":"camille-readbean"},"content":"                    + \"it should be an integer, `(un)mark _int_`\");","lastModifiedDate":"2024-02-07"},{"lineNumber":150,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":151,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":152,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":153,"author":{"gitId":"camille-readbean"},"content":"    /** Convert tasks in the list to an output string and then call Ui print. */","lastModifiedDate":"2024-02-08"},{"lineNumber":154,"author":{"gitId":"camille-readbean"},"content":"    public static void printList() {","lastModifiedDate":"2024-01-23"},{"lineNumber":155,"author":{"gitId":"camille-readbean"},"content":"        StringBuilder toPrint \u003d new StringBuilder(\" \u003c Task List \u003e\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"camille-readbean"},"content":"        for (int i \u003d 0; i \u003c TaskList.list.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":157,"author":{"gitId":"camille-readbean"},"content":"            toPrint.append(\" \").append(i + 1).append(\": \")","lastModifiedDate":"2024-02-01"},{"lineNumber":158,"author":{"gitId":"camille-readbean"},"content":"                    .append(TaskList.list.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":160,"author":{"gitId":"camille-readbean"},"content":"        toPrint.append(\"\\n \u003c End of Task List \u003e\");","lastModifiedDate":"2024-02-01"},{"lineNumber":161,"author":{"gitId":"camille-readbean"},"content":"        Ui.letoSpeak(toPrint.toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":162,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":163,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":164,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":165,"author":{"gitId":"camille-readbean"},"content":"     * Get tasks as an unmodifiable list when there is a need to iterate through it.","lastModifiedDate":"2024-02-08"},{"lineNumber":166,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":167,"author":{"gitId":"camille-readbean"},"content":"     * @return A unmodifiable List of Task.","lastModifiedDate":"2024-02-08"},{"lineNumber":168,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":169,"author":{"gitId":"camille-readbean"},"content":"    public static List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-01"},{"lineNumber":170,"author":{"gitId":"camille-readbean"},"content":"        return Collections.unmodifiableList(list);","lastModifiedDate":"2024-02-01"},{"lineNumber":171,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":172,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"camille-readbean":172}},{"path":"src/main/java/me/ruibin/leto/tasklist/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.tasklist;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"/** A type of Task representing a Todo */","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"    private Todo(Boolean completed, String message) {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"        super(completed, message);","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"     * Create a instance of Todo from user command.","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"     * @param input Command entered by the user, the entire line.","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"     * @return a new Todo object.","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"     * @throws TodoInvalidCmdException when input command is invalid.","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"    public static Todo todoFromCmd(String input) throws TodoInvalidCmdException {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"        String regex \u003d \"(?i)todo ([^,]+)\";","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"        Matcher matcher \u003d Pattern.compile(regex).matcher(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"            throw new TodoInvalidCmdException();","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"        String message \u003d matcher.group(1);","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"        return new Todo(false, message);","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"     * Create an Todo task from csv format:\u003cbr\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"     * \u003ccode\u003eType,Completed,Task,By,From,To\u003c/code\u003e.","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"     * @param entry text string containing the row in the csv.","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"     * @return an Event task.","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"    public static Todo todoFromCsv(String entry) throws InvalidTaskException {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"        String regex \u003d \"([DTE]),([YN]),([^,]*),([^,]*),([^,]*),([^,]*)(\\\\n?)\";","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"        Matcher matcher \u003d Pattern.compile(regex).matcher(entry);","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"camille-readbean"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"camille-readbean"},"content":"            throw new InvalidTaskException(\"Cannot match \" + entry + \" with regex\");","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"camille-readbean"},"content":"        Boolean completed \u003d matcher.group(2).equals(\"Y\");","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"camille-readbean"},"content":"        String message \u003d matcher.group(3);","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"camille-readbean"},"content":"        return new Todo(completed, message);","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"camille-readbean"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"camille-readbean"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"camille-readbean"},"content":"     * Returns the object as a row in a csv table according to format: \u003cbr\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"camille-readbean"},"content":"     * \u003ccode\u003eType,Completed,Task,By,From,To\u003c/code\u003e.","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"camille-readbean"},"content":"     * @return String in csv format","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"camille-readbean"},"content":"    public String toCsvString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"camille-readbean"},"content":"        return \"T,\" + super.toCsvString() + \",,,\";","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"camille-readbean":63}},{"path":"src/main/java/me/ruibin/leto/tasklist/TodoInvalidCmdException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.tasklist;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"/** ** Exception for entering an invalid command for creating Todo tasks. */","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"public class TodoInvalidCmdException extends InvalidTaskException {","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"    public TodoInvalidCmdException() {","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"        super(\"todo command should be in the format:\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"                + \"  todo \u003cdescription\u003e\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"                + \"    Note: NO commas are allowed in the command\");","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"camille-readbean":10}},{"path":"src/main/java/me/ruibin/leto/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"/** Wraps output with custom formatting before sending to stdout using PrintWriter. */","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"public class Ui {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"    private static final PrintWriter pw \u003d new PrintWriter(System.out);","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"     * Prints message in multiple line. Auto indenting on linebreak.","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"     * @param message Message to print.","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"    public static void letoSpeak(String message) {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"        pw.write(\"  \u003c\u003c Duke Leto \u003e\u003e\\n  \u003e \" + message.replaceAll(\"\\n\", \"\\n  \u003e \"));","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"        pw.println();","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"        pw.print(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"        pw.flush();","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"     * Prints message ine a single line.","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"     * @param message To print.","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"    public static void shortSay(String message) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"        pw.write(\"  \u003c\u003c Duke Leto \u003e\u003e : \" + message + \"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"        pw.flush();","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"    /** Prints the logo. */","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"    public static void letoLogo() {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|   Leto\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"        pw.write(\"Good day from\\n\" + logo);","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"        pw.print(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"camille-readbean"},"content":"        pw.flush();","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"camille-readbean"},"content":"    /** Print the standard help message. */","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"camille-readbean"},"content":"    public static void letoHelp() {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"camille-readbean"},"content":"        letoSpeak(\"Supported commands:\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"camille-readbean"},"content":"            + \"list     -  list all tasks\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"camille-readbean"},"content":"            + \"mark     -  mark task as done\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"camille-readbean"},"content":"            + \"              usage: mark \u003cindex\u003e\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"camille-readbean"},"content":"            + \"unmark   -  unmark task as done, :(\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"camille-readbean"},"content":"            + \"              usage: unmark \u003cindex\u003e\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"camille-readbean"},"content":"            + \"todo     -  create a task of type todo \\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"camille-readbean"},"content":"            + \"              usage: todo \u003cdetails\u003e\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"camille-readbean"},"content":"            + \"deadline -  create a task of type deadline\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"camille-readbean"},"content":"            + \"              usage: deadline \u003cdescription\u003e /by \u003cdate\u003e,\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"camille-readbean"},"content":"            + \"              \u003cdate\u003e should be in the format YYYY-MM-DD. \\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"camille-readbean"},"content":"            + \"event    -  create a task of type event    \\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"camille-readbean"},"content":"            + \"               usage: event \u003cdetails\u003e /from \u003cstart_time YYYY-MM-DD\u003e /to \u003cend_time YYYY-MM-DD\u003e\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"camille-readbean"},"content":"            + \"save     -  save tasks to persistent storage\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"camille-readbean"},"content":"            + \"find     -  find a task by keyword, searches within their entire CSV entry\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"camille-readbean"},"content":"            + \"                usage: event \u003ckeyword\u003e\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"camille-readbean"},"content":"            + \"                case sensitive\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"camille-readbean"},"content":"            + \"bye      -  exit\");","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"camille-readbean":65}},{"path":"src/test/java/me/ruibin/leto/tasklist/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.tasklist;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"    /** Test creating Deadline from valid command by date 1 day ago. */","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"    public void deadlineFromCommand_validCommand_success() {","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"        LocalDate deadline \u003d LocalDate.now().minusDays(1);","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"        String command \u003d \"DEadLine SUBMIT.Paper #CS320  /by \" + deadline.toString();","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"        String correctOutput \u003d \"[D][ ] SUBMIT.Paper #CS320 (by: \"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"                + deadline.toString() + \") 1 days past deadline\";","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"            Deadline produced \u003d Deadline.deadlineFromCommand(command);","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"            assertEquals(produced.toString(), correctOutput);","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"            fail(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"    /** Test creating Deadline from invalid command with bad by date. */","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"    public void deadlineFromCommand_commandWithBadFormat_failure() {","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"        LocalDate deadline \u003d LocalDate.now().minusDays(1);","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"        String command \u003d \"DEadLine SUBMIT.Paper #CS320  /by \"","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"                + deadline.format(DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"        String errorMessage \u003d \"deadline \u003cdescription\u003e /by \u003cdate\u003e, \u003cdate\u003e should be in the format YYYY-MM-DD.\";","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"            Deadline produced \u003d Deadline.deadlineFromCommand(command);","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"            assertEquals(errorMessage, e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"camille-readbean"},"content":"    /** Test creating Deadline from valid CSV. */","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"camille-readbean"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"camille-readbean"},"content":"    public void deadlineFromCsv_validEntry_success() {","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"camille-readbean"},"content":"        LocalDate deadline \u003d LocalDate.now().minusDays(1);","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"camille-readbean"},"content":"        String entry \u003d \"D,N,SUBMIT.Paper #CS320,\" + deadline.toString() + \",,\";","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"camille-readbean"},"content":"        String correctOutput \u003d \"[D][ ] SUBMIT.Paper #CS320 (by: \"","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"camille-readbean"},"content":"                + deadline.toString() + \") 1 days past deadline\";","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"camille-readbean"},"content":"            Deadline produced \u003d Deadline.deadlineFromCsv(entry);","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"camille-readbean"},"content":"            assertEquals(produced.toString(), correctOutput);","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"camille-readbean"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"camille-readbean"},"content":"            fail(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"camille-readbean"},"content":"    /** Test creating Deadline from invalid CSV with empty by date. */","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"camille-readbean"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"camille-readbean"},"content":"    public void deadlineFromCsv_invalidEmptyDatesEntry_failure() {","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"camille-readbean"},"content":"        String entry \u003d \"D,N,SUBMIT.Paper #CS320,XXX,,\";","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"camille-readbean"},"content":"        String errorMessage \u003d \"By field, [XXX] is invalid!\";","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"camille-readbean"},"content":"            Deadline produced \u003d Deadline.deadlineFromCsv(entry);","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"camille-readbean"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"camille-readbean"},"content":"            assertEquals(errorMessage, e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"camille-readbean":67}},{"path":"src/test/java/me/ruibin/leto/tasklist/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.tasklist;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"import java.text.MessageFormat;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"public class EventTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"    /** Test creating Event from valid command with 10 days long 10 days from now. */","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"    public void eventFromCommand_validCommand_success() {","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"        LocalDate startDate \u003d LocalDate.now().plusDays(10);","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"        LocalDate endDate \u003d LocalDate.now().plusDays(20);","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"        StringBuilder correctOuputBuilder \u003d new StringBuilder(\"[E][ ] H4(K1nG  cOnv@nt!0n (from: \");","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"        correctOuputBuilder.append(startDate)","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"                .append(\" to: \").append(endDate).append(\") 10 days to the event\");","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"        String correctOutput \u003d correctOuputBuilder.toString();","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"        String command \u003d \"event  H4(K1nG  cOnv@nt!0n   /from \" + startDate + \" /to \" + endDate + \"  \";","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"            Event produced \u003d Event.eventFromCommand(command);","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"            assertEquals(produced.toString(), correctOutput);","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"            fail(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"    /** Test creating Event from invalid command with bad date formats. */","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"    public void eventFromCommand_commandWithBadFormat_failure() {","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"        LocalDate startDate \u003d LocalDate.now().plusDays(10);","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"        LocalDate endDate \u003d LocalDate.now().plusDays(20);","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"        String command \u003d MessageFormat.format(\"event  H4(K1nG  cOnv@nt!0n   /from {0} /to {1}\",","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"                startDate.format(DateTimeFormatter.ofPattern(\"d MMMM yyyy\")),","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"                endDate);","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"camille-readbean"},"content":"            Event produced \u003d Event.eventFromCommand(command);","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"camille-readbean"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"camille-readbean"},"content":"            assertEquals((new EventInvalidCmdException()).getMessage(), e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"camille-readbean"},"content":"    /** Test creating Event from valid csv. */","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"camille-readbean"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"camille-readbean"},"content":"    public void eventFromCsv_validCsvEntry_success() {","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"camille-readbean"},"content":"        LocalDate startDate \u003d LocalDate.now().plusDays(10);","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"camille-readbean"},"content":"        LocalDate endDate \u003d LocalDate.now().plusDays(20);","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"camille-readbean"},"content":"        String entry \u003d MessageFormat.format(\"E,Y,  H4(K1nG  cOnv@nt!0n,,{0},{1}\",","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"camille-readbean"},"content":"                startDate,","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"camille-readbean"},"content":"                endDate);","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"camille-readbean"},"content":"        String pattern \u003d \"[E][X]   H4(K1nG  cOnv@nt!0n (from: {0} to: {1}) 10 days to the event\";","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"camille-readbean"},"content":"        String correctOutput \u003d MessageFormat.format(pattern, startDate, endDate);","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"camille-readbean"},"content":"            Event produced \u003d Event.eventFromCsv(entry);","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"camille-readbean"},"content":"            assertEquals(produced.toString(), correctOutput);","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"camille-readbean"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"camille-readbean"},"content":"            fail(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"camille-readbean"},"content":"    /** Test creating Event from invalid csv with empty dates. */","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"camille-readbean"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"camille-readbean"},"content":"    public void eventFromCsv_badCsvEntry_failure() {","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"camille-readbean"},"content":"        String entry \u003d \"E,N,event  H4(K1nG  cOnv@nt!0n,,,\";","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"camille-readbean"},"content":"            Event produced \u003d Event.eventFromCsv(entry);","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"camille-readbean"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"camille-readbean"},"content":"            String expectedErrorMessage \u003d \"Cannot match \" + entry + \" with regex\";","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"camille-readbean"},"content":"            assertEquals(expectedErrorMessage, e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"camille-readbean":75}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"hi","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"todo Finish level-7","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"deadline Apply grants /by 25 Jan 2024","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"mark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"mark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"unmark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"unmark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"event Dinner /from 7 pm to 9 pm","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"unmark 4","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"yay","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"LIST","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"byee","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"bye","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"camille-readbean":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"java -classpath ..\\bin Leto \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"camille-readbean":1}}]
