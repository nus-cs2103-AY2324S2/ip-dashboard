[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"    protected String deadline;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"        this.type \u003d \"D\";","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"    public String getStatus() {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"        String statusIcon \u003d (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"        return \"[\" + type + \"][\" + statusIcon + \"] \" + description + \" (by: \" + deadline + \")\";","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"    public String toText() {","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"        return super.toText() + \" / \" + deadline;","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"    static public Task fromText(String description, String done, String by) {","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"        Task task \u003d new Deadline(description, by);","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"        task.isDone \u003d done.equals(\"1\");","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"        return task;","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"BryanL2303":24}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"    protected String from;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"    protected String to;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"    public String getStatus() {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"        String statusIcon \u003d (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"        return \"[\" + type + \"][\" + statusIcon + \"] \" + description + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"    public String toText() {","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"        return super.toText() + \" / \" + from + \" / \" + to;","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"    static public Task fromText(String description, String done, String from, String to) {","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"        Task task \u003d new Event(description, from, to);","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"        task.isDone \u003d done.equals(\"1\");","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"        return task;","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"BryanL2303":26}},{"path":"src/main/java/Klee.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import java.io.File;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"public class Klee {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"    enum Instruction {","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"        todo,","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"        deadline,","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"        event,","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"        mark,","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"        unmark,","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"        delete","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"    public static String checkToDo(String input) throws KleeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"        String[] description \u003d input.split(\"todo \");","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"        if (description.length \u003d\u003d 2) return description[1];","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"        else throw new KleeException(\"We should think of a name for the task!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"    public static String[] checkDeadline(String input) throws KleeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"        String[] command \u003d input.split(\"deadline \");","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"        String[] output \u003d new String[2];","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"        if (command.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"            command \u003d command[1].split(\" /by \");","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"            if (command.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"                output[0] \u003d command[0];","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"                output[1] \u003d command[1];","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"                return output;","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"            } else throw new KleeException(\"We should indicate when this task is due with `/by`\");","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"        else throw new KleeException(\"We should think of a name for the task!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"BryanL2303"},"content":"    public static String[] checkEvent(String input) throws KleeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"BryanL2303"},"content":"        String[] command \u003d input.split(\"event \");","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"BryanL2303"},"content":"        String[] output \u003d new String[3];","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"BryanL2303"},"content":"        if (command.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"BryanL2303"},"content":"            command \u003d command[1].split(\" /from \");","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"BryanL2303"},"content":"            if (command.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"BryanL2303"},"content":"                output[0] \u003d command[0];","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"BryanL2303"},"content":"                command \u003d command[1].split(\" /to \");","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"BryanL2303"},"content":"                if (command.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"BryanL2303"},"content":"                    output[1] \u003d command[0];","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"BryanL2303"},"content":"                    output[2] \u003d command[1];","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"BryanL2303"},"content":"                    return output;","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"BryanL2303"},"content":"                } else throw new KleeException(\"We should indicate when this event ends with `/to`\");","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"BryanL2303"},"content":"            } else throw new KleeException(\"We should indicate when this event starts with `/from`\");","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"BryanL2303"},"content":"        } else throw new KleeException(\"We should think of a name for the task!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"BryanL2303"},"content":"    public static void saveData(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"BryanL2303"},"content":"            FileWriter data \u003d new FileWriter(\"data/Klee.txt\");","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"BryanL2303"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"BryanL2303"},"content":"                Task currentTask \u003d tasks.get(i);","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"BryanL2303"},"content":"                String line \u003d currentTask.toText();","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"BryanL2303"},"content":"                data.write(line + \"\\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"BryanL2303"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"BryanL2303"},"content":"            data.close();","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"BryanL2303"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"BryanL2303"},"content":"            System.out.println(\"Klee has run out of ink! I cannot write this down!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":68,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"BryanL2303"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"BryanL2303"},"content":"        //Initialise variables","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"BryanL2303"},"content":"        String divider \u003d \"____________________________________________________________________________\";","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"BryanL2303"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-26"},{"lineNumber":73,"author":{"gitId":"BryanL2303"},"content":"        Scanner getInput \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-26"},{"lineNumber":74,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"BryanL2303"},"content":"        //Create /data directory only if it does not exist","lastModifiedDate":"2024-01-26"},{"lineNumber":76,"author":{"gitId":"BryanL2303"},"content":"        new File(\"data\").mkdirs();","lastModifiedDate":"2024-01-26"},{"lineNumber":77,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":78,"author":{"gitId":"BryanL2303"},"content":"            File data \u003d new File(\"data/Klee.txt\");","lastModifiedDate":"2024-01-26"},{"lineNumber":79,"author":{"gitId":"BryanL2303"},"content":"            if (!data.exists()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":80,"author":{"gitId":"BryanL2303"},"content":"                data.createNewFile();","lastModifiedDate":"2024-01-26"},{"lineNumber":81,"author":{"gitId":"BryanL2303"},"content":"            } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":82,"author":{"gitId":"BryanL2303"},"content":"                Scanner readFile \u003d new Scanner(data);","lastModifiedDate":"2024-01-26"},{"lineNumber":83,"author":{"gitId":"BryanL2303"},"content":"                while (readFile.hasNext()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":84,"author":{"gitId":"BryanL2303"},"content":"                    String read \u003d readFile.nextLine();","lastModifiedDate":"2024-01-26"},{"lineNumber":85,"author":{"gitId":"BryanL2303"},"content":"                    String[] line \u003d read.split(\" / \");","lastModifiedDate":"2024-01-26"},{"lineNumber":86,"author":{"gitId":"BryanL2303"},"content":"                    switch (line[0]) {","lastModifiedDate":"2024-01-26"},{"lineNumber":87,"author":{"gitId":"BryanL2303"},"content":"                    case \"T\":","lastModifiedDate":"2024-01-26"},{"lineNumber":88,"author":{"gitId":"BryanL2303"},"content":"                        tasks.add(ToDo.fromText(line[2], line[1]));","lastModifiedDate":"2024-01-26"},{"lineNumber":89,"author":{"gitId":"BryanL2303"},"content":"                        break;","lastModifiedDate":"2024-01-26"},{"lineNumber":90,"author":{"gitId":"BryanL2303"},"content":"                    case \"D\":","lastModifiedDate":"2024-01-26"},{"lineNumber":91,"author":{"gitId":"BryanL2303"},"content":"                        tasks.add(Deadline.fromText(line[2], line[1], line[3]));","lastModifiedDate":"2024-01-26"},{"lineNumber":92,"author":{"gitId":"BryanL2303"},"content":"                        break;","lastModifiedDate":"2024-01-26"},{"lineNumber":93,"author":{"gitId":"BryanL2303"},"content":"                    case \"E\":","lastModifiedDate":"2024-01-26"},{"lineNumber":94,"author":{"gitId":"BryanL2303"},"content":"                        tasks.add(Event.fromText(line[2], line[1], line[3], line[4]));","lastModifiedDate":"2024-01-26"},{"lineNumber":95,"author":{"gitId":"BryanL2303"},"content":"                        break;","lastModifiedDate":"2024-01-26"},{"lineNumber":96,"author":{"gitId":"BryanL2303"},"content":"                    }","lastModifiedDate":"2024-01-26"},{"lineNumber":97,"author":{"gitId":"BryanL2303"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":98,"author":{"gitId":"BryanL2303"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":99,"author":{"gitId":"BryanL2303"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":100,"author":{"gitId":"BryanL2303"},"content":"            System.out.println(\"Klee could not find the book we wrote on last time... I\u0027m sorry...\");","lastModifiedDate":"2024-01-26"},{"lineNumber":101,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":102,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":103,"author":{"gitId":"BryanL2303"},"content":"        //Greet user","lastModifiedDate":"2024-01-26"},{"lineNumber":104,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-23"},{"lineNumber":105,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(\"Hello! My name is Klee.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":106,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(\"Are you here to break Klee out of solitary confinement?\");","lastModifiedDate":"2024-01-23"},{"lineNumber":107,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-23"},{"lineNumber":108,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":109,"author":{"gitId":"BryanL2303"},"content":"        //Start accepting user inputs","lastModifiedDate":"2024-01-26"},{"lineNumber":110,"author":{"gitId":"BryanL2303"},"content":"        while (true) {","lastModifiedDate":"2024-01-23"},{"lineNumber":111,"author":{"gitId":"BryanL2303"},"content":"            String input \u003d getInput.nextLine();","lastModifiedDate":"2024-01-23"},{"lineNumber":112,"author":{"gitId":"BryanL2303"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":113,"author":{"gitId":"BryanL2303"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":114,"author":{"gitId":"BryanL2303"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":115,"author":{"gitId":"BryanL2303"},"content":"                System.out.println(divider);","lastModifiedDate":"2024-01-23"},{"lineNumber":116,"author":{"gitId":"BryanL2303"},"content":"                System.out.println(\"These are all the things that we have to do today:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":117,"author":{"gitId":"BryanL2303"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-24"},{"lineNumber":118,"author":{"gitId":"BryanL2303"},"content":"                    System.out.println((i+1) + \". \" + tasks.get(i).getStatus());","lastModifiedDate":"2024-01-24"},{"lineNumber":119,"author":{"gitId":"BryanL2303"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":120,"author":{"gitId":"BryanL2303"},"content":"                System.out.println(divider);","lastModifiedDate":"2024-01-23"},{"lineNumber":121,"author":{"gitId":"BryanL2303"},"content":"            } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":122,"author":{"gitId":"BryanL2303"},"content":"                if (input.equals(\"\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":123,"author":{"gitId":"BryanL2303"},"content":"                    System.out.println(divider);","lastModifiedDate":"2024-01-23"},{"lineNumber":124,"author":{"gitId":"BryanL2303"},"content":"                    System.out.println(\"Did you say something? Klee could not hear you over my bombs...\");","lastModifiedDate":"2024-01-24"},{"lineNumber":125,"author":{"gitId":"BryanL2303"},"content":"                    System.out.println(divider);","lastModifiedDate":"2024-01-23"},{"lineNumber":126,"author":{"gitId":"BryanL2303"},"content":"                } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":127,"author":{"gitId":"BryanL2303"},"content":"                    String[] command \u003d input.split(\" \");","lastModifiedDate":"2024-01-23"},{"lineNumber":128,"author":{"gitId":"BryanL2303"},"content":"                    try {","lastModifiedDate":"2024-01-23"},{"lineNumber":129,"author":{"gitId":"BryanL2303"},"content":"                        Instruction instruction \u003d Instruction.valueOf(command[0]);","lastModifiedDate":"2024-01-26"},{"lineNumber":130,"author":{"gitId":"BryanL2303"},"content":"                        switch (instruction) {","lastModifiedDate":"2024-01-26"},{"lineNumber":131,"author":{"gitId":"BryanL2303"},"content":"                        case todo:","lastModifiedDate":"2024-01-26"},{"lineNumber":132,"author":{"gitId":"BryanL2303"},"content":"                            System.out.println(divider);","lastModifiedDate":"2024-01-24"},{"lineNumber":133,"author":{"gitId":"BryanL2303"},"content":"                            try {","lastModifiedDate":"2024-01-24"},{"lineNumber":134,"author":{"gitId":"BryanL2303"},"content":"                                String description \u003d checkToDo(input);","lastModifiedDate":"2024-01-24"},{"lineNumber":135,"author":{"gitId":"BryanL2303"},"content":"                                Task task \u003d new ToDo(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":136,"author":{"gitId":"BryanL2303"},"content":"                                tasks.add(task);","lastModifiedDate":"2024-01-24"},{"lineNumber":137,"author":{"gitId":"BryanL2303"},"content":"                                System.out.println(\"Klee will help you write that down! : \");","lastModifiedDate":"2024-01-24"},{"lineNumber":138,"author":{"gitId":"BryanL2303"},"content":"                                System.out.println(task.getStatus());","lastModifiedDate":"2024-01-24"},{"lineNumber":139,"author":{"gitId":"BryanL2303"},"content":"                                System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":140,"author":{"gitId":"BryanL2303"},"content":"                            } catch (KleeException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":141,"author":{"gitId":"BryanL2303"},"content":"                                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-24"},{"lineNumber":142,"author":{"gitId":"BryanL2303"},"content":"                            }","lastModifiedDate":"2024-01-24"},{"lineNumber":143,"author":{"gitId":"BryanL2303"},"content":"                            System.out.println(divider);","lastModifiedDate":"2024-01-24"},{"lineNumber":144,"author":{"gitId":"BryanL2303"},"content":"                            break;","lastModifiedDate":"2024-01-26"},{"lineNumber":145,"author":{"gitId":"BryanL2303"},"content":"                        case deadline:","lastModifiedDate":"2024-01-26"},{"lineNumber":146,"author":{"gitId":"BryanL2303"},"content":"                            System.out.println(divider);","lastModifiedDate":"2024-01-24"},{"lineNumber":147,"author":{"gitId":"BryanL2303"},"content":"                            try {","lastModifiedDate":"2024-01-24"},{"lineNumber":148,"author":{"gitId":"BryanL2303"},"content":"                                String[] output \u003d checkDeadline(input);","lastModifiedDate":"2024-01-24"},{"lineNumber":149,"author":{"gitId":"BryanL2303"},"content":"                                System.out.println(\"Klee will help you write that down! : \" + output[0]);","lastModifiedDate":"2024-01-24"},{"lineNumber":150,"author":{"gitId":"BryanL2303"},"content":"                                Task task \u003d new Deadline(output[0], output[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":151,"author":{"gitId":"BryanL2303"},"content":"                                tasks.add(task);","lastModifiedDate":"2024-01-24"},{"lineNumber":152,"author":{"gitId":"BryanL2303"},"content":"                                System.out.println(task.getStatus());","lastModifiedDate":"2024-01-24"},{"lineNumber":153,"author":{"gitId":"BryanL2303"},"content":"                                System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":154,"author":{"gitId":"BryanL2303"},"content":"                            } catch (KleeException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":155,"author":{"gitId":"BryanL2303"},"content":"                                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-24"},{"lineNumber":156,"author":{"gitId":"BryanL2303"},"content":"                            }","lastModifiedDate":"2024-01-24"},{"lineNumber":157,"author":{"gitId":"BryanL2303"},"content":"                            System.out.println(divider);","lastModifiedDate":"2024-01-24"},{"lineNumber":158,"author":{"gitId":"BryanL2303"},"content":"                            break;","lastModifiedDate":"2024-01-26"},{"lineNumber":159,"author":{"gitId":"BryanL2303"},"content":"                        case event:","lastModifiedDate":"2024-01-26"},{"lineNumber":160,"author":{"gitId":"BryanL2303"},"content":"                            System.out.println(divider);","lastModifiedDate":"2024-01-23"},{"lineNumber":161,"author":{"gitId":"BryanL2303"},"content":"                            try {","lastModifiedDate":"2024-01-24"},{"lineNumber":162,"author":{"gitId":"BryanL2303"},"content":"                                String[] output \u003d checkEvent(input);","lastModifiedDate":"2024-01-24"},{"lineNumber":163,"author":{"gitId":"BryanL2303"},"content":"                                System.out.println(\"Klee will help you write that down! : \" + output[0]);","lastModifiedDate":"2024-01-24"},{"lineNumber":164,"author":{"gitId":"BryanL2303"},"content":"                                Task task \u003d new Event(output[0], output[1], output[2]);","lastModifiedDate":"2024-01-24"},{"lineNumber":165,"author":{"gitId":"BryanL2303"},"content":"                                tasks.add(task);","lastModifiedDate":"2024-01-24"},{"lineNumber":166,"author":{"gitId":"BryanL2303"},"content":"                                System.out.println(task.getStatus());","lastModifiedDate":"2024-01-24"},{"lineNumber":167,"author":{"gitId":"BryanL2303"},"content":"                                System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":168,"author":{"gitId":"BryanL2303"},"content":"                            } catch (KleeException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":169,"author":{"gitId":"BryanL2303"},"content":"                                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-24"},{"lineNumber":170,"author":{"gitId":"BryanL2303"},"content":"                            }","lastModifiedDate":"2024-01-24"},{"lineNumber":171,"author":{"gitId":"BryanL2303"},"content":"                            System.out.println(divider);","lastModifiedDate":"2024-01-23"},{"lineNumber":172,"author":{"gitId":"BryanL2303"},"content":"                            break;","lastModifiedDate":"2024-01-26"},{"lineNumber":173,"author":{"gitId":"BryanL2303"},"content":"                        case mark:","lastModifiedDate":"2024-01-26"},{"lineNumber":174,"author":{"gitId":"BryanL2303"},"content":"                            try{","lastModifiedDate":"2024-01-26"},{"lineNumber":175,"author":{"gitId":"BryanL2303"},"content":"                                Integer index \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2024-01-26"},{"lineNumber":176,"author":{"gitId":"BryanL2303"},"content":"                                tasks.get(index).mark();","lastModifiedDate":"2024-01-26"},{"lineNumber":177,"author":{"gitId":"BryanL2303"},"content":"                                System.out.println(divider);","lastModifiedDate":"2024-01-26"},{"lineNumber":178,"author":{"gitId":"BryanL2303"},"content":"                                System.out.println(\"Great! Klee will put a big cross on this box:\");","lastModifiedDate":"2024-01-26"},{"lineNumber":179,"author":{"gitId":"BryanL2303"},"content":"                                System.out.println(tasks.get(index).getStatus());","lastModifiedDate":"2024-01-26"},{"lineNumber":180,"author":{"gitId":"BryanL2303"},"content":"                                System.out.println(divider);","lastModifiedDate":"2024-01-26"},{"lineNumber":181,"author":{"gitId":"BryanL2303"},"content":"                            } catch(NumberFormatException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":182,"author":{"gitId":"BryanL2303"},"content":"                                System.out.println(divider);","lastModifiedDate":"2024-01-26"},{"lineNumber":183,"author":{"gitId":"BryanL2303"},"content":"                                System.out.println(\"Klee doesn\u0027t understand, there should be a number after mark right?\");","lastModifiedDate":"2024-01-26"},{"lineNumber":184,"author":{"gitId":"BryanL2303"},"content":"                                System.out.println(divider);","lastModifiedDate":"2024-01-26"},{"lineNumber":185,"author":{"gitId":"BryanL2303"},"content":"                            }","lastModifiedDate":"2024-01-26"},{"lineNumber":186,"author":{"gitId":"BryanL2303"},"content":"                            break;","lastModifiedDate":"2024-01-26"},{"lineNumber":187,"author":{"gitId":"BryanL2303"},"content":"                        case unmark:","lastModifiedDate":"2024-01-26"},{"lineNumber":188,"author":{"gitId":"BryanL2303"},"content":"                            try{","lastModifiedDate":"2024-01-26"},{"lineNumber":189,"author":{"gitId":"BryanL2303"},"content":"                                Integer index \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2024-01-26"},{"lineNumber":190,"author":{"gitId":"BryanL2303"},"content":"                                tasks.get(index).unMark();","lastModifiedDate":"2024-01-26"},{"lineNumber":191,"author":{"gitId":"BryanL2303"},"content":"                                System.out.println(divider);","lastModifiedDate":"2024-01-26"},{"lineNumber":192,"author":{"gitId":"BryanL2303"},"content":"                                System.out.println(\"Oh no! Klee will burn the cross away...:\");","lastModifiedDate":"2024-01-26"},{"lineNumber":193,"author":{"gitId":"BryanL2303"},"content":"                                System.out.println(tasks.get(index).getStatus());","lastModifiedDate":"2024-01-26"},{"lineNumber":194,"author":{"gitId":"BryanL2303"},"content":"                                System.out.println(divider);","lastModifiedDate":"2024-01-26"},{"lineNumber":195,"author":{"gitId":"BryanL2303"},"content":"                            } catch(NumberFormatException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":196,"author":{"gitId":"BryanL2303"},"content":"                                System.out.println(divider);","lastModifiedDate":"2024-01-26"},{"lineNumber":197,"author":{"gitId":"BryanL2303"},"content":"                                System.out.println(\"Klee doesn\u0027t understand, there should be a number after unmark right?\");","lastModifiedDate":"2024-01-26"},{"lineNumber":198,"author":{"gitId":"BryanL2303"},"content":"                                System.out.println(divider);","lastModifiedDate":"2024-01-26"},{"lineNumber":199,"author":{"gitId":"BryanL2303"},"content":"                            }","lastModifiedDate":"2024-01-26"},{"lineNumber":200,"author":{"gitId":"BryanL2303"},"content":"                            break;","lastModifiedDate":"2024-01-26"},{"lineNumber":201,"author":{"gitId":"BryanL2303"},"content":"                        case delete:","lastModifiedDate":"2024-01-26"},{"lineNumber":202,"author":{"gitId":"BryanL2303"},"content":"                            System.out.println(divider);","lastModifiedDate":"2024-01-24"},{"lineNumber":203,"author":{"gitId":"BryanL2303"},"content":"                            try{","lastModifiedDate":"2024-01-24"},{"lineNumber":204,"author":{"gitId":"BryanL2303"},"content":"                                int index \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2024-01-24"},{"lineNumber":205,"author":{"gitId":"BryanL2303"},"content":"                                if (index \u003c tasks.size()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":206,"author":{"gitId":"BryanL2303"},"content":"                                    System.out.println(\"Okay, Klee will wipe this task away!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":207,"author":{"gitId":"BryanL2303"},"content":"                                    System.out.println(tasks.get(index).getStatus());","lastModifiedDate":"2024-01-24"},{"lineNumber":208,"author":{"gitId":"BryanL2303"},"content":"                                    tasks.remove(index);","lastModifiedDate":"2024-01-24"},{"lineNumber":209,"author":{"gitId":"BryanL2303"},"content":"                                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":210,"author":{"gitId":"BryanL2303"},"content":"                                } else System.out.println(\"But that task does not exist!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":211,"author":{"gitId":"BryanL2303"},"content":"                            } catch(NumberFormatException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":212,"author":{"gitId":"BryanL2303"},"content":"                                System.out.println(\"Klee doesn\u0027t understand, there should be a number after delete right?\");","lastModifiedDate":"2024-01-24"},{"lineNumber":213,"author":{"gitId":"BryanL2303"},"content":"                            }","lastModifiedDate":"2024-01-24"},{"lineNumber":214,"author":{"gitId":"BryanL2303"},"content":"                            System.out.println(divider);","lastModifiedDate":"2024-01-24"},{"lineNumber":215,"author":{"gitId":"BryanL2303"},"content":"                        }","lastModifiedDate":"2024-01-26"},{"lineNumber":216,"author":{"gitId":"BryanL2303"},"content":"                        saveData(tasks);","lastModifiedDate":"2024-01-26"},{"lineNumber":217,"author":{"gitId":"BryanL2303"},"content":"                    } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":218,"author":{"gitId":"BryanL2303"},"content":"                        System.out.println(divider);","lastModifiedDate":"2024-01-24"},{"lineNumber":219,"author":{"gitId":"BryanL2303"},"content":"                        System.out.println(\"Klee doesn\u0027t understand, what are you talking about?\");","lastModifiedDate":"2024-01-24"},{"lineNumber":220,"author":{"gitId":"BryanL2303"},"content":"                        System.out.println(divider);","lastModifiedDate":"2024-01-24"},{"lineNumber":221,"author":{"gitId":"BryanL2303"},"content":"                    }","lastModifiedDate":"2024-01-23"},{"lineNumber":222,"author":{"gitId":"BryanL2303"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":223,"author":{"gitId":"BryanL2303"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":224,"author":{"gitId":"BryanL2303"},"content":"        };","lastModifiedDate":"2024-01-23"},{"lineNumber":225,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-23"},{"lineNumber":226,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(\"Goodbye. Klee will go back to solitary confinement now...\");","lastModifiedDate":"2024-01-23"},{"lineNumber":227,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-23"},{"lineNumber":228,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":229,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"BryanL2303":229}},{"path":"src/main/java/KleeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"public class KleeException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"    public KleeException(String errorMessage) {","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"    public String NoDescriptionError() {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"        return \"\";","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"BryanL2303":9}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"public class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"    protected String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"    protected String type;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"    public String getStatus() {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"        String statusIcon \u003d (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"        return \"[\" + statusIcon + \"] \" + description;","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"    public boolean done() {","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"        return isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"    public String type() { return type; }","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"    public String toText() {","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"        return type + \" / \" + (isDone ? \"1\" : \"0\") + \" / \" + description;","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"    public void mark() {","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"    public void unMark() {","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"BryanL2303":33}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"    public String getStatus() {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"        String statusIcon \u003d (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"        return \"[\" + type + \"][\" + statusIcon + \"] \" + description;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"    static public Task fromText(String description, String done) {","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"        Task task \u003d new ToDo(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"        task.isDone \u003d done.equals(\"1\");","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"        return task;","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"BryanL2303":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"todo Make bomb","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"deadline Blast lake /by tonight","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"BryanL2303":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"java -classpath ..\\bin Klee \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"BryanL2303":1,"-":20}}]
