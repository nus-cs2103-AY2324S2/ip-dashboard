[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"checkstyle {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"    toolVersion \u003d \u002710.2\u0027;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"shawnnlimm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"shawnnlimm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"shawnnlimm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"shawnnlimm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"shawnnlimm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"shawnnlimm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"shawnnlimm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"shawnnlimm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"shawnnlimm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"shawnnlimm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"shawnnlimm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"shawnnlimm"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"shawnnlimm":21,"-":41}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"T | X | read book","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"shawnnlimm":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"import duke.exceptions.DukeUnknownCommandException;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"import duke.ui.Launcher;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":" * Duke chatbot.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"    private static final String UNKNOWN_COMMAND_MESSAGE \u003d \"The command \u0027%s\u0027 is unknown. Please try again!\";","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"    private static final TaskList taskList \u003d new TaskList(\"/data/tasks.txt\");","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"    private static boolean isOpen \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"        Launcher.main(args);","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"shawnnlimm"},"content":"    private static String runWaffles(String userInput) {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"shawnnlimm"},"content":"        if (isOpen) {","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"shawnnlimm"},"content":"            Parser p \u003d new Parser(userInput);","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"            Parser.Command command \u003d p.getCommand();","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"shawnnlimm"},"content":"            String arguments \u003d p.getArgument();","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"shawnnlimm"},"content":"            String output \u003d \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"shawnnlimm"},"content":"            switch (command) {","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"shawnnlimm"},"content":"            case BYE:","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"shawnnlimm"},"content":"                output \u003d sayGoodbye();","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"shawnnlimm"},"content":"                isOpen \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"shawnnlimm"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"shawnnlimm"},"content":"            case LIST:","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"shawnnlimm"},"content":"                output \u003d taskList.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"shawnnlimm"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"shawnnlimm"},"content":"            case TODO:","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"shawnnlimm"},"content":"                output \u003d taskList.addToDoTask(arguments);","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"shawnnlimm"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"shawnnlimm"},"content":"            case MARK:","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"shawnnlimm"},"content":"                output \u003d taskList.markTask(arguments);","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"shawnnlimm"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"shawnnlimm"},"content":"            case UNMARK:","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"shawnnlimm"},"content":"                output \u003d taskList.unmarkTask(arguments);","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"shawnnlimm"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"shawnnlimm"},"content":"            case DEADLINE:","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"shawnnlimm"},"content":"                output \u003d taskList.addDeadlineTask(arguments);","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"shawnnlimm"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"shawnnlimm"},"content":"            case EVENT:","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"shawnnlimm"},"content":"                output \u003d taskList.addEventTask(arguments);","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"shawnnlimm"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"shawnnlimm"},"content":"            case DELETE:","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"shawnnlimm"},"content":"                output \u003d taskList.deleteTask(arguments);","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"shawnnlimm"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"shawnnlimm"},"content":"            case FIND:","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"shawnnlimm"},"content":"                output \u003d taskList.findTask(arguments);","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"shawnnlimm"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"shawnnlimm"},"content":"            case INVALID:","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"shawnnlimm"},"content":"                throw new DukeUnknownCommandException(","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"shawnnlimm"},"content":"                        String.format(UNKNOWN_COMMAND_MESSAGE, p.getUnknownCommand()));","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"shawnnlimm"},"content":"            default:","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"shawnnlimm"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"shawnnlimm"},"content":"            return output;","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"shawnnlimm"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"shawnnlimm"},"content":"            return \"Chat has already ended!\";","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"shawnnlimm"},"content":"     * Returns the response based on the input.","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"shawnnlimm"},"content":"     * @param input Input from user.","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"shawnnlimm"},"content":"     * @return String return message to user.","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"shawnnlimm"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"shawnnlimm"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"shawnnlimm"},"content":"            return runWaffles(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"shawnnlimm"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"shawnnlimm"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":85,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":86,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"shawnnlimm"},"content":"     * Greets the user when the chatbot is launched.","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"shawnnlimm"},"content":"    public String greet() {","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"shawnnlimm"},"content":"        return String.format(\"Hello! I\u0027m Waffles!%nWhat can I do for you?\");","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":92,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":93,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"shawnnlimm"},"content":"     * Says bye to the user when the chatbot is closed.","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"shawnnlimm"},"content":"    public static String sayGoodbye() {","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"shawnnlimm"},"content":"        return GOODBYE_MESSAGE;","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":99,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":100,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"shawnnlimm":96,"-":4}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":" * The DukeException class represents exceptions specific to the Duke chatbot application.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":" * It extends the RuntimeException class.","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"     * Constructs a new DukeException with the specified error message.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"     * @param errorMessage The error message associated with this exception.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"shawnnlimm":17}},{"path":"src/main/java/duke/exceptions/DukeIllegalArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":" * The DukeIllegalArgumentException class represents exceptions specific","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":" * to invalid arguments in the Duke chatbot application.","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":" * It extends the DukeException class.","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"public class DukeIllegalArgumentException extends DukeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"     * Constructs a new DukeIllegalArgumentException with the specified error message.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"     * @param errorMessage The error message associated with this exception.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"    public DukeIllegalArgumentException(String errorMessage) {","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"shawnnlimm":18}},{"path":"src/main/java/duke/exceptions/DukeIoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":" * The DukeIoException class represents exceptions specific to input/output errors in the Duke chatbot application.","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":" * It extends the DukeException class.","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"public class DukeIoException extends DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"     * Constructs a new DukeIOException with the specified error message.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"     * @param errorMessage The error message associated with this exception.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"    public DukeIoException(String errorMessage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"shawnnlimm":17}},{"path":"src/main/java/duke/exceptions/DukeUnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":" * The DukeUnknownCommandException class represents exceptions specific","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":" * to unknown commands in the Duke chatbot application.","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":" * It extends the DukeException class.","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"public class DukeUnknownCommandException extends DukeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"     * Constructs a new DukeUnknownCommandException with the specified error message.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"     * @param errorMessage The error message associated with this exception.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"    public DukeUnknownCommandException(String errorMessage) {","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"shawnnlimm":18}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"package duke.parser;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":" * The Parser class is responsible for parsing user input into commands and arguments.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"public class Parser {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"     * Represents the available commands that the parser can recognize.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"    public enum Command {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"        BYE,","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"        LIST,","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"        TODO,","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"        MARK,","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"        UNMARK,","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"        DEADLINE,","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"        EVENT,","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"        DELETE,","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"        FIND,","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"        INVALID","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"shawnnlimm"},"content":"    private final Command command;","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"shawnnlimm"},"content":"    private final String argument;","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"    private String unknownCommand \u003d \"\";","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"shawnnlimm"},"content":"     * Constructs a Parser object with the specified user input.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"shawnnlimm"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"shawnnlimm"},"content":"     * @param userInput The user input to be parsed.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"shawnnlimm"},"content":"    public Parser(String userInput) {","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"shawnnlimm"},"content":"        String[] splitInputs \u003d userInput.split(\"\\\\s+\");","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"shawnnlimm"},"content":"        Command c;","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"shawnnlimm"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"shawnnlimm"},"content":"            c \u003d Command.valueOf(splitInputs[0].toUpperCase());","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"shawnnlimm"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"shawnnlimm"},"content":"            c \u003d Command.INVALID;","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"shawnnlimm"},"content":"            this.unknownCommand \u003d splitInputs[0];","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"shawnnlimm"},"content":"        if (splitInputs.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"shawnnlimm"},"content":"            this.argument \u003d \"\";","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"shawnnlimm"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"shawnnlimm"},"content":"            this.argument \u003d userInput.substring(splitInputs[0].length() + 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"shawnnlimm"},"content":"        this.command \u003d c;","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"shawnnlimm"},"content":"     * Returns the parsed command.","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"shawnnlimm"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"shawnnlimm"},"content":"     * @return The parsed command.","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"shawnnlimm"},"content":"    public Command getCommand() {","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"shawnnlimm"},"content":"        return this.command;","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"shawnnlimm"},"content":"     * Returns the parsed argument.","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"shawnnlimm"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"shawnnlimm"},"content":"     * @return The parsed argument.","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"shawnnlimm"},"content":"    public String getArgument() {","lastModifiedDate":"2024-01-24"},{"lineNumber":68,"author":{"gitId":"shawnnlimm"},"content":"        return this.argument;","lastModifiedDate":"2024-01-24"},{"lineNumber":69,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"shawnnlimm"},"content":"     * Returns the unknown command if the input is invalid.","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"shawnnlimm"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"shawnnlimm"},"content":"     * @return The unknown command.","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"shawnnlimm"},"content":"    public String getUnknownCommand() {","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"shawnnlimm"},"content":"        return this.unknownCommand;","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"shawnnlimm":79}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"package duke.storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"import java.io.File;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"import duke.exceptions.DukeIoException;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":" * The Storage class handles file storage operations for the Duke chatbot application.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"public class Storage {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"    private final String path;","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"     * @param path The path to the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"shawnnlimm"},"content":"     * @throws DukeIoException If an error occurs during file creation.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"shawnnlimm"},"content":"    public Storage(String path) {","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"shawnnlimm"},"content":"        this.path \u003d path;","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"        File f \u003d new File(path);","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"shawnnlimm"},"content":"        if (f.exists()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"shawnnlimm"},"content":"            return;","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"shawnnlimm"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"shawnnlimm"},"content":"            File parentPath \u003d f.getParentFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"shawnnlimm"},"content":"            parentPath.mkdirs();","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"shawnnlimm"},"content":"            f.createNewFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"shawnnlimm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"shawnnlimm"},"content":"            throw new DukeIoException(\"Error creating file!\");","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"shawnnlimm"},"content":"     * Loads data from the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"shawnnlimm"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"shawnnlimm"},"content":"     * @return The data read from the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"shawnnlimm"},"content":"     * @throws DukeIoException If an error occurs while reading the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"shawnnlimm"},"content":"    public String loadFileData() {","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"shawnnlimm"},"content":"        Path p \u003d Paths.get(path);","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"shawnnlimm"},"content":"        assert Files.exists(p) : \"Storage file should exist at this path\";","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"shawnnlimm"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"shawnnlimm"},"content":"            return Files.readString(p);","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"shawnnlimm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"shawnnlimm"},"content":"            throw new DukeIoException(\"Error locating file\");","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"shawnnlimm"},"content":"     * Saves data to the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"shawnnlimm"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"shawnnlimm"},"content":"     * @param dataToSave The data to be saved to the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"shawnnlimm"},"content":"     * @throws DukeIoException If an error occurs while writing to the file.","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"shawnnlimm"},"content":"    public void saveToFile(String dataToSave) {","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"shawnnlimm"},"content":"        Path p \u003d Paths.get(path);","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"shawnnlimm"},"content":"        assert Files.exists(p) : \"Storage file should exist at this path\";","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"shawnnlimm"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"shawnnlimm"},"content":"            Files.writeString(p, dataToSave);","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"shawnnlimm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"shawnnlimm"},"content":"            throw new DukeIoException(\"Error saving to file\");","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"shawnnlimm":72}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":" * The Deadline class represents a task with a deadline in the Duke chatbot application.","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":" * It extends the Task class.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"    private static final String DEADLINE_MESSAGE \u003d \"[D]%s (by: %s)\";","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"    private static final String DEADLINE_FILE_TEMPLATE \u003d \"D | %s | %s\";","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"    private final DateTimeFormatter returnFormatter \u003d DateTimeFormatter.ofPattern(\"EEE HHmm dd/MM/yyyy\");","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"     * Constructs a Deadline object with the specified description and deadline.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"     * @param deadline The deadline of the task in the format \"yyyy/MM/dd HHmm\".","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"shawnnlimm"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"shawnnlimm"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"shawnnlimm"},"content":"        DateTimeFormatter acceptFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline, acceptFormatter);","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"shawnnlimm"},"content":"     * Returns the string representation of the deadline task for saving to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"shawnnlimm"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"shawnnlimm"},"content":"     * @return The string representation of the deadline task for saving to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"shawnnlimm"},"content":"    public String taskFileTemplate() {","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"shawnnlimm"},"content":"        return String.format(DEADLINE_FILE_TEMPLATE, super.taskFileTemplate(), deadline);","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"shawnnlimm"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"shawnnlimm"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"shawnnlimm"},"content":"     * @return The string representation of the deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"shawnnlimm"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"shawnnlimm"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"shawnnlimm"},"content":"        return String.format(DEADLINE_MESSAGE, super.toString(), deadline.format(returnFormatter));","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"shawnnlimm":47}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":" * The Event class represents a task with a specific start and end time in the Duke chatbot application.","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":" * It extends the Task class.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"    private static final String EVENT_MESSAGE \u003d \"[E]%s (from: %s to: %s)\";","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"    private static final String EVENT_FILE_TEMPLATE \u003d \"E | %s | %s | %s\";","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"    private final DateTimeFormatter returnFormatter \u003d DateTimeFormatter.ofPattern(\"EEE HHmm dd/MM/yyyy\");","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"     * Constructs an Event object with the specified description, start time, and end time.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"shawnnlimm"},"content":"     * @param startTime The start time of the event in the format \"yyyy/MM/dd HHmm\".","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"shawnnlimm"},"content":"     * @param endTime The end time of the event in the format \"yyyy/MM/dd HHmm\".","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"shawnnlimm"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"shawnnlimm"},"content":"        DateTimeFormatter acceptFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"shawnnlimm"},"content":"        this.startTime \u003d LocalDateTime.parse(startTime, acceptFormatter);","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"shawnnlimm"},"content":"        this.endTime \u003d LocalDateTime.parse(endTime, acceptFormatter);","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"shawnnlimm"},"content":"     * Returns the string representation of the event task for saving to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"shawnnlimm"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"shawnnlimm"},"content":"     * @return The string representation of the event task for saving to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"shawnnlimm"},"content":"    public String taskFileTemplate() {","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"shawnnlimm"},"content":"        return String.format(EVENT_FILE_TEMPLATE, super.taskFileTemplate(), startTime, endTime);","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"shawnnlimm"},"content":"     * Returns the string representation of the event task for saving to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"shawnnlimm"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"shawnnlimm"},"content":"     * @return The string representation of the event task for saving to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"shawnnlimm"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"shawnnlimm"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"shawnnlimm"},"content":"        return String.format(EVENT_MESSAGE, super.toString(),","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"shawnnlimm"},"content":"                startTime.format(returnFormatter), endTime.format(returnFormatter));","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"shawnnlimm":51}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":" * The Task class represents a generic task in the Duke chatbot application.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"public class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"    private static final String TASK_MESSAGE \u003d \"[%s] %s\";","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"    private static final String TASK_FILE_TEMPLATE \u003d \"%s | %s\";","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"    protected String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"     * Constructs a Task object with the specified description.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"shawnnlimm"},"content":"     * Returns the status icon representing whether the task is done or not.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"shawnnlimm"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"shawnnlimm"},"content":"     * @return The status icon.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"shawnnlimm"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"shawnnlimm"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"shawnnlimm"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"shawnnlimm"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"shawnnlimm"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"shawnnlimm"},"content":"     * Marks the task as undone.","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"shawnnlimm"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"shawnnlimm"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"shawnnlimm"},"content":"     * Returns the string representation of the task for saving to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"shawnnlimm"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"shawnnlimm"},"content":"     * @return The string representation of the task for saving to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"shawnnlimm"},"content":"    public String taskFileTemplate() {","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"shawnnlimm"},"content":"        return String.format(TASK_FILE_TEMPLATE, getStatusIcon(), description);","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"shawnnlimm"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"shawnnlimm"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"shawnnlimm"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"shawnnlimm"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"shawnnlimm"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"shawnnlimm"},"content":"        return String.format(TASK_MESSAGE, getStatusIcon(), this.description);","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"shawnnlimm":63}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"import duke.exceptions.DukeIllegalArgumentException;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":" * The TaskList class represents a list of tasks in the Duke chatbot application.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"public class TaskList {","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"    private static final String MARK_DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:%n%s\";","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"    private static final String MARK_UNDONE_MESSAGE \u003d \"OK, I\u0027ve marked this task as not done yet:%n%s\";","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"    private static final String LIST_TASK_MESSAGE \u003d","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"            \"Here are the tasks in your list:%s\";","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"    private static final String ADD_TASK_MESSAGE \u003d","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"            \"Got it. I\u0027ve added this task:%n%s%nNow you have %d tasks in the list.\";","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"    private static final String MISSING_ARGUMENT_MESSAGE \u003d","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"            \"The command you entered has missing arguments. Please try again!\";","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"shawnnlimm"},"content":"    private static final String REMOVE_TASK_MESSAGE \u003d","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"shawnnlimm"},"content":"            \"Noted. I\u0027ve removed this task:%n%s%nNow you have %d tasks in the list.\";","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"shawnnlimm"},"content":"    private static final String FIND_TASK_MESSAGE \u003d \"Here are the matching tasks in your list:%s\";","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"shawnnlimm"},"content":"    private final Storage taskStorage;","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"shawnnlimm"},"content":"     * Constructs a TaskList object with the specified subpath for file storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"shawnnlimm"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"shawnnlimm"},"content":"     * @param subPath The subpath for file storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"shawnnlimm"},"content":"    public TaskList(String subPath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"shawnnlimm"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"shawnnlimm"},"content":"        String root \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"shawnnlimm"},"content":"        String path \u003d Path.of(root, subPath).toString();","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"shawnnlimm"},"content":"        this.taskStorage \u003d new Storage(path);","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"shawnnlimm"},"content":"        updateList();","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"shawnnlimm"},"content":"     * Adds a ToDo task to TaskList.","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"shawnnlimm"},"content":"     * @param toDoDescription The description of the ToDo task.","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"shawnnlimm"},"content":"     * @return String with return message.","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"shawnnlimm"},"content":"     * @throws DukeIllegalArgumentException If the description is black.","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"shawnnlimm"},"content":"    public String addToDoTask(String toDoDescription) {","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"shawnnlimm"},"content":"        if (toDoDescription.isBlank()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"shawnnlimm"},"content":"            throw new DukeIllegalArgumentException(MISSING_ARGUMENT_MESSAGE);","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"shawnnlimm"},"content":"        Task toDo \u003d new ToDo(toDoDescription);","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"shawnnlimm"},"content":"        taskList.add(toDo);","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"shawnnlimm"},"content":"        updateStorage();","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"shawnnlimm"},"content":"        return String.format(ADD_TASK_MESSAGE, toDo, taskList.size());","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"shawnnlimm"},"content":"     * Adds a Deadline task to TaskList.","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"shawnnlimm"},"content":"     * @param deadlineDescription The description of the Deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"shawnnlimm"},"content":"     * @return String with return message.","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"shawnnlimm"},"content":"     * @throws DukeIllegalArgumentException If the description is blank.","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"shawnnlimm"},"content":"    public String addDeadlineTask(String deadlineDescription) {","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"shawnnlimm"},"content":"        if (deadlineDescription.isBlank()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"shawnnlimm"},"content":"            throw new DukeIllegalArgumentException(MISSING_ARGUMENT_MESSAGE);","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"shawnnlimm"},"content":"        String[] deadlineArgs \u003d deadlineDescription.split(\" /by \");","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"shawnnlimm"},"content":"        Task deadline \u003d new Deadline(deadlineArgs[0], deadlineArgs[1]);","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"shawnnlimm"},"content":"        taskList.add(deadline);","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"shawnnlimm"},"content":"        updateStorage();","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"shawnnlimm"},"content":"        return String.format(ADD_TASK_MESSAGE, deadline, taskList.size());","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"shawnnlimm"},"content":"     * Adds a Event task to TaskList.","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"shawnnlimm"},"content":"     * @param eventDescription The description of the Event task.","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"shawnnlimm"},"content":"     * @return String with return message.","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"shawnnlimm"},"content":"     * @throws DukeIllegalArgumentException If the description is blank.","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"shawnnlimm"},"content":"    public String addEventTask(String eventDescription) {","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"shawnnlimm"},"content":"        if (eventDescription.isBlank()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"shawnnlimm"},"content":"            throw new DukeIllegalArgumentException(MISSING_ARGUMENT_MESSAGE);","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"shawnnlimm"},"content":"        String[] eventArgs \u003d eventDescription.split(\" /from \");","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"shawnnlimm"},"content":"        String[] eventTime \u003d eventArgs[1].split(\" /to \");","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"shawnnlimm"},"content":"        String startTime \u003d eventTime[0];","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"shawnnlimm"},"content":"        String endTime \u003d eventTime[1];","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"shawnnlimm"},"content":"        Task event \u003d new Event(eventArgs[0], startTime, endTime);","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"shawnnlimm"},"content":"        taskList.add(event);","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"shawnnlimm"},"content":"        updateStorage();","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"shawnnlimm"},"content":"        return String.format(ADD_TASK_MESSAGE, event, taskList.size());","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"shawnnlimm"},"content":"     * Marks a task in TaskList as completed.","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"shawnnlimm"},"content":"     * @param taskIndex The index of the task in TaskList.","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"shawnnlimm"},"content":"     * @return String with return message.","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"shawnnlimm"},"content":"     * @throws DukeIllegalArgumentException If the taskIndex is missing.","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"shawnnlimm"},"content":"    public String markTask(String taskIndex) {","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"shawnnlimm"},"content":"        if (taskIndex.isBlank()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"shawnnlimm"},"content":"            throw new DukeIllegalArgumentException(MISSING_ARGUMENT_MESSAGE);","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"shawnnlimm"},"content":"        Task t \u003d taskList.get(Integer.parseInt(taskIndex) - 1);","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"shawnnlimm"},"content":"        t.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"shawnnlimm"},"content":"        updateStorage();","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"shawnnlimm"},"content":"        return String.format(MARK_DONE_MESSAGE, t);","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":111,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"shawnnlimm"},"content":"     * Unmarks a task in TaskList as not completed.","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"shawnnlimm"},"content":"     * @param taskIndex The index of the task in TaskList.","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"shawnnlimm"},"content":"     * @return String with return message.","lastModifiedDate":"2024-02-07"},{"lineNumber":115,"author":{"gitId":"shawnnlimm"},"content":"     * @throws DukeIllegalArgumentException If the taskIndex is missing.","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"shawnnlimm"},"content":"    public String unmarkTask(String taskIndex) {","lastModifiedDate":"2024-02-07"},{"lineNumber":118,"author":{"gitId":"shawnnlimm"},"content":"        if (taskIndex.isBlank()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"shawnnlimm"},"content":"            throw new DukeIllegalArgumentException(MISSING_ARGUMENT_MESSAGE);","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"shawnnlimm"},"content":"        Task t \u003d taskList.get(Integer.parseInt(taskIndex) - 1);","lastModifiedDate":"2024-01-27"},{"lineNumber":122,"author":{"gitId":"shawnnlimm"},"content":"        t.markAsUndone();","lastModifiedDate":"2024-01-27"},{"lineNumber":123,"author":{"gitId":"shawnnlimm"},"content":"        updateStorage();","lastModifiedDate":"2024-01-27"},{"lineNumber":124,"author":{"gitId":"shawnnlimm"},"content":"        return String.format(MARK_UNDONE_MESSAGE, t);","lastModifiedDate":"2024-02-07"},{"lineNumber":125,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":126,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":127,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"shawnnlimm"},"content":"     * Deletes a task in TaskList.","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"shawnnlimm"},"content":"     * @param taskIndex The index of the task to be deleted in TaskList.","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"shawnnlimm"},"content":"     * @return String with return message.","lastModifiedDate":"2024-02-07"},{"lineNumber":131,"author":{"gitId":"shawnnlimm"},"content":"     * @throws DukeIllegalArgumentException If the taskIndex is missing.","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"shawnnlimm"},"content":"    public String deleteTask(String taskIndex) {","lastModifiedDate":"2024-02-07"},{"lineNumber":134,"author":{"gitId":"shawnnlimm"},"content":"        if (taskIndex.isBlank()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":135,"author":{"gitId":"shawnnlimm"},"content":"            throw new DukeIllegalArgumentException(MISSING_ARGUMENT_MESSAGE);","lastModifiedDate":"2024-01-27"},{"lineNumber":136,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":137,"author":{"gitId":"shawnnlimm"},"content":"        Task taskToRemove \u003d taskList.get(Integer.parseInt(taskIndex) - 1);","lastModifiedDate":"2024-01-27"},{"lineNumber":138,"author":{"gitId":"shawnnlimm"},"content":"        taskList.remove(Integer.parseInt(taskIndex) - 1);","lastModifiedDate":"2024-01-27"},{"lineNumber":139,"author":{"gitId":"shawnnlimm"},"content":"        updateStorage();","lastModifiedDate":"2024-01-27"},{"lineNumber":140,"author":{"gitId":"shawnnlimm"},"content":"        return String.format(REMOVE_TASK_MESSAGE, taskToRemove, taskList.size());","lastModifiedDate":"2024-02-07"},{"lineNumber":141,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":142,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":143,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"shawnnlimm"},"content":"     * Finds tasks that contains the keyword given.","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"shawnnlimm"},"content":"     * @param keyword Keyword to find in the taskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"shawnnlimm"},"content":"     * @return String with return message.","lastModifiedDate":"2024-02-07"},{"lineNumber":147,"author":{"gitId":"shawnnlimm"},"content":"     * @throws DukeIllegalArgumentException If the keyword is missing.","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"shawnnlimm"},"content":"    public String findTask(String keyword) {","lastModifiedDate":"2024-02-07"},{"lineNumber":150,"author":{"gitId":"shawnnlimm"},"content":"        if (keyword.isBlank()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"shawnnlimm"},"content":"            throw new DukeIllegalArgumentException(MISSING_ARGUMENT_MESSAGE);","lastModifiedDate":"2024-02-01"},{"lineNumber":152,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"shawnnlimm"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"shawnnlimm"},"content":"        int count \u003d 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":155,"author":{"gitId":"shawnnlimm"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"shawnnlimm"},"content":"            if (task.description.contains(keyword)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":157,"author":{"gitId":"shawnnlimm"},"content":"                sb.append(String.format(\"%n%d.%s\", count, task));","lastModifiedDate":"2024-02-01"},{"lineNumber":158,"author":{"gitId":"shawnnlimm"},"content":"                count +\u003d 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"shawnnlimm"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":160,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":161,"author":{"gitId":"shawnnlimm"},"content":"        return String.format(FIND_TASK_MESSAGE, sb);","lastModifiedDate":"2024-02-07"},{"lineNumber":162,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":163,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":164,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":165,"author":{"gitId":"shawnnlimm"},"content":"     * Returns the string representation of the TaskList.","lastModifiedDate":"2024-01-31"},{"lineNumber":166,"author":{"gitId":"shawnnlimm"},"content":"     * @return The string representation of the TaskList.","lastModifiedDate":"2024-01-31"},{"lineNumber":167,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":168,"author":{"gitId":"shawnnlimm"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":169,"author":{"gitId":"shawnnlimm"},"content":"    public String toString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":170,"author":{"gitId":"shawnnlimm"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-01-27"},{"lineNumber":171,"author":{"gitId":"shawnnlimm"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-27"},{"lineNumber":172,"author":{"gitId":"shawnnlimm"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2024-01-27"},{"lineNumber":173,"author":{"gitId":"shawnnlimm"},"content":"            sb.append(String.format(\"%n%d.%s\", i + 1, task));","lastModifiedDate":"2024-01-27"},{"lineNumber":174,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":175,"author":{"gitId":"shawnnlimm"},"content":"        return String.format(LIST_TASK_MESSAGE, sb);","lastModifiedDate":"2024-02-07"},{"lineNumber":176,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":177,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":178,"author":{"gitId":"shawnnlimm"},"content":"    private void updateList() {","lastModifiedDate":"2024-01-27"},{"lineNumber":179,"author":{"gitId":"shawnnlimm"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":180,"author":{"gitId":"shawnnlimm"},"content":"            String fileData \u003d taskStorage.loadFileData();","lastModifiedDate":"2024-01-27"},{"lineNumber":181,"author":{"gitId":"shawnnlimm"},"content":"            String[] tasks \u003d fileData.split(\"\\n\");","lastModifiedDate":"2024-01-27"},{"lineNumber":182,"author":{"gitId":"shawnnlimm"},"content":"            for (String t : tasks) {","lastModifiedDate":"2024-01-27"},{"lineNumber":183,"author":{"gitId":"shawnnlimm"},"content":"                String[] taskTokens \u003d t.split(\"\\\\|\");","lastModifiedDate":"2024-01-27"},{"lineNumber":184,"author":{"gitId":"shawnnlimm"},"content":"                for (int j \u003d 0; j \u003c taskTokens.length; j++) {","lastModifiedDate":"2024-01-27"},{"lineNumber":185,"author":{"gitId":"shawnnlimm"},"content":"                    taskTokens[j] \u003d taskTokens[j].trim();","lastModifiedDate":"2024-01-27"},{"lineNumber":186,"author":{"gitId":"shawnnlimm"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":187,"author":{"gitId":"shawnnlimm"},"content":"                String command \u003d taskTokens[0];","lastModifiedDate":"2024-01-27"},{"lineNumber":188,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":189,"author":{"gitId":"shawnnlimm"},"content":"                if (!command.isEmpty()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":190,"author":{"gitId":"shawnnlimm"},"content":"                    String status \u003d taskTokens[1];","lastModifiedDate":"2024-01-27"},{"lineNumber":191,"author":{"gitId":"shawnnlimm"},"content":"                    String description \u003d taskTokens[2];","lastModifiedDate":"2024-01-27"},{"lineNumber":192,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":193,"author":{"gitId":"shawnnlimm"},"content":"                    if (command.equals(\"T\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":194,"author":{"gitId":"shawnnlimm"},"content":"                        syncListWithStorage(\"T\", status, description, \"\", \"\", \"\");","lastModifiedDate":"2024-01-27"},{"lineNumber":195,"author":{"gitId":"shawnnlimm"},"content":"                    } else if (command.equals(\"D\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":196,"author":{"gitId":"shawnnlimm"},"content":"                        syncListWithStorage(\"D\", status, description, taskTokens[3], \"\", \"\");","lastModifiedDate":"2024-01-27"},{"lineNumber":197,"author":{"gitId":"shawnnlimm"},"content":"                    } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":198,"author":{"gitId":"shawnnlimm"},"content":"                        syncListWithStorage(\"E\", status, description, \"\", taskTokens[3], taskTokens[4]);","lastModifiedDate":"2024-01-27"},{"lineNumber":199,"author":{"gitId":"shawnnlimm"},"content":"                    }","lastModifiedDate":"2024-01-27"},{"lineNumber":200,"author":{"gitId":"shawnnlimm"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":201,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":202,"author":{"gitId":"shawnnlimm"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":203,"author":{"gitId":"shawnnlimm"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":204,"author":{"gitId":"shawnnlimm"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":205,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":206,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":207,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":208,"author":{"gitId":"shawnnlimm"},"content":"    private void syncListWithStorage(String taskType, String status, String description,","lastModifiedDate":"2024-02-04"},{"lineNumber":209,"author":{"gitId":"shawnnlimm"},"content":"                                     String by, String from, String to) {","lastModifiedDate":"2024-02-04"},{"lineNumber":210,"author":{"gitId":"shawnnlimm"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":211,"author":{"gitId":"shawnnlimm"},"content":"            taskList.add(new ToDo(description));","lastModifiedDate":"2024-01-27"},{"lineNumber":212,"author":{"gitId":"shawnnlimm"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":213,"author":{"gitId":"shawnnlimm"},"content":"            String byFormatted;","lastModifiedDate":"2024-01-30"},{"lineNumber":214,"author":{"gitId":"shawnnlimm"},"content":"            String[] dateTimeParts \u003d by.replace(\"-\", \"/\").split(\"T\");","lastModifiedDate":"2024-01-30"},{"lineNumber":215,"author":{"gitId":"shawnnlimm"},"content":"            String[] time \u003d dateTimeParts[1].split(\":\");","lastModifiedDate":"2024-02-04"},{"lineNumber":216,"author":{"gitId":"shawnnlimm"},"content":"            byFormatted \u003d dateTimeParts[0] + \" \" + time[0] + time[1];","lastModifiedDate":"2024-02-04"},{"lineNumber":217,"author":{"gitId":"shawnnlimm"},"content":"            taskList.add(new Deadline(description, byFormatted));","lastModifiedDate":"2024-01-30"},{"lineNumber":218,"author":{"gitId":"shawnnlimm"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":219,"author":{"gitId":"shawnnlimm"},"content":"            String fromFormatted;","lastModifiedDate":"2024-01-30"},{"lineNumber":220,"author":{"gitId":"shawnnlimm"},"content":"            String toFormatted;","lastModifiedDate":"2024-01-30"},{"lineNumber":221,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":222,"author":{"gitId":"shawnnlimm"},"content":"            String[] fromParts \u003d from.replace(\"-\", \"/\").split(\"T\");","lastModifiedDate":"2024-01-30"},{"lineNumber":223,"author":{"gitId":"shawnnlimm"},"content":"            String[] fromHHmm \u003d fromParts[1].split(\":\");","lastModifiedDate":"2024-01-30"},{"lineNumber":224,"author":{"gitId":"shawnnlimm"},"content":"            fromFormatted \u003d fromParts[0] + \" \" + fromHHmm[0] + fromHHmm[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":225,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":226,"author":{"gitId":"shawnnlimm"},"content":"            String[] toParts \u003d to.replace(\"-\", \"/\").split(\"T\");","lastModifiedDate":"2024-01-30"},{"lineNumber":227,"author":{"gitId":"shawnnlimm"},"content":"            String[] toHHmm \u003d toParts[1].split(\":\");","lastModifiedDate":"2024-01-30"},{"lineNumber":228,"author":{"gitId":"shawnnlimm"},"content":"            toFormatted \u003d toParts[0] + \" \" + toHHmm[0] + toHHmm[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":229,"author":{"gitId":"shawnnlimm"},"content":"            taskList.add(new Event(description, fromFormatted, toFormatted));","lastModifiedDate":"2024-01-30"},{"lineNumber":230,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":231,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":232,"author":{"gitId":"shawnnlimm"},"content":"        if (status.equals(\"X\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":233,"author":{"gitId":"shawnnlimm"},"content":"            markTask(String.valueOf(taskList.size()));","lastModifiedDate":"2024-01-27"},{"lineNumber":234,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":235,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":236,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":237,"author":{"gitId":"shawnnlimm"},"content":"    private void updateStorage() {","lastModifiedDate":"2024-01-27"},{"lineNumber":238,"author":{"gitId":"shawnnlimm"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-01-27"},{"lineNumber":239,"author":{"gitId":"shawnnlimm"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2024-01-27"},{"lineNumber":240,"author":{"gitId":"shawnnlimm"},"content":"            sb.append(t.taskFileTemplate()).append(\"\\n\");","lastModifiedDate":"2024-01-27"},{"lineNumber":241,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":242,"author":{"gitId":"shawnnlimm"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":243,"author":{"gitId":"shawnnlimm"},"content":"            taskStorage.saveToFile(sb.toString());","lastModifiedDate":"2024-01-27"},{"lineNumber":244,"author":{"gitId":"shawnnlimm"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":245,"author":{"gitId":"shawnnlimm"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":246,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":247,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":248,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"shawnnlimm":248}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":" * The ToDo class represents a to-do task in the Duke chatbot application.","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":" * It extends the Task class.","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"    private static final String TODO_MESSAGE \u003d \"[T]%s\";","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"    private static final String TODO_FILE_TEMPLATE \u003d \"T | %s\";","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"     * Constructs a ToDo object with the specified description.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"shawnnlimm"},"content":"     * Returns the string representation of the to-do task for saving to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"shawnnlimm"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"shawnnlimm"},"content":"     * @return The string representation of the to-do task for saving to a file.","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"    public String taskFileTemplate() {","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"shawnnlimm"},"content":"        return String.format(TODO_FILE_TEMPLATE, super.taskFileTemplate());","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"shawnnlimm"},"content":"     * Returns the string representation of the to-do task.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"shawnnlimm"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"shawnnlimm"},"content":"     * @return The string representation of the to-do task.","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"shawnnlimm"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"shawnnlimm"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"shawnnlimm"},"content":"        return String.format(TODO_MESSAGE, super.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"shawnnlimm":39}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"package duke.ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"shawnnlimm"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"shawnnlimm"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"shawnnlimm"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"shawnnlimm"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"shawnnlimm"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"shawnnlimm"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"shawnnlimm"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"shawnnlimm"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"shawnnlimm"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"shawnnlimm"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"shawnnlimm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"shawnnlimm"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"shawnnlimm"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"shawnnlimm"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"shawnnlimm"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"shawnnlimm"},"content":"    private void flip() {","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"shawnnlimm"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"shawnnlimm"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"shawnnlimm"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"shawnnlimm"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"shawnnlimm"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"shawnnlimm"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"shawnnlimm"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"shawnnlimm"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"shawnnlimm"},"content":"        db.flip();","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"shawnnlimm"},"content":"        return db;","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"shawnnlimm":61}},{"path":"src/main/java/duke/ui/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"package duke.ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":" * GUI for Duke chatbot using FXML.","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"public class Gui extends Application {","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"     * Starts up the GUI.","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"shawnnlimm"},"content":"     * @param stage Stage to be used by GUI.","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"shawnnlimm"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"shawnnlimm"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"shawnnlimm"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Gui.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"shawnnlimm"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"shawnnlimm"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"shawnnlimm"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"shawnnlimm"},"content":"            stage.setTitle(\"Waffles\");","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"shawnnlimm"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"shawnnlimm"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().greetUser();","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"shawnnlimm"},"content":"            stage.show();","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"shawnnlimm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"shawnnlimm"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"shawnnlimm":39}},{"path":"src/main/java/duke/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"package duke.ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":" * Launcher to launch the GUI.","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"public class Launcher {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"        Application.launch(Gui.class, args);","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"shawnnlimm":13}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"package duke.ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"shawnnlimm"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"shawnnlimm"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"shawnnlimm"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"shawnnlimm"},"content":"    private Image userImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"            this.getClass().getResourceAsStream(\"/images/DaUser.png\")));","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"shawnnlimm"},"content":"    private Image dukeImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"shawnnlimm"},"content":"            this.getClass().getResourceAsStream(\"/images/surprised_pikachu.png\")));","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"shawnnlimm"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"shawnnlimm"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"shawnnlimm"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"shawnnlimm"},"content":"     * Set the instance of Duke to be used by the GUI.","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"shawnnlimm"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"shawnnlimm"},"content":"     * @param d Duke instance to be used by GUI.","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"shawnnlimm"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"shawnnlimm"},"content":"        this.duke \u003d d;","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"shawnnlimm"},"content":"     * Greets the user upon loading up the GUI.","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"shawnnlimm"},"content":"    public void greetUser() {","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"shawnnlimm"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"shawnnlimm"},"content":"                DialogBox.getDukeDialog(duke.greet(), dukeImage)","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"shawnnlimm"},"content":"        );","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"shawnnlimm"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"shawnnlimm"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"shawnnlimm"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"shawnnlimm"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"shawnnlimm"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"shawnnlimm"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"shawnnlimm"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"shawnnlimm"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"shawnnlimm"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"shawnnlimm"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"shawnnlimm"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"shawnnlimm"},"content":"        );","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"shawnnlimm"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"shawnnlimm":67}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" style\u003d\"-fx-font-size: 16px; -fx-font-family: \u0027Comic Sans MS\u0027\"/\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"shawnnlimm":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"shawnnlimm":19}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"package duke.parser;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"    public void parse_deadlineCommand_success() {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"        Parser p \u003d new Parser(\"deadline return book /by 2024/10/10 2200\");","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"        String expectedCommand \u003d \"DEADLINE\";","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"        String expectedArgument \u003d \"return book /by 2024/10/10 2200\";","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"        String expectedUnknownCommand \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"        assertEquals(expectedCommand, p.getCommand().toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"        assertEquals(expectedArgument, p.getArgument());","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"        assertEquals(expectedUnknownCommand, p.getUnknownCommand());","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"shawnnlimm"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"shawnnlimm"},"content":"    public void parse_illegalCommand_exceptionThrown() {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"shawnnlimm"},"content":"        Parser p \u003d new Parser(\"remove 1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"        String expectedCommand \u003d \"INVALID\";","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"shawnnlimm"},"content":"        String expectedArgument \u003d \"1\";","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"shawnnlimm"},"content":"        String expectedUnknownCommand \u003d \"remove\";","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"shawnnlimm"},"content":"        assertEquals(expectedCommand, p.getCommand().toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"shawnnlimm"},"content":"        assertEquals(expectedArgument, p.getArgument());","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"shawnnlimm"},"content":"        assertEquals(expectedUnknownCommand, p.getUnknownCommand());","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"shawnnlimm":35}},{"path":"src/test/java/duke/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"public class TaskListTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"    public void add_taskList_success() {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"        TaskList taskList \u003d new TaskList(\"src/test/java/duke/tasks/task_list_test.txt\");","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"        taskList.addToDoTask(\"go to the gym\");","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"        String output \u003d String.format(\"Here are the tasks in your list:%n%s\", \"1.[T][ ] go to the gym\");","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"        assertEquals(output, taskList.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"    public void missing_argument_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"        TaskList taskList \u003d new TaskList(\"src/test/java/duke/tasks/task_list_test.txt\");","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"shawnnlimm"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"shawnnlimm"},"content":"            taskList.markTask(\"\");","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"shawnnlimm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"shawnnlimm"},"content":"            assertEquals(\"The command you entered has missing arguments. Please try again!\", e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"shawnnlimm"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"shawnnlimm"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"shawnnlimm"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"shawnnlimm"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"shawnnlimm":29}},{"path":"src/test/java/duke/tasks/task_list_test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"T |   | go to the gym","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"shawnnlimm":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shawnnlimm"},"content":"todo borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"shawnnlimm"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"shawnnlimm"},"content":"todo go to the gym","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"shawnnlimm"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"shawnnlimm"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"shawnnlimm"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"shawnnlimm"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"shawnnlimm"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"shawnnlimm"},"content":"unmark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"shawnnlimm"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"shawnnlimm"},"content":"deadline return book /by Next Monday","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"shawnnlimm"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"shawnnlimm"},"content":"event friend\u0027s party /from Mon 5pm /to Mon 10pm","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"shawnnlimm"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"shawnnlimm"},"content":"todo","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"shawnnlimm"},"content":"blah","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"shawnnlimm"},"content":"todo finish homework","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"shawnnlimm"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"shawnnlimm"},"content":"delete 5","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"shawnnlimm"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"shawnnlimm"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"shawnnlimm":21}}]
