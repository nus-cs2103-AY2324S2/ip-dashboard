[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"# duke.Duke project template","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Windofbitter":2,"-":22}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"T | 1 | hello ","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"T | 0 | hello | 01 01 2022 10:00-01 02 2022 10:00 ","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"D | 0 | hello | 01 01 2022 10:00","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"T | 0 | dueevent | 01 01 2022 10:00-01 01 2022 12:00","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":4}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import duke.command.Command;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import duke.common.TaskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import duke.exception.StorageOperationException;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"public class Duke {","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"    public Duke() {","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"        } catch (StorageOperationException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"            ui.showLoadingException();","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"            taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"    public void run() {","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"        while(!isExit) {","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"            try {","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"                String command \u003d ui.readCommand();","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"                Command c \u003d Parser.parse(command);","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"        //        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"        //                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"        //                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"        //                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"        //                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"        //        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"Windofbitter"},"content":"        new Duke().run();","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":55}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke.command;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import duke.common.TaskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import duke.exception.StorageOperationException;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_USAGE \u003d \"bye: it would quit the chatbot and saves your tasks.\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"            \"Example: bye\";","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws StorageOperationException {","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"        super.isExit \u003d true;","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"        storage.save(taskList);","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"        ui.showGoodBye();","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":19}},{"path":"src/main/java/duke/command/CheckCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke.command;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import duke.common.TaskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import duke.task.Event;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"import java.util.List;","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"public class CheckCommand extends Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_WORD \u003d \"check\";","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_USAGE \u003d \"check: it checks whether there are any task due to a specific date.\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"            \"Example: check 2022-01-01\";","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    private LocalDate checkDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"    public CheckCommand(LocalDate checkDate) {","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"        this.checkDate \u003d checkDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"        List\u003cTask\u003e dueTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"        for (int i \u003d 0; i \u003c taskList.getListSize(); i++) {","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"            if (!task.getHasDone()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"                if (task instanceof Deadline \u0026\u0026 ((Deadline) task).getDeadline().toLocalDate().isEqual(this.checkDate)) {","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"                    dueTaskList.add(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"                if (task instanceof Event \u0026\u0026 ((Event) task).getEndDate().toLocalDate().isEqual(this.checkDate)) {","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"                    dueTaskList.add(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"        ui.showDueTaskList(dueTaskList, checkDate);","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":41}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke.command;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import duke.common.TaskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"    protected boolean isExit \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"        return this.isExit;","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":20}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke.command;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import duke.common.TaskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"import java.util.List;","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_USAGE \u003d \"deadline: it creates a deadline task \\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"            \"Example: deadline SU 2103T /by 2024-02-06 18:00\";","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"    private String description;","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    public DeadlineCommand(String description, LocalDateTime deadline) {","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"        Deadline deadlineTask \u003d new Deadline(description, false, deadline);","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"        taskList.addTask(deadlineTask);","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"        ui.showNewTask(deadlineTask, taskList);","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":30}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke.command;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import duke.common.Messages;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import duke.common.TaskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_USAGE \u003d \"delete: delete a task on the list.\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"                                                \"Example: delete 1\";","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"    private int taskNumber;","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e taskList.getListSize()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidInputException(","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_INPUT_VALUE, \"you can only mark task that are listed\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"        Task task \u003d taskList.getTask(taskNumber - 1);","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"        taskList.deleteTask(taskNumber - 1);","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"        ui.showDeleteTask(task, taskList);","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":32}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke.command;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import duke.common.Messages;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import duke.common.TaskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import duke.task.Event;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_USAGE \u003d \"event: it creates an event task.\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"            \"Example: event foo /from 2022-01-01 10:00 /to 2022-01-01 18:00\";","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    private String description;","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"    public EventCommand(String description, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws InvalidInputException {","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"        if (startDate.isAfter(endDate)) {","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidInputException(String.format(Messages.MESSAGE_INVALID_INPUT_VALUE,","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"                    \"Event start date cannot be after the end date\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"        Event event \u003d new Event(description, false, startDate, endDate);","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"        taskList.addTask(event);","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"        ui.showNewTask(event, taskList);","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":37}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke.command;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import duke.common.TaskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import java.util.List;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"public class ListCommand  extends Command{","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_USAGE \u003d COMMAND_WORD + \":\" + \"list all tasks.\\n\" + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"        ui.showTaskList(taskList);","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":20}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke.command;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import duke.common.Messages;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import duke.common.TaskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"import java.util.List;","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_USAGE \u003d \"mark: marks a task in the list as completed by taking a numerical value input.\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"            \"Example mark 1\";","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"    private int taskNumber;","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws InvalidInputException {","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e taskList.getListSize()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidInputException(","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_INPUT_VALUE, \"you can only mark task that are listed\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"        Task task \u003d taskList.getTask(taskNumber - 1);","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"        task.setHasDone(true);","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"        ui.showMaskAsDone(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":32}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke.command;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import duke.common.TaskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_USAGE \u003d \"todo: create an todo task.\\n Example: todo SU 2103T\";","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"    private String description;","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"        Todo todo \u003d new Todo(this.description, false);","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"        ui.showNewTask(todo, taskList);","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":23}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke.command;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import duke.common.Messages;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import duke.common.TaskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import java.util.List;","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    public static final String COMMAND_USAGE \u003d \"unmark: marks a task in the list as uncompleted by taking a numerical value input.\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"            \"Example mark 1\";","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    private int taskNumber;","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws InvalidInputException {","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e taskList.getListSize()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidInputException(","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_INPUT_VALUE, \"you can only mark task that are listed\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"        Task task \u003d taskList.getTask(taskNumber - 1);","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"        task.setHasDone(false);","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"        ui.showMarkAsNotDone(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":33}},{"path":"src/main/java/duke/common/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke.common;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"public class Messages {","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Bro, you have entered the command format wrong. \\n %s\";","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"    public static final String MESSAGE_INVALID_INPUT_VALUE \u003d \"Bro, you seems to have entered invalid value for the command.\\n %s\";","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"    public static final String MESSAGE_FAILED_STORAGE \u003d \"Bro, there is something wrong with the storage.\\n %s\";","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":7}},{"path":"src/main/java/duke/common/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke.common;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import java.util.List;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"public class TaskList {","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"        taskList.add(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"        taskList.remove(index);","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"    public int getListSize() {","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"        return taskList.size();","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"        return taskList.get(index);","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":29}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke.exception;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":8}},{"path":"src/main/java/duke/exception/InvalidCommandFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke.exception;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"public class InvalidCommandFormatException extends DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"    public InvalidCommandFormatException(String message) {","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"        super(message);","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":7}},{"path":"src/main/java/duke/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke.exception;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"public class InvalidInputException extends DukeException{","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"    public InvalidInputException(String errorMessage) {","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":7}},{"path":"src/main/java/duke/exception/StorageOperationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke.exception;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"public class StorageOperationException extends  DukeException{","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"    public StorageOperationException(String errorMessage) {","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":8}},{"path":"src/main/java/duke/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke.exception;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"        super(\"Bro, it seems that you have entered the wrong duke.command. You can enter one of the following commands:\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"                 + \"1. list\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"                 + \"2. mark\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"                 + \"3. unmark\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"                 + \"4. delete\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"                 + \"5. todo\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"                 + \"6. event\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"                 + \"7. deadline\");","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":15}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke.parser;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import duke.command.*;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import duke.common.Messages;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import duke.exception.InvalidCommandFormatException;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import duke.exception.UnknownCommandException;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"public class Parser {","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"    public static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    public static final Pattern DEADLINE_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003cdescription\u003e\\\\S+) /by (?\u003cdeadline\u003e.*)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"    public static final Pattern ONE_ARG_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003carg\u003e\\\\S+)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    public static final Pattern EVENT_COMMAND_FORMAT \u003d Pattern.compile(","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"            \"(?\u003cdescription\u003e\\\\S+) /from (?\u003cstartDate\u003e.*) /to (?\u003cendDate\u003e.*)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"    private static final DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"    public static Command parse(String input) throws UnknownCommandException, InvalidCommandFormatException {","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"        Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(input.trim());","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"        String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"        String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"        switch (commandWord) {","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"            case ListCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"                if (!arguments.isEmpty()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"                    throw new InvalidCommandFormatException(","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"                            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.COMMAND_USAGE));","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"                return new ListCommand();","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"            case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"                return prepareTodo(arguments);","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"            case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"                return prepareDeadline(arguments);","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"            case EventCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"                return prepareEvent(arguments);","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"            case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"                return prepareMarkOrUnmark(arguments, MarkCommand.COMMAND_WORD);","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"            case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"                return prepareMarkOrUnmark(arguments, UnmarkCommand.COMMAND_WORD);","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"            case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"                if (!arguments.isEmpty()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"                    throw new InvalidCommandFormatException(","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"Windofbitter"},"content":"                            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ByeCommand.COMMAND_USAGE));","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"Windofbitter"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"Windofbitter"},"content":"                return new ByeCommand();","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"Windofbitter"},"content":"            case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"Windofbitter"},"content":"                return prepareDelete(arguments);","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"Windofbitter"},"content":"            case CheckCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"Windofbitter"},"content":"                return prepareCheck(arguments);","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"Windofbitter"},"content":"            default:","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"Windofbitter"},"content":"                throw new UnknownCommandException();","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"Windofbitter"},"content":"    private static Command prepareTodo(String arguments) throws UnknownCommandException {","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"Windofbitter"},"content":"        Matcher matcher \u003d ONE_ARG_COMMAND_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"Windofbitter"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"Windofbitter"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"Windofbitter"},"content":"        String description \u003d matcher.group(\"arg\");","lastModifiedDate":"2024-01-26"},{"lineNumber":68,"author":{"gitId":"Windofbitter"},"content":"        return new TodoCommand(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":70,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"Windofbitter"},"content":"    private static Command prepareDelete(String arguments) throws InvalidCommandFormatException {","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"Windofbitter"},"content":"        Matcher matcher \u003d ONE_ARG_COMMAND_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2024-01-26"},{"lineNumber":73,"author":{"gitId":"Windofbitter"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":74,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidCommandFormatException(","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.COMMAND_USAGE));","lastModifiedDate":"2024-01-26"},{"lineNumber":76,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":77,"author":{"gitId":"Windofbitter"},"content":"        String arg \u003d matcher.group(\"arg\");","lastModifiedDate":"2024-01-26"},{"lineNumber":78,"author":{"gitId":"Windofbitter"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":79,"author":{"gitId":"Windofbitter"},"content":"            int taskNumber \u003d Integer.parseInt(arg);","lastModifiedDate":"2024-01-26"},{"lineNumber":80,"author":{"gitId":"Windofbitter"},"content":"            return new DeleteCommand(taskNumber);","lastModifiedDate":"2024-01-26"},{"lineNumber":81,"author":{"gitId":"Windofbitter"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":82,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidCommandFormatException(","lastModifiedDate":"2024-01-26"},{"lineNumber":83,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.COMMAND_USAGE));","lastModifiedDate":"2024-01-26"},{"lineNumber":84,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":85,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":86,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":87,"author":{"gitId":"Windofbitter"},"content":"    private static Command prepareDeadline(String arguments) throws InvalidCommandFormatException {","lastModifiedDate":"2024-01-26"},{"lineNumber":88,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(arguments);","lastModifiedDate":"2024-01-26"},{"lineNumber":89,"author":{"gitId":"Windofbitter"},"content":"        Matcher matcher \u003d DEADLINE_COMMAND_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2024-01-26"},{"lineNumber":90,"author":{"gitId":"Windofbitter"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":91,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidCommandFormatException(","lastModifiedDate":"2024-01-26"},{"lineNumber":92,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeadlineCommand.COMMAND_USAGE));","lastModifiedDate":"2024-01-26"},{"lineNumber":93,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":94,"author":{"gitId":"Windofbitter"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":95,"author":{"gitId":"Windofbitter"},"content":"            String description \u003d matcher.group(\"description\");","lastModifiedDate":"2024-01-26"},{"lineNumber":96,"author":{"gitId":"Windofbitter"},"content":"            String deadline \u003d matcher.group(\"deadline\");","lastModifiedDate":"2024-01-26"},{"lineNumber":97,"author":{"gitId":"Windofbitter"},"content":"            LocalDateTime deadlineTime \u003d LocalDateTime.parse(deadline, dateTimeFormatter);","lastModifiedDate":"2024-01-26"},{"lineNumber":98,"author":{"gitId":"Windofbitter"},"content":"            return new DeadlineCommand(description, deadlineTime);","lastModifiedDate":"2024-01-26"},{"lineNumber":99,"author":{"gitId":"Windofbitter"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":100,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidCommandFormatException(","lastModifiedDate":"2024-01-26"},{"lineNumber":101,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeadlineCommand.COMMAND_USAGE));","lastModifiedDate":"2024-01-26"},{"lineNumber":102,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":103,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":104,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":105,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":106,"author":{"gitId":"Windofbitter"},"content":"    private static Command prepareMarkOrUnmark(String arguments, String commandWord) throws","lastModifiedDate":"2024-01-26"},{"lineNumber":107,"author":{"gitId":"Windofbitter"},"content":"            InvalidCommandFormatException {","lastModifiedDate":"2024-01-26"},{"lineNumber":108,"author":{"gitId":"Windofbitter"},"content":"        Matcher matcher \u003d ONE_ARG_COMMAND_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2024-01-26"},{"lineNumber":109,"author":{"gitId":"Windofbitter"},"content":"        String commandUsage \u003d commandWord.equals(\"mark\") ? MarkCommand.COMMAND_USAGE : UnmarkCommand.COMMAND_USAGE;","lastModifiedDate":"2024-01-26"},{"lineNumber":110,"author":{"gitId":"Windofbitter"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":111,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidCommandFormatException(","lastModifiedDate":"2024-01-26"},{"lineNumber":112,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, commandUsage));","lastModifiedDate":"2024-01-26"},{"lineNumber":113,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":114,"author":{"gitId":"Windofbitter"},"content":"        String arg \u003d matcher.group(\"arg\");","lastModifiedDate":"2024-01-26"},{"lineNumber":115,"author":{"gitId":"Windofbitter"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":116,"author":{"gitId":"Windofbitter"},"content":"            int taskNumber \u003d Integer.parseInt(arg);","lastModifiedDate":"2024-01-26"},{"lineNumber":117,"author":{"gitId":"Windofbitter"},"content":"            return commandWord.equals(MarkCommand.COMMAND_WORD) ? new MarkCommand(taskNumber) : new UnmarkCommand(","lastModifiedDate":"2024-01-26"},{"lineNumber":118,"author":{"gitId":"Windofbitter"},"content":"                    taskNumber);","lastModifiedDate":"2024-01-26"},{"lineNumber":119,"author":{"gitId":"Windofbitter"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":120,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidCommandFormatException(","lastModifiedDate":"2024-01-26"},{"lineNumber":121,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, commandUsage));","lastModifiedDate":"2024-01-26"},{"lineNumber":122,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":123,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":124,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":125,"author":{"gitId":"Windofbitter"},"content":"    private static Command prepareEvent(String arguments) throws InvalidCommandFormatException {","lastModifiedDate":"2024-01-26"},{"lineNumber":126,"author":{"gitId":"Windofbitter"},"content":"        Matcher matcher \u003d EVENT_COMMAND_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2024-01-26"},{"lineNumber":127,"author":{"gitId":"Windofbitter"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":128,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidCommandFormatException(","lastModifiedDate":"2024-01-26"},{"lineNumber":129,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EventCommand.COMMAND_USAGE));","lastModifiedDate":"2024-01-26"},{"lineNumber":130,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":131,"author":{"gitId":"Windofbitter"},"content":"        String description \u003d matcher.group(\"description\");","lastModifiedDate":"2024-01-26"},{"lineNumber":132,"author":{"gitId":"Windofbitter"},"content":"        String startDate \u003d matcher.group(\"startDate\");","lastModifiedDate":"2024-01-26"},{"lineNumber":133,"author":{"gitId":"Windofbitter"},"content":"        String endDate \u003d matcher.group(\"endDate\");","lastModifiedDate":"2024-01-26"},{"lineNumber":134,"author":{"gitId":"Windofbitter"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":135,"author":{"gitId":"Windofbitter"},"content":"            return new EventCommand(description, LocalDateTime.parse(startDate, dateTimeFormatter),","lastModifiedDate":"2024-01-26"},{"lineNumber":136,"author":{"gitId":"Windofbitter"},"content":"                    LocalDateTime.parse(endDate, dateTimeFormatter));","lastModifiedDate":"2024-01-26"},{"lineNumber":137,"author":{"gitId":"Windofbitter"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":138,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidCommandFormatException(","lastModifiedDate":"2024-01-26"},{"lineNumber":139,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EventCommand.COMMAND_USAGE));","lastModifiedDate":"2024-01-26"},{"lineNumber":140,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":141,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":142,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":143,"author":{"gitId":"Windofbitter"},"content":"    private static Command prepareCheck(String arguments) throws InvalidCommandFormatException {","lastModifiedDate":"2024-01-26"},{"lineNumber":144,"author":{"gitId":"Windofbitter"},"content":"        Matcher matcher \u003d ONE_ARG_COMMAND_FORMAT.matcher(arguments.trim());","lastModifiedDate":"2024-01-26"},{"lineNumber":145,"author":{"gitId":"Windofbitter"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":146,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidCommandFormatException(","lastModifiedDate":"2024-01-26"},{"lineNumber":147,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, CheckCommand.COMMAND_USAGE));","lastModifiedDate":"2024-01-26"},{"lineNumber":148,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":149,"author":{"gitId":"Windofbitter"},"content":"        String arg \u003d matcher.group(\"arg\");","lastModifiedDate":"2024-01-26"},{"lineNumber":150,"author":{"gitId":"Windofbitter"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":151,"author":{"gitId":"Windofbitter"},"content":"            LocalDate checkDate \u003d LocalDate.parse(arg, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":152,"author":{"gitId":"Windofbitter"},"content":"            return new CheckCommand(checkDate);","lastModifiedDate":"2024-01-26"},{"lineNumber":153,"author":{"gitId":"Windofbitter"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":154,"author":{"gitId":"Windofbitter"},"content":"            throw new InvalidCommandFormatException(","lastModifiedDate":"2024-01-26"},{"lineNumber":155,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, CheckCommand.COMMAND_USAGE));","lastModifiedDate":"2024-01-26"},{"lineNumber":156,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":157,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":158,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":159,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":159}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke.storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import duke.common.Messages;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import duke.common.TaskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import duke.exception.StorageOperationException;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"import java.util.List;","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"public class Storage {","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"    public static final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"    public void save(TaskList taskList) throws StorageOperationException {","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"            FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"            for (int i \u003d 0; i \u003c taskList.getListSize(); i++) {","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"                String taskString \u003d TaskEncoder.encodeTask(taskList.getTask(i));","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"                fileWriter.write(taskString);","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"                fileWriter.write(\"\\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"            fileWriter.close();","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"            throw new StorageOperationException(","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_FAILED_STORAGE, \"failed to save tasks.\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"    public List\u003cTask\u003e load() throws StorageOperationException {","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(FILE_PATH));","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"            String line;","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"            List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"            while((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"                taskList.add(TaskDecoder.decodeTask(line));","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"            return taskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"            throw new StorageOperationException(","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_FAILED_STORAGE, \"File may be corrupted\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":47}},{"path":"src/main/java/duke/storage/TaskDecoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke.storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import duke.common.Messages;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import duke.exception.StorageOperationException;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import duke.task.Event;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"public class TaskDecoder {","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    private static final Pattern DEADLINE_SAVE_FORMAT \u003d Pattern.compile(","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"            \"D \\\\| (?\u003chasDone\u003e(0|1)) \\\\| (?\u003ctaskDescription\u003e.*) \\\\| (?\u003cdeadline\u003e.*)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    private static final Pattern TODO_SAVE_FORMAT \u003d Pattern.compile(","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"            \"T \\\\| (?\u003chasDone\u003e(0|1)) \\\\| (?\u003ctaskDescription\u003e.*)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"    private static final Pattern EVENT_SAVE_FORMAT \u003d Pattern.compile(\"E \\\\| (?\u003chasDone\u003e(0|1)) \\\\|\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"            \" (?\u003ctaskDescription\u003e.*) \\\\| (?\u003cstartDate\u003e.*)\\\\-(?\u003cendDate\u003e.*)\");","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"    private static final DateTimeFormatter datetimeFormatter \u003d DateTimeFormatter.ofPattern(\"MM dd yyyy HH:mm\");","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"    public static Task decodeTask(String taskString) throws StorageOperationException {","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"        Matcher deadlineMatcher \u003d DEADLINE_SAVE_FORMAT.matcher(taskString.trim());","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"        Matcher todoMatcher \u003d TODO_SAVE_FORMAT.matcher(taskString.trim());","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"        Matcher eventMatcher \u003d EVENT_SAVE_FORMAT.matcher(taskString.trim());","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"            if (deadlineMatcher.matches()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"                return decodeDeadline(deadlineMatcher);","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"            } else if (eventMatcher.matches()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"                return decodeEvent(eventMatcher);","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"            } else if (todoMatcher.matches()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"                return decodeTodo(todoMatcher);","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"            } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"                throw new StorageOperationException(","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"                        String.format(Messages.MESSAGE_FAILED_STORAGE, \"File may be corrupted\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"            throw new StorageOperationException(","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"                    String.format(Messages.MESSAGE_FAILED_STORAGE, \"File may be corrupted\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"    private static Task decodeTodo(Matcher todoMatcher) {","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"        boolean hasDone \u003d !todoMatcher.group(\"hasDone\").equals(\"0\");","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"        String taskDescription \u003d todoMatcher.group(\"taskDescription\");","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"        return new Todo(taskDescription, hasDone);","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"Windofbitter"},"content":"    private static Task decodeDeadline(Matcher deadlineMatcher) {","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"Windofbitter"},"content":"        boolean hasDone \u003d !deadlineMatcher.group(\"hasDone\").equals(\"0\");","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"Windofbitter"},"content":"        String taskDescription \u003d deadlineMatcher.group(\"taskDescription\");","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"Windofbitter"},"content":"        LocalDateTime deadline \u003d LocalDateTime.parse(deadlineMatcher.group(\"deadline\"), datetimeFormatter);","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"Windofbitter"},"content":"        return new Deadline(taskDescription, hasDone, deadline);","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"Windofbitter"},"content":"    private static Task decodeEvent(Matcher eventMatcher) {","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"Windofbitter"},"content":"        boolean hasDone \u003d !eventMatcher.group(\"hasDone\").equals(\"0\");","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"Windofbitter"},"content":"        String taskDescription \u003d eventMatcher.group(\"taskDescription\");","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"Windofbitter"},"content":"        LocalDateTime startDate \u003d LocalDateTime.parse(eventMatcher.group(\"startDate\"), datetimeFormatter);","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"Windofbitter"},"content":"        LocalDateTime endDate \u003d LocalDateTime.parse(eventMatcher.group(\"endDate\"), datetimeFormatter);","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"Windofbitter"},"content":"        return new Event(taskDescription, hasDone, startDate, endDate);","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":66}},{"path":"src/main/java/duke/storage/TaskEncoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke.storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import duke.task.Event;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"public class TaskEncoder {","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"    public static String encodeTask(Task task) {","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"        int hasDoneInt \u003d task.getHasDone() ? 1 : 0;","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"            System.out.printf(\"T | %d | %s %n\", hasDoneInt, task.getDescription());","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"            return String.format(\"T | %d | %s \", hasDoneInt, task.getDescription());","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"        else if (task instanceof Deadline) {","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"            return String.format(\"D | %d | %s | %s\", hasDoneInt, task.getDescription(),","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"                    ((Deadline) task).getDeadlineString());","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"        else {","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"            return String.format(\"T | %d | %s | %s-%s\", hasDoneInt, event.getDescription(),","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"                    event.getStartDateString(), event.getEndDateString());","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":25}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke.task;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"    private String deadlineString;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"        return deadline;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    public String getDeadlineString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"        return deadlineString;","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    public void setDeadlineString(String deadlineString) {","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"        this.deadlineString \u003d deadlineString;","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"    public Deadline(String description, boolean hasDone, LocalDateTime deadline) {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"        this.deadlineString \u003d deadline.format(DateTimeFormatter.ofPattern(\"MM dd yyyy HH:mm\"));","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"        super.setDescription(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"        super.setHasDone(hasDone);","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"    public void setDeadline(LocalDateTime deadline) {","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-01-19"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"    public String toString() {","lastModifiedDate":"2024-01-19"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.deadlineString + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-19"}],"authorContributionMap":{"Windofbitter":39}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke.task;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"    private LocalDateTime startDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"    private String startDateString;","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"    private String endDateString;","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    public Event(String description, boolean hasDone, LocalDateTime startDate, LocalDateTime endDate) {","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"        this.startDateString \u003d startDate.format(DateTimeFormatter.ofPattern(\"MM dd yyyy HH:mm\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"        this.endDateString \u003d endDate.format(DateTimeFormatter.ofPattern(\"MM dd yyyy HH:mm\"));","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"        super.setDescription(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"        super.setHasDone(hasDone);","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    public LocalDateTime getStartDate() {","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"        return startDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"    public LocalDateTime getEndDate() {","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"        return endDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"    public void setStartDate(LocalDateTime startDate) {","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"    public void setEndDate(LocalDateTime endDate) {","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"    public String getStartDateString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"        return startDateString;","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"    public String getEndDateString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"        return endDateString;","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"Windofbitter"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"Windofbitter"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.startDateString + \" to: \" + this.endDateString + \")\";","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":58}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke.task;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"public class Task {","lastModifiedDate":"2024-01-19"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"    private String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"    private boolean hasDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"        return description;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    public boolean getHasDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"        return hasDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    public Task() {","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-19"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-19"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"        this.hasDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"    public void setHasDone(boolean isDone) {","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"        this.hasDone \u003d isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-01-19"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"    public String toString() {","lastModifiedDate":"2024-01-19"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"        if (this.hasDone) {","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"            return \"[X] \" + this.description;","lastModifiedDate":"2024-01-19"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"        } else {","lastModifiedDate":"2024-01-19"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"            return \"[ ] \" + this.description;","lastModifiedDate":"2024-01-19"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-19"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-19"}],"authorContributionMap":{"Windofbitter":40}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke.task;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"    public Todo(String input) {","lastModifiedDate":"2024-01-19"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"        super(input);","lastModifiedDate":"2024-01-19"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"    public Todo(String description, Boolean hasDone) {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"        super.setHasDone(hasDone);","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"        super.setDescription(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"    @Override","lastModifiedDate":"2024-01-19"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"    public String toString() {","lastModifiedDate":"2024-01-19"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-19"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-19"}],"authorContributionMap":{"Windofbitter":15}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"package duke.ui;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"import duke.common.TaskList;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"import java.util.List;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"public class Ui {","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"    private static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"    private Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"    public String readCommand() {","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(\"Hello I\u0027m wind\" + \"\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"                + \"What can I do for you?\");","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"    public void showLoadingException() {","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(\"Bro, something bad happens during loading, I can\u0027t load your tasks\");","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Windofbitter"},"content":"    public void showError(String message) {","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(message);","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"Windofbitter"},"content":"    public void showTaskList(TaskList taskList) {","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"Windofbitter"},"content":"        for (int i \u003d 0; i \u003c taskList.getListSize(); i++) {","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"Windofbitter"},"content":"            int number \u003d i + 1;","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"Windofbitter"},"content":"            System.out.println(number + \".\" + taskList.getTask(i));","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"Windofbitter"},"content":"    public void showNewTask(Task task, TaskList taskList) {","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"Windofbitter"},"content":"        System.out.printf(\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"Windofbitter"},"content":"                \"%s\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"Windofbitter"},"content":"                \"Now you have %d tasks in the list%n\", task, taskList.getListSize());","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"Windofbitter"},"content":"    public void showMaskAsDone(Task task) {","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"Windofbitter"},"content":"                + \" \" + task);","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"Windofbitter"},"content":"    public void showMarkAsNotDone(Task task) {","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"Windofbitter"},"content":"                \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"Windofbitter"},"content":"                        + \" \" + task);","lastModifiedDate":"2024-01-26"},{"lineNumber":68,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":70,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"Windofbitter"},"content":"    public void showDeleteTask(Task task, TaskList taskList) {","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-01-26"},{"lineNumber":73,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":74,"author":{"gitId":"Windofbitter"},"content":"                \" \" + task + \"\\n\" +","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"Windofbitter"},"content":"                \"Now you have \" + taskList.getListSize() + \" tasks in the list\");","lastModifiedDate":"2024-01-26"},{"lineNumber":76,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-01-26"},{"lineNumber":77,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":78,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":79,"author":{"gitId":"Windofbitter"},"content":"    public void showDueTaskList(List\u003cTask\u003e taskList, LocalDate localDate) {","lastModifiedDate":"2024-01-26"},{"lineNumber":80,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-01-26"},{"lineNumber":81,"author":{"gitId":"Windofbitter"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":82,"author":{"gitId":"Windofbitter"},"content":"            System.out.printf(\"You have no task due on %s\\n\",","lastModifiedDate":"2024-01-26"},{"lineNumber":83,"author":{"gitId":"Windofbitter"},"content":"                    localDate.format(DateTimeFormatter.ofPattern(\"MM dd yy\")));","lastModifiedDate":"2024-01-26"},{"lineNumber":84,"author":{"gitId":"Windofbitter"},"content":"        } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":85,"author":{"gitId":"Windofbitter"},"content":"            System.out.printf(\"The following tasks are due on %s\\n\",","lastModifiedDate":"2024-01-26"},{"lineNumber":86,"author":{"gitId":"Windofbitter"},"content":"                    localDate.format(DateTimeFormatter.ofPattern(\"MM dd yy\")));","lastModifiedDate":"2024-01-26"},{"lineNumber":87,"author":{"gitId":"Windofbitter"},"content":"            for(int i \u003d 0; i\u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-26"},{"lineNumber":88,"author":{"gitId":"Windofbitter"},"content":"                System.out.println(i + 1 + \".\" + \" \" + taskList.get(i));","lastModifiedDate":"2024-01-26"},{"lineNumber":89,"author":{"gitId":"Windofbitter"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":90,"author":{"gitId":"Windofbitter"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":91,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-01-26"},{"lineNumber":92,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":93,"author":{"gitId":"Windofbitter"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":94,"author":{"gitId":"Windofbitter"},"content":"    public void showGoodBye() {","lastModifiedDate":"2024-01-26"},{"lineNumber":95,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-01-26"},{"lineNumber":96,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":97,"author":{"gitId":"Windofbitter"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-01-26"},{"lineNumber":98,"author":{"gitId":"Windofbitter"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":99,"author":{"gitId":"Windofbitter"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Windofbitter":99}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Windofbitter"},"content":"blah","lastModifiedDate":"2024-01-20"},{"lineNumber":2,"author":{"gitId":"Windofbitter"},"content":"mark","lastModifiedDate":"2024-01-20"},{"lineNumber":3,"author":{"gitId":"Windofbitter"},"content":"mark 1","lastModifiedDate":"2024-01-20"},{"lineNumber":4,"author":{"gitId":"Windofbitter"},"content":"mark 1 2","lastModifiedDate":"2024-01-20"},{"lineNumber":5,"author":{"gitId":"Windofbitter"},"content":"unmark","lastModifiedDate":"2024-01-20"},{"lineNumber":6,"author":{"gitId":"Windofbitter"},"content":"unmark 1","lastModifiedDate":"2024-01-20"},{"lineNumber":7,"author":{"gitId":"Windofbitter"},"content":"unmark 1 2","lastModifiedDate":"2024-01-20"},{"lineNumber":8,"author":{"gitId":"Windofbitter"},"content":"delete","lastModifiedDate":"2024-01-20"},{"lineNumber":9,"author":{"gitId":"Windofbitter"},"content":"delete 1","lastModifiedDate":"2024-01-20"},{"lineNumber":10,"author":{"gitId":"Windofbitter"},"content":"delete 1 2","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"Windofbitter"},"content":"todo","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"Windofbitter"},"content":"deadline","lastModifiedDate":"2024-01-20"},{"lineNumber":13,"author":{"gitId":"Windofbitter"},"content":"deadline hello","lastModifiedDate":"2024-01-20"},{"lineNumber":14,"author":{"gitId":"Windofbitter"},"content":"deadline hello /a","lastModifiedDate":"2024-01-20"},{"lineNumber":15,"author":{"gitId":"Windofbitter"},"content":"deadline hello /by","lastModifiedDate":"2024-01-20"},{"lineNumber":16,"author":{"gitId":"Windofbitter"},"content":"event","lastModifiedDate":"2024-01-20"},{"lineNumber":17,"author":{"gitId":"Windofbitter"},"content":"event hello","lastModifiedDate":"2024-01-20"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"event hello /a","lastModifiedDate":"2024-01-20"},{"lineNumber":19,"author":{"gitId":"Windofbitter"},"content":"event hello /from /b","lastModifiedDate":"2024-01-20"},{"lineNumber":20,"author":{"gitId":"Windofbitter"},"content":"event hello /from /to","lastModifiedDate":"2024-01-20"},{"lineNumber":21,"author":{"gitId":"Windofbitter"},"content":"todo SU All Courses","lastModifiedDate":"2024-01-20"},{"lineNumber":22,"author":{"gitId":"Windofbitter"},"content":"deadline Eat /by 9pm","lastModifiedDate":"2024-01-20"},{"lineNumber":23,"author":{"gitId":"Windofbitter"},"content":"event Exams /from 9am /to 9pm","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"Windofbitter"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":25,"author":{"gitId":"Windofbitter"},"content":"mark 1","lastModifiedDate":"2024-01-20"},{"lineNumber":26,"author":{"gitId":"Windofbitter"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":27,"author":{"gitId":"Windofbitter"},"content":"unmark 1","lastModifiedDate":"2024-01-20"},{"lineNumber":28,"author":{"gitId":"Windofbitter"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":29,"author":{"gitId":"Windofbitter"},"content":"delete 1","lastModifiedDate":"2024-01-20"},{"lineNumber":30,"author":{"gitId":"Windofbitter"},"content":"bye","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"Windofbitter":30}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Windofbitter"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Windofbitter":1,"-":20}}]
