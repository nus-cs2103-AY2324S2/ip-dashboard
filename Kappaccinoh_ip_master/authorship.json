[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"checkstyle {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"    mainClass.set(\"Campus\")","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"    archiveBaseName \u003d \"campus\"","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Kappaccinoh":22,"-":40}},{"path":"src/main/java/campus/Campus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package campus;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import campus.infrastructure.Parser;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import campus.infrastructure.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import campus.infrastructure.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import campus.infrastructure.Ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":" * Contains the logic for the ChatBot named \u0027Campus\u0027.","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"public class Campus {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"    private final Ui ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"    private final Parser parser;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"     * Creation of a Campus instance with hardcoded destination for textfile.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"    @SuppressWarnings(\"checkstyle:AbbreviationAsWordInName\")","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"    public Campus() {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"        final String FILE_PATH \u003d \"src/main/java/campus/dataTest.txt\";","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"        Storage storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"        this.parser \u003d new Parser(this.ui, taskList, storage);","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"     * Creates a new instance of Campus.","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"     * @param args main args.","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"        new Campus();","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"     * Hands off the string input to the parser class in which the parse message method is invoked to handle","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"     * how to process the command.","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"     * @param input the user\u0027s message in a string format.","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"     * @return the appropriate response of type string.","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"    public String parseMessage(String input) {","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"        String message \u003d this.parser.parseMessage(input);","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"        assert (message !\u003d null);","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"        return message;","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"    public String printGreeting() {","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"        String message \u003d this.ui.printGreeting();","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"        assert (message !\u003d null);","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"        return message;","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"    public String printExiting() {","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"        String message \u003d this.ui.printExiting();","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"        assert (message !\u003d null);","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"        return message;","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Kappaccinoh":58}},{"path":"src/main/java/campus/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package campus;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import campus.javafxGUI.Main;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":" * A launcher class that contains the main Campus Bot logic and UI using JavaFx.","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"public class Launcher {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Kappaccinoh":13}},{"path":"src/main/java/campus/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"T | 0 | do homework","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"E | 0 | dinner with friends | 1900 29/01/2024 | 2200 29/01/2024","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"D | 0 | buy cny decorations | 2359 30/01/2024","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Kappaccinoh":3}},{"path":"src/main/java/campus/dataTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"T | 0 | swim","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Kappaccinoh":1}},{"path":"src/main/java/campus/exceptions/CampusException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package campus.exceptions;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":" * Exception class for the Campus Class, handles in usually throwing errors with a specified message that details","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":" * the cause of the error.","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"public class CampusException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"    public CampusException() {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"        super(\"An error has occurred\");","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"    public CampusException(String s) {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"        super(s);","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Kappaccinoh":14}},{"path":"src/main/java/campus/infrastructure/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package campus.infrastructure;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import campus.exceptions.CampusException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import campus.tasks.Deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import campus.tasks.Event;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import campus.tasks.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import campus.tasks.ToDos;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":" * Parser handles all the logic for when a command is entered into the ChatBot, it serves as the bridge between the","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":" * storage object and taskList object and is the main handler for data travelling between these two fields","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"public class Parser {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"    private final Ui ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"    private final Storage storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"     * Initialises the Parser class, which requires a ui, tasklist and storage field.","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"     * @param ui The Ui Class","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"     * @param taskList The TaskList Class","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"     * @param storage The Storage Class","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"    public Parser(Ui ui, TaskList taskList, Storage storage) {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"        this.taskList.updateListFromFile(storage.getListOfStrings());","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"     * Parses the user\u0027s message, works as the main logic tree to handle the user\u0027s commands","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"    public String parseMessage(String userInput) {","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"            String message \u003d this.processCommand(userInput);","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"            assert (message !\u003d null);","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"            return message;","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"        } catch (CampusException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"            return this.ui.displayErrorMessage(e);","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"     * Process the command fed by the user and decides which path of execution to go next, also handles null cases","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"     * and unknown command cases","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"     * @param userInput the user command input","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"     * @return boolean true for continue feeding, false only in the case of \"bye\" that is to exit the ChatBot","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"     * @throws CampusException Exception in the case that the command is not understood","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"    public String processCommand(String userInput) throws CampusException {","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"        String msg \u003d null;","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"        String[] arr \u003d userInput.trim().split(\" \", 2);","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"        String firstWord \u003d arr[0].trim();","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"        String remaining \u003d arr.length \u003e 1 ? arr[1].trim() : \"\";","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"        switch (firstWord) {","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"        case \"list\":","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"Kappaccinoh"},"content":"            // fallthrough","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"Kappaccinoh"},"content":"        case \"mark\":","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"Kappaccinoh"},"content":"            // fallthrough","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"        case \"unmark\":","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"Kappaccinoh"},"content":"            // fallthrough","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"Kappaccinoh"},"content":"        case \"delete\":","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"Kappaccinoh"},"content":"            msg \u003d handleUpdateCommands(firstWord, userInput);","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"Kappaccinoh"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"Kappaccinoh"},"content":"        case \"todo\":","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"Kappaccinoh"},"content":"            // fallthrough","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"Kappaccinoh"},"content":"        case \"deadline\":","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"Kappaccinoh"},"content":"            // fallthrough","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"Kappaccinoh"},"content":"        case \"event\":","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"Kappaccinoh"},"content":"            msg \u003d handleTaskCommand(firstWord, remaining);","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"Kappaccinoh"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"Kappaccinoh"},"content":"        case \"bye\":","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"Kappaccinoh"},"content":"            return ui.printExiting();","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"Kappaccinoh"},"content":"        case \"\":","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"Kappaccinoh"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"Kappaccinoh"},"content":"        case \"find\":","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"Kappaccinoh"},"content":"            msg \u003d handleFindCommand(remaining);","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"Kappaccinoh"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"Kappaccinoh"},"content":"        case \"help\":","lastModifiedDate":"2024-02-14"},{"lineNumber":84,"author":{"gitId":"Kappaccinoh"},"content":"            msg \u003d handleHelpCommand();","lastModifiedDate":"2024-02-14"},{"lineNumber":85,"author":{"gitId":"Kappaccinoh"},"content":"            break;","lastModifiedDate":"2024-02-14"},{"lineNumber":86,"author":{"gitId":"Kappaccinoh"},"content":"        default:","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"Kappaccinoh"},"content":"            throw new CampusException(\"Sorry, I don\u0027t understand that command,\"","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"Kappaccinoh"},"content":"                    + \" please check for potential spelling errors\");","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"Kappaccinoh"},"content":"        this.storage.updateFileFromList(this.taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"Kappaccinoh"},"content":"        assert (msg !\u003d null);","lastModifiedDate":"2024-02-11"},{"lineNumber":92,"author":{"gitId":"Kappaccinoh"},"content":"        return msg;","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"Kappaccinoh"},"content":"    private String handleHelpCommand() {","lastModifiedDate":"2024-02-14"},{"lineNumber":96,"author":{"gitId":"Kappaccinoh"},"content":"        String message \u003d \"CampusBot\u0027s Full Command List\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":97,"author":{"gitId":"Kappaccinoh"},"content":"                + \"The following commands are used to manipulate entries in the list of tasks:\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":98,"author":{"gitId":"Kappaccinoh"},"content":"                + \"\u0027mark\u0027 - marks a particular task as complete\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":99,"author":{"gitId":"Kappaccinoh"},"content":"                + \"\u0027unmark\u0027 - unmarks a particular task as incomplete\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":100,"author":{"gitId":"Kappaccinoh"},"content":"                + \"\u0027delete\u0027 - deletes a particular task\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":101,"author":{"gitId":"Kappaccinoh"},"content":"                + \"The following commands are used to create a new entry in the list of tasks:\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":102,"author":{"gitId":"Kappaccinoh"},"content":"                + \"\u0027todo\u0027 - creates a new todo task in the list\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":103,"author":{"gitId":"Kappaccinoh"},"content":"                + \"\u0027deadline\u0027 - creates a new deadline task in the list\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":104,"author":{"gitId":"Kappaccinoh"},"content":"                + \"\u0027event\u0027 - creates a new event task in the list\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":105,"author":{"gitId":"Kappaccinoh"},"content":"                + \"The following commands are admin related commands used to navigate the ChatBot\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":106,"author":{"gitId":"Kappaccinoh"},"content":"                + \"\u0027list\u0027 - displays the current list of tasks\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":107,"author":{"gitId":"Kappaccinoh"},"content":"                + \"\u0027find\u0027 - searches for a task in the list by the keyword that proceeds the find command\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":108,"author":{"gitId":"Kappaccinoh"},"content":"                + \"\u0027help\u0027 - displays the help page, the one you are seeing now :)\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":109,"author":{"gitId":"Kappaccinoh"},"content":"                + \"\u0027bye\u0027 - exits the ChatBot\\n\";","lastModifiedDate":"2024-02-14"},{"lineNumber":110,"author":{"gitId":"Kappaccinoh"},"content":"        return message;","lastModifiedDate":"2024-02-14"},{"lineNumber":111,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":112,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":113,"author":{"gitId":"Kappaccinoh"},"content":"    private String handleTaskCommand(String command, String details) throws CampusException {","lastModifiedDate":"2024-02-11"},{"lineNumber":114,"author":{"gitId":"Kappaccinoh"},"content":"        switch (command) {","lastModifiedDate":"2024-02-11"},{"lineNumber":115,"author":{"gitId":"Kappaccinoh"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-11"},{"lineNumber":116,"author":{"gitId":"Kappaccinoh"},"content":"            return handleTodoCommand(details);","lastModifiedDate":"2024-02-11"},{"lineNumber":117,"author":{"gitId":"Kappaccinoh"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-11"},{"lineNumber":118,"author":{"gitId":"Kappaccinoh"},"content":"            return handleDeadlineCommand(details);","lastModifiedDate":"2024-02-11"},{"lineNumber":119,"author":{"gitId":"Kappaccinoh"},"content":"        case \"event\":","lastModifiedDate":"2024-02-11"},{"lineNumber":120,"author":{"gitId":"Kappaccinoh"},"content":"            return handleEventCommand(details);","lastModifiedDate":"2024-02-11"},{"lineNumber":121,"author":{"gitId":"Kappaccinoh"},"content":"        default:","lastModifiedDate":"2024-02-11"},{"lineNumber":122,"author":{"gitId":"Kappaccinoh"},"content":"            throw new CampusException(\"Invalid task command\");","lastModifiedDate":"2024-02-11"},{"lineNumber":123,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":124,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":125,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":126,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":127,"author":{"gitId":"Kappaccinoh"},"content":"     * Function to handle the command of type \u0027find\u0027 which deals with filtering a specific substring.","lastModifiedDate":"2024-02-19"},{"lineNumber":128,"author":{"gitId":"Kappaccinoh"},"content":"     * @param remaining the remaining portion of the command line entered","lastModifiedDate":"2024-02-06"},{"lineNumber":129,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":130,"author":{"gitId":"Kappaccinoh"},"content":"    public String handleFindCommand(String remaining) {","lastModifiedDate":"2024-02-04"},{"lineNumber":131,"author":{"gitId":"Kappaccinoh"},"content":"        TaskList tempTaskList \u003d this.taskList.getTaskListWhere(remaining);","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"Kappaccinoh"},"content":"        return this.ui.printTaskList(tempTaskList);","lastModifiedDate":"2024-02-11"},{"lineNumber":133,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":134,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":135,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"Kappaccinoh"},"content":"     * Handles the commands for mark, unmark and delete - passes it to the taskList object which contains methods","lastModifiedDate":"2024-01-30"},{"lineNumber":137,"author":{"gitId":"Kappaccinoh"},"content":"     * to deal with manipulation of the task.","lastModifiedDate":"2024-02-14"},{"lineNumber":138,"author":{"gitId":"Kappaccinoh"},"content":"     * @param command mark/unmark/delete.","lastModifiedDate":"2024-02-14"},{"lineNumber":139,"author":{"gitId":"Kappaccinoh"},"content":"     * @param userInput the index of the list.","lastModifiedDate":"2024-02-14"},{"lineNumber":140,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"Kappaccinoh"},"content":"    public String handleUpdateCommands(String command, String userInput) {","lastModifiedDate":"2024-02-04"},{"lineNumber":142,"author":{"gitId":"Kappaccinoh"},"content":"        Task task \u003d this.taskList.getIthTaskString(userInput);","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"Kappaccinoh"},"content":"        String msg \u003d null;","lastModifiedDate":"2024-02-04"},{"lineNumber":144,"author":{"gitId":"Kappaccinoh"},"content":"        switch (command) {","lastModifiedDate":"2024-01-29"},{"lineNumber":145,"author":{"gitId":"Kappaccinoh"},"content":"        case \"mark\":","lastModifiedDate":"2024-01-29"},{"lineNumber":146,"author":{"gitId":"Kappaccinoh"},"content":"            this.taskList.markDone(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":147,"author":{"gitId":"Kappaccinoh"},"content":"            msg \u003d this.ui.markDone(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":148,"author":{"gitId":"Kappaccinoh"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":149,"author":{"gitId":"Kappaccinoh"},"content":"        case \"unmark\":","lastModifiedDate":"2024-01-29"},{"lineNumber":150,"author":{"gitId":"Kappaccinoh"},"content":"            this.taskList.markUndone(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":151,"author":{"gitId":"Kappaccinoh"},"content":"            msg \u003d this.ui.markUndone(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":152,"author":{"gitId":"Kappaccinoh"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":153,"author":{"gitId":"Kappaccinoh"},"content":"        case \"delete\":","lastModifiedDate":"2024-01-29"},{"lineNumber":154,"author":{"gitId":"Kappaccinoh"},"content":"            this.taskList.deleteTask(task);","lastModifiedDate":"2024-02-11"},{"lineNumber":155,"author":{"gitId":"Kappaccinoh"},"content":"            msg \u003d this.ui.delete(this.taskList, task);","lastModifiedDate":"2024-02-04"},{"lineNumber":156,"author":{"gitId":"Kappaccinoh"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":157,"author":{"gitId":"Kappaccinoh"},"content":"        default:","lastModifiedDate":"2024-02-06"},{"lineNumber":158,"author":{"gitId":"Kappaccinoh"},"content":"            assert(false);","lastModifiedDate":"2024-02-11"},{"lineNumber":159,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":160,"author":{"gitId":"Kappaccinoh"},"content":"        assert(msg !\u003d null);","lastModifiedDate":"2024-02-11"},{"lineNumber":161,"author":{"gitId":"Kappaccinoh"},"content":"        return msg;","lastModifiedDate":"2024-02-04"},{"lineNumber":162,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":163,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":164,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":165,"author":{"gitId":"Kappaccinoh"},"content":"     * Handles the creation of a new Todo Object","lastModifiedDate":"2024-01-30"},{"lineNumber":166,"author":{"gitId":"Kappaccinoh"},"content":"     * @param remaining remaining split of the string","lastModifiedDate":"2024-01-30"},{"lineNumber":167,"author":{"gitId":"Kappaccinoh"},"content":"     * @throws CampusException throws an exception if the todo object is not initialised properly","lastModifiedDate":"2024-01-30"},{"lineNumber":168,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":169,"author":{"gitId":"Kappaccinoh"},"content":"    public String handleTodoCommand(String remaining) throws CampusException {","lastModifiedDate":"2024-02-04"},{"lineNumber":170,"author":{"gitId":"Kappaccinoh"},"content":"        if (remaining.isEmpty()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":171,"author":{"gitId":"Kappaccinoh"},"content":"            throw new CampusException(\"Error! A todo task must have a name, \"","lastModifiedDate":"2024-02-06"},{"lineNumber":172,"author":{"gitId":"Kappaccinoh"},"content":"                    + \"please follow the following syntax: todo \u003ctask name\u003e\\n\");","lastModifiedDate":"2024-02-06"},{"lineNumber":173,"author":{"gitId":"Kappaccinoh"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":174,"author":{"gitId":"Kappaccinoh"},"content":"            ToDos todo \u003d new ToDos(remaining);","lastModifiedDate":"2024-01-29"},{"lineNumber":175,"author":{"gitId":"Kappaccinoh"},"content":"            this.taskList.addTask(todo);","lastModifiedDate":"2024-02-11"},{"lineNumber":176,"author":{"gitId":"Kappaccinoh"},"content":"            return this.ui.add(this.taskList, todo);","lastModifiedDate":"2024-02-04"},{"lineNumber":177,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":178,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":179,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":180,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":181,"author":{"gitId":"Kappaccinoh"},"content":"     * Handles the creation of a deadline object","lastModifiedDate":"2024-01-30"},{"lineNumber":182,"author":{"gitId":"Kappaccinoh"},"content":"     * @param remaining remaining split of the string","lastModifiedDate":"2024-01-30"},{"lineNumber":183,"author":{"gitId":"Kappaccinoh"},"content":"     * @throws CampusException throws an exception if the deadline object is not initialised properly","lastModifiedDate":"2024-01-30"},{"lineNumber":184,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":185,"author":{"gitId":"Kappaccinoh"},"content":"    public String handleDeadlineCommand(String remaining) throws CampusException {","lastModifiedDate":"2024-02-04"},{"lineNumber":186,"author":{"gitId":"Kappaccinoh"},"content":"        String[] temp \u003d remaining.split(\"/by\", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":187,"author":{"gitId":"Kappaccinoh"},"content":"        if (temp.length !\u003d 2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":188,"author":{"gitId":"Kappaccinoh"},"content":"            throw new CampusException(\"Error! A deadline task must have the correct number of parameters, \"","lastModifiedDate":"2024-02-06"},{"lineNumber":189,"author":{"gitId":"Kappaccinoh"},"content":"                    + \"please follow the following syntax: deadline \u003cdeadline name\u003e \"","lastModifiedDate":"2024-02-06"},{"lineNumber":190,"author":{"gitId":"Kappaccinoh"},"content":"                    + \"/by \u003cendDateTime (HHmm dd/MM/yyyy)\u003e\\n\");","lastModifiedDate":"2024-02-06"},{"lineNumber":191,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":192,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":193,"author":{"gitId":"Kappaccinoh"},"content":"        String deadlineName \u003d temp[0].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":194,"author":{"gitId":"Kappaccinoh"},"content":"        String endDateTime \u003d temp[1].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":195,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":196,"author":{"gitId":"Kappaccinoh"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":197,"author":{"gitId":"Kappaccinoh"},"content":"            Deadline deadline \u003d new Deadline(deadlineName, endDateTime);","lastModifiedDate":"2024-01-29"},{"lineNumber":198,"author":{"gitId":"Kappaccinoh"},"content":"            this.taskList.addTask(deadline);","lastModifiedDate":"2024-02-11"},{"lineNumber":199,"author":{"gitId":"Kappaccinoh"},"content":"            return this.ui.add(this.taskList, deadline);","lastModifiedDate":"2024-02-04"},{"lineNumber":200,"author":{"gitId":"Kappaccinoh"},"content":"        } catch (CampusException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":201,"author":{"gitId":"Kappaccinoh"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-04"},{"lineNumber":202,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":203,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":204,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":205,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":206,"author":{"gitId":"Kappaccinoh"},"content":"     * Handles the creation of an event object","lastModifiedDate":"2024-01-30"},{"lineNumber":207,"author":{"gitId":"Kappaccinoh"},"content":"     * @param remaining remaining split of the string","lastModifiedDate":"2024-01-30"},{"lineNumber":208,"author":{"gitId":"Kappaccinoh"},"content":"     * @throws CampusException throws an exception if the event object is not initialised properly","lastModifiedDate":"2024-01-30"},{"lineNumber":209,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":210,"author":{"gitId":"Kappaccinoh"},"content":"    public String handleEventCommand(String remaining) throws CampusException {","lastModifiedDate":"2024-02-04"},{"lineNumber":211,"author":{"gitId":"Kappaccinoh"},"content":"        String[] temp \u003d remaining.split(\"/from\", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":212,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":213,"author":{"gitId":"Kappaccinoh"},"content":"        if (temp.length !\u003d 2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":214,"author":{"gitId":"Kappaccinoh"},"content":"            throw new CampusException(\"Error! An event task must have the correct number of parameters, \"","lastModifiedDate":"2024-02-06"},{"lineNumber":215,"author":{"gitId":"Kappaccinoh"},"content":"                    + \"please follow the following syntax: event \u003cevent name\u003e \"","lastModifiedDate":"2024-02-06"},{"lineNumber":216,"author":{"gitId":"Kappaccinoh"},"content":"                    + \"/from \u003cstartDateTime (HHmm dd/MM/yyyy)\u003e /to \u003cendDateTime (HHmm dd/MM/yyyy)\u003e\\n\");","lastModifiedDate":"2024-02-06"},{"lineNumber":217,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":218,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":219,"author":{"gitId":"Kappaccinoh"},"content":"        String eventName \u003d temp[0].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":220,"author":{"gitId":"Kappaccinoh"},"content":"        String remaining1 \u003d temp[1].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":221,"author":{"gitId":"Kappaccinoh"},"content":"        String[] temp2 \u003d remaining1.split(\"/to\", 2);","lastModifiedDate":"2024-01-29"},{"lineNumber":222,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":223,"author":{"gitId":"Kappaccinoh"},"content":"        if (temp2.length !\u003d 2) {","lastModifiedDate":"2024-01-29"},{"lineNumber":224,"author":{"gitId":"Kappaccinoh"},"content":"            throw new CampusException(\"Error! An event task must have parameters, \"","lastModifiedDate":"2024-02-06"},{"lineNumber":225,"author":{"gitId":"Kappaccinoh"},"content":"                    + \"please follow the following syntax: event \u003cevent name\u003e \"","lastModifiedDate":"2024-02-06"},{"lineNumber":226,"author":{"gitId":"Kappaccinoh"},"content":"                    + \"/from \u003cstartDateTime (HHmm dd/MM/yyyy)\u003e /to \u003cendDateTime (HHmm dd/MM/yyyy)\u003e\\n\");","lastModifiedDate":"2024-02-06"},{"lineNumber":227,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":228,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":229,"author":{"gitId":"Kappaccinoh"},"content":"        String from \u003d temp2[0].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":230,"author":{"gitId":"Kappaccinoh"},"content":"        String to \u003d temp2[1].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":231,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":232,"author":{"gitId":"Kappaccinoh"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":233,"author":{"gitId":"Kappaccinoh"},"content":"            Event event \u003d new Event(eventName, from, to);","lastModifiedDate":"2024-01-29"},{"lineNumber":234,"author":{"gitId":"Kappaccinoh"},"content":"            this.taskList.addTask(event);","lastModifiedDate":"2024-02-11"},{"lineNumber":235,"author":{"gitId":"Kappaccinoh"},"content":"            return this.ui.add(this.taskList, event);","lastModifiedDate":"2024-02-04"},{"lineNumber":236,"author":{"gitId":"Kappaccinoh"},"content":"        } catch (CampusException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":237,"author":{"gitId":"Kappaccinoh"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-04"},{"lineNumber":238,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":239,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":240,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Kappaccinoh":240}},{"path":"src/main/java/campus/infrastructure/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package campus.infrastructure;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"import campus.tasks.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":" * Deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"public class Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"    private final String filePath;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"    private List\u003cString\u003e listOfStrings;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"     * Initialises the Storage Class given a specific location if the file exists.","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"     * @param filePath The filePath as a String of the textfile used for storage.","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"            this.listOfStrings \u003d this.readFromDBCreateIfNotExists(this.filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"            System.err.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"    public List\u003cString\u003e getListOfStrings() {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"        return this.listOfStrings;","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"     * Function to read from the expected file called \"data\", if not, create the file and return null.","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"     * @param filePath Takes in the relative path file that it expects the datafile to be at.","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"     * @return Returns a list of strings, each string contains information about the DB, +","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"     *      null if initialised for the first time.","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"    public List\u003cString\u003e readFromDBCreateIfNotExists(String filePath) throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"            Files.createFile(path);","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"            return null;","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"        return Files.readAllLines(path);","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"     * Updates the taskList object given the inputs in the file.","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"     * @param taskList the taskList Object.","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Kappaccinoh"},"content":"    public void updateFileFromList(TaskList taskList) {","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"Kappaccinoh"},"content":"        String filePath \u003d this.filePath;","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"Kappaccinoh"},"content":"        assert (filePath !\u003d null);","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"Kappaccinoh"},"content":"            List\u003cTask\u003e listOfTasks \u003d taskList.getListOfTasks();","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"Kappaccinoh"},"content":"            for (Task task : listOfTasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"Kappaccinoh"},"content":"                writer.write(task.toDBFormat());","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"Kappaccinoh"},"content":"                writer.newLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"Kappaccinoh"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"Kappaccinoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"Kappaccinoh"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Kappaccinoh":75}},{"path":"src/main/java/campus/infrastructure/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package campus.infrastructure;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.List;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"import campus.exceptions.CampusException;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import campus.tasks.Deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"import campus.tasks.Event;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import campus.tasks.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"import campus.tasks.ToDos;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":" * TaskList Class handles all CRUD actions related to the Task Class, it also contains the List of \u0027Task\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":" * type field to store the various tasks in the list and does List Manipulation operations on them.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"public class TaskList {","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"     * Updates the current List of Task type given a List of String type input read from the saved txt file in memory","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"     * @param listOfStrings List of String format.","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"     * @throws CampusException In the event that the file is corrupted and the List of String type does not match the","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"     *      accepted txt file formatting for its data.","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"    public void updateListFromFile(List\u003cString\u003e listOfStrings) {","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"        if (listOfStrings \u003d\u003d null) {","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"            return;","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"        this.tasks \u003d listOfStrings.stream()","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"                .map(this::parseTaskFromStringSafe)","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"                .filter(Objects::nonNull)","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"    private Task parseTaskFromStringSafe(String string) {","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"            return parseTaskFromString(string);","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"        } catch (CampusException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"            System.err.println(\"Error parsing task from string: \" + e.getMessage());","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"            return null;","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"    private Task parseTaskFromString(String string) throws CampusException {","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"        String[] parts \u003d string.split(\"\\\\|\");","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"        String typeOfTask \u003d parts[0].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"        switch (typeOfTask) {","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"        case \"T\":","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"            if (parts.length !\u003d 3) {","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"                throw new CampusException(\"File is Corrupted, Check Formatting for \u0027T\u0027\");","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"                String todoName \u003d parts[2].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"                Boolean isCompleted \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"Kappaccinoh"},"content":"                return new ToDos(todoName, isCompleted);","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"Kappaccinoh"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"Kappaccinoh"},"content":"        case \"D\":","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"            if (parts.length !\u003d 4) {","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"Kappaccinoh"},"content":"                throw new CampusException(\"File is Corrupted, Check Formatting for \u0027D\u0027\");","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"Kappaccinoh"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"Kappaccinoh"},"content":"                String deadlineName \u003d parts[2].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"Kappaccinoh"},"content":"                Boolean isCompleted \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"Kappaccinoh"},"content":"                String deadlineEndTime \u003d parts[3].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"Kappaccinoh"},"content":"                return new Deadline(deadlineName, isCompleted, deadlineEndTime);","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"Kappaccinoh"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"Kappaccinoh"},"content":"        case \"E\":","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"Kappaccinoh"},"content":"            if (parts.length !\u003d 5) {","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"Kappaccinoh"},"content":"                throw new CampusException(\"File is Corrupted, Check Formatting for \u0027E\u0027\");","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"Kappaccinoh"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"Kappaccinoh"},"content":"                String eventName \u003d parts[2].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"Kappaccinoh"},"content":"                Boolean isCompleted \u003d parts[1].trim().equals(\"1\");","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"Kappaccinoh"},"content":"                String eventStartTime \u003d parts[3].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"Kappaccinoh"},"content":"                String eventEndTime \u003d parts[4].trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"Kappaccinoh"},"content":"                return new Event(eventName, isCompleted, eventStartTime, eventEndTime);","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"Kappaccinoh"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"Kappaccinoh"},"content":"        default:","lastModifiedDate":"2024-02-06"},{"lineNumber":83,"author":{"gitId":"Kappaccinoh"},"content":"            throw new CampusException(\"Invalid task type\");","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"Kappaccinoh"},"content":"    public List\u003cTask\u003e getListOfTasks() {","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"Kappaccinoh"},"content":"        return this.tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"Kappaccinoh"},"content":"    public TaskList getTaskListWhere(String string) {","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"Kappaccinoh"},"content":"        TaskList temp \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"Kappaccinoh"},"content":"        temp.tasks \u003d this.tasks.stream()","lastModifiedDate":"2024-02-11"},{"lineNumber":94,"author":{"gitId":"Kappaccinoh"},"content":"            .filter(task -\u003e task.taskName.contains(string))","lastModifiedDate":"2024-02-11"},{"lineNumber":95,"author":{"gitId":"Kappaccinoh"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2024-02-11"},{"lineNumber":96,"author":{"gitId":"Kappaccinoh"},"content":"        return temp;","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"Kappaccinoh"},"content":"    public Task getIthTaskInteger(int index) {","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"Kappaccinoh"},"content":"        return this.tasks.stream()","lastModifiedDate":"2024-02-11"},{"lineNumber":101,"author":{"gitId":"Kappaccinoh"},"content":"            .skip(index)","lastModifiedDate":"2024-02-11"},{"lineNumber":102,"author":{"gitId":"Kappaccinoh"},"content":"            .findFirst()","lastModifiedDate":"2024-02-11"},{"lineNumber":103,"author":{"gitId":"Kappaccinoh"},"content":"            .orElse(null);","lastModifiedDate":"2024-02-11"},{"lineNumber":104,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"Kappaccinoh"},"content":"    public Task getIthTaskString(String userInput) {","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"Kappaccinoh"},"content":"        assert(userInput !\u003d null);","lastModifiedDate":"2024-02-11"},{"lineNumber":108,"author":{"gitId":"Kappaccinoh"},"content":"        String listNumber \u003d userInput.substring(userInput.length() - 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"Kappaccinoh"},"content":"        int index \u003d Integer.parseInt(listNumber) - 1;","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"Kappaccinoh"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"Kappaccinoh"},"content":"    public int getListSize() {","lastModifiedDate":"2024-02-11"},{"lineNumber":114,"author":{"gitId":"Kappaccinoh"},"content":"        return tasks.size();","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"Kappaccinoh"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2024-02-11"},{"lineNumber":117,"author":{"gitId":"Kappaccinoh"},"content":"        this.tasks.remove(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"Kappaccinoh"},"content":"    public void markDone(Task task) {","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"Kappaccinoh"},"content":"        task.markComplete();","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"Kappaccinoh"},"content":"        assert(task.isCompleted);","lastModifiedDate":"2024-02-19"},{"lineNumber":123,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"Kappaccinoh"},"content":"    public void markUndone(Task task) {","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"Kappaccinoh"},"content":"        task.markIncomplete();","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"Kappaccinoh"},"content":"        assert(!task.isCompleted);","lastModifiedDate":"2024-02-19"},{"lineNumber":128,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"Kappaccinoh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-11"},{"lineNumber":131,"author":{"gitId":"Kappaccinoh"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Kappaccinoh":133}},{"path":"src/main/java/campus/infrastructure/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package campus.infrastructure;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import campus.exceptions.CampusException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import campus.tasks.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":" * Deals with interactions with the User.","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"public class Ui {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"     * Produces a greeting message.","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"    @SuppressWarnings(\"checkstyle:AbbreviationAsWordInName\")","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"    private String LINE_BREAK \u003d \"------------------------------\\n\";","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"    public String printGreeting() {","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"        String message \u003d LINE_BREAK","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"                + \"  ____\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"                + \" / ___|__ _ _ __ ___  _ __  _   _ ___\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"                + \"| |   / _` | \u0027_ ` _ \\\\| \u0027_ \\\\| | | / __|\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"                + \"| |__| (_| | | | | | | |_) | |_| \\\\__ \\\\ \\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"                + \" \\\\____\\\\__,_|_| |_| |_| .__/ \\\\__,_|___/\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"                + \"                     |_|\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"                + \"\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"                + \"Hello! I\u0027m Campus\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"                + \"Type in \u0027help\u0027 to get the full list of my commands!\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"                + \"\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"                + LINE_BREAK;","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"        return message;","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"     * Produce a goodbye/exit message.","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"    public String printExiting() {","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"        String message \u003d LINE_BREAK","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"                + \"Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"                + \"\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"                + LINE_BREAK;","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"        return message;","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"     * Displays all the current items in the TaskList in a specified format with numbering.","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"     * @param taskList the object containing all the tasks in a list.","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"    public String printTaskList(TaskList taskList) {","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"        int numOfTasks \u003d taskList.getListSize();","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"        StringBuilder listOfTasks \u003d new StringBuilder();","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"        for (int i \u003d 0; i \u003c numOfTasks; i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"            int listNum \u003d i + 1;","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"            Task task \u003d taskList.getIthTaskInteger(i);","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"            listOfTasks.append(String.format(\"%s. %s\\n\", listNum, task.toString()));","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"        String message \u003d LINE_BREAK","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"Kappaccinoh"},"content":"                + String.format(\"%s\\n\", listOfTasks)","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"Kappaccinoh"},"content":"                + LINE_BREAK;","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"        return message;","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"Kappaccinoh"},"content":"     * Prints a message when a task is marked as done.","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"Kappaccinoh"},"content":"     * @param task The Task object instance.","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"Kappaccinoh"},"content":"    public String markDone(Task task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"Kappaccinoh"},"content":"        String message \u003d LINE_BREAK","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"Kappaccinoh"},"content":"                + \"Nice! I\u0027ve completed this task successfully:\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"Kappaccinoh"},"content":"                + String.format(\"%s\\n\", task)","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"Kappaccinoh"},"content":"                + LINE_BREAK;","lastModifiedDate":"2024-02-14"},{"lineNumber":76,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"Kappaccinoh"},"content":"        return message;","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"Kappaccinoh"},"content":"     * Prints a message when a task is marked as undone.","lastModifiedDate":"2024-02-14"},{"lineNumber":82,"author":{"gitId":"Kappaccinoh"},"content":"     * @param task The Task object instance.","lastModifiedDate":"2024-02-14"},{"lineNumber":83,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":84,"author":{"gitId":"Kappaccinoh"},"content":"    public String markUndone(Task task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"Kappaccinoh"},"content":"        String message \u003d LINE_BREAK","lastModifiedDate":"2024-02-14"},{"lineNumber":86,"author":{"gitId":"Kappaccinoh"},"content":"                + \"Ok, this task is still not done yet:\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"Kappaccinoh"},"content":"                + String.format(\"%s\\n\", task)","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"Kappaccinoh"},"content":"                + LINE_BREAK;","lastModifiedDate":"2024-02-14"},{"lineNumber":89,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"Kappaccinoh"},"content":"        return message;","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":94,"author":{"gitId":"Kappaccinoh"},"content":"     * Prints a message when a task is deleted.","lastModifiedDate":"2024-02-14"},{"lineNumber":95,"author":{"gitId":"Kappaccinoh"},"content":"     * @param taskList The taskList object instance.","lastModifiedDate":"2024-02-14"},{"lineNumber":96,"author":{"gitId":"Kappaccinoh"},"content":"     * @param task The task object instance.","lastModifiedDate":"2024-02-14"},{"lineNumber":97,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":98,"author":{"gitId":"Kappaccinoh"},"content":"    public String delete(TaskList taskList, Task task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"Kappaccinoh"},"content":"        int numOfTasks \u003d taskList.getListSize();","lastModifiedDate":"2024-02-11"},{"lineNumber":100,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"Kappaccinoh"},"content":"        String message \u003d LINE_BREAK","lastModifiedDate":"2024-02-14"},{"lineNumber":102,"author":{"gitId":"Kappaccinoh"},"content":"                + \"Noted. Task deleted successfully. I have removed the following task:\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"Kappaccinoh"},"content":"                + String.format(\"%s\\n\", task)","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"Kappaccinoh"},"content":"                + String.format(\"Now you have %s task(s) in the list.\\n\", numOfTasks)","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"Kappaccinoh"},"content":"                + LINE_BREAK;","lastModifiedDate":"2024-02-14"},{"lineNumber":106,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"Kappaccinoh"},"content":"        return message;","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":111,"author":{"gitId":"Kappaccinoh"},"content":"     * Prints a message when a task is added to the list.","lastModifiedDate":"2024-02-14"},{"lineNumber":112,"author":{"gitId":"Kappaccinoh"},"content":"     * @param taskList The taskList object instance.","lastModifiedDate":"2024-02-14"},{"lineNumber":113,"author":{"gitId":"Kappaccinoh"},"content":"     * @param task The task object instance.","lastModifiedDate":"2024-02-14"},{"lineNumber":114,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":115,"author":{"gitId":"Kappaccinoh"},"content":"    public String add(TaskList taskList, Task task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"Kappaccinoh"},"content":"        int numOfTasks \u003d taskList.getListSize();","lastModifiedDate":"2024-02-11"},{"lineNumber":117,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"Kappaccinoh"},"content":"        String message \u003d LINE_BREAK","lastModifiedDate":"2024-02-14"},{"lineNumber":119,"author":{"gitId":"Kappaccinoh"},"content":"                + \"Got it. I\u0027ve added this to our list of tasks:\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"Kappaccinoh"},"content":"                + String.format(\"added: %s\\n\", task.toString())","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"Kappaccinoh"},"content":"                + String.format(\"Now you have %s task(s) in the list.\\n\", numOfTasks)","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"Kappaccinoh"},"content":"                + LINE_BREAK;","lastModifiedDate":"2024-02-14"},{"lineNumber":123,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"Kappaccinoh"},"content":"        return message;","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":128,"author":{"gitId":"Kappaccinoh"},"content":"     * Produces the error message read from the CampusException class.","lastModifiedDate":"2024-02-14"},{"lineNumber":129,"author":{"gitId":"Kappaccinoh"},"content":"     * @param e The CampusException class instance.","lastModifiedDate":"2024-02-14"},{"lineNumber":130,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":131,"author":{"gitId":"Kappaccinoh"},"content":"    public String displayErrorMessage(CampusException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":132,"author":{"gitId":"Kappaccinoh"},"content":"        String message \u003d LINE_BREAK","lastModifiedDate":"2024-02-14"},{"lineNumber":133,"author":{"gitId":"Kappaccinoh"},"content":"                + String.format(\"%s\\n\", e.getMessage())","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"Kappaccinoh"},"content":"                + LINE_BREAK;","lastModifiedDate":"2024-02-14"},{"lineNumber":135,"author":{"gitId":"Kappaccinoh"},"content":"        return message;","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"Kappaccinoh":137}},{"path":"src/main/java/campus/javafxGUI/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package campus.javafxGUI;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":" * Represents a dialog box in the JavaFX graphical user interface for displaying messages.","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":" * This class extends JavaFX\u0027s {@link javafx.scene.layout.HBox} to facilitate layout management.","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":" * DialogBox objects can display both user and campus messages with associated images.","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"    private void flip() {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"    public static DialogBox getCampusDialog(String text, Image img) {","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"        db.flip();","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"        return db;","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Kappaccinoh":61}},{"path":"src/main/java/campus/javafxGUI/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package campus.javafxGUI;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import campus.Campus;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"    private Campus campus \u003d new Campus();","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setCampus(campus);","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().printGreetMessage();","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"            stage.show();","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Kappaccinoh":28}},{"path":"src/main/java/campus/javafxGUI/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package campus.javafxGUI;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.concurrent.Executors;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.concurrent.ScheduledExecutorService;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"import campus.Campus;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"    private Campus campus;","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpg\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"    private Image campusImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/CampusBotlogo.jpg\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"    public void setCampus(Campus c) {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"        campus \u003d c;","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Campus\u0027s reply and then appends them to","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"    @FXML","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"    public void handleUserInput() {","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"        String response \u003d campus.parseMessage(input);","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"                DialogBox.getCampusDialog(response, campusImage)","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"        );","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"        if (Objects.equals(input, \"bye\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"Kappaccinoh"},"content":"            terminate();","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"Kappaccinoh"},"content":"    public void printGreetMessage() {","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"Kappaccinoh"},"content":"        String msg \u003d campus.printGreeting();","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"Kappaccinoh"},"content":"        dialogContainer.getChildren().add(DialogBox.getCampusDialog(msg, campusImage));","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"Kappaccinoh"},"content":"    public void terminate() {","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"Kappaccinoh"},"content":"        // Schedule program exit after 2 seconds","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"Kappaccinoh"},"content":"        ScheduledExecutorService scheduler \u003d Executors.newSingleThreadScheduledExecutor();","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"Kappaccinoh"},"content":"        scheduler.schedule(Platform::exit, 2, TimeUnit.SECONDS);","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"Kappaccinoh"},"content":"        scheduler.shutdown();","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Kappaccinoh":76}},{"path":"src/main/java/campus/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package campus.tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import campus.exceptions.CampusException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":" * Contains logic for the Deadline class that extends the abstract Task Class","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":" * Only has an end time.","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"    LocalDateTime endDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"    public Deadline(String deadlineName, String endDateTime) throws CampusException {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"        this.taskName \u003d deadlineName;","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"        if (!isValidDateTimeFormat(endDateTime, this.formatter)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"            throw new CampusException(\"Error! A deadline task must have an end datetime in the correct format, please follow the following syntax: deadline \u003cdeadline name\u003e /by \u003cendDateTime (HHmm dd/MM/yyyy)\u003e\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"            this.endDateTime \u003d LocalDateTime.parse(endDateTime, this.formatter);","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"    public Deadline(String deadlineName, Boolean completed, String endDateTime) throws CampusException {","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"        this.taskName \u003d deadlineName;","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"        this.isCompleted \u003d completed;","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"        if (!isValidDateTimeFormat(endDateTime, this.formatter)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"            throw new CampusException(\"Error! A deadline task must have an end datetime in the correct format, please follow the following syntax: deadline \u003cdeadline name\u003e /by \u003cendDateTime (HHmm dd/MM/yyyy)\u003e\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"            this.endDateTime \u003d LocalDateTime.parse(endDateTime, this.formatter);","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"    public void markComplete() {","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"    public void markIncomplete() {","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"        String xMarker \u003d this.isCompleted ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"        return String.format(\"[D] %s %s (by: %s)\", xMarker, this.taskName, this.endDateTime.format(this.formatter));","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"    public String toDBFormat() {","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"        String completed \u003d this.isCompleted ? \"1\" : \"0\";","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"        return String.format(\"D | %s | %s | %s\", completed, this.taskName, this.endDateTime.format(this.formatter));","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Kappaccinoh":56}},{"path":"src/main/java/campus/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package campus.tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import campus.exceptions.CampusException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":" * Contains the logic for Event that extends the abstract class Task","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":" * Has both a start and end time.","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"    LocalDateTime startDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"    LocalDateTime endDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"    public Event(String eventName, String startDateTime, String endDateTime) throws CampusException {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"        this.taskName \u003d eventName;","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"        if (!isValidDateTimeFormat(startDateTime, this.formatter)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"            throw new CampusException(\"Error! An event task must have a start datetime in the right format, please follow the following syntax: event \u003cevent name\u003e /from \u003cstartDateTime (HHmm dd/MM/yyyy)\u003e /to \u003cendDateTime (HHmm dd/MM/yyyy)\u003e\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"        } else if (!isValidDateTimeFormat(endDateTime, this.formatter)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"            throw new CampusException(\"Error! An event task must have an end datetime in the right format, please follow the following syntax: event \u003cevent name\u003e /from \u003cstartDateTime (HHmm dd/MM/yyyy)\u003e /to \u003cendDateTime (HHmm dd/MM/yyyy)\u003e\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"            this.startDateTime \u003d LocalDateTime.parse(startDateTime, this.formatter);","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"            this.endDateTime \u003d LocalDateTime.parse(endDateTime, this.formatter);","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"    public Event(String eventName, Boolean completed, String startDateTime, String endDateTime) throws CampusException {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"        this.taskName \u003d eventName;","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"        this.isCompleted \u003d completed;","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"        if (!isValidDateTimeFormat(startDateTime, this.formatter)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"            throw new CampusException(\"Error! An event task must have a start datetime in the right format, please follow the following syntax: event \u003cevent name\u003e /from \u003cstartDateTime (HHmm dd/MM/yyyy)\u003e /to \u003cendDateTime (HHmm dd/MM/yyyy)\u003e\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"        } else if (!isValidDateTimeFormat(endDateTime, this.formatter)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"            throw new CampusException(\"Error! An event task must have an end datetime in the right format, please follow the following syntax: event \u003cevent name\u003e /from \u003cstartDateTime (HHmm dd/MM/yyyy)\u003e /to \u003cendDateTime (HHmm dd/MM/yyyy)\u003e\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"            this.startDateTime \u003d LocalDateTime.parse(startDateTime, this.formatter);","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"Kappaccinoh"},"content":"            this.endDateTime \u003d LocalDateTime.parse(endDateTime, this.formatter);","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"Kappaccinoh"},"content":"    public void markComplete() {","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"Kappaccinoh"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"Kappaccinoh"},"content":"    public void markIncomplete() {","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"Kappaccinoh"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"Kappaccinoh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"Kappaccinoh"},"content":"        String xMarker \u003d this.isCompleted ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"Kappaccinoh"},"content":"        return String.format(\"[E] %s %s (from: %s to: %s)\", xMarker, this.taskName, this.startDateTime.format(this.formatter), this.endDateTime.format(this.formatter));","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"Kappaccinoh"},"content":"    public String toDBFormat() {","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"Kappaccinoh"},"content":"        String completed \u003d this.isCompleted ? \"1\" : \"0\";","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"Kappaccinoh"},"content":"        return String.format(\"E | %s | %s | %s | %s\", completed, this.taskName, this.startDateTime.format(this.formatter), this.endDateTime.format(this.formatter));","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Kappaccinoh":64}},{"path":"src/main/java/campus/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package campus.tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":" * Class object which represents a Task, which has a name and a status completion.","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"abstract public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"    public boolean isCompleted;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"    public String taskName;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"    public DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm dd/MM/yyyy\");","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"     * Checks to see if the input string is of the correct format pattern.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"     * @param input timedate string.","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"     * @param formatter HHmm dd/MM/yyyy.","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"     * @return true if yes, false if no.","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"    public static boolean isValidDateTimeFormat(String input, DateTimeFormatter formatter) {","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"            LocalDateTime.parse(input, formatter);","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"            return true;","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"            return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"    abstract public void markComplete();","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"    abstract public void markIncomplete();","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"    abstract public String toDBFormat();","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Kappaccinoh":35}},{"path":"src/main/java/campus/tasks/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"package campus.tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"/**","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":" * Contains the logic for the ToDos Class which extends the abstract Task Class.","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":" */","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"public class ToDos extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"    public ToDos(String TodoTask) {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"        this.taskName \u003d TodoTask;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"    public ToDos (String TodoTask, Boolean completed) {","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"        this.taskName \u003d TodoTask;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"        this.isCompleted \u003d completed;","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"    public void markComplete() {","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"    public void markIncomplete() {","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"        String xMarker \u003d this.isCompleted ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Kappaccinoh"},"content":"        return String.format(\"[T] %s %s\", xMarker, this.taskName);","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"Kappaccinoh"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"Kappaccinoh"},"content":"    public String toDBFormat() {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"Kappaccinoh"},"content":"        String completed \u003d this.isCompleted ? \"1\" : \"0\";","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Kappaccinoh"},"content":"        return String.format(\"T | %s | %s\", completed, this.taskName);","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"Kappaccinoh"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"Kappaccinoh"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Kappaccinoh":38}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"624\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"\u003cchildren\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"    \u003cTextFlow fx:id\u003d\"textFlow\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" maxWidth\u003d\"300\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"            \u003cInsets top\u003d\"0\" right\u003d\"10\" bottom\u003d\"0\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"    \u003c/TextFlow\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Kappaccinoh"},"content":"    \u003c/ImageView\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Kappaccinoh"},"content":"\u003c/children\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Kappaccinoh"},"content":"\u003cpadding\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Kappaccinoh"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"Kappaccinoh"},"content":"\u003c/padding\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"Kappaccinoh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Kappaccinoh":29}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Kappaccinoh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Kappaccinoh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Kappaccinoh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Kappaccinoh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Kappaccinoh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Kappaccinoh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Kappaccinoh"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Kappaccinoh"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Kappaccinoh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"campus.javafxGUI.MainWindow\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Kappaccinoh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Kappaccinoh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"524.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Kappaccinoh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"524.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Kappaccinoh"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Kappaccinoh"},"content":"            \u003cFont size\u003d\"16.0\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Kappaccinoh"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Kappaccinoh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Kappaccinoh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Kappaccinoh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"588.0\" /\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Kappaccinoh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Kappaccinoh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Kappaccinoh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Kappaccinoh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Kappaccinoh":23}}]
