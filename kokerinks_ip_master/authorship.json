[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"Week 2 tasks done all by hand.","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"Week 3 tasks:","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"- Using github copilot for:","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"    - Level 7","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"        - \\+ Able to predict what I was going to type","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"        - \\+ Able to provide options which I wasn\u0027t even aware of","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"        - \\- Sometimes provides invalid suggestions, may not always be accurate","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"          - If invalid suggestions are lazily taken, productivity actually reduces in the long-term","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"kokerinks":9}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"    protected String dueDate;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"    public Deadline(String description, String newDueDate) {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"        this.dueDate \u003d newDueDate;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.dueDate);","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"        return String.format(\"D,%s,%s\", super.toFileString(), this.dueDate);","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"kokerinks":19}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"import java.util.List;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"        String botName \u003d \"KokBot\";","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"//        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"//                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"//                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"//                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"//        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"        welcome(botName);","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"        lineBreak();","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"        Path path \u003d Paths.get(\"data\", \"duke.txt\");","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"        File file;","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"kokerinks"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"kokerinks"},"content":"            file \u003d getFile(path);","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"kokerinks"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"kokerinks"},"content":"            lineBreak();","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"kokerinks"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"kokerinks"},"content":"            lineBreak();","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"kokerinks"},"content":"            return;","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"kokerinks"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"kokerinks"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"kokerinks"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"kokerinks"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"kokerinks"},"content":"                String[] parts \u003d line.split(\",\");","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"kokerinks"},"content":"                switch (parts[0]) {","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"kokerinks"},"content":"                    case \"T\" -\u003e tasks.add(new Todo(parts[2]));","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"kokerinks"},"content":"                    case \"D\" -\u003e tasks.add(new Deadline(parts[2], parts[3]));","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"kokerinks"},"content":"                    case \"E\" -\u003e tasks.add(new Event(parts[2], parts[3], parts[4]));","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"kokerinks"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"kokerinks"},"content":"                if (parts[1].equals(\"X\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"kokerinks"},"content":"                    tasks.get(tasks.size() - 1).markAsDone();","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"kokerinks"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"kokerinks"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"kokerinks"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"kokerinks"},"content":"            System.out.println(\"File not found: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"kokerinks"},"content":"        Scanner streamScan \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"kokerinks"},"content":"        String input \u003d streamScan.nextLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"kokerinks"},"content":"        while (true) {","lastModifiedDate":"2024-01-22"},{"lineNumber":60,"author":{"gitId":"kokerinks"},"content":"            try {","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"kokerinks"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":62,"author":{"gitId":"kokerinks"},"content":"                    break;","lastModifiedDate":"2024-01-22"},{"lineNumber":63,"author":{"gitId":"kokerinks"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":64,"author":{"gitId":"kokerinks"},"content":"                String[] parts \u003d input.split(\" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":65,"author":{"gitId":"kokerinks"},"content":"                switch (parts[0]) {","lastModifiedDate":"2024-01-22"},{"lineNumber":66,"author":{"gitId":"kokerinks"},"content":"                    case \"list\":","lastModifiedDate":"2024-01-22"},{"lineNumber":67,"author":{"gitId":"kokerinks"},"content":"                        printList(tasks);","lastModifiedDate":"2024-01-24"},{"lineNumber":68,"author":{"gitId":"kokerinks"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":69,"author":{"gitId":"kokerinks"},"content":"                    case \"mark\":","lastModifiedDate":"2024-01-22"},{"lineNumber":70,"author":{"gitId":"kokerinks"},"content":"                        int toMark \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2024-01-22"},{"lineNumber":71,"author":{"gitId":"kokerinks"},"content":"                        markTask(tasks.get(toMark));","lastModifiedDate":"2024-01-24"},{"lineNumber":72,"author":{"gitId":"kokerinks"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":73,"author":{"gitId":"kokerinks"},"content":"                    case \"unmark\":","lastModifiedDate":"2024-01-22"},{"lineNumber":74,"author":{"gitId":"kokerinks"},"content":"                        int toUnmark \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2024-01-22"},{"lineNumber":75,"author":{"gitId":"kokerinks"},"content":"                        unmarkTask(tasks.get(toUnmark));","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"kokerinks"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":77,"author":{"gitId":"kokerinks"},"content":"                    case \"todo\":","lastModifiedDate":"2024-01-22"},{"lineNumber":78,"author":{"gitId":"kokerinks"},"content":"                        tasks.add(createTodo(input));","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"kokerinks"},"content":"                        numList(tasks.size());","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"kokerinks"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":81,"author":{"gitId":"kokerinks"},"content":"                    case \"deadline\":","lastModifiedDate":"2024-01-22"},{"lineNumber":82,"author":{"gitId":"kokerinks"},"content":"                        tasks.add(createDeadline(parts));","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"kokerinks"},"content":"                        numList(tasks.size());","lastModifiedDate":"2024-01-24"},{"lineNumber":84,"author":{"gitId":"kokerinks"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":85,"author":{"gitId":"kokerinks"},"content":"                    case \"event\":","lastModifiedDate":"2024-01-22"},{"lineNumber":86,"author":{"gitId":"kokerinks"},"content":"                        tasks.add(createEvent(parts));","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"kokerinks"},"content":"                        numList(tasks.size());","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"kokerinks"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":89,"author":{"gitId":"kokerinks"},"content":"                    case \"delete\":","lastModifiedDate":"2024-01-24"},{"lineNumber":90,"author":{"gitId":"kokerinks"},"content":"                        deleteTask(parts, tasks);","lastModifiedDate":"2024-01-24"},{"lineNumber":91,"author":{"gitId":"kokerinks"},"content":"                        numList(tasks.size());","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"kokerinks"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":93,"author":{"gitId":"kokerinks"},"content":"                    default:","lastModifiedDate":"2024-01-24"},{"lineNumber":94,"author":{"gitId":"kokerinks"},"content":"                        throw new DukeException(\"Unknown command\");","lastModifiedDate":"2024-01-24"},{"lineNumber":95,"author":{"gitId":"kokerinks"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":96,"author":{"gitId":"kokerinks"},"content":"                updateFile(path, tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"kokerinks"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":98,"author":{"gitId":"kokerinks"},"content":"                lineBreak();","lastModifiedDate":"2024-01-24"},{"lineNumber":99,"author":{"gitId":"kokerinks"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"kokerinks"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":101,"author":{"gitId":"kokerinks"},"content":"            lineBreak();","lastModifiedDate":"2024-01-22"},{"lineNumber":102,"author":{"gitId":"kokerinks"},"content":"            input \u003d streamScan.nextLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":104,"author":{"gitId":"kokerinks"},"content":"        farewell();","lastModifiedDate":"2024-01-22"},{"lineNumber":105,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":106,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":107,"author":{"gitId":"kokerinks"},"content":"    public static File getFile(Path path) throws DukeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"kokerinks"},"content":"        File file \u003d new File(path.toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"kokerinks"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"kokerinks"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"kokerinks"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"kokerinks"},"content":"                file.createNewFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"kokerinks"},"content":"                System.out.println(\" New duke.txt file created!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"kokerinks"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"kokerinks"},"content":"                throw new DukeException(\"Error creating file\");","lastModifiedDate":"2024-01-28"},{"lineNumber":116,"author":{"gitId":"kokerinks"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"kokerinks"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"kokerinks"},"content":"            System.out.println(\" Existing duke.txt file successfully retrieved!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":119,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":120,"author":{"gitId":"kokerinks"},"content":"        lineBreak();","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"kokerinks"},"content":"        return file;","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"kokerinks"},"content":"    public static void updateFile(Path path, ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":125,"author":{"gitId":"kokerinks"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":126,"author":{"gitId":"kokerinks"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":127,"author":{"gitId":"kokerinks"},"content":"            lines.add(task.toFileString());","lastModifiedDate":"2024-01-28"},{"lineNumber":128,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":129,"author":{"gitId":"kokerinks"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":130,"author":{"gitId":"kokerinks"},"content":"            Files.write(path, lines);","lastModifiedDate":"2024-01-28"},{"lineNumber":131,"author":{"gitId":"kokerinks"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":132,"author":{"gitId":"kokerinks"},"content":"            throw new DukeException(\"Error writing to file\");","lastModifiedDate":"2024-01-28"},{"lineNumber":133,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":134,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":135,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":136,"author":{"gitId":"kokerinks"},"content":"    public static void lineBreak() {","lastModifiedDate":"2024-01-22"},{"lineNumber":137,"author":{"gitId":"kokerinks"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2024-01-22"},{"lineNumber":138,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":139,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":140,"author":{"gitId":"kokerinks"},"content":"    public static void numList(int len) {","lastModifiedDate":"2024-01-22"},{"lineNumber":141,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\" Now you have %d tasks in the list.%n\", len);","lastModifiedDate":"2024-01-28"},{"lineNumber":142,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":143,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":144,"author":{"gitId":"kokerinks"},"content":"    public static void printList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-24"},{"lineNumber":145,"author":{"gitId":"kokerinks"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-22"},{"lineNumber":146,"author":{"gitId":"kokerinks"},"content":"        System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":147,"author":{"gitId":"kokerinks"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-24"},{"lineNumber":148,"author":{"gitId":"kokerinks"},"content":"            System.out.printf(\" %d. %s%n\", i + 1, tasks.get(i));","lastModifiedDate":"2024-01-28"},{"lineNumber":149,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":150,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":151,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":152,"author":{"gitId":"kokerinks"},"content":"    public static void markTask(Task task) {","lastModifiedDate":"2024-01-22"},{"lineNumber":153,"author":{"gitId":"kokerinks"},"content":"        task.markAsDone();","lastModifiedDate":"2024-01-22"},{"lineNumber":154,"author":{"gitId":"kokerinks"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-22"},{"lineNumber":155,"author":{"gitId":"kokerinks"},"content":"        System.out.println(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":156,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\" %s%n\", task);","lastModifiedDate":"2024-01-28"},{"lineNumber":157,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":158,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":159,"author":{"gitId":"kokerinks"},"content":"    public static void unmarkTask(Task task) {","lastModifiedDate":"2024-01-22"},{"lineNumber":160,"author":{"gitId":"kokerinks"},"content":"        task.markAsUndone();","lastModifiedDate":"2024-01-22"},{"lineNumber":161,"author":{"gitId":"kokerinks"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-22"},{"lineNumber":162,"author":{"gitId":"kokerinks"},"content":"        System.out.println(\" OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":163,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\" %s%n\", task);","lastModifiedDate":"2024-01-28"},{"lineNumber":164,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":165,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":166,"author":{"gitId":"kokerinks"},"content":"    public static void welcome(String botName) {","lastModifiedDate":"2024-01-22"},{"lineNumber":167,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\"\"\"","lastModifiedDate":"2024-01-28"},{"lineNumber":168,"author":{"gitId":"kokerinks"},"content":"                ____________________________________________________________","lastModifiedDate":"2024-01-22"},{"lineNumber":169,"author":{"gitId":"kokerinks"},"content":"                 Hello! I\u0027m %s","lastModifiedDate":"2024-01-22"},{"lineNumber":170,"author":{"gitId":"kokerinks"},"content":"                 What can I do for you?","lastModifiedDate":"2024-01-22"},{"lineNumber":171,"author":{"gitId":"kokerinks"},"content":"                %n\"\"\", botName);","lastModifiedDate":"2024-01-28"},{"lineNumber":172,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":173,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":174,"author":{"gitId":"kokerinks"},"content":"    public static Todo createTodo(String input) throws DukeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":175,"author":{"gitId":"kokerinks"},"content":"        if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2024-01-24"},{"lineNumber":176,"author":{"gitId":"kokerinks"},"content":"            throw new DukeException(\"Unknown usage - description should of \\\"todo\\\" should not be empty.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":177,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":178,"author":{"gitId":"kokerinks"},"content":"        Todo newTodo \u003d new Todo(input.substring(5));","lastModifiedDate":"2024-01-24"},{"lineNumber":179,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\"\"\"","lastModifiedDate":"2024-01-28"},{"lineNumber":180,"author":{"gitId":"kokerinks"},"content":"                ____________________________________________________________","lastModifiedDate":"2024-01-22"},{"lineNumber":181,"author":{"gitId":"kokerinks"},"content":"                 Got it. I\u0027ve added this task:","lastModifiedDate":"2024-01-22"},{"lineNumber":182,"author":{"gitId":"kokerinks"},"content":"                   %s%n\"\"\", newTodo);","lastModifiedDate":"2024-01-28"},{"lineNumber":183,"author":{"gitId":"kokerinks"},"content":"        return newTodo;","lastModifiedDate":"2024-01-22"},{"lineNumber":184,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":185,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":186,"author":{"gitId":"kokerinks"},"content":"    public static Deadline createDeadline(String[] parts) throws DukeException{","lastModifiedDate":"2024-01-24"},{"lineNumber":187,"author":{"gitId":"kokerinks"},"content":"        int i;","lastModifiedDate":"2024-01-22"},{"lineNumber":188,"author":{"gitId":"kokerinks"},"content":"        for (i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":189,"author":{"gitId":"kokerinks"},"content":"            if (parts[i].equals(\"/by\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":190,"author":{"gitId":"kokerinks"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":191,"author":{"gitId":"kokerinks"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":192,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":193,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":194,"author":{"gitId":"kokerinks"},"content":"        if (i \u003d\u003d parts.length) {","lastModifiedDate":"2024-01-24"},{"lineNumber":195,"author":{"gitId":"kokerinks"},"content":"            throw new DukeException(\"Unknown usage - /by not found in \\\"deadline\\\" command.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":196,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":197,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":198,"author":{"gitId":"kokerinks"},"content":"        String description \u003d String.join(\" \", Arrays.copyOfRange(parts, 1, i));","lastModifiedDate":"2024-01-22"},{"lineNumber":199,"author":{"gitId":"kokerinks"},"content":"        String dueDate \u003d String.join(\" \", Arrays.copyOfRange(parts, i + 1, parts.length));","lastModifiedDate":"2024-01-22"},{"lineNumber":200,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":201,"author":{"gitId":"kokerinks"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":202,"author":{"gitId":"kokerinks"},"content":"            throw new DukeException(\"Unknown usage - description of \\\"deadline\\\" should not be empty.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":203,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":204,"author":{"gitId":"kokerinks"},"content":"        if (dueDate.equals(\"\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":205,"author":{"gitId":"kokerinks"},"content":"            throw new DukeException(\"Unknown usage - due date of \\\"deadline\\\" should not be empty.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":206,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":207,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":208,"author":{"gitId":"kokerinks"},"content":"        Deadline newDeadline \u003d new Deadline(description, dueDate);","lastModifiedDate":"2024-01-22"},{"lineNumber":209,"author":{"gitId":"kokerinks"},"content":"        System.out.printf(\"\"\"","lastModifiedDate":"2024-01-28"},{"lineNumber":210,"author":{"gitId":"kokerinks"},"content":"                ____________________________________________________________","lastModifiedDate":"2024-01-22"},{"lineNumber":211,"author":{"gitId":"kokerinks"},"content":"                 Got it. I\u0027ve added this task:","lastModifiedDate":"2024-01-22"},{"lineNumber":212,"author":{"gitId":"kokerinks"},"content":"                   %s%n\"\"\", newDeadline);","lastModifiedDate":"2024-01-28"},{"lineNumber":213,"author":{"gitId":"kokerinks"},"content":"        return newDeadline;","lastModifiedDate":"2024-01-22"},{"lineNumber":214,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":215,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":216,"author":{"gitId":"kokerinks"},"content":"    public static Event createEvent(String[] parts) throws DukeException{","lastModifiedDate":"2024-01-24"},{"lineNumber":217,"author":{"gitId":"kokerinks"},"content":"        int fromIndex \u003d -1;","lastModifiedDate":"2024-01-24"},{"lineNumber":218,"author":{"gitId":"kokerinks"},"content":"        int toIndex \u003d 0;","lastModifiedDate":"2024-01-22"},{"lineNumber":219,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":220,"author":{"gitId":"kokerinks"},"content":"        //assume string always includes /from and /to","lastModifiedDate":"2024-01-22"},{"lineNumber":221,"author":{"gitId":"kokerinks"},"content":"        for (int i \u003d 0; i \u003c parts.length; i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":222,"author":{"gitId":"kokerinks"},"content":"            if (parts[i].equals(\"/from\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":223,"author":{"gitId":"kokerinks"},"content":"                fromIndex \u003d i;","lastModifiedDate":"2024-01-22"},{"lineNumber":224,"author":{"gitId":"kokerinks"},"content":"            } else if (parts[i].equals(\"/to\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":225,"author":{"gitId":"kokerinks"},"content":"                toIndex \u003d i;","lastModifiedDate":"2024-01-22"},{"lineNumber":226,"author":{"gitId":"kokerinks"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":227,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":228,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":229,"author":{"gitId":"kokerinks"},"content":"        if (fromIndex \u003d\u003d -1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":230,"author":{"gitId":"kokerinks"},"content":"            throw new DukeException(\"Unknown usage - /from not found in \\\"event\\\" command.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":231,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":232,"author":{"gitId":"kokerinks"},"content":"        if (toIndex \u003d\u003d -1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":233,"author":{"gitId":"kokerinks"},"content":"            throw new DukeException(\"Unknown usage - /to not found in \\\"event\\\" command.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":234,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":235,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":236,"author":{"gitId":"kokerinks"},"content":"        String description \u003d String.join(\" \", Arrays.copyOfRange(parts, 1, fromIndex));","lastModifiedDate":"2024-01-22"},{"lineNumber":237,"author":{"gitId":"kokerinks"},"content":"        String startDate \u003d String.join(\" \", Arrays.copyOfRange(parts, fromIndex + 1, toIndex));","lastModifiedDate":"2024-01-22"},{"lineNumber":238,"author":{"gitId":"kokerinks"},"content":"        String endDate \u003d String.join(\" \", Arrays.copyOfRange(parts, toIndex + 1, parts.length));","lastModifiedDate":"2024-01-22"},{"lineNumber":239,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":240,"author":{"gitId":"kokerinks"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":241,"author":{"gitId":"kokerinks"},"content":"            throw new DukeException(\"Unknown usage - description of \\\"event\\\" should not be empty.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":242,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":243,"author":{"gitId":"kokerinks"},"content":"        if (startDate.equals(\"\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":244,"author":{"gitId":"kokerinks"},"content":"            throw new DukeException(\"Unknown usage - start date of \\\"event\\\" should not be empty.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":245,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":246,"author":{"gitId":"kokerinks"},"content":"        if (endDate.equals(\"\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":247,"author":{"gitId":"kokerinks"},"content":"            throw new DukeException(\"Unknown usage - end date of \\\"event\\\" should not be empty.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":248,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":249,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":250,"author":{"gitId":"kokerinks"},"content":"        Event newEvent \u003d new Event(description, startDate, endDate);","lastModifiedDate":"2024-01-22"},{"lineNumber":251,"author":{"gitId":"kokerinks"},"content":"        System.out.println(String.format(\"\"\"","lastModifiedDate":"2024-01-22"},{"lineNumber":252,"author":{"gitId":"kokerinks"},"content":"                ____________________________________________________________","lastModifiedDate":"2024-01-22"},{"lineNumber":253,"author":{"gitId":"kokerinks"},"content":"                 Got it. I\u0027ve added this task:","lastModifiedDate":"2024-01-22"},{"lineNumber":254,"author":{"gitId":"kokerinks"},"content":"                   %s\"\"\", newEvent));","lastModifiedDate":"2024-01-22"},{"lineNumber":255,"author":{"gitId":"kokerinks"},"content":"        return newEvent;","lastModifiedDate":"2024-01-22"},{"lineNumber":256,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":257,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":258,"author":{"gitId":"kokerinks"},"content":"    public static void deleteTask (String[] parts, ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":259,"author":{"gitId":"kokerinks"},"content":"        if (parts.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":260,"author":{"gitId":"kokerinks"},"content":"            throw new DukeException(\"Unknown usage - task number should be included in \\\"delete\\\" command\");","lastModifiedDate":"2024-01-24"},{"lineNumber":261,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":262,"author":{"gitId":"kokerinks"},"content":"        for (char c : parts[1].toCharArray()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":263,"author":{"gitId":"kokerinks"},"content":"            if (!Character.isDigit(c)) {","lastModifiedDate":"2024-01-24"},{"lineNumber":264,"author":{"gitId":"kokerinks"},"content":"                throw new DukeException(\"Unknown usage - task number given is not a valid number\");","lastModifiedDate":"2024-01-24"},{"lineNumber":265,"author":{"gitId":"kokerinks"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":266,"author":{"gitId":"kokerinks"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":267,"author":{"gitId":"kokerinks"},"content":"        int i \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2024-01-24"},{"lineNumber":268,"author":{"gitId":"kokerinks"},"content":"        Task removedTask \u003d tasks.remove(i);","lastModifiedDate":"2024-01-24"},{"lineNumber":269,"author":{"gitId":"kokerinks"},"content":"        System.out.println(String.format(\"\"\"","lastModifiedDate":"2024-01-24"},{"lineNumber":270,"author":{"gitId":"kokerinks"},"content":"                ____________________________________________________________","lastModifiedDate":"2024-01-24"},{"lineNumber":271,"author":{"gitId":"kokerinks"},"content":"                 Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-01-24"},{"lineNumber":272,"author":{"gitId":"kokerinks"},"content":"                   %s\"\"\", removedTask));","lastModifiedDate":"2024-01-24"},{"lineNumber":273,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":274,"author":{"gitId":"kokerinks"},"content":"    public static void farewell() {","lastModifiedDate":"2024-01-22"},{"lineNumber":275,"author":{"gitId":"kokerinks"},"content":"        System.out.println(\"\"\"","lastModifiedDate":"2024-01-22"},{"lineNumber":276,"author":{"gitId":"kokerinks"},"content":"                ____________________________________________________________","lastModifiedDate":"2024-01-22"},{"lineNumber":277,"author":{"gitId":"kokerinks"},"content":"                 Bye. Hope to see you again soon!","lastModifiedDate":"2024-01-22"},{"lineNumber":278,"author":{"gitId":"kokerinks"},"content":"                ____________________________________________________________","lastModifiedDate":"2024-01-22"},{"lineNumber":279,"author":{"gitId":"kokerinks"},"content":"                 \"\"\");","lastModifiedDate":"2024-01-22"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kokerinks":277,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"    public DukeException() {","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"        super();","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"kokerinks":9}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"    protected String startDate;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"    protected String endDate;","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"    public Event (String description, String newStartDate, String newEndDate) {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"        this.startDate \u003d newStartDate;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"        this.endDate \u003d newEndDate;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), this.startDate, this.endDate);","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"        return String.format(\"E,%s,%s,%s\", super.toFileString(), this.startDate, this.endDate);","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"kokerinks":22}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"abstract class Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"    protected String description;","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"kokerinks"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"kokerinks"},"content":"        return String.format(\"%s,%s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"kokerinks"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"kokerinks"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"kokerinks"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"kokerinks"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"kokerinks":28}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"kokerinks"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"kokerinks"},"content":"        return String.format(\"T,%s\", super.toFileString());","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"kokerinks"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"kokerinks"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"kokerinks":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kokerinks"},"content":"todo borrow book","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"kokerinks"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"kokerinks"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"kokerinks"},"content":"mark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"kokerinks"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"kokerinks"},"content":"unmark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"kokerinks"},"content":"delete 2","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"kokerinks"},"content":"delete hello","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"kokerinks"},"content":"unmark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"kokerinks"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"kokerinks"},"content":"bye","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"kokerinks":11}}]
