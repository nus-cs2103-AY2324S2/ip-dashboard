[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"pjanthony2001"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"pjanthony2001"},"content":"checkstyle {","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"pjanthony2001"},"content":"    version \u003d \u002710.2\u0027","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"pjanthony2001"},"content":"dependencies {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"pjanthony2001"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"pjanthony2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"pjanthony2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"pjanthony2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"pjanthony2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"pjanthony2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"pjanthony2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"pjanthony2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"pjanthony2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"pjanthony2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"pjanthony2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"pjanthony2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"pjanthony2001"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"pjanthony2001"},"content":"dependencies {","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"pjanthony2001"},"content":"    implementation \u0027org.apache.commons:commons-lang3:3.14.0\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"pjanthony2001":28,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"# HAL9000 User Guide","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"![HAL9000 Screenshot](Ui.png)","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"HAL9000 is a Task Manager application that helps you keep track of your","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"tasks so that you don\u0027t have to! It is tailored to users who are familiar","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":"with a CLI.","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"Adds a deadline task to your task list.","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"Format: `deadline NAME /by BY-TIME`","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"Example: `deadline Math Homework /by 12-12-2021`","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"[D] [ ] Math Homework by: 12-12-2021 00:00","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"Now you have 1 tasks in list.","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"## Adding Events","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"Adds a event task to your task list.","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"Format: `event NAME /from FROM-TIME /to TO-TIME`","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"Example: `event Chemistry Homework /from 12-12-2021 /to 13-12-2021`","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"pjanthony2001"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"pjanthony2001"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"pjanthony2001"},"content":"[E] [ ] Chemistry Homework from: 12-12-2021 00:00 to: 13-12-2021 00:00","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"pjanthony2001"},"content":"Now you have 2 tasks in list.","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"pjanthony2001"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"pjanthony2001"},"content":"## Adding Todos","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"pjanthony2001"},"content":"Adds a todo task to your task list.","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"pjanthony2001"},"content":"Format: `todo NAME`","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"pjanthony2001"},"content":"Example: `todo Geography Homework`","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":46,"author":{"gitId":"pjanthony2001"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"pjanthony2001"},"content":"[T] [ ] Geography Homework","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"pjanthony2001"},"content":"Now you have 3 tasks in list.","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"pjanthony2001"},"content":"## Deleting Tasks","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"pjanthony2001"},"content":"Deletes a task from your task list.","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"pjanthony2001"},"content":"Format: `delete INDEX`","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":57,"author":{"gitId":"pjanthony2001"},"content":"Example: `delete 1`","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":59,"author":{"gitId":"pjanthony2001"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"pjanthony2001"},"content":"I have deleted this:","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"pjanthony2001"},"content":"[D] [ ] Math Homework by: 12-12-2021 00:00","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"pjanthony2001"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":64,"author":{"gitId":"pjanthony2001"},"content":"## Marking Tasks","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":66,"author":{"gitId":"pjanthony2001"},"content":"Marks a task on your task list.","lastModifiedDate":"2024-02-21"},{"lineNumber":67,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"pjanthony2001"},"content":"Format: `mark INDEX`","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"pjanthony2001"},"content":"Example: `mark 1`","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"pjanthony2001"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":73,"author":{"gitId":"pjanthony2001"},"content":"I have marked this:","lastModifiedDate":"2024-02-21"},{"lineNumber":74,"author":{"gitId":"pjanthony2001"},"content":"[E] [X] Chemistry Homework from: 12-12-2021 00:00 to: 13-12-2021 00:00","lastModifiedDate":"2024-02-21"},{"lineNumber":75,"author":{"gitId":"pjanthony2001"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"pjanthony2001"},"content":"## Unmarking Tasks","lastModifiedDate":"2024-02-20"},{"lineNumber":78,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"pjanthony2001"},"content":"Unmarks a task on your task list.","lastModifiedDate":"2024-02-21"},{"lineNumber":80,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"pjanthony2001"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2024-02-21"},{"lineNumber":82,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":83,"author":{"gitId":"pjanthony2001"},"content":"Example: `unmark 1`","lastModifiedDate":"2024-02-21"},{"lineNumber":84,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"pjanthony2001"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":86,"author":{"gitId":"pjanthony2001"},"content":"I have unmarked this:","lastModifiedDate":"2024-02-21"},{"lineNumber":87,"author":{"gitId":"pjanthony2001"},"content":"[E] [ ] Chemistry Homework from: 12-12-2021 00:00 to: 13-12-2021 00:00","lastModifiedDate":"2024-02-21"},{"lineNumber":88,"author":{"gitId":"pjanthony2001"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":89,"author":{"gitId":"pjanthony2001"},"content":"## Listing Tasks","lastModifiedDate":"2024-02-20"},{"lineNumber":90,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"pjanthony2001"},"content":"Lists all tasks in your task list.","lastModifiedDate":"2024-02-21"},{"lineNumber":92,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"pjanthony2001"},"content":"Format: `list`","lastModifiedDate":"2024-02-21"},{"lineNumber":94,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":95,"author":{"gitId":"pjanthony2001"},"content":"Example: `list`","lastModifiedDate":"2024-02-21"},{"lineNumber":96,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":97,"author":{"gitId":"pjanthony2001"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":98,"author":{"gitId":"pjanthony2001"},"content":"1. [E] [ ] Chemistry Homework from: 12-12-2021 00:00 to: 13-12-2021 00:00","lastModifiedDate":"2024-02-21"},{"lineNumber":99,"author":{"gitId":"pjanthony2001"},"content":"2. [T] [ ] Geography Homework","lastModifiedDate":"2024-02-21"},{"lineNumber":100,"author":{"gitId":"pjanthony2001"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":101,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":102,"author":{"gitId":"pjanthony2001"},"content":"## Searching Tasks","lastModifiedDate":"2024-02-20"},{"lineNumber":103,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":104,"author":{"gitId":"pjanthony2001"},"content":"Finds a task in your task list.","lastModifiedDate":"2024-02-21"},{"lineNumber":105,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":106,"author":{"gitId":"pjanthony2001"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2024-02-21"},{"lineNumber":107,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":108,"author":{"gitId":"pjanthony2001"},"content":"Example: `find Geography`","lastModifiedDate":"2024-02-21"},{"lineNumber":109,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":110,"author":{"gitId":"pjanthony2001"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":111,"author":{"gitId":"pjanthony2001"},"content":"Here are your matching search results:","lastModifiedDate":"2024-02-21"},{"lineNumber":112,"author":{"gitId":"pjanthony2001"},"content":"1. [T] [ ] Geography Homework","lastModifiedDate":"2024-02-21"},{"lineNumber":113,"author":{"gitId":"pjanthony2001"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":114,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":115,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":116,"author":{"gitId":"pjanthony2001"},"content":"## Undoing Commands","lastModifiedDate":"2024-02-20"},{"lineNumber":117,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":118,"author":{"gitId":"pjanthony2001"},"content":"Undoes the most recent command.","lastModifiedDate":"2024-02-21"},{"lineNumber":119,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":120,"author":{"gitId":"pjanthony2001"},"content":"Format: `undo`","lastModifiedDate":"2024-02-21"},{"lineNumber":121,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":122,"author":{"gitId":"pjanthony2001"},"content":"Example: `undo`","lastModifiedDate":"2024-02-21"},{"lineNumber":123,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":124,"author":{"gitId":"pjanthony2001"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":125,"author":{"gitId":"pjanthony2001"},"content":"Your UNMARK command was undone!","lastModifiedDate":"2024-02-21"},{"lineNumber":126,"author":{"gitId":"pjanthony2001"},"content":"This is your current list:","lastModifiedDate":"2024-02-21"},{"lineNumber":127,"author":{"gitId":"pjanthony2001"},"content":"1. [E] [X] Chemistry Homework from: 12-12-2021 00:00 to: 13-12-2021 00:00","lastModifiedDate":"2024-02-21"},{"lineNumber":128,"author":{"gitId":"pjanthony2001"},"content":"2. [T] [ ] Geography Homework","lastModifiedDate":"2024-02-21"},{"lineNumber":129,"author":{"gitId":"pjanthony2001"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":130,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":131,"author":{"gitId":"pjanthony2001"},"content":"## Redoing Commands","lastModifiedDate":"2024-02-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":133,"author":{"gitId":"pjanthony2001"},"content":"Redoes the most recent command.","lastModifiedDate":"2024-02-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":135,"author":{"gitId":"pjanthony2001"},"content":"Format: `redo`","lastModifiedDate":"2024-02-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":137,"author":{"gitId":"pjanthony2001"},"content":"Example: `redo`","lastModifiedDate":"2024-02-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":140,"author":{"gitId":"pjanthony2001"},"content":"Your UNMARK command was redone!","lastModifiedDate":"2024-02-21"},{"lineNumber":141,"author":{"gitId":"pjanthony2001"},"content":"This is your current list:","lastModifiedDate":"2024-02-21"},{"lineNumber":142,"author":{"gitId":"pjanthony2001"},"content":"1. [E] [ ] Chemistry Homework from: 12-12-2021 00:00 to: 13-12-2021 00:00","lastModifiedDate":"2024-02-21"},{"lineNumber":143,"author":{"gitId":"pjanthony2001"},"content":"2. [T] [ ] Geography Homework","lastModifiedDate":"2024-02-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":146,"author":{"gitId":"pjanthony2001"},"content":"## Exiting the Application","lastModifiedDate":"2024-02-20"},{"lineNumber":147,"author":{"gitId":"pjanthony2001"},"content":"Exits and closes the application.","lastModifiedDate":"2024-02-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":149,"author":{"gitId":"pjanthony2001"},"content":"Format: `bye`","lastModifiedDate":"2024-02-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":151,"author":{"gitId":"pjanthony2001"},"content":"Example: `bye`","lastModifiedDate":"2024-02-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":153,"author":{"gitId":"pjanthony2001"},"content":"--- ","lastModifiedDate":"2024-02-21"},{"lineNumber":154,"author":{"gitId":"pjanthony2001"},"content":"## Command summary","lastModifiedDate":"2024-02-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":156,"author":{"gitId":"pjanthony2001"},"content":"| **Action**              | **Format**                                 |","lastModifiedDate":"2024-02-21"},{"lineNumber":157,"author":{"gitId":"pjanthony2001"},"content":"|-------------------------|--------------------------------------------|","lastModifiedDate":"2024-02-21"},{"lineNumber":158,"author":{"gitId":"pjanthony2001"},"content":"| Adding Deadlines        | `deadline NAME /by BY-TIME`                |","lastModifiedDate":"2024-02-21"},{"lineNumber":159,"author":{"gitId":"pjanthony2001"},"content":"| Adding Events           | `event NAME /from START-TIME /to END-TIME` |","lastModifiedDate":"2024-02-21"},{"lineNumber":160,"author":{"gitId":"pjanthony2001"},"content":"| Adding Todos            | `todo NAME`                                |","lastModifiedDate":"2024-02-21"},{"lineNumber":161,"author":{"gitId":"pjanthony2001"},"content":"| Deleting Tasks          | `list`                                     |","lastModifiedDate":"2024-02-21"},{"lineNumber":162,"author":{"gitId":"pjanthony2001"},"content":"| Marking Tasks           | `mark INDEX`                               |","lastModifiedDate":"2024-02-21"},{"lineNumber":163,"author":{"gitId":"pjanthony2001"},"content":"| Unmarking Tasks         | `unmark INDEX`                             |","lastModifiedDate":"2024-02-21"},{"lineNumber":164,"author":{"gitId":"pjanthony2001"},"content":"| Listing Tasks           | `delete INDEX`                             |","lastModifiedDate":"2024-02-21"},{"lineNumber":165,"author":{"gitId":"pjanthony2001"},"content":"| Searching tasks         | `find KEYWORD`                             |","lastModifiedDate":"2024-02-21"},{"lineNumber":166,"author":{"gitId":"pjanthony2001"},"content":"| Undoing Commands        | `undo`                                     |","lastModifiedDate":"2024-02-21"},{"lineNumber":167,"author":{"gitId":"pjanthony2001"},"content":"| Redoing Commands        | `redo`                                     |","lastModifiedDate":"2024-02-21"},{"lineNumber":168,"author":{"gitId":"pjanthony2001"},"content":"| Exiting the Application | `bye`                                      |","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"pjanthony2001":143,"-":25}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"import duke.graphics.GraphicalUI;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":" *","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"        String logo \u003d \"          _______  _           _____   _______  _______  _______\\n\"","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"                + \"|\\\\     /|(  ___  )( \\\\         / ___ \\\\ (  __   )(  __   )(  __   )\\n\"","lastModifiedDate":"2024-01-20"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"                + \"| )   ( || (   ) || (        ( (   ) )| (  )  || (  )  || (  )  |\\n\"","lastModifiedDate":"2024-01-20"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"                + \"| (___) || (___) || |        ( (___) || | /   || | /   || | /   |\\n\"","lastModifiedDate":"2024-01-20"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"                + \"|  ___  ||  ___  || |         \\\\____  || (/ /) || (/ /) || (/ /) |\\n\"","lastModifiedDate":"2024-01-20"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"                + \"| (   ) || (   ) || |              ) ||   / | ||   / | ||   / | |\\n\"","lastModifiedDate":"2024-01-20"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"                + \"| )   ( || )   ( || (____/\\\\  /\\\\____) )|  (__) ||  (__) ||  (__) |\\n\"","lastModifiedDate":"2024-01-20"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":"                + \"|/     \\\\||/     \\\\|(_______/  \\\\______/ (_______)(_______)(_______)\\n\";","lastModifiedDate":"2024-01-20"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"        System.out.println(logo);","lastModifiedDate":"2024-01-20"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"        Application.launch(GraphicalUI.class, args);","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"pjanthony2001":18,"-":4}},{"path":"src/main/java/duke/codec/Codec.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.codec;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"import duke.exceptions.ProcessingException;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"import duke.tasks.Event;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":" * The `Codec` class provides methods for encoding and decoding tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"public class Codec {","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"    private static final String DELIMITER \u003d \", \";","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"     * Encodes a task into a string representation.","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"     * @param task The task to be encoded.","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"     * @return A string representation of the encoded task.","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"    public String encode(Task task) {","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"        String[] encodedTask \u003d task.encode();","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"        return buildString(encodedTask);","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"pjanthony2001"},"content":"     * Builds a concatenated string from an array of string values using a specified delimiter.","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"pjanthony2001"},"content":"     * @param values The array of values to be joined.","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"pjanthony2001"},"content":"     * @return A concatenated string with values separated by the specified delimiter.","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"pjanthony2001"},"content":"    public String buildString(String... values) {","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"pjanthony2001"},"content":"        StringJoiner encodedString \u003d new StringJoiner(DELIMITER);","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"pjanthony2001"},"content":"        for (String string : values) {","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"pjanthony2001"},"content":"            encodedString.add(string);","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"pjanthony2001"},"content":"        return encodedString.toString();","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"pjanthony2001"},"content":"     * Decodes a string representation of a task into a Task object.","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"pjanthony2001"},"content":"     * @param string The string representation of the task to be decoded.","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"pjanthony2001"},"content":"     * @return A Task object representing the decoded task.","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"pjanthony2001"},"content":"     * @throws ProcessingException If there is an error while decoding the task.","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"pjanthony2001"},"content":"    public Task decode(String string) throws ProcessingException {","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"pjanthony2001"},"content":"        String[] splitString \u003d string.split(DELIMITER);","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"pjanthony2001"},"content":"        switch (splitString[0]) {","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"pjanthony2001"},"content":"        case \"D\":","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"pjanthony2001"},"content":"            return decodeDeadline(splitString);","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"pjanthony2001"},"content":"        case \"T\":","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"pjanthony2001"},"content":"            return decodeTodo(splitString);","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"pjanthony2001"},"content":"        case \"E\":","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"pjanthony2001"},"content":"            return decodeEvent(splitString);","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"pjanthony2001"},"content":"        default:","lastModifiedDate":"2024-01-26"},{"lineNumber":63,"author":{"gitId":"pjanthony2001"},"content":"            throw new ProcessingException(\"Error while decoding identifier\");","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"pjanthony2001"},"content":"     * Decodes a string representation of a Deadline task into a Deadline object.","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"pjanthony2001"},"content":"     * @param splitString The array of split values from the encoded Deadline string.","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"pjanthony2001"},"content":"     * @return A Deadline object representing the decoded Deadline task.","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"pjanthony2001"},"content":"     * @throws ProcessingException If there is an error while decoding the Deadline task.","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"pjanthony2001"},"content":"    public Task decodeDeadline(String[] splitString) throws ProcessingException {","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"pjanthony2001"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":76,"author":{"gitId":"pjanthony2001"},"content":"            Boolean done \u003d Boolean.parseBoolean(splitString[1]);","lastModifiedDate":"2024-01-26"},{"lineNumber":77,"author":{"gitId":"pjanthony2001"},"content":"            String taskName \u003d splitString[2];","lastModifiedDate":"2024-01-26"},{"lineNumber":78,"author":{"gitId":"pjanthony2001"},"content":"            LocalDateTime by \u003d TimeProcessor.fromString(splitString[3]);","lastModifiedDate":"2024-01-26"},{"lineNumber":79,"author":{"gitId":"pjanthony2001"},"content":"            return new Deadline(taskName, by, done);","lastModifiedDate":"2024-01-26"},{"lineNumber":80,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"pjanthony2001"},"content":"        } catch (IndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"pjanthony2001"},"content":"            throw new ProcessingException(\"Error while decoding Deadline\", e);","lastModifiedDate":"2024-01-26"},{"lineNumber":83,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":84,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":85,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":86,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":87,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"pjanthony2001"},"content":"     * Decodes a string representation of an Event task into an Event object.","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"pjanthony2001"},"content":"     * @param splitString The array of split values from the encoded Event string.","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"pjanthony2001"},"content":"     * @return An Event object representing the decoded Event task.","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"pjanthony2001"},"content":"     * @throws ProcessingException If there is an error while decoding the Event task.","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"pjanthony2001"},"content":"    public Task decodeEvent(String[] splitString) throws ProcessingException {","lastModifiedDate":"2024-01-26"},{"lineNumber":95,"author":{"gitId":"pjanthony2001"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":96,"author":{"gitId":"pjanthony2001"},"content":"            Boolean done \u003d Boolean.parseBoolean(splitString[1]);","lastModifiedDate":"2024-01-26"},{"lineNumber":97,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":98,"author":{"gitId":"pjanthony2001"},"content":"            String taskName \u003d splitString[2];","lastModifiedDate":"2024-01-26"},{"lineNumber":99,"author":{"gitId":"pjanthony2001"},"content":"            LocalDateTime from \u003d TimeProcessor.fromString(splitString[3]);","lastModifiedDate":"2024-01-26"},{"lineNumber":100,"author":{"gitId":"pjanthony2001"},"content":"            LocalDateTime to \u003d TimeProcessor.fromString(splitString[4]);","lastModifiedDate":"2024-01-26"},{"lineNumber":101,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":102,"author":{"gitId":"pjanthony2001"},"content":"            return new Event(taskName, from, to, done);","lastModifiedDate":"2024-01-26"},{"lineNumber":103,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":104,"author":{"gitId":"pjanthony2001"},"content":"        } catch (IndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"pjanthony2001"},"content":"            throw new ProcessingException(\"Error while decoding Event\", e);","lastModifiedDate":"2024-01-26"},{"lineNumber":106,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":107,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":108,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":109,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"pjanthony2001"},"content":"     * Decodes a string representation of a Todo task into a Todo object.","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"pjanthony2001"},"content":"     * @param splitString The array of split values from the encoded Todo string.","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"pjanthony2001"},"content":"     * @return A Todo object representing the decoded Todo task.","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"pjanthony2001"},"content":"     * @throws ProcessingException If there is an error while decoding the Todo task.","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":116,"author":{"gitId":"pjanthony2001"},"content":"    public Task decodeTodo(String[] splitString) throws ProcessingException {","lastModifiedDate":"2024-01-26"},{"lineNumber":117,"author":{"gitId":"pjanthony2001"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":118,"author":{"gitId":"pjanthony2001"},"content":"            Boolean done \u003d Boolean.parseBoolean(splitString[1]);","lastModifiedDate":"2024-01-26"},{"lineNumber":119,"author":{"gitId":"pjanthony2001"},"content":"            String taskName \u003d splitString[2];","lastModifiedDate":"2024-01-26"},{"lineNumber":120,"author":{"gitId":"pjanthony2001"},"content":"            return new Todo(taskName, done);","lastModifiedDate":"2024-01-26"},{"lineNumber":121,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":122,"author":{"gitId":"pjanthony2001"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"pjanthony2001"},"content":"            throw new ProcessingException(\"Error while decoding Todo\", e);","lastModifiedDate":"2024-01-26"},{"lineNumber":124,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":125,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":126,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":127,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"pjanthony2001":127}},{"path":"src/main/java/duke/codec/TimeProcessor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.codec;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":" * The `TimeProcessor` class provides utility methods for converting between `LocalDateTime` and formatted strings.","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"public class TimeProcessor {","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"    private static final String DATE_FORMAT \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"    private static final String TIME_FORMAT \u003d \"HH:mm\";","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":"        .appendPattern(DATE_FORMAT)","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"        .optionalStart()","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"        .appendLiteral(\u0027 \u0027)","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"        .appendPattern(TIME_FORMAT)","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"        .optionalEnd()","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"        .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"        .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"        .toFormatter();","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"    public static String toString(LocalDateTime value) throws DateTimeException {","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"        return DATE_TIME_FORMATTER.format(value);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"pjanthony2001"},"content":"    public static LocalDateTime fromString(String value) throws DateTimeParseException {","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"pjanthony2001"},"content":"        return LocalDateTime.parse(value, DATE_TIME_FORMATTER);","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"pjanthony2001":36}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.command;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"import duke.exceptions.InputException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":" * Enumeration of commands that can be executed in the HAL9000 application.","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"public enum Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":"    BYE {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":"        @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"        public boolean isExit() {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"            return true;","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"    },","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"    DEADLINE,","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"    DELETE,","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"    EVENT,","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":"    FIND {","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"        @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"        public boolean isIgnoredHistory() {","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"            return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"    },","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"    LIST {","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"        @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"        public boolean isIgnoredHistory() {","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"            return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"    },","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"    MARK,","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"pjanthony2001"},"content":"    TODO,","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"pjanthony2001"},"content":"    UNDO {","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"pjanthony2001"},"content":"        @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"pjanthony2001"},"content":"        public boolean isIgnoredHistory() {","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"pjanthony2001"},"content":"            return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"pjanthony2001"},"content":"    },","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"pjanthony2001"},"content":"    UNMARK,","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"pjanthony2001"},"content":"    REDO {","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"pjanthony2001"},"content":"        @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"pjanthony2001"},"content":"        public boolean isIgnoredHistory() {","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"pjanthony2001"},"content":"            return true;","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"pjanthony2001"},"content":"    };","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"pjanthony2001"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"pjanthony2001"},"content":"        return false;","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"pjanthony2001"},"content":"    public boolean isIgnoredHistory() {","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"pjanthony2001"},"content":"        return false;","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"pjanthony2001"},"content":"     * Parses and returns the appropriate command based on user input.","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"pjanthony2001"},"content":"     * @param input The user\u0027s input string.","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"pjanthony2001"},"content":"     * @return The corresponding `Command` enum value.","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"pjanthony2001"},"content":"     * @throws InputException If there is an issue processing the input or if the command is unrecognized.","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"pjanthony2001"},"content":"    public static Command processCommand(String input) throws InputException {","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"pjanthony2001"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"pjanthony2001"},"content":"            String commandString \u003d input.split(\" \")[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"pjanthony2001"},"content":"            if (!commandString.toLowerCase().equals(commandString)) {","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"pjanthony2001"},"content":"                throw new InputException(\"Your command should be in all lower case!\\n\" + commandString);","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"pjanthony2001"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"pjanthony2001"},"content":"            return Command.valueOf(commandString.toUpperCase());","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"pjanthony2001"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"pjanthony2001"},"content":"            String message \u003d \"Something went wrong when processing your command: \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"pjanthony2001"},"content":"                    + \"Check your input again: \" + input;","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"pjanthony2001"},"content":"            throw new InputException(message, e);","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"pjanthony2001"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"pjanthony2001"},"content":"            String message \u003d \"You inputted an unrecognizable command\";","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"pjanthony2001"},"content":"            throw new InputException(message);","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"pjanthony2001":77}},{"path":"src/main/java/duke/command/CommandProcessor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.command;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"import duke.codec.TimeProcessor;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"import duke.exceptions.InputException;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":"import duke.exceptions.ProcessingException;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"import duke.history.HistoryManager;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":"import duke.history.State;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"import duke.tasks.Event;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":" * The `CommandProcessor` class handles the processing of user commands in the Duke application.","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":" * It interprets user input, executes commands, and interacts with the storage system to manage tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"public class CommandProcessor {","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"    private final Storage storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"    private final HistoryManager historyManager;","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"     * Constructs a new CommandProcessor object with the specified storage and historyManager.","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"     * @param storage        The storage system for managing tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"     * @param historyManager The history manager for maintaining command history.","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"    public CommandProcessor(Storage storage, HistoryManager historyManager) {","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"pjanthony2001"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"pjanthony2001"},"content":"        this.historyManager \u003d historyManager;","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"pjanthony2001"},"content":"     * Processes the given command and input, executing the corresponding action.","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"pjanthony2001"},"content":"     * An assertion will check if the command to execute falls through the switch case.","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"pjanthony2001"},"content":"     * @param command The command to execute.","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"pjanthony2001"},"content":"     * @param input   The user input associated with the command.","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"pjanthony2001"},"content":"     * @throws InputException      If there is an issue with the input format or command.","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"pjanthony2001"},"content":"     * @throws ProcessingException If there is an issue processing the command or storage.","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"pjanthony2001"},"content":"    public String processData(Command command, String input) throws InputException, ProcessingException {","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"pjanthony2001"},"content":"        String result \u003d \"\";","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"pjanthony2001"},"content":"        switch (command) {","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"pjanthony2001"},"content":"        case DELETE:","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"pjanthony2001"},"content":"            result \u003d storage.delete(processDelete(input));","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"pjanthony2001"},"content":"            break;","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"pjanthony2001"},"content":"        case LIST:","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"pjanthony2001"},"content":"            result \u003d storage.displayList();","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"pjanthony2001"},"content":"            break;","lastModifiedDate":"2024-01-22"},{"lineNumber":55,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":56,"author":{"gitId":"pjanthony2001"},"content":"        case MARK:","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"pjanthony2001"},"content":"            result \u003d storage.mark(processMark(input, Command.MARK));","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"pjanthony2001"},"content":"            break;","lastModifiedDate":"2024-01-22"},{"lineNumber":59,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":60,"author":{"gitId":"pjanthony2001"},"content":"        case UNMARK:","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"pjanthony2001"},"content":"            result \u003d storage.unmark(processMark(input, Command.UNMARK));","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"pjanthony2001"},"content":"            break;","lastModifiedDate":"2024-01-22"},{"lineNumber":63,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":64,"author":{"gitId":"pjanthony2001"},"content":"        case DEADLINE:","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"pjanthony2001"},"content":"            result \u003d storage.add(processDeadline(input));","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"pjanthony2001"},"content":"            break;","lastModifiedDate":"2024-01-22"},{"lineNumber":67,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":68,"author":{"gitId":"pjanthony2001"},"content":"        case EVENT:","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"pjanthony2001"},"content":"            result \u003d storage.add(processEvent(input));","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"pjanthony2001"},"content":"            break;","lastModifiedDate":"2024-01-22"},{"lineNumber":71,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":72,"author":{"gitId":"pjanthony2001"},"content":"        case TODO:","lastModifiedDate":"2024-01-26"},{"lineNumber":73,"author":{"gitId":"pjanthony2001"},"content":"            result \u003d storage.add(processTodo(input));","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"pjanthony2001"},"content":"            break;","lastModifiedDate":"2024-01-22"},{"lineNumber":75,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":76,"author":{"gitId":"pjanthony2001"},"content":"        case FIND:","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"pjanthony2001"},"content":"            result \u003d storage.displaySearchList(processFind(input));","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"pjanthony2001"},"content":"            break;","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"pjanthony2001"},"content":"        case UNDO:","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"pjanthony2001"},"content":"            result \u003d historyManager.undo(storage);","lastModifiedDate":"2024-02-12"},{"lineNumber":82,"author":{"gitId":"pjanthony2001"},"content":"            break;","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"pjanthony2001"},"content":"        case REDO:","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"pjanthony2001"},"content":"            result \u003d historyManager.redo(storage);","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"pjanthony2001"},"content":"            break;","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"pjanthony2001"},"content":"        default:","lastModifiedDate":"2024-01-22"},{"lineNumber":89,"author":{"gitId":"pjanthony2001"},"content":"            assert false : command;","lastModifiedDate":"2024-02-11"},{"lineNumber":90,"author":{"gitId":"pjanthony2001"},"content":"            break;","lastModifiedDate":"2024-01-26"},{"lineNumber":91,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":92,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"pjanthony2001"},"content":"        State currState \u003d storage.update(command);","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"pjanthony2001"},"content":"        historyManager.updateHistory(currState);","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"pjanthony2001"},"content":"        return result;","lastModifiedDate":"2024-02-05"},{"lineNumber":96,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":97,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"pjanthony2001"},"content":"     * Processes the DELETE command input to extract the task index to be deleted.","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"pjanthony2001"},"content":"     * @param input The user input for the DELETE command.","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"pjanthony2001"},"content":"     * @return The index of the task to be deleted.","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"pjanthony2001"},"content":"     * @throws InputException If there is an issue with the input format or command.","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"pjanthony2001"},"content":"    public Integer processDelete(String input) throws InputException {","lastModifiedDate":"2024-01-26"},{"lineNumber":105,"author":{"gitId":"pjanthony2001"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":106,"author":{"gitId":"pjanthony2001"},"content":"            return Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"pjanthony2001"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":109,"author":{"gitId":"pjanthony2001"},"content":"            throw InputException.exceptionCommandParsing(Command.DELETE, input, e);","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":111,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":112,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"pjanthony2001"},"content":"     * Processes the DEADLINE command input to create a `Deadline` task.","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":116,"author":{"gitId":"pjanthony2001"},"content":"     * @param input The user input for the DEADLINE command.","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"pjanthony2001"},"content":"     * @return A `Deadline` task created from the input.","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"pjanthony2001"},"content":"     * @throws InputException If there is an issue with the input format or command.","lastModifiedDate":"2024-01-28"},{"lineNumber":119,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":120,"author":{"gitId":"pjanthony2001"},"content":"    public Task processDeadline(String input) throws InputException {","lastModifiedDate":"2024-01-26"},{"lineNumber":121,"author":{"gitId":"pjanthony2001"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":122,"author":{"gitId":"pjanthony2001"},"content":"            String restOfInput \u003d input.substring(9);","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"pjanthony2001"},"content":"            String[] splitInput \u003d restOfInput.split(\" /by \");","lastModifiedDate":"2024-01-22"},{"lineNumber":124,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":125,"author":{"gitId":"pjanthony2001"},"content":"            String taskName \u003d splitInput[0];","lastModifiedDate":"2024-01-22"},{"lineNumber":126,"author":{"gitId":"pjanthony2001"},"content":"            LocalDateTime by \u003d TimeProcessor.fromString(splitInput[1]);","lastModifiedDate":"2024-01-26"},{"lineNumber":127,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":128,"author":{"gitId":"pjanthony2001"},"content":"            return new Deadline(taskName, by);","lastModifiedDate":"2024-01-22"},{"lineNumber":129,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":130,"author":{"gitId":"pjanthony2001"},"content":"        } catch (IndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":131,"author":{"gitId":"pjanthony2001"},"content":"            throw InputException.exceptionCommandParsing(Command.DEADLINE, input, e);","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":133,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":134,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":135,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":136,"author":{"gitId":"pjanthony2001"},"content":"     * Processes the TODO command input to create a `Todo` task.","lastModifiedDate":"2024-01-28"},{"lineNumber":137,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":138,"author":{"gitId":"pjanthony2001"},"content":"     * @param input The user input for the TODO command.","lastModifiedDate":"2024-01-28"},{"lineNumber":139,"author":{"gitId":"pjanthony2001"},"content":"     * @return A `Todo` task created from the input.","lastModifiedDate":"2024-01-28"},{"lineNumber":140,"author":{"gitId":"pjanthony2001"},"content":"     * @throws InputException If there is an issue with the input format or command.","lastModifiedDate":"2024-01-28"},{"lineNumber":141,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":142,"author":{"gitId":"pjanthony2001"},"content":"    public Task processTodo(String input) throws InputException {","lastModifiedDate":"2024-01-26"},{"lineNumber":143,"author":{"gitId":"pjanthony2001"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":144,"author":{"gitId":"pjanthony2001"},"content":"            String taskName \u003d input.substring(5);","lastModifiedDate":"2024-01-28"},{"lineNumber":145,"author":{"gitId":"pjanthony2001"},"content":"            return new Todo(taskName);","lastModifiedDate":"2024-01-22"},{"lineNumber":146,"author":{"gitId":"pjanthony2001"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":147,"author":{"gitId":"pjanthony2001"},"content":"            throw InputException.exceptionCommandParsing(Command.TODO, input, e);","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":149,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":150,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":151,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":152,"author":{"gitId":"pjanthony2001"},"content":"     * Processes the EVENT command input to create an `Event` task.","lastModifiedDate":"2024-01-28"},{"lineNumber":153,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":154,"author":{"gitId":"pjanthony2001"},"content":"     * @param input The user input for the EVENT command.","lastModifiedDate":"2024-01-28"},{"lineNumber":155,"author":{"gitId":"pjanthony2001"},"content":"     * @return An `Event` task created from the input.","lastModifiedDate":"2024-01-28"},{"lineNumber":156,"author":{"gitId":"pjanthony2001"},"content":"     * @throws InputException If there is an issue with the input format or command.","lastModifiedDate":"2024-01-28"},{"lineNumber":157,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":158,"author":{"gitId":"pjanthony2001"},"content":"    public Task processEvent(String input) throws InputException {","lastModifiedDate":"2024-01-26"},{"lineNumber":159,"author":{"gitId":"pjanthony2001"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":160,"author":{"gitId":"pjanthony2001"},"content":"            String restOfInput \u003d input.substring(6);","lastModifiedDate":"2024-01-28"},{"lineNumber":161,"author":{"gitId":"pjanthony2001"},"content":"            String[] splitFrom \u003d restOfInput.split(\" /from \");","lastModifiedDate":"2024-01-22"},{"lineNumber":162,"author":{"gitId":"pjanthony2001"},"content":"            String[] fromTo \u003d splitFrom[1].split(\" /to \");","lastModifiedDate":"2024-01-22"},{"lineNumber":163,"author":{"gitId":"pjanthony2001"},"content":"            String taskName \u003d splitFrom[0];","lastModifiedDate":"2024-01-22"},{"lineNumber":164,"author":{"gitId":"pjanthony2001"},"content":"            LocalDateTime from \u003d TimeProcessor.fromString(fromTo[0]);","lastModifiedDate":"2024-01-26"},{"lineNumber":165,"author":{"gitId":"pjanthony2001"},"content":"            LocalDateTime to \u003d TimeProcessor.fromString(fromTo[1]);","lastModifiedDate":"2024-01-26"},{"lineNumber":166,"author":{"gitId":"pjanthony2001"},"content":"            return new Event(taskName, from, to);","lastModifiedDate":"2024-01-22"},{"lineNumber":167,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":168,"author":{"gitId":"pjanthony2001"},"content":"        } catch (IndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":169,"author":{"gitId":"pjanthony2001"},"content":"            throw InputException.exceptionCommandParsing(Command.EVENT, input, e);","lastModifiedDate":"2024-02-01"},{"lineNumber":170,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":171,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":172,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":173,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":174,"author":{"gitId":"pjanthony2001"},"content":"     * Processes the MARK or UNMARK command input to extract the task index to be marked or unmarked.","lastModifiedDate":"2024-01-28"},{"lineNumber":175,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":176,"author":{"gitId":"pjanthony2001"},"content":"     * @param input The user input for the MARK or UNMARK command.","lastModifiedDate":"2024-01-28"},{"lineNumber":177,"author":{"gitId":"pjanthony2001"},"content":"     * @param cmd   The command type (MARK or UNMARK).","lastModifiedDate":"2024-01-28"},{"lineNumber":178,"author":{"gitId":"pjanthony2001"},"content":"     * @return The index of the task to be marked or unmarked.","lastModifiedDate":"2024-01-28"},{"lineNumber":179,"author":{"gitId":"pjanthony2001"},"content":"     * @throws InputException If there is an issue with the input format or command.","lastModifiedDate":"2024-01-28"},{"lineNumber":180,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":181,"author":{"gitId":"pjanthony2001"},"content":"    public Integer processMark(String input, Command cmd) throws InputException {","lastModifiedDate":"2024-01-26"},{"lineNumber":182,"author":{"gitId":"pjanthony2001"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":183,"author":{"gitId":"pjanthony2001"},"content":"            return Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":184,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":185,"author":{"gitId":"pjanthony2001"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":186,"author":{"gitId":"pjanthony2001"},"content":"            throw InputException.exceptionCommandParsing(cmd, input, e);","lastModifiedDate":"2024-02-01"},{"lineNumber":187,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":188,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":189,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":190,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":191,"author":{"gitId":"pjanthony2001"},"content":"     * Processes the FIND command input to extract the search query.","lastModifiedDate":"2024-01-28"},{"lineNumber":192,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":193,"author":{"gitId":"pjanthony2001"},"content":"     * @param input The user input for the FIND command.","lastModifiedDate":"2024-01-28"},{"lineNumber":194,"author":{"gitId":"pjanthony2001"},"content":"     * @return The search query to find matching tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":195,"author":{"gitId":"pjanthony2001"},"content":"     * @throws InputException If there is an issue with the input format or command.","lastModifiedDate":"2024-01-28"},{"lineNumber":196,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":197,"author":{"gitId":"pjanthony2001"},"content":"    public String processFind(String input) throws InputException {","lastModifiedDate":"2024-01-28"},{"lineNumber":198,"author":{"gitId":"pjanthony2001"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":199,"author":{"gitId":"pjanthony2001"},"content":"            return input.split(\" \")[1];","lastModifiedDate":"2024-01-28"},{"lineNumber":200,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":201,"author":{"gitId":"pjanthony2001"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":202,"author":{"gitId":"pjanthony2001"},"content":"            throw InputException.exceptionCommandParsing(Command.FIND, input, e);","lastModifiedDate":"2024-02-01"},{"lineNumber":203,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":204,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":205,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":206,"author":{"gitId":"pjanthony2001"},"content":"    public void close() {","lastModifiedDate":"2024-02-01"},{"lineNumber":207,"author":{"gitId":"pjanthony2001"},"content":"        storage.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":208,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":209,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"pjanthony2001":209}},{"path":"src/main/java/duke/exceptions/HalException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.exceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":" * The `HalException` class represents any exception that is defined for the HAL9000 chat-bot.","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"public class HalException extends Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":"    public HalException(String message) {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"        super(message);","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"    public HalException(String message, Throwable cause) {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"        super(message, cause);","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"pjanthony2001":15}},{"path":"src/main/java/duke/exceptions/InputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"import duke.command.Command;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":" * The `InputException` class represents an exception related to input processing.","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"public class InputException extends HalException {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":"    public InputException(String message) {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":"        super(message);","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"    public InputException(String message, Throwable cause) {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"        super(message, cause);","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":"     * Creates an `InputException` for command parsing with a specific command, input, and cause.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"     * @param command The command being parsed when the exception occurred.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"     * @param input The input associated with the exception.","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"     * @param cause The cause of the exception (a Throwable object).","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"     * @return An `InputException` with a message describing the error during command parsing.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"    public static InputException exceptionCommandParsing(Command command, String input, Throwable cause) {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"        String message \u003d String.format(","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"                \"Something went wrong when parsing your %s command, check your input again:\\n%s\",","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"                command, input);","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"        return new InputException(message, cause);","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"pjanthony2001":31}},{"path":"src/main/java/duke/exceptions/ProcessingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":" * The `ProcessingException` class represents an exception related to processing tasks or data in the Duke application.","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"public class ProcessingException extends HalException {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":"    public ProcessingException(String message) {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":"        super(message);","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"    public ProcessingException(String message, Throwable cause) {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"        super(message, cause);","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":"     * Creates an \"ProcessingException\" for command execution with a specific command and cause.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"     * @param command The command being executed when the exception occurred.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"     * @param cause The cause of the exception (a Throwable object).","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"     * @return A `ProcessingException` with a message describing the error during command execution.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"    public static ProcessingException exceptionCommandExecution(Command command, Throwable cause) {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"        String message \u003d String.format(","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"                \"Something went wrong when executing your %s command, check your input again\",","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"                command);","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"        return new ProcessingException(message, cause);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"pjanthony2001":30}},{"path":"src/main/java/duke/exceptions/StartUpException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.exceptions;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":" * The `StartUpException` class represents an exception related to startup issues in the Duke application.","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"public class StartUpException extends HalException {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":"    public StartUpException(String message, Throwable cause) {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"        super(message, cause);","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"pjanthony2001":10}},{"path":"src/main/java/duke/graphics/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.graphics;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":"import javafx.geometry.NodeOrientation;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"public class DialogBox extends VBox {","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"    @FXML","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"    private Label senderName;","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"    @FXML","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"    private Text messageContent;","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"    @FXML","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"    private Text timeStamp;","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"pjanthony2001"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"pjanthony2001"},"content":"    private ImageView profileImage;","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"pjanthony2001"},"content":"    private DialogBox(String text, Image img, String name) {","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"pjanthony2001"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"pjanthony2001"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"pjanthony2001"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"pjanthony2001"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"pjanthony2001"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"pjanthony2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"pjanthony2001"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"pjanthony2001"},"content":"        senderName.setText(name);","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"pjanthony2001"},"content":"        messageContent.setText(text);","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"pjanthony2001"},"content":"        profileImage.setImage(img);","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"pjanthony2001"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"pjanthony2001"},"content":"        timeStamp.setText(formatter.format(LocalDateTime.now()));","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"pjanthony2001"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right,","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"pjanthony2001"},"content":"     * to display HAL9000\u0027s dialogue.","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"pjanthony2001"},"content":"    private void flip() {","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"pjanthony2001"},"content":"        HBox hBox \u003d (HBox) this.getChildren().get(0);","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"pjanthony2001"},"content":"        hBox.setNodeOrientation(NodeOrientation.LEFT_TO_RIGHT);","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"pjanthony2001"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"pjanthony2001"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"pjanthony2001"},"content":"        return new DialogBox(text, img, \"Dave\");","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"pjanthony2001"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"pjanthony2001"},"content":"        DialogBox db \u003d new DialogBox(text, img, \"HAL9000\");","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"pjanthony2001"},"content":"        db.flip();","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"pjanthony2001"},"content":"        return db;","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"pjanthony2001":69}},{"path":"src/main/java/duke/graphics/GraphicalUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.graphics;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"import duke.logic.Logic;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":" * A GUI for HAL9000 using FXML.","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"public class GraphicalUI extends Application {","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"    private final Logic logic \u003d new Logic();","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"    private final Image icon \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"            .getResourceAsStream(\"/images/hal9000.png\")));","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(GraphicalUI.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setUserInterface(logic);","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"            stage.show();","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"pjanthony2001"},"content":"            stage.setTitle(\"HAL9000\");","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"pjanthony2001"},"content":"            stage.getIcons().add(icon);","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"pjanthony2001"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().greet();","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"pjanthony2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"pjanthony2001"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"pjanthony2001":39}},{"path":"src/main/java/duke/graphics/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.graphics;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"import duke.logic.Logic;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"    @FXML","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"    @FXML","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"    @FXML","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"    @FXML","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"    private Logic logic;","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"pjanthony2001"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"pjanthony2001"},"content":"            .getResourceAsStream(\"/images/dave.png\")));","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"pjanthony2001"},"content":"    private final Image dukeImage \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"pjanthony2001"},"content":"            .getResourceAsStream(\"/images/hal9000.png\")));","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"pjanthony2001"},"content":"     * Creates a dialog box that greets the user based on the Logic class\u0027 greet method","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"pjanthony2001"},"content":"    @FXML","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"pjanthony2001"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"pjanthony2001"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"pjanthony2001"},"content":"    public void setUserInterface(Logic ui) {","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"pjanthony2001"},"content":"        logic \u003d ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"pjanthony2001"},"content":"     * Creates a dialog box that greets the user based on the Logic class\u0027 greet method","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"pjanthony2001"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"pjanthony2001"},"content":"    public void greet() {","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"pjanthony2001"},"content":"        String greeting \u003d logic.greet();","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"pjanthony2001"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(greeting, dukeImage));","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"pjanthony2001"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"pjanthony2001"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"pjanthony2001"},"content":"    @FXML","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"pjanthony2001"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"pjanthony2001"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"pjanthony2001"},"content":"        String response \u003d logic.getResponse(input);","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"pjanthony2001"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"pjanthony2001"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"pjanthony2001"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"pjanthony2001"},"content":"        );","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"pjanthony2001"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"pjanthony2001":68}},{"path":"src/main/java/duke/history/History.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.history;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"import duke.exceptions.ProcessingException;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":" * The `History` class manages the history of states in the HAL9000 application.","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":" * It allows for rolling back and rolling forward to previous states.","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"public class History {","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"    private int currStateIdx;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"    private final ArrayList\u003cState\u003e states;","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"     * Constructs a new History object with a starting state.","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":"     * @param startState The initial state of the history.","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"    public History(State startState) {","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"        states \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"        states.add(startState);","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"        currStateIdx \u003d 0;","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"     * Removes states after the current state, effectively truncating the history.","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"    private void removeStatesAfterCurrentState() {","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"        assert (currStateIdx \u003e\u003d 0 \u0026\u0026 currStateIdx \u003c states.size() - 1);","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"pjanthony2001"},"content":"        states.subList(currStateIdx + 1, states.size()).clear();","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"pjanthony2001"},"content":"     * Rolls back to the previous state in the history.","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"pjanthony2001"},"content":"     * @throws ProcessingException If there are no more previous states to roll back to.","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"pjanthony2001"},"content":"    public void rollBackState() throws ProcessingException {","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"pjanthony2001"},"content":"        if (currStateIdx \u003d\u003d 0) {","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"pjanthony2001"},"content":"            throw new ProcessingException(\"You can\u0027t roll back the state anymore!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"pjanthony2001"},"content":"        currStateIdx -\u003d 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"pjanthony2001"},"content":"     * Rolls forward to the next state in the history.","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"pjanthony2001"},"content":"     * @throws ProcessingException If there are no more future states to roll forward to.","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"pjanthony2001"},"content":"    public void rollForwardState() throws ProcessingException {","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"pjanthony2001"},"content":"        if (currStateIdx \u003d\u003d states.size() - 1) {","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"pjanthony2001"},"content":"            throw new ProcessingException(\"You can\u0027t roll forward the state anymore!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"pjanthony2001"},"content":"        currStateIdx +\u003d 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"pjanthony2001"},"content":"     * Adds a new state to the history, removing subsequent states.","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"pjanthony2001"},"content":"     * @param state The state to add to the history.","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"pjanthony2001"},"content":"    public void addState(State state) {","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"pjanthony2001"},"content":"        removeStatesAfterCurrentState();","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"pjanthony2001"},"content":"        states.add(state);","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"pjanthony2001"},"content":"        currStateIdx +\u003d 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":69,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":70,"author":{"gitId":"pjanthony2001"},"content":"     * Gets the current state from the history.","lastModifiedDate":"2024-02-21"},{"lineNumber":71,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":72,"author":{"gitId":"pjanthony2001"},"content":"     * @return The current state.","lastModifiedDate":"2024-02-21"},{"lineNumber":73,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":74,"author":{"gitId":"pjanthony2001"},"content":"    public State getCurrState() {","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"pjanthony2001"},"content":"        return states.get(currStateIdx);","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"pjanthony2001":77}},{"path":"src/main/java/duke/history/HistoryManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.history;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"import duke.exceptions.ProcessingException;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":" * The `HistoryManager` class manages the history of commands in the Duke application.","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":" * It allows for undoing and redoing commands and updating the command history.","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":"public class HistoryManager {","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"    private final History history;","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"     * Constructs a new HistoryManager with a starting state.","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"     * @param startState The initial state of the history.","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":"    public HistoryManager(State startState) {","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"        history \u003d new History(startState);","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"     * Undoes the last command and restores the previous state.","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"     * @param storage The storage system for managing tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"     * @return A message indicating the command was undone and the current list of tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"     * @throws ProcessingException If there is an issue undoing the command.","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"    public String undo(Storage storage) throws ProcessingException {","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"        State prevState \u003d history.getCurrState();","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"pjanthony2001"},"content":"        history.rollBackState();","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"pjanthony2001"},"content":"        State currState \u003d history.getCurrState();","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"pjanthony2001"},"content":"        storage.restoreState(currState);","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"pjanthony2001"},"content":"        return String.format(\"Your %s command was undone!\\nThis is your current list:\\n%s\",","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"pjanthony2001"},"content":"                prevState.getCommand(),","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"pjanthony2001"},"content":"                storage.displayList());","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"pjanthony2001"},"content":"     * Redoes the last undone command and restores the next state.","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"pjanthony2001"},"content":"     * @param storage The storage system for managing tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"pjanthony2001"},"content":"     * @return A message indicating the command was redone and the current list of tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"pjanthony2001"},"content":"     * @throws ProcessingException If there is an issue redoing the command.","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"pjanthony2001"},"content":"    public String redo(Storage storage) throws ProcessingException {","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"pjanthony2001"},"content":"        history.rollForwardState();","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"pjanthony2001"},"content":"        State currState \u003d history.getCurrState();","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"pjanthony2001"},"content":"        storage.restoreState(currState);","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"pjanthony2001"},"content":"        return String.format(\"Your %s command was redone!\\nThis is your current list:\\n%s\",","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"pjanthony2001"},"content":"                currState.getCommand(),","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"pjanthony2001"},"content":"                storage.displayList());","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"pjanthony2001"},"content":"     * Updates the history with a new state, if necessary.","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"pjanthony2001"},"content":"     * @param state The new state to be added to the history.","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"pjanthony2001"},"content":"    public void updateHistory(State state) {","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"pjanthony2001"},"content":"        if (state.isIgnoredHistory()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"pjanthony2001"},"content":"            return;","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"pjanthony2001"},"content":"        history.addState(state);","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"pjanthony2001":66}},{"path":"src/main/java/duke/history/State.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.history;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":" * The `State` class represents a snapshot of the HAL9000 application\u0027s state at a specific point in time.","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":" * It contains information about the executed command and the list of tasks at that time.","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"public class State {","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"    private final Command command;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"     * Constructs a new State object with the given command and task list.","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"     * @param cmd  The command executed to reach this state.","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"     * @param list The list of tasks at this state.","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"    public State(Command cmd, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"        command \u003d cmd;","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"        taskList \u003d list;","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"     * Gets the list of tasks at this state.","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"pjanthony2001"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"pjanthony2001"},"content":"        return taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"pjanthony2001"},"content":"     * Gets the command executed to reach this state.","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"pjanthony2001"},"content":"     * @return The command.","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"pjanthony2001"},"content":"    public Command getCommand() {","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"pjanthony2001"},"content":"        return command;","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"pjanthony2001"},"content":"     * Checks if this state should be ignored in the command history.","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"pjanthony2001"},"content":"     * @return true if the state should be ignored, false otherwise.","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"pjanthony2001"},"content":"    public boolean isIgnoredHistory() {","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"pjanthony2001"},"content":"        return command.isIgnoredHistory();","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"pjanthony2001":53}},{"path":"src/main/java/duke/logic/Logic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.logic;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"import duke.command.Command;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"import duke.command.CommandProcessor;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"import duke.exceptions.HalException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"import duke.history.HistoryManager;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":"import duke.history.State;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":" * The `Logic` class handles user interactions and serves as the main logical interface","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":" * for the HAL9000 application.","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":" */","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"public class Logic {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"    private static final String DATA_FILE_DIRECTORY \u003d \"./data/\";","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"    private static final String SAVE_FILE_NAME \u003d \"savefile.txt\";","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":"    private CommandProcessor cmd;","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"    private boolean isStartUpSuccess \u003d false;","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"     * Initializes a new `Logic` object, sets up a scanner for user input,","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"     * and attempts to start the Duke application.","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"    public Logic() {","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"            Storage storage \u003d new Storage(DATA_FILE_DIRECTORY, SAVE_FILE_NAME);","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"            State startState \u003d storage.getCurrState(Command.BYE);","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"            HistoryManager historyManager \u003d new HistoryManager(startState);","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"            cmd \u003d new CommandProcessor(storage, historyManager);","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"pjanthony2001"},"content":"            isStartUpSuccess \u003d true;","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"pjanthony2001"},"content":"        } catch (HalException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"pjanthony2001"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"pjanthony2001"},"content":"     * Displays a farewell message to the user in CLI. Exits and closes the application.","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"pjanthony2001"},"content":"    public String exit() {","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"pjanthony2001"},"content":"        String exit \u003d \"Bye! See ya soon\";","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"pjanthony2001"},"content":"        System.out.println(exit);","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"pjanthony2001"},"content":"        cmd.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"pjanthony2001"},"content":"        Platform.exit();","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"pjanthony2001"},"content":"        return \"\";","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"pjanthony2001"},"content":"     * Displays a message indicating a startup failure to the user.","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"pjanthony2001"},"content":"    public String startUpFailure() {","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"pjanthony2001"},"content":"        System.out.println(\"Hi, you failed to start up properly! Sorry, bye!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"pjanthony2001"},"content":"        return \"Hi, you failed to start up properly! Sorry, please close the application\";","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":56,"author":{"gitId":"pjanthony2001"},"content":"    public String greet() {","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"pjanthony2001"},"content":"        return \"Hi Dave, I\u0027m HAL9000. What can I do for you today?\";","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":59,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"pjanthony2001"},"content":"     * Processes and returns the response from the HAL9000 application to be displayed by the GUI","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"pjanthony2001"},"content":"     * @param input The input string","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"pjanthony2001"},"content":"     * @return A response from HAL9000","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":65,"author":{"gitId":"pjanthony2001"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"pjanthony2001"},"content":"        if (!isStartUpSuccess) {","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"pjanthony2001"},"content":"            return startUpFailure();","lastModifiedDate":"2024-02-21"},{"lineNumber":68,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":69,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"pjanthony2001"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"pjanthony2001"},"content":"            Command command \u003d Command.processCommand(input);","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"pjanthony2001"},"content":"            if (command.isExit()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"pjanthony2001"},"content":"                return exit();","lastModifiedDate":"2024-02-21"},{"lineNumber":74,"author":{"gitId":"pjanthony2001"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"pjanthony2001"},"content":"                return cmd.processData(command, input);","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"pjanthony2001"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"pjanthony2001"},"content":"        } catch (HalException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"pjanthony2001"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"pjanthony2001"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"pjanthony2001":82}},{"path":"src/main/java/duke/search/Search.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.search;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":" * The `Search` class provides a utility for searching tasks in a list based on a query.","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"public class Search {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"     * Searches for tasks in the given list that match the specified query.","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"     * @param list  The list of tasks to search within.","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"     * @param query The search query to match against task names.","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":"     * @return An ArrayList of tasks that match the query.","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"    public static ArrayList\u003cTask\u003e search(ArrayList\u003cTask\u003e list, String query) {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"        ArrayList\u003cTask\u003e resultList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"        Pattern pattern \u003d Pattern.compile(\".*\\\\b\" + query.toLowerCase() + \"\\\\b.*\");","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"        for (Task task : list) {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"            boolean isMatch \u003d pattern.matcher(task.getTaskName().toLowerCase()).matches();","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"            if (isMatch) {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"                resultList.add(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"        return resultList;","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"pjanthony2001":31}},{"path":"src/main/java/duke/storage/LocalStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"import java.io.File;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":"import java.util.List;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":" * The `LocalStorage` class manages the local storage and retrieval of tasks in the Duke application.","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":" * It provides methods for loading, saving, and clearing tasks from a local file.","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"public class LocalStorage {","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"    private final boolean hasCreatedNewFile;","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"    private PrintWriter printWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"    private final Scanner scan;","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"    private final File saveFile;","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"     * Constructs a new `LocalStorage` object with the specified file location.","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"     * @param fileDirectory The file directory where save file is stored","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"     * @param fileName The name of the file where the tasks are stored","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"pjanthony2001"},"content":"     * @throws IOException If an I/O error occurs while creating or accessing the file.","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"pjanthony2001"},"content":"    public LocalStorage(String fileDirectory, String fileName) throws IOException {","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"pjanthony2001"},"content":"        String filePath \u003d fileDirectory + fileName;","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"pjanthony2001"},"content":"        new File(fileDirectory).mkdir();","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"pjanthony2001"},"content":"        saveFile \u003d new File(filePath);","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"pjanthony2001"},"content":"        hasCreatedNewFile \u003d saveFile.createNewFile();","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"pjanthony2001"},"content":"        printWriter \u003d new PrintWriter(new FileOutputStream(saveFile, true));","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"pjanthony2001"},"content":"        scan \u003d new Scanner(saveFile);","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"pjanthony2001"},"content":"    public boolean hasCreatedNewFile() {","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"pjanthony2001"},"content":"        return hasCreatedNewFile;","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"pjanthony2001"},"content":"     * Loads encoded tasks from the local storage file.","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"pjanthony2001"},"content":"     * @return A list of encoded task strings loaded from the file.","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"pjanthony2001"},"content":"    public ArrayList\u003cString\u003e load() {","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"pjanthony2001"},"content":"        ArrayList\u003cString\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"pjanthony2001"},"content":"        while (scan.hasNextLine()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"pjanthony2001"},"content":"            String encodedTask \u003d scan.nextLine();","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"pjanthony2001"},"content":"            list.add(encodedTask);","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"pjanthony2001"},"content":"        return list;","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"pjanthony2001"},"content":"     * Saves encoded tasks to the local storage file, overwriting existing data.","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"pjanthony2001"},"content":"     * @param encodedTasks A stream of encoded task strings to be saved.","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"pjanthony2001"},"content":"     * @throws IOException If an I/O error occurs while saving the data.","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"pjanthony2001"},"content":"    public void save(Stream\u003cString\u003e encodedTasks) throws IOException {","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"pjanthony2001"},"content":"        printWriter \u003d new PrintWriter(Files.newOutputStream(saveFile.toPath()));","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"pjanthony2001"},"content":"        List\u003cString\u003e encodedTasksList \u003d encodedTasks.collect(Collectors.toList());","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"pjanthony2001"},"content":"        for (String string : encodedTasksList) {","lastModifiedDate":"2024-01-26"},{"lineNumber":70,"author":{"gitId":"pjanthony2001"},"content":"            printWriter.println(string);","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"pjanthony2001"},"content":"        printWriter.close();","lastModifiedDate":"2024-01-26"},{"lineNumber":73,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":74,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"pjanthony2001"},"content":"     * Closes Scanner and PrintWriter and releases any system resources associated with it","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"pjanthony2001"},"content":"    public void close() {","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"pjanthony2001"},"content":"        scan.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"pjanthony2001"},"content":"        printWriter.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"pjanthony2001":82}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":"import duke.exceptions.ProcessingException;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"import duke.exceptions.StartUpException;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":"import duke.history.State;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":" * The `Storage` class manages the interaction between the temporary storage (`TempStorage`)","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":" * and local storage (`LocalStorage`) for saving, loading, updating, and performing operations","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":" * on tasks in the Duke application.","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"public class Storage {","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"    private final LocalStorage local;","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"    private final TempStorage temp;","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"     * Constructs a new `Storage` object with the specified file location.","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"     * @param fileDirectory The file directory where save file is stored.","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"     * @param fileName The name of the save file where the tasks are stored","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"     * @throws StartUpException If an error occurs during the startup process, such as file access issues.","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"    public Storage(String fileDirectory, String fileName) throws StartUpException {","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"        temp \u003d new TempStorage();","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"pjanthony2001"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"pjanthony2001"},"content":"            local \u003d new LocalStorage(fileDirectory, fileName);","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"pjanthony2001"},"content":"            if (local.hasCreatedNewFile()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"pjanthony2001"},"content":"                saveFileNotFound();","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"pjanthony2001"},"content":"            } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"pjanthony2001"},"content":"                saveFileFound();","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"pjanthony2001"},"content":"                ArrayList\u003cString\u003e loadList \u003d local.load();","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"pjanthony2001"},"content":"                temp.load(loadList); //Load from local into temp","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"pjanthony2001"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"pjanthony2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"pjanthony2001"},"content":"            String message \u003d \"An error occurred with the save file at the system level. Try again\";","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"pjanthony2001"},"content":"            throw new StartUpException(message, e);","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"pjanthony2001"},"content":"        } catch (ProcessingException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"pjanthony2001"},"content":"            String message \u003d \"An error occurred with parsing the save file. Try again\";","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"pjanthony2001"},"content":"            throw new StartUpException(message, e);","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"pjanthony2001"},"content":"    private void saveFileNotFound() {","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"pjanthony2001"},"content":"        System.out.println(\"Save file not found! Created an new one!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"pjanthony2001"},"content":"    private void saveFileFound() {","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"pjanthony2001"},"content":"        System.out.println(\"Save file found! Loading old save...\");","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"pjanthony2001"},"content":"     * Updates the local storage with the data from the temporary storage.","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"pjanthony2001"},"content":"     * @throws ProcessingException If an error occurs while updating the save file.","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"pjanthony2001"},"content":"    public State update(Command command) throws ProcessingException {","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"pjanthony2001"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":66,"author":{"gitId":"pjanthony2001"},"content":"            Stream\u003cString\u003e stringStream \u003d temp.save();","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"pjanthony2001"},"content":"            local.save(stringStream);","lastModifiedDate":"2024-01-26"},{"lineNumber":68,"author":{"gitId":"pjanthony2001"},"content":"            return getCurrState(command);","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":70,"author":{"gitId":"pjanthony2001"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"pjanthony2001"},"content":"            String message \u003d \"An error occurred while trying to update the save file. Try again\";","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"pjanthony2001"},"content":"            throw new ProcessingException(message);","lastModifiedDate":"2024-01-26"},{"lineNumber":73,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":74,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":75,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":76,"author":{"gitId":"pjanthony2001"},"content":"    public String add(Task task) throws ProcessingException {","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"pjanthony2001"},"content":"        return temp.add(task);","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":79,"author":{"gitId":"pjanthony2001"},"content":"    public String delete(int i) throws ProcessingException {","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"pjanthony2001"},"content":"        return temp.delete(i);","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":82,"author":{"gitId":"pjanthony2001"},"content":"    public String mark(int i) throws ProcessingException {","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"pjanthony2001"},"content":"        return temp.mark(i);","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":85,"author":{"gitId":"pjanthony2001"},"content":"    public String unmark(int i) throws ProcessingException {","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"pjanthony2001"},"content":"        return temp.unmark(i);","lastModifiedDate":"2024-02-05"},{"lineNumber":87,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":88,"author":{"gitId":"pjanthony2001"},"content":"    public String displayList() {","lastModifiedDate":"2024-02-05"},{"lineNumber":89,"author":{"gitId":"pjanthony2001"},"content":"        return temp.displayList();","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":91,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":92,"author":{"gitId":"pjanthony2001"},"content":"    public String displaySearchList(String query) {","lastModifiedDate":"2024-02-05"},{"lineNumber":93,"author":{"gitId":"pjanthony2001"},"content":"        return temp.displaySearchList(query);","lastModifiedDate":"2024-02-05"},{"lineNumber":94,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"pjanthony2001"},"content":"    public void close() {","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"pjanthony2001"},"content":"        local.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"pjanthony2001"},"content":"    public State getCurrState(Command cmd) {","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"pjanthony2001"},"content":"        return new State(cmd, temp.getCurrentList());","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"pjanthony2001"},"content":"    public void restoreState(State state) {","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"pjanthony2001"},"content":"        temp.restore(state.getTaskList());","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"pjanthony2001":105}},{"path":"src/main/java/duke/storage/TempStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":"import org.apache.commons.lang3.SerializationUtils;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":"import duke.codec.Codec;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"import duke.exceptions.ProcessingException;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"import duke.search.Search;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":" * The `TempStorage` class is responsible for temporary storage and management of tasks in memory.","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":" * It allows adding, deleting, marking, unmarking tasks, loading tasks from encoded strings, and","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":" * displaying the task list.","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"public class TempStorage {","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"    private final Codec codec;","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"     * Initializes a new `TempStorage` object with an empty task list and a `Codec` for encoding and decoding tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"    public TempStorage() {","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"pjanthony2001"},"content":"        this.codec \u003d new Codec();","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"pjanthony2001"},"content":"     * Deletes a task at the specified index from the task list.","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"pjanthony2001"},"content":"     * @param i The index of the task to be deleted.","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"pjanthony2001"},"content":"     * @throws ProcessingException If there is an issue executing the delete command or if the index is out of bounds.","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"pjanthony2001"},"content":"    public String delete(int i) throws ProcessingException {","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"pjanthony2001"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"pjanthony2001"},"content":"            Task task \u003d list.get(i);","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"pjanthony2001"},"content":"            list.remove(i);","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"pjanthony2001"},"content":"            return String.format(\"I have deleted this:\\n%s\\n\", task);","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"pjanthony2001"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"pjanthony2001"},"content":"            throw ProcessingException.exceptionCommandExecution(Command.DELETE, e);","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"pjanthony2001"},"content":"     * Marks a task at the specified index as done.","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"pjanthony2001"},"content":"     * @param i The index of the task to be marked as done.","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"pjanthony2001"},"content":"     * @throws ProcessingException If there is an issue executing the mark command or if the index is out of bounds.","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"pjanthony2001"},"content":"    public String mark(int i) throws ProcessingException {","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"pjanthony2001"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":58,"author":{"gitId":"pjanthony2001"},"content":"            Task task \u003d list.get(i);","lastModifiedDate":"2024-01-26"},{"lineNumber":59,"author":{"gitId":"pjanthony2001"},"content":"            if (!task.getDone()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"pjanthony2001"},"content":"                task.markDone();","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"pjanthony2001"},"content":"                return String.format(\"I have marked this:\\n%s\", task);","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"pjanthony2001"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"pjanthony2001"},"content":"                throw new ProcessingException(String.format(\"%s is already marked!\", task));","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"pjanthony2001"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"pjanthony2001"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"pjanthony2001"},"content":"            throw ProcessingException.exceptionCommandExecution(Command.MARK, e);","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":68,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":69,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":70,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"pjanthony2001"},"content":"     * Marks a task at the specified index as undone.","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"pjanthony2001"},"content":"     * @param i The index of the task to be marked as undone.","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"pjanthony2001"},"content":"     * @throws ProcessingException If there is an issue executing the unmark command or if the index is out of bounds.","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"pjanthony2001"},"content":"    public String unmark(int i) throws ProcessingException {","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"pjanthony2001"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":78,"author":{"gitId":"pjanthony2001"},"content":"            Task task \u003d list.get(i);","lastModifiedDate":"2024-01-26"},{"lineNumber":79,"author":{"gitId":"pjanthony2001"},"content":"            if (task.getDone()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"pjanthony2001"},"content":"                task.markUndone();","lastModifiedDate":"2024-01-26"},{"lineNumber":81,"author":{"gitId":"pjanthony2001"},"content":"                return String.format(\"I have unmarked this:\\n%s\", task);","lastModifiedDate":"2024-02-15"},{"lineNumber":82,"author":{"gitId":"pjanthony2001"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"pjanthony2001"},"content":"                throw new ProcessingException(String.format(\"%s is already unmarked!\", task));","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"pjanthony2001"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"pjanthony2001"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"pjanthony2001"},"content":"            throw ProcessingException.exceptionCommandExecution(Command.UNMARK, e);","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":89,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":90,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":91,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":92,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"pjanthony2001"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"pjanthony2001"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"pjanthony2001"},"content":"     * @throws ProcessingException If there is an issue executing the add command.","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"pjanthony2001"},"content":"    public String add(Task task) throws ProcessingException {","lastModifiedDate":"2024-02-05"},{"lineNumber":99,"author":{"gitId":"pjanthony2001"},"content":"        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":100,"author":{"gitId":"pjanthony2001"},"content":"            list.add(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":101,"author":{"gitId":"pjanthony2001"},"content":"            return String.format(\"Got it. I\u0027ve added this task:\\n%s\\nNow you have %d tasks in the list.\\n\",","lastModifiedDate":"2024-02-05"},{"lineNumber":102,"author":{"gitId":"pjanthony2001"},"content":"                    task,","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"pjanthony2001"},"content":"                    list.size());","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"pjanthony2001"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"pjanthony2001"},"content":"            String message \u003d \"Something went wrong when adding to the list! \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"pjanthony2001"},"content":"                + \"Check your input again\\n\";","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"pjanthony2001"},"content":"            throw new ProcessingException(message);","lastModifiedDate":"2024-01-26"},{"lineNumber":109,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":110,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":111,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":112,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"pjanthony2001"},"content":"     * Loads tasks from encoded strings and adds them to the task list.","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"pjanthony2001"},"content":"     * @param encodedTasks The list of encoded task strings.","lastModifiedDate":"2024-01-28"},{"lineNumber":116,"author":{"gitId":"pjanthony2001"},"content":"     * @throws ProcessingException If there is an issue decoding and loading tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"pjanthony2001"},"content":"    public void load(ArrayList\u003cString\u003e encodedTasks) throws ProcessingException {","lastModifiedDate":"2024-01-26"},{"lineNumber":119,"author":{"gitId":"pjanthony2001"},"content":"        assert list.isEmpty();","lastModifiedDate":"2024-02-11"},{"lineNumber":120,"author":{"gitId":"pjanthony2001"},"content":"        for (String encodedTask : encodedTasks) {","lastModifiedDate":"2024-01-26"},{"lineNumber":121,"author":{"gitId":"pjanthony2001"},"content":"            Task decodedTask \u003d codec.decode(encodedTask);","lastModifiedDate":"2024-01-26"},{"lineNumber":122,"author":{"gitId":"pjanthony2001"},"content":"            list.add(decodedTask);","lastModifiedDate":"2024-01-26"},{"lineNumber":123,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":124,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":125,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":126,"author":{"gitId":"pjanthony2001"},"content":"    public Stream\u003cString\u003e save() {","lastModifiedDate":"2024-01-26"},{"lineNumber":127,"author":{"gitId":"pjanthony2001"},"content":"        return list.stream().map(codec::encode);","lastModifiedDate":"2024-01-26"},{"lineNumber":128,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":129,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":130,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":131,"author":{"gitId":"pjanthony2001"},"content":"     * Displays the task list to the console.","lastModifiedDate":"2024-01-28"},{"lineNumber":132,"author":{"gitId":"pjanthony2001"},"content":"     * If the list is empty, it informs the user to add tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":133,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":134,"author":{"gitId":"pjanthony2001"},"content":"    public String displayList() {","lastModifiedDate":"2024-02-05"},{"lineNumber":135,"author":{"gitId":"pjanthony2001"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":136,"author":{"gitId":"pjanthony2001"},"content":"            return \"Your list is empty! Try adding tasks (eg. todo homework)\";","lastModifiedDate":"2024-02-05"},{"lineNumber":137,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":138,"author":{"gitId":"pjanthony2001"},"content":"        StringJoiner joiner \u003d new StringJoiner(\"\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":139,"author":{"gitId":"pjanthony2001"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-01-26"},{"lineNumber":140,"author":{"gitId":"pjanthony2001"},"content":"            Task task \u003d list.get(i);","lastModifiedDate":"2024-01-26"},{"lineNumber":141,"author":{"gitId":"pjanthony2001"},"content":"            joiner.add(String.format(\"%d. %s\", i + 1, task));","lastModifiedDate":"2024-02-05"},{"lineNumber":142,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":143,"author":{"gitId":"pjanthony2001"},"content":"        return joiner.toString();","lastModifiedDate":"2024-02-05"},{"lineNumber":144,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":145,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":146,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":147,"author":{"gitId":"pjanthony2001"},"content":"     * Displays a filtered list of tasks matching the search query.","lastModifiedDate":"2024-01-28"},{"lineNumber":148,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":149,"author":{"gitId":"pjanthony2001"},"content":"     * @param query The search query to match against task names.","lastModifiedDate":"2024-01-28"},{"lineNumber":150,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":151,"author":{"gitId":"pjanthony2001"},"content":"    public String displaySearchList(String query) {","lastModifiedDate":"2024-02-05"},{"lineNumber":152,"author":{"gitId":"pjanthony2001"},"content":"        ArrayList\u003cTask\u003e resultList \u003d Search.search(list, query);","lastModifiedDate":"2024-01-28"},{"lineNumber":153,"author":{"gitId":"pjanthony2001"},"content":"        if (resultList.isEmpty()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":154,"author":{"gitId":"pjanthony2001"},"content":"            return \"Your search was fruitless. Trying looking again\";","lastModifiedDate":"2024-02-05"},{"lineNumber":155,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":156,"author":{"gitId":"pjanthony2001"},"content":"        StringJoiner joiner \u003d new StringJoiner(\"\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":157,"author":{"gitId":"pjanthony2001"},"content":"        joiner.add(\"Here are your matching search results\");","lastModifiedDate":"2024-02-05"},{"lineNumber":158,"author":{"gitId":"pjanthony2001"},"content":"        for (int i \u003d 0; i \u003c resultList.size(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":159,"author":{"gitId":"pjanthony2001"},"content":"            Task task \u003d resultList.get(i);","lastModifiedDate":"2024-01-28"},{"lineNumber":160,"author":{"gitId":"pjanthony2001"},"content":"            joiner.add(String.format(\"%d. %s\", i + 1, task));","lastModifiedDate":"2024-02-05"},{"lineNumber":161,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":162,"author":{"gitId":"pjanthony2001"},"content":"        return joiner.toString();","lastModifiedDate":"2024-02-05"},{"lineNumber":163,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":164,"author":{"gitId":"pjanthony2001"},"content":"    public void restore(ArrayList\u003cTask\u003e newList) {","lastModifiedDate":"2024-02-12"},{"lineNumber":165,"author":{"gitId":"pjanthony2001"},"content":"        list \u003d SerializationUtils.clone(newList);","lastModifiedDate":"2024-02-15"},{"lineNumber":166,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":167,"author":{"gitId":"pjanthony2001"},"content":"    public ArrayList\u003cTask\u003e getCurrentList() {","lastModifiedDate":"2024-02-12"},{"lineNumber":168,"author":{"gitId":"pjanthony2001"},"content":"        return SerializationUtils.clone(list);","lastModifiedDate":"2024-02-12"},{"lineNumber":169,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":170,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"pjanthony2001":170}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"import duke.codec.TimeProcessor;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":" * The `Deadline` class represents a task with a specific deadline.","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":" * It extends the `Task` class and inherits its properties and methods.","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":" * It has to be serializable so that it can be cloned easily.","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"    private static final long serialVersionUID \u003d 4L;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"    public Deadline(String taskName, LocalDateTime by) {","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"        this(taskName, by, false);","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"     * Constructs a new `Deadline` task with the given task name, deadline, and completion status.","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"     * @param taskName The name or description of the `Deadline` task.","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"     * @param by The deadline for the task.","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"     * @param done A boolean indicating whether the task is completed (true) or not (false).","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"    public Deadline(String taskName, LocalDateTime by, Boolean done) {","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"        super(taskName, done);","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"        super.identifier \u003d \"D\";","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"pjanthony2001"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"pjanthony2001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"pjanthony2001"},"content":"        return String.format(\"%s by: %s\", super.toString(), TimeProcessor.toString(by));","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"pjanthony2001"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"pjanthony2001"},"content":"    public String[] encode() {","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"pjanthony2001"},"content":"        String[] encodedDeadline \u003d new String[4];","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"pjanthony2001"},"content":"        String[] encodedTask \u003d super.encode();","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"pjanthony2001"},"content":"        System.arraycopy(encodedTask, 0, encodedDeadline, 0, encodedTask.length);","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"pjanthony2001"},"content":"        encodedDeadline[3] \u003d TimeProcessor.toString(by);","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"pjanthony2001"},"content":"        return encodedDeadline;","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"pjanthony2001"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"pjanthony2001"},"content":"    public String getTaskName() {","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"pjanthony2001"},"content":"        return super.getTaskName();","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"pjanthony2001"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"pjanthony2001"},"content":"        return by;","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"pjanthony2001":59}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"import duke.codec.TimeProcessor;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":" * The `Event` class represents a task with a specific event duration.","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":" * It extends the `Task` class and inherits its properties and methods.","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":" * It has to be serializable so that it can be cloned easily.","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"    private static final long serialVersionUID \u003d 3L;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"    public Event(String taskName, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":"        this(taskName, from, to, false);","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"     * Constructs a new `Event` task with the given task name, event start time, end time, and completion status.","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"     * @param taskName The name or description of the `Event` task.","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"     * @param done A boolean indicating whether the task is completed (true) or not (false).","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"    public Event(String taskName, LocalDateTime from, LocalDateTime to, Boolean done) {","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"        super(taskName, done);","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"pjanthony2001"},"content":"        super.identifier \u003d \"E\";","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"pjanthony2001"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"pjanthony2001"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"pjanthony2001"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"pjanthony2001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"pjanthony2001"},"content":"        return String.format(\"%s from: %s to: %s\",","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"pjanthony2001"},"content":"                super.toString(),","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"pjanthony2001"},"content":"                TimeProcessor.toString(from),","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"pjanthony2001"},"content":"                TimeProcessor.toString(to)","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"pjanthony2001"},"content":"        );","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"pjanthony2001"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"pjanthony2001"},"content":"    public String[] encode() {","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"pjanthony2001"},"content":"        String[] encodedEvent \u003d new String[5];","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"pjanthony2001"},"content":"        String[] encodedTask \u003d super.encode();","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"pjanthony2001"},"content":"        System.arraycopy(encodedTask, 0, encodedEvent, 0, encodedTask.length);","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"pjanthony2001"},"content":"        encodedEvent[3] \u003d TimeProcessor.toString(from);","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"pjanthony2001"},"content":"        encodedEvent[4] \u003d TimeProcessor.toString(to);","lastModifiedDate":"2024-01-26"},{"lineNumber":54,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"pjanthony2001"},"content":"        return encodedEvent;","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":57,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"pjanthony2001"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"pjanthony2001"},"content":"    public String getTaskName() {","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"pjanthony2001"},"content":"        return super.getTaskName();","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"pjanthony2001"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"pjanthony2001"},"content":"        return from;","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"pjanthony2001"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"pjanthony2001"},"content":"        return to;","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"pjanthony2001":69}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":" * The `Task` abstract class serves as the base class for various types of tasks in the Duke application.","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":" * It has to be serializable so that it can be cloned easily.","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":"    private static final long serialVersionUID \u003d 1L;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"    protected String identifier;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"    private Boolean isDone;","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"    private final String taskName;","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"     * Constructs a new `Task` with the given task name and completion status.","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"     * @param taskName The name or description of the task.","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"     * @param done A boolean indicating whether the task is completed (true) or not (false).","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"    public Task(String taskName, Boolean done) {","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"        this.identifier \u003d \" \";","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"pjanthony2001"},"content":"    public void markUndone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"pjanthony2001"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"pjanthony2001"},"content":"    public String getIdentifier() {","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"pjanthony2001"},"content":"        return identifier;","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"pjanthony2001"},"content":"    public boolean getDone() {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"pjanthony2001"},"content":"        return isDone;","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"pjanthony2001"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"pjanthony2001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"pjanthony2001"},"content":"        return String.format(\"[%s] [%s] %s\", identifier, isDone ? \"X\" : \"  \", taskName);","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"pjanthony2001"},"content":"    public String getTaskName() {","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"pjanthony2001"},"content":"        return taskName;","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"pjanthony2001"},"content":"    public String[] encode() {","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"pjanthony2001"},"content":"        return new String[]{identifier, isDone.toString(), taskName};","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":54,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":56,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"pjanthony2001":56}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":" * The `Todo` class represents a task without a specific deadline or time range.","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":" * It extends the `Task` class and inherits its properties and methods.","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":" * It has to be serializable so that it can be cloned easily.","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":"    private static final long serialVersionUID \u003d 2L;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"        this(taskName, false);","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"     * Constructs a new `Todo` task with the given task name and completion status.","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"     * @param taskName The name or description of the `Todo` task.","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":"     * @param done A boolean indicating whether the task is completed (true) or not (false).","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"    public Todo(String taskName, Boolean done) {","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"        super(taskName, done);","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"        super.identifier \u003d \"T\";","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"        return super.toString();","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"pjanthony2001"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"pjanthony2001"},"content":"    public String getTaskName() {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"pjanthony2001"},"content":"        return super.getTaskName();","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"pjanthony2001":35}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"\u003cfx:root spacing\u003d\"10.0\" style\u003d\"-fx-background-color: transparent; -fx-padding: 10; -fx-background-radius: 10; -fx-border-color: transparent;\" type\u003d\"VBox\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"    \u003cHBox nodeOrientation\u003d\"RIGHT_TO_LEFT\" prefHeight\u003d\"70.0\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"        \u003cImageView fx:id\u003d\"profileImage\" fitHeight\u003d\"50\" fitWidth\u003d\"50\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"        \u003cVBox maxWidth\u003d\"250.0\" prefHeight\u003d\"70.0\" style\u003d\"-fx-background-radius: 15; -fx-border-color: transparent; -fx-border-radius: 10; -fx-background-color: lightblue;\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"            \u003cLabel fx:id\u003d\"senderName\" alignment\u003d\"TOP_LEFT\" nodeOrientation\u003d\"LEFT_TO_RIGHT\" text\u003d\"Sender\u0027s Name\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":"               \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"            \u003cfont\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"               \u003cFont name\u003d\"Arial Bold\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"            \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"         \u003cTextFlow nodeOrientation\u003d\"LEFT_TO_RIGHT\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"               \u003cText fx:id\u003d\"messageContent\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"message text\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"                     \u003cFont size\u003d\"13.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"                  \u003c/font\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"               \u003c/Text\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"            \u003c/children\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"pjanthony2001"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"pjanthony2001"},"content":"               \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"pjanthony2001"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"pjanthony2001"},"content":"         \u003c/TextFlow\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"pjanthony2001"},"content":"         \u003cTextFlow textAlignment\u003d\"RIGHT\"\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"pjanthony2001"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"pjanthony2001"},"content":"               \u003cText fx:id\u003d\"timeStamp\" nodeOrientation\u003d\"LEFT_TO_RIGHT\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"19:00\"\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"pjanthony2001"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"pjanthony2001"},"content":"                     \u003cFont name\u003d\"System Italic\" size\u003d\"9.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"pjanthony2001"},"content":"                  \u003c/font\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"pjanthony2001"},"content":"               \u003c/Text\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"pjanthony2001"},"content":"            \u003c/children\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"pjanthony2001"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"pjanthony2001"},"content":"               \u003cInsets bottom\u003d\"2.0\" left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"pjanthony2001"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"pjanthony2001"},"content":"         \u003c/TextFlow\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"pjanthony2001"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"pjanthony2001"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"pjanthony2001"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"pjanthony2001":49}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"\u003c?import javafx.scene.effect.Blend?\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@application.css\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.graphics.MainWindow\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"               \u003ceffect\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":"                  \u003cBlend /\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"               \u003c/effect\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"pjanthony2001":24}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":"public class DukeTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":"    public void dummyTest() {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"    public void anotherDummyTest() {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"pjanthony2001":17}},{"path":"src/test/java/duke/codec/TimeProcessorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.codec;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"public class TimeProcessorTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"    public void testToString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2024, 1, 31, 12, 0);","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"        String formattedString \u003d TimeProcessor.toString(dateTime);","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\"31-01-2024 12:00\", formattedString);","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"    public void testFromString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"        String formattedString \u003d \"31-01-2024 12:00\";","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"        LocalDateTime dateTime \u003d TimeProcessor.fromString(formattedString);","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(2024, dateTime.getYear());","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(1, dateTime.getMonthValue());","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(31, dateTime.getDayOfMonth());","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(12, dateTime.getHour());","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(0, dateTime.getMinute());","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"pjanthony2001"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"pjanthony2001"},"content":"    public void testFromStringWithDateOnly() {","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"pjanthony2001"},"content":"        String formattedString \u003d \"31-01-2024\";","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"pjanthony2001"},"content":"        LocalDateTime dateTime \u003d TimeProcessor.fromString(formattedString);","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(2024, dateTime.getYear());","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(1, dateTime.getMonthValue());","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(31, dateTime.getDayOfMonth());","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(0, dateTime.getHour());","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(0, dateTime.getMinute());","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"pjanthony2001"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"pjanthony2001"},"content":"    public void testFromStringWithInvalidFormat() {","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"pjanthony2001"},"content":"        String invalidFormattedString \u003d \"2024-01-31 12:00\"; // Invalid format","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"pjanthony2001"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e TimeProcessor.fromString(invalidFormattedString));","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"pjanthony2001":47}},{"path":"src/test/java/duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"    private Deadline deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"    @BeforeEach","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"    public void setUp() {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2024, 1, 31, 12, 0);","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":"        deadline \u003d new Deadline(\"Finish Assignment\", dateTime, false);","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"    public void testConstructor() {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\"Finish Assignment\", deadline.getTaskName());","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"        assertFalse(deadline.getDone());","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\"D\", deadline.getIdentifier());","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"        LocalDateTime expectedDateTime \u003d LocalDateTime.of(2024, 1, 31, 12, 0);","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(expectedDateTime, deadline.getBy());","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"pjanthony2001"},"content":"    public void testToString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\"[D] [  ] Finish Assignment by: 31-01-2024 12:00\", deadline.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"pjanthony2001"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"pjanthony2001"},"content":"    public void testEncode() {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"pjanthony2001"},"content":"        String[] encoded \u003d deadline.encode();","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(4, encoded.length);","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\"D\", encoded[0]);","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\"false\", encoded[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\"Finish Assignment\", encoded[2]);","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\"31-01-2024 12:00\", encoded[3]);","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"pjanthony2001":44}},{"path":"src/test/java/duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"public class EventTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"    private Event event;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":"    @BeforeEach","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"    public void setUp() {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"        LocalDateTime fromDateTime \u003d LocalDateTime.of(2024, 1, 31, 10, 0);","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"        LocalDateTime toDateTime \u003d LocalDateTime.of(2024, 1, 31, 12, 0);","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"        event \u003d new Event(\"Meeting\", fromDateTime, toDateTime, false);","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"    public void testConstructor() {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\"Meeting\", event.getTaskName());","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"        assertFalse(event.getDone());","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\"E\", event.getIdentifier());","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"        LocalDateTime expectedFromDateTime \u003d LocalDateTime.of(2024, 1, 31, 10, 0);","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"pjanthony2001"},"content":"        LocalDateTime expectedToDateTime \u003d LocalDateTime.of(2024, 1, 31, 12, 0);","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(expectedFromDateTime, event.getFrom());","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(expectedToDateTime, event.getTo());","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"pjanthony2001"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"pjanthony2001"},"content":"    public void testToString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\"[E] [  ] Meeting from: 31-01-2024 10:00 to: 31-01-2024 12:00\", event.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"pjanthony2001"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"pjanthony2001"},"content":"    public void testEncode() {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"pjanthony2001"},"content":"        String[] encoded \u003d event.encode();","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(5, encoded.length);","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\"E\", encoded[0]);","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\"false\", encoded[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\"Meeting\", encoded[2]);","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\"31-01-2024 10:00\", encoded[3]);","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\"31-01-2024 12:00\", encoded[4]);","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"pjanthony2001":51}},{"path":"src/test/java/duke/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":"public class TaskTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"    private static class ConcreteTask extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"        ConcreteTask(String taskName, boolean done) {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"            super(taskName, done);","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"    private Task task;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":"    @BeforeEach","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"    public void setUp() {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"        task \u003d new ConcreteTask(\"Test Task\", false);","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"    public void testConstructor() {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\"Test Task\", task.getTaskName());","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"        assertFalse(task.getDone());","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"    public void testMarkDone() {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"pjanthony2001"},"content":"        task.markDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"pjanthony2001"},"content":"        assertTrue(task.getDone());","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"pjanthony2001"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"pjanthony2001"},"content":"    public void testMarkUndone() {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"pjanthony2001"},"content":"        task.markDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"pjanthony2001"},"content":"        task.markUndone();","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"pjanthony2001"},"content":"        assertFalse(task.getDone());","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"pjanthony2001"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"pjanthony2001"},"content":"    public void testToString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\"[ ] [  ] Test Task\", task.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"pjanthony2001"},"content":"        task.markDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\"[ ] [X] Test Task\", task.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"pjanthony2001"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"pjanthony2001"},"content":"    public void testEncode() {","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"pjanthony2001"},"content":"        String[] encoded \u003d task.encode();","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(3, encoded.length);","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\" \", encoded[0]);","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\"false\", encoded[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\"Test Task\", encoded[2]);","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"pjanthony2001":57}},{"path":"src/test/java/duke/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"package duke.tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":"public class TodoTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":"    private Todo todo;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"    @BeforeEach","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"    public void setUp() {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"        todo \u003d new Todo(\"Buy groceries\", false);","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":"    public void testConstructor() {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\"Buy groceries\", todo.getTaskName());","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"        assertFalse(todo.getDone());","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\"T\", todo.getIdentifier());","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"    public void testToString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\"[T] [  ] Buy groceries\", todo.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"pjanthony2001"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"pjanthony2001"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"pjanthony2001"},"content":"    public void testEncode() {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"pjanthony2001"},"content":"        String[] encoded \u003d todo.encode();","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(3, encoded.length);","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\"T\", encoded[0]);","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\"false\", encoded[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"pjanthony2001"},"content":"        assertEquals(\"Buy groceries\", encoded[2]);","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"pjanthony2001"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"pjanthony2001"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"pjanthony2001":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pjanthony2001"},"content":"Hello","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"pjanthony2001"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"pjanthony2001"},"content":"DEADLINE /by Monday","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"pjanthony2001"},"content":"deadline /from Monday","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"pjanthony2001"},"content":"deadline /BY Monday","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"pjanthony2001"},"content":"TODO homework","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"pjanthony2001"},"content":"EVENT concert /from 5pm /to 6pm","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"pjanthony2001"},"content":"event concert /by 5pm /to 6pm","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"pjanthony2001"},"content":"event concert /from 5pm /by 6pm","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"pjanthony2001"},"content":"event concert /FROM 5pm /to 6pm","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"pjanthony2001"},"content":"event concert /from 5pm /TO 6pm","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"pjanthony2001"},"content":"list ","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"pjanthony2001"},"content":"deadline /by Monday","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"pjanthony2001"},"content":"todo homework","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"pjanthony2001"},"content":"event concert /from 5pm /to 6pm","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"pjanthony2001"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"pjanthony2001"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"pjanthony2001"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"pjanthony2001"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"pjanthony2001"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"pjanthony2001"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"pjanthony2001"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"pjanthony2001"},"content":"delete 3","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"pjanthony2001"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"pjanthony2001"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"pjanthony2001":25}}]
