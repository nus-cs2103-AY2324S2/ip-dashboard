[{"path":"selfnotes.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"##Testing things to add:","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"\u003e For file retrieval","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"- duke.txt not available ","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"- duke.txt being corrupted","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"- duke.txt working fine","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"belligerentbeagle":6}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"    protected String byString;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"        LocalDateTime moment \u003d super.parseDateTime(by);","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"        this.by \u003d moment;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"        this.byString \u003d by;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"belligerentbeagle"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"belligerentbeagle"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"belligerentbeagle"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\")) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"belligerentbeagle"},"content":"    public String fileSavingString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"belligerentbeagle"},"content":"        return \"D | \" + Integer.toString(super.isDone ? 1 : 0) + \" | \" + super.description + \" | \" + byString;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"belligerentbeagle"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"belligerentbeagle":25}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"import exceptions.TaskNotExistException;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"import java.util.*;","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"public class Duke{","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"    ","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"    public enum Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"        TODO, DEADLINE, EVENT, DELETE, MARK, UNMARK, LIST, BYE, UNKNOWN;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"belligerentbeagle"},"content":"        public static Command fromString(String maybeCommand) {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"belligerentbeagle"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"belligerentbeagle"},"content":"                return Command.valueOf(maybeCommand.toUpperCase());","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"belligerentbeagle"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"belligerentbeagle"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"belligerentbeagle"},"content":"                return UNKNOWN;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"belligerentbeagle"},"content":"    private static void formalities(String context) {","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"belligerentbeagle"},"content":"        if (context.equals(\"greet\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\" Wassup dawg, I\u0027m Snoopy\");","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\" What can I do for you?\");","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"belligerentbeagle"},"content":"        } else if (context.equals(\"farewell\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\" Bye. Don\u0027t come back. jk!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"belligerentbeagle"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"belligerentbeagle"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"belligerentbeagle"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"belligerentbeagle"},"content":"     * @param userInput","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"belligerentbeagle"},"content":"     * @param todos","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"belligerentbeagle"},"content":"     * @param verbose helps to ensure whether we are preloading (includes the need to save the entries)","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"belligerentbeagle"},"content":"     * @throws RuntimeException","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"belligerentbeagle"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"belligerentbeagle"},"content":"    private static void processCommand(String userInput, ArrayList\u003cTask\u003e todos, Integer verbose) throws RuntimeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"belligerentbeagle"},"content":"        String maybeCommand;","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"belligerentbeagle"},"content":"        String arr[];","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"belligerentbeagle"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"belligerentbeagle"},"content":"            arr \u003d userInput.split(\" \", 2); // String in Array format. Useful: https://www.geeksforgeeks.org/split-string-java-examples/","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"belligerentbeagle"},"content":"            maybeCommand \u003d arr[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"belligerentbeagle"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"belligerentbeagle"},"content":"            maybeCommand \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"belligerentbeagle"},"content":"            return;","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"belligerentbeagle"},"content":"        Command command \u003d Command.fromString(maybeCommand);","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"belligerentbeagle"},"content":"        switch (command) {","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"belligerentbeagle"},"content":"        case BYE:","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"belligerentbeagle"},"content":"            formalities(\"farewell\");","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"belligerentbeagle"},"content":"            System.exit(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"belligerentbeagle"},"content":"            break; //TODO uncessary?","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"belligerentbeagle"},"content":"        case LIST:","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"belligerentbeagle"},"content":"            // list tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"belligerentbeagle"},"content":"            for (int i \u003d 0; i \u003c todos.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"belligerentbeagle"},"content":"                Task currTask \u003d todos.get(i);","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"belligerentbeagle"},"content":"                System.out.println((i + 1) + \". \" + currTask.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"belligerentbeagle"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"belligerentbeagle"},"content":"        case MARK:","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"belligerentbeagle"},"content":"            // mark task as done","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"belligerentbeagle"},"content":"            Integer index \u003d Integer.valueOf(arr[1]) - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.print(\" Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"belligerentbeagle"},"content":"            Task currTask \u003d todos.get(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"belligerentbeagle"},"content":"            currTask.markAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\" \" + currTask.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"belligerentbeagle"},"content":"            if (verbose \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"belligerentbeagle"},"content":"                updateRecords();","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"belligerentbeagle"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"belligerentbeagle"},"content":"        case UNMARK:","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"belligerentbeagle"},"content":"            // mark task as undone","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"belligerentbeagle"},"content":"            index \u003d Integer.valueOf(arr[1]) - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.print(\" OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"belligerentbeagle"},"content":"            currTask \u003d todos.get(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"belligerentbeagle"},"content":"            currTask.markAsUndone();","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\" \" + currTask.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"belligerentbeagle"},"content":"            if (verbose \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"belligerentbeagle"},"content":"                updateRecords();","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"belligerentbeagle"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"belligerentbeagle"},"content":"        case TODO:","lastModifiedDate":"2024-01-24"},{"lineNumber":102,"author":{"gitId":"belligerentbeagle"},"content":"            if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":103,"author":{"gitId":"belligerentbeagle"},"content":"                throw new DukeException(\" Nuh uh! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":105,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-24"},{"lineNumber":106,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"Got it. Added this task:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":107,"author":{"gitId":"belligerentbeagle"},"content":"            Todo todo \u003d new Todo(arr[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":108,"author":{"gitId":"belligerentbeagle"},"content":"            todos.add(todo);","lastModifiedDate":"2024-01-24"},{"lineNumber":109,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(todo.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":110,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"Now you have \" + todos.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":111,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-24"},{"lineNumber":112,"author":{"gitId":"belligerentbeagle"},"content":"            if (verbose \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"belligerentbeagle"},"content":"                updateRecords();","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"belligerentbeagle"},"content":"            break;","lastModifiedDate":"2024-01-24"},{"lineNumber":116,"author":{"gitId":"belligerentbeagle"},"content":"        case DEADLINE:","lastModifiedDate":"2024-01-24"},{"lineNumber":117,"author":{"gitId":"belligerentbeagle"},"content":"            if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":118,"author":{"gitId":"belligerentbeagle"},"content":"                throw new DukeException(\" Nuh uh! The description of a deadline cannot be empty.\\nMake sure to add a deadline after the description with /by too!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":119,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":120,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-24"},{"lineNumber":121,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"Got it. Added this task:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":122,"author":{"gitId":"belligerentbeagle"},"content":"            String arguments[] \u003d arr[1].split(\" /by \");","lastModifiedDate":"2024-01-24"},{"lineNumber":123,"author":{"gitId":"belligerentbeagle"},"content":"            String description \u003d arguments[0];","lastModifiedDate":"2024-01-24"},{"lineNumber":124,"author":{"gitId":"belligerentbeagle"},"content":"            String by \u003d arguments[1];","lastModifiedDate":"2024-01-24"},{"lineNumber":125,"author":{"gitId":"belligerentbeagle"},"content":"            Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-01-24"},{"lineNumber":126,"author":{"gitId":"belligerentbeagle"},"content":"            todos.add(deadline);","lastModifiedDate":"2024-01-24"},{"lineNumber":127,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(deadline.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":128,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"Now you have \" + todos.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":129,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-24"},{"lineNumber":130,"author":{"gitId":"belligerentbeagle"},"content":"            if (verbose \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"belligerentbeagle"},"content":"                updateRecords();","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"belligerentbeagle"},"content":"            break;","lastModifiedDate":"2024-01-24"},{"lineNumber":134,"author":{"gitId":"belligerentbeagle"},"content":"        case EVENT:","lastModifiedDate":"2024-01-24"},{"lineNumber":135,"author":{"gitId":"belligerentbeagle"},"content":"            if (arr.length \u003d\u003d 4) {","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"belligerentbeagle"},"content":"                throw new DukeException(\" Nuh uh! The description of an event cannot be empty.\\nMake sure to add a from and to date after the description with /from and /to too!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":137,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":138,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-24"},{"lineNumber":139,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"Got it. Added this task:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":140,"author":{"gitId":"belligerentbeagle"},"content":"            // extraction of parameters","lastModifiedDate":"2024-01-24"},{"lineNumber":141,"author":{"gitId":"belligerentbeagle"},"content":"            String getDesc[] \u003d arr[1].split(\" /from \");","lastModifiedDate":"2024-01-24"},{"lineNumber":142,"author":{"gitId":"belligerentbeagle"},"content":"            String desc \u003d getDesc[0];","lastModifiedDate":"2024-01-24"},{"lineNumber":143,"author":{"gitId":"belligerentbeagle"},"content":"            String getDates[] \u003d getDesc[1].split(\" /to \");","lastModifiedDate":"2024-01-24"},{"lineNumber":144,"author":{"gitId":"belligerentbeagle"},"content":"            String from \u003d getDates[0];","lastModifiedDate":"2024-01-24"},{"lineNumber":145,"author":{"gitId":"belligerentbeagle"},"content":"            String to \u003d getDates[1];","lastModifiedDate":"2024-01-24"},{"lineNumber":146,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":147,"author":{"gitId":"belligerentbeagle"},"content":"            //creating of event","lastModifiedDate":"2024-01-24"},{"lineNumber":148,"author":{"gitId":"belligerentbeagle"},"content":"            Event event \u003d new Event(desc, from, to);","lastModifiedDate":"2024-01-24"},{"lineNumber":149,"author":{"gitId":"belligerentbeagle"},"content":"            todos.add(event);","lastModifiedDate":"2024-01-24"},{"lineNumber":150,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":151,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(event.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":152,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"Now you have \" + todos.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":153,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-24"},{"lineNumber":154,"author":{"gitId":"belligerentbeagle"},"content":"            if (verbose \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"belligerentbeagle"},"content":"                updateRecords();","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"belligerentbeagle"},"content":"            break;","lastModifiedDate":"2024-01-24"},{"lineNumber":158,"author":{"gitId":"belligerentbeagle"},"content":"        case DELETE:","lastModifiedDate":"2024-01-24"},{"lineNumber":159,"author":{"gitId":"belligerentbeagle"},"content":"            if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":160,"author":{"gitId":"belligerentbeagle"},"content":"                throw new DukeException(\" Nuh uh! Which task to delete? \\nMake sure to add the task number!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":161,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":162,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-24"},{"lineNumber":163,"author":{"gitId":"belligerentbeagle"},"content":"            Integer i \u003d Integer.valueOf(arr[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":164,"author":{"gitId":"belligerentbeagle"},"content":"            Task task;","lastModifiedDate":"2024-01-24"},{"lineNumber":165,"author":{"gitId":"belligerentbeagle"},"content":"            try {","lastModifiedDate":"2024-01-24"},{"lineNumber":166,"author":{"gitId":"belligerentbeagle"},"content":"                task \u003d todos.get(i - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":167,"author":{"gitId":"belligerentbeagle"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":168,"author":{"gitId":"belligerentbeagle"},"content":"                throw new TaskNotExistException(Integer.toString(i));","lastModifiedDate":"2024-01-31"},{"lineNumber":169,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":170,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"Okay! I\u0027ve fed this task to Woodstock, bye bye!:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":171,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(task.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":172,"author":{"gitId":"belligerentbeagle"},"content":"            todos.remove(i - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":173,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"Now you have \" + todos.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":174,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-24"},{"lineNumber":175,"author":{"gitId":"belligerentbeagle"},"content":"            if (verbose \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":176,"author":{"gitId":"belligerentbeagle"},"content":"                updateRecords();","lastModifiedDate":"2024-01-31"},{"lineNumber":177,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":178,"author":{"gitId":"belligerentbeagle"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":179,"author":{"gitId":"belligerentbeagle"},"content":"        default:","lastModifiedDate":"2024-01-31"},{"lineNumber":180,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":181,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"Uh ah I don\u0027t understand ya \" + command.toString() + \"?\");","lastModifiedDate":"2024-01-31"},{"lineNumber":182,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":183,"author":{"gitId":"belligerentbeagle"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":184,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":185,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":186,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":187,"author":{"gitId":"belligerentbeagle"},"content":"    private static void updateRecords() throws RuntimeException { //TODO: to continue, need to add delete task fn, mark, unmark, list","lastModifiedDate":"2024-01-31"},{"lineNumber":188,"author":{"gitId":"belligerentbeagle"},"content":"        String filePath \u003d \"./src/main/java/data/duke.txt\";","lastModifiedDate":"2024-01-31"},{"lineNumber":189,"author":{"gitId":"belligerentbeagle"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":190,"author":{"gitId":"belligerentbeagle"},"content":"        try (FileWriter writer \u003d new FileWriter(file)) { // true for append mode","lastModifiedDate":"2024-01-31"},{"lineNumber":191,"author":{"gitId":"belligerentbeagle"},"content":"            writer.write(todos.get(0).fileSavingString());","lastModifiedDate":"2024-01-31"},{"lineNumber":192,"author":{"gitId":"belligerentbeagle"},"content":"            for (int i \u003d 1; i \u003c todos.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":193,"author":{"gitId":"belligerentbeagle"},"content":"                writer.write(\"\\n\" + todos.get(i).fileSavingString());","lastModifiedDate":"2024-01-31"},{"lineNumber":194,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":195,"author":{"gitId":"belligerentbeagle"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":196,"author":{"gitId":"belligerentbeagle"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":197,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":198,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":199,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":200,"author":{"gitId":"belligerentbeagle"},"content":"    private static boolean isCorrupt(File file) throws FileNotFoundException {","lastModifiedDate":"2024-01-31"},{"lineNumber":201,"author":{"gitId":"belligerentbeagle"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":202,"author":{"gitId":"belligerentbeagle"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-01-31"},{"lineNumber":203,"author":{"gitId":"belligerentbeagle"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":204,"author":{"gitId":"belligerentbeagle"},"content":"                String task[] \u003d scanner.nextLine().split(\" \\\\| \");","lastModifiedDate":"2024-01-31"},{"lineNumber":205,"author":{"gitId":"belligerentbeagle"},"content":"                //TODO can add layer of check to make sure there is no new line.","lastModifiedDate":"2024-01-31"},{"lineNumber":206,"author":{"gitId":"belligerentbeagle"},"content":"                //System.out.println(Arrays.toString(task));","lastModifiedDate":"2024-01-31"},{"lineNumber":207,"author":{"gitId":"belligerentbeagle"},"content":"                String type \u003d task[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":208,"author":{"gitId":"belligerentbeagle"},"content":"                String done \u003d task[1];","lastModifiedDate":"2024-01-31"},{"lineNumber":209,"author":{"gitId":"belligerentbeagle"},"content":"                String desc \u003d task[2];","lastModifiedDate":"2024-01-31"},{"lineNumber":210,"author":{"gitId":"belligerentbeagle"},"content":"                String time1 \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":211,"author":{"gitId":"belligerentbeagle"},"content":"                String time2 \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":212,"author":{"gitId":"belligerentbeagle"},"content":"                switch (type) {","lastModifiedDate":"2024-01-31"},{"lineNumber":213,"author":{"gitId":"belligerentbeagle"},"content":"                case \"T\":","lastModifiedDate":"2024-01-31"},{"lineNumber":214,"author":{"gitId":"belligerentbeagle"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":215,"author":{"gitId":"belligerentbeagle"},"content":"                case \"D\":","lastModifiedDate":"2024-01-31"},{"lineNumber":216,"author":{"gitId":"belligerentbeagle"},"content":"                    time1 \u003d task[3];","lastModifiedDate":"2024-01-31"},{"lineNumber":217,"author":{"gitId":"belligerentbeagle"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":218,"author":{"gitId":"belligerentbeagle"},"content":"                case \"E\":","lastModifiedDate":"2024-01-31"},{"lineNumber":219,"author":{"gitId":"belligerentbeagle"},"content":"                    time1 \u003d task[3];","lastModifiedDate":"2024-01-31"},{"lineNumber":220,"author":{"gitId":"belligerentbeagle"},"content":"                    time2 \u003d task[4];","lastModifiedDate":"2024-01-31"},{"lineNumber":221,"author":{"gitId":"belligerentbeagle"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":222,"author":{"gitId":"belligerentbeagle"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":223,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":224,"author":{"gitId":"belligerentbeagle"},"content":"            scanner.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":225,"author":{"gitId":"belligerentbeagle"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":226,"author":{"gitId":"belligerentbeagle"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":227,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":228,"author":{"gitId":"belligerentbeagle"},"content":"            return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":229,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":230,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":231,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":232,"author":{"gitId":"belligerentbeagle"},"content":"    private static boolean createFile(File file) throws Exception {","lastModifiedDate":"2024-01-31"},{"lineNumber":233,"author":{"gitId":"belligerentbeagle"},"content":"        boolean fileIsCreated \u003d file.createNewFile(); //May throw IOException","lastModifiedDate":"2024-01-31"},{"lineNumber":234,"author":{"gitId":"belligerentbeagle"},"content":"        if (fileIsCreated) {","lastModifiedDate":"2024-01-31"},{"lineNumber":235,"author":{"gitId":"belligerentbeagle"},"content":"            return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":236,"author":{"gitId":"belligerentbeagle"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":237,"author":{"gitId":"belligerentbeagle"},"content":"            throw new DukeException(\"Unable to create new file\");","lastModifiedDate":"2024-01-31"},{"lineNumber":238,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":239,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":240,"author":{"gitId":"belligerentbeagle"},"content":"    private static void parseTodoFile(File file) throws Exception {","lastModifiedDate":"2024-01-31"},{"lineNumber":241,"author":{"gitId":"belligerentbeagle"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-01-31"},{"lineNumber":242,"author":{"gitId":"belligerentbeagle"},"content":"        Integer taskCounter \u003d 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":243,"author":{"gitId":"belligerentbeagle"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":244,"author":{"gitId":"belligerentbeagle"},"content":"            String task[] \u003d scanner.nextLine().split(\" \\\\| \");","lastModifiedDate":"2024-01-31"},{"lineNumber":245,"author":{"gitId":"belligerentbeagle"},"content":"            String type \u003d task[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":246,"author":{"gitId":"belligerentbeagle"},"content":"            String done \u003d task[1];","lastModifiedDate":"2024-01-31"},{"lineNumber":247,"author":{"gitId":"belligerentbeagle"},"content":"            String desc \u003d task[2];","lastModifiedDate":"2024-01-31"},{"lineNumber":248,"author":{"gitId":"belligerentbeagle"},"content":"            String time1 \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":249,"author":{"gitId":"belligerentbeagle"},"content":"            String time2 \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":250,"author":{"gitId":"belligerentbeagle"},"content":"            switch (type) {","lastModifiedDate":"2024-01-31"},{"lineNumber":251,"author":{"gitId":"belligerentbeagle"},"content":"            case \"D\":","lastModifiedDate":"2024-01-31"},{"lineNumber":252,"author":{"gitId":"belligerentbeagle"},"content":"                time1 \u003d task[3];","lastModifiedDate":"2024-01-31"},{"lineNumber":253,"author":{"gitId":"belligerentbeagle"},"content":"                processCommand(\"DEADLINE \" + desc + \" /by \" + time1, todos, 0);","lastModifiedDate":"2024-01-31"},{"lineNumber":254,"author":{"gitId":"belligerentbeagle"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":255,"author":{"gitId":"belligerentbeagle"},"content":"            case \"E\":","lastModifiedDate":"2024-01-31"},{"lineNumber":256,"author":{"gitId":"belligerentbeagle"},"content":"                time1 \u003d task[3];","lastModifiedDate":"2024-01-31"},{"lineNumber":257,"author":{"gitId":"belligerentbeagle"},"content":"                time2 \u003d task[4];","lastModifiedDate":"2024-01-31"},{"lineNumber":258,"author":{"gitId":"belligerentbeagle"},"content":"                processCommand(\"EVENT \" + desc + \" /from \" + time1 + \" /to \" + time2, todos, 0);","lastModifiedDate":"2024-01-31"},{"lineNumber":259,"author":{"gitId":"belligerentbeagle"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":260,"author":{"gitId":"belligerentbeagle"},"content":"            case \"T\":","lastModifiedDate":"2024-01-31"},{"lineNumber":261,"author":{"gitId":"belligerentbeagle"},"content":"                processCommand(\"TODO \" + desc, todos, 0);","lastModifiedDate":"2024-01-31"},{"lineNumber":262,"author":{"gitId":"belligerentbeagle"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":263,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":264,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":265,"author":{"gitId":"belligerentbeagle"},"content":"            if (done.equals(\"1\")) { // done","lastModifiedDate":"2024-01-31"},{"lineNumber":266,"author":{"gitId":"belligerentbeagle"},"content":"                processCommand(\"MARK \" + taskCounter.toString(), todos, 0);","lastModifiedDate":"2024-01-31"},{"lineNumber":267,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":268,"author":{"gitId":"belligerentbeagle"},"content":"            //parse each line","lastModifiedDate":"2024-01-31"},{"lineNumber":269,"author":{"gitId":"belligerentbeagle"},"content":"            taskCounter++;","lastModifiedDate":"2024-01-31"},{"lineNumber":270,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":271,"author":{"gitId":"belligerentbeagle"},"content":"        scanner.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":272,"author":{"gitId":"belligerentbeagle"},"content":"        System.out.println(\"Preload Success\");","lastModifiedDate":"2024-01-31"},{"lineNumber":273,"author":{"gitId":"belligerentbeagle"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":274,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":275,"author":{"gitId":"belligerentbeagle"},"content":"    private static void openStoredFile() throws Exception {","lastModifiedDate":"2024-01-31"},{"lineNumber":276,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":277,"author":{"gitId":"belligerentbeagle"},"content":"        //See if file already exists then parse it","lastModifiedDate":"2024-01-31"},{"lineNumber":278,"author":{"gitId":"belligerentbeagle"},"content":"        String filePath \u003d \"./src/main/java/data/duke.txt\";","lastModifiedDate":"2024-01-31"},{"lineNumber":279,"author":{"gitId":"belligerentbeagle"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":280,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":281,"author":{"gitId":"belligerentbeagle"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":282,"author":{"gitId":"belligerentbeagle"},"content":"            if (!file.exists()) { //Create if don\u0027t exist","lastModifiedDate":"2024-01-31"},{"lineNumber":283,"author":{"gitId":"belligerentbeagle"},"content":"                createFile(file);","lastModifiedDate":"2024-01-31"},{"lineNumber":284,"author":{"gitId":"belligerentbeagle"},"content":"            } else { //file does exist","lastModifiedDate":"2024-01-31"},{"lineNumber":285,"author":{"gitId":"belligerentbeagle"},"content":"               if (isCorrupt(file)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":286,"author":{"gitId":"belligerentbeagle"},"content":"                   //file corrupt","lastModifiedDate":"2024-01-31"},{"lineNumber":287,"author":{"gitId":"belligerentbeagle"},"content":"                   System.out.println(\"File Corrupt! Creating new file\");","lastModifiedDate":"2024-01-31"},{"lineNumber":288,"author":{"gitId":"belligerentbeagle"},"content":"                   createFile(file); //TODO fix because currently cannot create new file with the same name.","lastModifiedDate":"2024-01-31"},{"lineNumber":289,"author":{"gitId":"belligerentbeagle"},"content":"               } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":290,"author":{"gitId":"belligerentbeagle"},"content":"                   //parse current info and return.","lastModifiedDate":"2024-01-31"},{"lineNumber":291,"author":{"gitId":"belligerentbeagle"},"content":"                   parseTodoFile(file);","lastModifiedDate":"2024-01-31"},{"lineNumber":292,"author":{"gitId":"belligerentbeagle"},"content":"               }","lastModifiedDate":"2024-01-31"},{"lineNumber":293,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":294,"author":{"gitId":"belligerentbeagle"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":295,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(\"Oh no!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":296,"author":{"gitId":"belligerentbeagle"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":297,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":298,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":299,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":300,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":301,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":302,"author":{"gitId":"belligerentbeagle"},"content":"    static ArrayList\u003cTask\u003e todos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-23"},{"lineNumber":304,"author":{"gitId":"belligerentbeagle"},"content":"        formalities(\"greet\");","lastModifiedDate":"2024-01-23"},{"lineNumber":305,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":306,"author":{"gitId":"belligerentbeagle"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":307,"author":{"gitId":"belligerentbeagle"},"content":"            openStoredFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":308,"author":{"gitId":"belligerentbeagle"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":309,"author":{"gitId":"belligerentbeagle"},"content":"           e.getMessage();","lastModifiedDate":"2024-01-31"},{"lineNumber":310,"author":{"gitId":"belligerentbeagle"},"content":"            todos \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":311,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":312,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":313,"author":{"gitId":"belligerentbeagle"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-24"},{"lineNumber":314,"author":{"gitId":"belligerentbeagle"},"content":"        while (true) {","lastModifiedDate":"2024-01-23"},{"lineNumber":315,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":316,"author":{"gitId":"belligerentbeagle"},"content":"            //Read user input from Scanner.","lastModifiedDate":"2024-01-31"},{"lineNumber":317,"author":{"gitId":"belligerentbeagle"},"content":"            String s;","lastModifiedDate":"2024-01-24"},{"lineNumber":318,"author":{"gitId":"belligerentbeagle"},"content":"            try {","lastModifiedDate":"2024-01-24"},{"lineNumber":319,"author":{"gitId":"belligerentbeagle"},"content":"                s \u003d scanner.nextLine(); // Use the same Scanner object","lastModifiedDate":"2024-01-24"},{"lineNumber":320,"author":{"gitId":"belligerentbeagle"},"content":"            } catch (NoSuchElementException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":321,"author":{"gitId":"belligerentbeagle"},"content":"                System.out.println(\"No input found. Exiting.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":322,"author":{"gitId":"belligerentbeagle"},"content":"                break; // Exit the loop if no input is found","lastModifiedDate":"2024-01-24"},{"lineNumber":323,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":324,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":325,"author":{"gitId":"belligerentbeagle"},"content":"            //Parsing user input.","lastModifiedDate":"2024-01-31"},{"lineNumber":326,"author":{"gitId":"belligerentbeagle"},"content":"            try {","lastModifiedDate":"2024-01-24"},{"lineNumber":327,"author":{"gitId":"belligerentbeagle"},"content":"                processCommand(s, todos, 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":328,"author":{"gitId":"belligerentbeagle"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":329,"author":{"gitId":"belligerentbeagle"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":330,"author":{"gitId":"belligerentbeagle"},"content":"                //continuing because exception has already been printed","lastModifiedDate":"2024-01-31"},{"lineNumber":331,"author":{"gitId":"belligerentbeagle"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-24"},{"lineNumber":332,"author":{"gitId":"belligerentbeagle"},"content":"                continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":333,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":334,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":335,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":336,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"belligerentbeagle":335,"-":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"    protected String fromString;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"    protected String toString;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"        this.fromString \u003d from;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"        this.toString \u003d to;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"belligerentbeagle"},"content":"        this.from \u003d super.parseDateTime(from);","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"belligerentbeagle"},"content":"        this.to \u003d super.parseDateTime(to);","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"belligerentbeagle"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"belligerentbeagle"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"belligerentbeagle"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\")) + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\")) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"belligerentbeagle"},"content":"    public String fileSavingString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"belligerentbeagle"},"content":"        return \"E | \" + Integer.toString(super.isDone ? 1 : 0) + \" | \" + super.description + \" | \" + this.fromString + \" | \" + this.toString;","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"belligerentbeagle"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"belligerentbeagle"},"content":"// event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"belligerentbeagle"},"content":"//    ____________________________________________________________","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"belligerentbeagle"},"content":"//     Got it. I\u0027ve added this task:","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"belligerentbeagle"},"content":"//       [E][ ] project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"belligerentbeagle":32}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"    protected String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"belligerentbeagle"},"content":"    public LocalDateTime parseDateTime(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"belligerentbeagle"},"content":"        DateTimeFormatter[] formattersWithTime \u003d new DateTimeFormatter[] {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"belligerentbeagle"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"belligerentbeagle"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"belligerentbeagle"},"content":"        };","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"belligerentbeagle"},"content":"        DateTimeFormatter[] formattersWithoutTime \u003d new DateTimeFormatter[] {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"belligerentbeagle"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"belligerentbeagle"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"belligerentbeagle"},"content":"                DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"belligerentbeagle"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"belligerentbeagle"},"content":"        };","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"belligerentbeagle"},"content":"        for (DateTimeFormatter formatter : formattersWithTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"belligerentbeagle"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"belligerentbeagle"},"content":"                return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"belligerentbeagle"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"belligerentbeagle"},"content":"                // Continue to try the next format","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"belligerentbeagle"},"content":"        for (DateTimeFormatter formatter : formattersWithoutTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"belligerentbeagle"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"belligerentbeagle"},"content":"                return LocalDate.parse(input, formatter).atTime(0, 0);","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"belligerentbeagle"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"belligerentbeagle"},"content":"                // Continue to try the next format","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"belligerentbeagle"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"belligerentbeagle"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"belligerentbeagle"},"content":"        throw new DateTimeParseException(\"Invalid date/time format\", input, 0);","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"belligerentbeagle"},"content":"        public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"belligerentbeagle"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"belligerentbeagle"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"belligerentbeagle"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"belligerentbeagle"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"belligerentbeagle"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"belligerentbeagle"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"belligerentbeagle"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"belligerentbeagle"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"belligerentbeagle"},"content":"    public abstract String fileSavingString();","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"belligerentbeagle"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"belligerentbeagle":66}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"    public String fileSavingString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"        return \"T | \" + Integer.toString(super.isDone ? 1 : 0) + \" | \" + super.description;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"belligerentbeagle"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"belligerentbeagle":15}},{"path":"src/main/java/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"D | 1 | return book | 2019-12-03 0000","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"T | 1 | read book","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"T | 0 | read book","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"E | 0 | project meeting | 2024-08-06 1400 | 2024-08-06 1800","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"T | 1 | join sports club","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"T | 0 | read book","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"T | 1 | AddedNew","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"T | 0 | evenNewer","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"D | 0 | yestheory | 2019-12-03 0000","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"T | 0 | test","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"T | 0 | test","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"T | 0 | test2","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"D | 0 | something | 2024-12-03 1800","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"E | 0 | uat kick off | 2024-01-31 | 2024-02-01","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"belligerentbeagle":14}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"package exceptions;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"    public DukeException(String error) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"        super(error);","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"    public String getMessage() {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"        return super.getMessage();","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"belligerentbeagle":13}},{"path":"src/main/java/exceptions/TaskNotExistException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"package exceptions;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"public class TaskNotExistException extends DukeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"    public TaskNotExistException(String number) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"        super(\"Task number \" + number + \" does not exist.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"    public String getMessage() {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"        return super.getMessage();","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"belligerentbeagle":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"belligerentbeagle"},"content":"todo borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"belligerentbeagle"},"content":"deadline return book /by 2019-12-12 1800","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"belligerentbeagle"},"content":"event project meeting /from 2019-12-12 1800 /to 2019-12-13 1800","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"belligerentbeagle"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"belligerentbeagle"},"content":"mark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"belligerentbeagle"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"belligerentbeagle"},"content":"unmark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"belligerentbeagle"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"belligerentbeagle"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"belligerentbeagle"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"belligerentbeagle"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"belligerentbeagle"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"belligerentbeagle"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"belligerentbeagle"},"content":"unmark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"belligerentbeagle"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"belligerentbeagle"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"belligerentbeagle":16}}]
