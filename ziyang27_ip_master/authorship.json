[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"ziyang27"},"content":"checkstyle {","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ziyang27"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ziyang27":5,"-":42}},{"path":"data/dibo.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"todo | 0 | a","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"todo | 1 | b","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"deadline | 0 | c | Jan 01 2019","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"todo | 0 | aa","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ziyang27":4}},{"path":"src/main/java/dibo/Dibo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package dibo;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"import dibo.command.Command;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"import dibo.exception.DiboException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":" * Class of the dibo chatbot.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"public class Dibo {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"    private Dibo(String path) {","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"        this.storage \u003d new Storage(path);","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"            this.tasks \u003d new TaskList(this.storage.loadData());","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"        } catch (DiboException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"            this.ui.showError(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"            this.tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"        Dibo dibo \u003d new Dibo(\"./data/dibo.txt\");","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"        dibo.run();","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"    private void run() {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"        this.ui.sayHi();","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"        boolean isBye \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"        while (!isBye) {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"                String fullCommand \u003d ui.takeCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"                Command command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"ziyang27"},"content":"                command.run(tasks, ui, storage);","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"ziyang27"},"content":"                isBye \u003d command.isBye();","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"ziyang27"},"content":"            } catch (DiboException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"ziyang27"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"ziyang27"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ziyang27":47}},{"path":"src/main/java/dibo/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package dibo;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"import dibo.command.AddDeadlineCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"import dibo.command.AddEventCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"import dibo.command.AddToDoCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"import dibo.command.ByeCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"import dibo.command.Command;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"import dibo.command.DeleteCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"import dibo.command.FindCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"import dibo.command.ListCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"import dibo.command.MarkCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"import dibo.command.UnmarkCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"import dibo.exception.DiboException;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":" * The class to make sense of the commands given by the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"public class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"     * Takes in the command and tries to make sense of it.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"     * Returns a Command object which can be run at the end.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"     * @return A Command object to be run.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"     * @throws DiboException If an error occurs when parsing.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"    public static Command parse(String fullCommand) throws DiboException {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"        String[] commandDetails \u003d fullCommand.split(\" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"        switch (commandDetails[0]) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"        case \"list\":","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"ziyang27"},"content":"                int taskId \u003d Integer.parseInt(commandDetails[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"ziyang27"},"content":"                return new UnmarkCommand(taskId);","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"ziyang27"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"ziyang27"},"content":"                throw new DiboException(\"Oh no sir! You have to unmark the items based on their index.\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"ziyang27"},"content":"                        + \"If you are not sure of the index, enter \u0027list\u0027 to check it out :D\");","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"ziyang27"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"ziyang27"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"ziyang27"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"ziyang27"},"content":"                int taskId \u003d Integer.parseInt(commandDetails[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"ziyang27"},"content":"                return new MarkCommand(taskId);","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"ziyang27"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"ziyang27"},"content":"                throw new DiboException(\"Oh no sir! You have to Mark the items based on their index.\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"ziyang27"},"content":"                        + \"If you are not sure of the index, enter \u0027list\u0027 to check it out :D\");","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"ziyang27"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"ziyang27"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"ziyang27"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"ziyang27"},"content":"                int taskId \u003d Integer.parseInt(commandDetails[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"ziyang27"},"content":"                return new DeleteCommand(taskId);","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"ziyang27"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"ziyang27"},"content":"                throw new DiboException(\"Oh no sir! You have to delete the items based on their index.\"","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"ziyang27"},"content":"                        + \"If you are not sure of the index, enter \u0027list\u0027 to check it out :D\");","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"ziyang27"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"ziyang27"},"content":"        case \"find\":","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"ziyang27"},"content":"            if (!hasDescription(fullCommand)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"ziyang27"},"content":"                throw new DiboException(\"Oh no sir! We need a keyword to search.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"ziyang27"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"ziyang27"},"content":"            String keyword \u003d commandDetails[1];","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"ziyang27"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"ziyang27"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"ziyang27"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"ziyang27"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"ziyang27"},"content":"            if (!hasDescription(fullCommand)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"ziyang27"},"content":"                throw new DiboException(\"Oh no sir! We need a description for your task. \"","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"ziyang27"},"content":"                        + \"This will enable us to better keep track of your tasks.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"ziyang27"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"ziyang27"},"content":"            String descriptionToDo \u003d getDescription(fullCommand, \"todo\");","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"ziyang27"},"content":"            return new AddToDoCommand(descriptionToDo);","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"ziyang27"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"ziyang27"},"content":"            if (!hasDescription(fullCommand)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"ziyang27"},"content":"                throw new DiboException(\"Oh no sir! We need a description for your task. \"","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"ziyang27"},"content":"                        + \"This will enable us to better keep track of your tasks.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"ziyang27"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"ziyang27"},"content":"            try {","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"ziyang27"},"content":"                String descriptionDeadline \u003d getDescription(fullCommand, \"deadline\");","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"ziyang27"},"content":"                LocalDate byDate \u003d getByDate(fullCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"ziyang27"},"content":"                return new AddDeadlineCommand(descriptionDeadline, byDate);","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"ziyang27"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"ziyang27"},"content":"                throw new DiboException(\"Oh no sir! Please state the deadline of the task :D\");","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"ziyang27"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"ziyang27"},"content":"                throw new DiboException(\"Oh no sir! Please state the deadline of the task \"","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"ziyang27"},"content":"                        + \"in this format: yyyy-mm-dd\");","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"ziyang27"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"ziyang27"},"content":"        case \"event\":","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"ziyang27"},"content":"            if (!hasDescription(fullCommand)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"ziyang27"},"content":"                throw new DiboException(\"Oh no sir! We need a description for your task. \"","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"ziyang27"},"content":"                        + \"This will enable us to better keep track of your tasks.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"ziyang27"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"ziyang27"},"content":"            try {","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"ziyang27"},"content":"                String descriptionEvent \u003d getDescription(fullCommand, \"event\");","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"ziyang27"},"content":"                LocalDate startDate \u003d getStartDate(fullCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"ziyang27"},"content":"                LocalDate endDate \u003d getEndDate(fullCommand);","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"ziyang27"},"content":"                return new AddEventCommand(descriptionEvent, startDate, endDate);","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"ziyang27"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"ziyang27"},"content":"                throw new DiboException(\"Oh no sir! Please state the start and end of the task :D\");","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"ziyang27"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"ziyang27"},"content":"                throw new DiboException(\"Oh no sir! Please state the deadline of the task \"","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"ziyang27"},"content":"                        + \"in this format: yyyy-mm-dd\");","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"ziyang27"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"ziyang27"},"content":"        default:","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"ziyang27"},"content":"            throw new DiboException(\"Oh no sir! There is no such task type :(\");","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"ziyang27"},"content":"    private static boolean hasDescription(String fullCommand) {","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"ziyang27"},"content":"        String[] details \u003d fullCommand.split(\"/\");","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"ziyang27"},"content":"        String[] typeAndDescription \u003d details[0].split(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"ziyang27"},"content":"        return typeAndDescription.length \u003d\u003d 2;","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"ziyang27"},"content":"    private static String getDescription(String fullCommand, String type) {","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"ziyang27"},"content":"        String[] details \u003d fullCommand.split(\"/\");","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"ziyang27"},"content":"        return details[0].substring(type.length()).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"ziyang27"},"content":"    private static LocalDate getByDate(String fullCommand)","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"ziyang27"},"content":"            throws DateTimeParseException, IndexOutOfBoundsException {","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"ziyang27"},"content":"        String[] details \u003d fullCommand.split(\"/\");","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"ziyang27"},"content":"        String byString \u003d details[1].substring(2).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"ziyang27"},"content":"        return LocalDate.parse(byString, Parser.INPUT_FORMAT);","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"ziyang27"},"content":"    private static LocalDate getStartDate(String fullCommand)","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"ziyang27"},"content":"            throws DateTimeParseException, IndexOutOfBoundsException {","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"ziyang27"},"content":"        String[] details \u003d fullCommand.split(\"/\");","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"ziyang27"},"content":"        String startString \u003d details[1].substring(4).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"ziyang27"},"content":"        return LocalDate.parse(startString, Parser.INPUT_FORMAT);","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"ziyang27"},"content":"    private static LocalDate getEndDate(String fullCommand)","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"ziyang27"},"content":"            throws DateTimeParseException, IndexOutOfBoundsException {","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"ziyang27"},"content":"        String[] details \u003d fullCommand.split(\"/\");","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"ziyang27"},"content":"        String endString \u003d details[2].substring(2).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"ziyang27"},"content":"        return LocalDate.parse(endString, Parser.INPUT_FORMAT);","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ziyang27":143}},{"path":"src/main/java/dibo/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package dibo;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"import dibo.exception.DiboException;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"import dibo.task.Deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"import dibo.task.Event;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"import dibo.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"import dibo.task.ToDo;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":" * The class to load data from and save data to the text file.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"public class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"    private String filePath;","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"     * Constructor for the Storage class.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"     * @param filePath The file path to the text file.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"     * Loads the data from the text file and returns an ArrayList.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"     * @return An ArrayList to instantiate the TaskList object.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ziyang27"},"content":"     * @throws DiboException If an error occurs when loading.","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ziyang27"},"content":"    public ArrayList\u003cTask\u003e loadData() throws DiboException {","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"ziyang27"},"content":"        ArrayList\u003cTask\u003e taskLists \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"ziyang27"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"ziyang27"},"content":"            File f \u003d new File(this.filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"ziyang27"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"ziyang27"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"ziyang27"},"content":"                String taskDetails \u003d sc.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"ziyang27"},"content":"                String[] details \u003d taskDetails.split(\"\\\\|\");","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"ziyang27"},"content":"                String type \u003d details[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"ziyang27"},"content":"                Task task;","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"ziyang27"},"content":"                switch (type) {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"ziyang27"},"content":"                case \"todo\":","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"ziyang27"},"content":"                    String description1 \u003d details[2];","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"ziyang27"},"content":"                    task \u003d new ToDo(description1);","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"ziyang27"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"ziyang27"},"content":"                case \"deadline\":","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"ziyang27"},"content":"                    String description2 \u003d details[2];","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"ziyang27"},"content":"                    String by \u003d details[3].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"ziyang27"},"content":"                    task \u003d new Deadline(description2, convertToLocalDate(by));","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"ziyang27"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"ziyang27"},"content":"                case \"event\":","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"ziyang27"},"content":"                    String description3 \u003d details[2];","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"ziyang27"},"content":"                    String start \u003d details[3].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"ziyang27"},"content":"                    String end \u003d details[4].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"ziyang27"},"content":"                    task \u003d new Event(description3, convertToLocalDate(start), convertToLocalDate(end));","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"ziyang27"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"ziyang27"},"content":"                default:","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"ziyang27"},"content":"                    throw new DiboException(\"Sorry sir! Unfortunately the loaded text file \"","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"ziyang27"},"content":"                            + \"contains an invalid task type :O\");","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"ziyang27"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"ziyang27"},"content":"                if (Integer.parseInt(details[1].trim()) \u003d\u003d 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"ziyang27"},"content":"                    task.markAsDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"ziyang27"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"ziyang27"},"content":"                taskLists.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"ziyang27"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"ziyang27"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"ziyang27"},"content":"            File f \u003d new File(this.filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"ziyang27"},"content":"            if (f.mkdir()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"ziyang27"},"content":"                System.out.println(\"Hi sir! We have just created a new text file \"","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"ziyang27"},"content":"                        + \"for you to store your task list :D\");","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"ziyang27"},"content":"            } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"ziyang27"},"content":"                throw new DiboException(\"Sorry sir! We tried a new text file \"","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"ziyang27"},"content":"                        + \"for you to store your task list but was unable to do so.\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"ziyang27"},"content":"                        + \"Please do us a favour and check the path name:D\");","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"ziyang27"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"ziyang27"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"ziyang27"},"content":"            throw new DiboException(\"Oh no sir! The file seems to be corrupted :O \"","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"ziyang27"},"content":"                    + \" The dates are not in the correct format. It ought to be: yyyy-mm-dd  :(\");","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"ziyang27"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"ziyang27"},"content":"            throw new DiboException(\"Oh no sir! The file seems to be corrupted :O \"","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"ziyang27"},"content":"                    + \" You might want to take a look at the formatting of the text file :(\");","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"ziyang27"},"content":"        return taskLists;","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"ziyang27"},"content":"     * Saves the data from the task list to the text file.","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"ziyang27"},"content":"     * @throws DiboException If an error occurs when saving.","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"ziyang27"},"content":"    public void save(TaskList taskList) throws DiboException {","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"ziyang27"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"ziyang27"},"content":"            String updatedData \u003d taskList.getSaveFormat();","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"ziyang27"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"ziyang27"},"content":"            fw.write(updatedData);","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"ziyang27"},"content":"            fw.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"ziyang27"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"ziyang27"},"content":"            throw new DiboException(\"Oh no sir! We are unable to update the task lists.\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"ziyang27"},"content":"                    + \"We are terminating the chatbot :(. Check the file again and restart.\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"ziyang27"},"content":"                    + \"We will be waiting for you here :D.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"ziyang27"},"content":"    private LocalDate convertToLocalDate(String date) throws DateTimeParseException {","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"ziyang27"},"content":"        return LocalDate.parse(date, Storage.INPUT_FORMAT);","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ziyang27":124}},{"path":"src/main/java/dibo/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package dibo;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"import dibo.exception.DiboException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"import dibo.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":" * Class to store all the tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"public class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"    private final ArrayList\u003cTask\u003e storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"    private int count;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"     * Constructor for the TaskList class.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"     * @param storage The ArrayList returned from loading from the text file.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"    public TaskList(ArrayList\u003cTask\u003e storage) {","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"        this.count \u003d storage.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"     * Takes in a task and adds it into the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"        this.storage.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"        this.count++;","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"     * Returns the string representation of the list to be displayed.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"     * @return The string representation of the list to be displayed.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ziyang27"},"content":"    public String getDisplayFormat() {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"ziyang27"},"content":"        StringBuilder list \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"ziyang27"},"content":"        for (int i \u003d 0; i \u003c count; ++i) {","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"ziyang27"},"content":"            list.append((i + 1));","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"ziyang27"},"content":"            list.append(\".\");","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"ziyang27"},"content":"            list.append(storage.get(i).toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"ziyang27"},"content":"            list.append(\"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"ziyang27"},"content":"        return list.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"ziyang27"},"content":"     * Returns the string representation of the list to be saved.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"ziyang27"},"content":"     * @return The string representation of the list to be saved.","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"ziyang27"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"ziyang27"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"ziyang27"},"content":"        for (int i \u003d 0; i \u003c count; ++i) {","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"ziyang27"},"content":"            Task task \u003d storage.get(i);","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"ziyang27"},"content":"            list.append(task.getSaveFormat());","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"ziyang27"},"content":"            list.append(\"\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"ziyang27"},"content":"        return list.toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"ziyang27"},"content":"     * Returns the string representation of the tasks with the specified keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"ziyang27"},"content":"     * @return The string representation of the tasks with the specified keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"ziyang27"},"content":"     * @throws DiboException if there is no such task with the specified keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"ziyang27"},"content":"    public String getTasksWithKeyword(String keyword) throws DiboException {","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"ziyang27"},"content":"        StringBuilder list \u003d new StringBuilder();","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"ziyang27"},"content":"        int taskCount \u003d 0;","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"ziyang27"},"content":"        for (int i \u003d 0; i \u003c count; ++i) {","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"ziyang27"},"content":"            Task task \u003d storage.get(i);","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"ziyang27"},"content":"            if (task.hasKeyword(keyword)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"ziyang27"},"content":"                taskCount++;","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"ziyang27"},"content":"                list.append(taskCount);","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"ziyang27"},"content":"                list.append(\".\");","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"ziyang27"},"content":"                list.append(task.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"ziyang27"},"content":"                list.append(\"\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"ziyang27"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"ziyang27"},"content":"        if (taskCount \u003d\u003d 0) {","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"ziyang27"},"content":"            throw new DiboException(\"Oh no sir! We cannot find any task with the specified keyword :(\");","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"ziyang27"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"ziyang27"},"content":"        return list.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"ziyang27"},"content":"     * Takes in an index, marks the task at that index as done","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"ziyang27"},"content":"     * and return the string representation of that task.","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"ziyang27"},"content":"     * @param i The index of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"ziyang27"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"ziyang27"},"content":"    public String markTask(int i) {","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"ziyang27"},"content":"        Task task \u003d storage.get(i - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":100,"author":{"gitId":"ziyang27"},"content":"        task.markAsDone();","lastModifiedDate":"2024-01-24"},{"lineNumber":101,"author":{"gitId":"ziyang27"},"content":"        return task.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":103,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":104,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"ziyang27"},"content":"     * Takes in an index, marks the task at that index as not done","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"ziyang27"},"content":"     * and return the string representation of that task.","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"ziyang27"},"content":"     * @param i The index of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"ziyang27"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"ziyang27"},"content":"    public String unmarkTask(int i) {","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"ziyang27"},"content":"        Task task \u003d storage.get(i - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":113,"author":{"gitId":"ziyang27"},"content":"        task.markAsNotDone();","lastModifiedDate":"2024-01-24"},{"lineNumber":114,"author":{"gitId":"ziyang27"},"content":"        return task.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":116,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":117,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"ziyang27"},"content":"     * Takes in an index, deletes the task at that index","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"ziyang27"},"content":"     * and return the string representation of that task.","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"ziyang27"},"content":"     * @param i The index of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"ziyang27"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"ziyang27"},"content":"    public String deleteTask(int i) {","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"ziyang27"},"content":"        Task task \u003d storage.get(i - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"ziyang27"},"content":"        storage.remove(i - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":127,"author":{"gitId":"ziyang27"},"content":"        this.count--;","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"ziyang27"},"content":"        return task.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"ziyang27"},"content":"     * Returns the size of the TaskList to be shown to the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"ziyang27"},"content":"     * @return The size of the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"ziyang27"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"ziyang27"},"content":"        return this.count;","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":139,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ziyang27":139}},{"path":"src/main/java/dibo/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package dibo;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":" * Class to deal with the interaction with users.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"public class Ui {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"     * Constructor for the Ui class.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"    public Ui() {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"     * Scans the whole line for the user\u0027s command.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"     * @return The string representation of the user\u0027s command.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"    public String takeCommand() {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"     * Prints hello message to the users.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"    public void sayHi() {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"        showSeparator();","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"        System.out.println(\"Hello sir! I\u0027m Dibo.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"        System.out.println(\"What can I do for you today?\");","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"        showSeparator();","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"     * Takes in the string representaion of the taskList and reports it to the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"     * @param taskList The String representation of the taskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ziyang27"},"content":"    public void showList(String taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"ziyang27"},"content":"        showSeparator();","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"ziyang27"},"content":"        System.out.println(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"ziyang27"},"content":"        showSeparator();","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ziyang27"},"content":"     * Prints the message to show that the task has been successfully unmarked.","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"ziyang27"},"content":"     * @param task The String representation of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ziyang27"},"content":"    public void showUnmarked(String task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"ziyang27"},"content":"        showSeparator();","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"ziyang27"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"ziyang27"},"content":"        System.out.println(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"ziyang27"},"content":"        showSeparator();","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"ziyang27"},"content":"     * Prints the message to show that the task has been successfully marked.","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"ziyang27"},"content":"     * @param task The String representation of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"ziyang27"},"content":"    public void showMarked(String task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"ziyang27"},"content":"        showSeparator();","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"ziyang27"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"ziyang27"},"content":"        System.out.println(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"ziyang27"},"content":"        showSeparator();","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"ziyang27"},"content":"     * Prints the message to show that the task has been successfully deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"ziyang27"},"content":"     * @param task The String representation of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"ziyang27"},"content":"    public void showDeleted(String task, int size) {","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"ziyang27"},"content":"        showSeparator();","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"ziyang27"},"content":"        System.out.println(\"Noted. I\u0027m removing this task:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"ziyang27"},"content":"        System.out.println(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"ziyang27"},"content":"        System.out.println(\"Now you have \" + size + (size \u003e 1 ? \" tasks \" : \" task \")","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"ziyang27"},"content":"                        + \"left in the list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"ziyang27"},"content":"        showSeparator();","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"ziyang27"},"content":"     * Prints the message to show that the task has been successfully added.","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"ziyang27"},"content":"     * @param task The String representation of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"ziyang27"},"content":"     * @param size The size of the taskList after the last action performed.","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"ziyang27"},"content":"    public void showAdded(String task, int size) {","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"ziyang27"},"content":"        showSeparator();","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"ziyang27"},"content":"        System.out.println(\"Good news sir! I\u0027ve added this task:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"ziyang27"},"content":"        System.out.println(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"ziyang27"},"content":"        System.out.println(\"Now you have \" + size + (size \u003e 1 ? \" tasks \" : \" task \")","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"ziyang27"},"content":"                + \"in the list.\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"ziyang27"},"content":"        showSeparator();","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"ziyang27"},"content":"     * Prints the message to show that the task has been found.","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"ziyang27"},"content":"     * @param taskWithKeyword The specified keyword to find the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"ziyang27"},"content":"    public void showFound(String taskWithKeyword) {","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"ziyang27"},"content":"        showSeparator();","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"ziyang27"},"content":"        System.out.println(\"Good news sir! We\u0027ve found the tasks in your list:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"ziyang27"},"content":"        System.out.println(taskWithKeyword);","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"ziyang27"},"content":"        showSeparator();","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"ziyang27"},"content":"     * Prints the error message.","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"ziyang27"},"content":"     * @param errorMessage The string representation of the message.","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"ziyang27"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"ziyang27"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"ziyang27"},"content":"     * Say goodbye to the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"ziyang27"},"content":"    public void sayBye() {","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"ziyang27"},"content":"        showSeparator();","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"ziyang27"},"content":"        System.out.println(\"Bye sir! Always happy to assist you :D\");","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"ziyang27"},"content":"        System.out.println(\"Hope to see you again soon!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"ziyang27"},"content":"        showSeparator();","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"ziyang27"},"content":"    private void showSeparator() {","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"ziyang27"},"content":"        System.out.println(\"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ziyang27":129}},{"path":"src/main/java/dibo/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package dibo.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"import dibo.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"import dibo.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"import dibo.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"import dibo.exception.DiboException;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"import dibo.task.Deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":" * Class to handle the command which adds a deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"    private String description;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"    private LocalDate by;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"     * Constructor for the AddDeadlineCommand class.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"     * @param description The description of deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"     * @param by The LocalDate object of the deadline of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"    public AddDeadlineCommand(String description, LocalDate by) {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"     * Run the add deadline task command.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"     * @param taskList The TaskList object which contains all the tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"     * @param ui The Ui object which is responsible for printing the added message.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"     * @param storage The Storage object which is responsible to save the changes into a text file.","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"     * @throws DiboException when an error occurs when trying to save the changes into a text file.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"    public void run(TaskList taskList, Ui ui, Storage storage) throws DiboException {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ziyang27"},"content":"        Deadline deadline \u003d new Deadline(this.description, this.by);","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ziyang27"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ziyang27"},"content":"        ui.showAdded(deadline.toString(), taskList.getSize());","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ziyang27"},"content":"        storage.save(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ziyang27":44}},{"path":"src/main/java/dibo/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package dibo.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"import dibo.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"import dibo.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"import dibo.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"import dibo.exception.DiboException;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"import dibo.task.Event;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":" * Class to handle the command which adds a to-do task.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"    private String description;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"    private LocalDate start;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"    private LocalDate end;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"     * Constructor for the AddEventCommand class.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"     * @param description The description of event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"     * @param start The LocalDate object of the start of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"     * @param end The LocalDate object of the end of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"    public AddEventCommand(String description, LocalDate start, LocalDate end) {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"     * Run the add event task command.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"     * @param taskList The TaskList object which contains all the tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"     * @param ui The Ui object which is responsible for printing the added message.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"     * @param storage The Storage object which is responsible to save the changes into a text file.","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"     * @throws DiboException when an error occurs when trying to save the changes into a text file.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ziyang27"},"content":"    public void run(TaskList taskList, Ui ui, Storage storage) throws DiboException {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ziyang27"},"content":"        Event event \u003d new Event(this.description, this.start, this.end);","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ziyang27"},"content":"        taskList.addTask(event);","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ziyang27"},"content":"        ui.showAdded(event.toString(), taskList.getSize());","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ziyang27"},"content":"        storage.save(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ziyang27":47}},{"path":"src/main/java/dibo/command/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package dibo.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"import dibo.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"import dibo.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"import dibo.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"import dibo.exception.DiboException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"import dibo.task.ToDo;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":" * Class to handle the command which adds a to-do task.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"public class AddToDoCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"    private String description;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"     * Constructor for the AddToDoCommand class.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"    public AddToDoCommand(String description) {","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"     * Run the add to-do task command.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"     * @param taskList The TaskList object which contains all the tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"     * @param ui The Ui object which is responsible for printing the added message.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"     * @param storage The Storage object which is responsible to save the changes into a text file.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"     * @throws DiboException when an error occurs when trying to save the changes into a text file.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"    public void run(TaskList taskList, Ui ui, Storage storage) throws DiboException {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"        ToDo toDo \u003d new ToDo(this.description);","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"        taskList.addTask(toDo);","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"        ui.showAdded(toDo.toString(), taskList.getSize());","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"        storage.save(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ziyang27":38}},{"path":"src/main/java/dibo/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package dibo.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"import dibo.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"import dibo.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"import dibo.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":" * Class to represent the bye command.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"     * Run the bye command.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"     * @param taskList The TaskList object which contains all the tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"     * @param ui The Ui object which is responsible for printing the goodbye message.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"     * @param storage The Storage object which is responsible to save the changes into a text file.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"    public void run(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"        ui.sayBye();","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"     * Flag to the main program that there should not be any command after this.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"     * @return A boolean true value to signal that this is the end.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"    public boolean isBye() {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"        return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ziyang27":31}},{"path":"src/main/java/dibo/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package dibo.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"import dibo.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"import dibo.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"import dibo.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"import dibo.exception.DiboException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":" * Abstract class to be inherited by other commands.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"    public abstract void run(TaskList taskList, Ui ui, Storage storage) throws DiboException;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"    public boolean isBye() {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ziyang27":18}},{"path":"src/main/java/dibo/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package dibo.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"import dibo.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"import dibo.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"import dibo.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"import dibo.exception.DiboException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":" * Class to handle a command which deletes a task.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"    private int taskId;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"     * Constructor for the DeleteCommand class.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"     * @param taskId The index of the task to be deleted in the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"    public DeleteCommand(int taskId) {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"     * Run the delete task command.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"     * @param taskList The TaskList object which contains all the tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"     * @param ui The Ui object which is responsible for printing the marked message.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"     * @param storage The Storage object which is responsible to save the changes into a text file.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"     * @throws DiboException when an error occurs when trying to save the changes into a text file.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"    public void run(TaskList taskList, Ui ui, Storage storage) throws DiboException {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"        ui.showDeleted(taskList.deleteTask(taskId), taskList.getSize());","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"        storage.save(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ziyang27":36}},{"path":"src/main/java/dibo/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package dibo.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"import dibo.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"import dibo.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"import dibo.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"import dibo.exception.DiboException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":" * Class to handle a command which finds tasks with a specified keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"    private String keyword;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"     * Constructor for the FindCommand class.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"     * @param keyword The keyword we are using to find the tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"     * Run the find task command.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"     * @param taskList The TaskList object which contains all the tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"     * @param ui The Ui object which is responsible for printing the marked message.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"     * @param storage The Storage object which is responsible to save the changes into a text file.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"     * @throws DiboException when an error occurs when we cannot find the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"    public void run(TaskList taskList, Ui ui, Storage storage) throws DiboException {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"        ui.showFound(taskList.getTasksWithKeyword(this.keyword));","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ziyang27":35}},{"path":"src/main/java/dibo/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package dibo.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"import dibo.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"import dibo.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"import dibo.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":" * Class to represent the list command.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"     * Run the list tasks command.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"     * @param taskList The TaskList object which contains all the tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"     * @param ui The Ui object which is responsible for printing the message.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"     * @param storage The Storage object which is responsible to save the changes into a text file.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"    public void run(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"        ui.showList(taskList.getDisplayFormat());","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ziyang27":22}},{"path":"src/main/java/dibo/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package dibo.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"import dibo.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"import dibo.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"import dibo.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"import dibo.exception.DiboException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":" * Class to handle a command which mark a task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"    private int taskId;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"     * Constructor for the MarkCommand class.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"     * @param taskId The index of the task to be mark as done in the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"    public MarkCommand(int taskId) {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"     * Run the mark task as not done command.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"     * @param taskList The TaskList object which contains all the tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"     * @param ui The Ui object which is responsible for printing the marked message.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"     * @param storage The Storage object which is responsible to save the changes into a text file.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"     * @throws DiboException when an error occurs when trying to save the changes into a text file.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"    public void run(TaskList taskList, Ui ui, Storage storage) throws DiboException {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"        ui.showMarked(taskList.markTask(taskId));","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"        storage.save(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ziyang27":35}},{"path":"src/main/java/dibo/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package dibo.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"import dibo.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"import dibo.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"import dibo.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"import dibo.exception.DiboException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":" * Class to handle a command which mark a task as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"    private int taskId;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"     * Constructor for the UnmarkCommand class.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"     * @param taskId The index of the task to be mark as not done in the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"    public UnmarkCommand(int taskId) {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"     * Run the mark task as not done command.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"     * @param taskList The TaskList object which contains all the tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"     * @param ui The Ui object which is responsible for printing the marked message.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"     * @param storage The Storage object which is responsible to save the changes into a text file.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"     * @throws DiboException when an error occurs when trying to save the changes into a text file.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"    public void run(TaskList taskList, Ui ui, Storage storage) throws DiboException {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"        ui.showUnmarked(taskList.unmarkTask(taskId));","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"        storage.save(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ziyang27":36}},{"path":"src/main/java/dibo/exception/DiboException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package dibo.exception;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":" * Class to handle exception related to the Dibo chatbot.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"public class DiboException extends Exception {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"     * Constructor for the DiboException","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"     * @param errorMessage Error message to be printed for the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"    public DiboException(String errorMessage) {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ziyang27":16}},{"path":"src/main/java/dibo/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package dibo.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":" * Class to represent a deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"    private LocalDate by;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"     * Constructor for the Deadline class.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"     * @param by The date the task needs to complete by.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"        super(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"     * Returns the string representation for the deadline task,","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"     * usually for the display format in the ui.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"     * @return The string representation of the deadline task for displaying.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"        String outputByString \u003d this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + outputByString + \")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"     * Returns the string representation of the deadline task,","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"     * usually for saving in the text file.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"     * @return The string representation of the deadline task for saving.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ziyang27"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ziyang27"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ziyang27"},"content":"        String outputByString \u003d this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ziyang27"},"content":"        return \"deadline | \" + super.getSaveFormat() + \" | \" + outputByString;","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ziyang27":45}},{"path":"src/main/java/dibo/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package dibo.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":" * Class to represent an event.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"    private LocalDate start;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"    private LocalDate end;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"     * Constructor for the Event class.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"     * @param start The date the event starts.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"     * @param end The date the event ends.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"    public Event(String description, LocalDate start, LocalDate end) {","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"        super(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"     * Returns the string representation for the event task,","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"     * usually for the display format in the ui.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"     * @return The string representation of the event task for displaying.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"        String outputStartString \u003d this.start.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"        String outputEndString \u003d this.end.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + outputStartString","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"                + \" to: \" + outputEndString + \")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ziyang27"},"content":"     * Returns the string representation of the event task,","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ziyang27"},"content":"     * usually for saving in the text file.","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ziyang27"},"content":"     * @return The string representation of the event task for saving.","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ziyang27"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ziyang27"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"ziyang27"},"content":"        String outputStartString \u003d this.start.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"ziyang27"},"content":"        String outputEndString \u003d this.end.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ziyang27"},"content":"        return \"event | \" + super.getSaveFormat() + \" | \"","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"ziyang27"},"content":"                + outputStartString + \" | \" + outputEndString;","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ziyang27":53}},{"path":"src/main/java/dibo/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package dibo.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":" * Class to represent a task.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"    private String description;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"     * Returns the string representation for the task,","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"     * usually for the display format in the ui.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"     * @return The string representation of the task for displaying.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"        return (isDone ? \"[X] \" : \"[ ] \") + this.description;","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"     * Mark the task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ziyang27"},"content":"     * Mark the task as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ziyang27"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ziyang27"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ziyang27"},"content":"     * Returns the string representation of the task,","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"ziyang27"},"content":"     * usually for saving in the text file.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ziyang27"},"content":"     * @return The string representation of the task for saving.","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"ziyang27"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"ziyang27"},"content":"        return (this.isDone ? \"1 | \" : \"0 | \") + this.description;","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"ziyang27"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"ziyang27"},"content":"        return isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"ziyang27"},"content":"     * Returns true if the description contains the specified keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"ziyang27"},"content":"     * @param keyword The specified keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"ziyang27"},"content":"     * @return True if the description has the keyword, false otherwise.","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"ziyang27"},"content":"    public boolean hasKeyword(String keyword) {","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"ziyang27"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ziyang27":66}},{"path":"src/main/java/dibo/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package dibo.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":" * Class to represent a to-do task.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"     * Constructor for the ToDo class.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"        super(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"     * Returns the string representation for the to-do task,","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"     * usually for the display format in the ui.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"     * @return The string representation of the to-do task for displaying.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"     * Returns the string representation of the to-do task,","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"     * usually for saving in the text file.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"     * @return The string representation of the to-do task for saving.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"        return \"todo | \" + super.getSaveFormat();","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ziyang27":38}},{"path":"src/test/java/dibo/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package dibo;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"import dibo.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"import dibo.task.ToDo;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"    public void setUp() {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"        ArrayList\u003cTask\u003e store \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"        taskList \u003d new TaskList(store);","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"    public void testAddTask() {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"        Task task1 \u003d new ToDo(\"A\");","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"    public void testDeleteTask() {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"        Task task1 \u003d new ToDo(\"A\");","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"        taskList.deleteTask(1);","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ziyang27"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ziyang27"},"content":"    public void testMarkTask() {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ziyang27"},"content":"        Task task1 \u003d new ToDo(\"A\");","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ziyang27"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ziyang27"},"content":"        taskList.markTask(1);","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ziyang27"},"content":"        assertTrue(task1.isDone());","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ziyang27"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ziyang27"},"content":"    public void testUnmarkTask() {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"ziyang27"},"content":"        Task task1 \u003d new ToDo(\"A\");","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"ziyang27"},"content":"        task1.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ziyang27"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"ziyang27"},"content":"        taskList.unmarkTask(1);","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"ziyang27"},"content":"        assertFalse(task1.isDone());","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ziyang27":54}},{"path":"src/test/java/dibo/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"package dibo.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ziyang27"},"content":"public class EventTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ziyang27"},"content":"    private Event event;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ziyang27"},"content":"    private LocalDate startDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ziyang27"},"content":"    private LocalDate endDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ziyang27"},"content":"    public void setUp() {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ziyang27"},"content":"        this.startDate \u003d LocalDate.parse(\"2019-02-27\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ziyang27"},"content":"        this.endDate \u003d LocalDate.parse(\"2019-02-28\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ziyang27"},"content":"        this.event \u003d new Event(\"Birthday\", this.startDate, this.endDate);","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ziyang27"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ziyang27"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ziyang27"},"content":"        this.event.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ziyang27"},"content":"        assertTrue(this.event.isDone());","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ziyang27"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ziyang27"},"content":"    public void testMarkAsNotDone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ziyang27"},"content":"        this.event.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ziyang27"},"content":"        this.event.markAsNotDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ziyang27"},"content":"        assertFalse(this.event.isDone());","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ziyang27"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ziyang27"},"content":"    public void testToString_notDoneTask() {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ziyang27"},"content":"        assertEquals(\"[E][ ] Birthday (from: Feb 27 2019 to: Feb 28 2019)\",","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ziyang27"},"content":"                this.event.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ziyang27"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ziyang27"},"content":"    public void testToString_doneTask() {","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"ziyang27"},"content":"        this.event.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ziyang27"},"content":"        assertEquals(\"[E][X] Birthday (from: Feb 27 2019 to: Feb 28 2019)\",","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ziyang27"},"content":"                this.event.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ziyang27"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"ziyang27"},"content":"    public void testGetSaveFormat_notDoneTask() {","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"ziyang27"},"content":"        assertEquals(\"event | 0 | Birthday | Feb 27 2019 | Feb 28 2019\",","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"ziyang27"},"content":"                this.event.getSaveFormat());","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"ziyang27"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"ziyang27"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"ziyang27"},"content":"    public void testGetSaveFormat_doneTask() {","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"ziyang27"},"content":"        this.event.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"ziyang27"},"content":"        assertEquals(\"event | 1 | Birthday | Feb 27 2019 | Feb 28 2019\",","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"ziyang27"},"content":"                this.event.getSaveFormat());","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"ziyang27"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"ziyang27"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ziyang27":62}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ziyang27"},"content":"event national day /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ziyang27"},"content":"deadline finish ip /by 25th August","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ziyang27"},"content":"todo buy iphone","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ziyang27"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ziyang27"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ziyang27"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ziyang27"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ziyang27"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ziyang27"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ziyang27"},"content":"unmark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ziyang27"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"ziyang27"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ziyang27":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ziyang27"},"content":"java -classpath ..\\bin Dibo \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ziyang27":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ziyang27"},"content":"java -classpath ../bin Dibo \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ziyang27":1,"-":37}}]
