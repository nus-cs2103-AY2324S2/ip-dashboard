[{"path":"data/Skyler.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"[D][X] die (by: now)","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"eunrcn":1}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"    protected String by;","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"eunrcn":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"    protected String from;","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"    protected String to;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"    public Event(String description, String from, String to, boolean isDone) {","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"eunrcn":15}},{"path":"src/main/java/Skyler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"import java.util.List;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"public class Skyler {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"    private static final String FILE_PATH \u003d \"./data/Skyler.txt\";","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"    private static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"        loadTasksFromFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"        String chatbotName \u003d \"Skyler\";","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"        String LINE \u003d \"------------------------------------------------------------\";","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"        System.out.println(\"   /\\\\_/\\\\\");","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"        System.out.println(\"  ( o.o ) Hello! I\u0027m \" + chatbotName);","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"        System.out.println(\"   \u003e ^ \u003c What can I do for you?\");","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"        while (true) {","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"            System.out.print(\"You: \");","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"eunrcn"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"eunrcn"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"eunrcn"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"eunrcn"},"content":"                System.out.println(\"Skyler: Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"eunrcn"},"content":"                System.out.println(LINE);","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"eunrcn"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"eunrcn"},"content":"            try {","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"eunrcn"},"content":"                processUserInput(userInput);","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"eunrcn"},"content":"            } catch (SkylerException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"eunrcn"},"content":"                System.out.println(\"Skyler: Woof, \" + e.getMessage());","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"eunrcn"},"content":"                System.out.println(LINE);","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"eunrcn"},"content":"        scanner.close();","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"eunrcn"},"content":"    private static void processUserInput(String userInput) throws SkylerException {","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"eunrcn"},"content":"        if (userInput.equals(\"list\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"eunrcn"},"content":"            listTasks();","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"eunrcn"},"content":"        } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"eunrcn"},"content":"            addTask(new ToDo(getTaskDescription(userInput, 4), false));","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"eunrcn"},"content":"        } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"eunrcn"},"content":"            String[] parts \u003d userInput.split(\"/by\", 2);","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"eunrcn"},"content":"            if (parts.length !\u003d 2 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"eunrcn"},"content":"                throw new SkylerException(","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"eunrcn"},"content":"                        \"Invalid \u0027deadline\u0027 command. Please provide a valid description and deadline.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"eunrcn"},"content":"            String description \u003d parts[0].substring(9).trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"eunrcn"},"content":"            String by \u003d parts[1].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"eunrcn"},"content":"            addTask(new Deadline(description, by, false));","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"eunrcn"},"content":"        } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"eunrcn"},"content":"            String[] parts \u003d userInput.split(\"/from\", 2);","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"eunrcn"},"content":"            if (parts.length !\u003d 2 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"eunrcn"},"content":"                throw new SkylerException(\"Invalid \u0027event\u0027 command. Please provide a valid description and timeframe.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"eunrcn"},"content":"            String description \u003d parts[0].substring(6).trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"eunrcn"},"content":"            String from \u003d parts[1].split(\"/to\")[0].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"eunrcn"},"content":"            String to \u003d parts[1].split(\"/to\")[1].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"eunrcn"},"content":"            addTask(new Event(description, from, to, false));","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"eunrcn"},"content":"        } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":77,"author":{"gitId":"eunrcn"},"content":"            deleteTask(userInput);","lastModifiedDate":"2024-01-23"},{"lineNumber":78,"author":{"gitId":"eunrcn"},"content":"        } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":79,"author":{"gitId":"eunrcn"},"content":"            markTask(userInput);","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"eunrcn"},"content":"        } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":81,"author":{"gitId":"eunrcn"},"content":"            unmarkTask(userInput);","lastModifiedDate":"2024-01-23"},{"lineNumber":82,"author":{"gitId":"eunrcn"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":83,"author":{"gitId":"eunrcn"},"content":"            throw new SkylerException(\"I\u0027m sorry, I don\u0027t understand that command.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":84,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":85,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":86,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":87,"author":{"gitId":"eunrcn"},"content":"    private static String getTaskDescription(String userInput, int startIndex, String... keywords)","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"eunrcn"},"content":"            throws SkylerException {","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"eunrcn"},"content":"        String description \u003d userInput.substring(startIndex).trim();","lastModifiedDate":"2024-01-23"},{"lineNumber":90,"author":{"gitId":"eunrcn"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"eunrcn"},"content":"            if (description.startsWith(keyword)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"eunrcn"},"content":"                description \u003d description.substring(keyword.length()).trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"eunrcn"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"eunrcn"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":97,"author":{"gitId":"eunrcn"},"content":"            throw new SkylerException(\"The description of a task cannot be empty.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":98,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":99,"author":{"gitId":"eunrcn"},"content":"        return description;","lastModifiedDate":"2024-01-23"},{"lineNumber":100,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":101,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":102,"author":{"gitId":"eunrcn"},"content":"    private static void loadTasksFromFile() {","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"eunrcn"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"eunrcn"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"eunrcn"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"eunrcn"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"eunrcn"},"content":"                String data \u003d scanner.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"eunrcn"},"content":"                Task task \u003d parseTaskFromFile(data);","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"eunrcn"},"content":"                tasks.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"eunrcn"},"content":"            scanner.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"eunrcn"},"content":"        } catch (IOException | SkylerException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"eunrcn"},"content":"            System.out.println(\"An error occurred while loading tasks.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"eunrcn"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"eunrcn"},"content":"    private static Task parseTaskFromFile(String data) throws SkylerException {","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"eunrcn"},"content":"        // Assuming format \"[T][ ] read book\", \"[D][ ] assignment (by: tuesday)\", \"[E][","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"eunrcn"},"content":"        // ] dog sitting (from: sat to: mon)\"","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"eunrcn"},"content":"        String taskType \u003d data.substring(1, 2); // Extracting task type (T, D, E)","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"eunrcn"},"content":"        boolean isDone \u003d data.charAt(4) \u003d\u003d \u0027X\u0027; // Assuming \u0027x\u0027 represents a completed task","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"eunrcn"},"content":"        String details \u003d data.substring(7).trim(); // Extracting task details","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"eunrcn"},"content":"        switch (taskType) {","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"eunrcn"},"content":"            case \"T\":","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"eunrcn"},"content":"                return new ToDo(details, isDone);","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"eunrcn"},"content":"            case \"D\":","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"eunrcn"},"content":"                // Assuming format \"assignment (by: tuesday)\"","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"eunrcn"},"content":"                int byIndex \u003d details.indexOf(\"(by:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"eunrcn"},"content":"                String descriptionD \u003d details.substring(0, byIndex).trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"eunrcn"},"content":"                String by \u003d details.substring(byIndex + 4, details.length() - 1).trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"eunrcn"},"content":"                return new Deadline(descriptionD, by, isDone);","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"eunrcn"},"content":"            case \"E\":","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"eunrcn"},"content":"                // Assuming format \"dog sitting (from: sat to: mon)\"","lastModifiedDate":"2024-01-29"},{"lineNumber":136,"author":{"gitId":"eunrcn"},"content":"                int fromIndex \u003d details.indexOf(\"(from:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"eunrcn"},"content":"                int toIndex \u003d details.indexOf(\"to:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"eunrcn"},"content":"                String descriptionE \u003d details.substring(0, fromIndex).trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"eunrcn"},"content":"                String from \u003d details.substring(fromIndex + 6, toIndex).trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":140,"author":{"gitId":"eunrcn"},"content":"                String to \u003d details.substring(toIndex + 3, details.length() - 1).trim();","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"eunrcn"},"content":"                return new Event(descriptionE, from, to, isDone);","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"eunrcn"},"content":"            default:","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"eunrcn"},"content":"                throw new SkylerException(\"Unknown task type in the file: \" + data);","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":145,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":146,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":147,"author":{"gitId":"eunrcn"},"content":"    private static void saveTasksToFile() {","lastModifiedDate":"2024-01-29"},{"lineNumber":148,"author":{"gitId":"eunrcn"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":149,"author":{"gitId":"eunrcn"},"content":"            FileWriter writer \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2024-01-29"},{"lineNumber":150,"author":{"gitId":"eunrcn"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":151,"author":{"gitId":"eunrcn"},"content":"                writer.write(task.toString() + \"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":152,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":153,"author":{"gitId":"eunrcn"},"content":"            writer.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":154,"author":{"gitId":"eunrcn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":155,"author":{"gitId":"eunrcn"},"content":"            System.out.println(\"An error occurred while saving tasks.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":156,"author":{"gitId":"eunrcn"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-29"},{"lineNumber":157,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":158,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":159,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":160,"author":{"gitId":"eunrcn"},"content":"    private static void addTask(Task task) {","lastModifiedDate":"2024-01-23"},{"lineNumber":161,"author":{"gitId":"eunrcn"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-23"},{"lineNumber":162,"author":{"gitId":"eunrcn"},"content":"        saveTasksToFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":163,"author":{"gitId":"eunrcn"},"content":"        System.out.println(\"Skyler: Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":164,"author":{"gitId":"eunrcn"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2024-01-23"},{"lineNumber":165,"author":{"gitId":"eunrcn"},"content":"        System.out.println(\"Skyler: Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":166,"author":{"gitId":"eunrcn"},"content":"        System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-23"},{"lineNumber":167,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":168,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":169,"author":{"gitId":"eunrcn"},"content":"    private static void listTasks() {","lastModifiedDate":"2024-01-23"},{"lineNumber":170,"author":{"gitId":"eunrcn"},"content":"        System.out.println(\"Skyler: Here are the tasks in your list:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":171,"author":{"gitId":"eunrcn"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-23"},{"lineNumber":172,"author":{"gitId":"eunrcn"},"content":"            System.out.println(\" \" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2024-01-23"},{"lineNumber":173,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":174,"author":{"gitId":"eunrcn"},"content":"        System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-23"},{"lineNumber":175,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":176,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":177,"author":{"gitId":"eunrcn"},"content":"    private static void deleteTask(String userInput) throws SkylerException {","lastModifiedDate":"2024-01-23"},{"lineNumber":178,"author":{"gitId":"eunrcn"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":179,"author":{"gitId":"eunrcn"},"content":"            int taskId \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2024-01-23"},{"lineNumber":180,"author":{"gitId":"eunrcn"},"content":"            if (isValidTaskId(taskId)) {","lastModifiedDate":"2024-01-23"},{"lineNumber":181,"author":{"gitId":"eunrcn"},"content":"                Task removedTask \u003d tasks.remove(taskId - 1);","lastModifiedDate":"2024-01-23"},{"lineNumber":182,"author":{"gitId":"eunrcn"},"content":"                System.out.println(\"Skyler: Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":183,"author":{"gitId":"eunrcn"},"content":"                System.out.println(\"  \" + removedTask);","lastModifiedDate":"2024-01-23"},{"lineNumber":184,"author":{"gitId":"eunrcn"},"content":"                System.out.println(\"Skyler: Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":185,"author":{"gitId":"eunrcn"},"content":"                System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-23"},{"lineNumber":186,"author":{"gitId":"eunrcn"},"content":"                saveTasksToFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":187,"author":{"gitId":"eunrcn"},"content":"            } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":188,"author":{"gitId":"eunrcn"},"content":"                throw new SkylerException(\"Invalid task number. Please provide a valid task number.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":189,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":190,"author":{"gitId":"eunrcn"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":191,"author":{"gitId":"eunrcn"},"content":"            throw new SkylerException(\"Invalid command. Please use \u0027delete \u003ctask number\u003e\u0027.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":192,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":193,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":194,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":195,"author":{"gitId":"eunrcn"},"content":"    private static void markTask(String userInput) throws SkylerException {","lastModifiedDate":"2024-01-23"},{"lineNumber":196,"author":{"gitId":"eunrcn"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":197,"author":{"gitId":"eunrcn"},"content":"            int taskId \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2024-01-23"},{"lineNumber":198,"author":{"gitId":"eunrcn"},"content":"            if (isValidTaskId(taskId)) {","lastModifiedDate":"2024-01-23"},{"lineNumber":199,"author":{"gitId":"eunrcn"},"content":"                Task task \u003d tasks.get(taskId - 1);","lastModifiedDate":"2024-01-23"},{"lineNumber":200,"author":{"gitId":"eunrcn"},"content":"                task.markAsDone();","lastModifiedDate":"2024-01-23"},{"lineNumber":201,"author":{"gitId":"eunrcn"},"content":"                System.out.println(\"Skyler: Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":202,"author":{"gitId":"eunrcn"},"content":"                System.out.println(\"  \" + task);","lastModifiedDate":"2024-01-23"},{"lineNumber":203,"author":{"gitId":"eunrcn"},"content":"                System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-23"},{"lineNumber":204,"author":{"gitId":"eunrcn"},"content":"                saveTasksToFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":205,"author":{"gitId":"eunrcn"},"content":"            } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":206,"author":{"gitId":"eunrcn"},"content":"                throw new SkylerException(\"Invalid task number. Please provide a valid task number.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":207,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":208,"author":{"gitId":"eunrcn"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":209,"author":{"gitId":"eunrcn"},"content":"            throw new SkylerException(\"Invalid command. Please use \u0027mark \u003ctask number\u003e\u0027.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":210,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":211,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":212,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":213,"author":{"gitId":"eunrcn"},"content":"    private static void unmarkTask(String userInput) throws SkylerException {","lastModifiedDate":"2024-01-23"},{"lineNumber":214,"author":{"gitId":"eunrcn"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":215,"author":{"gitId":"eunrcn"},"content":"            int taskId \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2024-01-23"},{"lineNumber":216,"author":{"gitId":"eunrcn"},"content":"            if (isValidTaskId(taskId)) {","lastModifiedDate":"2024-01-23"},{"lineNumber":217,"author":{"gitId":"eunrcn"},"content":"                Task task \u003d tasks.get(taskId - 1);","lastModifiedDate":"2024-01-23"},{"lineNumber":218,"author":{"gitId":"eunrcn"},"content":"                task.markAsUndone();","lastModifiedDate":"2024-01-23"},{"lineNumber":219,"author":{"gitId":"eunrcn"},"content":"                System.out.println(\"Skyler: OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":220,"author":{"gitId":"eunrcn"},"content":"                System.out.println(\"  \" + task);","lastModifiedDate":"2024-01-23"},{"lineNumber":221,"author":{"gitId":"eunrcn"},"content":"                System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-23"},{"lineNumber":222,"author":{"gitId":"eunrcn"},"content":"                saveTasksToFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":223,"author":{"gitId":"eunrcn"},"content":"            } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":224,"author":{"gitId":"eunrcn"},"content":"                throw new SkylerException(\"Invalid task number. Please provide a valid task number.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":225,"author":{"gitId":"eunrcn"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":226,"author":{"gitId":"eunrcn"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":227,"author":{"gitId":"eunrcn"},"content":"            throw new SkylerException(\"Invalid command. Please use \u0027unmark \u003ctask number\u003e\u0027.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":228,"author":{"gitId":"eunrcn"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":229,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":230,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":231,"author":{"gitId":"eunrcn"},"content":"    private static boolean isValidTaskId(int taskId) {","lastModifiedDate":"2024-01-23"},{"lineNumber":232,"author":{"gitId":"eunrcn"},"content":"        return taskId \u003e 0 \u0026\u0026 taskId \u003c\u003d tasks.size();","lastModifiedDate":"2024-01-23"},{"lineNumber":233,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":234,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-23"},{"lineNumber":235,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":236,"author":{"gitId":"eunrcn"},"content":"class SkylerException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":237,"author":{"gitId":"eunrcn"},"content":"    public SkylerException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":238,"author":{"gitId":"eunrcn"},"content":"        super(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":239,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":240,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"eunrcn":240}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"    protected String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"eunrcn"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"eunrcn"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"eunrcn"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"eunrcn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"eunrcn"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"eunrcn"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"eunrcn"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"eunrcn":26}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"class ToDo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"eunrcn"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"eunrcn"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"eunrcn"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"eunrcn"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"eunrcn"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"eunrcn"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"eunrcn"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"eunrcn"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"eunrcn":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eunrcn"},"content":"todo read a book","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"eunrcn":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"eunrcn"},"content":"java -classpath ../bin Skyler \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"eunrcn":1,"-":37}}]
