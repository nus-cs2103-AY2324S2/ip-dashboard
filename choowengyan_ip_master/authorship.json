[{"path":"src/main/java/data/whisper.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"choowengyan"},"content":"T | 1 | read book","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"choowengyan"},"content":"T | 0 | join sports club","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"choowengyan"},"content":"D | 1 | cs2109 | 23/12/2023 23:33","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":"T | 0 | cs2106","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":"T | 1 | Add README.md","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"D | 0 | finish ip | 23/12/2023 23:22","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"E | 1 | branch workshop | 22/12/2023 09:34-12/12/2023 23:33","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"T | 0 | gradle","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"choowengyan":8}},{"path":"src/main/java/whisper/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"choowengyan"},"content":"package whisper;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"choowengyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":" * The Command interface represents an executable command in the Whisper application.","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"public interface Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"     * Executes the command with the given parameters.","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"     * @param tasks   The list of tasks on which the command operates.","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"     * @param ui      The user interface to interact with the user.","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"     * @param storage The storage to save changes persistently.","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"     * @throws WhisperException If there is an error executing the command.","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"    void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) throws WhisperException;","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"     * Indicates whether the command should exit the application.","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"     * @return True if the command triggers an application exit, false otherwise.","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"    boolean isExit();","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"     * Checks if the command matches a given keyword.","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"     * @param keyword The keyword to check for a match.","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"     * @return True if the command matches the keyword, false otherwise.","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"    boolean isKeywordMatch(String keyword);","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":" * The AddCommand class represents a command to add a new task to the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"class AddCommand implements Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"    private Task taskToAdd;","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"     * Constructs an AddCommand with the specified task to add.","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"     * @param taskToAdd The task to be added.","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"    public AddCommand(Task taskToAdd) {","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"        this.taskToAdd \u003d taskToAdd;","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"            // Add the task directly to the original tasks list","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"            tasks.add(taskToAdd);","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"            // Save the updated tasks list to the file","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"choowengyan"},"content":"            storage.saveFile(tasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"            ui.printTaskAdded(taskToAdd, tasks.size());","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"        } catch (WhisperException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"choowengyan"},"content":"        return false;","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"choowengyan"},"content":"    public boolean isKeywordMatch(String keyword) {","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"choowengyan"},"content":"        return false;","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"choowengyan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"choowengyan"},"content":" * The DeleteCommand class represents a command to delete a task from the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"choowengyan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"choowengyan"},"content":"class DeleteCommand implements Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"choowengyan"},"content":"    private int taskIndex;","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"choowengyan"},"content":"     * Constructs a DeleteCommand with the specified task index to delete.","lastModifiedDate":"2024-02-15"},{"lineNumber":81,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":82,"author":{"gitId":"choowengyan"},"content":"     * @param taskIndex The index of the task to be deleted.","lastModifiedDate":"2024-02-15"},{"lineNumber":83,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"choowengyan"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"choowengyan"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"choowengyan"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) throws WhisperException {","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"choowengyan"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":91,"author":{"gitId":"choowengyan"},"content":"            if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":92,"author":{"gitId":"choowengyan"},"content":"                Task removedTask \u003d tasks.remove(taskIndex);","lastModifiedDate":"2024-02-10"},{"lineNumber":93,"author":{"gitId":"choowengyan"},"content":"                ui.printRemovedTask(removedTask, tasks.size());","lastModifiedDate":"2024-02-10"},{"lineNumber":94,"author":{"gitId":"choowengyan"},"content":"                storage.saveFile(tasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"choowengyan"},"content":"            } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":96,"author":{"gitId":"choowengyan"},"content":"                throw WhisperException.invalidTaskID();","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"choowengyan"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"choowengyan"},"content":"        } catch (WhisperException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"choowengyan"},"content":"            throw new WhisperException(\"Invalid task number.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"choowengyan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-10"},{"lineNumber":105,"author":{"gitId":"choowengyan"},"content":"        return false;","lastModifiedDate":"2024-02-10"},{"lineNumber":106,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":107,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":108,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":109,"author":{"gitId":"choowengyan"},"content":"    public boolean isKeywordMatch(String keyword) {","lastModifiedDate":"2024-02-17"},{"lineNumber":110,"author":{"gitId":"choowengyan"},"content":"        return false;","lastModifiedDate":"2024-02-17"},{"lineNumber":111,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":112,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-02-10"},{"lineNumber":113,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":114,"author":{"gitId":"choowengyan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":115,"author":{"gitId":"choowengyan"},"content":" * The ExitCommand class represents a command to exit the Whisper application.","lastModifiedDate":"2024-02-15"},{"lineNumber":116,"author":{"gitId":"choowengyan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":117,"author":{"gitId":"choowengyan"},"content":"class ExitCommand implements Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":118,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":119,"author":{"gitId":"choowengyan"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":120,"author":{"gitId":"choowengyan"},"content":"        ui.printExitMessage();","lastModifiedDate":"2024-02-10"},{"lineNumber":121,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":122,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":123,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":124,"author":{"gitId":"choowengyan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-10"},{"lineNumber":125,"author":{"gitId":"choowengyan"},"content":"        return true;","lastModifiedDate":"2024-02-10"},{"lineNumber":126,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":127,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":128,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":129,"author":{"gitId":"choowengyan"},"content":"    public boolean isKeywordMatch(String keyword) {","lastModifiedDate":"2024-02-17"},{"lineNumber":130,"author":{"gitId":"choowengyan"},"content":"        return false;","lastModifiedDate":"2024-02-17"},{"lineNumber":131,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":132,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-02-10"},{"lineNumber":133,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":134,"author":{"gitId":"choowengyan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":135,"author":{"gitId":"choowengyan"},"content":" * The ListCommand class represents a command to list all tasks in the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":136,"author":{"gitId":"choowengyan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":137,"author":{"gitId":"choowengyan"},"content":"class ListCommand implements Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":138,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":139,"author":{"gitId":"choowengyan"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":140,"author":{"gitId":"choowengyan"},"content":"        ui.printTasks(tasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":141,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":142,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":143,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":144,"author":{"gitId":"choowengyan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-10"},{"lineNumber":145,"author":{"gitId":"choowengyan"},"content":"        return false;","lastModifiedDate":"2024-02-10"},{"lineNumber":146,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":147,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":148,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":149,"author":{"gitId":"choowengyan"},"content":"    public boolean isKeywordMatch(String keyword) {","lastModifiedDate":"2024-02-17"},{"lineNumber":150,"author":{"gitId":"choowengyan"},"content":"        return false;","lastModifiedDate":"2024-02-17"},{"lineNumber":151,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":152,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-02-10"},{"lineNumber":153,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":154,"author":{"gitId":"choowengyan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":155,"author":{"gitId":"choowengyan"},"content":" * The MarkCommand class represents a command to mark a task as done in the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":156,"author":{"gitId":"choowengyan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":157,"author":{"gitId":"choowengyan"},"content":"class MarkCommand implements Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":158,"author":{"gitId":"choowengyan"},"content":"    private int taskIndex;","lastModifiedDate":"2024-02-10"},{"lineNumber":159,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":160,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":161,"author":{"gitId":"choowengyan"},"content":"     * Constructs a MarkCommand with the specified task index to mark as done.","lastModifiedDate":"2024-02-15"},{"lineNumber":162,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":163,"author":{"gitId":"choowengyan"},"content":"     * @param taskIndex The index of the task to be marked as done.","lastModifiedDate":"2024-02-15"},{"lineNumber":164,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":165,"author":{"gitId":"choowengyan"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2024-02-10"},{"lineNumber":166,"author":{"gitId":"choowengyan"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-02-10"},{"lineNumber":167,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":168,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":169,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":170,"author":{"gitId":"choowengyan"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) throws WhisperException {","lastModifiedDate":"2024-02-10"},{"lineNumber":171,"author":{"gitId":"choowengyan"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":172,"author":{"gitId":"choowengyan"},"content":"            if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":173,"author":{"gitId":"choowengyan"},"content":"                tasks.get(taskIndex).markAsDone();","lastModifiedDate":"2024-02-10"},{"lineNumber":174,"author":{"gitId":"choowengyan"},"content":"                ui.printTaskAsDone(tasks.get(taskIndex));","lastModifiedDate":"2024-02-10"},{"lineNumber":175,"author":{"gitId":"choowengyan"},"content":"                storage.saveFile(tasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":176,"author":{"gitId":"choowengyan"},"content":"            } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":177,"author":{"gitId":"choowengyan"},"content":"                ui.printError(\"Invalid task number. Please choose between task 1 - \" + tasks.size() + \"\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":178,"author":{"gitId":"choowengyan"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":179,"author":{"gitId":"choowengyan"},"content":"        } catch (WhisperException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":180,"author":{"gitId":"choowengyan"},"content":"                throw WhisperException.invalidTaskID();","lastModifiedDate":"2024-02-10"},{"lineNumber":181,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":182,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":183,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":184,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":185,"author":{"gitId":"choowengyan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-10"},{"lineNumber":186,"author":{"gitId":"choowengyan"},"content":"        return false;","lastModifiedDate":"2024-02-10"},{"lineNumber":187,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":188,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":189,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":190,"author":{"gitId":"choowengyan"},"content":"    public boolean isKeywordMatch(String keyword) {","lastModifiedDate":"2024-02-17"},{"lineNumber":191,"author":{"gitId":"choowengyan"},"content":"        return false;","lastModifiedDate":"2024-02-17"},{"lineNumber":192,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":193,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-02-10"},{"lineNumber":194,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":195,"author":{"gitId":"choowengyan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":196,"author":{"gitId":"choowengyan"},"content":" * The UnmarkCommand class represents a command to mark a task as not done in the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":197,"author":{"gitId":"choowengyan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":198,"author":{"gitId":"choowengyan"},"content":"class UnmarkCommand implements Command {","lastModifiedDate":"2024-02-10"},{"lineNumber":199,"author":{"gitId":"choowengyan"},"content":"    private int taskIndex;","lastModifiedDate":"2024-02-10"},{"lineNumber":200,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":201,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":202,"author":{"gitId":"choowengyan"},"content":"     * Constructs an UnmarkCommand with the specified task index to mark as not done.","lastModifiedDate":"2024-02-15"},{"lineNumber":203,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":204,"author":{"gitId":"choowengyan"},"content":"     * @param taskIndex The index of the task to be marked as not done.","lastModifiedDate":"2024-02-15"},{"lineNumber":205,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":206,"author":{"gitId":"choowengyan"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2024-02-10"},{"lineNumber":207,"author":{"gitId":"choowengyan"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-02-10"},{"lineNumber":208,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":209,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":210,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":211,"author":{"gitId":"choowengyan"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) throws WhisperException {","lastModifiedDate":"2024-02-10"},{"lineNumber":212,"author":{"gitId":"choowengyan"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":213,"author":{"gitId":"choowengyan"},"content":"            if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":214,"author":{"gitId":"choowengyan"},"content":"                tasks.get(taskIndex).markAsUndone();","lastModifiedDate":"2024-02-10"},{"lineNumber":215,"author":{"gitId":"choowengyan"},"content":"                ui.printTaskAsUndone(tasks.get(taskIndex));","lastModifiedDate":"2024-02-10"},{"lineNumber":216,"author":{"gitId":"choowengyan"},"content":"                storage.saveFile(tasks);","lastModifiedDate":"2024-02-10"},{"lineNumber":217,"author":{"gitId":"choowengyan"},"content":"            } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":218,"author":{"gitId":"choowengyan"},"content":"                ui.printError(\"Invalid task number. Please choose between task 1 - \" + tasks.size() + \"\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":219,"author":{"gitId":"choowengyan"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":220,"author":{"gitId":"choowengyan"},"content":"        } catch (WhisperException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":221,"author":{"gitId":"choowengyan"},"content":"            throw WhisperException.invalidTaskID();","lastModifiedDate":"2024-02-10"},{"lineNumber":222,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":223,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":224,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":225,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":226,"author":{"gitId":"choowengyan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-10"},{"lineNumber":227,"author":{"gitId":"choowengyan"},"content":"        return false;","lastModifiedDate":"2024-02-10"},{"lineNumber":228,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":229,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":230,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":231,"author":{"gitId":"choowengyan"},"content":"    public boolean isKeywordMatch(String keyword) {","lastModifiedDate":"2024-02-17"},{"lineNumber":232,"author":{"gitId":"choowengyan"},"content":"        return false;","lastModifiedDate":"2024-02-17"},{"lineNumber":233,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":234,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-02-17"},{"lineNumber":235,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":236,"author":{"gitId":"choowengyan"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":237,"author":{"gitId":"choowengyan"},"content":" * The FindCommand class represents a command to search for tasks by a keyword.","lastModifiedDate":"2024-02-17"},{"lineNumber":238,"author":{"gitId":"choowengyan"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":239,"author":{"gitId":"choowengyan"},"content":"class FindCommand implements Command {","lastModifiedDate":"2024-02-17"},{"lineNumber":240,"author":{"gitId":"choowengyan"},"content":"    private String keyword;","lastModifiedDate":"2024-02-17"},{"lineNumber":241,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":242,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":243,"author":{"gitId":"choowengyan"},"content":"     * Creates a new FindCommand with the specified keyword.","lastModifiedDate":"2024-02-17"},{"lineNumber":244,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":245,"author":{"gitId":"choowengyan"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2024-02-17"},{"lineNumber":246,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":247,"author":{"gitId":"choowengyan"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-02-17"},{"lineNumber":248,"author":{"gitId":"choowengyan"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-17"},{"lineNumber":249,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":250,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":251,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":252,"author":{"gitId":"choowengyan"},"content":"     * Executes the find command by searching for tasks containing the specified keyword.","lastModifiedDate":"2024-02-17"},{"lineNumber":253,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":254,"author":{"gitId":"choowengyan"},"content":"     * @param tasks   The list of tasks.","lastModifiedDate":"2024-02-17"},{"lineNumber":255,"author":{"gitId":"choowengyan"},"content":"     * @param ui      The user interface.","lastModifiedDate":"2024-02-17"},{"lineNumber":256,"author":{"gitId":"choowengyan"},"content":"     * @param storage The storage handler.","lastModifiedDate":"2024-02-17"},{"lineNumber":257,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":258,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":259,"author":{"gitId":"choowengyan"},"content":"    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-17"},{"lineNumber":260,"author":{"gitId":"choowengyan"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-17"},{"lineNumber":261,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":262,"author":{"gitId":"choowengyan"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-17"},{"lineNumber":263,"author":{"gitId":"choowengyan"},"content":"            if (task.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2024-02-17"},{"lineNumber":264,"author":{"gitId":"choowengyan"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-02-17"},{"lineNumber":265,"author":{"gitId":"choowengyan"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":266,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":267,"author":{"gitId":"choowengyan"},"content":"        ui.printMatchingTasks(matchingTasks);","lastModifiedDate":"2024-02-17"},{"lineNumber":268,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":269,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":270,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":271,"author":{"gitId":"choowengyan"},"content":"     * Checks if the find command represents an exit action.","lastModifiedDate":"2024-02-17"},{"lineNumber":272,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":273,"author":{"gitId":"choowengyan"},"content":"     * @return Always returns false as the find command does not exit the application.","lastModifiedDate":"2024-02-17"},{"lineNumber":274,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":275,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":276,"author":{"gitId":"choowengyan"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-17"},{"lineNumber":277,"author":{"gitId":"choowengyan"},"content":"        return false;","lastModifiedDate":"2024-02-17"},{"lineNumber":278,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":279,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":280,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":281,"author":{"gitId":"choowengyan"},"content":"     * Checks if the find command matches a given keyword.","lastModifiedDate":"2024-02-17"},{"lineNumber":282,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":283,"author":{"gitId":"choowengyan"},"content":"     * @param keyword The keyword to check for a match.","lastModifiedDate":"2024-02-17"},{"lineNumber":284,"author":{"gitId":"choowengyan"},"content":"     * @return True if the find command matches the keyword, false otherwise.","lastModifiedDate":"2024-02-17"},{"lineNumber":285,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":286,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":287,"author":{"gitId":"choowengyan"},"content":"    public boolean isKeywordMatch(String keyword) {","lastModifiedDate":"2024-02-17"},{"lineNumber":288,"author":{"gitId":"choowengyan"},"content":"        // check if the command matches the given keyword","lastModifiedDate":"2024-02-17"},{"lineNumber":289,"author":{"gitId":"choowengyan"},"content":"        return this.keyword.equalsIgnoreCase(keyword);","lastModifiedDate":"2024-02-17"},{"lineNumber":290,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":291,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"choowengyan":291}},{"path":"src/main/java/whisper/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"choowengyan"},"content":"package whisper;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"choowengyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":" * The Parser class handles the parsing of user input and converts it into executable commands for the Whisper application.","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"public class Parser {","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"     * Parses the user input and returns the corresponding Command object.","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"     * @param input The user input string.","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"     * @return The Command object representing the parsed user input.","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"     * @throws WhisperException If there is an error parsing the input.","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"    public static Command parse(String input) throws WhisperException {","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"        String[] parts \u003d input.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"        String command \u003d parts[0].toLowerCase();","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"        switch(command) {","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"        case \"list\":","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"            return createTodoCommand(parts);","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"        case \"event\":","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"            return createEventCommand(parts);","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"            return createDeadlineCommand(parts);","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"            return createDeleteCommand(parts);","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"            return createMarkCommand(parts);","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"            return createUnmarkCommand(parts);","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"        case \"find\":","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"            return createFindCommand(parts);","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"        default:","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"            //throw new WhisperException(\"Invalid command. Please enter a valid command.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"            throw WhisperException.unknownCommand();","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"     * Parses the user input for the \u0027todo\u0027 command and creates an AddCommand for adding a Todo task.","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"     * @param parts The array of input parts.","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"     * @return The AddCommand for adding a Todo task.","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"     * @throws WhisperException If there is an error creating the Todo task.","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"    private static Command createTodoCommand(String[] parts) throws WhisperException {","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"choowengyan"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"            throw new WhisperException(\"Todo description cannot be empty.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"        Task taskToAdd \u003d new Task(parts[1], Task.TaskCategory.T);","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"choowengyan"},"content":"        return new AddCommand(taskToAdd);","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"     * Parses the user input for the \u0027event\u0027 command and creates an AddCommand for adding an Event task.","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"     * @param parts The array of input parts.","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"     * @return The AddCommand for adding an Event task.","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"choowengyan"},"content":"     * @throws WhisperException If there is an error creating the Event task.","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"choowengyan"},"content":"    private static Command createEventCommand(String[] parts) throws WhisperException {","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"choowengyan"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"choowengyan"},"content":"            throw new WhisperException(\"Event description cannot be empty.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"choowengyan"},"content":"        String[] eventDetails \u003d parts[1].split(\"/from\", 2);","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"choowengyan"},"content":"        if (eventDetails.length \u003c 2) {","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"choowengyan"},"content":"            throw new WhisperException(\"Invalid event format. Please use: event [description] /from [start] /to [end]\");","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"choowengyan"},"content":"        String eventName \u003d eventDetails[0].trim();","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"choowengyan"},"content":"        String[] timeParts \u003d eventDetails[1].split(\"/to\", 2);","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"choowengyan"},"content":"        if (timeParts.length \u003c 2) {","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"choowengyan"},"content":"            throw new WhisperException(\"Invalid event format. Please use: event [description] /from [start] /to [end]\");","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"choowengyan"},"content":"        LocalDateTime fromDateTime \u003d parseDateTime(timeParts[0].trim());","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"choowengyan"},"content":"        LocalDateTime toDateTime \u003d parseDateTime(timeParts[1].trim());","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"choowengyan"},"content":"        return new AddCommand(new Task(eventName, Task.TaskCategory.E, fromDateTime, toDateTime));","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":91,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":92,"author":{"gitId":"choowengyan"},"content":"     * Parses the user input for the \u0027deadline\u0027 command and creates an AddCommand for adding a Deadline task.","lastModifiedDate":"2024-02-15"},{"lineNumber":93,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":94,"author":{"gitId":"choowengyan"},"content":"     * @param parts The array of input parts.","lastModifiedDate":"2024-02-15"},{"lineNumber":95,"author":{"gitId":"choowengyan"},"content":"     * @return The AddCommand for adding a Deadline task.","lastModifiedDate":"2024-02-15"},{"lineNumber":96,"author":{"gitId":"choowengyan"},"content":"     * @throws WhisperException If there is an error creating the Deadline task.","lastModifiedDate":"2024-02-15"},{"lineNumber":97,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":98,"author":{"gitId":"choowengyan"},"content":"    private static Command createDeadlineCommand(String[] parts) throws WhisperException {","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"choowengyan"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"choowengyan"},"content":"            throw new WhisperException(\"Deadline description cannot be empty.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"choowengyan"},"content":"        String[] deadlineDetails \u003d parts[1].split(\"/by\", 2);","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":105,"author":{"gitId":"choowengyan"},"content":"        if (deadlineDetails.length \u003c 2) {","lastModifiedDate":"2024-02-10"},{"lineNumber":106,"author":{"gitId":"choowengyan"},"content":"            throw new WhisperException(\"Invalid deadline format. Please use: deadline [description] /by [time]\");","lastModifiedDate":"2024-02-10"},{"lineNumber":107,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":108,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":109,"author":{"gitId":"choowengyan"},"content":"        String deadlineName \u003d deadlineDetails[0].trim();","lastModifiedDate":"2024-02-10"},{"lineNumber":110,"author":{"gitId":"choowengyan"},"content":"        LocalDateTime deadlineDateTime \u003d parseDateTime(deadlineDetails[1].trim());","lastModifiedDate":"2024-02-10"},{"lineNumber":111,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":112,"author":{"gitId":"choowengyan"},"content":"        return new AddCommand(new Task(deadlineName, Task.TaskCategory.D, deadlineDateTime));","lastModifiedDate":"2024-02-10"},{"lineNumber":113,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":114,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":115,"author":{"gitId":"choowengyan"},"content":"    private static Command createDeleteCommand(String[] parts) throws WhisperException {","lastModifiedDate":"2024-02-10"},{"lineNumber":116,"author":{"gitId":"choowengyan"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-02-10"},{"lineNumber":117,"author":{"gitId":"choowengyan"},"content":"            throw new WhisperException(\"Invalid delete command. Please specify the task number to delete.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":118,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":119,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":120,"author":{"gitId":"choowengyan"},"content":"        int index \u003d parseTaskIndex(parts[1]);","lastModifiedDate":"2024-02-10"},{"lineNumber":121,"author":{"gitId":"choowengyan"},"content":"        return new DeleteCommand(index);","lastModifiedDate":"2024-02-10"},{"lineNumber":122,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":123,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":124,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":125,"author":{"gitId":"choowengyan"},"content":"     * Parses the user input for the \u0027mark\u0027 command and creates a MarkCommand for marking a task as done.","lastModifiedDate":"2024-02-15"},{"lineNumber":126,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":127,"author":{"gitId":"choowengyan"},"content":"     * @param parts The array of input parts.","lastModifiedDate":"2024-02-15"},{"lineNumber":128,"author":{"gitId":"choowengyan"},"content":"     * @return The MarkCommand for marking a task as done.","lastModifiedDate":"2024-02-15"},{"lineNumber":129,"author":{"gitId":"choowengyan"},"content":"     * @throws WhisperException If there is an error creating the MarkCommand.","lastModifiedDate":"2024-02-15"},{"lineNumber":130,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":131,"author":{"gitId":"choowengyan"},"content":"    private static Command createMarkCommand(String[] parts) throws WhisperException {","lastModifiedDate":"2024-02-10"},{"lineNumber":132,"author":{"gitId":"choowengyan"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-02-10"},{"lineNumber":133,"author":{"gitId":"choowengyan"},"content":"            throw new WhisperException(\"Invalid mark command. Please specify the task number to mark as done.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":134,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":135,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":136,"author":{"gitId":"choowengyan"},"content":"        int index \u003d parseTaskIndex(parts[1]);","lastModifiedDate":"2024-02-10"},{"lineNumber":137,"author":{"gitId":"choowengyan"},"content":"        return new MarkCommand(index);","lastModifiedDate":"2024-02-10"},{"lineNumber":138,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":139,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":140,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":141,"author":{"gitId":"choowengyan"},"content":"     * Parses the user input for the \u0027unmark\u0027 command and creates an UnmarkCommand for marking a task as not done.","lastModifiedDate":"2024-02-15"},{"lineNumber":142,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":143,"author":{"gitId":"choowengyan"},"content":"     * @param parts The array of input parts.","lastModifiedDate":"2024-02-15"},{"lineNumber":144,"author":{"gitId":"choowengyan"},"content":"     * @return The UnmarkCommand for marking a task as not done.","lastModifiedDate":"2024-02-15"},{"lineNumber":145,"author":{"gitId":"choowengyan"},"content":"     * @throws WhisperException If there is an error creating the UnmarkCommand.","lastModifiedDate":"2024-02-15"},{"lineNumber":146,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":147,"author":{"gitId":"choowengyan"},"content":"    private static Command createUnmarkCommand(String[] parts) throws WhisperException {","lastModifiedDate":"2024-02-10"},{"lineNumber":148,"author":{"gitId":"choowengyan"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-02-10"},{"lineNumber":149,"author":{"gitId":"choowengyan"},"content":"            throw new WhisperException(\"Invalid unmark command. Please specify the task number to mark as not done.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":150,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":151,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":152,"author":{"gitId":"choowengyan"},"content":"        int index \u003d parseTaskIndex(parts[1]);","lastModifiedDate":"2024-02-10"},{"lineNumber":153,"author":{"gitId":"choowengyan"},"content":"        return new UnmarkCommand(index);","lastModifiedDate":"2024-02-10"},{"lineNumber":154,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":155,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":156,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":157,"author":{"gitId":"choowengyan"},"content":"     * Parses the user input to extract the task index for \u0027delete\u0027, \u0027mark\u0027, and \u0027unmark\u0027 commands.","lastModifiedDate":"2024-02-15"},{"lineNumber":158,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":159,"author":{"gitId":"choowengyan"},"content":"     * @param input The input string containing the task index.","lastModifiedDate":"2024-02-15"},{"lineNumber":160,"author":{"gitId":"choowengyan"},"content":"     * @return The parsed task index.","lastModifiedDate":"2024-02-15"},{"lineNumber":161,"author":{"gitId":"choowengyan"},"content":"     * @throws WhisperException If there is an error parsing the task index.","lastModifiedDate":"2024-02-15"},{"lineNumber":162,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":163,"author":{"gitId":"choowengyan"},"content":"    private static int parseTaskIndex(String input) throws WhisperException {","lastModifiedDate":"2024-02-10"},{"lineNumber":164,"author":{"gitId":"choowengyan"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":165,"author":{"gitId":"choowengyan"},"content":"            return Integer.parseInt(input.trim()) - 1;","lastModifiedDate":"2024-02-10"},{"lineNumber":166,"author":{"gitId":"choowengyan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":167,"author":{"gitId":"choowengyan"},"content":"            throw new WhisperException(\"Invalid task number.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":168,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":169,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":170,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":171,"author":{"gitId":"choowengyan"},"content":"    public static Command createFindCommand(String[] parts) throws WhisperException {","lastModifiedDate":"2024-02-17"},{"lineNumber":172,"author":{"gitId":"choowengyan"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-02-17"},{"lineNumber":173,"author":{"gitId":"choowengyan"},"content":"            throw new WhisperException(\"Keyword cannot be empty for find command. Try again.\");","lastModifiedDate":"2024-02-17"},{"lineNumber":174,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":175,"author":{"gitId":"choowengyan"},"content":"        return new FindCommand(parts[1].trim());","lastModifiedDate":"2024-02-17"},{"lineNumber":176,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":177,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":178,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":179,"author":{"gitId":"choowengyan"},"content":"     * Parses the date and time string into a LocalDateTime object.","lastModifiedDate":"2024-02-15"},{"lineNumber":180,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":181,"author":{"gitId":"choowengyan"},"content":"     * @param dateTime The date and time string.","lastModifiedDate":"2024-02-15"},{"lineNumber":182,"author":{"gitId":"choowengyan"},"content":"     * @return The LocalDateTime object parsed from the input string.","lastModifiedDate":"2024-02-15"},{"lineNumber":183,"author":{"gitId":"choowengyan"},"content":"     * @throws WhisperException If there is an error parsing the date and time.","lastModifiedDate":"2024-02-15"},{"lineNumber":184,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":185,"author":{"gitId":"choowengyan"},"content":"    private static LocalDateTime parseDateTime(String dateTime) throws WhisperException {","lastModifiedDate":"2024-02-10"},{"lineNumber":186,"author":{"gitId":"choowengyan"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":187,"author":{"gitId":"choowengyan"},"content":"            return LocalDateTime.parse(dateTime.trim(), DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":188,"author":{"gitId":"choowengyan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":189,"author":{"gitId":"choowengyan"},"content":"            throw new WhisperException(\"Invalid datetime format. Please use the format: dd/MM/yyyy HH:mm\");","lastModifiedDate":"2024-02-10"},{"lineNumber":190,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":191,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":192,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"choowengyan":192}},{"path":"src/main/java/whisper/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"choowengyan"},"content":"package whisper;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"choowengyan"},"content":"import java.io.File;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":" * The Storage class manages the loading and saving of tasks to and from a file for the Whisper application.","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"public class Storage {","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"    private String FILE_PATH;","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"     * @param FILE_PATH The file path for storing tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"    public Storage(String FILE_PATH) {","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"        this.FILE_PATH \u003d FILE_PATH;","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"     * Loads tasks from the file specified by the file path.","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"     * @return An ArrayList of tasks loaded from the file.","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"     * @throws WhisperException If there is an error loading tasks from the file.","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"    public ArrayList\u003cTask\u003e load() throws WhisperException {","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"        try (Scanner sc \u003d new Scanner(new File(FILE_PATH))) {","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"                String input \u003d sc.nextLine().trim();","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"                Task task \u003d parseTaskFromString(input);","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"                tasks.add(task);","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"            throw new WhisperException(\"Error loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"        return tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"     * Saves tasks to the file specified by the file path.","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"     * @param tasks The ArrayList of tasks to be saved.","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"     * @throws WhisperException If there is an error saving tasks to the file.","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"    public void saveFile(ArrayList\u003cTask\u003e tasks) throws WhisperException {","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"choowengyan"},"content":"        try (FileWriter fw \u003d new FileWriter(FILE_PATH)) {","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"                fw.write(taskToFormattedString(task) + System.lineSeparator());","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"choowengyan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"choowengyan"},"content":"            throw new WhisperException(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"     * Converts a task into a formatted string for storage in the file.","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"choowengyan"},"content":"     * @param task The task to be converted.","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"choowengyan"},"content":"     * @return A formatted string representation of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"choowengyan"},"content":"    String taskToFormattedString(Task task) {","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"choowengyan"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"choowengyan"},"content":"        sb.append(task.getTaskCat().name()).append(\" | \")","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"choowengyan"},"content":"                .append(task.isDone? \"1\" : \"0\").append(\" | \")","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"choowengyan"},"content":"                .append(task.getDescription());","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"choowengyan"},"content":"        switch (task.getTaskCat()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"choowengyan"},"content":"        case D:","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"choowengyan"},"content":"            sb.append(\" | \").append(task.getDeadline().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\")));","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"choowengyan"},"content":"            break;","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"choowengyan"},"content":"        case E:","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"choowengyan"},"content":"            sb.append(\" | \")","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"choowengyan"},"content":"                    .append(task.getEventFromDateTime().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\")))","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"choowengyan"},"content":"                    .append(\"-\")","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"choowengyan"},"content":"                    .append(task.getEventToDateTime().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\")));","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"choowengyan"},"content":"            break;","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"choowengyan"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":91,"author":{"gitId":"choowengyan"},"content":"     * Parses a string representation of a task from the file.","lastModifiedDate":"2024-02-15"},{"lineNumber":92,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":93,"author":{"gitId":"choowengyan"},"content":"     * @param input The string representation of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":94,"author":{"gitId":"choowengyan"},"content":"     * @return The parsed Task object.","lastModifiedDate":"2024-02-15"},{"lineNumber":95,"author":{"gitId":"choowengyan"},"content":"     * @throws WhisperException If there is an error parsing the task from the file.","lastModifiedDate":"2024-02-15"},{"lineNumber":96,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":97,"author":{"gitId":"choowengyan"},"content":"    Task parseTaskFromString(String input) throws WhisperException {","lastModifiedDate":"2024-02-15"},{"lineNumber":98,"author":{"gitId":"choowengyan"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"choowengyan"},"content":"            String[] parts \u003d input.split(\"\\\\|\");","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"choowengyan"},"content":"            if (parts.length \u003c 3) {","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"choowengyan"},"content":"                throw new WhisperException(\"Invalid file format.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"choowengyan"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":105,"author":{"gitId":"choowengyan"},"content":"            String taskType \u003d parts[0].trim();","lastModifiedDate":"2024-02-10"},{"lineNumber":106,"author":{"gitId":"choowengyan"},"content":"            int isDone \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2024-02-10"},{"lineNumber":107,"author":{"gitId":"choowengyan"},"content":"            String description \u003d parts[2].trim();","lastModifiedDate":"2024-02-10"},{"lineNumber":108,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":109,"author":{"gitId":"choowengyan"},"content":"            Task task;","lastModifiedDate":"2024-02-10"},{"lineNumber":110,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":111,"author":{"gitId":"choowengyan"},"content":"            switch (taskType) {","lastModifiedDate":"2024-02-10"},{"lineNumber":112,"author":{"gitId":"choowengyan"},"content":"            case \"T\":","lastModifiedDate":"2024-02-10"},{"lineNumber":113,"author":{"gitId":"choowengyan"},"content":"                task \u003d new Task(description, Task.TaskCategory.T);","lastModifiedDate":"2024-02-10"},{"lineNumber":114,"author":{"gitId":"choowengyan"},"content":"                break;","lastModifiedDate":"2024-02-10"},{"lineNumber":115,"author":{"gitId":"choowengyan"},"content":"            case \"D\":","lastModifiedDate":"2024-02-10"},{"lineNumber":116,"author":{"gitId":"choowengyan"},"content":"                if (parts.length \u003c 4) {","lastModifiedDate":"2024-02-10"},{"lineNumber":117,"author":{"gitId":"choowengyan"},"content":"                    throw new WhisperException(\"Invalid file format.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":118,"author":{"gitId":"choowengyan"},"content":"                }","lastModifiedDate":"2024-02-10"},{"lineNumber":119,"author":{"gitId":"choowengyan"},"content":"                String by \u003d parts[3].trim();","lastModifiedDate":"2024-02-10"},{"lineNumber":120,"author":{"gitId":"choowengyan"},"content":"                LocalDateTime deadlineDateTime \u003d parseDateTime(by);","lastModifiedDate":"2024-02-10"},{"lineNumber":121,"author":{"gitId":"choowengyan"},"content":"                task \u003d new Task(description, Task.TaskCategory.D, deadlineDateTime);","lastModifiedDate":"2024-02-10"},{"lineNumber":122,"author":{"gitId":"choowengyan"},"content":"                break;","lastModifiedDate":"2024-02-10"},{"lineNumber":123,"author":{"gitId":"choowengyan"},"content":"            case \"E\":","lastModifiedDate":"2024-02-10"},{"lineNumber":124,"author":{"gitId":"choowengyan"},"content":"                if (parts.length \u003c 4) {","lastModifiedDate":"2024-02-10"},{"lineNumber":125,"author":{"gitId":"choowengyan"},"content":"                    throw new WhisperException(\"Invalid file format.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":126,"author":{"gitId":"choowengyan"},"content":"                }","lastModifiedDate":"2024-02-10"},{"lineNumber":127,"author":{"gitId":"choowengyan"},"content":"                String dateTime \u003d parts[3].trim();","lastModifiedDate":"2024-02-10"},{"lineNumber":128,"author":{"gitId":"choowengyan"},"content":"                String[] timeParts \u003d dateTime.split(\"-\");","lastModifiedDate":"2024-02-10"},{"lineNumber":129,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":130,"author":{"gitId":"choowengyan"},"content":"                if (timeParts.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-10"},{"lineNumber":131,"author":{"gitId":"choowengyan"},"content":"                    String from \u003d timeParts[0];","lastModifiedDate":"2024-02-10"},{"lineNumber":132,"author":{"gitId":"choowengyan"},"content":"                    String to \u003d timeParts[1];","lastModifiedDate":"2024-02-10"},{"lineNumber":133,"author":{"gitId":"choowengyan"},"content":"                    LocalDateTime fromDateTime \u003d parseDateTime(from);","lastModifiedDate":"2024-02-10"},{"lineNumber":134,"author":{"gitId":"choowengyan"},"content":"                    LocalDateTime toDateTime \u003d parseDateTime(to);","lastModifiedDate":"2024-02-10"},{"lineNumber":135,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":136,"author":{"gitId":"choowengyan"},"content":"                    task \u003d new Task(description, Task.TaskCategory.E, fromDateTime, toDateTime);","lastModifiedDate":"2024-02-10"},{"lineNumber":137,"author":{"gitId":"choowengyan"},"content":"                } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":138,"author":{"gitId":"choowengyan"},"content":"                    throw new WhisperException(\"Invalid file format.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":139,"author":{"gitId":"choowengyan"},"content":"                }","lastModifiedDate":"2024-02-10"},{"lineNumber":140,"author":{"gitId":"choowengyan"},"content":"                break;","lastModifiedDate":"2024-02-10"},{"lineNumber":141,"author":{"gitId":"choowengyan"},"content":"            default:","lastModifiedDate":"2024-02-10"},{"lineNumber":142,"author":{"gitId":"choowengyan"},"content":"                throw new WhisperException(\"Invalid file format.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":143,"author":{"gitId":"choowengyan"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":144,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":145,"author":{"gitId":"choowengyan"},"content":"            if (isDone \u003d\u003d 1) {","lastModifiedDate":"2024-02-10"},{"lineNumber":146,"author":{"gitId":"choowengyan"},"content":"                task.markAsDone();","lastModifiedDate":"2024-02-10"},{"lineNumber":147,"author":{"gitId":"choowengyan"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":148,"author":{"gitId":"choowengyan"},"content":"            return task;","lastModifiedDate":"2024-02-10"},{"lineNumber":149,"author":{"gitId":"choowengyan"},"content":"        } catch (WhisperException | NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":150,"author":{"gitId":"choowengyan"},"content":"            throw new WhisperException(\"Error parsing task from file.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":151,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":152,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":153,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":154,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":155,"author":{"gitId":"choowengyan"},"content":"     * Parses a string into a LocalDateTime object.","lastModifiedDate":"2024-02-15"},{"lineNumber":156,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":157,"author":{"gitId":"choowengyan"},"content":"     * @param dateTime The string representation of the date and time.","lastModifiedDate":"2024-02-15"},{"lineNumber":158,"author":{"gitId":"choowengyan"},"content":"     * @return The parsed LocalDateTime object.","lastModifiedDate":"2024-02-15"},{"lineNumber":159,"author":{"gitId":"choowengyan"},"content":"     * @throws WhisperException If there is an error parsing the date and time.","lastModifiedDate":"2024-02-15"},{"lineNumber":160,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":161,"author":{"gitId":"choowengyan"},"content":"    LocalDateTime parseDateTime(String dateTime) throws WhisperException {","lastModifiedDate":"2024-02-15"},{"lineNumber":162,"author":{"gitId":"choowengyan"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":163,"author":{"gitId":"choowengyan"},"content":"            return LocalDateTime.parse(dateTime.trim(), DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":164,"author":{"gitId":"choowengyan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":165,"author":{"gitId":"choowengyan"},"content":"            throw new WhisperException(\"Invalid date time format. Please follow the format: dd/MM/yyyy HH:mm\");","lastModifiedDate":"2024-02-10"},{"lineNumber":166,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":167,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":168,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"choowengyan":168}},{"path":"src/main/java/whisper/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"choowengyan"},"content":"package whisper;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"choowengyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"choowengyan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":" * The Task class represents a task in the Whisper application.","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"    protected TaskCategory category;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"    protected String from;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"    protected String to;","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"    protected String by;","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"    protected LocalDateTime eventFromDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"    protected LocalDateTime eventToDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"     * Constructs a task with the specified description and category.","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"     * @param cat         The category of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"    public Task(String description, TaskCategory cat) {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"        this.category \u003d cat;","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"     * Constructs a deadline task with the specified description, category, and deadline.","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"     * @param cat         The category of the task (deadline).","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"     * @param deadline    The deadline of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"    public Task(String description, TaskCategory cat, LocalDateTime deadline) {","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"        this(description, cat);","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"     * Constructs an event task with the specified description, category, start date and time, and end date and time.","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"     * @param description      The description of the event task.","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"     * @param cat              The category of the task (event).","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"     * @param fromDateTime     The start date and time of the event.","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"     * @param toDateTime       The end date and time of the event.","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"    public Task(String description, TaskCategory cat, LocalDateTime fromDateTime, LocalDateTime toDateTime) {","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"        this(description, cat);","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"        this.eventFromDateTime \u003d fromDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"        this.eventToDateTime \u003d toDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"choowengyan"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"choowengyan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"choowengyan"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"choowengyan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"choowengyan"},"content":"     * Gets the description of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"choowengyan"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"choowengyan"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"choowengyan"},"content":"        return description;","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":81,"author":{"gitId":"choowengyan"},"content":"     * Gets the status icon of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":82,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":83,"author":{"gitId":"choowengyan"},"content":"     * @return The status icon, indicating whether the task is done or not.","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":85,"author":{"gitId":"choowengyan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"choowengyan"},"content":"        return (isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":89,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":90,"author":{"gitId":"choowengyan"},"content":"     * Gets the category of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":91,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":92,"author":{"gitId":"choowengyan"},"content":"     * @return The category of the task.","lastModifiedDate":"2024-02-15"},{"lineNumber":93,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":94,"author":{"gitId":"choowengyan"},"content":"    public TaskCategory getTaskCat() {","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"choowengyan"},"content":"        return category;","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"choowengyan"},"content":"    // setter event","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"choowengyan"},"content":"    public Task setFrom(String from) {","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"choowengyan"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"choowengyan"},"content":"        return this;","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":104,"author":{"gitId":"choowengyan"},"content":"    // setter event","lastModifiedDate":"2024-01-25"},{"lineNumber":105,"author":{"gitId":"choowengyan"},"content":"    public Task setTo(String to) {","lastModifiedDate":"2024-01-25"},{"lineNumber":106,"author":{"gitId":"choowengyan"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-25"},{"lineNumber":107,"author":{"gitId":"choowengyan"},"content":"        return this;","lastModifiedDate":"2024-01-25"},{"lineNumber":108,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":109,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":110,"author":{"gitId":"choowengyan"},"content":"    // setter deadline","lastModifiedDate":"2024-01-25"},{"lineNumber":111,"author":{"gitId":"choowengyan"},"content":"    public Task setBy(String by) {","lastModifiedDate":"2024-01-25"},{"lineNumber":112,"author":{"gitId":"choowengyan"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-25"},{"lineNumber":113,"author":{"gitId":"choowengyan"},"content":"        return this;","lastModifiedDate":"2024-01-25"},{"lineNumber":114,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":115,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":116,"author":{"gitId":"choowengyan"},"content":"    // getter for date and time","lastModifiedDate":"2024-02-09"},{"lineNumber":117,"author":{"gitId":"choowengyan"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2024-02-09"},{"lineNumber":118,"author":{"gitId":"choowengyan"},"content":"        return deadline;","lastModifiedDate":"2024-02-09"},{"lineNumber":119,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":120,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":121,"author":{"gitId":"choowengyan"},"content":"    public LocalDateTime getEventFromDateTime() {","lastModifiedDate":"2024-02-09"},{"lineNumber":122,"author":{"gitId":"choowengyan"},"content":"        return eventFromDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":123,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":124,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":125,"author":{"gitId":"choowengyan"},"content":"    public LocalDateTime getEventToDateTime() {","lastModifiedDate":"2024-02-09"},{"lineNumber":126,"author":{"gitId":"choowengyan"},"content":"        return eventToDateTime;","lastModifiedDate":"2024-02-09"},{"lineNumber":127,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":128,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":129,"author":{"gitId":"choowengyan"},"content":"    // getter event","lastModifiedDate":"2024-01-25"},{"lineNumber":130,"author":{"gitId":"choowengyan"},"content":"    public String getFrom() {","lastModifiedDate":"2024-01-25"},{"lineNumber":131,"author":{"gitId":"choowengyan"},"content":"        return from;","lastModifiedDate":"2024-01-25"},{"lineNumber":132,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":133,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":134,"author":{"gitId":"choowengyan"},"content":"    // getter event","lastModifiedDate":"2024-01-25"},{"lineNumber":135,"author":{"gitId":"choowengyan"},"content":"    public String getTo() {","lastModifiedDate":"2024-01-25"},{"lineNumber":136,"author":{"gitId":"choowengyan"},"content":"        return to;","lastModifiedDate":"2024-01-25"},{"lineNumber":137,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":138,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":139,"author":{"gitId":"choowengyan"},"content":"    // getter deadline","lastModifiedDate":"2024-01-25"},{"lineNumber":140,"author":{"gitId":"choowengyan"},"content":"    public String getBy() {","lastModifiedDate":"2024-01-25"},{"lineNumber":141,"author":{"gitId":"choowengyan"},"content":"        return by;","lastModifiedDate":"2024-01-25"},{"lineNumber":142,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":143,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":144,"author":{"gitId":"choowengyan"},"content":"    // format datetime details for all task categories","lastModifiedDate":"2024-02-09"},{"lineNumber":145,"author":{"gitId":"choowengyan"},"content":"    private String formatDateTime() {","lastModifiedDate":"2024-02-09"},{"lineNumber":146,"author":{"gitId":"choowengyan"},"content":"        if (category \u003d\u003d TaskCategory.D \u0026\u0026 deadline !\u003d null) {","lastModifiedDate":"2024-02-09"},{"lineNumber":147,"author":{"gitId":"choowengyan"},"content":"            return \" (by: \" + deadline.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy hh:mm\")) + \")\";","lastModifiedDate":"2024-02-09"},{"lineNumber":148,"author":{"gitId":"choowengyan"},"content":"        } else if (category \u003d\u003d TaskCategory.E \u0026\u0026 eventFromDateTime !\u003d null \u0026\u0026 eventToDateTime !\u003d null) {","lastModifiedDate":"2024-02-09"},{"lineNumber":149,"author":{"gitId":"choowengyan"},"content":"            return \" (from: \" + eventFromDateTime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy hh:mm\")) +","lastModifiedDate":"2024-02-09"},{"lineNumber":150,"author":{"gitId":"choowengyan"},"content":"                    \" to: \" + eventToDateTime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy hh:mm\")) + \")\";","lastModifiedDate":"2024-02-09"},{"lineNumber":151,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":152,"author":{"gitId":"choowengyan"},"content":"        return \"\";","lastModifiedDate":"2024-02-09"},{"lineNumber":153,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":154,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":155,"author":{"gitId":"choowengyan"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":156,"author":{"gitId":"choowengyan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":157,"author":{"gitId":"choowengyan"},"content":"        return \"[\" + category + \"]\" + getStatusIcon() + getDescription()","lastModifiedDate":"2024-02-16"},{"lineNumber":158,"author":{"gitId":"choowengyan"},"content":"                + category.getDetails(this);","lastModifiedDate":"2024-02-16"},{"lineNumber":159,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":160,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":161,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":162,"author":{"gitId":"choowengyan"},"content":"     * The TaskCategory enum represents different categories of tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":163,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":164,"author":{"gitId":"choowengyan"},"content":"    public enum TaskCategory {","lastModifiedDate":"2024-01-25"},{"lineNumber":165,"author":{"gitId":"choowengyan"},"content":"        T {","lastModifiedDate":"2024-02-09"},{"lineNumber":166,"author":{"gitId":"choowengyan"},"content":"            @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":167,"author":{"gitId":"choowengyan"},"content":"            public String getDetails(Task task) {","lastModifiedDate":"2024-01-25"},{"lineNumber":168,"author":{"gitId":"choowengyan"},"content":"                return \"\";","lastModifiedDate":"2024-01-25"},{"lineNumber":169,"author":{"gitId":"choowengyan"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":170,"author":{"gitId":"choowengyan"},"content":"        },","lastModifiedDate":"2024-01-25"},{"lineNumber":171,"author":{"gitId":"choowengyan"},"content":"        E {","lastModifiedDate":"2024-02-09"},{"lineNumber":172,"author":{"gitId":"choowengyan"},"content":"            @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":173,"author":{"gitId":"choowengyan"},"content":"            public String getDetails(Task task) {","lastModifiedDate":"2024-01-25"},{"lineNumber":174,"author":{"gitId":"choowengyan"},"content":"                return \" (from: \" + task.getEventFromDateTime().format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"))","lastModifiedDate":"2024-02-16"},{"lineNumber":175,"author":{"gitId":"choowengyan"},"content":"                        + \" to: \" + task.getEventToDateTime().format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"))","lastModifiedDate":"2024-02-16"},{"lineNumber":176,"author":{"gitId":"choowengyan"},"content":"                        + \")\";","lastModifiedDate":"2024-02-16"},{"lineNumber":177,"author":{"gitId":"choowengyan"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":178,"author":{"gitId":"choowengyan"},"content":"        },","lastModifiedDate":"2024-01-25"},{"lineNumber":179,"author":{"gitId":"choowengyan"},"content":"        D {","lastModifiedDate":"2024-02-09"},{"lineNumber":180,"author":{"gitId":"choowengyan"},"content":"            @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":181,"author":{"gitId":"choowengyan"},"content":"            public String getDetails(Task task) {","lastModifiedDate":"2024-01-25"},{"lineNumber":182,"author":{"gitId":"choowengyan"},"content":"                if (task.getDeadline() !\u003d null) {","lastModifiedDate":"2024-02-09"},{"lineNumber":183,"author":{"gitId":"choowengyan"},"content":"                    return \" (by: \" + task.getDeadline().format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2024-02-09"},{"lineNumber":184,"author":{"gitId":"choowengyan"},"content":"                } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":185,"author":{"gitId":"choowengyan"},"content":"                    return \"\";","lastModifiedDate":"2024-02-09"},{"lineNumber":186,"author":{"gitId":"choowengyan"},"content":"                }","lastModifiedDate":"2024-02-09"},{"lineNumber":187,"author":{"gitId":"choowengyan"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":188,"author":{"gitId":"choowengyan"},"content":"        };","lastModifiedDate":"2024-01-25"},{"lineNumber":189,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":190,"author":{"gitId":"choowengyan"},"content":"        /**","lastModifiedDate":"2024-02-15"},{"lineNumber":191,"author":{"gitId":"choowengyan"},"content":"         * Returns additional details specific to the task category.","lastModifiedDate":"2024-02-15"},{"lineNumber":192,"author":{"gitId":"choowengyan"},"content":"         *","lastModifiedDate":"2024-02-15"},{"lineNumber":193,"author":{"gitId":"choowengyan"},"content":"         * @param task The task for which details are requested.","lastModifiedDate":"2024-02-15"},{"lineNumber":194,"author":{"gitId":"choowengyan"},"content":"         * @return Additional details for the task category.","lastModifiedDate":"2024-02-15"},{"lineNumber":195,"author":{"gitId":"choowengyan"},"content":"         */","lastModifiedDate":"2024-02-15"},{"lineNumber":196,"author":{"gitId":"choowengyan"},"content":"        public abstract String getDetails(Task task);","lastModifiedDate":"2024-01-25"},{"lineNumber":197,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":198,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"choowengyan":198}},{"path":"src/main/java/whisper/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"choowengyan"},"content":"package whisper;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"choowengyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":" * The TaskList class represents a list of tasks in the Whisper application.","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"public class TaskList {","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"     * Constructs a TaskList with the specified list of tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"     * @param taskList The list of tasks to initialize the TaskList.","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"        taskList.add(task);","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"     * Deletes a task from the task list at the specified index.","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"     * @throws WhisperException If the index is invalid.","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"    public void deleteTask(int index) throws WhisperException {","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"        checkIndex(index);","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"        //taskList.remove(index);","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"        Task removedTask \u003d taskList.remove(index);","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"        System.out.println(\"Task deleted: \" + removedTask.getDescription());","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"     * Marks a task at the specified index as done.","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"     * @throws WhisperException If the index is invalid.","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"    public void markTaskAsDone(int index) throws WhisperException {","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"choowengyan"},"content":"        checkIndex(index);","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"        taskList.get(index).markAsDone();","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"choowengyan"},"content":"     * Marks a task at the specified index as not done.","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"     * @param index The index of the task to be marked as not done.","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"     * @throws WhisperException If the index is invalid.","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"    public void markTaskAsUndone(int index) throws WhisperException {","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"        checkIndex(index);","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"choowengyan"},"content":"        taskList.get(index).markAsUndone();","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"choowengyan"},"content":"     * Gets a copy of the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"choowengyan"},"content":"     * @return A copy of the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"choowengyan"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"choowengyan"},"content":"        // Return a copy to avoid direct manipulation of the internal list","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"choowengyan"},"content":"        return new ArrayList\u003c\u003e(taskList);","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":81,"author":{"gitId":"choowengyan"},"content":"     * Gets the task at the specified index.","lastModifiedDate":"2024-02-15"},{"lineNumber":82,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":83,"author":{"gitId":"choowengyan"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"choowengyan"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-02-15"},{"lineNumber":85,"author":{"gitId":"choowengyan"},"content":"     * @throws WhisperException If the index is invalid.","lastModifiedDate":"2024-02-15"},{"lineNumber":86,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":87,"author":{"gitId":"choowengyan"},"content":"    public Task getTask(int index) throws WhisperException {","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"choowengyan"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"choowengyan"},"content":"            return taskList.get(index);","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"choowengyan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":91,"author":{"gitId":"choowengyan"},"content":"            throw new WhisperException(\"Invalid task number.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":92,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":93,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":94,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":96,"author":{"gitId":"choowengyan"},"content":"     * Checks if the given index is valid for the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":97,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":98,"author":{"gitId":"choowengyan"},"content":"     * @param index The index to check.","lastModifiedDate":"2024-02-15"},{"lineNumber":99,"author":{"gitId":"choowengyan"},"content":"     * @throws WhisperException If the index is invalid.","lastModifiedDate":"2024-02-15"},{"lineNumber":100,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":101,"author":{"gitId":"choowengyan"},"content":"    private void checkIndex(int index) throws WhisperException {","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"choowengyan"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"choowengyan"},"content":"            throw new WhisperException(\"Invalid task number.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":105,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":106,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"choowengyan":106}},{"path":"src/main/java/whisper/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"choowengyan"},"content":"package whisper;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"choowengyan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"choowengyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":" * The Ui class handles the user interface of the Whisper application, including input/output and displaying messages.","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"public class Ui {","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"    private static final String LINE \u003d \"-------------------------------------------------\\n\";","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"    public static String NAME \u003d \"Whisper\";","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"     * Displays the welcome message when the application starts.","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"    public void showWelcomeMsg() {","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"        printLine();","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"        System.out.println(\"Hello! I\u0027m \" + NAME + \" , your personal chatbot!\\n\" +","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"                \"What can I do for you?\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"        printLine();","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"     * Prints a line separator to the console.","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"    public void printLine() {","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"     * Prints an error message to the console.","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"     * @param errorMessage The error message to be displayed.","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"    public void printError(String errorMessage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"        System.out.println(\"\\nError: \" + errorMessage);","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"     * Reads a user command from the console.","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"     * @return The user-entered command.","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"    public String inputCommand() {","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"        System.out.println(\"Enter your input: \");","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"        return sc.nextLine().trim();","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"     * Prints an error message for failed file loading.","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"    public void printLoadFileError() {","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"        printError(\"Error loading the file.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"     * Displays the list of tasks to the console.","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"choowengyan"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"    public void printTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"        printLine();","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"choowengyan"},"content":"        System.out.println(\"Here are your tasks:\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"choowengyan"},"content":"        printLine();","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"choowengyan"},"content":"     * Prints a message confirming the addition of a task.","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"choowengyan"},"content":"     * @param task       The task that was added.","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"choowengyan"},"content":"     * @param totalTasks The total number of tasks after the addition.","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"choowengyan"},"content":"    public void printTaskAdded(Task task, int totalTask) {","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"choowengyan"},"content":"        printLine();","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"choowengyan"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + task);","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"choowengyan"},"content":"        System.out.println(\"Now you have \" + totalTask + \" tasks in the list.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"choowengyan"},"content":"        printLine();","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":85,"author":{"gitId":"choowengyan"},"content":"     * Prints a message confirming the marking of a task as done.","lastModifiedDate":"2024-02-15"},{"lineNumber":86,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":87,"author":{"gitId":"choowengyan"},"content":"     * @param task The task that was marked as done.","lastModifiedDate":"2024-02-15"},{"lineNumber":88,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":89,"author":{"gitId":"choowengyan"},"content":"    public void printTaskAsDone(Task task) {","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"choowengyan"},"content":"        printLine();","lastModifiedDate":"2024-02-10"},{"lineNumber":91,"author":{"gitId":"choowengyan"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + task);","lastModifiedDate":"2024-02-10"},{"lineNumber":92,"author":{"gitId":"choowengyan"},"content":"        printLine();","lastModifiedDate":"2024-02-10"},{"lineNumber":93,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":94,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":96,"author":{"gitId":"choowengyan"},"content":"     * Prints a message confirming the marking of a task as not done.","lastModifiedDate":"2024-02-15"},{"lineNumber":97,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":98,"author":{"gitId":"choowengyan"},"content":"     * @param task The task that was marked as not done.","lastModifiedDate":"2024-02-15"},{"lineNumber":99,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":100,"author":{"gitId":"choowengyan"},"content":"    public void printTaskAsUndone(Task task) {","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"choowengyan"},"content":"        printLine();","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"choowengyan"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as not done:\\n\" + task);","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"choowengyan"},"content":"        printLine();","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":105,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":106,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":107,"author":{"gitId":"choowengyan"},"content":"     * Prints a message confirming the removal of a task.","lastModifiedDate":"2024-02-15"},{"lineNumber":108,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":109,"author":{"gitId":"choowengyan"},"content":"     * @param task       The task that was removed.","lastModifiedDate":"2024-02-15"},{"lineNumber":110,"author":{"gitId":"choowengyan"},"content":"     * @param totalTasks The total number of tasks after the removal.","lastModifiedDate":"2024-02-15"},{"lineNumber":111,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":112,"author":{"gitId":"choowengyan"},"content":"    public void printRemovedTask(Task task, int totalTasks) {","lastModifiedDate":"2024-02-10"},{"lineNumber":113,"author":{"gitId":"choowengyan"},"content":"        printLine();","lastModifiedDate":"2024-02-10"},{"lineNumber":114,"author":{"gitId":"choowengyan"},"content":"        System.out.println(\"Noted! I\u0027ve removed this task: \\n\" + task);","lastModifiedDate":"2024-02-10"},{"lineNumber":115,"author":{"gitId":"choowengyan"},"content":"        System.out.println(\"Now you have \" + totalTasks + \" tasks in the list.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":116,"author":{"gitId":"choowengyan"},"content":"        printLine();","lastModifiedDate":"2024-02-10"},{"lineNumber":117,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":118,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":119,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":120,"author":{"gitId":"choowengyan"},"content":"     * Prints tasks that match a given keyword.","lastModifiedDate":"2024-02-17"},{"lineNumber":121,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":122,"author":{"gitId":"choowengyan"},"content":"     * @param matchingTasks The list of tasks that match the keyword.","lastModifiedDate":"2024-02-17"},{"lineNumber":123,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":124,"author":{"gitId":"choowengyan"},"content":"    public void printMatchingTasks(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2024-02-17"},{"lineNumber":125,"author":{"gitId":"choowengyan"},"content":"        printLine();","lastModifiedDate":"2024-02-17"},{"lineNumber":126,"author":{"gitId":"choowengyan"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":127,"author":{"gitId":"choowengyan"},"content":"            System.out.println(\"No matching task found.\\n\");","lastModifiedDate":"2024-02-17"},{"lineNumber":128,"author":{"gitId":"choowengyan"},"content":"        } else {","lastModifiedDate":"2024-02-17"},{"lineNumber":129,"author":{"gitId":"choowengyan"},"content":"            System.out.println(\"Here are the matching tasks in your list! \\n\");","lastModifiedDate":"2024-02-17"},{"lineNumber":130,"author":{"gitId":"choowengyan"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2024-02-17"},{"lineNumber":131,"author":{"gitId":"choowengyan"},"content":"                System.out.println((i + 1) + \". \" + matchingTasks.get(i));","lastModifiedDate":"2024-02-17"},{"lineNumber":132,"author":{"gitId":"choowengyan"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":133,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":134,"author":{"gitId":"choowengyan"},"content":"        printLine();","lastModifiedDate":"2024-02-17"},{"lineNumber":135,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":136,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":137,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":138,"author":{"gitId":"choowengyan"},"content":"     * Displays the exit message when the application exits.","lastModifiedDate":"2024-02-15"},{"lineNumber":139,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":140,"author":{"gitId":"choowengyan"},"content":"    public void printExitMessage() {","lastModifiedDate":"2024-02-10"},{"lineNumber":141,"author":{"gitId":"choowengyan"},"content":"        printLine();","lastModifiedDate":"2024-02-10"},{"lineNumber":142,"author":{"gitId":"choowengyan"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-10"},{"lineNumber":143,"author":{"gitId":"choowengyan"},"content":"        printLine();","lastModifiedDate":"2024-02-10"},{"lineNumber":144,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":145,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"choowengyan":145}},{"path":"src/main/java/whisper/Whisper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"choowengyan"},"content":"package whisper;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"choowengyan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":" * The Whisper class represents the main application that interacts with the user, manages tasks, and handles input/output.","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"public class Whisper {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"     * Constructs a new Whisper instance.","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"     * @param filePath The file path for storing and loading tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"    public Whisper(String filePath) {","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"        } catch (WhisperException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"            ui.printLoadFileError();","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"     * Runs the main loop of the Whisper application, continuously accepting and processing user commands until an exit command is received.","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"    public void run() {","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"        ui.showWelcomeMsg();","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"            try {","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"                String input \u003d ui.inputCommand();","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"                Command command \u003d Parser.parse(input);","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"                command.execute(tasks.getTaskList(), ui, storage);","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"                tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"            } catch (WhisperException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"                ui.printError(e.getMessage());","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"     * The entry point for the Whisper application.","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"     * @param args Command-line arguments (not used in this application).","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"        Whisper whisper \u003d new Whisper(\"data/whisper.txt\");","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"choowengyan"},"content":"        whisper.run();","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"choowengyan":57}},{"path":"src/main/java/whisper/WhisperException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"choowengyan"},"content":"package whisper;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"choowengyan"},"content":"//import java.util.*;","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":"/**","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":" * The WhisperException class represents custom exceptions specific to the Whisper application.","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":" * It extends the Java Exception class and includes various static methods to create instances of specific exceptions.","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":" */","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"public class WhisperException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"     * Constructs a new WhisperException with the specified error message.","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"     * @param err The error message associated with the exception.","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"    public WhisperException(String err) {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"        super(err);","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"     * Creates a WhisperException for an unknown command.","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"     * @return A WhisperException indicating an invalid command.","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"    public static WhisperException unknownCommand() {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"        return new WhisperException(\"\\nInvalid Command, please try again.\\nWe only support commands such as:\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"                \"\\n- todo [description]\\n- event [description] /from [start] /to [end]\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"                \"\\n- deadline [description] /by[time]\\n- mark [taskID]\\n- unmark [taskID]\\n- delete [taskID]\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"     * Creates a WhisperException for when the task list is full.","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"     * @return A WhisperException indicating that the task list is full.","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"    public static WhisperException taskFull() {","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"        return new WhisperException(\"\\nSorry, list is full. Can\u0027t add anymore.\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"     * Creates a WhisperException for an invalid event format.","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"     * @return A WhisperException indicating an invalid event format.","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"    public static WhisperException invalidEvent() {","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"        return new WhisperException(\"\\nInvalid format. Please enter again (event [description] /from [start] /to [end])\"","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"                 + \".\\n\");","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"     * Creates a WhisperException for an invalid todo format.","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"     * @return A WhisperException indicating an invalid todo format.","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"    public static WhisperException invalidTodo() {","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"choowengyan"},"content":"        return new WhisperException(\"\\nInvalid format. Please enter again (todo [description]).\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"choowengyan"},"content":"     * Creates a WhisperException for an invalid deadline format.","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"choowengyan"},"content":"     * @return A WhisperException indicating an invalid deadline format.","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"    public static WhisperException invalidDeadline() {","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"choowengyan"},"content":"        return new WhisperException(\"\\nInvalid format. Please enter again (deadline [description] /by[time]).\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"choowengyan"},"content":"     * Creates a WhisperException for an invalid task ID.","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"choowengyan"},"content":"     * @return A WhisperException indicating an invalid task ID.","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"choowengyan"},"content":"    public static WhisperException invalidTaskID() {","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"choowengyan"},"content":"        return new WhisperException(\"\\nInvalid task number. Please try again!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"choowengyan"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"choowengyan"},"content":"     * Creates a WhisperException for handling corrupted file content.","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"choowengyan"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":79,"author":{"gitId":"choowengyan"},"content":"     * @return A WhisperException indicating an error parsing tasks from a file.","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"choowengyan"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":81,"author":{"gitId":"choowengyan"},"content":"    public static WhisperException invalidFileFormat() {","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"choowengyan"},"content":"        return new WhisperException(\"\\nError parsing task from file.\");","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"choowengyan":84}},{"path":"src/test/java/whisper/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"choowengyan"},"content":"package whisper;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"choowengyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":"import java.io.File;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"import java.util.List;","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"class StorageTest {","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"    void saveFile_validTasks_tasksSavedSuccessfully() throws IOException, WhisperException {","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"        // setup","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"        Path tempFile \u003d Files.createTempFile(\"tempTasks\", \".txt\");","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"        String filePath \u003d tempFile.toString();","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"        // sample tasks","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"        ArrayList\u003cTask\u003e tasksToSave \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"        Task task1 \u003d new Task(\"Task 1\", Task.TaskCategory.T);","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"        Task task2 \u003d new Task(\"Task 2\", Task.TaskCategory.D, LocalDateTime.now());","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"        Task task3 \u003d new Task(\"Task 3\", Task.TaskCategory.E, LocalDateTime.now(), LocalDateTime.now().plusHours(1));","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"        tasksToSave.add(task1);","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"        tasksToSave.add(task2);","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"        tasksToSave.add(task3);","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"        // execute","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"        storage.saveFile(tasksToSave);","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"        // read the saved tasks","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(tempFile);","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"        // verify","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"        assertEquals(tasksToSave.size(), lines.size());","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"        for (int i \u003d 0; i \u003c tasksToSave.size(); i++) {","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"            assertEquals(storage.taskToFormattedString(tasksToSave.get(i)), lines.get(i));","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"        // clean","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"        Files.deleteIfExists(tempFile);","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"    void parseTaskFromString_invalidInput_exceptionThrown() {","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"        // setup","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"        Storage storage \u003d new Storage(\"dummy/path\");","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"choowengyan"},"content":"        String invalidInput \u003d \"Invalid Input\";","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"        // verify","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"        assertThrows(WhisperException.class, () -\u003e storage.parseTaskFromString(invalidInput));","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"    void parseDateTime_validDateTime_correctlyParsed() throws WhisperException {","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"        // setup","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"choowengyan"},"content":"        Storage storage \u003d new Storage(\"dummy/path\");","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"        String dateTimeString \u003d \"01/01/2022 12:30\";","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"choowengyan"},"content":"        // execute","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"choowengyan"},"content":"        LocalDateTime parsedDateTime \u003d storage.parseDateTime(dateTimeString);","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"choowengyan"},"content":"        // verify","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"choowengyan"},"content":"        LocalDateTime expectedDateTime \u003d LocalDateTime.of(2022, 1, 1, 12, 30);","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"choowengyan"},"content":"        assertEquals(expectedDateTime, parsedDateTime);","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"choowengyan"},"content":"    void parseDateTime_invalidDateTime_exceptionThrown() {","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"choowengyan"},"content":"        // setup","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"choowengyan"},"content":"        Storage storage \u003d new Storage(\"dummy/path\");","lastModifiedDate":"2024-02-15"},{"lineNumber":79,"author":{"gitId":"choowengyan"},"content":"        String invalidDateTimeString \u003d \"Invalid DateTime\";","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":81,"author":{"gitId":"choowengyan"},"content":"        // verify","lastModifiedDate":"2024-02-15"},{"lineNumber":82,"author":{"gitId":"choowengyan"},"content":"        assertThrows(WhisperException.class, () -\u003e storage.parseDateTime(invalidDateTimeString));","lastModifiedDate":"2024-02-15"},{"lineNumber":83,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"choowengyan":84}},{"path":"src/test/java/whisper/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"choowengyan"},"content":"package whisper;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"choowengyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":"import whisper.WhisperException;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"choowengyan"},"content":"    void addTask_validTask_taskAdded() {","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"choowengyan"},"content":"        // setup","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"choowengyan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"choowengyan"},"content":"        Task taskToAdd \u003d new Task(\"Test Task: \", Task.TaskCategory.T);","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"choowengyan"},"content":"        // execute","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"choowengyan"},"content":"        taskList.addTask(taskToAdd);","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"choowengyan"},"content":"        // verify","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"choowengyan"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTaskList();","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"choowengyan"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"        assertEquals(taskToAdd, tasks.get(0));","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"choowengyan"},"content":"    void deleteTask_validIndex_taskDeleted() throws WhisperException {","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"choowengyan"},"content":"        // setup","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"choowengyan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"choowengyan"},"content":"        Task taskToDelete \u003d new Task(\"Test Task\", Task.TaskCategory.T);","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"choowengyan"},"content":"        taskList.addTask(taskToDelete);","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"choowengyan"},"content":"        // execute","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"choowengyan"},"content":"        taskList.deleteTask(0);","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"choowengyan"},"content":"        // verify","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"choowengyan"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTaskList();","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"choowengyan"},"content":"        assertEquals(0, tasks.size());","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"choowengyan"},"content":"    void deleteTask_invalidIndex_exceptionThrown() {","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"choowengyan"},"content":"        // setup","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"choowengyan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"choowengyan"},"content":"        // verify","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"choowengyan"},"content":"        assertThrows(WhisperException.class, () -\u003e taskList.deleteTask(0));","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"choowengyan"},"content":"    void getTask_validIndex_taskReturned() throws WhisperException {","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"choowengyan"},"content":"        // setup","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"choowengyan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"choowengyan"},"content":"        Task expectedTask \u003d new Task(\"Test Task\", Task.TaskCategory.T);","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"choowengyan"},"content":"        taskList.addTask(expectedTask);","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"choowengyan"},"content":"        // execute","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"choowengyan"},"content":"        Task retrievedTask \u003d taskList.getTask(0);","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"choowengyan"},"content":"        // verify","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"choowengyan"},"content":"        assertEquals(expectedTask, retrievedTask);","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"choowengyan"},"content":"    @Test","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"choowengyan"},"content":"    void getTask_invalidIndex_exceptionThrown() {","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"choowengyan"},"content":"        // Setup","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"choowengyan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"choowengyan"},"content":"        // Verify","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"choowengyan"},"content":"        assertThrows(WhisperException.class, () -\u003e taskList.getTask(0));","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"choowengyan"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"choowengyan"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"choowengyan":72}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"choowengyan"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"choowengyan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"choowengyan"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"choowengyan"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"choowengyan"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"choowengyan"},"content":"mark 3","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"choowengyan"},"content":"unmark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"choowengyan"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"choowengyan"},"content":"bye","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"choowengyan"},"content":"","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"choowengyan":10}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"choowengyan"},"content":"java -classpath ../bin Whisper \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"choowengyan":1,"-":37}}]
