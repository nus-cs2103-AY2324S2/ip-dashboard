[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"# BotBot project template","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"owenong1":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"owenong1"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"owenong1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"owenong1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"owenong1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"owenong1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"owenong1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"owenong1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"owenong1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"owenong1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"owenong1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"owenong1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"owenong1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"owenong1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"owenong1"},"content":"    mainClass.set(\"botbot.BotBot\")","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"owenong1"},"content":"    archiveBaseName \u003d \"BotBot\"","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"owenong1"},"content":"checkstyle {","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"owenong1"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"owenong1"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"owenong1":23,"-":40}},{"path":"data/list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"T|eat|0","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"owenong1":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"# BotBot User Guide","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"![Screenshot](/docs/Ui.png)","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"A Bot to manage events","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"## Features","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"owenong1"},"content":"### Adding an event","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"owenong1"},"content":"Add various types of events to the list","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"owenong1"},"content":"ToDo: todo \u003cname\u003e | e.g. todo eat","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"owenong1"},"content":"Deadline: deadline \u003cname\u003e /by yyyy-MM-dd HH:mm | e.g. deadline eat /by 1999-01-01 22:00","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"owenong1"},"content":"Event: event \u003cname\u003e /from yyyy-MM-dd HH:mm /to yyyy-MM-dd HH:mm | e.g. event helloo /from 1999-01-01 10:00 /to 1999-01-01 22:00","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"owenong1"},"content":"### Deleting an event","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"owenong1"},"content":"Delete the nth event from the list","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"owenong1"},"content":"Delet: delete \u003cint\u003e | delete 1","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"owenong1"},"content":"### Listing all events ","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"owenong1"},"content":"Lists all current events in the list","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"owenong1"},"content":"List: list | e.g. list","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"owenong1"},"content":"### Customising events","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"owenong1"},"content":"Various features to note down further details of events","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"owenong1"},"content":"Marking as done: mark \u003cint\u003e |  e.g. mark 1","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"owenong1"},"content":"Unmarking: unmark \u003cint\u003e | e.g. unmark 2","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"owenong1"},"content":"Setting priority of event: togglePrio \u003cint\u003e | e.g. togglePrio 3","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"owenong1"},"content":"### Deleting events","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"owenong1"},"content":"remove an event from the list","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"owenong1"},"content":"Delete: delete \u003cint\u003e | e.g. delete 2","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"owenong1"},"content":"### Finding events","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"owenong1"},"content":"Finding an event with certain names","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"owenong1"},"content":"Find: find \u003cname\u003e | e.g. find Concert","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"owenong1"},"content":"### Closing the chatbot","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"owenong1"},"content":"Exit the chatbot once done","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"owenong1"},"content":"Exit: bye | e.g. bye","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"}],"authorContributionMap":{"owenong1":42,"-":14}},{"path":"src/main/java/botbot/BotBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"package botbot;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"import botbot.ui.Ui;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"import botbot.exception.BotBotException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"import botbot.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"owenong1"},"content":"public class BotBot  {","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"owenong1"},"content":"    public static final String LIST_PATH \u003d \"data/list.txt\";","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"owenong1"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"owenong1"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"owenong1"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"owenong1"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"owenong1"},"content":"     * Returns a new instance of chatbot","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"owenong1"},"content":"     * @throws BotBotException","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"owenong1"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"owenong1"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"owenong1"},"content":"    public BotBot() throws BotBotException, IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"owenong1"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"owenong1"},"content":"        storage \u003d new Storage(BotBot.LIST_PATH);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"owenong1"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"owenong1"},"content":"        storage.load(taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"owenong1"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"owenong1"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"owenong1"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"owenong1"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"owenong1"},"content":"    public String getResponse(String input) throws BotBotException, IOException {","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"owenong1"},"content":"        return ui.getResponseAndExecute(input, taskList, storage);","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"owenong1"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"owenong1"},"content":"     * Executes the User input loop of the bot","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"owenong1"},"content":"     * !!OBSOLETE - FOR RUNNING ON COMMANDLINE","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"owenong1"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"owenong1"},"content":"     * @throws BotBotException","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"owenong1"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"owenong1"},"content":"    public void run() throws IOException, BotBotException {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"owenong1"},"content":"        BotBot bot \u003d new BotBot();","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"owenong1"},"content":"        bot.ui.run(bot.taskList, bot.storage);","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"owenong1"},"content":"        bot.storage.save(bot.taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"owenong1"},"content":"    public static void main(String[] args) throws BotBotException, IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"owenong1"},"content":"        new BotBot().run();","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"owenong1":51}},{"path":"src/main/java/botbot/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"package botbot;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"import botbot.ui.MainWindow;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"owenong1"},"content":"public class Launcher {","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"owenong1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"owenong1"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"owenong1":13}},{"path":"src/main/java/botbot/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"package botbot;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"import botbot.exception.BotBotException;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"import botbot.ui.MainWindow;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"owenong1"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"owenong1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"owenong1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"owenong1"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"owenong1"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"owenong1"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"owenong1"},"content":"public class Main extends Application{","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"owenong1"},"content":"    private BotBot botbot \u003d new BotBot();","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"owenong1"},"content":"    public Main() throws BotBotException, IOException {","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"owenong1"},"content":"    @Override","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"owenong1"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"owenong1"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"owenong1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"owenong1"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"owenong1"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"owenong1"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"owenong1"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(botbot);","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"owenong1"},"content":"            stage.show();","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"owenong1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"owenong1"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"owenong1":36}},{"path":"src/main/java/botbot/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"package botbot;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"import botbot.exception.InvalidDateException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"import botbot.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"import botbot.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"owenong1"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"owenong1"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"owenong1"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"owenong1"},"content":"    private final String path;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"owenong1"},"content":"    private final File file;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"owenong1"},"content":"    public Storage(String path) {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"owenong1"},"content":"        this.path \u003d path;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"owenong1"},"content":"        this.file \u003d new File(path);","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"owenong1"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"owenong1"},"content":"     * Loads the tasks in storage to the list","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"owenong1"},"content":"     * @param list","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"owenong1"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"owenong1"},"content":"     * @throws InvalidDateException","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"owenong1"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"owenong1"},"content":"    public void load(TaskList list) throws IOException, InvalidDateException {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"owenong1"},"content":"        boolean listCreated \u003d file.createNewFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"owenong1"},"content":"        if (!listCreated) {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"owenong1"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"owenong1"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"owenong1"},"content":"                String next \u003d s.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"owenong1"},"content":"                list.addTaskInit(Task.parseTask(next));","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"owenong1"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"owenong1"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"owenong1"},"content":"     * Saves the tasks in list to storage","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"owenong1"},"content":"     * @param list","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"owenong1"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"owenong1"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"owenong1"},"content":"    public void save(TaskList list) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"owenong1"},"content":"        if (file.delete()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"owenong1"},"content":"            file.createNewFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"owenong1"},"content":"        FileWriter fw \u003d new FileWriter(path);","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"owenong1"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"owenong1"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"owenong1"},"content":"                System.out.println(list.getFileRep(i));","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"owenong1"},"content":"                fw.write(list.getFileRep(i));","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"owenong1"},"content":"                if (i !\u003d list.size() - 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"owenong1"},"content":"                    fw.write(System.lineSeparator());","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"owenong1"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"owenong1"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"owenong1"},"content":"            fw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"owenong1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"owenong1"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"owenong1":61}},{"path":"src/main/java/botbot/exception/BotBotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"package botbot.exception;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"public abstract class BotBotException extends Exception {","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"    public BotBotException(String msg) {","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"        super(msg);","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"owenong1":7}},{"path":"src/main/java/botbot/exception/CommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"package botbot.exception;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"public class CommandException extends BotBotException {","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"    public CommandException() {","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"        super(\"Your command is unrecognized!\");","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"owenong1":7}},{"path":"src/main/java/botbot/exception/DescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"package botbot.exception;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"public class DescriptionException extends BotBotException {","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"    public DescriptionException() {","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"        super(\"Please include a description for the task!\");","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"owenong1":7}},{"path":"src/main/java/botbot/exception/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"package botbot.exception;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"public class InvalidDateException extends BotBotException {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"    public InvalidDateException() {","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"        super(\"Please use the correct date format: yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"owenong1":7}},{"path":"src/main/java/botbot/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"package botbot.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"import botbot.exception.InvalidDateException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"    String dueDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":"    LocalDateTime time;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"owenong1"},"content":"    public Deadline(String task, String dueDate) throws InvalidDateException {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"owenong1"},"content":"        super(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"owenong1"},"content":"        this.dueDate \u003d dueDate; // format: \"by \u003cdate\u003e\"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"owenong1"},"content":"        this.time \u003d Task.parseDate(dueDate);","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"owenong1"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"owenong1"},"content":"    public String getRep() {","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"owenong1"},"content":"        return String.format(\"[D]%s (by: %s)\", super.getRep(), time.format(Task.TIME_FORMAT_OUT));","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"owenong1"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"owenong1"},"content":"    public String fileRep() { return \"D|\" + super.fileRep() + \"|\" + dueDate; }","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"owenong1":20}},{"path":"src/main/java/botbot/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"package botbot.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"import botbot.exception.InvalidDateException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":"    String from;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"owenong1"},"content":"    String to;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"owenong1"},"content":"    LocalDateTime fromTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"owenong1"},"content":"    LocalDateTime toTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"owenong1"},"content":"    public Event(String task, String from, String to) throws InvalidDateException {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"owenong1"},"content":"        super(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"owenong1"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"owenong1"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"owenong1"},"content":"        this.fromTime \u003d Task.parseDate(from);","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"owenong1"},"content":"        this.toTime \u003d Task.parseDate(to);","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"owenong1"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"owenong1"},"content":"    public String getRep() {","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"owenong1"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"owenong1"},"content":"                super.getRep(), this.fromTime.format(Task.TIME_FORMAT_OUT), this.toTime.format(Task.TIME_FORMAT_OUT));","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"owenong1"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"owenong1"},"content":"    public String fileRep() { return \"E|\" + super.fileRep() + \"|\" + from + \"|\" + to; }","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"owenong1":27}},{"path":"src/main/java/botbot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"package botbot.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"import botbot.exception.InvalidDateException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"public class Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":"    String taskName;","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"owenong1"},"content":"    Boolean done \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"owenong1"},"content":"    enum Priority {","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"owenong1"},"content":"        LOW,","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"owenong1"},"content":"        HIGH","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"owenong1"},"content":"    Priority priority \u003d Priority.LOW;","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"owenong1"},"content":"    public static Task EMPTY_TASK \u003d new Task(\"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"owenong1"},"content":"    public Task(String task) {","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"owenong1"},"content":"        this.taskName \u003d task;","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"owenong1"},"content":"    public String getName() {","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"owenong1"},"content":"        return this.taskName;","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"owenong1"},"content":"    public void mark() {","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"owenong1"},"content":"        this.done \u003d true;","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"owenong1"},"content":"    public void unmark() { this.done \u003d false; }","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"owenong1"},"content":"    public void togglePrio() { this.priority \u003d (this.priority \u003d\u003d Priority.HIGH) ? Priority.LOW : Priority.HIGH; }","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"owenong1"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"owenong1"},"content":"     * Returns string format of a task","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"owenong1"},"content":"     * @return String rep","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"owenong1"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"owenong1"},"content":"    public String getRep() {","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"owenong1"},"content":"        // Returns representation of the task (including done)","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"owenong1"},"content":"        String doneChar \u003d (this.done) ? \"X\" : \" \";","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"owenong1"},"content":"        return String.format(\"[%s] %s Priority:%s \", doneChar, this.taskName, this.priority);","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"owenong1"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"owenong1"},"content":"     * Returns format for saving into file","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"owenong1"},"content":"     * @return Save rep","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"owenong1"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"owenong1"},"content":"    public String fileRep() {","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"owenong1"},"content":"        return String.format(\"%s|%d\", taskName, done ? 1 : 0);","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"owenong1"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"owenong1"},"content":"     * Reads file rep of a task and converts to Task obj","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"owenong1"},"content":"     * @param s File rep of task","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"owenong1"},"content":"     * @return Task object","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"owenong1"},"content":"     * @throws InvalidDateException","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"owenong1"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"owenong1"},"content":"    public static Task parseTask(String s) throws InvalidDateException {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"owenong1"},"content":"        String[] arr \u003d s.split(\"\\\\|\", 3);","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"owenong1"},"content":"        Task task \u003d EMPTY_TASK;","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"owenong1"},"content":"        switch(arr[0]) {","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"owenong1"},"content":"            case \"T\":","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"owenong1"},"content":"                task \u003d new ToDo(arr[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"owenong1"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"owenong1"},"content":"            case \"D\":","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"owenong1"},"content":"                task \u003d new Deadline(arr[1], arr[2].split(\"\\\\|\", 2)[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"owenong1"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"owenong1"},"content":"            case \"E\":","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"owenong1"},"content":"                task \u003d new Event(arr[1], arr[2].split(\"\\\\|\", 3)[1], arr[2].split(\"\\\\|\", 3)[2]);","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"owenong1"},"content":"                break;","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"owenong1"},"content":"        if (arr[2].startsWith(\"1\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"owenong1"},"content":"            task.mark();","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"owenong1"},"content":"        return task;","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"owenong1"},"content":"    public static DateTimeFormatter TIME_FORMAT_IN \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"owenong1"},"content":"    public static DateTimeFormatter TIME_FORMAT_OUT \u003d DateTimeFormatter.ofPattern(\"HH:mm yyyy-MM-dd\");","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"owenong1"},"content":"    public static LocalDateTime parseDate(String s) throws InvalidDateException {","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"owenong1"},"content":"        try{","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"owenong1"},"content":"            return LocalDateTime.parse(s, Task.TIME_FORMAT_IN);","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"owenong1"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"owenong1"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"owenong1":81}},{"path":"src/main/java/botbot/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"package botbot.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"import botbot.exception.BotBotException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"import botbot.exception.CommandException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"import botbot.exception.DescriptionException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"owenong1"},"content":"public class TaskList {","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"owenong1"},"content":"    ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"owenong1"},"content":"    public String addTask(String taskString) throws BotBotException {","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"owenong1"},"content":"        String[] temp \u003d taskString.split(\" \", 2);","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"owenong1"},"content":"        String taskType \u003d temp[0];","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"owenong1"},"content":"        String taskInfo \u003d temp.length \u003e 1 ? temp[1] : \"\";","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"owenong1"},"content":"        if (taskInfo.isEmpty()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"owenong1"},"content":"            throw new DescriptionException();","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"owenong1"},"content":"        switch (taskType) {","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"owenong1"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"owenong1"},"content":"                return addTask(new ToDo(taskInfo));","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"owenong1"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"owenong1"},"content":"                String[] temp2 \u003d taskInfo.split(\" /\", 2);","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"owenong1"},"content":"                return addTask(new Deadline(temp2[0], temp2[1].substring(3)));","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"owenong1"},"content":"            case \"event\":","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"owenong1"},"content":"                String[] temp3 \u003d taskInfo.split(\" /\", 3);","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"owenong1"},"content":"                return addTask(new Event(temp3[0], temp3[1].substring(5), temp3[2].substring(3)));","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"owenong1"},"content":"            default:","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"owenong1"},"content":"                throw new CommandException();","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"owenong1"},"content":"    private Task getTask(int i) {","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"owenong1"},"content":"        return this.list.get(i);","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"owenong1"},"content":"    public String getFileRep(int i) { return getTask(i).fileRep(); }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"owenong1"},"content":"    private String addTask(Task task) throws BotBotException {","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"owenong1"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"owenong1"},"content":"        output.append(String.format(\"I have added the following task:\\n%s\\n\", task.getRep()));","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"owenong1"},"content":"        this.list.add(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"owenong1"},"content":"        output.append(String.format(\"You now have %d task(s) in your list!%n\", list.size()));","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"owenong1"},"content":"        return output.toString();","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"owenong1"},"content":"    public String deleteTask(int i) {","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"owenong1"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"owenong1"},"content":"        output.append(String.format(\"I have removed the following task:\\n%s\\n\", output.append(getTask(i - 1).getRep())));","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"owenong1"},"content":"        this.list.remove(i - 1);","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"owenong1"},"content":"        output.append(String.format(\"You now have %d task(s) in your list!\", list.size()));","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"owenong1"},"content":"        return output.toString();","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"owenong1"},"content":"    public String printList() {","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"owenong1"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"owenong1"},"content":"        for (int i \u003d 1; i \u003c this.list.size() + 1; i++) {","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"owenong1"},"content":"            output.append(i).append(\". \").append(getTask(i - 1).getRep()).append(\"\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"owenong1"},"content":"        return output.toString();","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"owenong1"},"content":"    public String mark(int i) {","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"owenong1"},"content":"        Task task \u003d getTask(i - 1);","lastModifiedDate":"2024-01-26"},{"lineNumber":60,"author":{"gitId":"owenong1"},"content":"        task.mark();","lastModifiedDate":"2024-01-26"},{"lineNumber":61,"author":{"gitId":"owenong1"},"content":"        assert task.done;","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"owenong1"},"content":"        return task.getRep();","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"owenong1"},"content":"    } // Handle index exception here maybe","lastModifiedDate":"2024-01-26"},{"lineNumber":64,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"owenong1"},"content":"    public String unmark(int i) {","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"owenong1"},"content":"        Task task \u003d getTask(i - 1);","lastModifiedDate":"2024-01-26"},{"lineNumber":67,"author":{"gitId":"owenong1"},"content":"        task.unmark();","lastModifiedDate":"2024-01-26"},{"lineNumber":68,"author":{"gitId":"owenong1"},"content":"        assert !task.done;","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"owenong1"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"owenong1"},"content":"        return task.getRep();","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"owenong1"},"content":"    public String togglePrio(int i) {","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"owenong1"},"content":"        Task task \u003d getTask(i - 1);","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"owenong1"},"content":"        task.togglePrio();","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"owenong1"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"owenong1"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e 23fc76448ffdfc131a07f841abea7bfa5ed1059a","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"owenong1"},"content":"        return task.getRep();","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"owenong1"},"content":"    public void addTaskInit(Task t) {","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"owenong1"},"content":"        this.list.add(t);","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"owenong1"},"content":"    public int size() {","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"owenong1"},"content":"        return this.list.size();","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"owenong1"},"content":"    public String printFind(String s) {","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"owenong1"},"content":"        int count \u003d 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"owenong1"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"owenong1"},"content":"        for (Task task : list) {","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"owenong1"},"content":"            if (task.getName().contains(s)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"owenong1"},"content":"                output.append(count);","lastModifiedDate":"2024-02-10"},{"lineNumber":91,"author":{"gitId":"owenong1"},"content":"                output.append(\". \");","lastModifiedDate":"2024-02-10"},{"lineNumber":92,"author":{"gitId":"owenong1"},"content":"                output.append(task.getRep());","lastModifiedDate":"2024-02-10"},{"lineNumber":93,"author":{"gitId":"owenong1"},"content":"                count++;","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"owenong1"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"owenong1"},"content":"        return output.toString();","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"owenong1":98}},{"path":"src/main/java/botbot/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"package botbot.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"public class ToDo extends Task{","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"    public ToDo(String task) {","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"        super(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":"    public String getRep() {","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"owenong1"},"content":"        return \"[T]\" + super.getRep();","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"owenong1"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"owenong1"},"content":"    public String fileRep() { return \"T|\" + super.fileRep(); }","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"owenong1":15}},{"path":"src/main/java/botbot/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"package botbot.ui;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"owenong1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"owenong1"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"owenong1"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"owenong1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"owenong1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"owenong1"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"owenong1"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"owenong1"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"owenong1"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"owenong1"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"owenong1"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"owenong1"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"owenong1"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"owenong1"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"owenong1"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"owenong1"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"owenong1"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"owenong1"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"owenong1"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"owenong1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"owenong1"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"owenong1"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"owenong1"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"owenong1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"owenong1"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"owenong1"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"owenong1"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"owenong1"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"owenong1"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"owenong1"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"owenong1"},"content":"    private void flip() {","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"owenong1"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"owenong1"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"owenong1"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"owenong1"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"owenong1"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"owenong1"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"owenong1"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"owenong1"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"owenong1"},"content":"        db.flip();","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"owenong1"},"content":"        return db;","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"owenong1":61}},{"path":"src/main/java/botbot/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"package botbot.ui;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"import botbot.BotBot;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"import botbot.exception.BotBotException;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"owenong1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"owenong1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"owenong1"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"owenong1"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"owenong1"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"owenong1"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"owenong1"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"owenong1"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"owenong1"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"owenong1"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"owenong1"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"owenong1"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"owenong1"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"owenong1"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"owenong1"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"owenong1"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"owenong1"},"content":"    private BotBot bot;","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"owenong1"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"owenong1"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"owenong1"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"owenong1"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"owenong1"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"owenong1"},"content":"    public void setDuke(BotBot d) {","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"owenong1"},"content":"        bot \u003d d;","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"owenong1"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"owenong1"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"owenong1"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"owenong1"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"owenong1"},"content":"    @FXML","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"owenong1"},"content":"    private void handleUserInput() throws BotBotException, IOException {","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"owenong1"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"owenong1"},"content":"        String response \u003d bot.getResponse(input);","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"owenong1"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"owenong1"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"owenong1"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"owenong1"},"content":"        );","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"owenong1"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"owenong1":56}},{"path":"src/main/java/botbot/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"package botbot.ui;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"import botbot.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"import botbot.exception.BotBotException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"import botbot.task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"owenong1"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"owenong1"},"content":"    public String getResponseAndExecute(String input, TaskList list, Storage storage) throws BotBotException, IOException {","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"owenong1"},"content":"        if (input.startsWith(\"bye\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"owenong1"},"content":"            storage.save(list);","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"owenong1"},"content":"            return \"Goodbye! See you soon!\\nYour list has been saved! You may now exit the program\";","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"owenong1"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"owenong1"},"content":"            return \"Good job on completing the task:\\n\" + list.mark(Integer.parseInt(input.split(\" \", 2)[1]));","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"owenong1"},"content":"        } else if (input.startsWith(\"unmark\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"owenong1"},"content":"            return \"I have unmarked a task:\\n\" + list.unmark(Integer.parseInt(input.split(\" \", 2)[1]));","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"owenong1"},"content":"        } else if (input.startsWith(\"togglePrio\")) {","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"owenong1"},"content":"                return \"I have toggled the priority of:\\n\" + list.togglePrio(Integer.parseInt(input.split(\" \", 2)[1]));","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"owenong1"},"content":"        } else if (input.startsWith(\"list\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"owenong1"},"content":"            return \"These are the tasks in your list:\\n\" + list.printList();","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"owenong1"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"owenong1"},"content":"            return list.deleteTask(Integer.parseInt(input.split(\" \", 2)[1]));","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"owenong1"},"content":"        } else if (input.startsWith(\"find\")){","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"owenong1"},"content":"            return \"These are the matching tasks in your list:\\n\" + list.printFind(input.split(\" \", 2)[1]);","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"owenong1"},"content":"        } else {","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"owenong1"},"content":"            return list.addTask(input);","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"owenong1"},"content":"    // Mostly obsolete code from when it was run on commandline","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"owenong1"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"owenong1"},"content":"     * User interface loop to get user input","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"owenong1"},"content":"     * @param list","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"owenong1"},"content":"     * @param storage","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"owenong1"},"content":"     * @throws BotBotException","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"owenong1"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"owenong1"},"content":"    public void run(TaskList list, Storage storage) throws BotBotException {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"owenong1"},"content":"        greet();","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"owenong1"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"owenong1"},"content":"        scanner.useDelimiter(\"\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"owenong1"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"owenong1"},"content":"            String nextTask \u003d scanner.next();","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"owenong1"},"content":"            divider();","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"owenong1"},"content":"            // Logic sequence","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"owenong1"},"content":"            if (nextTask.startsWith(\"bye\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"owenong1"},"content":"                exit();","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"owenong1"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"owenong1"},"content":"            } else if (nextTask.startsWith(\"mark\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"owenong1"},"content":"                System.out.println(\"Good job on completing the task:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"owenong1"},"content":"                System.out.println(Integer.parseInt(nextTask.split(\" \", 2)[1]));","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"owenong1"},"content":"                list.mark(Integer.parseInt(nextTask.split(\" \", 2)[1]));","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"owenong1"},"content":"            } else if (nextTask.startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"owenong1"},"content":"                System.out.println(\"I have unmarked a task:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"owenong1"},"content":"                list.unmark(Integer.parseInt(nextTask.split(\" \", 2)[1]));","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"owenong1"},"content":"            } else if (nextTask.startsWith(\"list\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"owenong1"},"content":"                System.out.println(\"These are the tasks in your list:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"owenong1"},"content":"                list.printList();","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"owenong1"},"content":"            } else if (nextTask.startsWith(\"delete\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"owenong1"},"content":"                list.deleteTask(Integer.parseInt(nextTask.split(\" \", 2)[1]));","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"owenong1"},"content":"            } else if (nextTask.startsWith(\"find\")){","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"owenong1"},"content":"                System.out.println(\"These are the matching tasks in your list:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"owenong1"},"content":"                list.printFind(nextTask.split(\" \", 2)[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"owenong1"},"content":"            } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"owenong1"},"content":"                list.addTask(nextTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"owenong1"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"owenong1"},"content":"            divider();","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"owenong1"},"content":"        scanner.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"owenong1"},"content":"    // Print functionalities","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"owenong1"},"content":"    private void print(String string) {","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"owenong1"},"content":"        System.out.println(string);","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"owenong1"},"content":"    private void divider() {","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"owenong1"},"content":"        print(\"########################################\");","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"owenong1"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"owenong1"},"content":"     * Prints the startup message","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"owenong1"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"owenong1"},"content":"    public void greet() {","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"owenong1"},"content":"        divider();","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"owenong1"},"content":"        print(\"I am BotBot!\\nWhat can I do for you?\");","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"owenong1"},"content":"        divider();","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"owenong1"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"owenong1"},"content":"     * prints the exit message","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"owenong1"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"owenong1"},"content":"    public void exit() {","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"owenong1"},"content":"        print(\"Goodbye! See you soon!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"owenong1"},"content":"        divider();","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"owenong1":98}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"owenong1"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"owenong1"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"owenong1"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"owenong1"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"owenong1"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"owenong1"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"owenong1"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"owenong1"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"owenong1":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"owenong1"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"botbot.ui.MainWindow\"\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"owenong1"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"owenong1"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"owenong1"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"owenong1"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"owenong1"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"owenong1"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"owenong1"},"content":"      \u003c/content\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"owenong1"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"owenong1"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"owenong1"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"owenong1":19}},{"path":"src/test/java/botbot/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"package botbot.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"import botbot.exception.InvalidDateException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":"public class TaskTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"owenong1"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"owenong1"},"content":"    public void getRepToDoTest() {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"owenong1"},"content":"        Task test \u003d new ToDo(\"test\");","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"owenong1"},"content":"        assertEquals(test.getRep(), \"[T][ ] test\");","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"owenong1"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"owenong1"},"content":"    public void getRepDeadlineTest() throws InvalidDateException {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"owenong1"},"content":"        Task test \u003d new Deadline(\"test\", \"2022-02-02 14:00\");","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"owenong1"},"content":"        assertEquals(test.getRep(), \"[D][ ] test (by: 14:00 2022-02-02)\");","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"owenong1":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"todo borrow book","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"todo eat","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"todo have fun","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"mark 1","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":"bye","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"owenong1":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"owenong1"},"content":"java -classpath ..\\bin BotBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"owenong1":1,"-":20}}]
