[{"path":"src/main/java/gops.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bgopi23"},"content":"import java.util.List;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"bgopi23"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"public class gops {","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"    public static class Todo {","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"        protected String itemDescription;","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"bgopi23"},"content":"        protected boolean todoStatus \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"bgopi23"},"content":"        public Todo(String itemDescription) {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"bgopi23"},"content":"            this.itemDescription \u003d itemDescription;","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"bgopi23"},"content":"        public String doneOrNot() {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"bgopi23"},"content":"            if (todoStatus) {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"bgopi23"},"content":"                return \"X\";","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"bgopi23"},"content":"            } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"bgopi23"},"content":"                return \" \";","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"bgopi23"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"bgopi23"},"content":"        public void Printer() {","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"bgopi23"},"content":"            System.out.println(\"  \" + \"[T] \" + \"[\" + this.doneOrNot() + \"] \" + itemDescription);","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"bgopi23"},"content":"        public String stringPrinter() {","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"bgopi23"},"content":"            return \" \" + \"[T] \" + \"[\" + this.doneOrNot() + \"] \" + itemDescription;","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"bgopi23"},"content":"    public static class Deadline extends Todo {","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"bgopi23"},"content":"        protected String todoDescription;","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"bgopi23"},"content":"        protected boolean todoStatus \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"bgopi23"},"content":"        protected String dayTodoBy;","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"bgopi23"},"content":"        public Deadline(String todoDescription, String dayTodoBy) {","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"bgopi23"},"content":"            super(todoDescription);","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"bgopi23"},"content":"            this.dayTodoBy \u003d dayTodoBy;","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"bgopi23"},"content":"        @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"bgopi23"},"content":"        public void Printer() {","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"bgopi23"},"content":"            System.out.println(\"  \" + \"[D] \" + \"[\" + this.doneOrNot() + \"] \" + itemDescription + \"(by:\" + dayTodoBy + \")\");","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"bgopi23"},"content":"        @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"bgopi23"},"content":"        public String stringPrinter() {","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"bgopi23"},"content":"            return \" \" + \"[D] \" + \"[\" + this.doneOrNot() + \"] \" + itemDescription + \"(by:\" + dayTodoBy + \")\";","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"bgopi23"},"content":"    public static class Event extends Todo {","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"bgopi23"},"content":"        protected String todoDescription;","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"bgopi23"},"content":"        protected boolean todoStatus \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"bgopi23"},"content":"        protected String startBy;","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"bgopi23"},"content":"        protected String endBy;","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"bgopi23"},"content":"        public Event(String todoDescription, String startBy, String endBy) {","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"bgopi23"},"content":"            super(todoDescription);","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"bgopi23"},"content":"            this.startBy \u003d startBy;","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"bgopi23"},"content":"            this.endBy  \u003d endBy;","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"bgopi23"},"content":"        @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"bgopi23"},"content":"        public void Printer() {","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"bgopi23"},"content":"            System.out.println(\"  \" + \"[E] \" + \"[\" + this.doneOrNot() + \"] \" + itemDescription + \"(from:\" + startBy + \"to:\" + endBy + \")\");","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"bgopi23"},"content":"        @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"bgopi23"},"content":"        public String stringPrinter() {","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"bgopi23"},"content":"            return \" \" + \"[E] \" + \"[\" + this.doneOrNot() + \"] \" + itemDescription + \"(from:\" + startBy + \"to:\" + endBy + \")\";","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"bgopi23"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-22"},{"lineNumber":69,"author":{"gitId":"bgopi23"},"content":"        Scanner inputTaker \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-22"},{"lineNumber":70,"author":{"gitId":"bgopi23"},"content":"        Todo[] toDoList \u003d new Todo[100];","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"bgopi23"},"content":"        int messageCount \u003d 0;","lastModifiedDate":"2024-01-22"},{"lineNumber":72,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":73,"author":{"gitId":"bgopi23"},"content":"        System.out.println(\"Hello! I\u0027m gops\");","lastModifiedDate":"2024-01-22"},{"lineNumber":74,"author":{"gitId":"bgopi23"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-01-22"},{"lineNumber":75,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":76,"author":{"gitId":"bgopi23"},"content":"        String userReply \u003d inputTaker.nextLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":77,"author":{"gitId":"bgopi23"},"content":"        while (userReply !\u003d null \u0026\u0026 !userReply.equals(\"bye\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":78,"author":{"gitId":"bgopi23"},"content":"            if (userReply.contains(\"todo\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":79,"author":{"gitId":"bgopi23"},"content":"                String[] splitter \u003d userReply.split(\" \", 2);","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"bgopi23"},"content":"                try {","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"bgopi23"},"content":"                    if (splitter.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":82,"author":{"gitId":"bgopi23"},"content":"                        throw new gopsException();","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"bgopi23"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":84,"author":{"gitId":"bgopi23"},"content":"                    Todo todoObject \u003d new Todo(splitter[1]);","lastModifiedDate":"2024-01-23"},{"lineNumber":85,"author":{"gitId":"bgopi23"},"content":"                    toDoList[messageCount] \u003d todoObject;","lastModifiedDate":"2024-01-23"},{"lineNumber":86,"author":{"gitId":"bgopi23"},"content":"                    messageCount +\u003d 1;","lastModifiedDate":"2024-01-23"},{"lineNumber":87,"author":{"gitId":"bgopi23"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":88,"author":{"gitId":"bgopi23"},"content":"                    todoObject.Printer();","lastModifiedDate":"2024-01-23"},{"lineNumber":89,"author":{"gitId":"bgopi23"},"content":"                    System.out.println(\"Now you have \" + messageCount + \" tasks in the list.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":90,"author":{"gitId":"bgopi23"},"content":"                    userReply \u003d inputTaker.nextLine();","lastModifiedDate":"2024-01-23"},{"lineNumber":91,"author":{"gitId":"bgopi23"},"content":"                } catch (gopsException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"bgopi23"},"content":"                    System.out.println(\"Please follow the format for setting todo\\ntodo [your-task-here]\");","lastModifiedDate":"2024-01-24"},{"lineNumber":93,"author":{"gitId":"bgopi23"},"content":"                    userReply \u003d inputTaker.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":94,"author":{"gitId":"bgopi23"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":95,"author":{"gitId":"bgopi23"},"content":"            }  else if (userReply.contains(\"deadline\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":96,"author":{"gitId":"bgopi23"},"content":"                String[] firstSplitter \u003d userReply.split(\" \", 2);","lastModifiedDate":"2024-01-23"},{"lineNumber":97,"author":{"gitId":"bgopi23"},"content":"                try {","lastModifiedDate":"2024-01-24"},{"lineNumber":98,"author":{"gitId":"bgopi23"},"content":"                    if (firstSplitter.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":99,"author":{"gitId":"bgopi23"},"content":"                        throw new gopsException();","lastModifiedDate":"2024-01-24"},{"lineNumber":100,"author":{"gitId":"bgopi23"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":101,"author":{"gitId":"bgopi23"},"content":"                    String[] seocndSplitter \u003d firstSplitter[1].split(\"/by\", 2);","lastModifiedDate":"2024-01-23"},{"lineNumber":102,"author":{"gitId":"bgopi23"},"content":"                    Deadline deadlineObject \u003d new Deadline(seocndSplitter[0], seocndSplitter[1]);","lastModifiedDate":"2024-01-23"},{"lineNumber":103,"author":{"gitId":"bgopi23"},"content":"                    toDoList[messageCount] \u003d deadlineObject;","lastModifiedDate":"2024-01-23"},{"lineNumber":104,"author":{"gitId":"bgopi23"},"content":"                    messageCount +\u003d 1;","lastModifiedDate":"2024-01-23"},{"lineNumber":105,"author":{"gitId":"bgopi23"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":106,"author":{"gitId":"bgopi23"},"content":"                    deadlineObject.Printer();","lastModifiedDate":"2024-01-23"},{"lineNumber":107,"author":{"gitId":"bgopi23"},"content":"                    System.out.println(\"Now you have \" + messageCount + \" tasks in the list.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":108,"author":{"gitId":"bgopi23"},"content":"                    userReply \u003d inputTaker.nextLine();","lastModifiedDate":"2024-01-23"},{"lineNumber":109,"author":{"gitId":"bgopi23"},"content":"                } catch (gopsException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":110,"author":{"gitId":"bgopi23"},"content":"                    System.out.println(\"Please follow the format for setting deadlines\\ndeadline [your-task-here] /by [deadline-of-your-task]\");","lastModifiedDate":"2024-01-24"},{"lineNumber":111,"author":{"gitId":"bgopi23"},"content":"                    userReply \u003d inputTaker.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":112,"author":{"gitId":"bgopi23"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":113,"author":{"gitId":"bgopi23"},"content":"            } else if (userReply.contains(\"event\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":114,"author":{"gitId":"bgopi23"},"content":"                String[] firstSplitter \u003d userReply.split(\" \", 2);","lastModifiedDate":"2024-01-23"},{"lineNumber":115,"author":{"gitId":"bgopi23"},"content":"                try {","lastModifiedDate":"2024-01-24"},{"lineNumber":116,"author":{"gitId":"bgopi23"},"content":"                    if (firstSplitter.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":117,"author":{"gitId":"bgopi23"},"content":"                        throw new gopsException();","lastModifiedDate":"2024-01-24"},{"lineNumber":118,"author":{"gitId":"bgopi23"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":119,"author":{"gitId":"bgopi23"},"content":"                    String[] secondSplitter \u003d firstSplitter[1].split(\"/from\", 2);","lastModifiedDate":"2024-01-23"},{"lineNumber":120,"author":{"gitId":"bgopi23"},"content":"                    String[] thirdSplitter \u003d secondSplitter[1].split(\"/to\", 2);","lastModifiedDate":"2024-01-23"},{"lineNumber":121,"author":{"gitId":"bgopi23"},"content":"                    Event eventObject \u003d new Event(secondSplitter[0], thirdSplitter[0], thirdSplitter[1]);","lastModifiedDate":"2024-01-23"},{"lineNumber":122,"author":{"gitId":"bgopi23"},"content":"                    toDoList[messageCount] \u003d eventObject;","lastModifiedDate":"2024-01-23"},{"lineNumber":123,"author":{"gitId":"bgopi23"},"content":"                    messageCount +\u003d 1;","lastModifiedDate":"2024-01-23"},{"lineNumber":124,"author":{"gitId":"bgopi23"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":125,"author":{"gitId":"bgopi23"},"content":"                    eventObject.Printer();","lastModifiedDate":"2024-01-23"},{"lineNumber":126,"author":{"gitId":"bgopi23"},"content":"                    System.out.println(\"Now you have \" + messageCount + \" tasks in the list.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":127,"author":{"gitId":"bgopi23"},"content":"                    userReply \u003d inputTaker.nextLine();","lastModifiedDate":"2024-01-23"},{"lineNumber":128,"author":{"gitId":"bgopi23"},"content":"                } catch (gopsException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":129,"author":{"gitId":"bgopi23"},"content":"                    System.out.println(\"Please follow the format for setting events\\nevent [your-task-here] /from [start-time-of-your-task] /by [end-time-of-your-task]\");","lastModifiedDate":"2024-01-24"},{"lineNumber":130,"author":{"gitId":"bgopi23"},"content":"                    userReply \u003d inputTaker.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":131,"author":{"gitId":"bgopi23"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":132,"author":{"gitId":"bgopi23"},"content":"            } else if (userReply.contains(\"unmark\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":133,"author":{"gitId":"bgopi23"},"content":"                try {","lastModifiedDate":"2024-01-24"},{"lineNumber":134,"author":{"gitId":"bgopi23"},"content":"                    if (userReply.length() \u003d\u003d 6) {","lastModifiedDate":"2024-01-24"},{"lineNumber":135,"author":{"gitId":"bgopi23"},"content":"                        throw new gopsException();","lastModifiedDate":"2024-01-24"},{"lineNumber":136,"author":{"gitId":"bgopi23"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":137,"author":{"gitId":"bgopi23"},"content":"                    int toDoListIndex \u003d Integer.parseInt(userReply.substring(userReply.length() - 1)) - 1;","lastModifiedDate":"2024-01-23"},{"lineNumber":138,"author":{"gitId":"bgopi23"},"content":"                    toDoList[toDoListIndex].todoStatus \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":139,"author":{"gitId":"bgopi23"},"content":"                    System.out.println(\"OK! I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":140,"author":{"gitId":"bgopi23"},"content":"                    System.out.println(\"[\" + toDoList[toDoListIndex].doneOrNot() + \"] \" + toDoList[toDoListIndex].itemDescription);","lastModifiedDate":"2024-01-23"},{"lineNumber":141,"author":{"gitId":"bgopi23"},"content":"                    userReply \u003d inputTaker.nextLine();","lastModifiedDate":"2024-01-23"},{"lineNumber":142,"author":{"gitId":"bgopi23"},"content":"                } catch (gopsException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":143,"author":{"gitId":"bgopi23"},"content":"                    System.out.println(\"Please follow the format for unmarking tasks\\nunmark [task-number]\");","lastModifiedDate":"2024-01-24"},{"lineNumber":144,"author":{"gitId":"bgopi23"},"content":"                    userReply \u003d inputTaker.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":145,"author":{"gitId":"bgopi23"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":146,"author":{"gitId":"bgopi23"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":147,"author":{"gitId":"bgopi23"},"content":"            else if (userReply.contains(\"mark\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":148,"author":{"gitId":"bgopi23"},"content":"                try {","lastModifiedDate":"2024-01-24"},{"lineNumber":149,"author":{"gitId":"bgopi23"},"content":"                    if (userReply.length() \u003d\u003d 4) {","lastModifiedDate":"2024-01-24"},{"lineNumber":150,"author":{"gitId":"bgopi23"},"content":"                        throw new gopsException();","lastModifiedDate":"2024-01-24"},{"lineNumber":151,"author":{"gitId":"bgopi23"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":152,"author":{"gitId":"bgopi23"},"content":"                    int toDoListIndex \u003d  Integer.parseInt(userReply.substring(userReply.length() -1)) - 1;","lastModifiedDate":"2024-01-23"},{"lineNumber":153,"author":{"gitId":"bgopi23"},"content":"                    toDoList[toDoListIndex].todoStatus \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":154,"author":{"gitId":"bgopi23"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":155,"author":{"gitId":"bgopi23"},"content":"                    toDoList[toDoListIndex].Printer();","lastModifiedDate":"2024-01-23"},{"lineNumber":156,"author":{"gitId":"bgopi23"},"content":"                    userReply \u003d inputTaker.nextLine();","lastModifiedDate":"2024-01-23"},{"lineNumber":157,"author":{"gitId":"bgopi23"},"content":"                } catch (gopsException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":158,"author":{"gitId":"bgopi23"},"content":"                    System.out.println(\"Please follow the format for marking tasks as done\\nmark [task-number]\");","lastModifiedDate":"2024-01-24"},{"lineNumber":159,"author":{"gitId":"bgopi23"},"content":"                    userReply \u003d inputTaker.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":160,"author":{"gitId":"bgopi23"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":161,"author":{"gitId":"bgopi23"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":162,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":163,"author":{"gitId":"bgopi23"},"content":"            else if (userReply.equals(\"list\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":164,"author":{"gitId":"bgopi23"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":165,"author":{"gitId":"bgopi23"},"content":"                for (int i \u003d 0; i \u003c messageCount; i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":166,"author":{"gitId":"bgopi23"},"content":"                    System.out.println(i + 1 + toDoList[i].stringPrinter());","lastModifiedDate":"2024-01-23"},{"lineNumber":167,"author":{"gitId":"bgopi23"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":168,"author":{"gitId":"bgopi23"},"content":"                userReply \u003d inputTaker.nextLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":169,"author":{"gitId":"bgopi23"},"content":"            } else if (userReply.contains(\"delete\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":170,"author":{"gitId":"bgopi23"},"content":"                try {","lastModifiedDate":"2024-01-24"},{"lineNumber":171,"author":{"gitId":"bgopi23"},"content":"                    if (userReply.length() \u003d\u003d 6) {","lastModifiedDate":"2024-01-24"},{"lineNumber":172,"author":{"gitId":"bgopi23"},"content":"                        throw new gopsException();","lastModifiedDate":"2024-01-24"},{"lineNumber":173,"author":{"gitId":"bgopi23"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":174,"author":{"gitId":"bgopi23"},"content":"                    String[] splitter \u003d userReply.split(\" \", 2);","lastModifiedDate":"2024-01-24"},{"lineNumber":175,"author":{"gitId":"bgopi23"},"content":"                    int listIndex \u003d Integer.parseInt(splitter[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":176,"author":{"gitId":"bgopi23"},"content":"                    Todo deletedTask \u003d toDoList[listIndex - 1];","lastModifiedDate":"2024-01-24"},{"lineNumber":177,"author":{"gitId":"bgopi23"},"content":"                    toDoList[listIndex - 1] \u003d null;","lastModifiedDate":"2024-01-24"},{"lineNumber":178,"author":{"gitId":"bgopi23"},"content":"                    for (int i \u003d listIndex; i \u003c messageCount; i++) {","lastModifiedDate":"2024-01-24"},{"lineNumber":179,"author":{"gitId":"bgopi23"},"content":"                        toDoList[i - 1] \u003d toDoList[i];","lastModifiedDate":"2024-01-24"},{"lineNumber":180,"author":{"gitId":"bgopi23"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":181,"author":{"gitId":"bgopi23"},"content":"                    System.out.println(\"I\u0027ve deleted this task\");","lastModifiedDate":"2024-01-24"},{"lineNumber":182,"author":{"gitId":"bgopi23"},"content":"                    System.out.println(\" \" + deletedTask.stringPrinter());","lastModifiedDate":"2024-01-24"},{"lineNumber":183,"author":{"gitId":"bgopi23"},"content":"                    messageCount -\u003d 1;","lastModifiedDate":"2024-01-24"},{"lineNumber":184,"author":{"gitId":"bgopi23"},"content":"                    System.out.println(\"Here are the remaining \" + messageCount + \" task/s in your list:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":185,"author":{"gitId":"bgopi23"},"content":"                    for (int i \u003d 0; i \u003c messageCount; i++) {","lastModifiedDate":"2024-01-24"},{"lineNumber":186,"author":{"gitId":"bgopi23"},"content":"                        System.out.println(i + 1 + toDoList[i].stringPrinter());","lastModifiedDate":"2024-01-24"},{"lineNumber":187,"author":{"gitId":"bgopi23"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":188,"author":{"gitId":"bgopi23"},"content":"                    userReply \u003d inputTaker.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":189,"author":{"gitId":"bgopi23"},"content":"                } catch (gopsException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":190,"author":{"gitId":"bgopi23"},"content":"                    System.out.println(\"Please follow the format for deleting tasks\\ndelete [task-number]\");","lastModifiedDate":"2024-01-24"},{"lineNumber":191,"author":{"gitId":"bgopi23"},"content":"                    userReply \u003d inputTaker.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":192,"author":{"gitId":"bgopi23"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":193,"author":{"gitId":"bgopi23"},"content":"            } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":194,"author":{"gitId":"bgopi23"},"content":"                System.out.println(\"Please choose from the available prompts\\n[todo/deadline/event/mark/unmark/list/bye]\");","lastModifiedDate":"2024-01-24"},{"lineNumber":195,"author":{"gitId":"bgopi23"},"content":"                userReply \u003d inputTaker.nextLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":196,"author":{"gitId":"bgopi23"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":197,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":198,"author":{"gitId":"bgopi23"},"content":"        if (userReply.equals(\"bye\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":199,"author":{"gitId":"bgopi23"},"content":"            System.out.print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":200,"author":{"gitId":"bgopi23"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":201,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":202,"author":{"gitId":"bgopi23"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"bgopi23":202}},{"path":"src/main/java/gopsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bgopi23"},"content":"public class gopsException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"bgopi23"},"content":"    public gopsException() {","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"bgopi23"},"content":"        super();","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"bgopi23"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"bgopi23"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"bgopi23"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"bgopi23":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bgopi23"},"content":"hi","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"bgopi23"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"bgopi23":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"bgopi23"},"content":"java -classpath ../bin gops \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bgopi23":1,"-":37}}]
