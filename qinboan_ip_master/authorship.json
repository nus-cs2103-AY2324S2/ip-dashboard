[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"qinboan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"qinboan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"qinboan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"qinboan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"qinboan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"qinboan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"qinboan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"qinboan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"qinboan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"qinboan"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"qinboan"},"content":"mainClassName \u003d \u0027duke.Duke\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"qinboan"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"qinboan":19,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"D | 1 | return book | 2024-02-24","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"E | 0 | project meeting | 2024-02-24 14:00 | 2024-02-24 16:00","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"T | 0 | read book","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":"F | 1 | reading the sales report | 2 hours","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"qinboan":4}},{"path":"data/test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"T | 0 | read book","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"D | 0 | return book | 2024-02-24","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"E | 0 | project meeting | 2024-02-24 14:00 | 2024-02-24 16:00","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"qinboan":3}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":" * Represents a deadline task in the Duke application.","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":" * A deadline task is a task with a deadline","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":" *","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":" * @author Qin Boan","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":"    private LocalDate byDate;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"     * Creates a new Deadline instance.","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"qinboan"},"content":"     * @throws DukeException If the provided deadline is in an invalid format.","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"qinboan"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"qinboan"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"qinboan"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"qinboan"},"content":"            this.byDate \u003d LocalDate.parse(by, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"qinboan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"qinboan"},"content":"            // Handle exception or set a default value if the date is in the wrong format","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"qinboan"},"content":"            throw new DukeException(\"Invalid date format (yyyy-mm-dd).\");","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"qinboan"},"content":"     * Returns a formatted string of the deadline for display.","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"qinboan"},"content":"     * @return A formatted string representing the deadline.","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"qinboan"},"content":"    public String getBy() {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"qinboan"},"content":"        return byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"qinboan"},"content":"     * Returns a formatted string of the deadline for file storage","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"qinboan"},"content":"     * @return A formatted string representing the deadline.","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"qinboan"},"content":"    public String getByForFile() {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"qinboan"},"content":"        return byDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"qinboan"},"content":"     * Returns a formatted string for display.","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"qinboan"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"qinboan"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"qinboan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"qinboan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getBy() + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"qinboan":59}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"qinboan"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"qinboan"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"qinboan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"qinboan"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"qinboan"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"qinboan"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"qinboan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"qinboan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"qinboan"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"qinboan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"qinboan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"qinboan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"qinboan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"qinboan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"qinboan"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"qinboan"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"qinboan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"qinboan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"qinboan"},"content":"    private void flip() {","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"qinboan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"qinboan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"qinboan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"qinboan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"qinboan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"qinboan"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"qinboan"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"qinboan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"qinboan"},"content":"        db.flip();","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"qinboan"},"content":"        return db;","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"qinboan":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":" * Duke is the main class for the Duke chatbot application.","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":" * It initializes the application and starts the interaction with the user.","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":" *","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":" * @author Qin Boan","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":"public class Duke {","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"     * Constructs a new Duke object.","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"    public Duke() {","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"        String filePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"qinboan"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"qinboan"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"qinboan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"qinboan"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"qinboan"},"content":"            tasks \u003d new TaskList(); // Start with an empty TaskList if loading fails","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"qinboan"},"content":"     * Runs the Duke application. This method reads and processes user input","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"qinboan"},"content":"     * until the application is exited.","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"qinboan"},"content":"    public void run() {","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"qinboan"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"qinboan"},"content":"        while (true) {","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"qinboan"},"content":"            try {","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"qinboan"},"content":"                String command \u003d ui.readCommand();","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"qinboan"},"content":"                // Create a Parser instance and parse the command","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"qinboan"},"content":"                Parser parser \u003d new Parser(tasks, ui, storage);","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"qinboan"},"content":"                parser.parse(command);","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"qinboan"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"qinboan"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"qinboan"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"qinboan"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"qinboan"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"qinboan"},"content":"            assert !input.isEmpty() : \"Input cannot be empty.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"qinboan"},"content":"            Parser parser \u003d new Parser(tasks, ui, storage);","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"qinboan"},"content":"            return parser.parse(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"qinboan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"qinboan"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"qinboan"},"content":"     * The main entry point for the Duke application.","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"qinboan"},"content":"     * @param args Command line arguments (not used).","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"qinboan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"qinboan"},"content":"        new Duke().run();","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"qinboan":65}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":" * Represents exceptions specific to the Duke application.","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":" *","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":" * @author Qin Boan","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":"     * Constructs a new DukeException with the specified detail message.","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":"     * @param message The detail message.","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"qinboan":18}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":" * Represents an event task in the Duke application.","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":" * An event is a task that starts at a specific time and ends at a specific time.","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":" *","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":" * @author Qin Boan","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"    private LocalDateTime start;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"    private LocalDateTime end;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":"     * Constructs an Event task with the specified description, start time, and end time.","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"qinboan"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"qinboan"},"content":"     * @param start The start time of the event in the format \"yyyy-MM-dd HH:mm\".","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"qinboan"},"content":"     * @param end The end time of the event in the format \"yyyy-MM-dd HH:mm\".","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"qinboan"},"content":"     * @throws DukeException If the provided start or end time is in an invalid format.","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"qinboan"},"content":"    public Event(String description, String start, String end) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"qinboan"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"qinboan"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"qinboan"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"qinboan"},"content":"            this.start \u003d LocalDateTime.parse(start, formatter);","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"qinboan"},"content":"            this.end \u003d LocalDateTime.parse(end, formatter);","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"qinboan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"qinboan"},"content":"            throw new DukeException(\"Invalid datetime format (yyyy-MM-dd HH:mm).\");","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"qinboan"},"content":"     * Returns the formatted start time of the event.","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"qinboan"},"content":"     * @return A string representing the start time formatted as \"MMM d yyyy HH:mm\".","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"qinboan"},"content":"    public String getStart() {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"qinboan"},"content":"        return start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"qinboan"},"content":"     * Returns the formatted end time of the event.","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"qinboan"},"content":"     * @return A string representing the end time formatted as \"MMM d yyyy HH:mm\".","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"qinboan"},"content":"    public String getEnd() {","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"qinboan"},"content":"        return end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"qinboan"},"content":"     * Returns the start time of the event formatted for file storage.","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"qinboan"},"content":"     * @return A string representing the start time formatted as \"yyyy-MM-dd HH:mm\".","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"qinboan"},"content":"    public String getStartForFile() {","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"qinboan"},"content":"        return start.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"qinboan"},"content":"     * Returns the end time of the event formatted for file storage.","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"qinboan"},"content":"     * @return A string representing the end time formatted as \"yyyy-MM-dd HH:mm\".","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"qinboan"},"content":"    public String getEndForFile() {","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"qinboan"},"content":"        return end.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"qinboan"},"content":"     * Returns a string representation of the event task, including its type, description,","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"qinboan"},"content":"     * and start and end times.","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"qinboan"},"content":"     * @return A string representation of the event task.","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"qinboan"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"qinboan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"qinboan"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + getStart() + \" to: \" + getEnd() + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"qinboan":83}},{"path":"src/main/java/duke/FixedDuration.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":" * Represents a fixed duration task in the Duke application.","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":" * A fixed duration task is an unscheduled task with a fixed duration.","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":" *","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":" * @author Qin Boan","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":"public class FixedDuration extends Task {","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":"    protected String duration;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"     * Constructs a fixed duration task with the given description and duration.","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"     * @param duration    The fixed duration of the task.","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":"    public FixedDuration(String description, String duration) {","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"qinboan"},"content":"        super(description);","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"qinboan"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"qinboan"},"content":"     * Returns a string representation of the fixed duration task.","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"qinboan"},"content":"     * @return A string representation of the fixed duration task.","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"qinboan"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"qinboan"},"content":"    public String toString() {","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"qinboan"},"content":"        return \"[F]\" + super.toString() + \" (for: \" + this.duration + \")\";","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"qinboan":33}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":" *","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":" * @author Qin Boan","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":"public class Launcher {","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"qinboan":14}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":" * A GUI for duke.Duke using FXML.","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":" *","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":" * @author Qin Boan","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"qinboan"},"content":"     * Starts the Duke GUI application by loading the main FXML layout and setting up the primary stage.","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"qinboan"},"content":"     * @param stage The primary stage for this application.","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"qinboan"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"qinboan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"qinboan"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"qinboan"},"content":"            assert duke !\u003d null : \"Duke instance is null.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"qinboan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"qinboan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"qinboan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"qinboan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"qinboan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"qinboan"},"content":"            stage.show();","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"qinboan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"qinboan"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"qinboan":40}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"qinboan"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"qinboan"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"qinboan"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"qinboan"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"qinboan"},"content":"    private boolean isWelcomeSent \u003d false;","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"qinboan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/img_5562.png\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"qinboan"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/img_7470.png\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"qinboan"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"qinboan"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"qinboan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"qinboan"},"content":"        sendWelcome();","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"qinboan"},"content":"     * Creates and sends the welcome message if it hasn\u0027t been sent yet.","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"qinboan"},"content":"    private void sendWelcome() {","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"qinboan"},"content":"        if (!isWelcomeSent) {","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"qinboan"},"content":"            String welcomeMsg \u003d \"Hi! I\u0027m BernardBot\\nWhat can I do for you?\";","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"qinboan"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"qinboan"},"content":"                    DialogBox.getDukeDialog(welcomeMsg, dukeImage)","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"qinboan"},"content":"            );","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"qinboan"},"content":"            isWelcomeSent \u003d true; // Set the flag to true","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"qinboan"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"qinboan"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"qinboan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"qinboan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"qinboan"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"qinboan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"qinboan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"qinboan"},"content":"        assert input !\u003d null \u0026\u0026 !input.isEmpty() : \"User input cannot be null or empty.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"qinboan"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"qinboan"},"content":"        if (response.equalsIgnoreCase(\"Bye. Hope to see you again soon!\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"qinboan"},"content":"            Platform.exit();","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"qinboan"},"content":"            System.exit(0);","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"qinboan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"qinboan"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"qinboan"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"qinboan"},"content":"        );","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"qinboan"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"qinboan":77}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":" * Represents a parser in the Duke application that interprets and executes user commands.","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":" *","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":" * @author Qin Boan","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":"public class Parser {","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"     * Constructs a Parser instance.","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":"     * @param tasks The list of tasks to manage.","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"qinboan"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"qinboan"},"content":"     * @param storage The storage to save and load tasks.","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"qinboan"},"content":"    public Parser(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"qinboan"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"qinboan"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"qinboan"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"qinboan"},"content":"     * Parses and executes the given input command.","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"qinboan"},"content":"     * @param input The user input command to parse.","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"qinboan"},"content":"     * @throws DukeException If the command execution encounters any errors.","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"qinboan"},"content":"    public String parse(String input) throws DukeException {","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"qinboan"},"content":"        if (\"bye\".equals(input)) {","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"qinboan"},"content":"            return handleExit();","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"qinboan"},"content":"        } else if (\"list\".equals(input)) {","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"qinboan"},"content":"            return handleList();","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"qinboan"},"content":"        } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"qinboan"},"content":"            return handleDelete(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"qinboan"},"content":"        } else if (input.startsWith(\"mark \")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"qinboan"},"content":"            try {","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"qinboan"},"content":"                return handleMark(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"qinboan"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"qinboan"},"content":"                return e.getMessage();","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"qinboan"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"qinboan"},"content":"        } else if (input.startsWith(\"unmark \")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"qinboan"},"content":"            try {","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"qinboan"},"content":"                return handleUnmark(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"qinboan"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"qinboan"},"content":"                return e.getMessage();","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"qinboan"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"qinboan"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"qinboan"},"content":"            return handleToDo(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"qinboan"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"qinboan"},"content":"            return handleDeadline(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"qinboan"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"qinboan"},"content":"            return handleEvent(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"qinboan"},"content":"        } else if (input.startsWith(\"find \")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"qinboan"},"content":"            String keyword \u003d input.substring(5).trim();","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"qinboan"},"content":"            return handleFind(keyword);","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"qinboan"},"content":"        } else if (input.startsWith(\"fixed\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"qinboan"},"content":"            return handleFixed(input);","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"qinboan"},"content":"        } else if (input.startsWith(\"koyil veppathil\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"qinboan"},"content":"            return \"koyil veppathil\";","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"qinboan"},"content":"        } else if (input.startsWith(\"yeralaam\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"qinboan"},"content":"            return \"yeralaammmmm\";","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"qinboan"},"content":"        } else {","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"qinboan"},"content":"            return \"That\u0027s not a valid task!\\n\";","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"qinboan"},"content":"    private String handleInvalidTask() {","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"qinboan"},"content":"        return ui.showInvalidTask();","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"qinboan"},"content":"    private String handleFixed(String input) {","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"qinboan"},"content":"        if (input.length() \u003c\u003d 6) {","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"qinboan"},"content":"            return ui.showInvalidFixed();","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"qinboan"},"content":"        } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"qinboan"},"content":"            String[] parts \u003d input.substring(6).split(\" /time \");","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"qinboan"},"content":"            if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"qinboan"},"content":"                try {","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"qinboan"},"content":"                    return handleAdd(new FixedDuration(parts[0], parts[1]));","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"qinboan"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"qinboan"},"content":"                    return e.getMessage();","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"qinboan"},"content":"                }","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"qinboan"},"content":"            } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"qinboan"},"content":"                return ui.showInvalidFixed();","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"qinboan"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"qinboan"},"content":"    private String handleToDo(String input) {","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"qinboan"},"content":"        if (input.length() \u003c\u003d 5) {","lastModifiedDate":"2024-02-12"},{"lineNumber":96,"author":{"gitId":"qinboan"},"content":"            return ui.showInvalidTodo();","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"qinboan"},"content":"        } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"qinboan"},"content":"            String description \u003d input.substring(5).trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"qinboan"},"content":"            if (description.isEmpty()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"qinboan"},"content":"                return ui.showInvalidTodo();","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"qinboan"},"content":"            } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"qinboan"},"content":"                try {","lastModifiedDate":"2024-02-22"},{"lineNumber":103,"author":{"gitId":"qinboan"},"content":"                    return handleAdd(new ToDo(description));","lastModifiedDate":"2024-02-22"},{"lineNumber":104,"author":{"gitId":"qinboan"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":105,"author":{"gitId":"qinboan"},"content":"                    return e.getMessage();","lastModifiedDate":"2024-02-22"},{"lineNumber":106,"author":{"gitId":"qinboan"},"content":"                }","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"qinboan"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":108,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":109,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":110,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":111,"author":{"gitId":"qinboan"},"content":"    private String handleDeadline(String input) {","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"qinboan"},"content":"        if (input.length() \u003c\u003d 9) {","lastModifiedDate":"2024-02-12"},{"lineNumber":113,"author":{"gitId":"qinboan"},"content":"            return ui.showInvalidDeadline();","lastModifiedDate":"2024-02-23"},{"lineNumber":114,"author":{"gitId":"qinboan"},"content":"        } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":115,"author":{"gitId":"qinboan"},"content":"            String[] parts \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2024-02-12"},{"lineNumber":116,"author":{"gitId":"qinboan"},"content":"            if (parts.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-12"},{"lineNumber":117,"author":{"gitId":"qinboan"},"content":"                try {","lastModifiedDate":"2024-02-12"},{"lineNumber":118,"author":{"gitId":"qinboan"},"content":"                    return handleAdd(new Deadline(parts[0], parts[1]));","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"qinboan"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":120,"author":{"gitId":"qinboan"},"content":"                    return e.getMessage();","lastModifiedDate":"2024-02-22"},{"lineNumber":121,"author":{"gitId":"qinboan"},"content":"                }","lastModifiedDate":"2024-02-12"},{"lineNumber":122,"author":{"gitId":"qinboan"},"content":"            } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":123,"author":{"gitId":"qinboan"},"content":"                return ui.showInvalidDeadline();","lastModifiedDate":"2024-02-23"},{"lineNumber":124,"author":{"gitId":"qinboan"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":125,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":126,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":127,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":128,"author":{"gitId":"qinboan"},"content":"    private String handleEvent(String input) {","lastModifiedDate":"2024-02-22"},{"lineNumber":129,"author":{"gitId":"qinboan"},"content":"        int fromIndex \u003d input.indexOf(\" /from\");","lastModifiedDate":"2024-02-12"},{"lineNumber":130,"author":{"gitId":"qinboan"},"content":"        int toIndex \u003d input.indexOf(\" /to\");","lastModifiedDate":"2024-02-12"},{"lineNumber":131,"author":{"gitId":"qinboan"},"content":"        if (fromIndex !\u003d -1 \u0026\u0026 toIndex !\u003d -1 \u0026\u0026 fromIndex \u003c toIndex \u0026\u0026","lastModifiedDate":"2024-02-13"},{"lineNumber":132,"author":{"gitId":"qinboan"},"content":"                fromIndex \u003e\u003d 6 \u0026\u0026 toIndex \u003e\u003d fromIndex + 7 \u0026\u0026 input.length() \u003e\u003d toIndex + 5) {","lastModifiedDate":"2024-02-13"},{"lineNumber":133,"author":{"gitId":"qinboan"},"content":"            String description \u003d input.substring(6, fromIndex).trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":134,"author":{"gitId":"qinboan"},"content":"            String startTime \u003d input.substring(fromIndex + 7, toIndex).trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":135,"author":{"gitId":"qinboan"},"content":"            String endTime \u003d input.substring(toIndex + 5).trim();","lastModifiedDate":"2024-02-12"},{"lineNumber":136,"author":{"gitId":"qinboan"},"content":"            if (description.isEmpty() || startTime.isEmpty() || endTime.isEmpty()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":137,"author":{"gitId":"qinboan"},"content":"                return ui.showInvalidEvent();","lastModifiedDate":"2024-02-23"},{"lineNumber":138,"author":{"gitId":"qinboan"},"content":"            } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":139,"author":{"gitId":"qinboan"},"content":"                try {","lastModifiedDate":"2024-02-12"},{"lineNumber":140,"author":{"gitId":"qinboan"},"content":"                    return handleAdd(new Event(description, startTime, endTime));","lastModifiedDate":"2024-02-22"},{"lineNumber":141,"author":{"gitId":"qinboan"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":142,"author":{"gitId":"qinboan"},"content":"                    return e.getMessage();","lastModifiedDate":"2024-02-22"},{"lineNumber":143,"author":{"gitId":"qinboan"},"content":"                }","lastModifiedDate":"2024-02-12"},{"lineNumber":144,"author":{"gitId":"qinboan"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":145,"author":{"gitId":"qinboan"},"content":"        } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":146,"author":{"gitId":"qinboan"},"content":"            return ui.showInvalidEvent();","lastModifiedDate":"2024-02-23"},{"lineNumber":147,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":148,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":149,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":150,"author":{"gitId":"qinboan"},"content":"    private String handleFind(String keyword) {","lastModifiedDate":"2024-02-22"},{"lineNumber":151,"author":{"gitId":"qinboan"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.find(keyword);","lastModifiedDate":"2024-02-13"},{"lineNumber":152,"author":{"gitId":"qinboan"},"content":"        return ui.showMatchingTasks(matchingTasks);","lastModifiedDate":"2024-02-22"},{"lineNumber":153,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":154,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":155,"author":{"gitId":"qinboan"},"content":"    private String handleExit() {","lastModifiedDate":"2024-02-22"},{"lineNumber":156,"author":{"gitId":"qinboan"},"content":"        return ui.showGoodbye();","lastModifiedDate":"2024-02-22"},{"lineNumber":157,"author":{"gitId":"qinboan"},"content":"        //System.exit(0);","lastModifiedDate":"2024-02-22"},{"lineNumber":158,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":159,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":160,"author":{"gitId":"qinboan"},"content":"    private String handleList() {","lastModifiedDate":"2024-02-22"},{"lineNumber":161,"author":{"gitId":"qinboan"},"content":"        return ui.showTasks(tasks);","lastModifiedDate":"2024-02-22"},{"lineNumber":162,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":163,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":164,"author":{"gitId":"qinboan"},"content":"    private String handleMark(String input) throws DukeException {","lastModifiedDate":"2024-02-22"},{"lineNumber":165,"author":{"gitId":"qinboan"},"content":"        int taskIndex \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":166,"author":{"gitId":"qinboan"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":167,"author":{"gitId":"qinboan"},"content":"            Task task \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2024-02-12"},{"lineNumber":168,"author":{"gitId":"qinboan"},"content":"            task.markAsDone();","lastModifiedDate":"2024-02-12"},{"lineNumber":169,"author":{"gitId":"qinboan"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":170,"author":{"gitId":"qinboan"},"content":"            return ui.showTask(\"Nice! I\u0027ve marked this task as done: \" + task);","lastModifiedDate":"2024-02-22"},{"lineNumber":171,"author":{"gitId":"qinboan"},"content":"        } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":172,"author":{"gitId":"qinboan"},"content":"            throw new DukeException(\"Task does not exist.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":173,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":174,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":175,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":176,"author":{"gitId":"qinboan"},"content":"    private String handleUnmark(String input) throws DukeException {","lastModifiedDate":"2024-02-22"},{"lineNumber":177,"author":{"gitId":"qinboan"},"content":"        int taskIndex \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2024-02-12"},{"lineNumber":178,"author":{"gitId":"qinboan"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":179,"author":{"gitId":"qinboan"},"content":"            Task task \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2024-02-12"},{"lineNumber":180,"author":{"gitId":"qinboan"},"content":"            task.markAsNotDone();","lastModifiedDate":"2024-02-12"},{"lineNumber":181,"author":{"gitId":"qinboan"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":182,"author":{"gitId":"qinboan"},"content":"            return ui.showTask(\"OK, I\u0027ve marked this task as not done yet: \" + task);","lastModifiedDate":"2024-02-22"},{"lineNumber":183,"author":{"gitId":"qinboan"},"content":"        } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":184,"author":{"gitId":"qinboan"},"content":"            throw new DukeException(\"Task does not exist.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":185,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":186,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":187,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":188,"author":{"gitId":"qinboan"},"content":"    private String handleAdd(Task task) throws DukeException {","lastModifiedDate":"2024-02-22"},{"lineNumber":189,"author":{"gitId":"qinboan"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":190,"author":{"gitId":"qinboan"},"content":"            tasks.addTask(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":191,"author":{"gitId":"qinboan"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":192,"author":{"gitId":"qinboan"},"content":"            return ui.showAddedTask(task.toString(), tasks.size());","lastModifiedDate":"2024-02-22"},{"lineNumber":193,"author":{"gitId":"qinboan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":194,"author":{"gitId":"qinboan"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":195,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":196,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":197,"author":{"gitId":"qinboan"},"content":"    private String handleDelete(String input) {","lastModifiedDate":"2024-02-22"},{"lineNumber":198,"author":{"gitId":"qinboan"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":199,"author":{"gitId":"qinboan"},"content":"            int index \u003d Integer.parseInt(input.substring(7).trim()) - 1;","lastModifiedDate":"2024-02-13"},{"lineNumber":200,"author":{"gitId":"qinboan"},"content":"            Task task \u003d tasks.deleteTask(index);","lastModifiedDate":"2024-02-12"},{"lineNumber":201,"author":{"gitId":"qinboan"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":202,"author":{"gitId":"qinboan"},"content":"            return ui.showRemovedTask(task.toString(), tasks.size());","lastModifiedDate":"2024-02-22"},{"lineNumber":203,"author":{"gitId":"qinboan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":204,"author":{"gitId":"qinboan"},"content":"            return ui.showError(\"Task does not exist.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":205,"author":{"gitId":"qinboan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":206,"author":{"gitId":"qinboan"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":207,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":208,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":209,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"qinboan":209}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"import java.io.File;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":" * Represents the file storage for Duke application, handling the loading and saving of tasks to a file.","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":" *","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":" * @author Qin Boan","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"public class Storage {","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"    private String filePath;","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"     * Constructs a Storage object.","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"qinboan"},"content":"     * @param filePath The path of the file where tasks are stored.","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"qinboan"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"qinboan"},"content":"        assert filePath !\u003d null \u0026\u0026 !filePath.isEmpty();","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"qinboan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"qinboan"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"qinboan"},"content":"     * @return An ArrayList of tasks loaded from the file.","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"qinboan"},"content":"     * @throws DukeException If an error occurs during file processing.","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"qinboan"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"qinboan"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"qinboan"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"qinboan"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"qinboan"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"qinboan"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"qinboan"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"qinboan"},"content":"            } else {","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"qinboan"},"content":"                Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"qinboan"},"content":"                while (scanner.hasNext()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"qinboan"},"content":"                    String line \u003d scanner.nextLine();","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"qinboan"},"content":"                    Task task \u003d fileStringToTask(line);","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"qinboan"},"content":"                    if (task !\u003d null) {","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"qinboan"},"content":"                        tasks.add(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"qinboan"},"content":"                    }","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"qinboan"},"content":"                }","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"qinboan"},"content":"                scanner.close();","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"qinboan"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"qinboan"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"qinboan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"qinboan"},"content":"        return tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"qinboan"},"content":"     * Saves the current list of tasks to the file.","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"qinboan"},"content":"     * @param tasks The TaskList containing tasks to be saved.","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"qinboan"},"content":"     * @throws DukeException If an error occurs during file processing.","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"qinboan"},"content":"    public void save(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"qinboan"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"qinboan"},"content":"            PrintWriter writer \u003d new PrintWriter(filePath);","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"qinboan"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"qinboan"},"content":"                writer.println(taskToFileString(tasks.getTask(i)));","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"qinboan"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"qinboan"},"content":"            writer.close();","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"qinboan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"qinboan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"qinboan"},"content":"     * Converts a line from the file to a Task object.","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"qinboan"},"content":"     * @param line The line from the file to be converted into a Task.","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"qinboan"},"content":"     * @return The Task object represented by the line.","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"qinboan"},"content":"     * @throws DukeException If the line format is invalid.","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"qinboan"},"content":"    private static Task fileStringToTask(String line) throws DukeException {","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"qinboan"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"qinboan"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"qinboan"},"content":"            throw new DukeException(\"Unable to read some tasks!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":88,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"qinboan"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"qinboan"},"content":"        boolean isDone \u003d \"1\".equals(parts[1]);","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"qinboan"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"qinboan"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"qinboan"},"content":"        switch (type) {","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"qinboan"},"content":"        case \"T\":","lastModifiedDate":"2024-02-12"},{"lineNumber":96,"author":{"gitId":"qinboan"},"content":"            task \u003d new ToDo(description);","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"qinboan"},"content":"            break;","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"qinboan"},"content":"        case \"D\":","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"qinboan"},"content":"            task \u003d new Deadline(description, parts.length \u003e 3 ? parts[3] : \"\");","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"qinboan"},"content":"            break;","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"qinboan"},"content":"        case \"E\":","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"qinboan"},"content":"            task \u003d new Event(description, parts.length \u003e 3 ? parts[3] : \"\", parts.length \u003e 4 ? parts[4] : \"\");","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"qinboan"},"content":"            break;","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"qinboan"},"content":"        case \"F\":","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"qinboan"},"content":"            task \u003d new FixedDuration(description, parts.length \u003e 3 ? parts[3] : \"\");","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"qinboan"},"content":"            break;","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":108,"author":{"gitId":"qinboan"},"content":"        if (task !\u003d null \u0026\u0026 isDone) {","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"qinboan"},"content":"            task.markAsDone();","lastModifiedDate":"2024-02-12"},{"lineNumber":110,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":112,"author":{"gitId":"qinboan"},"content":"        return task;","lastModifiedDate":"2024-02-12"},{"lineNumber":113,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":114,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":115,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":116,"author":{"gitId":"qinboan"},"content":"     * Converts a Task object to a string for file storage.","lastModifiedDate":"2024-02-13"},{"lineNumber":117,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":118,"author":{"gitId":"qinboan"},"content":"     * @param task The Task to be converted to a string.","lastModifiedDate":"2024-02-13"},{"lineNumber":119,"author":{"gitId":"qinboan"},"content":"     * @return The string representation of the Task for file storage.","lastModifiedDate":"2024-02-13"},{"lineNumber":120,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":121,"author":{"gitId":"qinboan"},"content":"    private static String taskToFileString(Task task) {","lastModifiedDate":"2024-02-12"},{"lineNumber":122,"author":{"gitId":"qinboan"},"content":"        String type \u003d task instanceof ToDo ? \"T\" :","lastModifiedDate":"2024-02-12"},{"lineNumber":123,"author":{"gitId":"qinboan"},"content":"                task instanceof Deadline ? \"D\" :","lastModifiedDate":"2024-02-12"},{"lineNumber":124,"author":{"gitId":"qinboan"},"content":"                        task instanceof Event ? \"E\" :","lastModifiedDate":"2024-02-23"},{"lineNumber":125,"author":{"gitId":"qinboan"},"content":"                                task instanceof FixedDuration ? \"F\" : \"\";","lastModifiedDate":"2024-02-23"},{"lineNumber":126,"author":{"gitId":"qinboan"},"content":"        String status \u003d task.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-02-12"},{"lineNumber":127,"author":{"gitId":"qinboan"},"content":"        String details \u003d type + \" | \" + status + \" | \" + task.description;","lastModifiedDate":"2024-02-12"},{"lineNumber":128,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":129,"author":{"gitId":"qinboan"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2024-02-12"},{"lineNumber":130,"author":{"gitId":"qinboan"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-02-12"},{"lineNumber":131,"author":{"gitId":"qinboan"},"content":"            details +\u003d \" | \" + deadline.getByForFile();","lastModifiedDate":"2024-02-12"},{"lineNumber":132,"author":{"gitId":"qinboan"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-02-12"},{"lineNumber":133,"author":{"gitId":"qinboan"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2024-02-12"},{"lineNumber":134,"author":{"gitId":"qinboan"},"content":"            details +\u003d \" | \" + event.getStartForFile() + \" | \" + event.getEndForFile();","lastModifiedDate":"2024-02-12"},{"lineNumber":135,"author":{"gitId":"qinboan"},"content":"        } else if (task instanceof FixedDuration) {","lastModifiedDate":"2024-02-23"},{"lineNumber":136,"author":{"gitId":"qinboan"},"content":"            FixedDuration fixed \u003d (FixedDuration) task;","lastModifiedDate":"2024-02-23"},{"lineNumber":137,"author":{"gitId":"qinboan"},"content":"            details +\u003d \" | \" + fixed.duration;","lastModifiedDate":"2024-02-23"},{"lineNumber":138,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":139,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":140,"author":{"gitId":"qinboan"},"content":"        return details;","lastModifiedDate":"2024-02-12"},{"lineNumber":141,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":142,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"qinboan":142}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":" * Represents a task in the Duke application.","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":" * A task has a description and a completion status.","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":" *","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":" * @author Qin Boan","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":"    protected String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"     * Constructs a Task with the specified description.","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"qinboan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"qinboan"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"qinboan"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"qinboan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"qinboan"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"qinboan"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"qinboan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"qinboan"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"qinboan"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"qinboan"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"qinboan"},"content":"        return this.description;","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"qinboan"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"qinboan"},"content":"     * The status icon is \"[X]\" if the task is done and \"[ ]\" if it is not done.","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"qinboan"},"content":"     * @return A string representing the status icon.","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"qinboan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"qinboan"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"qinboan"},"content":"     * Returns a string representation of the task, including its status and description.","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"qinboan"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"qinboan"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"qinboan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"qinboan"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"qinboan":67}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":"import java.util.List;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":" * Represents the list of tasks in the Duke application.","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":" *","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":" * @author Qin Boan","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":"public class TaskList {","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"qinboan"},"content":"     * Constructs a TaskList initialized with an existing list of tasks.","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"qinboan"},"content":"     * @param tasks The initial list of tasks.","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"qinboan"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"qinboan"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"qinboan"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"qinboan"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"qinboan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"qinboan"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"qinboan"},"content":"     * Retrieves a task from the list by its index.","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"qinboan"},"content":"     * @param index The index of the task in the list.","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"qinboan"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"qinboan"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range (index \u003c 0 || index \u003e\u003d size()).","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"qinboan"},"content":"    public Task getTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"qinboan"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"qinboan"},"content":"     * Deletes a task from the list by its index.","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"qinboan"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"qinboan"},"content":"     * @return The removed task.","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"qinboan"},"content":"     * @throws IndexOutOfBoundsException If the index is out of range (index \u003c 0 || index \u003e\u003d size()).","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"qinboan"},"content":"    public Task deleteTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"qinboan"},"content":"        return tasks.remove(index);","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"qinboan"},"content":"     * Retrieves the entire list of tasks.","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"qinboan"},"content":"     * @return A list of tasks.","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"qinboan"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"qinboan"},"content":"        return tasks;","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"qinboan"},"content":"     * Searches for tasks that contain the specified keyword in their description.","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"qinboan"},"content":"     * @param keyword The string to search for in task descriptions.","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"qinboan"},"content":"     * @return An ArrayList of tasks that contain the keyword in their description.","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"qinboan"},"content":"    public ArrayList\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"qinboan"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"qinboan"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"qinboan"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"qinboan"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"qinboan"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"qinboan"},"content":"        return matchingTasks;","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":86,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":87,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":88,"author":{"gitId":"qinboan"},"content":"     * Gets the number of tasks in the list.","lastModifiedDate":"2024-02-13"},{"lineNumber":89,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":90,"author":{"gitId":"qinboan"},"content":"     * @return The size of the task list.","lastModifiedDate":"2024-02-13"},{"lineNumber":91,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":92,"author":{"gitId":"qinboan"},"content":"    public int size() {","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"qinboan"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-02-12"},{"lineNumber":96,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"qinboan":98}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":" * Represents a to-do task in the Duke application.","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":" * A to-do is a type of task without any date/time attached to it.","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":" *","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":" * @author Qin Boan","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":"     * Constructs a ToDo task with the specified description.","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"qinboan"},"content":"     * Returns a string representation of the to-do task.","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"qinboan"},"content":"     * @return A string representation of the to-do task.","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"qinboan"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"qinboan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"qinboan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"qinboan":29}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":" * Represents the user interface for the Duke application.","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":" * This class handles all user interactions by returning strings to be printed.","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":" *","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":" * @author Qin Boan","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":"public class Ui {","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"     * Constructs a new Ui object.","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"    public Ui() {","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"qinboan"},"content":"     * Reads the next command from the user input.","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"qinboan"},"content":"     * @return The command entered by the user.","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"qinboan"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"qinboan"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"qinboan"},"content":"     * Returns the welcome message.","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"qinboan"},"content":"     * @return The welcome message string.","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"qinboan"},"content":"    public String showWelcome() {","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"qinboan"},"content":"        return \"Hi! I\u0027m BernardBot\\nWhat can I do for you?\";","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"qinboan"},"content":"     * Returns an error message.","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"qinboan"},"content":"     * @param message The error message to be returned.","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"qinboan"},"content":"     * @return The error message string.","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"qinboan"},"content":"    public String showError(String message) {","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"qinboan"},"content":"        return \"Error: \" + message;","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"qinboan"},"content":"     * Returns the loading error message.","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"qinboan"},"content":"     * @return The loading error message string.","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"qinboan"},"content":"    public String showLoadingError() {","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"qinboan"},"content":"        return showError(\"Could not load tasks from file.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"qinboan"},"content":"     * Returns the string representation of a task.","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"qinboan"},"content":"     * @param task The task to be displayed.","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"qinboan"},"content":"     * @return The task string.","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"qinboan"},"content":"    public String showTask(String task) {","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"qinboan"},"content":"        return task;","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"qinboan"},"content":"     * Returns a message indicating that a task has been added.","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"qinboan"},"content":"     * @param task The task that has been added.","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"qinboan"},"content":"     * @param taskCount The total number of tasks after adding.","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"qinboan"},"content":"     * @return The task added message string.","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"qinboan"},"content":"    public String showAddedTask(String task, int taskCount) {","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"qinboan"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task + \"\\nNow you have \" + taskCount + \" tasks in the list.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"qinboan"},"content":"     * Returns a message indicating that a task has been removed.","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"qinboan"},"content":"     * @param task The task that has been removed.","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"qinboan"},"content":"     * @param taskCount The total number of tasks after removal.","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"qinboan"},"content":"     * @return The task removed message string.","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":87,"author":{"gitId":"qinboan"},"content":"    public String showRemovedTask(String task, int taskCount) {","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"qinboan"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + task + \"\\nNow you have \" + taskCount + \" tasks in the list.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"qinboan"},"content":"     * Returns a message indicating that the user input is invalid","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"qinboan"},"content":"     * @return The invalid message","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"qinboan"},"content":"    public String showInvalidTask() {","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"qinboan"},"content":"        return \"That\u0027s not a valid task!\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"qinboan"},"content":"     * Returns a message indicating that the user input for Todo is invalid","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"qinboan"},"content":"     * @return The invalid message","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"qinboan"},"content":"    public String showInvalidTodo() {","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"qinboan"},"content":"        return \"That\u0027s not a valid task!\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":109,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":110,"author":{"gitId":"qinboan"},"content":"     * Returns a message indicating that the user input for Deadline is invalid","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":112,"author":{"gitId":"qinboan"},"content":"     * @return The invalid message","lastModifiedDate":"2024-02-23"},{"lineNumber":113,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":114,"author":{"gitId":"qinboan"},"content":"    public String showInvalidDeadline() {","lastModifiedDate":"2024-02-23"},{"lineNumber":115,"author":{"gitId":"qinboan"},"content":"        return \"That\u0027s not a valid deadline!\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":116,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":117,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":118,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":119,"author":{"gitId":"qinboan"},"content":"     * Returns a message indicating that the user input for Event is invalid","lastModifiedDate":"2024-02-23"},{"lineNumber":120,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":121,"author":{"gitId":"qinboan"},"content":"     * @return The invalid message","lastModifiedDate":"2024-02-23"},{"lineNumber":122,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":123,"author":{"gitId":"qinboan"},"content":"    public String showInvalidEvent() {","lastModifiedDate":"2024-02-23"},{"lineNumber":124,"author":{"gitId":"qinboan"},"content":"        return \"That\u0027s not a valid event!\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":125,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":126,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":127,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":128,"author":{"gitId":"qinboan"},"content":"     * Returns a message indicating that the user input for fixed duration task is invalid","lastModifiedDate":"2024-02-23"},{"lineNumber":129,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":130,"author":{"gitId":"qinboan"},"content":"     * @return The invalid message","lastModifiedDate":"2024-02-23"},{"lineNumber":131,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":132,"author":{"gitId":"qinboan"},"content":"    public String showInvalidFixed() {","lastModifiedDate":"2024-02-23"},{"lineNumber":133,"author":{"gitId":"qinboan"},"content":"        return \"That\u0027s not a valid fixed duration task!\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":134,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":135,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":136,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":137,"author":{"gitId":"qinboan"},"content":"     * Returns a string representation of all tasks in the task list.","lastModifiedDate":"2024-02-22"},{"lineNumber":138,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":139,"author":{"gitId":"qinboan"},"content":"     * @param tasks The TaskList containing tasks to be displayed.","lastModifiedDate":"2024-02-13"},{"lineNumber":140,"author":{"gitId":"qinboan"},"content":"     * @return The task list string.","lastModifiedDate":"2024-02-22"},{"lineNumber":141,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":142,"author":{"gitId":"qinboan"},"content":"    public String showTasks(TaskList tasks) {","lastModifiedDate":"2024-02-22"},{"lineNumber":143,"author":{"gitId":"qinboan"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-02-22"},{"lineNumber":144,"author":{"gitId":"qinboan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-12"},{"lineNumber":145,"author":{"gitId":"qinboan"},"content":"            sb.append((i + 1)).append(\". \").append(tasks.getTask(i)).append(\"\\n\");","lastModifiedDate":"2024-02-22"},{"lineNumber":146,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":147,"author":{"gitId":"qinboan"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-22"},{"lineNumber":148,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":149,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":150,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":151,"author":{"gitId":"qinboan"},"content":"     * Returns the exit message.","lastModifiedDate":"2024-02-22"},{"lineNumber":152,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":153,"author":{"gitId":"qinboan"},"content":"     * @return The exit message string.","lastModifiedDate":"2024-02-22"},{"lineNumber":154,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":155,"author":{"gitId":"qinboan"},"content":"    public String showGoodbye() {","lastModifiedDate":"2024-02-22"},{"lineNumber":156,"author":{"gitId":"qinboan"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-22"},{"lineNumber":157,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":158,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":159,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":160,"author":{"gitId":"qinboan"},"content":"     * Closes the scanner when the UI is closing.","lastModifiedDate":"2024-02-13"},{"lineNumber":161,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":162,"author":{"gitId":"qinboan"},"content":"    public void close() {","lastModifiedDate":"2024-02-12"},{"lineNumber":163,"author":{"gitId":"qinboan"},"content":"        scanner.close();","lastModifiedDate":"2024-02-12"},{"lineNumber":164,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":165,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":166,"author":{"gitId":"qinboan"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":167,"author":{"gitId":"qinboan"},"content":"     * Returns a string representation of a list of matching tasks.","lastModifiedDate":"2024-02-22"},{"lineNumber":168,"author":{"gitId":"qinboan"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":169,"author":{"gitId":"qinboan"},"content":"     * @param tasks The ArrayList of tasks that match the search criteria.","lastModifiedDate":"2024-02-22"},{"lineNumber":170,"author":{"gitId":"qinboan"},"content":"     * @return The matching tasks list string.","lastModifiedDate":"2024-02-22"},{"lineNumber":171,"author":{"gitId":"qinboan"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":172,"author":{"gitId":"qinboan"},"content":"    public String showMatchingTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-22"},{"lineNumber":173,"author":{"gitId":"qinboan"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":174,"author":{"gitId":"qinboan"},"content":"            return \"No matching tasks in your list.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":175,"author":{"gitId":"qinboan"},"content":"        } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":176,"author":{"gitId":"qinboan"},"content":"            StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-02-22"},{"lineNumber":177,"author":{"gitId":"qinboan"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-13"},{"lineNumber":178,"author":{"gitId":"qinboan"},"content":"                sb.append((i + 1)).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-22"},{"lineNumber":179,"author":{"gitId":"qinboan"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":180,"author":{"gitId":"qinboan"},"content":"            return sb.toString();","lastModifiedDate":"2024-02-22"},{"lineNumber":181,"author":{"gitId":"qinboan"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":182,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":183,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"qinboan":183}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"130.0\" fitWidth\u003d\"124.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"qinboan":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"qinboan":19}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":"import java.util.List;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":"    public void testSaveAndLoad() throws IOException, DukeException {","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":"        Path filePath \u003d Path.of(\"data/test.txt\");","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"        Storage storage \u003d new Storage(filePath.toString());","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"        ToDo todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"2024-02-24\");","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":"        Event event \u003d new Event(\"project meeting\", \"2024-02-24 14:00\", \"2024-02-24 16:00\");","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"qinboan"},"content":"        list.addTask(todo);","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"qinboan"},"content":"        list.addTask(deadline);","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"qinboan"},"content":"        list.addTask(event);","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"qinboan"},"content":"        storage.save(list);","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"qinboan"},"content":"        List\u003cString\u003e lines \u003d Files.readAllLines(filePath);","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"qinboan"},"content":"        assertEquals(3, lines.size());","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"qinboan"},"content":"        assertEquals(\"T | 0 | read book\", lines.get(0));","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"qinboan"},"content":"        assertEquals(\"D | 0 | return book | 2024-02-24\", lines.get(1));","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"qinboan"},"content":"        assertEquals(\"E | 0 | project meeting | 2024-02-24 14:00 | 2024-02-24 16:00\", lines.get(2));","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"qinboan":35}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"package duke;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":"    @Test","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":"    public void testAdd() throws DukeException {","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":"        ToDo todo \u003d new ToDo(\"read book\");","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"2024-02-24\");","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"qinboan"},"content":"        Event event \u003d new Event(\"project meeting\", \"2024-02-24 14:00\", \"2024-02-24 16:00\");","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"qinboan"},"content":"        list.addTask(todo);","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"qinboan"},"content":"        list.addTask(deadline);","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"qinboan"},"content":"        list.addTask(event);","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"qinboan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"qinboan"},"content":"        assertEquals(3, list.size());","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"qinboan"},"content":"        assertEquals(todo, list.getTask(0));","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"qinboan"},"content":"        assertEquals(deadline, list.getTask(1));","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"qinboan"},"content":"        assertEquals(event, list.getTask(2));","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"qinboan"},"content":"        assertEquals(\"[T][ ] read book\", list.getTask(0).toString());","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"qinboan"},"content":"        assertEquals(\"[D][ ] return book (by: Feb 24 2024)\", list.getTask(1).toString());","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"qinboan"},"content":"        assertEquals(\"[E][ ] project meeting (from: Feb 24 2024 14:00 to: Feb 24 2024 16:00)\", list.getTask(2).toString());","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"qinboan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"qinboan"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"qinboan":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"qinboan"},"content":"todo borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"qinboan"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"qinboan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"qinboan"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"qinboan"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"qinboan"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"qinboan"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"qinboan"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"qinboan"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"qinboan"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"qinboan":10}}]
