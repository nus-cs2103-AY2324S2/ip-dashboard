[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"plugins {","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"    id \u0027java\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"    id \u0027application\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"shadowJar {","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"    archiveFileName \u003d \u0027charlie.jar\u0027","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"repositories {","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"    mavenCentral()","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"dependencies {","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"    implementation \u0027com.google.guava:guava:30.1-jre\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"test {","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"    useJUnitPlatform()","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"application {","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"    mainClass.set(\"charlie.Charlie\")","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":27}},{"path":"data/charlie.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"T | 1 | borrow book","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"D | 1 | party all night | 2023-10-23","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":2}},{"path":"src/main/java/charlie/Charlie.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.commands.Command;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import charlie.parser.Parser;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import charlie.storage.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import charlie.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import charlie.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"public class Charlie {","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"     * starts the program, creates a UI, a storage file, and catches a loading exception","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"     * @param filePath storage file in which past tasks will be saved","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"    public Charlie(String filePath) {","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"            ui \u003d new Ui();","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"        } catch (CharlieException exception) {","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"            ui.showLoadingError(exception.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"     * method to run the program, uses the ui and parser methods","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"    public void run() {","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"            try {","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"                ui.showLine();","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"            } catch (CharlieException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"            } finally {","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"ananya21"},"content":"                ui.showLine();","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"ananya21"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"ananya21"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"ananya21"},"content":"        new Charlie(\"./data/charlie.txt\").run();","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":58}},{"path":"src/main/java/charlie/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import charlie.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import charlie.storage.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import charlie.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"import charlie.models.Deadline;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"import charlie.models.Event;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"import charlie.models.Task;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"import charlie.models.Todo;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"    private String fullCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"     * constructor for AddCommand","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"     * @param fullCommand the user command in its full string form","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"    public AddCommand(String fullCommand) {","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"     * executes an add command, the method decides between tasks to-do, event and deadline, and","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"     * saves the tasks to storage","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"     * @param taskList - task list loaded at the start of the program.","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"     * @param ui       - class responsible for user interface interactions","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"     * @param storage  - class responsible for adding and loading tasks from and into the file","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"     * @throws CharlieException","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws CharlieException {","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"        if (fullCommand.startsWith(\"todo\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"            handleTodo(taskList.getTasks(), fullCommand);","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"        } else if (fullCommand.startsWith(\"event\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"            handleEvent(taskList.getTasks(), fullCommand);","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"        } else if (fullCommand.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"            handleDeadline(taskList.getTasks(), fullCommand);","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"        isExit \u003d false;","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"ananya21"},"content":"     * adds the to-do task to the current task list, and returns intended generated output","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"ananya21"},"content":"     * @param taskList task list loaded at the start of the program.","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"ananya21"},"content":"     * @param input to-do string which specifies the task saved","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"ananya21"},"content":"     * @throws CharlieException","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"ananya21"},"content":"    private static void handleTodo(ArrayList\u003cTask\u003e taskList, String input) throws CharlieException {","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"ananya21"},"content":"        if (input.trim().equals(\"todo\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"ananya21"},"content":"            throw new CharlieException(\"Sorry, the description of a todo cannot be empty.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"ananya21"},"content":"        String description \u003d input.substring(5);","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"ananya21"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"ananya21"},"content":"        taskList.add(todo);","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"ananya21"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + todo);","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"ananya21"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"ananya21"},"content":"     * adds the deadline task to the current task list, and returns intended generated output","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"ananya21"},"content":"     * @param taskList task list loaded at the start of the program.","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"ananya21"},"content":"     * @param input to-do string which specifies the task saved","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"ananya21"},"content":"     * @throws CharlieException","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"ananya21"},"content":"    private static void handleDeadline(ArrayList\u003cTask\u003e taskList, String input) throws CharlieException {","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"ananya21"},"content":"        String[] parts \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"ananya21"},"content":"        if (parts.length \u003c 2 || parts[0].trim().isEmpty() || parts[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"ananya21"},"content":"            throw new CharlieException(\"Sorry, the description of a deadline cannot be empty and must include a /by time.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"ananya21"},"content":"        Deadline deadline \u003d new Deadline(parts[0], parts[1]);","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"ananya21"},"content":"        taskList.add(deadline);","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"ananya21"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + deadline);","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"ananya21"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"ananya21"},"content":"     * adds the event task to the current task list, and returns intended generated output","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"ananya21"},"content":"     * @param taskList task list loaded at the start of the program.","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"ananya21"},"content":"     * @param input to-do string which specifies the task saved","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"ananya21"},"content":"     * @throws CharlieException","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"ananya21"},"content":"    private static void handleEvent(ArrayList\u003cTask\u003e taskList, String input) throws CharlieException {","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"ananya21"},"content":"        String[] parts \u003d input.substring(6).split(\" /from \");","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"ananya21"},"content":"        if (parts.length \u003c 2 || parts[0].trim().isEmpty() || !parts[1].contains(\" /to \")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"ananya21"},"content":"            throw new CharlieException(\"Sorry, the description of an event cannot be empty and must include start /from and /to end times.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"ananya21"},"content":"        String[] timeParts \u003d parts[1].split(\" /to \");","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"ananya21"},"content":"        Event event \u003d new Event(parts[0], timeParts[0], timeParts[1]);","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"ananya21"},"content":"        taskList.add(event);","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"ananya21"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + event);","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"ananya21"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":100}},{"path":"src/main/java/charlie/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import charlie.storage.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import charlie.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import charlie.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"    protected boolean isExit;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"     * Abstract execute method that aims to perform actions for a specific command. Needs to be overriden in sub-classes.","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"     * @param taskList - task list loaded at the start of the program.","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"     * @param ui - class responsible for user interface interactions","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"     * @param storage - class responsible for adding and loading tasks from and into the file","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"     * @throws CharlieException","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws CharlieException;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"     * getter method for the boolean value, which decides if the program exits or not, used in ExitCommand","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"     * @return isExit","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"        return isExit;","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":28}},{"path":"src/main/java/charlie/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import charlie.models.Task;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import charlie.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import charlie.storage.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import charlie.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"    private int index;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"     * constructor for DeleteCommand","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"     * @param index index of list item to be removed","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"     * executes a delete command, the finds the task to be deleted within taskList, deletes the","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"     * task and saves the new taskList to storage","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"     * @param taskList - task list loaded at the start of the program.","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"     * @param ui       - class responsible for user interface interactions","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"     * @param storage  - class responsible for adding and loading tasks from and into the file","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"     * @throws CharlieException","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws CharlieException {","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"        Task taskToBeDeleted \u003d taskList.getTasks().get(index - 1);","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"        taskList.getTasks().remove(index-1);","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"        ui.printOutput(\"Deleted task: \u0027\" + taskToBeDeleted.getDescription());","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"        isExit \u003d false;","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":37}},{"path":"src/main/java/charlie/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.storage.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import charlie.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import charlie.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"     * turns isExit to true, which effectively terminates the program","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"     * @param taskList - task list loaded at the start of the program.","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"     * @param ui       - class responsible for user interface interactions","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"     * @param storage  - class responsible for adding and loading tasks from and into the file","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"        isExit \u003d true;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":19}},{"path":"src/main/java/charlie/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import charlie.models.Task;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import charlie.storage.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import charlie.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import charlie.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"    private String keyword;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"     * constructor for FindCommand","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"     * @param keyword word to be searched in list of tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"     * executes a find command,","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"     * @param taskList - task list loaded at the start of the program.","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"     * @param ui       - class responsible for user interface interactions","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"     * @param storage  - class responsible for adding and loading tasks from and into the file","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"     * @throws CharlieException","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws CharlieException {","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"            System.out.println(\"No tasks found with the keyword: \" + keyword);","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"        } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"            StringBuilder response \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"                Task task \u003d matchingTasks.get(i);","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"                response.append(i + 1).append(\".\").append(task).append(\"\\n\");","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"ananya21"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"ananya21"},"content":"            System.out.println(response.toString());","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":54}},{"path":"src/main/java/charlie/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.storage.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import charlie.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import charlie.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"     * executes the List command, which prints out all the tasks in taskList","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"     * @param taskList - task list loaded at the start of the program.","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"     * @param ui       - class responsible for user interface interactions","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"     * @param storage  - class responsible for adding and loading tasks from and into the file","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"        ui.printOutput(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"        for (int i \u003d 0; i \u003c taskList.getTasks().size(); i++) {","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"            ui.printOutput((i + 1) + \".\" + taskList.getTasks().get(i));","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"        isExit \u003d false;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":22}},{"path":"src/main/java/charlie/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import charlie.models.Task;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import charlie.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import charlie.storage.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import charlie.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"// unmark command","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"    private int index;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"     * constructor for MarkCommand","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"     * @param index index of list item to be marked or unmarked","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"     * executes the mark command which effectively marks tasks as completed or uncompleted","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"     * @param taskList - task list loaded at the start of the program.","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"     * @param ui       - class responsible for user interface interactions","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"     * @param storage  - class responsible for adding and loading tasks from and into the file","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"     * @throws CharlieException","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws CharlieException {","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"        Task taskToBeMarked \u003d taskList.getTasks().get(index - 1);","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"        taskToBeMarked.markAsDone();","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"        ui.printOutput(\"Marked task: \u0027\" + taskToBeMarked.getDescription());","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"        isExit \u003d false;","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":38}},{"path":"src/main/java/charlie/exceptions/CharlieException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.exceptions;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"public class CharlieException extends Exception {","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"    public CharlieException(String message) {","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"        super(message);","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":7}},{"path":"src/main/java/charlie/models/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.models;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"    protected String byString;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"     * constructor for task Deadline","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"     * @param description description of task deadline in string form","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"     * @param byString time by which the task deadline is due, is in ISO_LOCAL_DATE format (yyyy-MM-dd)","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"    public Deadline(String description, String byString) {","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"        super(description);","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"        // handle the case where it\u0027s not a date","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"        this.by \u003d LocalDate.parse(byString); // Assumes input is in ISO_LOCAL_DATE format (yyyy-MM-dd)","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"        this.byString \u003d byString;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"     * @return description string for deadline event","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"    public String toString() {","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"    public String getBy() {","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"        return this.byString;","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":33}},{"path":"src/main/java/charlie/models/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.models;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"    protected String startsAt;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"    protected String endsAt;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"     * constructor for task Event","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"     * @param description description of task Event in string form","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"     * @param startsAt time by which the event starts","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"     * @param endsAt time by which the event ends","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"    public Event(String description, String startsAt, String endsAt) {","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"        this.startsAt \u003d startsAt;","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"        this.endsAt \u003d endsAt;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"    public String getStartsAt() {","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"        return startsAt;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"    public String getEndsAt() {","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"        return endsAt;","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"     * @return description string for task event","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startsAt + \" to: \" + endsAt + \")\";","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"ananya21":35}},{"path":"src/main/java/charlie/models/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.models;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"public class Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"    protected String description;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"     * prints the current status of task","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"     * @return the status of the task (whether it is completed or not","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"     * marks a task as done","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"     * marks a task as not done","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"     * @return whether or not the task has been successfully completed","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"        return isDone;","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"        return description;","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"ananya21":48}},{"path":"src/main/java/charlie/models/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.models;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"        super(description);","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"    public String toString() {","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"ananya21":10}},{"path":"src/main/java/charlie/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.parser;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.commands.*;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"public class Parser {","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"     * takes in the user full command, and returns the appropiate type of command based on user input","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"     * @param fullCommand the user command in its full string form","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"     * @return the command to be executed","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"     * @throws CharlieException","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"    public static Command parse(String fullCommand) throws CharlieException {","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"        if (fullCommand.startsWith(\"delete\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"            String[] words \u003d fullCommand.split(\" \");","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"            return new DeleteCommand(Integer.valueOf(words[1]));","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"        } else if (fullCommand.startsWith(\"todo\") || fullCommand.startsWith(\"event\") || fullCommand.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"            return new AddCommand(fullCommand);","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"        } else if (fullCommand.startsWith(\"list\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"            return new ListCommand();","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"        } else if (fullCommand.startsWith(\"bye\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"        } else if (fullCommand.startsWith(\"mark\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"            String[] words \u003d fullCommand.split(\" \");","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"            return new MarkCommand(Integer.valueOf(words[1]));","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"        } else if (fullCommand.startsWith(\"find\")) {","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"            String[] words \u003d fullCommand.split(\" \");","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"            return new FindCommand(words[1]);","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"        else{","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"            throw new CharlieException(\"Sorry, unknown command, try again!\");","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":37}},{"path":"src/main/java/charlie/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import charlie.models.Deadline;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import charlie.models.Event;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import charlie.models.Task;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import charlie.models.Todo;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import java.io.*;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"public class Storage {","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"    private String filePath;","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"    public Storage(String filePath){","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"     * loads tasks using the given filePath","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"     * @return tasks loaded from the filePath","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"     * @throws CharlieException","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws CharlieException{","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"            String line;","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"                try {","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"                    loadedTasks.add(parseTaskFromFile(line));","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"                } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"                    throw new CharlieException(\"Found a corrupted task in save file, skipping: \" + line);","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"                }","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"            reader.close();","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"            throw new CharlieException(\"No saved tasks found, starting with an empty list.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"        return loadedTasks;","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"     * The parseTaskFromFile method converts a single line of text into a specific Task object","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"ananya21"},"content":"     * (to-Do, Deadline, or Event) based on the line\u0027s format, throwing an exception for unrecognized","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"ananya21"},"content":"     * task types","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"ananya21"},"content":"     * @param line line read from the storage file","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"ananya21"},"content":"     * @return the task object","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"ananya21"},"content":"     * @throws IllegalArgumentException","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"ananya21"},"content":"    private Task parseTaskFromFile(String line) throws IllegalArgumentException {","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"ananya21"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"ananya21"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"ananya21"},"content":"        switch (parts[0]) {","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"ananya21"},"content":"            case \"T\":","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"ananya21"},"content":"                task \u003d new Todo(parts[2]);","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"ananya21"},"content":"                break;","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"ananya21"},"content":"            case \"D\":","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"ananya21"},"content":"                task \u003d new Deadline(parts[2], parts[3]);","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"ananya21"},"content":"                break;","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"ananya21"},"content":"            case \"E\":","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"ananya21"},"content":"                task \u003d new Event(parts[2], parts[3], parts[4]);","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"ananya21"},"content":"                break;","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"ananya21"},"content":"            default:","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"ananya21"},"content":"                throw new IllegalArgumentException(\"Invalid task type in file.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"ananya21"},"content":"        if (parts[1].equals(\"1\")) task.markAsDone();","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"ananya21"},"content":"        return task;","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"ananya21"},"content":"     * saves the list of tasks to the storage file","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"ananya21"},"content":"     * @param taskList lists of tasks to be saved","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"ananya21"},"content":"     * @throws CharlieException","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"ananya21"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e taskList) throws CharlieException {","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"ananya21"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"ananya21"},"content":"            Files.createDirectories(Paths.get(\"./data\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"ananya21"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"ananya21"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"ananya21"},"content":"                writer.write(taskToFileFormat(task));","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"ananya21"},"content":"                writer.newLine();","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"ananya21"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"ananya21"},"content":"            writer.close();","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"ananya21"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"ananya21"},"content":"            throw new CharlieException(\"An error occurred while saving tasks to disk.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"ananya21"},"content":"     * converts tasks to format required to be written within files","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"ananya21"},"content":"     * @param task task to be converted into format for saving within the file","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"ananya21"},"content":"     * @return string of how the task should appear in file format","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"ananya21"},"content":"    private String taskToFileFormat(Task task) {","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"ananya21"},"content":"        String type \u003d task instanceof Todo ? \"T\" :","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"ananya21"},"content":"                task instanceof Deadline ? \"D\" :","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"ananya21"},"content":"                        task instanceof Event ? \"E\" : \"\";","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"ananya21"},"content":"        int done \u003d task.isDone() ? 1 : 0;","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"ananya21"},"content":"        String details \u003d task.getDescription();","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":109,"author":{"gitId":"ananya21"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2024-02-23"},{"lineNumber":110,"author":{"gitId":"ananya21"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"ananya21"},"content":"            details +\u003d \" | \" + deadline.getBy();","lastModifiedDate":"2024-02-23"},{"lineNumber":112,"author":{"gitId":"ananya21"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-02-23"},{"lineNumber":113,"author":{"gitId":"ananya21"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2024-02-23"},{"lineNumber":114,"author":{"gitId":"ananya21"},"content":"            details +\u003d \" | \" + event.getStartsAt() + \" | \" + event.getEndsAt();","lastModifiedDate":"2024-02-23"},{"lineNumber":115,"author":{"gitId":"ananya21"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":116,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":117,"author":{"gitId":"ananya21"},"content":"        return String.join(\" | \", type, String.valueOf(done), details);","lastModifiedDate":"2024-02-23"},{"lineNumber":118,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":119,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":119}},{"path":"src/main/java/charlie/storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.models.Task;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"public class TaskList {","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks){","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"    public TaskList(){","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"        return tasks;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":21}},{"path":"src/main/java/charlie/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"public class Ui {","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"    private Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"    public void showLoadingError(String message) {","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"        System.err.println(\"Error: \" + message);","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"     * introduces Charlie to the user","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"    public void showWelcome(){","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"        System.out.println(\"Hello, I\u0027m Charlie.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"     * generates a line for separation of commands","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"    public void showLine(){","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"        System.out.println(\"___________________________________________\");","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"     * @param message shows an error message in the case of an error","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    public void showError(String message){","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"        System.err.println(message);","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"     * reads user commands, and returns as strings","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"     * @return user commands","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"     * prints whatever string output it receives","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"     * @param output string output","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"    public void printOutput(String output){","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"        System.out.println(output);","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":48}},{"path":"src/test/java/charlie/commands/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.commands;  //same package as the class being tested","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.models.*;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import charlie.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"import charlie.storage.Storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import charlie.storage.TaskList;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"public class AddCommandTest {","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"    @AfterEach","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"    public void testAddTodoTask() throws CharlieException {","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"        Command command \u003d new AddCommand(\"todo borrow book\");","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"        Task todoTask \u003d new Todo(\"todo borrow book\");","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"        tasks.add(todoTask);","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"        TaskList tasklist \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"        storage \u003d new Storage(\"./data/charlie.txt\");","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"        command.execute(tasklist, ui, storage);","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"        String response \u003d outContent.toString();","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"ananya21"},"content":"        String expectedResponse \u003d \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"ananya21"},"content":"                \"  [T][ ] borrow book\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"ananya21"},"content":"                \"Now you have 1 tasks in the list.\";","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"ananya21"},"content":"            // Check if the actual response contains the expected text","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"ananya21"},"content":"        assertTrue(response.contains(\"Got it. I\u0027ve added this task:\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"ananya21"},"content":"        assertTrue(response.contains(\"[T][ ] borrow book\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"ananya21"},"content":"        assertTrue(response.contains(\"tasks in the list.\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"ananya21"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"ananya21"},"content":"    public void testAddDeadlineTask() throws CharlieException {","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"ananya21"},"content":"        Command command \u003d new AddCommand(\"deadline return book /by 2019-10-15\");","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"ananya21"},"content":"        Task deadlineTask \u003d new Deadline(\"return book\", \"2019-10-15\");","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"ananya21"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"ananya21"},"content":"        tasks.add(deadlineTask);","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"ananya21"},"content":"        TaskList tasklist \u003d new TaskList(tasks);","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"ananya21"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"ananya21"},"content":"        storage \u003d new Storage(\"./data/charlie.txt\");","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"ananya21"},"content":"        command.execute(tasklist, ui, storage);","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"ananya21"},"content":"        String response \u003d outContent.toString();","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"ananya21"},"content":"        String expectedResponse \u003d \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"ananya21"},"content":"                \"  [D][ ] return book (by: Oct 15 2019)\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"ananya21"},"content":"                \"Now you have 2 tasks in the list.\";","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"ananya21"},"content":"        // Check if the actual response contains the expected text","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"ananya21"},"content":"        assertTrue(response.contains(\"Got it. I\u0027ve added this task:\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"ananya21"},"content":"        assertTrue(response.contains(\"[D][ ] return book (by: Oct 15 2019)\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"ananya21"},"content":"        assertTrue(response.contains(\"tasks in the list.\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":82}},{"path":"src/test/java/charlie/commands/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import charlie.storage.*;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import charlie.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"    @AfterEach","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"    public void testDeleteTask() throws CharlieException {","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"        Command command \u003d new DeleteCommand(1);","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"        storage \u003d new Storage(\"./data/charlie.txt\");","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"        TaskList tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"        command.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"        String response \u003d outContent.toString();","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"        String expectedResponse \u003d \"Deleted task: \u0027todo borrow book\u0027\";","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"        // Check if the actual response contains the expected text","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"        assertTrue(response.contains(\"Deleted task:\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":47}},{"path":"src/test/java/charlie/commands/ExitCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import charlie.storage.*;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import charlie.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"public class ExitCommandTest {","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"    @AfterEach","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"    public void testDeleteTask() throws CharlieException {","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"        Command command \u003d new ExitCommand();","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"        storage \u003d new Storage(\"./data/charlie.txt\");","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"        command.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"        String response \u003d outContent.toString();","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"        String expectedResponse \u003d \"\";","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"        // Check if the actual response contains the expected text","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"        assertTrue(response.equals(\"\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":47}},{"path":"src/test/java/charlie/commands/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import charlie.storage.*;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import charlie.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"public class ListCommandTest {","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"    @AfterEach","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"    public void testDeleteTask() throws CharlieException {","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"        Command command \u003d new ListCommand();","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"        storage \u003d new Storage(\"./data/charlie.txt\");","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"        TaskList tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"        command.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"        String response \u003d outContent.toString();","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"        String expectedResponse \u003d \"Here are the tasks in your list:\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"                \"1.[T][ ] borrow book\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"        // Check if the actual response contains the expected text","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"        assertTrue(response.contains(\"Here are the tasks in your list:\\n\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":47}},{"path":"src/test/java/charlie/commands/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"package charlie.commands;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"import charlie.exceptions.CharlieException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"import charlie.storage.*;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ananya21"},"content":"import charlie.ui.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ananya21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ananya21"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ananya21"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ananya21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ananya21"},"content":"public class MarkCommandTest {","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ananya21"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ananya21"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"    public void setUpStreams() {","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ananya21"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"    @AfterEach","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ananya21"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ananya21"},"content":"    @Test","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ananya21"},"content":"    public void testMarkTask() throws CharlieException {","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ananya21"},"content":"        Command command \u003d new MarkCommand(1);","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ananya21"},"content":"        storage \u003d new Storage(\"./data/charlie.txt\");","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ananya21"},"content":"        TaskList tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ananya21"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ananya21"},"content":"        command.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"ananya21"},"content":"        String response \u003d outContent.toString();","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ananya21"},"content":"        String expectedResponse \u003d \"Marked task: \u0027borrow book\";","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"ananya21"},"content":"        // Check if the actual response contains the expected text","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"ananya21"},"content":"        assertTrue(response.contains(\"Marked task: \"));","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"ananya21"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"ananya21"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"ananya21"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ananya21":47}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ananya21"},"content":"todo borrow book","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"ananya21"},"content":"list","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"ananya21"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"ananya21"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"ananya21":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"ananya21"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"ananya21"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ananya21"},"content":"REM run the program, feed charlie.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ananya21"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e add-gradle-support","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":21,"ananya21":4}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"ananya21"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"ananya21"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ananya21"},"content":"# run the program, feed Charlie.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ananya21"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e add-gradle-support","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ananya21"},"content":"java -classpath ../bin Charlie \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"ananya21":5}}]
