[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"## Productivity observation with AI assist","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"Using github copilot for autocomplete","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"### Performance","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"Does best when the structure of the top level codes are there,","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"hence providing a better context for the AI to work with.","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"When there is no structure yet, it has higher chance of hallucinating","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"the wrong code.","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"It is also a 60-40 mix of good and bad suggestions, sometimes the details are inaccurate.","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"If you have coded similar function before, it will be able to suggest the right code when repeated.","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"Thus, it is better with laborous tasks with certain existing code for better code suggestions.","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"Personally think that it saves some time by helping you type similar code again ","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"or very trivial next few steps that you expect to take.","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"ys112":18}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"        return \"D\";","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"        return by;","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"        return \"[D]\" +  super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ys112":24}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"import java.io.File;","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"import java.util.List;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"        List\u003cTask\u003e tasksList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"            File file \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"                boolean isCreated \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"                isCreated \u003d file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"                isCreated \u003d file.createNewFile();","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"                if (!isCreated) {","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"                    throw new DukeException(\"Error: File could not be created.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"            else {","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"                Scanner s \u003d new Scanner(file);","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"                while (s.hasNext()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"                    String line \u003d s.nextLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"                    Task task \u003d getTask(line);","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"                    tasksList.add(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"                s.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"            System.out.println(\"Error: File could not be found.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"            System.out.println(\"Error: File could not be created.\");","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"        System.out.println(\"DevGPT:\\n\\tHello! I\u0027m DevGPT\\nWhat can I do for you?\");","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"        while (!isExit) {","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"            try {","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"                while (true) {","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"                    System.out.println(\"User:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"                    String input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"                    if (input.contains(\"bye\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"                        isExit \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"                        break;","lastModifiedDate":"2024-01-22"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"                    }","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"                    String command \u003d input.split(\" \")[0];","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"                    if (command.equals(\"todo\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"                        if (input.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"                            throw new DukeException(\"The description of a todo cannot be empty. \\n\\t\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"                                \"Please use the following format: todo \u003cdescription\u003e\");","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"                        }","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"                        String details \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"                        Task task \u003d new Todo(details);","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"                        tasksList.add(task);","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"DevGPT:\\n\\t\" + \" Got it. I\u0027ve added this task: \\n\\t\\t\" + task.toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"DevGPT:\\n\\t Now you have \" + tasksList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"ys112"},"content":"                    } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"ys112"},"content":"                        if (input.split(\" \").length \u003c\u003d 3) {","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"ys112"},"content":"                            throw new DukeException(\"The deadline and date for a task cannot be empty. \\n\\t\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":73,"author":{"gitId":"ys112"},"content":"                                \"Please use the following format: deadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2024-01-23"},{"lineNumber":74,"author":{"gitId":"ys112"},"content":"                        } else if (!input.contains(\"/by\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":75,"author":{"gitId":"ys112"},"content":"                            throw new DukeException(\"Invalid command for deadline. \\n\\t\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":76,"author":{"gitId":"ys112"},"content":"                                \"Please use the following format: deadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2024-01-23"},{"lineNumber":77,"author":{"gitId":"ys112"},"content":"                        }","lastModifiedDate":"2024-01-23"},{"lineNumber":78,"author":{"gitId":"ys112"},"content":"                        String details \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2024-01-23"},{"lineNumber":79,"author":{"gitId":"ys112"},"content":"                        String description \u003d details.split(\"/by \")[0].trim();","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"ys112"},"content":"                        String by \u003d details.split(\"/by \")[1].trim();","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"ys112"},"content":"                        Task task \u003d new Deadline(description, getInputDateFormat(by));","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"ys112"},"content":"                        tasksList.add(task);","lastModifiedDate":"2024-01-23"},{"lineNumber":83,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"DevGPT:\\n\\t\" + \" Got it. I\u0027ve added this task: \\n\\t\\t\" + task.toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":84,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"DevGPT:\\n\\t Now you have \" + tasksList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":85,"author":{"gitId":"ys112"},"content":"                    } else if (command.equals(\"event\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":86,"author":{"gitId":"ys112"},"content":"                        if (input.split(\" \").length \u003c\u003d 3) {","lastModifiedDate":"2024-01-23"},{"lineNumber":87,"author":{"gitId":"ys112"},"content":"                            throw new DukeException(\"The date for an event cannot be empty. \\n\\t\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":88,"author":{"gitId":"ys112"},"content":"                                \"Please use the following format: event \u003cdescription\u003e /from \u003cdate\u003e /to \u003cdate\u003e\");","lastModifiedDate":"2024-01-23"},{"lineNumber":89,"author":{"gitId":"ys112"},"content":"                        } else if (!input.contains(\"/from\") || !input.contains(\"/to\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":90,"author":{"gitId":"ys112"},"content":"                            throw new DukeException(\"Invalid command for event. \\n\\t\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":91,"author":{"gitId":"ys112"},"content":"                                \"Please use the following format: event \u003cdescription\u003e /from \u003cdate\u003e /to \u003cdate\u003e\");","lastModifiedDate":"2024-01-23"},{"lineNumber":92,"author":{"gitId":"ys112"},"content":"                        }","lastModifiedDate":"2024-01-23"},{"lineNumber":93,"author":{"gitId":"ys112"},"content":"                        String details \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2024-01-23"},{"lineNumber":94,"author":{"gitId":"ys112"},"content":"                        String description \u003d details.split(\"/from\")[0].trim();","lastModifiedDate":"2024-01-23"},{"lineNumber":95,"author":{"gitId":"ys112"},"content":"                        String from \u003d details.split(\"/from\")[1].split(\"/to\")[0].trim();","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"ys112"},"content":"                        String to \u003d details.split(\"/to\")[1].trim();","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":98,"author":{"gitId":"ys112"},"content":"                        Task task \u003d new Event(description, getInputDateFormat(from), getInputDateFormat(to));","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"ys112"},"content":"                        tasksList.add(task);","lastModifiedDate":"2024-01-23"},{"lineNumber":100,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"DevGPT:\\n\\t\" + \" Got it. I\u0027ve added this task: \\n\\t\\t\" + task.toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":101,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"DevGPT:\\n\\t Now you have \" + tasksList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":102,"author":{"gitId":"ys112"},"content":"                    } else if (command.equals(\"list\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":103,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"DevGPT:\\n\\t Here are the tasks in your list:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":104,"author":{"gitId":"ys112"},"content":"                        for (int i \u003d 0; i \u003c tasksList.size(); i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":105,"author":{"gitId":"ys112"},"content":"                            Task task \u003d tasksList.get(i);","lastModifiedDate":"2024-01-22"},{"lineNumber":106,"author":{"gitId":"ys112"},"content":"                            System.out.println(\"\\t\\t\" + (i + 1) + \". \" + task.toString());","lastModifiedDate":"2024-01-23"},{"lineNumber":107,"author":{"gitId":"ys112"},"content":"                        }","lastModifiedDate":"2024-01-22"},{"lineNumber":108,"author":{"gitId":"ys112"},"content":"                    } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":109,"author":{"gitId":"ys112"},"content":"                        String[] split \u003d input.split(\" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":110,"author":{"gitId":"ys112"},"content":"                        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":111,"author":{"gitId":"ys112"},"content":"                            throw new DukeException(\"The index of a task cannot be empty. \\n\\t\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":112,"author":{"gitId":"ys112"},"content":"                                \"Please use the following format: unmark \u003cindex\u003e\");","lastModifiedDate":"2024-01-23"},{"lineNumber":113,"author":{"gitId":"ys112"},"content":"                        } else if (parseInt(split[1]) \u003e tasksList.size() || parseInt(split[1]) \u003c 1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":114,"author":{"gitId":"ys112"},"content":"                            throw new DukeException(\"No such task exists.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":115,"author":{"gitId":"ys112"},"content":"                        }","lastModifiedDate":"2024-01-23"},{"lineNumber":116,"author":{"gitId":"ys112"},"content":"                        int index \u003d parseInt(split[1]);","lastModifiedDate":"2024-01-23"},{"lineNumber":117,"author":{"gitId":"ys112"},"content":"                        Task task \u003d tasksList.get(index - 1);","lastModifiedDate":"2024-01-22"},{"lineNumber":118,"author":{"gitId":"ys112"},"content":"                        task.markAsUndone();","lastModifiedDate":"2024-01-22"},{"lineNumber":119,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"DevGPT:\\n\\t Got it! I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":120,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"\\t\\t\" + task.toString());","lastModifiedDate":"2024-01-27"},{"lineNumber":121,"author":{"gitId":"ys112"},"content":"                    } else if (command.equals(\"mark\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":122,"author":{"gitId":"ys112"},"content":"                        String[] split \u003d input.split(\" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":123,"author":{"gitId":"ys112"},"content":"                        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":124,"author":{"gitId":"ys112"},"content":"                            throw new DukeException(\"The index of a task cannot be empty. \\n\\t\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":125,"author":{"gitId":"ys112"},"content":"                                \"Please use the following format: mark \u003cindex\u003e\");","lastModifiedDate":"2024-01-23"},{"lineNumber":126,"author":{"gitId":"ys112"},"content":"                        } else if (parseInt(split[1]) \u003e tasksList.size() || parseInt(split[1]) \u003c 1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":127,"author":{"gitId":"ys112"},"content":"                            throw new DukeException(\"No such task exists.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":128,"author":{"gitId":"ys112"},"content":"                        }","lastModifiedDate":"2024-01-23"},{"lineNumber":129,"author":{"gitId":"ys112"},"content":"                        int index \u003d Integer.parseInt(split[1]);","lastModifiedDate":"2024-01-22"},{"lineNumber":130,"author":{"gitId":"ys112"},"content":"                        Task task \u003d tasksList.get(index - 1);","lastModifiedDate":"2024-01-22"},{"lineNumber":131,"author":{"gitId":"ys112"},"content":"                        task.markAsDone();","lastModifiedDate":"2024-01-22"},{"lineNumber":132,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"DevGPT:\\n\\t Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-22"},{"lineNumber":133,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"\\t\\t\" + task.toString());","lastModifiedDate":"2024-01-27"},{"lineNumber":134,"author":{"gitId":"ys112"},"content":"                    } else if (command.equals(\"delete\")) {","lastModifiedDate":"2024-01-23"},{"lineNumber":135,"author":{"gitId":"ys112"},"content":"                        String[] split \u003d input.split(\" \");","lastModifiedDate":"2024-01-23"},{"lineNumber":136,"author":{"gitId":"ys112"},"content":"                        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":137,"author":{"gitId":"ys112"},"content":"                            throw new DukeException(\"The index of a task cannot be empty. \\n\\t\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":138,"author":{"gitId":"ys112"},"content":"                                \"Please use the following format: delete \u003cindex\u003e\");","lastModifiedDate":"2024-01-23"},{"lineNumber":139,"author":{"gitId":"ys112"},"content":"                        } else if (parseInt(split[1]) \u003e tasksList.size() || parseInt(split[1]) \u003c 1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":140,"author":{"gitId":"ys112"},"content":"                            throw new DukeException(\"No such task exists.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":141,"author":{"gitId":"ys112"},"content":"                        }","lastModifiedDate":"2024-01-23"},{"lineNumber":142,"author":{"gitId":"ys112"},"content":"                        int index \u003d Integer.parseInt(split[1]);","lastModifiedDate":"2024-01-23"},{"lineNumber":143,"author":{"gitId":"ys112"},"content":"                        Task task \u003d tasksList.remove(index - 1);","lastModifiedDate":"2024-01-23"},{"lineNumber":144,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"DevGPT:\\n\\t Poof! I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":145,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"\\t\\t\" + task.toString());","lastModifiedDate":"2024-01-27"},{"lineNumber":146,"author":{"gitId":"ys112"},"content":"                        System.out.println(\"DevGPT:\\n\\t Now you have \" + tasksList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":147,"author":{"gitId":"ys112"},"content":"                    } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":148,"author":{"gitId":"ys112"},"content":"                        throw new DukeException(","lastModifiedDate":"2024-01-23"},{"lineNumber":149,"author":{"gitId":"ys112"},"content":"                            \"Your message is not understood. Please use the following:\\n\\t1. todo \u003cdescription\u003e\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":150,"author":{"gitId":"ys112"},"content":"                                \"\\n\\t2. deadline \u003cdescription\u003e /by \u003cdd-mm-yyyy\u003e\\n\\t3. event \u003cdescription\u003e /from \u003cdd-mm-yyyy\u003e /to \u003cdd-mm-yyyy\u003e\" +","lastModifiedDate":"2024-01-27"},{"lineNumber":151,"author":{"gitId":"ys112"},"content":"                                \"\\n\\t4. list\\n\\t5. mark \u003cindex\u003e\\n\\t6. unmark \u003cindex\u003e\\n\\t7. delete \u003cindex\u003e\\n\\t8. bye\");","lastModifiedDate":"2024-01-23"},{"lineNumber":152,"author":{"gitId":"ys112"},"content":"                    }","lastModifiedDate":"2024-01-22"},{"lineNumber":153,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":154,"author":{"gitId":"ys112"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":155,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":156,"author":{"gitId":"ys112"},"content":"                scanner.close();","lastModifiedDate":"2024-01-22"},{"lineNumber":157,"author":{"gitId":"ys112"},"content":"                System.out.println(\"DevGPT:\\n\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-22"},{"lineNumber":158,"author":{"gitId":"ys112"},"content":"                writeToFile(tasksList);","lastModifiedDate":"2024-01-27"},{"lineNumber":159,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":160,"author":{"gitId":"ys112"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":161,"author":{"gitId":"ys112"},"content":"                System.out.println(\"DevGPT:\\n\\t\" + \"Input error: Please enter a valid number to modify task\");","lastModifiedDate":"2024-01-23"},{"lineNumber":162,"author":{"gitId":"ys112"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":163,"author":{"gitId":"ys112"},"content":"                System.out.println(\"DevGPT:\\n\\t\" + e.getMessage());","lastModifiedDate":"2024-01-23"},{"lineNumber":164,"author":{"gitId":"ys112"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":165,"author":{"gitId":"ys112"},"content":"                System.out.println(\"DevGPT:\\n\\t\" + \"Input error: Please enter a valid date in the format dd-mm-yyyy\");","lastModifiedDate":"2024-01-27"},{"lineNumber":166,"author":{"gitId":"ys112"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":167,"author":{"gitId":"ys112"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2024-01-27"},{"lineNumber":168,"author":{"gitId":"ys112"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":169,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":171,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":172,"author":{"gitId":"ys112"},"content":"    private static LocalDate getInputDateFormat(String s) throws DateTimeParseException {","lastModifiedDate":"2024-01-27"},{"lineNumber":173,"author":{"gitId":"ys112"},"content":"        return LocalDate.parse(s, DateTimeFormatter.ofPattern(\"d-M-yyyy\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":174,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":175,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":176,"author":{"gitId":"ys112"},"content":"    private static String getLocalDateOutputFormat(LocalDate date) throws DateTimeParseException {","lastModifiedDate":"2024-01-27"},{"lineNumber":177,"author":{"gitId":"ys112"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":178,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":179,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":180,"author":{"gitId":"ys112"},"content":"    private static Task getTask(String line) throws DukeException {","lastModifiedDate":"2024-01-27"},{"lineNumber":181,"author":{"gitId":"ys112"},"content":"        String[] split \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-01-27"},{"lineNumber":182,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":183,"author":{"gitId":"ys112"},"content":"        // common fields","lastModifiedDate":"2024-01-27"},{"lineNumber":184,"author":{"gitId":"ys112"},"content":"        String taskType \u003d split[0];","lastModifiedDate":"2024-01-27"},{"lineNumber":185,"author":{"gitId":"ys112"},"content":"        boolean isDone \u003d split[1].equals(\"1\");","lastModifiedDate":"2024-01-27"},{"lineNumber":186,"author":{"gitId":"ys112"},"content":"        String description \u003d split[2];","lastModifiedDate":"2024-01-27"},{"lineNumber":187,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":188,"author":{"gitId":"ys112"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-01-27"},{"lineNumber":189,"author":{"gitId":"ys112"},"content":"        // class specific fields","lastModifiedDate":"2024-01-27"},{"lineNumber":190,"author":{"gitId":"ys112"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":191,"author":{"gitId":"ys112"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2024-01-27"},{"lineNumber":192,"author":{"gitId":"ys112"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":193,"author":{"gitId":"ys112"},"content":"            String by \u003d split[3];","lastModifiedDate":"2024-01-27"},{"lineNumber":194,"author":{"gitId":"ys112"},"content":"            task \u003d new Deadline(description, getInputDateFormat(by));","lastModifiedDate":"2024-01-27"},{"lineNumber":195,"author":{"gitId":"ys112"},"content":"        } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":196,"author":{"gitId":"ys112"},"content":"            String from \u003d split[3];","lastModifiedDate":"2024-01-27"},{"lineNumber":197,"author":{"gitId":"ys112"},"content":"            String to \u003d split[4];","lastModifiedDate":"2024-01-27"},{"lineNumber":198,"author":{"gitId":"ys112"},"content":"            task \u003d new Event(description, getInputDateFormat(from), getInputDateFormat(to));","lastModifiedDate":"2024-01-27"},{"lineNumber":199,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":200,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":201,"author":{"gitId":"ys112"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2024-01-27"},{"lineNumber":202,"author":{"gitId":"ys112"},"content":"            throw new DukeException(\"Invalid task type\");","lastModifiedDate":"2024-01-27"},{"lineNumber":203,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":204,"author":{"gitId":"ys112"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-27"},{"lineNumber":205,"author":{"gitId":"ys112"},"content":"            task.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":206,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":207,"author":{"gitId":"ys112"},"content":"        return task;","lastModifiedDate":"2024-01-27"},{"lineNumber":208,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":209,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":210,"author":{"gitId":"ys112"},"content":"    private static void writeToFile(List\u003cTask\u003e tasksList) throws IOException {","lastModifiedDate":"2024-01-27"},{"lineNumber":211,"author":{"gitId":"ys112"},"content":"        FileWriter fileWriter \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2024-01-27"},{"lineNumber":212,"author":{"gitId":"ys112"},"content":"        for (Task task : tasksList) {","lastModifiedDate":"2024-01-27"},{"lineNumber":213,"author":{"gitId":"ys112"},"content":"            if (task instanceof Todo) {","lastModifiedDate":"2024-01-27"},{"lineNumber":214,"author":{"gitId":"ys112"},"content":"                fileWriter.write(","lastModifiedDate":"2024-01-27"},{"lineNumber":215,"author":{"gitId":"ys112"},"content":"                    task.getTaskType() + \" | \" + (task.isDone ? \"1\" : \"0\") + \" | \" + task.getDescription() + \"\\n\");","lastModifiedDate":"2024-01-27"},{"lineNumber":216,"author":{"gitId":"ys112"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2024-01-27"},{"lineNumber":217,"author":{"gitId":"ys112"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2024-01-27"},{"lineNumber":218,"author":{"gitId":"ys112"},"content":"                fileWriter.write(","lastModifiedDate":"2024-01-27"},{"lineNumber":219,"author":{"gitId":"ys112"},"content":"                    deadline.getTaskType() + \" | \" + (deadline.isDone ? \"1\" : \"0\") + \" | \" + deadline.getDescription() +","lastModifiedDate":"2024-01-27"},{"lineNumber":220,"author":{"gitId":"ys112"},"content":"                        \" | \" + getLocalDateOutputFormat(deadline.getBy()) + \"\\n\");","lastModifiedDate":"2024-01-27"},{"lineNumber":221,"author":{"gitId":"ys112"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2024-01-27"},{"lineNumber":222,"author":{"gitId":"ys112"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2024-01-27"},{"lineNumber":223,"author":{"gitId":"ys112"},"content":"                fileWriter.write(","lastModifiedDate":"2024-01-27"},{"lineNumber":224,"author":{"gitId":"ys112"},"content":"                    task.getTaskType() + \" | \" + (task.isDone ? \"1\" : \"0\") + \" | \" + task.getDescription() + \" | \" +","lastModifiedDate":"2024-01-27"},{"lineNumber":225,"author":{"gitId":"ys112"},"content":"                        getLocalDateOutputFormat(event.getFrom()) + \" | \" + getLocalDateOutputFormat(event.getTo()) + \"\\n\");","lastModifiedDate":"2024-01-27"},{"lineNumber":226,"author":{"gitId":"ys112"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":227,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":228,"author":{"gitId":"ys112"},"content":"        fileWriter.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":229,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":230,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":231,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ys112":229,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"        super(\"DevGPT error: \" + message);","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ys112":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"        return \"E\";","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"    public LocalDate getFrom() {","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"        return from;","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"    public LocalDate getTo() {","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"        return to;","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"        return \"[E]\" +  super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \" to: \"","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"            + to.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \")\";","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ys112":30}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"        protected String description;","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"        protected boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"        public Task(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"            this.description \u003d description;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"        public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"            return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"        public void markAsDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"        public void markAsUndone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"        public String getDescription() {","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"            return description;","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"        public String getTaskType() {","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"            return \" \";","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"        @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"        public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"            return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"ys112":35}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"        return \"T\";","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ys112":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"deadline return book /by 3-4-2024","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"event project meeting /from 27-1-2024 /to 30-2-2024","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"delete 3","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"event project meeting /from 27-1-2024 /to 30-2-2024","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"todo","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"deadline","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"event","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"deadline return book Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"event LSRFM comeback /from 19 03 2023","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"mark dfuhyasf","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"mark 8","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"delete dhuiasdhuasd","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"delete 8","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"LSRFM","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ys112":18}},{"path":"text-ui-test/input3.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"todo borrow book","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"delete 3","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"todo","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"deadline","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"event","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"deadline return book Sunday","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"event LSRFM comeback /from 19 Feb 2023","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"mark dfuhyasf","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"mark 8","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"delete dhuiasdhuasd","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"delete 8","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"LSRFM","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"bye","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"ys112":18}}]
