[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"Morninggloryyy"},"content":"    mainClass.set(\"damon.Damon\")","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"Morninggloryyy"},"content":"    archiveBaseName \u003d \"damon\"","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Morninggloryyy":2,"-":40}},{"path":"src/main/java/FormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"public class FormatException extends Exception{","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"    public FormatException() {","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":"        super(\"Sorry, I cant understand what you mean. Maybe you can change your input format.\");","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"Morninggloryyy":6}},{"path":"src/main/java/NoDeadLineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"public class NoDeadLineException extends Exception{","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"    public NoDeadLineException() {","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"        super(\"Pls add deadline for this task. Thank u! :)\");","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"Morninggloryyy":5}},{"path":"src/main/java/NoDescriptionDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"public class NoDescriptionDeadlineException extends Exception{","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"    public NoDescriptionDeadlineException() {","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"        super(\"Pls add description and deadline of this task, thank u! :)\");","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"Morninggloryyy":5}},{"path":"src/main/java/TooManyDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"public class TooManyDeadlineException extends Exception{","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"    public TooManyDeadlineException() {","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"        super(\"Pls only add one deadline for this task! :)\");","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"Morninggloryyy":5}},{"path":"src/main/java/damon/Damon.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"package damon;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"import damon.command.Command;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":"import damon.exceptions.DamonExceptions;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":"import damon.storage.Storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":"import damon.tasklist.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":"import damon.ui.Ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Morninggloryyy"},"content":"import damon.parser.Parser;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"Morninggloryyy"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"Morninggloryyy"},"content":" * Creates a chatbot called Damon. A Damon object responds to user\u0027s input","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"Morninggloryyy"},"content":" * by adding, deleting, marking, and un-marking Tasks in TaskList object.","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"Morninggloryyy"},"content":" * Damon also store Tasks in TaskList in storage file of its filepath using Storage object.","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"Morninggloryyy"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"Morninggloryyy"},"content":"public class Damon {","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"Morninggloryyy"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Morninggloryyy"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Morninggloryyy"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"Morninggloryyy"},"content":"     * Constructs a new Damon object with String filePath parameter.","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"Morninggloryyy"},"content":"     * @param filePath Path of storage file of this Damon object.","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"Morninggloryyy"},"content":"    public Damon(String filePath) {","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Morninggloryyy"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Morninggloryyy"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Morninggloryyy"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Morninggloryyy"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Morninggloryyy"},"content":"        } catch (DamonExceptions e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Morninggloryyy"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Morninggloryyy"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Morninggloryyy"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"Morninggloryyy"},"content":"     * Runs chatbot Damon.","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"Morninggloryyy"},"content":"    public void run() {","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"Morninggloryyy"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"Morninggloryyy"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"Morninggloryyy"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"Morninggloryyy"},"content":"            try {","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"Morninggloryyy"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Morninggloryyy"},"content":"                //ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"Morninggloryyy"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Morninggloryyy"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"Morninggloryyy"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"Morninggloryyy"},"content":"            } catch (DamonExceptions e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"Morninggloryyy"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"Morninggloryyy"},"content":"            } finally {","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"Morninggloryyy"},"content":"                ui.showLine();","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"Morninggloryyy"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"Morninggloryyy"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"Morninggloryyy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"Morninggloryyy"},"content":"        new Damon(\"..\\\\Damon.txt\").run();","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Morninggloryyy":63}},{"path":"src/main/java/damon/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"package damon.command;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"import damon.storage.Storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":"import damon.task.Deadline;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":"import damon.task.Event;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":"import damon.task.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":"import damon.task.ToDo;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Morninggloryyy"},"content":"import damon.tasklist.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Morninggloryyy"},"content":"import damon.ui.Ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Morninggloryyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Morninggloryyy"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"Morninggloryyy"},"content":" * Represents AddCommand object which is corresponding to user\u0027s adding Task input.","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"Morninggloryyy"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"Morninggloryyy"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Morninggloryyy"},"content":"    public AddCommand(String command) {","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Morninggloryyy"},"content":"        super(command);","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"Morninggloryyy"},"content":"     * Executes AddCommand, i.e., adds a new Task to current TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"Morninggloryyy"},"content":"     * @param tasks Current TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"Morninggloryyy"},"content":"     * @param ui Ui object of Damon object.","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"Morninggloryyy"},"content":"     * @param storage Storage object of Damon object.","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"Morninggloryyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Morninggloryyy"},"content":"        Task newTask;","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"Morninggloryyy"},"content":"        if (this.command.startsWith(\"todo\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Morninggloryyy"},"content":"            newTask \u003d addToDo(this.command);","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"Morninggloryyy"},"content":"        } else if (this.command.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Morninggloryyy"},"content":"            newTask \u003d addDeadline(this.command);","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"Morninggloryyy"},"content":"        } else {","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Morninggloryyy"},"content":"            newTask \u003d addEvent(this.command);","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"Morninggloryyy"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"Morninggloryyy"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Morninggloryyy"},"content":"        ui.showAddCommand(newTask, tasks);","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"Morninggloryyy"},"content":"        storage.writeFile(tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"Morninggloryyy"},"content":"    private Task addToDo(String inputString) {","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"Morninggloryyy"},"content":"        String description \u003d inputString.substring(5);","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"Morninggloryyy"},"content":"        return new ToDo(description);","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"Morninggloryyy"},"content":"    private Task addDeadline(String inputString) {","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"Morninggloryyy"},"content":"        String[] splittedString \u003d inputString.substring(9)","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"Morninggloryyy"},"content":"                .split(\" /by \");","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"Morninggloryyy"},"content":"        String description \u003d splittedString[0];","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"Morninggloryyy"},"content":"        String by \u003d splittedString[1];","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"Morninggloryyy"},"content":"        return new Deadline(description, LocalDate.parse(by));","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"Morninggloryyy"},"content":"    private Task addEvent(String inputString) {","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"Morninggloryyy"},"content":"        String[] firstSplittedString \u003d inputString.substring(6)","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"Morninggloryyy"},"content":"                .split(\" /from \");","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"Morninggloryyy"},"content":"        String description \u003d firstSplittedString[0];","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"Morninggloryyy"},"content":"        String[] secondSplittedString \u003d firstSplittedString[1].split(\" /to \");","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"Morninggloryyy"},"content":"        String startTime \u003d secondSplittedString[0];","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"Morninggloryyy"},"content":"        String endTime \u003d secondSplittedString[1];","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"Morninggloryyy"},"content":"        return new Event(description, startTime, endTime);","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Morninggloryyy":70}},{"path":"src/main/java/damon/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"package damon.command;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"import damon.storage.Storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":"import damon.tasklist.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":"import damon.ui.Ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"Morninggloryyy"},"content":" * Represents Command object which can execute based on user\u0027s input.","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"Morninggloryyy"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"Morninggloryyy"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Morninggloryyy"},"content":"    protected final String command;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"Morninggloryyy"},"content":"     * Constructs a new Command object with only String description parameter.","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"Morninggloryyy"},"content":"     * @param command User\u0027s input command","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"Morninggloryyy"},"content":"    public Command(String command) {","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Morninggloryyy"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"Morninggloryyy"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Morninggloryyy"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Morninggloryyy"},"content":"        return false;","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"Morninggloryyy"},"content":"    public String toString() {","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"Morninggloryyy"},"content":"        return \"Command\";","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Morninggloryyy":31}},{"path":"src/main/java/damon/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"package damon.command;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"import damon.storage.Storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":"import damon.tasklist.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":"import damon.ui.Ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"Morninggloryyy"},"content":" * Represents DeleteCommand object which is corresponding to user\u0027s deleting Task input.","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"Morninggloryyy"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"Morninggloryyy"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Morninggloryyy"},"content":"    public DeleteCommand(String command) {","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Morninggloryyy"},"content":"        super(command);","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"Morninggloryyy"},"content":"     * Executes DeleteCommand, i.e., deletes a Task of specific index in current TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"Morninggloryyy"},"content":"     * @param tasks Current TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"Morninggloryyy"},"content":"     * @param ui Ui object of Damon object.","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"Morninggloryyy"},"content":"     * @param storage Storage object of Damon object.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"Morninggloryyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Morninggloryyy"},"content":"        int index \u003d Integer.parseInt(this.command.split(\" \")[1]) - 1;","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"Morninggloryyy"},"content":"        ui.showDeleteCommand(index, tasks);","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"Morninggloryyy"},"content":"        tasks.deleteTask(index);","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Morninggloryyy"},"content":"        storage.writeFile(tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Morninggloryyy":30}},{"path":"src/main/java/damon/command/EchoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"package damon.command;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"import damon.storage.Storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":"import damon.tasklist.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":"import damon.ui.Ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"Morninggloryyy"},"content":" * Represents AddCommand object which is corresponding to repeating user\u0027s input","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"Morninggloryyy"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"Morninggloryyy"},"content":"public class EchoCommand extends Command {","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Morninggloryyy"},"content":"    public EchoCommand(String command) {","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Morninggloryyy"},"content":"        super(command);","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"Morninggloryyy"},"content":"     * Executes EchoCommand, i.e., Repeats user\u0027s input.","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"Morninggloryyy"},"content":"     * @param tasks Current TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"Morninggloryyy"},"content":"     * @param ui Ui object of Damon object.","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"Morninggloryyy"},"content":"     * @param storage Storage object of Damon object.","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"Morninggloryyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Morninggloryyy"},"content":"        ui.showEchoCommand(this.command);","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Morninggloryyy":25}},{"path":"src/main/java/damon/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"package damon.command;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"import damon.storage.Storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":"import damon.tasklist.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":"import damon.ui.Ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"Morninggloryyy"},"content":" * Represents ExitCommand object which is corresponding to user\u0027s input for exiting.","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"Morninggloryyy"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"Morninggloryyy"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Morninggloryyy"},"content":"    public ExitCommand(String command) {","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Morninggloryyy"},"content":"        super(command);","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"Morninggloryyy"},"content":"     * Executes ExitCommand.","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"Morninggloryyy"},"content":"     * @param tasks Current TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"Morninggloryyy"},"content":"     * @param ui Ui object of Damon object.","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"Morninggloryyy"},"content":"     * @param storage Storage object of Damon object.","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"Morninggloryyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Morninggloryyy"},"content":"        ui.showExitCommand();","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Morninggloryyy"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Morninggloryyy"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Morninggloryyy"},"content":"        return true;","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Morninggloryyy":31}},{"path":"src/main/java/damon/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"package damon.command;","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"import damon.storage.Storage;","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":"import damon.tasklist.TaskList;","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":"import damon.ui.Ui;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"Morninggloryyy"},"content":"    public FindCommand(String command) {","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"Morninggloryyy"},"content":"        super(command);","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"Morninggloryyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"Morninggloryyy"},"content":"        String keyword \u003d this.command.split(\" \")[1];","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"Morninggloryyy"},"content":"        TaskList serchedTaskList \u003d tasks.findTasks(keyword);","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"Morninggloryyy"},"content":"        ui.showFindCommand(serchedTaskList);","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"Morninggloryyy":18}},{"path":"src/main/java/damon/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"package damon.command;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"import damon.storage.Storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":"import damon.tasklist.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":"import damon.ui.Ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"Morninggloryyy"},"content":" * Represents MarkCommand object which is corresponding to","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"Morninggloryyy"},"content":" * user\u0027s input for marking a specific Task as done status.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"Morninggloryyy"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"Morninggloryyy"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Morninggloryyy"},"content":"    public MarkCommand(String command) {","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Morninggloryyy"},"content":"        super(command);","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"Morninggloryyy"},"content":"     * Executes MarkCommand,","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"Morninggloryyy"},"content":"     * i.e., marks a Task of specific index in current TaskList as done status.","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"Morninggloryyy"},"content":"     * @param tasks Current TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"Morninggloryyy"},"content":"     * @param ui Ui object of Damon object.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"Morninggloryyy"},"content":"     * @param storage Storage object of Damon object.","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"Morninggloryyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Morninggloryyy"},"content":"        int index \u003d Integer.parseInt(this.command.split(\" \")[1]) - 1;","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"Morninggloryyy"},"content":"        tasks.markTask(index);","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Morninggloryyy"},"content":"        ui.showMarkCommand(tasks, index);","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"Morninggloryyy"},"content":"        storage.writeFile(tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Morninggloryyy":31}},{"path":"src/main/java/damon/command/ShowListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"package damon.command;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"import damon.storage.Storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":"import damon.tasklist.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":"import damon.ui.Ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"Morninggloryyy"},"content":" * Represents ShowListCommand object which is corresponding to","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"Morninggloryyy"},"content":" * user\u0027s input for showing the task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"Morninggloryyy"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"Morninggloryyy"},"content":"public class ShowListCommand extends Command {","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Morninggloryyy"},"content":"    public ShowListCommand(String command) {","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Morninggloryyy"},"content":"        super(command);","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"Morninggloryyy"},"content":"     * Executes ShowListCommand, i.e., shows current task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"Morninggloryyy"},"content":"     * @param tasks Current TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"Morninggloryyy"},"content":"     * @param ui Ui object of Damon object.","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"Morninggloryyy"},"content":"     * @param storage Storage object of Damon object.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"Morninggloryyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Morninggloryyy"},"content":"        ui.showShowTaskListCommand(tasks);","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Morninggloryyy":26}},{"path":"src/main/java/damon/command/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"package damon.command;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"import damon.storage.Storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":"import damon.tasklist.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":"import damon.ui.Ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"Morninggloryyy"},"content":" * Represents MarkCommand object which is corresponding to","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"Morninggloryyy"},"content":" * user\u0027s input for un-marking a specific Task to not done status.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"Morninggloryyy"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"Morninggloryyy"},"content":"public class UnMarkCommand extends Command {","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"Morninggloryyy"},"content":"    public UnMarkCommand(String command) {","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Morninggloryyy"},"content":"        super(command);","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"Morninggloryyy"},"content":"     * Executes UnMarkCommand,","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"Morninggloryyy"},"content":"     * i.e., un-marks a Task of specific index in current TaskList to not done status.","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"Morninggloryyy"},"content":"     * @param tasks Current TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"Morninggloryyy"},"content":"     * @param ui Ui object of Damon object.","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"Morninggloryyy"},"content":"     * @param storage Storage object of Damon object.","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"Morninggloryyy"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Morninggloryyy"},"content":"        int index \u003d Integer.parseInt(this.command.split(\" \")[1]) - 1;","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"Morninggloryyy"},"content":"        tasks.unMarkTask(index);","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Morninggloryyy"},"content":"        ui.showUnMarkCommand(tasks, index);","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"Morninggloryyy"},"content":"        storage.writeFile(tasks);","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Morninggloryyy":32}},{"path":"src/main/java/damon/exceptions/DamonExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"package damon.exceptions;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":" * Represents parent Exception specific to Damon.","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":"public class DamonExceptions extends Exception{","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"Morninggloryyy"},"content":"    protected String message;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"Morninggloryyy"},"content":"     * Constructs a new DamonExceptions object.","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"Morninggloryyy"},"content":"    public DamonExceptions() {","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Morninggloryyy"},"content":"        this.message \u003d \" \";","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"Morninggloryyy"},"content":"     * Returns message of DamonExceptions.","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"Morninggloryyy"},"content":"     * @return Error message.","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"Morninggloryyy"},"content":"    public String getMessage() {","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Morninggloryyy"},"content":"        return this.message;","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"Morninggloryyy":25}},{"path":"src/main/java/damon/exceptions/NoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"package damon.exceptions;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":" * Represents Exception corresponding to that","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":" * there is the lack of Task description in user\u0027s input","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":"public class NoDescriptionException extends DamonExceptions{","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"Morninggloryyy"},"content":"     * Constructs a new NoDescriptionException object.","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"Morninggloryyy"},"content":"    public NoDescriptionException() {","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"Morninggloryyy"},"content":"        this.message \u003d \"Pls add description of this task, thank you! :)\";","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"Morninggloryyy":15}},{"path":"src/main/java/damon/exceptions/StorageFileLoadingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"package damon.exceptions;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":" * Represents Exception corresponding to that there is no existing storage file to load.","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":"public class StorageFileLoadingException extends DamonExceptions{","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"Morninggloryyy"},"content":"     * Constructs a new StorageFileLoadingException object.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"Morninggloryyy"},"content":"    public StorageFileLoadingException() {","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Morninggloryyy"},"content":"        this.message \u003d \"Sorry, there is no existing storage file to load :(\";","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Morninggloryyy":14}},{"path":"src/main/java/damon/exceptions/WrongInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"package damon.exceptions;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":" * Represents Exception corresponding to that user\u0027s input is not understandable.","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":"public class WrongInputException extends DamonExceptions{","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"Morninggloryyy"},"content":"     * Constructs a new WrongInputException object.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"Morninggloryyy"},"content":"    public WrongInputException() {","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"Morninggloryyy"},"content":"        this.message \u003d \"Sorry, I cannot understand what you mean.\";","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"Morninggloryyy":14}},{"path":"src/main/java/damon/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"package damon.parser;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"import damon.command.*;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":"import damon.exceptions.NoDescriptionException;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":"import damon.exceptions.WrongInputException;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"Morninggloryyy"},"content":" * Creates a Parser object to analysis user\u0027s input","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"Morninggloryyy"},"content":" * and sends the input to corresponding Command object or throw corresponding Exception.","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"Morninggloryyy"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"Morninggloryyy"},"content":"public class Parser {","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"Morninggloryyy"},"content":"     * Returns corresponding command to user\u0027s input.","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"Morninggloryyy"},"content":"     * @param inputString User\u0027s input.","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"Morninggloryyy"},"content":"     * @return Corresponding command","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"Morninggloryyy"},"content":"     * @throws NoDescriptionException If there is no description of task in user\u0027s input.","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"Morninggloryyy"},"content":"     * @throws WrongInputException If user\u0027s input is not understandable.","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"Morninggloryyy"},"content":"    public static Command parse(String inputString) throws NoDescriptionException","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Morninggloryyy"},"content":"            , WrongInputException {","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Morninggloryyy"},"content":"        if (inputString.equals(\"bye\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Morninggloryyy"},"content":"            return new ExitCommand(inputString);","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Morninggloryyy"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Morninggloryyy"},"content":"        if (inputString.equals(\"list\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Morninggloryyy"},"content":"            return new ShowListCommand(inputString);","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Morninggloryyy"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Morninggloryyy"},"content":"        if (inputString.startsWith(\"mark \")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Morninggloryyy"},"content":"            return new MarkCommand(inputString);","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Morninggloryyy"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Morninggloryyy"},"content":"        if (inputString.startsWith(\"unmark \")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Morninggloryyy"},"content":"            return new UnMarkCommand(inputString);","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Morninggloryyy"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Morninggloryyy"},"content":"        if (inputString.startsWith(\"delete \")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Morninggloryyy"},"content":"            return new DeleteCommand(inputString);","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Morninggloryyy"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Morninggloryyy"},"content":"        if (inputString.startsWith(\"todo \") || inputString.startsWith(\"deadline \")","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Morninggloryyy"},"content":"                || inputString.startsWith(\"event \")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Morninggloryyy"},"content":"            return new AddCommand(inputString);","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"Morninggloryyy"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"Morninggloryyy"},"content":"        if (inputString.startsWith(\"find \")) {","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"Morninggloryyy"},"content":"            return new FindCommand(inputString);","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"Morninggloryyy"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"Morninggloryyy"},"content":"        if (inputString.equals(\"todo\") || inputString.equals(\"deadline\")","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Morninggloryyy"},"content":"                || inputString.equals(\"event\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Morninggloryyy"},"content":"            throw new NoDescriptionException();","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Morninggloryyy"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Morninggloryyy"},"content":"        throw new WrongInputException();","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Morninggloryyy":51}},{"path":"src/main/java/damon/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"package damon.storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"import damon.exceptions.StorageFileLoadingException;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":"import damon.task.Deadline;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":"import damon.task.Event;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":"import damon.task.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":"import damon.task.ToDo;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Morninggloryyy"},"content":"import damon.tasklist.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Morninggloryyy"},"content":"import java.io.File;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Morninggloryyy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Morninggloryyy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Morninggloryyy"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Morninggloryyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Morninggloryyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"Morninggloryyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Morninggloryyy"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Morninggloryyy"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"Morninggloryyy"},"content":" * Creates a Storage object to create a storage file to store Tasks","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"Morninggloryyy"},"content":" * or load storage file if it has already exists,","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"Morninggloryyy"},"content":" * and write new changes in task list to storage file.","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"Morninggloryyy"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"Morninggloryyy"},"content":"public class Storage {","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Morninggloryyy"},"content":"    private final String filePath;","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"Morninggloryyy"},"content":"     * Constructs a new Storage object.","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"Morninggloryyy"},"content":"     * @param filePath Path of file which stores task list.","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"Morninggloryyy"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Morninggloryyy"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"Morninggloryyy"},"content":"     * Returns ArrayList of Tasks stored in storage file of filePath.","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"Morninggloryyy"},"content":"     * @return ArrayList of stored Tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"Morninggloryyy"},"content":"     * @throws StorageFileLoadingException If file of filePath does not exist.","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"Morninggloryyy"},"content":"    public ArrayList\u003cTask\u003e load() throws StorageFileLoadingException {","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Morninggloryyy"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":48,"author":{"gitId":"Morninggloryyy"},"content":"        //Solution below inspired by https://www.w3schools.com/java/java_files_read.asp","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Morninggloryyy"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"Morninggloryyy"},"content":"            File storageFile \u003d new File(filePath);","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"Morninggloryyy"},"content":"            Scanner scanner \u003d new Scanner(storageFile);","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"Morninggloryyy"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"Morninggloryyy"},"content":"                String existingLine \u003d scanner.nextLine();","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"Morninggloryyy"},"content":"                Task existingTask \u003d creatTask(existingLine); //modified later","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"Morninggloryyy"},"content":"                taskList.add(existingTask);","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"Morninggloryyy"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"Morninggloryyy"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"Morninggloryyy"},"content":"            throw new StorageFileLoadingException();","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"Morninggloryyy"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"Morninggloryyy"},"content":"        return taskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"Morninggloryyy"},"content":"    //Solution below inspired by https://www.w3schools.com/java/java_files_create.asp","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"Morninggloryyy"},"content":"    private void createFile() {","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"Morninggloryyy"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"Morninggloryyy"},"content":"            File storageFile \u003d new File(filePath);","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"Morninggloryyy"},"content":"            if (storageFile.createNewFile()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"Morninggloryyy"},"content":"                System.out.println(\"File: \" + storageFile + \" is created\");","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"Morninggloryyy"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"Morninggloryyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"Morninggloryyy"},"content":"            System.out.println(\"Some IOException happens\");","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"Morninggloryyy"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"Morninggloryyy"},"content":"     * Writes Tasks in TaskList in storage file of filePath.","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"Morninggloryyy"},"content":"     * @param tasks Current TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"Morninggloryyy"},"content":"    //Solution below inspired by https://www.w3schools.com/java/java_files_create.asp","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"Morninggloryyy"},"content":"    public void writeFile(TaskList tasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"Morninggloryyy"},"content":"        createFile();","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":85,"author":{"gitId":"Morninggloryyy"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"Morninggloryyy"},"content":"            FileWriter writer \u003d new FileWriter(filePath, false);","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"Morninggloryyy"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2024-02-24"},{"lineNumber":88,"author":{"gitId":"Morninggloryyy"},"content":"                writer.write(tasks.getTask(i) + \"\\n\");","lastModifiedDate":"2024-02-24"},{"lineNumber":89,"author":{"gitId":"Morninggloryyy"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":90,"author":{"gitId":"Morninggloryyy"},"content":"            writer.close();","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"Morninggloryyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"Morninggloryyy"},"content":"            System.out.println(\"Some IOException happens\");","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"Morninggloryyy"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"Morninggloryyy"},"content":"    private Task creatTask(String existingString) {","lastModifiedDate":"2024-02-24"},{"lineNumber":97,"author":{"gitId":"Morninggloryyy"},"content":"        char character \u003d existingString.charAt(1);","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"Morninggloryyy"},"content":"        boolean isDone \u003d existingString.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":100,"author":{"gitId":"Morninggloryyy"},"content":"        if (character \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"Morninggloryyy"},"content":"            String description \u003d existingString.substring(7);","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":103,"author":{"gitId":"Morninggloryyy"},"content":"            return new ToDo(description, isDone);","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"Morninggloryyy"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":106,"author":{"gitId":"Morninggloryyy"},"content":"        String description \u003d existingString.substring(7)","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"Morninggloryyy"},"content":"                .split(\" \\\\(\")[0];","lastModifiedDate":"2024-02-19"},{"lineNumber":108,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":109,"author":{"gitId":"Morninggloryyy"},"content":"        if (character \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2024-02-19"},{"lineNumber":110,"author":{"gitId":"Morninggloryyy"},"content":"            //Solution below inspired by  https://howtodoinjava.com/java/date-time/localdate-parse-string/","lastModifiedDate":"2024-02-19"},{"lineNumber":111,"author":{"gitId":"Morninggloryyy"},"content":"            String dateString \u003d existingString.split(\"\\\\(by: \")[1]","lastModifiedDate":"2024-02-19"},{"lineNumber":112,"author":{"gitId":"Morninggloryyy"},"content":"                    .split(\"\\\\)\")[0];","lastModifiedDate":"2024-02-19"},{"lineNumber":113,"author":{"gitId":"Morninggloryyy"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-02-19"},{"lineNumber":114,"author":{"gitId":"Morninggloryyy"},"content":"            LocalDate date \u003d LocalDate.parse(dateString, formatter);","lastModifiedDate":"2024-02-19"},{"lineNumber":115,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":116,"author":{"gitId":"Morninggloryyy"},"content":"            return new Deadline(description, isDone, date);","lastModifiedDate":"2024-02-19"},{"lineNumber":117,"author":{"gitId":"Morninggloryyy"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":119,"author":{"gitId":"Morninggloryyy"},"content":"        String startTime \u003d existingString.split(\"\\\\(from: \")[1]","lastModifiedDate":"2024-02-19"},{"lineNumber":120,"author":{"gitId":"Morninggloryyy"},"content":"                .split(\" to: \")[0];","lastModifiedDate":"2024-02-19"},{"lineNumber":121,"author":{"gitId":"Morninggloryyy"},"content":"        String endTime \u003d existingString.split(\"\\\\(from: \")[1]","lastModifiedDate":"2024-02-19"},{"lineNumber":122,"author":{"gitId":"Morninggloryyy"},"content":"                .split(\" to: \")[1].split(\"\\\\)\")[0];","lastModifiedDate":"2024-02-19"},{"lineNumber":123,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":124,"author":{"gitId":"Morninggloryyy"},"content":"        return new Event(description, isDone, startTime, endTime);","lastModifiedDate":"2024-02-19"},{"lineNumber":125,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":126,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Morninggloryyy":126}},{"path":"src/main/java/damon/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"package damon.task;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":" * Represents a Deadline task by description, status, and due date of task.","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"Morninggloryyy"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"Morninggloryyy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"Morninggloryyy"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"Morninggloryyy"},"content":"     * Constructs a new Deadline object","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"Morninggloryyy"},"content":"     * with String description parameter and LocalDate by parameter.","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"Morninggloryyy"},"content":"     * @param description Description of Deadline.","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"Morninggloryyy"},"content":"     * @param by Due date of Deadline in yyyy-mm-dd format.","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"Morninggloryyy"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"Morninggloryyy"},"content":"        super(description);","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"Morninggloryyy"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"Morninggloryyy"},"content":"     * Constructs a new Deadline object with String description parameter,","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"Morninggloryyy"},"content":"     * boolean isDone parameter, and LocalDate by parameter.","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"Morninggloryyy"},"content":"     * @param description Description of Deadline.","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"Morninggloryyy"},"content":"     * @param isDone Status of Deadline.","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"Morninggloryyy"},"content":"     * @param by Due date of Deadline in yyyy-mm-dd format.","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"Morninggloryyy"},"content":"    public Deadline(String description, boolean isDone, LocalDate by) {","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Morninggloryyy"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Morninggloryyy"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"Morninggloryyy"},"content":"     * Returns a sentence containing icon, status, description, and due date of Deadline.","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"Morninggloryyy"},"content":"     * @return Sentence representing Deadline.","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"Morninggloryyy"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"Morninggloryyy"},"content":"    public String toString() {","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"Morninggloryyy"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"Morninggloryyy"},"content":"                + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"Morninggloryyy":48}},{"path":"src/main/java/damon/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"package damon.task;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":" * Represents an Event task by description, status, start time, and end time of task.","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"Morninggloryyy"},"content":"    protected String startTime;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"Morninggloryyy"},"content":"    protected String endTime;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"Morninggloryyy"},"content":"     * Constructs a new Event object with String description parameter,","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"Morninggloryyy"},"content":"     * String startTime parameter, and String endTime parameter.","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"Morninggloryyy"},"content":"     * @param description Description of Event.","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"Morninggloryyy"},"content":"     * @param startTime Start time of Event.","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"Morninggloryyy"},"content":"     * @param endTime End time of Event.","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"Morninggloryyy"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"Morninggloryyy"},"content":"        super(description);","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"Morninggloryyy"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"Morninggloryyy"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"Morninggloryyy"},"content":"     * Constructs a new Event object with String description parameter,","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"Morninggloryyy"},"content":"     * boolean isDone parameter, String startTime parameter, and String endTime parameter.","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"Morninggloryyy"},"content":"     * @param description Description of Event.","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"Morninggloryyy"},"content":"     * @param isDone Status of Event.","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"Morninggloryyy"},"content":"     * @param startTime Start time of Event.","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"Morninggloryyy"},"content":"     * @param endTime End time of Event.","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"Morninggloryyy"},"content":"    public Event(String description, boolean isDone, String startTime, String endTime) {","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Morninggloryyy"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Morninggloryyy"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Morninggloryyy"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"Morninggloryyy"},"content":"     * Returns a sentence containing icon, status, description,","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"Morninggloryyy"},"content":"     * start time, and end time of Event.","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"Morninggloryyy"},"content":"     * @return Sentence representing Event.","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"Morninggloryyy"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"Morninggloryyy"},"content":"    public String toString() {","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"Morninggloryyy"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"Morninggloryyy"},"content":"                + \" (from: \" + startTime + \" to: \" + endTime + \")\";","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"Morninggloryyy":52}},{"path":"src/main/java/damon/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"package damon.task;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":" * Represents a task by description and status of task.","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":" * Status is a boolean object to represent whether this task is done or not.","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"Morninggloryyy"},"content":"public class Task {","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"Morninggloryyy"},"content":"    protected String description;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"Morninggloryyy"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"Morninggloryyy"},"content":"     * Constructs a new Task object with only String description parameter..","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"Morninggloryyy"},"content":"     * @param description Description of Task.","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"Morninggloryyy"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"Morninggloryyy"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"Morninggloryyy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"Morninggloryyy"},"content":"     * Constructs a new Task object with","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"Morninggloryyy"},"content":"     * both String description parameter and boolean isDone parameter.","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"Morninggloryyy"},"content":"     * @param description Description of Task.","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"Morninggloryyy"},"content":"     * @param isDone Status of Task.","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"Morninggloryyy"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Morninggloryyy"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Morninggloryyy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"Morninggloryyy"},"content":"     * Returns the icon of Task status.","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"Morninggloryyy"},"content":"     * \"X\" means Task is done, while \" \" means Task is not done.","lastModifiedDate":"2024-02-24"},{"lineNumber":37,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":38,"author":{"gitId":"Morninggloryyy"},"content":"     * @return Icon of Task status.","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"Morninggloryyy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"Morninggloryyy"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"Morninggloryyy"},"content":"     * Sets boolean idOne parameter to be true.","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":47,"author":{"gitId":"Morninggloryyy"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"Morninggloryyy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"Morninggloryyy"},"content":"     * Sets boolean idOne parameter to be false.","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"Morninggloryyy"},"content":"    public void markBackNotDone() {","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"Morninggloryyy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"Morninggloryyy"},"content":"     * Returns a sentence containing status and description of Task.","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"Morninggloryyy"},"content":"     * @return Sentence representing Task.","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"Morninggloryyy"},"content":"    public String toString() {","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"Morninggloryyy"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"Morninggloryyy"},"content":"    public boolean isContainKeyword(String keyword) {","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"Morninggloryyy"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"Morninggloryyy"},"content":"    //...","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"Morninggloryyy":73}},{"path":"src/main/java/damon/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"package damon.task;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":" * Represents a ToDo_task by description and status of task.","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"Morninggloryyy"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"Morninggloryyy"},"content":"        super(description);","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"Morninggloryyy"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Morninggloryyy"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"Morninggloryyy"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"Morninggloryyy"},"content":"    public String toString() {","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"Morninggloryyy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"Morninggloryyy":22}},{"path":"src/main/java/damon/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"package damon.tasklist;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"import damon.task.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"Morninggloryyy"},"content":" * Stores Tasks by an ArrayList of Tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":9,"author":{"gitId":"Morninggloryyy"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"Morninggloryyy"},"content":"public class TaskList {","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"Morninggloryyy"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"Morninggloryyy"},"content":"     * Constructs a new TaskList object without parameter.","lastModifiedDate":"2024-02-24"},{"lineNumber":15,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"Morninggloryyy"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Morninggloryyy"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"Morninggloryyy"},"content":"     * Constructs a new TaskList object with parameter.","lastModifiedDate":"2024-02-24"},{"lineNumber":22,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":23,"author":{"gitId":"Morninggloryyy"},"content":"     * @param taskList Arraylist of Tasks that should be encapsulated in this TaskList object.","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":25,"author":{"gitId":"Morninggloryyy"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"Morninggloryyy"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":31,"author":{"gitId":"Morninggloryyy"},"content":"     * Returns the size of TaskList, or the number of Tasks in TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":32,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":33,"author":{"gitId":"Morninggloryyy"},"content":"     * @return TaskList size.","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"Morninggloryyy"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"Morninggloryyy"},"content":"        return this.taskList.size();","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"Morninggloryyy"},"content":"     * Returns task of specific index in TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"Morninggloryyy"},"content":"     * @param index Index of the Task to be returned in TaskList","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"Morninggloryyy"},"content":"     * @return Required Task.","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":45,"author":{"gitId":"Morninggloryyy"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-02-24"},{"lineNumber":46,"author":{"gitId":"Morninggloryyy"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"Morninggloryyy"},"content":"     * Adds Task to TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"Morninggloryyy"},"content":"     * @param task Task to be added in TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"Morninggloryyy"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"Morninggloryyy"},"content":"        taskList.add(task);","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":59,"author":{"gitId":"Morninggloryyy"},"content":"     * Deletes Task of specific index in TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":60,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":61,"author":{"gitId":"Morninggloryyy"},"content":"     * @param index Index of Task to be deleted in TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":62,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"Morninggloryyy"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"Morninggloryyy"},"content":"        taskList.remove(index);","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"Morninggloryyy"},"content":"     * Marks Task of specific as done status in TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":70,"author":{"gitId":"Morninggloryyy"},"content":"     * @param index Index of Task to be marked as done status in TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":71,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"Morninggloryyy"},"content":"    public void markTask(int index) {","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"Morninggloryyy"},"content":"        this.taskList.get(index).markAsDone();","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"Morninggloryyy"},"content":"     * Un-marks Task of specific to not done status in TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"Morninggloryyy"},"content":"     * @param index Index of Task to be un-marked to not done status in TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"Morninggloryyy"},"content":"    public void unMarkTask(int index) {","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"Morninggloryyy"},"content":"        this.taskList.get(index).markBackNotDone();","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":86,"author":{"gitId":"Morninggloryyy"},"content":"     * Returns TaskList\u0027s ArrayList of Tasks","lastModifiedDate":"2024-02-24"},{"lineNumber":87,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":88,"author":{"gitId":"Morninggloryyy"},"content":"     * @return ArrayList of Tasks.","lastModifiedDate":"2024-02-24"},{"lineNumber":89,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":90,"author":{"gitId":"Morninggloryyy"},"content":"    public ArrayList\u003cTask\u003e getArrayList() {","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"Morninggloryyy"},"content":"        return this.taskList;","lastModifiedDate":"2024-02-20"},{"lineNumber":92,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":93,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":94,"author":{"gitId":"Morninggloryyy"},"content":"    public TaskList findTasks(String keyword) {","lastModifiedDate":"2024-02-24"},{"lineNumber":95,"author":{"gitId":"Morninggloryyy"},"content":"        TaskList searchedTaskList \u003d new TaskList();","lastModifiedDate":"2024-02-24"},{"lineNumber":96,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":97,"author":{"gitId":"Morninggloryyy"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2024-02-24"},{"lineNumber":98,"author":{"gitId":"Morninggloryyy"},"content":"            Task currentTask \u003d this.get(i);","lastModifiedDate":"2024-02-24"},{"lineNumber":99,"author":{"gitId":"Morninggloryyy"},"content":"            if (currentTask.isContainKeyword(keyword)) {","lastModifiedDate":"2024-02-24"},{"lineNumber":100,"author":{"gitId":"Morninggloryyy"},"content":"                searchedTaskList.addTask(currentTask);","lastModifiedDate":"2024-02-24"},{"lineNumber":101,"author":{"gitId":"Morninggloryyy"},"content":"            }","lastModifiedDate":"2024-02-24"},{"lineNumber":102,"author":{"gitId":"Morninggloryyy"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":103,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":104,"author":{"gitId":"Morninggloryyy"},"content":"        return searchedTaskList;","lastModifiedDate":"2024-02-24"},{"lineNumber":105,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":106,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Morninggloryyy":106}},{"path":"src/main/java/damon/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"package damon.ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":"import damon.task.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":"import damon.tasklist.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":"import damon.exceptions.StorageFileLoadingException;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"Morninggloryyy"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"Morninggloryyy"},"content":"/**","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"Morninggloryyy"},"content":" * Creates an Ui object to show welcome message","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"Morninggloryyy"},"content":" * and other corresponding message to each user\u0027s input.","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"Morninggloryyy"},"content":" */","lastModifiedDate":"2024-02-24"},{"lineNumber":14,"author":{"gitId":"Morninggloryyy"},"content":"public class Ui {","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"Morninggloryyy"},"content":"    private final Scanner scanner;","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"Morninggloryyy"},"content":"     * Constructs a new Ui object","lastModifiedDate":"2024-02-24"},{"lineNumber":19,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":20,"author":{"gitId":"Morninggloryyy"},"content":"    public Ui() {","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"Morninggloryyy"},"content":"        //Solution below adapted from https://stackoverflow.com/a/16252290","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"Morninggloryyy"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"Morninggloryyy"},"content":"     * Prints welcome message.","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"Morninggloryyy"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"Morninggloryyy"},"content":"        String logo \u003d \" ____\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"Morninggloryyy"},"content":"                + \"|  _  \\\\\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"Morninggloryyy"},"content":"                + \"| | | |\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"Morninggloryyy"},"content":"                + \"| |_| |\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"Morninggloryyy"},"content":"                + \"|____/ \\n\";","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"Morninggloryyy"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":39,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"Morninggloryyy"},"content":"     * Returns user\u0027s input String.","lastModifiedDate":"2024-02-24"},{"lineNumber":41,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"Morninggloryyy"},"content":"     * @return User\u0027s input.","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":44,"author":{"gitId":"Morninggloryyy"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"Morninggloryyy"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":49,"author":{"gitId":"Morninggloryyy"},"content":"     * Prints message of loading error.","lastModifiedDate":"2024-02-24"},{"lineNumber":50,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":51,"author":{"gitId":"Morninggloryyy"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-02-24"},{"lineNumber":52,"author":{"gitId":"Morninggloryyy"},"content":"        System.out.println(new StorageFileLoadingException().getMessage());","lastModifiedDate":"2024-02-24"},{"lineNumber":53,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":54,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":55,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":56,"author":{"gitId":"Morninggloryyy"},"content":"     * Prints divider line \"____________________________________________________________\".","lastModifiedDate":"2024-02-24"},{"lineNumber":57,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":58,"author":{"gitId":"Morninggloryyy"},"content":"    public void showLine() {","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"Morninggloryyy"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":63,"author":{"gitId":"Morninggloryyy"},"content":"     * Prints message of adding a new Task to the current TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":64,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":65,"author":{"gitId":"Morninggloryyy"},"content":"     * @param newTask New Task to be added.","lastModifiedDate":"2024-02-24"},{"lineNumber":66,"author":{"gitId":"Morninggloryyy"},"content":"     * @param tasks Current TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":67,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":68,"author":{"gitId":"Morninggloryyy"},"content":"    public void showAddCommand(Task newTask, TaskList tasks) {","lastModifiedDate":"2024-02-24"},{"lineNumber":69,"author":{"gitId":"Morninggloryyy"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"Morninggloryyy"},"content":"                + newTask + \"\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"Morninggloryyy"},"content":"                + \"Now you have \" + tasks.getSize() + \" tasks in the list.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":72,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":75,"author":{"gitId":"Morninggloryyy"},"content":"     * Prints message of deleting a Task of a specific index in the current TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":76,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":77,"author":{"gitId":"Morninggloryyy"},"content":"     * @param index Index of the Task which is to be deleted in the current TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":78,"author":{"gitId":"Morninggloryyy"},"content":"     * @param tasks Current TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":79,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":80,"author":{"gitId":"Morninggloryyy"},"content":"    public void showDeleteCommand(int index, TaskList tasks) {","lastModifiedDate":"2024-02-24"},{"lineNumber":81,"author":{"gitId":"Morninggloryyy"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"Morninggloryyy"},"content":"                + tasks.getTask(index).toString() + \"\\n\"","lastModifiedDate":"2024-02-24"},{"lineNumber":83,"author":{"gitId":"Morninggloryyy"},"content":"                + \"Now you have \" + (tasks.getSize() - 1) + \" tasks in the list.\");","lastModifiedDate":"2024-02-24"},{"lineNumber":84,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":87,"author":{"gitId":"Morninggloryyy"},"content":"     * Prints exiting message.","lastModifiedDate":"2024-02-24"},{"lineNumber":88,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":89,"author":{"gitId":"Morninggloryyy"},"content":"    public void showExitCommand() {","lastModifiedDate":"2024-02-24"},{"lineNumber":90,"author":{"gitId":"Morninggloryyy"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":94,"author":{"gitId":"Morninggloryyy"},"content":"     * Prints message of marking a Task of a specific index in the current TaskList","lastModifiedDate":"2024-02-24"},{"lineNumber":95,"author":{"gitId":"Morninggloryyy"},"content":"     * as done status.","lastModifiedDate":"2024-02-24"},{"lineNumber":96,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":97,"author":{"gitId":"Morninggloryyy"},"content":"     * @param index Index of the Task to be marked","lastModifiedDate":"2024-02-24"},{"lineNumber":98,"author":{"gitId":"Morninggloryyy"},"content":"     *              as done status in the current TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":99,"author":{"gitId":"Morninggloryyy"},"content":"     * @param tasks Current TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":100,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":101,"author":{"gitId":"Morninggloryyy"},"content":"    public void showMarkCommand(TaskList tasks, int index) {","lastModifiedDate":"2024-02-24"},{"lineNumber":102,"author":{"gitId":"Morninggloryyy"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"Morninggloryyy"},"content":"                + tasks.getTask(index).toString());","lastModifiedDate":"2024-02-24"},{"lineNumber":104,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":106,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":107,"author":{"gitId":"Morninggloryyy"},"content":"     * Prints message of un-marking a Task of a specific index in the current TaskList","lastModifiedDate":"2024-02-24"},{"lineNumber":108,"author":{"gitId":"Morninggloryyy"},"content":"     * to not done status.","lastModifiedDate":"2024-02-24"},{"lineNumber":109,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":110,"author":{"gitId":"Morninggloryyy"},"content":"     * @param index Index of the Task to be un-marked","lastModifiedDate":"2024-02-24"},{"lineNumber":111,"author":{"gitId":"Morninggloryyy"},"content":"     *              to not done status in the current TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":112,"author":{"gitId":"Morninggloryyy"},"content":"     * @param tasks Current TaskList.","lastModifiedDate":"2024-02-24"},{"lineNumber":113,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":114,"author":{"gitId":"Morninggloryyy"},"content":"    public void showUnMarkCommand(TaskList tasks, int index) {","lastModifiedDate":"2024-02-24"},{"lineNumber":115,"author":{"gitId":"Morninggloryyy"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":116,"author":{"gitId":"Morninggloryyy"},"content":"                + tasks.getTask(index).toString());","lastModifiedDate":"2024-02-24"},{"lineNumber":117,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":119,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":120,"author":{"gitId":"Morninggloryyy"},"content":"     * Prints the whole TaskList","lastModifiedDate":"2024-02-24"},{"lineNumber":121,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":122,"author":{"gitId":"Morninggloryyy"},"content":"     * @param tasks Current TaskList (the TaskList to be printed).","lastModifiedDate":"2024-02-24"},{"lineNumber":123,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":124,"author":{"gitId":"Morninggloryyy"},"content":"    public void showShowTaskListCommand(TaskList tasks) {","lastModifiedDate":"2024-02-24"},{"lineNumber":125,"author":{"gitId":"Morninggloryyy"},"content":"        int n \u003d tasks.getSize();","lastModifiedDate":"2024-02-24"},{"lineNumber":126,"author":{"gitId":"Morninggloryyy"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-19"},{"lineNumber":127,"author":{"gitId":"Morninggloryyy"},"content":"        for (int i \u003d 0; i \u003c n; i++) {","lastModifiedDate":"2024-02-19"},{"lineNumber":128,"author":{"gitId":"Morninggloryyy"},"content":"            Task currentTask \u003d tasks.getTask(i);","lastModifiedDate":"2024-02-24"},{"lineNumber":129,"author":{"gitId":"Morninggloryyy"},"content":"            System.out.println((i + 1) + \".\" + currentTask.toString());","lastModifiedDate":"2024-02-19"},{"lineNumber":130,"author":{"gitId":"Morninggloryyy"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":131,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":132,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":133,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":134,"author":{"gitId":"Morninggloryyy"},"content":"     * Prints message of the threw error.","lastModifiedDate":"2024-02-24"},{"lineNumber":135,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":136,"author":{"gitId":"Morninggloryyy"},"content":"     * @param errorMessage Error message to be printed.","lastModifiedDate":"2024-02-24"},{"lineNumber":137,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":138,"author":{"gitId":"Morninggloryyy"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2024-02-24"},{"lineNumber":139,"author":{"gitId":"Morninggloryyy"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2024-02-24"},{"lineNumber":140,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":141,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":142,"author":{"gitId":"Morninggloryyy"},"content":"    public void showFindCommand(TaskList tasks) {","lastModifiedDate":"2024-02-24"},{"lineNumber":143,"author":{"gitId":"Morninggloryyy"},"content":"        int n \u003d tasks.size();","lastModifiedDate":"2024-02-24"},{"lineNumber":144,"author":{"gitId":"Morninggloryyy"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-24"},{"lineNumber":145,"author":{"gitId":"Morninggloryyy"},"content":"        for (int i \u003d 0; i \u003c n; i++) {","lastModifiedDate":"2024-02-24"},{"lineNumber":146,"author":{"gitId":"Morninggloryyy"},"content":"            Task currentTask \u003d tasks.get(i);","lastModifiedDate":"2024-02-24"},{"lineNumber":147,"author":{"gitId":"Morninggloryyy"},"content":"            System.out.println((i + 1) + \".\" + currentTask.toString());","lastModifiedDate":"2024-02-24"},{"lineNumber":148,"author":{"gitId":"Morninggloryyy"},"content":"        }","lastModifiedDate":"2024-02-24"},{"lineNumber":149,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":150,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":151,"author":{"gitId":"Morninggloryyy"},"content":"    /**","lastModifiedDate":"2024-02-24"},{"lineNumber":152,"author":{"gitId":"Morninggloryyy"},"content":"     * Prints echo.","lastModifiedDate":"2024-02-24"},{"lineNumber":153,"author":{"gitId":"Morninggloryyy"},"content":"     *","lastModifiedDate":"2024-02-24"},{"lineNumber":154,"author":{"gitId":"Morninggloryyy"},"content":"     * @param inputString User\u0027s input String which is to be echoed.","lastModifiedDate":"2024-02-24"},{"lineNumber":155,"author":{"gitId":"Morninggloryyy"},"content":"     */","lastModifiedDate":"2024-02-24"},{"lineNumber":156,"author":{"gitId":"Morninggloryyy"},"content":"    public void showEchoCommand(String inputString) {","lastModifiedDate":"2024-02-24"},{"lineNumber":157,"author":{"gitId":"Morninggloryyy"},"content":"        System.out.println(inputString);","lastModifiedDate":"2024-02-19"},{"lineNumber":158,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":159,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"Morninggloryyy":159}},{"path":"src/test/java/damon/DamonTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"package damon;  //same package as the class being tested","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":"public class DamonTest {","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"Morninggloryyy"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"Morninggloryyy"},"content":"    public void dummyTest(){","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"Morninggloryyy"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"Morninggloryyy"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"Morninggloryyy"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"Morninggloryyy"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"Morninggloryyy":17}},{"path":"src/test/java/damon/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"package damon.parser;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"import damon.command.*;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":"import damon.exceptions.NoDescriptionException;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":"import damon.exceptions.WrongInputException;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"Morninggloryyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"Morninggloryyy"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"Morninggloryyy"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"Morninggloryyy"},"content":"    public void parserTest() throws NoDescriptionException, WrongInputException {","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"Morninggloryyy"},"content":"        //String exitCommand \u003d \"bye\";","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"Morninggloryyy"},"content":"        //String showListCommand \u003d \"list\";","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"Morninggloryyy"},"content":"        //String markCommand \u003d \"mark 1\";","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"Morninggloryyy"},"content":"        //String unMarkCommand \u003d \"unmark 1\";","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"Morninggloryyy"},"content":"        //String deleteCommand \u003d \"delete 1\";","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"Morninggloryyy"},"content":"        //String addToDoCommand \u003d \"todo return books\";","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"Morninggloryyy"},"content":"        //String addDeadlineCommand \u003d \"submit assignment /by 2024-02-21\";","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"Morninggloryyy"},"content":"        //String addEventCommand \u003d \"go to the party /from Friday /to Saturday\";","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"Morninggloryyy"},"content":"        //String noDescriptionToDoCommand \u003d \"todo\";","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"Morninggloryyy"},"content":"        //String noDescriptionDeadlineCommand \u003d \"deadline\";","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"Morninggloryyy"},"content":"        //String noDescriptionEventCommand \u003d \"event\";","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"Morninggloryyy"},"content":"        //String wrongInputCommandA \u003d \"hi\";","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"Morninggloryyy"},"content":"        //String wrongInputCommandB \u003d \"blah\";","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"Morninggloryyy"},"content":"        //assertEquals(new ExitCommand(exitCommand), Parser.parse(exitCommand));","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"Morninggloryyy"},"content":"        //assertEquals(new ShowListCommand(showListCommand), Parser.parse(showListCommand));","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"Morninggloryyy"},"content":"        //assertEquals(new MarkCommand(markCommand), Parser.parse(markCommand));","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"Morninggloryyy"},"content":"        //assertEquals(new UnMarkCommand(unMarkCommand), Parser.parse(unMarkCommand));","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"Morninggloryyy"},"content":"        //assertEquals(new DeleteCommand(deleteCommand), Parser.parse(deleteCommand));","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"Morninggloryyy"},"content":"        //assertEquals(new UnMarkCommand(unMarkCommand), Parser.parse(unMarkCommand));","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"Morninggloryyy":42}},{"path":"src/test/java/damon/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"package damon.task;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":"public class ToDoTest {","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"Morninggloryyy"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"Morninggloryyy"},"content":"    public void toDoTest(){","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"Morninggloryyy"},"content":"        assertEquals(\"[T][ ] buy books\", new ToDo(\"buy books\").toString());","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"Morninggloryyy"},"content":"        assertEquals(\"[T][ ] buy books\",","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"Morninggloryyy"},"content":"                new ToDo(\"buy books\", false).toString());","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"Morninggloryyy"},"content":"        assertEquals(\"[T][X] buy books\",","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"Morninggloryyy"},"content":"                new ToDo(\"buy books\", true).toString());","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"Morninggloryyy":19}},{"path":"src/test/java/damon/tasklist/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"package damon.tasklist;  //same package as the class being tested","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"import damon.task.Deadline;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":"import damon.task.Event;","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":"import damon.task.Task;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":"import damon.task.ToDo;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"Morninggloryyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"Morninggloryyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"Morninggloryyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-20"},{"lineNumber":14,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"Morninggloryyy"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-20"},{"lineNumber":16,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"Morninggloryyy"},"content":"    private ArrayList\u003cTask\u003e originArrayList;","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"Morninggloryyy"},"content":"    public TaskListTest() {","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"Morninggloryyy"},"content":"        ArrayList\u003cTask\u003e exampleTaskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"Morninggloryyy"},"content":"        exampleTaskList.add(new ToDo(\"return books\"));","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"Morninggloryyy"},"content":"        this.originArrayList \u003d exampleTaskList;","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":24,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"Morninggloryyy"},"content":"    public TaskList getOriginalTaskList() {","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"Morninggloryyy"},"content":"        return new TaskList(this.originArrayList);","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":28,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":29,"author":{"gitId":"Morninggloryyy"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":30,"author":{"gitId":"Morninggloryyy"},"content":"    public void addTaskTest() {","lastModifiedDate":"2024-02-20"},{"lineNumber":31,"author":{"gitId":"Morninggloryyy"},"content":"        Deadline exampleDeadline \u003d new Deadline(\"submit assignment\",","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"Morninggloryyy"},"content":"                LocalDate.parse(\"2024-02-21\"));","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"Morninggloryyy"},"content":"        Event exampleEvent \u003d new Event(\"go to the party\",","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"Morninggloryyy"},"content":"                \"Friday\", \"Saturday\");","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"Morninggloryyy"},"content":"        ArrayList\u003cTask\u003e expectedArrayList \u003d this.originArrayList;","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"Morninggloryyy"},"content":"        expectedArrayList.add(exampleDeadline);","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"Morninggloryyy"},"content":"        expectedArrayList.add(exampleEvent);","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"Morninggloryyy"},"content":"        TaskList expectedTaskList \u003d new TaskList(expectedArrayList);","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"Morninggloryyy"},"content":"        TaskList actualTaskList \u003d this.getOriginalTaskList();","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"Morninggloryyy"},"content":"        actualTaskList.addTask(exampleDeadline);","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"Morninggloryyy"},"content":"        actualTaskList.addTask(exampleEvent);","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"Morninggloryyy"},"content":"        //Solution below inspired by https://www.javatpoint.com/how-to-check-data-type-in-java","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"Morninggloryyy"},"content":"        assertEquals(expectedTaskList.getClass(), actualTaskList.getClass());","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"Morninggloryyy"},"content":"        assertEquals(expectedTaskList.getArrayList(), actualTaskList.getArrayList());","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"Morninggloryyy":50}},{"path":"src/test/java/damon/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"package damon.ui;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"Morninggloryyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":5,"author":{"gitId":"Morninggloryyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"Morninggloryyy"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":"public class UiTest {","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"Morninggloryyy"},"content":"    @Test","lastModifiedDate":"2024-02-20"},{"lineNumber":9,"author":{"gitId":"Morninggloryyy"},"content":"    public void showTaskListTest() {","lastModifiedDate":"2024-02-20"},{"lineNumber":10,"author":{"gitId":"Morninggloryyy"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"Morninggloryyy"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"Morninggloryyy"},"content":"}","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"Morninggloryyy":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Morninggloryyy"},"content":"todo borrow book","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"Morninggloryyy":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"Morninggloryyy"},"content":"del ACTUAL.TXT","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Morninggloryyy"},"content":"java -classpath ..\\bin Damon \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Morninggloryyy":2,"-":19}}]
