[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"    mainClass.set(\"scribbles.Launcher\")","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"    mainClassName \u003d \u0027scribbles.Launcher\u0027","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"danielleloh"},"content":"    archiveBaseName \u003d \"scribbles\"","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"danielleloh"},"content":"checkstyle {","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"danielleloh"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"danielleloh":22,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"    \u003ca href\u003d\"https://github.com/danielleloh/ip\"\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"        \u003cimg src\u003d","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"            \"https://i.imgur.com/nX11CL6.png\"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"            alt\u003d\"scribbles icon\" height\u003d\"90\"\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"    \u003c/a\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"\u003c/p\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"        \u003ch2 align\u003d\"center\"\u003eScribbles\u003c/h2\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"# Scribbles User Guide","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"Scribbles may be a goldfish, but rest assured, her memory extends far beyond 3 seconds!","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"Scribbles excels at helping you organise your life by keeping track of your tasks and schedules. ","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"Scribbles may be a goldfish, but she definitely has a few seconds of memory more than you! ","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"Free up space in your mind, and allow Scribbles to be the fish friend you need in your life!","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"#### preview:","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"    \u003ca href\u003d\"https://github.com/danielleloh/ip\"\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"        \u003cimg src\u003d","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"            \"https://i.imgur.com/3jWp7Pi.png\"","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"            alt\u003d\"ui preview\" height\u003d\"450\"\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"    \u003c/a\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"\u003c/p\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"## Table of Contents","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"* [Quick start](#quick-start)","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"* [Features](#features)","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"  * [Viewing help: ](#viewing-help--help)`help`","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"  * [Adding tasks and events: ](#adding-tasks-and-events--todo--deadline--event)`todo`, `deadline`, `event`","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"  * [Listing all tasks and events: ](#listing-all-tasks-and-events--list)`list`","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"  * [Deleting tasks and events: ](#deleting-tasks-and-events--delete)`delete`","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"  * [Marking tasks: ](#marking-tasks--mark)`mark`","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"  * [Unmarking tasks: ](#unmarking-tasks--unmark)`unmark`","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"  * [Finding tasks: ](#finding-tasks--find)`find`","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"  * [Sorting tasks: ](#sorting-tasks--sortby)`sortBy`","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"  * [Exiting Scribbles: ](#exiting-scribbles--bye)`bye`","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"* [Additional notes](#additional-notes)","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"* [Command summary](#command-summary)","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"## Quick start","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"1. Ensure you have Java 11 or above installed in your computer","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"2. Download `scribbles.jar` from [here](https://google.com)","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"3. Open to your terminal and go to the folder containing `scribbles.jar`","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"4. Enter `java -jar scribbles.jar` to launch Scribbles!","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"\u003e [!IMPORTANT]","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"\u003e Running Scribbles will create a folder in your current directory named `scribblesData` ","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"\u003e which will contain a `taskData.txt` file. This file save\u0027s your data in a program-readable","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"danielleloh"},"content":"\u003e format. To ensure your data is saved properly and not corrupted, please try not to tamper with the file.","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"danielleloh"},"content":"## Features","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"danielleloh"},"content":"### Viewing help: `help`","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"danielleloh"},"content":"### Adding tasks and events: `todo`, `deadline`, `event`","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":67,"author":{"gitId":"danielleloh"},"content":"### Listing all tasks and events: `list`","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"danielleloh"},"content":"### Deleting tasks and events: `delete`","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"danielleloh"},"content":"### Marking tasks: `mark`","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"danielleloh"},"content":"### Unmarking tasks: `unmark`","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"danielleloh"},"content":"### Finding tasks: `find`","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"danielleloh"},"content":"### Sorting tasks: `sortBy`","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"danielleloh"},"content":"### Exiting Scribbles: `bye`","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":81,"author":{"gitId":"danielleloh"},"content":"## Additional notes","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":83,"author":{"gitId":"danielleloh"},"content":"## Command summary","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"danielleloh":62,"-":21}},{"path":"src/main/java/scribbles/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package scribbles;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"import scribbles.gui.Main;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"public class Launcher {","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"danielleloh":14}},{"path":"src/main/java/scribbles/Scribbles.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package scribbles;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import scribbles.parser.CommandResponder;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"import scribbles.parser.Parser;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"import scribbles.storage.Storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"import scribbles.tasklist.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"import scribbles.ui.Ui;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":" * This class implements the chatbot Scribbles.","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":" *","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":" * @author danielle","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"public class Scribbles {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"    private String filePath;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"    private CommandResponder commandResponder;","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"     * Constructs a new Scribbles object with the specified file path.","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"    public Scribbles(String filePath) {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"        commandResponder \u003d new CommandResponder();","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"        storage \u003d new Storage(this.filePath, taskList);","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"     * Greets the user.","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"     * @return Greeting message to the user when Scribbles is launched.","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"    public String greet() {","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"        return ui.greet();","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"     * Takes the input of user as command and executes the list of actions that should follow the given command.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"     * @param input The command input by user.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"     * @return The response by Scribbles to the user input","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"danielleloh"},"content":"        Parser parsedInput \u003d new Parser(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"danielleloh"},"content":"        String command \u003d parsedInput.getCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"danielleloh"},"content":"        assert command !\u003d null: \"command should not be null\";","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"danielleloh"},"content":"        return respondToCommand(parsedInput, command);","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"danielleloh"},"content":"     * Takes in the parsed input and command of input and returns the response.","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"danielleloh"},"content":"     * @param parsedInput Parsed input","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"danielleloh"},"content":"     * @param command Command of input","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"danielleloh"},"content":"     * @return Response to command","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"danielleloh"},"content":"    public String respondToCommand(Parser parsedInput, String command) {","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"danielleloh"},"content":"        switch (command) {","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"danielleloh"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"danielleloh"},"content":"            return commandResponder.respondToBye();","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"danielleloh"},"content":"        case \"list\":","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"danielleloh"},"content":"            return commandResponder.respondToList(taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"danielleloh"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"danielleloh"},"content":"            return commandResponder.respondToMark(parsedInput, taskList, storage);","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"danielleloh"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"danielleloh"},"content":"            return commandResponder.respondToUnmark(parsedInput, taskList, storage);","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"danielleloh"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"danielleloh"},"content":"            return commandResponder.respondToTodo(parsedInput, taskList, storage);","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"danielleloh"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"danielleloh"},"content":"            return commandResponder.respondToDeadline(parsedInput, taskList, storage);","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"danielleloh"},"content":"        case \"event\":","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"danielleloh"},"content":"            return commandResponder.respondToEvent(parsedInput, taskList, storage);","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"danielleloh"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"danielleloh"},"content":"            return commandResponder.respondToDelete(parsedInput, taskList, storage);","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"danielleloh"},"content":"        case \"find\":","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"danielleloh"},"content":"            return commandResponder.respondToFind(parsedInput, taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"danielleloh"},"content":"        case \"sortBy\":","lastModifiedDate":"2024-02-16"},{"lineNumber":85,"author":{"gitId":"danielleloh"},"content":"            return commandResponder.respondToSortBy(parsedInput, taskList, storage);","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"danielleloh"},"content":"        case \"help\":","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"danielleloh"},"content":"        default:","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"danielleloh"},"content":"            return commandResponder.respondToOtherInput();","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"danielleloh":92}},{"path":"src/main/java/scribbles/gui/DialogBoxScribbles.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package scribbles.gui;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":" * This control represents a dialog box consisting of an ImageView to represent the Scribbles and a label","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":" * containing text from the chatbot.","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"public class DialogBoxScribbles extends HBox {","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"     * Constructs a dialog box object for Scribbles.","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"     * @param text Text from Scribbles.","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"     * @param img Icon representing Scribbles.","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"    private DialogBoxScribbles(String text, Image img) {","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBoxScribbles.fxml\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"    public static DialogBoxScribbles getScribblesDialog(String text, Image img) {","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"        return new DialogBoxScribbles(text, img);","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"danielleloh":46}},{"path":"src/main/java/scribbles/gui/DialogBoxYou.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package scribbles.gui;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":" * This control represents a dialog box consisting of an ImageView to represent the user and a label","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":" * containing text from the user.","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"public class DialogBoxYou extends HBox {","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"     * Constructs a dialog box object for the User.","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"     * @param text Text from the User.","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"     * @param img Icon representing the User.","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"    private DialogBoxYou(String text, Image img) {","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBoxUser.fxml\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"    public static DialogBoxYou getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"        return new DialogBoxYou(text, img);","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"danielleloh":47}},{"path":"src/main/java/scribbles/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package scribbles.gui;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"import scribbles.Scribbles;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":" * A GUI for Scribbles using FXML.","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"    private Scribbles scribbles \u003d new Scribbles(\"./scribblesData/taskData.txt\");","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"            MainWindow controller \u003d fxmlLoader.getController();","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"            controller.setScribbles(scribbles);","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"            stage.setTitle(\"Scribbles\");","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"            stage.show();","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"            // Greet the user","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"            String greetingMessage \u003d scribbles.greet();","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"            // Display the greeting message in the UI","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"            controller.displayGreetingMessage(greetingMessage);","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"danielleloh":43}},{"path":"src/main/java/scribbles/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package scribbles.gui;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"import scribbles.Scribbles;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"import java.util.concurrent.Executors;","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"import java.util.concurrent.ScheduledExecutorService;","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"    private Scribbles scribbles;","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"    private Image scribblesImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/scribbles.png\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"    public void setScribbles(Scribbles s) {","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"        scribbles \u003d s;","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"    public void displayGreetingMessage(String greetingMessage) {","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"                DialogBoxScribbles.getScribblesDialog(greetingMessage, scribblesImage)","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"        );","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"danielleloh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"danielleloh"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"danielleloh"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"danielleloh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"danielleloh"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"danielleloh"},"content":"        String response \u003d scribbles.getResponse(input);","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"danielleloh"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"danielleloh"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"danielleloh"},"content":"                    DialogBoxYou.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"danielleloh"},"content":"                    DialogBoxScribbles.getScribblesDialog(response, scribblesImage)","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"danielleloh"},"content":"            );","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"danielleloh"},"content":"            ScheduledExecutorService executor \u003d Executors.newSingleThreadScheduledExecutor();","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"danielleloh"},"content":"            executor.schedule(() -\u003e {","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"danielleloh"},"content":"                Platform.exit();","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"danielleloh"},"content":"                System.exit(0);","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"danielleloh"},"content":"            }, 2, TimeUnit.SECONDS);","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"danielleloh"},"content":"        } else {","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"danielleloh"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"danielleloh"},"content":"                    DialogBoxYou.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"danielleloh"},"content":"                    DialogBoxScribbles.getScribblesDialog(response, scribblesImage)","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"danielleloh"},"content":"            );","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"danielleloh"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"danielleloh":78}},{"path":"src/main/java/scribbles/parser/CommandResponder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package scribbles.parser;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import scribbles.sorter.Sorter;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"import scribbles.storage.Storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"import scribbles.task.Deadline;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"import scribbles.task.Event;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"import scribbles.task.Todo;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"import scribbles.tasklist.TaskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"import scribbles.ui.Ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":" * This class deals with the subsequent actions performed by Scribbles based on the first command in the user\u0027s input.","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"public class CommandResponder {","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"     * Constructs a new CommandResponder object","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"    public CommandResponder() {","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"     * Carries out actions for the user input \"bye\" by printing out the exit message.","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"     * @return exit message","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"    public String respondToBye() {","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"        return ui.printExitMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"     * Carries out the actions for the user input \"list\" by listing all the user\u0027s task in the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"     * @param taskList list containing the user\u0027s tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"     * @return output responds to the command","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"    public String respondToList(TaskList taskList) {","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"        return ui.listTasks(taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"danielleloh"},"content":"     * Carries out the actions for the user input \"mark\" by marking the task at the given index.","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"danielleloh"},"content":"     * @param parsedInput the parsed user input","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"danielleloh"},"content":"     * @param taskList list containing the user\u0027s tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"danielleloh"},"content":"     * @param storage storage that deals with the saving and loading of the user\u0027s task","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"danielleloh"},"content":"     * @return output responds to the command","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"danielleloh"},"content":"    public String respondToMark(Parser parsedInput, TaskList taskList, Storage storage) {","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"danielleloh"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"danielleloh"},"content":"            int index \u003d parsedInput.getIndex();","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"danielleloh"},"content":"            taskList.get(index - 1).markComplete();","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"danielleloh"},"content":"            storage.saveFileData(taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"danielleloh"},"content":"            return ui.printMarkCompletedMessage(index, taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"danielleloh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"danielleloh"},"content":"            return ui.printInvalidIndexMessage(taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"danielleloh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"danielleloh"},"content":"            return ui.printFileNotFoundMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"danielleloh"},"content":"     * Carries out the actions for the user input \"unmark\" by unmarking the task at the given index.","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"danielleloh"},"content":"     * @param parsedInput the parsed user input","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"danielleloh"},"content":"     * @param taskList list containing the user\u0027s tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"danielleloh"},"content":"     * @param storage storage that deals with the saving and loading of the user\u0027s task","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"danielleloh"},"content":"     * @return output responds to the command","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"danielleloh"},"content":"    public String respondToUnmark(Parser parsedInput, TaskList taskList, Storage storage) {","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"danielleloh"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"danielleloh"},"content":"            int index \u003d parsedInput.getIndex();","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"danielleloh"},"content":"            taskList.get(index - 1).markIncomplete();","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"danielleloh"},"content":"            storage.saveFileData(taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"danielleloh"},"content":"            return ui.printMarkIncompleteMessage(index, taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"danielleloh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"danielleloh"},"content":"            return ui.printInvalidIndexMessage(taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"danielleloh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"danielleloh"},"content":"            return ui.printFileNotFoundMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":90,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"danielleloh"},"content":"     * Carries out the actions for the user input \"to-do\" which adds a to-do task to the user\u0027s task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"danielleloh"},"content":"     * @param parsedInput the parsed user input","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"danielleloh"},"content":"     * @param taskList list containing the user\u0027s tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"danielleloh"},"content":"     * @param storage storage that deals with the saving and loading of the user\u0027s task","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"danielleloh"},"content":"     * @return output responds to the command","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"danielleloh"},"content":"    public String respondToTodo(Parser parsedInput, TaskList taskList, Storage storage) {","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"danielleloh"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"danielleloh"},"content":"            String description \u003d parsedInput.getTodoDescription();","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"danielleloh"},"content":"            taskList.addTask(new Todo(description, false));","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"danielleloh"},"content":"            storage.saveFileData(taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"danielleloh"},"content":"            return ui.confirmTaskAddition(taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"danielleloh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"danielleloh"},"content":"            return ui.printTaskMissingInformationMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":106,"author":{"gitId":"danielleloh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"danielleloh"},"content":"            return ui.printFileNotFoundMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":108,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":109,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":110,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":111,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":112,"author":{"gitId":"danielleloh"},"content":"     * Carries out the actions for the user input \"deadline\" which adds a deadline task to the user\u0027s task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":113,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":114,"author":{"gitId":"danielleloh"},"content":"     * @param parsedInput the parsed user input","lastModifiedDate":"2024-02-19"},{"lineNumber":115,"author":{"gitId":"danielleloh"},"content":"     * @param taskList list containing the user\u0027s tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":116,"author":{"gitId":"danielleloh"},"content":"     * @param storage storage that deals with the saving and loading of the user\u0027s task","lastModifiedDate":"2024-02-19"},{"lineNumber":117,"author":{"gitId":"danielleloh"},"content":"     * @return output responds to the command","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":119,"author":{"gitId":"danielleloh"},"content":"    public String respondToDeadline(Parser parsedInput, TaskList taskList, Storage storage) {","lastModifiedDate":"2024-02-19"},{"lineNumber":120,"author":{"gitId":"danielleloh"},"content":"        if (parsedInput.isMissingDeadlineInformation()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":121,"author":{"gitId":"danielleloh"},"content":"            return ui.printTaskMissingInformationMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":122,"author":{"gitId":"danielleloh"},"content":"        } else {","lastModifiedDate":"2024-02-19"},{"lineNumber":123,"author":{"gitId":"danielleloh"},"content":"            try {","lastModifiedDate":"2024-02-19"},{"lineNumber":124,"author":{"gitId":"danielleloh"},"content":"                String description \u003d parsedInput.getDeadlineDescription();","lastModifiedDate":"2024-02-19"},{"lineNumber":125,"author":{"gitId":"danielleloh"},"content":"                LocalDateTime by \u003d parsedInput.getDeadlineBy();","lastModifiedDate":"2024-02-19"},{"lineNumber":126,"author":{"gitId":"danielleloh"},"content":"                taskList.addTask(new Deadline(description, false, by));","lastModifiedDate":"2024-02-19"},{"lineNumber":127,"author":{"gitId":"danielleloh"},"content":"                storage.saveFileData(taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":128,"author":{"gitId":"danielleloh"},"content":"                return ui.confirmTaskAddition(taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":129,"author":{"gitId":"danielleloh"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":130,"author":{"gitId":"danielleloh"},"content":"                return ui.printTaskMissingInformationMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":131,"author":{"gitId":"danielleloh"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":132,"author":{"gitId":"danielleloh"},"content":"                return ui.printWrongDateTimeFormatMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":133,"author":{"gitId":"danielleloh"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":134,"author":{"gitId":"danielleloh"},"content":"                return ui.printFileNotFoundMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":135,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":136,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":137,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":138,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":139,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":140,"author":{"gitId":"danielleloh"},"content":"     * Carries out the actions for the user input \"event\" which adds a event task to the user\u0027s task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":141,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":142,"author":{"gitId":"danielleloh"},"content":"     * @param parsedInput the parsed user input","lastModifiedDate":"2024-02-19"},{"lineNumber":143,"author":{"gitId":"danielleloh"},"content":"     * @param taskList list containing the user\u0027s tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":144,"author":{"gitId":"danielleloh"},"content":"     * @param storage storage that deals with the saving and loading of the user\u0027s task","lastModifiedDate":"2024-02-19"},{"lineNumber":145,"author":{"gitId":"danielleloh"},"content":"     * @return output responds to the command","lastModifiedDate":"2024-02-19"},{"lineNumber":146,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":147,"author":{"gitId":"danielleloh"},"content":"    public String respondToEvent(Parser parsedInput, TaskList taskList, Storage storage) {","lastModifiedDate":"2024-02-19"},{"lineNumber":148,"author":{"gitId":"danielleloh"},"content":"        if (parsedInput.isInvalidEvent()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":149,"author":{"gitId":"danielleloh"},"content":"            return ui.printTaskMissingInformationMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":150,"author":{"gitId":"danielleloh"},"content":"        } else {","lastModifiedDate":"2024-02-19"},{"lineNumber":151,"author":{"gitId":"danielleloh"},"content":"            try {","lastModifiedDate":"2024-02-19"},{"lineNumber":152,"author":{"gitId":"danielleloh"},"content":"                String description \u003d parsedInput.getEventDescription();","lastModifiedDate":"2024-02-19"},{"lineNumber":153,"author":{"gitId":"danielleloh"},"content":"                LocalDateTime start \u003d parsedInput.getStartDateTime();","lastModifiedDate":"2024-02-19"},{"lineNumber":154,"author":{"gitId":"danielleloh"},"content":"                LocalDateTime end \u003d parsedInput.getEndDateTime();","lastModifiedDate":"2024-02-19"},{"lineNumber":155,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":156,"author":{"gitId":"danielleloh"},"content":"                if (parsedInput.isInvalidStartAndEnd(start, end)) {","lastModifiedDate":"2024-02-19"},{"lineNumber":157,"author":{"gitId":"danielleloh"},"content":"                    return ui.printEventStartAfterEnd();","lastModifiedDate":"2024-02-19"},{"lineNumber":158,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-02-19"},{"lineNumber":159,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":160,"author":{"gitId":"danielleloh"},"content":"                taskList.addTask(new Event(description, false, start, end));","lastModifiedDate":"2024-02-19"},{"lineNumber":161,"author":{"gitId":"danielleloh"},"content":"                storage.saveFileData(taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":162,"author":{"gitId":"danielleloh"},"content":"                return ui.confirmTaskAddition(taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":163,"author":{"gitId":"danielleloh"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":164,"author":{"gitId":"danielleloh"},"content":"                return ui.printTaskMissingInformationMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":165,"author":{"gitId":"danielleloh"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":166,"author":{"gitId":"danielleloh"},"content":"                return ui.printWrongDateTimeFormatMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":167,"author":{"gitId":"danielleloh"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":168,"author":{"gitId":"danielleloh"},"content":"                return ui.printFileNotFoundMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":169,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":170,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":171,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":172,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":173,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":174,"author":{"gitId":"danielleloh"},"content":"     * Carries out the actions for the user input \"delete\" which deletes a task from the task list at a given index.","lastModifiedDate":"2024-02-19"},{"lineNumber":175,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":176,"author":{"gitId":"danielleloh"},"content":"     * @param parsedInput the parsed user input","lastModifiedDate":"2024-02-19"},{"lineNumber":177,"author":{"gitId":"danielleloh"},"content":"     * @param taskList list containing the user\u0027s tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":178,"author":{"gitId":"danielleloh"},"content":"     * @param storage storage that deals with the saving and loading of the user\u0027s task","lastModifiedDate":"2024-02-19"},{"lineNumber":179,"author":{"gitId":"danielleloh"},"content":"     * @return output responds to the command","lastModifiedDate":"2024-02-19"},{"lineNumber":180,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":181,"author":{"gitId":"danielleloh"},"content":"    public String respondToDelete(Parser parsedInput, TaskList taskList, Storage storage) {","lastModifiedDate":"2024-02-19"},{"lineNumber":182,"author":{"gitId":"danielleloh"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":183,"author":{"gitId":"danielleloh"},"content":"            int index \u003d parsedInput.getIndex();","lastModifiedDate":"2024-02-19"},{"lineNumber":184,"author":{"gitId":"danielleloh"},"content":"            String taskRemoved \u003d taskList.get(index - 1).toString();","lastModifiedDate":"2024-02-19"},{"lineNumber":185,"author":{"gitId":"danielleloh"},"content":"            taskList.deleteTask(index - 1);","lastModifiedDate":"2024-02-19"},{"lineNumber":186,"author":{"gitId":"danielleloh"},"content":"            storage.saveFileData(taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":187,"author":{"gitId":"danielleloh"},"content":"            return ui.printTaskDeletionMessage(taskRemoved, taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":188,"author":{"gitId":"danielleloh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":189,"author":{"gitId":"danielleloh"},"content":"            return ui.printInvalidIndexMessage(taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":190,"author":{"gitId":"danielleloh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":191,"author":{"gitId":"danielleloh"},"content":"            return ui.printFileNotFoundMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":192,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":193,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":194,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":195,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":196,"author":{"gitId":"danielleloh"},"content":"     * Carries out the actions for the user input \"find\" which lists all the tasks containing the given keyword","lastModifiedDate":"2024-02-19"},{"lineNumber":197,"author":{"gitId":"danielleloh"},"content":"     * in the input.","lastModifiedDate":"2024-02-19"},{"lineNumber":198,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":199,"author":{"gitId":"danielleloh"},"content":"     * @param parsedInput the parsed user input","lastModifiedDate":"2024-02-19"},{"lineNumber":200,"author":{"gitId":"danielleloh"},"content":"     * @param taskList list containing the user\u0027s tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":201,"author":{"gitId":"danielleloh"},"content":"     * @return output responds to the command","lastModifiedDate":"2024-02-19"},{"lineNumber":202,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":203,"author":{"gitId":"danielleloh"},"content":"    public String respondToFind(Parser parsedInput, TaskList taskList) {","lastModifiedDate":"2024-02-19"},{"lineNumber":204,"author":{"gitId":"danielleloh"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":205,"author":{"gitId":"danielleloh"},"content":"            String keyword \u003d parsedInput.getFindKeyword();","lastModifiedDate":"2024-02-19"},{"lineNumber":206,"author":{"gitId":"danielleloh"},"content":"            return ui.printTasksWithKeyword(keyword, taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":207,"author":{"gitId":"danielleloh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":208,"author":{"gitId":"danielleloh"},"content":"            return ui.printMissingKeywordMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":209,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":210,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":211,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":212,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":213,"author":{"gitId":"danielleloh"},"content":"     * Carries out the actions for the user input \"sortBy\" which sorts the tasks according the the order specified by","lastModifiedDate":"2024-02-19"},{"lineNumber":214,"author":{"gitId":"danielleloh"},"content":"     * the user in the input.","lastModifiedDate":"2024-02-19"},{"lineNumber":215,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":216,"author":{"gitId":"danielleloh"},"content":"     * @param parsedInput the parsed user input","lastModifiedDate":"2024-02-19"},{"lineNumber":217,"author":{"gitId":"danielleloh"},"content":"     * @param taskList list containing the user\u0027s tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":218,"author":{"gitId":"danielleloh"},"content":"     * @param storage storage that deals with the saving and loading of the user\u0027s task","lastModifiedDate":"2024-02-19"},{"lineNumber":219,"author":{"gitId":"danielleloh"},"content":"     * @return output responds to the command","lastModifiedDate":"2024-02-19"},{"lineNumber":220,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":221,"author":{"gitId":"danielleloh"},"content":"    public String respondToSortBy(Parser parsedInput, TaskList taskList, Storage storage) {","lastModifiedDate":"2024-02-19"},{"lineNumber":222,"author":{"gitId":"danielleloh"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":223,"author":{"gitId":"danielleloh"},"content":"            String order \u003d parsedInput.getSortingOrder();","lastModifiedDate":"2024-02-19"},{"lineNumber":224,"author":{"gitId":"danielleloh"},"content":"            Sorter sort \u003d new Sorter();","lastModifiedDate":"2024-02-19"},{"lineNumber":225,"author":{"gitId":"danielleloh"},"content":"            sort.sortList(taskList, order);","lastModifiedDate":"2024-02-19"},{"lineNumber":226,"author":{"gitId":"danielleloh"},"content":"            storage.saveFileData(taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":227,"author":{"gitId":"danielleloh"},"content":"            return ui.printTasksSortedMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":228,"author":{"gitId":"danielleloh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":229,"author":{"gitId":"danielleloh"},"content":"            return ui.printOrderNotFoundMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":230,"author":{"gitId":"danielleloh"},"content":"        } catch(IllegalArgumentException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":231,"author":{"gitId":"danielleloh"},"content":"            return ui.printOrderNotFoundMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":232,"author":{"gitId":"danielleloh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":233,"author":{"gitId":"danielleloh"},"content":"            return ui.printFileNotFoundMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":234,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":235,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":236,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":237,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":238,"author":{"gitId":"danielleloh"},"content":"     * responds the other unknown inputs or \"help\" by displaying available commands to guide the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":239,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":240,"author":{"gitId":"danielleloh"},"content":"     * @return message to guide user","lastModifiedDate":"2024-02-19"},{"lineNumber":241,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":242,"author":{"gitId":"danielleloh"},"content":"    public String respondToOtherInput() {","lastModifiedDate":"2024-02-19"},{"lineNumber":243,"author":{"gitId":"danielleloh"},"content":"        return ui.printOtherInputMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":244,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":245,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":246,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"danielleloh":246}},{"path":"src/main/java/scribbles/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package scribbles.parser;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"import scribbles.ui.Ui;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":" * This class deals with making sense of user commands.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"public class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"    private String input;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"     * Constructs a new instance of Parser with the specified input string.","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"     * @param input input string to be parsed.","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"    public Parser(String input) {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"        this.input \u003d input;","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"     * Gets the first word of instruction, which is the main command for following actions.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"     * @return The first word of input","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"    public String getCommand() {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"        String[] inputParts \u003d this.input.split(\"\\\\s+\");","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"        return inputParts[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"     * Gets the index of task to perform command on in input.","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"     * @return index of task to perform instruction on","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"     * @throws IndexOutOfBoundsException If user leaves out index from instructions","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"    public int getIndex() throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"        String[] inputParts \u003d this.input.split(\"\\\\s+\");","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"        String indexString \u003d inputParts[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"        int index \u003d Integer.parseInt(indexString);","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"danielleloh"},"content":"        return index;","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"danielleloh"},"content":"     * Gets the description of the to-do task in input","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"danielleloh"},"content":"     * @return Description of task","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"danielleloh"},"content":"     * @throws IndexOutOfBoundsException If user leaves the description blank","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"danielleloh"},"content":"    public String getTodoDescription() throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"danielleloh"},"content":"        String[] inputParts \u003d this.input.split(\"\\\\s+\", 2);","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"danielleloh"},"content":"        String description \u003d inputParts[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"danielleloh"},"content":"        return description;","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"danielleloh"},"content":"     * Checks if there are missing information in deadline instructions.","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"danielleloh"},"content":"     * @return true if there are missing information.","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"danielleloh"},"content":"     * @throws IndexOutOfBoundsException If date/time string is missing","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"danielleloh"},"content":"    public boolean isMissingDeadlineInformation() throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"danielleloh"},"content":"        if (!this.input.contains(\" /by \")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"danielleloh"},"content":"            return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"danielleloh"},"content":"        if ((this.input.split(\"\\\\s+\", 2)[1].split(\"\\\\s+/by\\\\s+\", 2)[0].trim().isEmpty())) {","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"danielleloh"},"content":"            return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"danielleloh"},"content":"        if ((this.input.split(\"\\\\s+\", 2)[1].split(\"\\\\s+/by\\\\s+\", 2)[1].isEmpty())) {","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"danielleloh"},"content":"            return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"danielleloh"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"danielleloh"},"content":"     * Gets the description of the deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"danielleloh"},"content":"     * @return Description of deadline","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"danielleloh"},"content":"    public String getDeadlineDescription() {","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"danielleloh"},"content":"        return this.input.split(\"\\\\s+\", 2)[1].split(\"\\\\s+/by\\\\s+\", 2)[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"danielleloh"},"content":"     * Gets the date/time of the deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"danielleloh"},"content":"     * @return Date and time of deadline","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"danielleloh"},"content":"     * @throws IndexOutOfBoundsException If date/time are missing from instruction","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"danielleloh"},"content":"     * @throws DateTimeParseException If date/time String are in the wrong format","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"danielleloh"},"content":"    public LocalDateTime getDeadlineBy() throws IndexOutOfBoundsException, DateTimeParseException {","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"danielleloh"},"content":"        String dateTime \u003d this.input.split(\"\\\\s+\", 2)[1].split(\"\\\\s+/by\\\\s+\")[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"danielleloh"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(dateTime, DATE_TIME_FORMAT);","lastModifiedDate":"2024-02-16"},{"lineNumber":102,"author":{"gitId":"danielleloh"},"content":"        return by;","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"danielleloh"},"content":"     * Checks if there are missing information in event instructions.","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"danielleloh"},"content":"     * @return true if there are missing information","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"danielleloh"},"content":"     * @throws IndexOutOfBoundsException If date/time string is missing","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"danielleloh"},"content":"    public boolean isInvalidEvent() throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"danielleloh"},"content":"        if (!this.input.contains(\" /from \") || !this.input.contains(\" /to \")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"danielleloh"},"content":"            return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"danielleloh"},"content":"        if (this.input.indexOf(\"/from\") \u003e this.input.indexOf(\"/to\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"danielleloh"},"content":"            return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"danielleloh"},"content":"        if (this.input.split(\"\\\\s+\", 2)[1].split(\"\\\\s+/from\\\\s+\", 2)[0].trim().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"danielleloh"},"content":"            // no description","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"danielleloh"},"content":"            return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"danielleloh"},"content":"        if (this.input.split(\"\\\\s+/from\\\\s+\", 2)[1].split(\"\\\\s+/to\\\\s+\",","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"danielleloh"},"content":"                2)[0].trim().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"danielleloh"},"content":"            // no start date and time","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"danielleloh"},"content":"            return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"danielleloh"},"content":"        if (this.input.split(\"\\\\s+/to\\\\s+\", 2)[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"danielleloh"},"content":"            // no end date and time","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"danielleloh"},"content":"            return true;","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"danielleloh"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":134,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"danielleloh"},"content":"     * Gets event description","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"danielleloh"},"content":"     * @return The event description","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"danielleloh"},"content":"    public String getEventDescription() {","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"danielleloh"},"content":"        return this.input.split(\"\\\\s+\", 2)[1].split(\"\\\\s+/from\\\\s+\", 2)[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"danielleloh"},"content":"     * Gets event start time as LocalDateTime.","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":146,"author":{"gitId":"danielleloh"},"content":"     * @return Start time of event.","lastModifiedDate":"2024-02-03"},{"lineNumber":147,"author":{"gitId":"danielleloh"},"content":"     * @throws DateTimeParseException If date/time string is formatted wrongly.","lastModifiedDate":"2024-02-03"},{"lineNumber":148,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":149,"author":{"gitId":"danielleloh"},"content":"    public LocalDateTime getStartDateTime() throws DateTimeParseException {","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"danielleloh"},"content":"        String startString \u003d this.input.split(\"\\\\s+/from\\\\s+\", 2)[1].split(\"\\\\s+/to\\\\s+\",","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"danielleloh"},"content":"                2)[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":152,"author":{"gitId":"danielleloh"},"content":"        LocalDateTime start \u003d LocalDateTime.parse(startString, DATE_TIME_FORMAT);","lastModifiedDate":"2024-02-16"},{"lineNumber":153,"author":{"gitId":"danielleloh"},"content":"        return start;","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":155,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":157,"author":{"gitId":"danielleloh"},"content":"     * Gets event end time as LocalDateTime.","lastModifiedDate":"2024-02-03"},{"lineNumber":158,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":159,"author":{"gitId":"danielleloh"},"content":"     * @return End time of event.","lastModifiedDate":"2024-02-03"},{"lineNumber":160,"author":{"gitId":"danielleloh"},"content":"     * @throws DateTimeParseException If date/time string is formatted wrongly.","lastModifiedDate":"2024-02-03"},{"lineNumber":161,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":162,"author":{"gitId":"danielleloh"},"content":"    public LocalDateTime getEndDateTime() throws IndexOutOfBoundsException, DateTimeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":163,"author":{"gitId":"danielleloh"},"content":"        String endString \u003d this.input.split(\"\\\\s+/to\\\\s+\", 2)[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":164,"author":{"gitId":"danielleloh"},"content":"        LocalDateTime end \u003d LocalDateTime.parse(endString, DATE_TIME_FORMAT);","lastModifiedDate":"2024-02-16"},{"lineNumber":165,"author":{"gitId":"danielleloh"},"content":"        return end;","lastModifiedDate":"2024-02-01"},{"lineNumber":166,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":167,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":168,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":169,"author":{"gitId":"danielleloh"},"content":"     * Checks if the start of the event of the input is after the end of the event of the input.","lastModifiedDate":"2024-02-19"},{"lineNumber":170,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":171,"author":{"gitId":"danielleloh"},"content":"     * @param start start date/time of the event","lastModifiedDate":"2024-02-19"},{"lineNumber":172,"author":{"gitId":"danielleloh"},"content":"     * @param end end date/time of the event","lastModifiedDate":"2024-02-19"},{"lineNumber":173,"author":{"gitId":"danielleloh"},"content":"     * @return true if start is after the end","lastModifiedDate":"2024-02-19"},{"lineNumber":174,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":175,"author":{"gitId":"danielleloh"},"content":"    public boolean isInvalidStartAndEnd(LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-02-18"},{"lineNumber":176,"author":{"gitId":"danielleloh"},"content":"        return start.isAfter(end);","lastModifiedDate":"2024-02-18"},{"lineNumber":177,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":178,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":179,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":180,"author":{"gitId":"danielleloh"},"content":"     * Gets the keyword that user wants to look for in tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":181,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":182,"author":{"gitId":"danielleloh"},"content":"     * @return The keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":183,"author":{"gitId":"danielleloh"},"content":"     * @throws IndexOutOfBoundsException If find command does not contain a keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":184,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":185,"author":{"gitId":"danielleloh"},"content":"    public String getFindKeyword() throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-03"},{"lineNumber":186,"author":{"gitId":"danielleloh"},"content":"        String keyword \u003d this.input.split(\"\\\\s+\", 2)[1].trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":187,"author":{"gitId":"danielleloh"},"content":"        return keyword;","lastModifiedDate":"2024-02-03"},{"lineNumber":188,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":189,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":190,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":191,"author":{"gitId":"danielleloh"},"content":"     * Gets the order in which the user wants to sort by.","lastModifiedDate":"2024-02-16"},{"lineNumber":192,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":193,"author":{"gitId":"danielleloh"},"content":"     * @return The order","lastModifiedDate":"2024-02-16"},{"lineNumber":194,"author":{"gitId":"danielleloh"},"content":"     * @throws IndexOutOfBoundsException If the command does not specify any order","lastModifiedDate":"2024-02-16"},{"lineNumber":195,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":196,"author":{"gitId":"danielleloh"},"content":"    public String getSortingOrder() throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-16"},{"lineNumber":197,"author":{"gitId":"danielleloh"},"content":"        String order \u003d this.input.split(\"\\\\s+\", 2)[1].trim();","lastModifiedDate":"2024-02-16"},{"lineNumber":198,"author":{"gitId":"danielleloh"},"content":"        return order;","lastModifiedDate":"2024-02-16"},{"lineNumber":199,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":200,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":201,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"danielleloh":201}},{"path":"src/main/java/scribbles/sorter/Sorter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package scribbles.sorter;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import scribbles.tasklist.TaskList;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":" * This class deals with the sorting of the task list according to the given order.","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"public class Sorter {","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"     * Constructs a new instance of a Sorter.","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"    public Sorter(){","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"     * Sorts the task list according to the given order.","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"     * @param taskList The task list to sort.","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"     * @param order The order in which to sort by.","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"     * @throws IllegalArgumentException If the given order is not an accepted argument.","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"    public void sortList(TaskList taskList, String order) throws IllegalArgumentException {","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"        switch(order) {","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"        case \"description\":","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"            taskList.sortByDescription();","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"        case \"type\":","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"            taskList.sortByType();","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"        case \"completed first\":","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"            taskList.sortByCompletedFirst();","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"        case \"incompleted first\":","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"            taskList.sortByIncompleteFirst();","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"        case \"date\":","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"            taskList.sortByDate();","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"        default:","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"danielleloh":44}},{"path":"src/main/java/scribbles/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package scribbles.storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"import java.io.File;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"import scribbles.task.Deadline;","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"import scribbles.task.Event;","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"import scribbles.task.Task;","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"import scribbles.task.Todo;","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"import scribbles.tasklist.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":" * This class deals with creating file for storage, loading tasks from the file and saving task to the file.","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"public class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"    private String filePath;","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"     * Constructs a Storage object with the given file path to store information in the hard disk and task list","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"     * to load information into chatbot for the user.","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"     * @param filePath File path to file which stores tasks.","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"     * @param taskList Task list to store tasks.","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"    public Storage(String filePath, TaskList taskList) {","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"        createFile();","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"            this.loadFileData(this.taskList);","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"File \" + this.filePath + \" not found. Unable to load data from file.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"     * Checks if file path exists.","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"     * Creates file path if it does not exist.","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"danielleloh"},"content":"    public void createFile() {","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"danielleloh"},"content":"        File f \u003d new File(this.filePath);","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"danielleloh"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"danielleloh"},"content":"            File directory \u003d f.getParentFile();","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"danielleloh"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"danielleloh"},"content":"                boolean hasCreatedDirectory \u003d directory.mkdir();","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"danielleloh"},"content":"                if (!hasCreatedDirectory) {","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"danielleloh"},"content":"                    System.out.println(\"Failed to create directory for file.\\n\");","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"danielleloh"},"content":"            if (!f.exists()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"danielleloh"},"content":"                boolean hasCreatedFile \u003d f.createNewFile();","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"danielleloh"},"content":"                if (!hasCreatedFile) {","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"danielleloh"},"content":"                    System.out.println(\"Failed to create file.\\n\");","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"danielleloh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"danielleloh"},"content":"     * Loads data from file to task list in Scribbles.","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"danielleloh"},"content":"     * @param taskList List to load data into","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"danielleloh"},"content":"     * @throws FileNotFoundException If data file does not exist","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"danielleloh"},"content":"    public void loadFileData(TaskList taskList) throws FileNotFoundException {","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"danielleloh"},"content":"        File f \u003d new File(this.filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"danielleloh"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"danielleloh"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(f));","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"danielleloh"},"content":"            String line \u003d reader.readLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"danielleloh"},"content":"            String delimiter \u003d \"\\\\s*\\\\|\\\\s*\";","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"danielleloh"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"danielleloh"},"content":"                String[] tokens \u003d line.split(delimiter);","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"danielleloh"},"content":"                String typeOfTask \u003d tokens[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"danielleloh"},"content":"                int completed \u003d Integer.parseInt(tokens[1].trim());","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"danielleloh"},"content":"                boolean isCompleted \u003d (completed \u003d\u003d 1 ? true : false);","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"danielleloh"},"content":"                String description \u003d tokens[2].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"danielleloh"},"content":"                switch(typeOfTask) {","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"danielleloh"},"content":"                case \"T\":","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"danielleloh"},"content":"                    taskList.addTask(new Todo(description, isCompleted));","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"danielleloh"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"danielleloh"},"content":"                case \"D\":","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"danielleloh"},"content":"                    String deadlineString \u003d tokens[3].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"danielleloh"},"content":"                    try {","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"danielleloh"},"content":"                        DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"danielleloh"},"content":"                        LocalDateTime deadline \u003d LocalDateTime.parse(deadlineString, dateTimeFormat);","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"danielleloh"},"content":"                        taskList.addTask(new Deadline(description, isCompleted, deadline));","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"danielleloh"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"danielleloh"},"content":"                        System.out.println(\"Your deadline, \\\"\" + description + \"\\\" stored in file has incorrect \"","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"danielleloh"},"content":"                                + \"date/time format and cannot be loaded into task list. \");","lastModifiedDate":"2024-02-07"},{"lineNumber":108,"author":{"gitId":"danielleloh"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"danielleloh"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"danielleloh"},"content":"                case \"E\":","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"danielleloh"},"content":"                    String startString \u003d tokens[3].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"danielleloh"},"content":"                    String endString \u003d tokens[4].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"danielleloh"},"content":"                    try {","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"danielleloh"},"content":"                        DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"danielleloh"},"content":"                        LocalDateTime start \u003d LocalDateTime.parse(startString, dateTimeFormat);","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"danielleloh"},"content":"                        LocalDateTime end \u003d LocalDateTime.parse(endString, dateTimeFormat);","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"danielleloh"},"content":"                        taskList.addTask(new Event(description, isCompleted, start, end));","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"danielleloh"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"danielleloh"},"content":"                        System.out.println(\"Your event, \\\"\" + description + \"\\\" stored in file has incorrect \"","lastModifiedDate":"2024-02-07"},{"lineNumber":120,"author":{"gitId":"danielleloh"},"content":"                                + \"date/time format and cannot be loaded into task list. \");","lastModifiedDate":"2024-02-07"},{"lineNumber":121,"author":{"gitId":"danielleloh"},"content":"                    }","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"danielleloh"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"danielleloh"},"content":"                default:","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"danielleloh"},"content":"                    System.out.println(\"Invalid task type \\\"\" + typeOfTask + \"\\\" was found in file.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"danielleloh"},"content":"                line \u003d reader.readLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"danielleloh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"danielleloh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"Uh oh! looks like the data in your file is corrupted and cannot be read!\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":132,"author":{"gitId":"danielleloh"},"content":"                    + \"Please verify data in the file to proceed. Proceeding without verification may cause\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":133,"author":{"gitId":"danielleloh"},"content":"                    + \"current data to disappear.\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":134,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"danielleloh"},"content":"     * Saves data from task list into file.","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"danielleloh"},"content":"     * @param taskList List that contains data to save into file","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"danielleloh"},"content":"     * @throws FileNotFoundException If file does not exist","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":143,"author":{"gitId":"danielleloh"},"content":"    public void saveFileData(TaskList taskList) throws FileNotFoundException {","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"danielleloh"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"danielleloh"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"danielleloh"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":147,"author":{"gitId":"danielleloh"},"content":"                Task task \u003d taskList.get(i);","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"danielleloh"},"content":"                if (task instanceof Todo) {","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"danielleloh"},"content":"                    writer.write(\"T | \" + (task.isCompleted() ? \"1\" : \"0\") + \" | \" + task.getDescription());","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"danielleloh"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2024-02-01"},{"lineNumber":152,"author":{"gitId":"danielleloh"},"content":"                    writer.write(\"D | \" + (task.isCompleted() ? \"1\" : \"0\") + \" | \" + task.getDescription()","lastModifiedDate":"2024-02-07"},{"lineNumber":153,"author":{"gitId":"danielleloh"},"content":"                            + \" | \" + ((Deadline) task).getByString());","lastModifiedDate":"2024-02-07"},{"lineNumber":154,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":155,"author":{"gitId":"danielleloh"},"content":"                if (task instanceof Event) {","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"danielleloh"},"content":"                    writer.write(\"E | \" + (task.isCompleted() ? \"1\" : \"0\") + \" | \" + task.getDescription()","lastModifiedDate":"2024-02-07"},{"lineNumber":157,"author":{"gitId":"danielleloh"},"content":"                            + \" | \" + ((Event) task).getStartString() + \" | \" + ((Event) task).getEndString());","lastModifiedDate":"2024-02-07"},{"lineNumber":158,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":159,"author":{"gitId":"danielleloh"},"content":"                writer.newLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":160,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":161,"author":{"gitId":"danielleloh"},"content":"            writer.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":162,"author":{"gitId":"danielleloh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":163,"author":{"gitId":"danielleloh"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":164,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":165,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":166,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":167,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"danielleloh":167}},{"path":"src/main/java/scribbles/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package scribbles.task;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":" * This class represents a deadline which is a task which stores the date/time of when it needs to be completed by.","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"     * Constructs a new Deadline object with the specified description and deadline.","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"     * @param description description of deadline.","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"     * @param isCompleted true if deadline has been completed.","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"     * @param by date/time of deadline.","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"    public Deadline(String description, boolean isCompleted, LocalDateTime by) {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"        super(description, isCompleted);","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"        return this.by;","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"     * Gets the deadline in LocalDateTime and changes it to String format.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"     * @return The deadline in String format.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"    public String getByString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"        DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"        return this.by.format(dateTimeFormat);","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.getByString() + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"danielleloh":42}},{"path":"src/main/java/scribbles/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package scribbles.task;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":" * This class represents an event which is a task that has a start and end date/time","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"    private LocalDateTime start;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"    private LocalDateTime end;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"     * Constructs a new event object with the specified description and start and end date/time.","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"     * @param description description of event.","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"     * @param isCompleted true if event is completed.","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"     * @param start start date/time of event.","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"     * @param end end date/time of event.","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"    public Event(String description, boolean isCompleted, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"        super(description, isCompleted);","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"        return this.start;","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"     * Gets the start date/time in LocalDateTime and returns it in String format.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"     * @return Date/time of start of event in String format.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"    public String getStartString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"        DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"        return this.start.format(dateTimeFormat);","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"     * Gets the end date/time in LocalDateTime and returns it in String format.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"     * @return Date/time of end of event in String format.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"    public String getEndString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"        DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"        return this.end.format(dateTimeFormat);","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"danielleloh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"danielleloh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"danielleloh"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.getStartString() + \" to: \" + this.getEndString() + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"danielleloh":55}},{"path":"src/main/java/scribbles/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package scribbles.task;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":" * This class represents a task.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"public class Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"    protected String description;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"    private static final String COMPLETED_ICON \u003d \"[X]\";","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"    private static final String INCOMPLETED_ICON \u003d \"[ ]\";","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"     * Constructs a new Task object with the given description.","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"     * @param description description of task.","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"     * @param isCompleted true when tasks is completed.","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"    public Task(String description, boolean isCompleted) {","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"        return this.description;","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"     * Checks if the task has been completed.","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"     * @return True if the task is completed.","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"        return this.isCompleted;","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"     * Marks the task as completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"    public void markComplete() {","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"     * Marks the class as incompleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"    public void markIncomplete() {","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"danielleloh"},"content":"     * Returns the String format of how tasks are listed in the list of task.","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"danielleloh"},"content":"     * @return User-readable task in String format","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"danielleloh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"danielleloh"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"danielleloh"},"content":"            return COMPLETED_ICON + \" \" + this.description;","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"danielleloh"},"content":"        return INCOMPLETED_ICON + \" \" + this.description;","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"danielleloh":62}},{"path":"src/main/java/scribbles/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package scribbles.task;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":" * This class represents a to-do task.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"     * Constructs a new to-do object with the specified description.","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"     * @param description description of the to-do.","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"     * @param isCompleted true if to-do is completed.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"    public Todo(String description, boolean isCompleted) {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"        super(description, isCompleted);","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"danielleloh":22}},{"path":"src/main/java/scribbles/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package scribbles.tasklist;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"import scribbles.task.Deadline;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"import scribbles.task.Event;","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"import scribbles.task.Task;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"import scribbles.task.Todo;","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":" * This class represents the user\u0027s task list.","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"public class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"     * @param task Task to be added to the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"        taskList.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"     * @param index Index of the task to delete from the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"     * @throws IndexOutOfBoundsException If index does not exist in the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"    public void deleteTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"        taskList.remove(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"     * @return Size of task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"    public int size() {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"danielleloh"},"content":"        return taskList.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"danielleloh"},"content":"     * Gets the task at index from the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"danielleloh"},"content":"     * @param index Index of the task to get.","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"danielleloh"},"content":"     * @return Task at index.","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"danielleloh"},"content":"     * @throws IndexOutOfBoundsException If the index does not exist in the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"danielleloh"},"content":"    public Task get(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"danielleloh"},"content":"        return taskList.get(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"danielleloh"},"content":"     * Sorts tasks in task list by description in alphabetical order.","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":66,"author":{"gitId":"danielleloh"},"content":"    public void sortByDescription() {","lastModifiedDate":"2024-02-16"},{"lineNumber":67,"author":{"gitId":"danielleloh"},"content":"        Collections.sort(taskList, Comparator.comparing(Task::getDescription));","lastModifiedDate":"2024-02-16"},{"lineNumber":68,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"danielleloh"},"content":"     * Sorts task in task list by status of completion, placing the completed tasks first.","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"danielleloh"},"content":"    public void sortByCompletedFirst() {","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"danielleloh"},"content":"        Collections.sort(taskList, new Comparator\u003cTask\u003e() {","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"danielleloh"},"content":"            @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":76,"author":{"gitId":"danielleloh"},"content":"            public int compare(Task t1, Task t2) {","lastModifiedDate":"2024-02-16"},{"lineNumber":77,"author":{"gitId":"danielleloh"},"content":"                if (!t1.isCompleted() \u0026\u0026 t2.isCompleted()) {","lastModifiedDate":"2024-02-16"},{"lineNumber":78,"author":{"gitId":"danielleloh"},"content":"                    return 1;","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"danielleloh"},"content":"                if (t1.isCompleted() \u0026\u0026 !t2.isCompleted()) {","lastModifiedDate":"2024-02-16"},{"lineNumber":81,"author":{"gitId":"danielleloh"},"content":"                    return -1;","lastModifiedDate":"2024-02-16"},{"lineNumber":82,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-02-16"},{"lineNumber":83,"author":{"gitId":"danielleloh"},"content":"                return 0;","lastModifiedDate":"2024-02-16"},{"lineNumber":84,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":85,"author":{"gitId":"danielleloh"},"content":"        });","lastModifiedDate":"2024-02-16"},{"lineNumber":86,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":87,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":88,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":89,"author":{"gitId":"danielleloh"},"content":"     * Sorts task in task list by status of completion, placing the incompleted tasks first.","lastModifiedDate":"2024-02-16"},{"lineNumber":90,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":91,"author":{"gitId":"danielleloh"},"content":"    public void sortByIncompleteFirst() {","lastModifiedDate":"2024-02-16"},{"lineNumber":92,"author":{"gitId":"danielleloh"},"content":"        Collections.sort(taskList, new Comparator\u003cTask\u003e() {","lastModifiedDate":"2024-02-16"},{"lineNumber":93,"author":{"gitId":"danielleloh"},"content":"            @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":94,"author":{"gitId":"danielleloh"},"content":"            public int compare(Task t1, Task t2) {","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"danielleloh"},"content":"                if (t1.isCompleted() \u0026\u0026 !t2.isCompleted()) {","lastModifiedDate":"2024-02-16"},{"lineNumber":96,"author":{"gitId":"danielleloh"},"content":"                    return 1;","lastModifiedDate":"2024-02-16"},{"lineNumber":97,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-02-16"},{"lineNumber":98,"author":{"gitId":"danielleloh"},"content":"                if (!t1.isCompleted() \u0026\u0026 t2.isCompleted()) {","lastModifiedDate":"2024-02-16"},{"lineNumber":99,"author":{"gitId":"danielleloh"},"content":"                    return -1;","lastModifiedDate":"2024-02-16"},{"lineNumber":100,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-02-16"},{"lineNumber":101,"author":{"gitId":"danielleloh"},"content":"                return 0;","lastModifiedDate":"2024-02-16"},{"lineNumber":102,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":103,"author":{"gitId":"danielleloh"},"content":"        });","lastModifiedDate":"2024-02-16"},{"lineNumber":104,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":105,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":106,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":107,"author":{"gitId":"danielleloh"},"content":"     * Sorts task in task list by type of task in the order of to-do, deadlines, then events.","lastModifiedDate":"2024-02-16"},{"lineNumber":108,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":109,"author":{"gitId":"danielleloh"},"content":"    public void sortByType() {","lastModifiedDate":"2024-02-16"},{"lineNumber":110,"author":{"gitId":"danielleloh"},"content":"        Collections.sort(taskList, new Comparator\u003cTask\u003e() {","lastModifiedDate":"2024-02-16"},{"lineNumber":111,"author":{"gitId":"danielleloh"},"content":"            @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":112,"author":{"gitId":"danielleloh"},"content":"            public int compare(Task t1, Task t2) {","lastModifiedDate":"2024-02-16"},{"lineNumber":113,"author":{"gitId":"danielleloh"},"content":"                int typeOrder \u003d getOrder(t1) - getOrder(t2);","lastModifiedDate":"2024-02-16"},{"lineNumber":114,"author":{"gitId":"danielleloh"},"content":"                return typeOrder;","lastModifiedDate":"2024-02-16"},{"lineNumber":115,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":116,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":117,"author":{"gitId":"danielleloh"},"content":"            private int getOrder(Task task) {","lastModifiedDate":"2024-02-16"},{"lineNumber":118,"author":{"gitId":"danielleloh"},"content":"                if (task instanceof Todo) {","lastModifiedDate":"2024-02-16"},{"lineNumber":119,"author":{"gitId":"danielleloh"},"content":"                    return 1;","lastModifiedDate":"2024-02-16"},{"lineNumber":120,"author":{"gitId":"danielleloh"},"content":"                } else if (task instanceof Deadline) {","lastModifiedDate":"2024-02-16"},{"lineNumber":121,"author":{"gitId":"danielleloh"},"content":"                    return 2;","lastModifiedDate":"2024-02-16"},{"lineNumber":122,"author":{"gitId":"danielleloh"},"content":"                } else {","lastModifiedDate":"2024-02-16"},{"lineNumber":123,"author":{"gitId":"danielleloh"},"content":"                    // task instanceof Event","lastModifiedDate":"2024-02-16"},{"lineNumber":124,"author":{"gitId":"danielleloh"},"content":"                    return 3;","lastModifiedDate":"2024-02-16"},{"lineNumber":125,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-02-16"},{"lineNumber":126,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":127,"author":{"gitId":"danielleloh"},"content":"        });","lastModifiedDate":"2024-02-16"},{"lineNumber":128,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":129,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":130,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":131,"author":{"gitId":"danielleloh"},"content":"     * Sorts task in the tasklist by the date.","lastModifiedDate":"2024-02-16"},{"lineNumber":132,"author":{"gitId":"danielleloh"},"content":"     * To-do tasks are placed at the bottom of the list as they do not contain any date.","lastModifiedDate":"2024-02-16"},{"lineNumber":133,"author":{"gitId":"danielleloh"},"content":"     * Deadlines and Events are sorted by their by date and time, and start date and time, respectively.","lastModifiedDate":"2024-02-16"},{"lineNumber":134,"author":{"gitId":"danielleloh"},"content":"     * They are sorted from tasks with earlier dates to later dates.","lastModifiedDate":"2024-02-16"},{"lineNumber":135,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":136,"author":{"gitId":"danielleloh"},"content":"    public void sortByDate() {","lastModifiedDate":"2024-02-16"},{"lineNumber":137,"author":{"gitId":"danielleloh"},"content":"        Collections.sort(taskList, new Comparator\u003cTask\u003e() {","lastModifiedDate":"2024-02-16"},{"lineNumber":138,"author":{"gitId":"danielleloh"},"content":"            @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":139,"author":{"gitId":"danielleloh"},"content":"            public int compare(Task t1, Task t2) {","lastModifiedDate":"2024-02-16"},{"lineNumber":140,"author":{"gitId":"danielleloh"},"content":"                if (t1 instanceof Todo \u0026\u0026 !(t2 instanceof Todo)) {","lastModifiedDate":"2024-02-16"},{"lineNumber":141,"author":{"gitId":"danielleloh"},"content":"                    return 1;","lastModifiedDate":"2024-02-16"},{"lineNumber":142,"author":{"gitId":"danielleloh"},"content":"                } else if (!(t1 instanceof Todo) \u0026\u0026 t2 instanceof Todo) {","lastModifiedDate":"2024-02-16"},{"lineNumber":143,"author":{"gitId":"danielleloh"},"content":"                    return -1;","lastModifiedDate":"2024-02-16"},{"lineNumber":144,"author":{"gitId":"danielleloh"},"content":"                } else if (t1 instanceof Todo \u0026\u0026 t2 instanceof Todo) {","lastModifiedDate":"2024-02-16"},{"lineNumber":145,"author":{"gitId":"danielleloh"},"content":"                    return 0;","lastModifiedDate":"2024-02-16"},{"lineNumber":146,"author":{"gitId":"danielleloh"},"content":"                } else {","lastModifiedDate":"2024-02-16"},{"lineNumber":147,"author":{"gitId":"danielleloh"},"content":"                    LocalDateTime dateTime1 \u003d getDateTime(t1);","lastModifiedDate":"2024-02-16"},{"lineNumber":148,"author":{"gitId":"danielleloh"},"content":"                    LocalDateTime dateTime2 \u003d getDateTime(t2);","lastModifiedDate":"2024-02-16"},{"lineNumber":149,"author":{"gitId":"danielleloh"},"content":"                    return dateTime1.compareTo(dateTime2);","lastModifiedDate":"2024-02-16"},{"lineNumber":150,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-02-16"},{"lineNumber":151,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":152,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":153,"author":{"gitId":"danielleloh"},"content":"            public LocalDateTime getDateTime(Task task) {","lastModifiedDate":"2024-02-16"},{"lineNumber":154,"author":{"gitId":"danielleloh"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2024-02-16"},{"lineNumber":155,"author":{"gitId":"danielleloh"},"content":"                    return ((Deadline) task).getBy();","lastModifiedDate":"2024-02-16"},{"lineNumber":156,"author":{"gitId":"danielleloh"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2024-02-16"},{"lineNumber":157,"author":{"gitId":"danielleloh"},"content":"                    return ((Event) task).getStart();","lastModifiedDate":"2024-02-16"},{"lineNumber":158,"author":{"gitId":"danielleloh"},"content":"                } else {","lastModifiedDate":"2024-02-16"},{"lineNumber":159,"author":{"gitId":"danielleloh"},"content":"                    return null;","lastModifiedDate":"2024-02-16"},{"lineNumber":160,"author":{"gitId":"danielleloh"},"content":"                }","lastModifiedDate":"2024-02-16"},{"lineNumber":161,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":162,"author":{"gitId":"danielleloh"},"content":"        });","lastModifiedDate":"2024-02-16"},{"lineNumber":163,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":164,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"danielleloh":164}},{"path":"src/main/java/scribbles/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package scribbles.ui;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import scribbles.tasklist.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":" * This class implements the ui of Scribbles.","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"public class Ui {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"     * Constructor of Ui for chatbot Scribbles","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"    public Ui() {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"     * Prints the greeting message of the chatbot.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"    public String greet() {","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"        return (\"Hello! I\u0027m Scribbles :) What can I do for you?\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"                + \"(input commands or type \u0027help\u0027 for guide)\");","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"     * Prints the message if user inputs an unidentified input into chatbot.","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"     * @return A overview of the accepted commands by the chatbot.","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"    public String printOtherInputMessage() {","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"        return (\"Try formatting your instructions as follows: \\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"                + \"- type \\\"list\\\" to view your current list of tasks\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"                + \"- type \\\"mark [index]\\\" to mark task at index as completed\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"                + \"- type \\\"unmark [index]\\\" to mark task at index as incomplete\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"                + \"- type \\\"todo [task]\\\" to insert to-do task into your list\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"                + \"- type \\\"deadline [task] /by [date]\\\" to insert task into your list with deadline as date\"","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"                + \" with deadline formatted dd/mm/yyyy HHmm\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"                + \"- type \\\"event [task] /from [start] /to [end]\\\" \"","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"                + \"to insert task into your list with a start and end duration\"","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"                + \" with duration formatted as dd/mm/yyyy HHmm\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"                + \"- type \\\"delete [index]\\\" to remove a task at index from your list\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"                + \"- type \\\"find [keyword]\\\" to find tasks with matching keyword\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"                + \"- type \\\"sortBy [order]\\\" to sort task list according to specified order (e.g. description, type, \"","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"                + \"completed first, incompleted first, date)\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"                + \"- type \\\"bye\\\" to exit Scribbles\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"                + \"Please try again :)\");","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"danielleloh"},"content":"     * Prints list of tasks in task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"danielleloh"},"content":"     * @param taskList List which contains the tasks.","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"danielleloh"},"content":"     * @return A user-friendly way of looking at the lists currently in the task list.","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"danielleloh"},"content":"    public String listTasks(TaskList taskList) {","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"danielleloh"},"content":"        int numOfTasks \u003d taskList.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"danielleloh"},"content":"        int index \u003d 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"danielleloh"},"content":"        String tasks \u003d \"\";","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"danielleloh"},"content":"        while (numOfTasks !\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"danielleloh"},"content":"            tasks +\u003d (index + \". \" + taskList.get(index - 1).toString() + \"\\n\");","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"danielleloh"},"content":"            numOfTasks--;","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"danielleloh"},"content":"            index++;","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"danielleloh"},"content":"        return (\"Here are the tasks in your list:\\n\" + tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"danielleloh"},"content":"     * Prints message if index input by user is out of bounds.","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"danielleloh"},"content":"     * @param taskList List containing the tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"danielleloh"},"content":"     * @return Error message to inform user of the invalid index input.","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"danielleloh"},"content":"    public String printInvalidIndexMessage(TaskList taskList) {","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"danielleloh"},"content":"        int numOfTasks \u003d taskList.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"danielleloh"},"content":"        return (\"Please check that you\u0027ve input a valid index!\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"danielleloh"},"content":"                + \"You currently only have \" + numOfTasks + \" task(s) in your list.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"danielleloh"},"content":"     * Prints message when task is deleted from the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"danielleloh"},"content":"     * @param taskDeleted String of the task deleted from the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"danielleloh"},"content":"     * @param taskList task list that contains the tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"danielleloh"},"content":"     * @return Message to inform user of a task being deleted.","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"danielleloh"},"content":"    public String printTaskDeletionMessage(String taskDeleted, TaskList taskList) {","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"danielleloh"},"content":"        return (\"I\u0027ve removed this task from your list:\\n\" + taskDeleted + \"\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"danielleloh"},"content":"                + \"Now you have \" + taskList.size() + \" task(s) in the list.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"danielleloh"},"content":"     * Print message after marking task instruction is called","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"danielleloh"},"content":"     * @param index Index of task to mark","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"danielleloh"},"content":"     * @param taskList List containing the tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"danielleloh"},"content":"     * @return Message to inform user that a task has been marked as completed.","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"danielleloh"},"content":"    public String printMarkCompletedMessage(int index, TaskList taskList) {","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"danielleloh"},"content":"        int numOfTasks \u003d taskList.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"danielleloh"},"content":"        if (index \u003c\u003d numOfTasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"danielleloh"},"content":"            return (\"Nice! I\u0027ve marked task number \" + index + \" as done: \\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"danielleloh"},"content":"                    + taskList.get(index - 1).toString());","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"danielleloh"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"danielleloh"},"content":"            // if task index does not exist","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"danielleloh"},"content":"            return (\"Uh oh! looks like that task does not exist in your list.\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"danielleloh"},"content":"                    + \"You currently only have \" + numOfTasks + \" task(s) in your list.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":108,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"danielleloh"},"content":"     * Prints message after \"unmark\" task instruction is called.","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"danielleloh"},"content":"     * @param index Index of task to unmark","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"danielleloh"},"content":"     * @param taskList List containing the tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"danielleloh"},"content":"     * @return Message to inform user that a task has been marked as incompleted.","lastModifiedDate":"2024-02-12"},{"lineNumber":117,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"danielleloh"},"content":"    public String printMarkIncompleteMessage(int index, TaskList taskList) {","lastModifiedDate":"2024-02-12"},{"lineNumber":119,"author":{"gitId":"danielleloh"},"content":"        int numOfTasks \u003d taskList.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"danielleloh"},"content":"        if (index \u003c\u003d numOfTasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"danielleloh"},"content":"            return (\"Okay! I\u0027ve marked task number \" + index + \" as incomplete: \\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":122,"author":{"gitId":"danielleloh"},"content":"                    + taskList.get(index - 1).toString());","lastModifiedDate":"2024-02-12"},{"lineNumber":123,"author":{"gitId":"danielleloh"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"danielleloh"},"content":"            // message if task index does not exist","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"danielleloh"},"content":"            return (\"Uh oh! looks like that task does not exist in your list.\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":126,"author":{"gitId":"danielleloh"},"content":"                    + \"You currently only have \" + numOfTasks + \" task(s) in your list.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":127,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"danielleloh"},"content":"     * Prints message if there is missing information from user input when adding tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":133,"author":{"gitId":"danielleloh"},"content":"     * @return Error message to inform user that there is missing information in their input.","lastModifiedDate":"2024-02-12"},{"lineNumber":134,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"danielleloh"},"content":"    public String printTaskMissingInformationMessage() {","lastModifiedDate":"2024-02-12"},{"lineNumber":136,"author":{"gitId":"danielleloh"},"content":"        return (\"Uh oh! Looks like there\u0027s missing information in your instructions!\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":137,"author":{"gitId":"danielleloh"},"content":"                + \"Ensure your tasks are formatted as follows: \\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":138,"author":{"gitId":"danielleloh"},"content":"                + \"- type \\\"todo [task]\\\" to insert to-do task into your list\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":139,"author":{"gitId":"danielleloh"},"content":"                + \"- type \\\"deadline [task] /by [date/time]\\\" to insert task into your list \"","lastModifiedDate":"2024-02-07"},{"lineNumber":140,"author":{"gitId":"danielleloh"},"content":"                + \"with [date/time] in the format dd/MM/yyyy HHmm\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":141,"author":{"gitId":"danielleloh"},"content":"                + \"- type \\\"event [task] /from [start date/time] to [end date/time]\\\" \"","lastModifiedDate":"2024-02-07"},{"lineNumber":142,"author":{"gitId":"danielleloh"},"content":"                + \"to insert task into your list with a start and end date/time in format dd/MM/yyyy HHmm\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":143,"author":{"gitId":"danielleloh"},"content":"                + \"Please try again :)\");","lastModifiedDate":"2024-02-12"},{"lineNumber":144,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":147,"author":{"gitId":"danielleloh"},"content":"     * Prints message if date/time String format is wrong.","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":149,"author":{"gitId":"danielleloh"},"content":"     * @return Error message to warn users of incorrect formatting of date/time.","lastModifiedDate":"2024-02-12"},{"lineNumber":150,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"danielleloh"},"content":"    public String printWrongDateTimeFormatMessage() {","lastModifiedDate":"2024-02-12"},{"lineNumber":152,"author":{"gitId":"danielleloh"},"content":"        return (\"Uh oh! Looks like your date/time format is wrong!:\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":153,"author":{"gitId":"danielleloh"},"content":"                + \"Try formatting your date/time as dd/MM/yyyy HHmm.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":154,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":155,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":157,"author":{"gitId":"danielleloh"},"content":"     * Prints message if file is not found","lastModifiedDate":"2024-02-12"},{"lineNumber":158,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":159,"author":{"gitId":"danielleloh"},"content":"     * @return Error message if the file in the given file path is not found.","lastModifiedDate":"2024-02-12"},{"lineNumber":160,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":161,"author":{"gitId":"danielleloh"},"content":"    public String printFileNotFoundMessage() {","lastModifiedDate":"2024-02-12"},{"lineNumber":162,"author":{"gitId":"danielleloh"},"content":"        return (\"File not found to save task update. \");","lastModifiedDate":"2024-02-12"},{"lineNumber":163,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":164,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":165,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":166,"author":{"gitId":"danielleloh"},"content":"     * Prints message after task has been successfully added into task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":167,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":168,"author":{"gitId":"danielleloh"},"content":"     * @param taskList List containing the tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":169,"author":{"gitId":"danielleloh"},"content":"     * @return Message to confirm that a task has been added to the task list.","lastModifiedDate":"2024-02-12"},{"lineNumber":170,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":171,"author":{"gitId":"danielleloh"},"content":"    public String confirmTaskAddition(TaskList taskList) {","lastModifiedDate":"2024-02-12"},{"lineNumber":172,"author":{"gitId":"danielleloh"},"content":"        return (\"I\u0027ve added this task to your list:\\n\" + taskList.get(taskList.size() - 1).toString() + \"\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":173,"author":{"gitId":"danielleloh"},"content":"                + \"Now you have \" + taskList.size() + \" task(s) in the list.\");","lastModifiedDate":"2024-02-12"},{"lineNumber":174,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":175,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":176,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":177,"author":{"gitId":"danielleloh"},"content":"     * Prints error message if start of event in input is later than the end of the event given.","lastModifiedDate":"2024-02-19"},{"lineNumber":178,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":179,"author":{"gitId":"danielleloh"},"content":"     * @return Error message.","lastModifiedDate":"2024-02-19"},{"lineNumber":180,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":181,"author":{"gitId":"danielleloh"},"content":"    public String printEventStartAfterEnd() {","lastModifiedDate":"2024-02-18"},{"lineNumber":182,"author":{"gitId":"danielleloh"},"content":"        return \"Uh oh! Looks like your event started after it ended!\\n\"","lastModifiedDate":"2024-02-18"},{"lineNumber":183,"author":{"gitId":"danielleloh"},"content":"                + \"Please double check that your dates and time again and re-enter your event!\";","lastModifiedDate":"2024-02-18"},{"lineNumber":184,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":185,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":186,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":187,"author":{"gitId":"danielleloh"},"content":"     * List tasks in task list that contain the keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":188,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":189,"author":{"gitId":"danielleloh"},"content":"     * @param keyword Keyword that task should contain.","lastModifiedDate":"2024-02-03"},{"lineNumber":190,"author":{"gitId":"danielleloh"},"content":"     * @param taskList Task list that contains tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":191,"author":{"gitId":"danielleloh"},"content":"     * @return List of tasks that contain the keyword specified by the user in the input.","lastModifiedDate":"2024-02-12"},{"lineNumber":192,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":193,"author":{"gitId":"danielleloh"},"content":"    public String printTasksWithKeyword(String keyword, TaskList taskList) {","lastModifiedDate":"2024-02-12"},{"lineNumber":194,"author":{"gitId":"danielleloh"},"content":"        int numOfTasks \u003d taskList.size();","lastModifiedDate":"2024-02-03"},{"lineNumber":195,"author":{"gitId":"danielleloh"},"content":"        int taskNumber \u003d 0;","lastModifiedDate":"2024-02-03"},{"lineNumber":196,"author":{"gitId":"danielleloh"},"content":"        int index \u003d 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":197,"author":{"gitId":"danielleloh"},"content":"        String tasks \u003d \"\";","lastModifiedDate":"2024-02-12"},{"lineNumber":198,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":199,"author":{"gitId":"danielleloh"},"content":"        while (taskNumber \u003c numOfTasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":200,"author":{"gitId":"danielleloh"},"content":"            if (taskList.get(taskNumber).getDescription().contains(keyword)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":201,"author":{"gitId":"danielleloh"},"content":"                tasks +\u003d (index + \". \" + taskList.get(taskNumber).toString() + \"\\n\");","lastModifiedDate":"2024-02-12"},{"lineNumber":202,"author":{"gitId":"danielleloh"},"content":"                index++;","lastModifiedDate":"2024-02-03"},{"lineNumber":203,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":204,"author":{"gitId":"danielleloh"},"content":"            taskNumber++;","lastModifiedDate":"2024-02-03"},{"lineNumber":205,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":206,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":207,"author":{"gitId":"danielleloh"},"content":"        return (\"Here are the matching tasks in your list:\\n\" + tasks);","lastModifiedDate":"2024-02-12"},{"lineNumber":208,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":209,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":210,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":211,"author":{"gitId":"danielleloh"},"content":"     * Prints error message if there is no keyword included in the find command.","lastModifiedDate":"2024-02-03"},{"lineNumber":212,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":213,"author":{"gitId":"danielleloh"},"content":"     * @return Error message to warn users that a keyword is missing in their input.","lastModifiedDate":"2024-02-12"},{"lineNumber":214,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":215,"author":{"gitId":"danielleloh"},"content":"    public String printMissingKeywordMessage() {","lastModifiedDate":"2024-02-12"},{"lineNumber":216,"author":{"gitId":"danielleloh"},"content":"        return (\"Please include a keyword so Scribbles can search for the tasks you are looking for!\\n\" +","lastModifiedDate":"2024-02-12"},{"lineNumber":217,"author":{"gitId":"danielleloh"},"content":"                \"i.e. find [keyword]\");","lastModifiedDate":"2024-02-12"},{"lineNumber":218,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":219,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":220,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":221,"author":{"gitId":"danielleloh"},"content":"     * Prints message to inform user that sorting task is completed.","lastModifiedDate":"2024-02-16"},{"lineNumber":222,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":223,"author":{"gitId":"danielleloh"},"content":"     * @return Message inform user that sorting task is completed.","lastModifiedDate":"2024-02-16"},{"lineNumber":224,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":225,"author":{"gitId":"danielleloh"},"content":"    public String printTasksSortedMessage() {","lastModifiedDate":"2024-02-16"},{"lineNumber":226,"author":{"gitId":"danielleloh"},"content":"        return (\"Scribbles has sorted your tasks! :)\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":227,"author":{"gitId":"danielleloh"},"content":"                + \"type \\\"list\\\" to view your sorted task list.\");","lastModifiedDate":"2024-02-16"},{"lineNumber":228,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":229,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":230,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":231,"author":{"gitId":"danielleloh"},"content":"     * Prints message if order to sort tasks in in the command is not an available order or not found.","lastModifiedDate":"2024-02-16"},{"lineNumber":232,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":233,"author":{"gitId":"danielleloh"},"content":"     * @return Error message.","lastModifiedDate":"2024-02-16"},{"lineNumber":234,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":235,"author":{"gitId":"danielleloh"},"content":"    public String printOrderNotFoundMessage() {","lastModifiedDate":"2024-02-16"},{"lineNumber":236,"author":{"gitId":"danielleloh"},"content":"        return (\"Sorry, unfortunately Scribbles only allows the following to be ordered:\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":237,"author":{"gitId":"danielleloh"},"content":"                + \"- date: orders task by their dates\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":238,"author":{"gitId":"danielleloh"},"content":"                + \"- description: orders tasks alphabetically\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":239,"author":{"gitId":"danielleloh"},"content":"                + \"- completed first: orders tasks by completed first\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":240,"author":{"gitId":"danielleloh"},"content":"                + \"- incompleted first: orders tasks by incompleted first\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":241,"author":{"gitId":"danielleloh"},"content":"                + \"- type: orders task by to-dos -\u003e deadlines -\u003e events\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":242,"author":{"gitId":"danielleloh"},"content":"                + \"Try \\\"sortBy [order]\\\" again! \");","lastModifiedDate":"2024-02-16"},{"lineNumber":243,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":244,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":245,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":246,"author":{"gitId":"danielleloh"},"content":"     * Prints the exiting message of the chatbot.","lastModifiedDate":"2024-02-01"},{"lineNumber":247,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":248,"author":{"gitId":"danielleloh"},"content":"     * @return Message when user says bye","lastModifiedDate":"2024-02-12"},{"lineNumber":249,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":250,"author":{"gitId":"danielleloh"},"content":"    public String printExitMessage() {","lastModifiedDate":"2024-02-12"},{"lineNumber":251,"author":{"gitId":"danielleloh"},"content":"        return (\"Bye! Hope to see you again soon :)\");","lastModifiedDate":"2024-02-12"},{"lineNumber":252,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":253,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":254,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"danielleloh":254}},{"path":"src/main/resources/view/DialogBoxScribbles.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"\u003cfx:root alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"            \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"88.0\" fitWidth\u003d\"88.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"              \u003cLabel fx:id\u003d\"nameLabel\" text\u003d\"Scribbles\" textFill\u003d\"#d15d32\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"               \u003cfont\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"                  \u003cFont name\u003d\"Tahoma Bold\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"               \u003c/font\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"            \u003cHBox style\u003d\"-fx-background-color: #ffffff; -fx-border-color: #ffe1b7; -fx-background-radius: 10px; -fx-border-radius: 10px;\"\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"                      \u003cLabel fx:id\u003d\"dialog\" lineSpacing\u003d\"0.5\" minHeight\u003d\"-Infinity\" text\u003d\"Dialog\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"                     \u003cfont\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"                        \u003cFont name\u003d\"Tahoma\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"                     \u003c/font\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"                     \u003copaqueInsets\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"                        \u003cInsets /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"                     \u003c/opaqueInsets\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"               \u003c/children\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"               \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"danielleloh":47}},{"path":"src/main/resources/view/DialogBoxUser.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"126.0\" prefWidth\u003d\"450.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"            \u003cVBox alignment\u003d\"TOP_RIGHT\"\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"                \u003cLabel fx:id\u003d\"nameLabel\" text\u003d\"You\" textAlignment\u003d\"RIGHT\" textFill\u003d\"#631886\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"                    \u003cfont\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"                        \u003cFont name\u003d\"Tahoma Bold\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"                    \u003c/font\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"            \u003cHBox alignment\u003d\"TOP_RIGHT\" style\u003d\"-fx-background-color: #9f8fc5; -fx-background-radius: 10px;\"\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"                          \u003cLabel fx:id\u003d\"dialog\" lineSpacing\u003d\"0.5\" minHeight\u003d\"-Infinity\" text\u003d\"Dialog\" textAlignment\u003d\"RIGHT\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"                          \u003cfont\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"                              \u003cFont name\u003d\"Tahoma\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"                          \u003c/font\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"               \u003c/children\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"               \u003cInsets right\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"         \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"88.0\" fitWidth\u003d\"88.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"danielleloh":47}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\" prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"scribbles.gui.MainWindow\"\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"400.0\" promptText\u003d\"type \u0027help\u0027 or input commands.\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"            \u003cFont name\u003d\"Tahoma\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" contentDisplay\u003d\"CENTER\" layoutX\u003d\"400.0\" layoutY\u003d\"658.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"100.0\" style\u003d\"-fx-background-color: #FFFFFF;\" text\u003d\"➤\"\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"            \u003cFont name\u003d\"Arial\" size\u003d\"20.0\" /\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"658.0\" prefWidth\u003d\"500.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"659.0\" prefWidth\u003d\"484.0\" style\u003d\"-fx-background-color: #FFFFFF;\"\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"               \u003c/padding\u003e\u003c/VBox\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"danielleloh":30}},{"path":"src/test/java/scribbles/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package scribbles.parser;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"    public void isMissingDeadlineInformationTest() {","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"        // test case 1","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"        Parser p1 \u003d new Parser(\"deadline homework1 01/01/2024 2359\");","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"        assertEquals(true, p1.isMissingDeadlineInformation());","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"        // test case 2","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"        Parser p2 \u003d new Parser(\"deadline /by 01/01/2024 2359\");","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"                    p2.isMissingDeadlineInformation();","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"                });","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"        // test case 3","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"        Parser p3 \u003d new Parser(\"deadline homework3 /by \");","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"        assertEquals(true, p3.isMissingDeadlineInformation());","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"        // test case 4","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"        Parser p4 \u003d new Parser(\"deadline homework4 /by 01/01/2024 2359\");","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"        assertEquals(false, p4.isMissingDeadlineInformation());","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"    public void isInvalidEventTest() {","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"        // test case 1: missing /from and /to and other information","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"        Parser p1 \u003d new Parser(\"event event1\");","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"        assertEquals(true, p1.isInvalidEvent());","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"        // test case 2: missing /from","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"        Parser p2 \u003d new Parser(\"event event2 01/01/2024 1230 /to 01/01/2024 1300\");","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"        assertEquals(true, p2.isInvalidEvent());","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"        // test case 3: missing /to","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"        Parser p3 \u003d new Parser(\"event event3 /from 01/01/2024 1230 01/01/2024 1300\");","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"        assertEquals(true, p3.isInvalidEvent());","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"        // test case 5: missing end date/time","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"        Parser p5 \u003d new Parser(\"event event3 /from 01/01/2024 2359 /to \");","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"danielleloh"},"content":"        assertEquals(true, p5.isInvalidEvent());","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"danielleloh"},"content":"        // test case 6: correct information given","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"danielleloh"},"content":"        Parser p6 \u003d new Parser(\"event event3 /from 01/01/2024 2359 /to  01/01/2024 2359\");","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"danielleloh"},"content":"        assertEquals(false, p6.isInvalidEvent());","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"danielleloh"},"content":"        // test case 7: /to before /from","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"danielleloh"},"content":"        Parser p7 \u003d new Parser(\"event event3 /to 01/01/2024 2023 /from 12/12/2024 2359\");","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"danielleloh"},"content":"        assertEquals(true, p7.isInvalidEvent());","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"danielleloh":59}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"mark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"mark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"mark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"unmark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"unmark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"unmark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"danielleloh":14}}]
