{"authorDailyContributionsMap":{"yyccbb":[{"date":"2024-02-01","commitResults":[{"hash":"57f578c9ba9b529d3aacf03f2fdc0aaf6fc96f32","isMergeCommit":false,"messageTitle":"Rename to Nihao. Create App and PrintHandler classes.","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":10},"bat":{"insertions":1,"deletions":1},"md":{"insertions":2,"deletions":2}}},{"hash":"35557ddf0af25ad86bc7c3d75bf6dd94d607aa7a","isMergeCommit":false,"messageTitle":"Add echo functionality. Change personality.","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":3}}},{"hash":"99d83a55a7e90ca18268406001a0f561dec64b83","isMergeCommit":false,"messageTitle":"Add DataHandler class. Add temporary storage functionality.","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":9}}},{"hash":"7c6e3e5a5243f79b5167f4aaa4481f81181fc174","isMergeCommit":false,"messageTitle":"Create action, exception and handler packages. Refactor action firing logic.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":121,"deletions":6}}},{"hash":"c9a8cd5be37be9e1fada6cb44967dbdc28fc1620","isMergeCommit":false,"messageTitle":"Add error handling. Add printed message for mark, unmark and list Actions.","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":65,"deletions":14}}},{"hash":"61523256ad807ad667ded3cc45fcf7096a27732c","isMergeCommit":false,"messageTitle":"Add support for todo deadline and event. Refactor TaskAction.","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":149,"deletions":21}}}]},{"date":"2024-02-02","commitResults":[{"hash":"135582a508ba4017a9d1eedd814677a3c7d12e5f","isMergeCommit":false,"messageTitle":"Configure batch automated text UI testing","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":0},"bat":{"insertions":1,"deletions":1}}}]},{"date":"2024-02-05","commitResults":[{"hash":"fddb6747875cd4bff7487f735abbc16e21d3a04e","isMergeCommit":false,"messageTitle":"Create 3 exception classes. Update test input.","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":69,"deletions":48}}},{"hash":"bc9aa9dccde3d3576d2191064d93ad6a5bdd3957","isMergeCommit":false,"messageTitle":"Add delete task functionality. Update test cases accordingly.","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":68,"deletions":28}}},{"hash":"5b6f5feec53df50584d7ab9bc0080bb73a02eb39","isMergeCommit":false,"messageTitle":"Use enums for commands","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":80,"deletions":59}}}]},{"date":"2024-02-07","commitResults":[{"hash":"4a481c09d16f54e560474936dee7c3df858304a0","isMergeCommit":false,"messageTitle":"DataHandler class: support local data persistence","messageBody":"DataHandler class does not support local data persistence. The list of\ntasks created gets wiped away after one Nihao instance is closed.\n\nAdding support for local data persistence allows users to save the tasks\nso that they still can access them after closing the app.\n\nLet\u0027s use JSON serialization and deserialisation functionalities to load\nand save the list of tasks to a local JSON file.\n\nJSON is used because it is possibly easier for integration with\ndatabases.\n","fileTypesAndContributionMap":{"java":{"insertions":226,"deletions":47}}},{"hash":"c90a86edf0fdb287eb1817ee12ff436fd8e73329","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-7\u0027","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"ddb681a424b1f5820465fd3bf24682718ab547be","isMergeCommit":false,"messageTitle":"InputHandler class: remove own instance","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":7}}},{"hash":"5939c6d39d518eedfd2eb9ae2d7019bb6dbb36b7","isMergeCommit":false,"messageTitle":"Task classes: store timestamps with LocalDateTime","messageBody":"Task classes store timestamps as String.\n\nStoring timestamps as LocalDateTime objects is preferred for formatting\npurposes and to prevent users from writing irrelevant strings as\ntimestamps.\n\nLet\u0027s,\n* create DateTimeHandler singleton class to handle conversion between\n  String and LocalDateTime ojbects\n* create IncorrectDateTimeFormatException class which produces\n  exceptions to be thrown when a String that does not follow a given\n  format attempts to get converted\n* update Task classes to store LocalDateTime objects instead of Strings\n* update Task classes\u0027 toString() methods to follow the specified format\n* update TaskTypeAdapter to support LocalDateTime objects\n","fileTypesAndContributionMap":{"java":{"insertions":64,"deletions":28}}},{"hash":"c459d0fd5372ddfd929016b6a216599341ba5e9b","isMergeCommit":false,"messageTitle":"DeleteAction: support delete all","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":2},"java":{"insertions":24,"deletions":7}}},{"hash":"ebff38e68467ab58a3a36fc7f625d7ad91a77647","isMergeCommit":false,"messageTitle":"Update textUI test","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":2}}},{"hash":"779fe60d73172cc047581bd4f0b595dfffde27b4","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-8\u0027","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{}},{"hash":"11e4de31564831a554db67b60c79956191cd951a","isMergeCommit":false,"messageTitle":"Create ExitAction class to handle \"bye\" command","messageBody":"\"bye\" command is handled directly by Nihao class.\n\nThis does not conform to the rest of the codebase where commands are\nhandled by InputHandler.\n\nLet\u0027s create an ExitAction class to handle \"bye\" command.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":58,"deletions":27}}},{"hash":"59c31426d5998704b406262207439704fab8a4ff","isMergeCommit":false,"messageTitle":"Create package nihao to host all packages and classes","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":79,"deletions":78},"md":{"insertions":4,"deletions":4}}},{"hash":"908cbb6b2b49ac7041550874da0187803bde8d0e","isMergeCommit":true,"messageTitle":"Merge branch \u0027add-gradle-support\u0027","messageBody":"# Conflicts:\n#\tdocs/README.md\n","fileTypesAndContributionMap":{}},{"hash":"54a3554323558de0aab0afc53f98bd0d70d5157c","isMergeCommit":false,"messageTitle":"Configure build.gradle","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":3,"deletions":1}}},{"hash":"eb9aaaf146e6e29557977fc74eece72ea9a58403","isMergeCommit":false,"messageTitle":"Configure codebase to use Gradle","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}}]},{"date":"2024-02-09","commitResults":[{"hash":"322da801c445485897237ced57b69d8bd6b3fccb","isMergeCommit":false,"messageTitle":"Action and Task classes: add .equals()","messageBody":"Action and Task classes do not have custom equals() methods.\n\nThe equals() method is needed for assertEquals() to assert equality\nbetween action and task objects based on the needs of this application.\n\nLet\u0027s create equals() methods for all Action and Task classes and create\nInputHandlerTest class to test for InputHandler class.\n","fileTypesAndContributionMap":{"gradle":{"insertions":4,"deletions":0},"java":{"insertions":163,"deletions":16}}},{"hash":"35a02de135d4b567fca8bc4d6da0675e2f6f9ce9","isMergeCommit":false,"messageTitle":"Create DataHandlerTest class","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":80,"deletions":14}}}]},{"date":"2024-02-10","commitResults":[{"hash":"db26f7179ac643c859a54e5a06740a1900f174c9","isMergeCommit":false,"messageTitle":"DataHandler: create data directory when absent","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":10,"deletions":5}}}]},{"date":"2024-02-12","commitResults":[{"hash":"fab4bd3193259fece24e408734a7b17f5073a67a","isMergeCommit":false,"messageTitle":"Add JavaDoc comments for most classes and methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":296,"deletions":7}}},{"hash":"645708b80d98438b2f86ddd58cd52e5ccb958ded","isMergeCommit":false,"messageTitle":"Change some constants to variables","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"5f6575b060b2bf2f09c07dba919e2e2dfda5849d","isMergeCommit":false,"messageTitle":"TaskTypeAdapter: add class description","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"f7dceaccb9521aaea7d19578670961d1a6b63420","isMergeCommit":false,"messageTitle":"Add find task by keyword functionality","messageBody":"\u0027find\u0027 command is not supported.\n\nIt allows users to quickly search the list of tasks by a keyword.\n\nLet\u0027s,\n* create FindAction class to encapsulate this action\n* update Command enum to include \u0027find\u0027 command\n* update InputHandler to support \u0027find\u0027\n* update DataHandler to support this action\n* update Task to add a method to return a boolean representing whether\n  a substring is present in the task name or not\n","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":52,"deletions":6}}},{"hash":"44457f724167b6b8b7d4e30bdf1d3bafb8826c87","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"29eb1ba234ee4f0299fb087307263f03ba65fee1","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"3ee1a457391db9cdbb7019d1d823ad24a1c538cb","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-9\u0027","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2024-02-15","commitResults":[{"hash":"ea389a42a17b5eb0543dcfa10b014f2570bf2c7e","isMergeCommit":false,"messageTitle":"Update README.md","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0},"md":{"insertions":26,"deletions":20}}}]},{"date":"2024-02-18","commitResults":[{"hash":"8611f2354fa9cd4262702c7fda67748b084c3763","isMergeCommit":false,"messageTitle":"Fix coding style","messageBody":"","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":1},"java":{"insertions":138,"deletions":127},"md":{"insertions":7,"deletions":7}}}]},{"date":"2024-02-19","commitResults":[{"hash":"8917b053267023b9373aca0b3dd2c7139e6ebb3c","isMergeCommit":false,"messageTitle":"Create GUI","messageBody":"Nihao does not have a GUI.\n\nA GUI is more user-friendly.\n\nLet\u0027s\n* use JavaFX to create a GUI\n* add start() method to Nihao as an entry point\n* create DialogueBox class to generate reusable dialogue boxes\n* update PrintHandler methods so that they return the content to be\n  printed as String as well\n* update Task.execute() so that they return the content to be printed as\n  String, which is then packed up as dialogue boxes\n","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0},"java":{"insertions":184,"deletions":34}}},{"hash":"6c0fdfad3446fe1addaa6af69cc573ad73ba5174","isMergeCommit":false,"messageTitle":"Update GUI to use fxml","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":66,"deletions":0},"java":{"insertions":160,"deletions":124}}}]},{"date":"2024-02-23","commitResults":[{"hash":"1487cee4e99b470337fe07248db5b36fc1e304fa","isMergeCommit":false,"messageTitle":"Change GUI theme to Cupertino-dark","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":8,"deletions":3},"java":{"insertions":17,"deletions":14}}},{"hash":"5beeef64240941309d502066cc41c5d5cf98c0d9","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-10\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"6ef0d3d95cdefa8e843a729c0634109d254a3892","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CheckStyle\u0027","messageBody":"","tags":["Level-10","A-Streams"],"fileTypesAndContributionMap":{}}]},{"date":"2024-02-26","commitResults":[{"hash":"501c56a7f1b79c5b3be6177cc65ad2af71deae58","isMergeCommit":false,"messageTitle":"Use assertions in the code","messageBody":"Assertions are not used anywhere in the codebase.\n\nThey can be helpful in verifying the state of the program at strategic\npoints.\n\nLet\u0027s,\n* use assertions in the execute() methods of action classes to confirm\n  that key fields have legal values when execute() is invocated\n* use assertions in the getResponse() method of Nihao to confirm that\n  the text input is not null\n","tags":["A-FullCommitMessage","A-Assertions"],"fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"ee11d185cdb67c8287f021cb4fcfae2610666549","isMergeCommit":false,"messageTitle":"DataHandler: refactor read() method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":7}}},{"hash":"aa4249a1e56d7c6f4a9eea0f43ec7994922d0918","isMergeCommit":false,"messageTitle":"DataHandler: improve code quality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":12}}},{"hash":"68176da48fad624c2c032011192f2a489288b6ec","isMergeCommit":false,"messageTitle":"PrintHandler: improve code quality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":47}}},{"hash":"31189d662ba7ffee3576e093b12189c7e0c728c8","isMergeCommit":false,"messageTitle":"Fix CheckStyle","messageBody":"","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":24}}},{"hash":"a9db28ccd63cc647595b8f35b835d291292d1922","isMergeCommit":true,"messageTitle":"Merge pull request #2 from yyccbb/branch-A-CodeQuality","messageBody":"Merge CodeQuality with master","fileTypesAndContributionMap":{}},{"hash":"c7b55bd2d9961585e1d6c66e495ad4f720db48cb","isMergeCommit":false,"messageTitle":"Revert \"Merge CodeQuality with master\"","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":74,"deletions":100}}},{"hash":"d8a6f5d7064f39f951f3e735d1366333dae61633","isMergeCommit":true,"messageTitle":"Merge pull request #3 from yyccbb/revert-2-branch-A-CodeQuality","messageBody":"Revert \"Merge CodeQuality with master\"","fileTypesAndContributionMap":{}},{"hash":"8a27e48e717cc93534351e5ea40065860f5ed206","isMergeCommit":true,"messageTitle":"Merge pull request #4 from yyccbb/branch-A-Assertions","messageBody":"Merge Assertions with master","fileTypesAndContributionMap":{}},{"hash":"06b78020e6dcb10197601d7fdb001904d49c8ae7","isMergeCommit":false,"messageTitle":"DataHandler: update method header comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"4e686da97027634350033c29a92dbf472bf80d9b","isMergeCommit":true,"messageTitle":"Merge pull request #5 from yyccbb/branch-A-CodeQuality","messageBody":"Merge CodeQuality with master","fileTypesAndContributionMap":{}},{"hash":"b63cedc84e637a4c779c7ddc8e56ae05dede5d68","isMergeCommit":false,"messageTitle":"DataHandler: refactor read() method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":7}}},{"hash":"5c6480fbff0b9152e407e0b1fc34de801eed74ff","isMergeCommit":false,"messageTitle":"DataHandler: improve code quality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":12}}},{"hash":"a64fa2f43a450952edb972528c17d3b8d7955b91","isMergeCommit":false,"messageTitle":"PrintHandler: improve code quality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":47}}},{"hash":"3566f23e58fd1c496d6c060121caa77772cf4d00","isMergeCommit":false,"messageTitle":"Fix CheckStyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":24}}},{"hash":"4fdba1fc357eff63e92868a5e9fa56584666db1d","isMergeCommit":true,"messageTitle":"Merge pull request #7 from yyccbb/new-branch-A-CodeQuality","messageBody":"Merge CodeQuality with master","fileTypesAndContributionMap":{}},{"hash":"a060f2b99ca63d8b864c43c2fb468277d0322e90","isMergeCommit":false,"messageTitle":"Add short aliases for all commands","messageBody":"","tags":["BCD-Extension"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":6}}}]},{"date":"2024-02-28","commitResults":[{"hash":"e66c08c92b830357440c6d06f664311007af5f6f","isMergeCommit":false,"messageTitle":"DialogueBox: fix text area width","messageBody":"","tags":["A-Personality","A-MoreErrorHandling","A-BetterGui"],"fileTypesAndContributionMap":{"fxml":{"insertions":3,"deletions":4}}},{"hash":"568709ca0dea869768534936e026fc025b3adcc4","isMergeCommit":false,"messageTitle":"UI: add greeting message","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":5,"deletions":2}}},{"hash":"afd5f3a69f3af6177a2f19f4beb7678568059a62","isMergeCommit":false,"messageTitle":"Update the user guide","messageBody":"","tags":["A-UserGuide","A-Release"],"fileTypesAndContributionMap":{"md":{"insertions":99,"deletions":29}}},{"hash":"66593fe162ac6e249af4a8ab6fa78a23cf27962d","isMergeCommit":false,"messageTitle":"Update Gradle build configuration","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2}}}]},{"date":"2024-03-20","commitResults":[{"hash":"6ab4f34ccd7fca41f8331b997a6c210cb3bf9bda","isMergeCommit":false,"messageTitle":"Fix a mistake in the user guide","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":2}}}]}]},"authorFileTypeContributionMap":{"yyccbb":{"java":1544,"md":116,"fxml":70,"sh":0,"bat":1,"gradle":27,"txt":15}},"authorContributionVariance":{"yyccbb":26629.598},"authorDisplayNameMap":{"yyccbb":"CS2103T-T11-4 YU C..ENBO"}}
