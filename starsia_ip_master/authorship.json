[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"starsia"},"content":"# duke.duke project template","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"starsia"},"content":"3. After that, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"starsia":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"starsia"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"starsia":1,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"starsia"},"content":"# duke User Guide","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"}],"authorContributionMap":{"starsia":1,"-":29}},{"path":"src/main/java/seedu/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"starsia"},"content":"package seedu.duke;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"starsia"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"starsia"},"content":" * Represents \u003ccode\u003eEnum\u003c/code\u003e values corresponding to","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"starsia"},"content":" * potential commands from user input e.g., \u003ccode\u003elist\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"starsia"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"starsia"},"content":"public enum Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"starsia"},"content":"    // found enums to be unnecessary using while loop and if-else loop","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"starsia"},"content":"    LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, BYE","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"starsia"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"starsia":10}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"starsia"},"content":"package seedu.duke;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"starsia"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"starsia"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"starsia"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"starsia"},"content":" * Represents a task manager called \u003ccode\u003eDuke\u003c/code\u003e.","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"starsia"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"starsia"},"content":"public class Duke {","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"starsia"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"starsia"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"starsia"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"starsia"},"content":"     * Constructor for the Duke class.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"starsia"},"content":"     * @param filePath","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"starsia"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"starsia"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"starsia"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"starsia"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"starsia"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"starsia"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"starsia"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"starsia"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"starsia"},"content":"     * Contains logic from greeting to farewell to user.","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"starsia"},"content":"     * It will scan for input and parse only when given valid commands.","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"starsia"},"content":"     * These commands will then fed back to the user within the UI.","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"starsia"},"content":"     * eg. \u003ccode\u003elist, mark, unmark, deadline, todo, event\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"starsia"},"content":"    public void run() {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"starsia"},"content":"        ui.openingMessage();","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"starsia"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"starsia"},"content":"        String word \u003d sc.nextLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"starsia"},"content":"        while (!word.equals(\"bye\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"starsia"},"content":"            // command dependent logic","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"starsia"},"content":"            if (word.equals(\"list\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"starsia"},"content":"                ui.printList(tasks.getList());","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"starsia"},"content":"                word \u003d sc.nextLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"starsia"},"content":"            } else if (word.startsWith(\"mark\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"starsia"},"content":"                Parser.parseMark(word, tasks, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"starsia"},"content":"                word \u003d sc.nextLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"starsia"},"content":"            } else if (word.startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"starsia"},"content":"                Parser.parseUnmark(word, tasks, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"starsia"},"content":"                word \u003d sc.nextLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"starsia"},"content":"            } else if (word.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"starsia"},"content":"                Parser.parseDeadline(word, tasks, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"starsia"},"content":"                word \u003d sc.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"starsia"},"content":"            } else if (word.startsWith(\"todo\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"starsia"},"content":"                Parser.parseTodo(word, tasks, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"starsia"},"content":"                word \u003d sc.nextLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"starsia"},"content":"            } else if (word.startsWith(\"event\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"starsia"},"content":"                Parser.parseEvent(word, tasks, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"starsia"},"content":"                word \u003d sc.nextLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"starsia"},"content":"            } else if (word.startsWith(\"delete\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"starsia"},"content":"                Parser.parseDelete(word, tasks, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"starsia"},"content":"                word \u003d sc.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"starsia"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"starsia"},"content":"                try {","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"starsia"},"content":"                    throw new DukeException(\"Sorry, I didn\u0027t understand that.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"starsia"},"content":"                } catch (DukeException d) {","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"starsia"},"content":"                    ui.printError(d);","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"starsia"},"content":"                    word \u003d sc.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"starsia"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"starsia"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"starsia"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"starsia"},"content":"        storage.saveList(tasks.getList());","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"starsia"},"content":"        ui.closingMessage();","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"starsia"},"content":"     * Main method in Duke.","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"starsia"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":80,"author":{"gitId":"starsia"},"content":"     * @param args","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"starsia"},"content":"     * @throws IOException","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"starsia"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"starsia"},"content":"        // relative storage path for save and load feature","lastModifiedDate":"2024-02-09"},{"lineNumber":85,"author":{"gitId":"starsia"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"starsia":87,"-":1}},{"path":"src/main/java/seedu/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"starsia"},"content":"package seedu.duke;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"starsia"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"starsia"},"content":" * Represents \u003ccode\u003eExceptions\u003c/code\u003e corresponding to","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"starsia"},"content":" * Duke commands from user input.","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"starsia"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"starsia"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"starsia"},"content":"     * Constructor for Duke-related exceptions.","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"starsia"},"content":"     * @param e Represents the error message","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"starsia"},"content":"    public DukeException(String e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"starsia"},"content":"        super(e);","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"starsia"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"starsia":15}},{"path":"src/main/java/seedu/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"starsia"},"content":"package seedu.duke;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"starsia"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"starsia"},"content":"import seedu.duke.task.Deadline;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"starsia"},"content":"import seedu.duke.task.Event;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"starsia"},"content":"import seedu.duke.task.Todo;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"starsia"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"starsia"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"starsia"},"content":" * Represents \u003ccode\u003eparsing\u003c/code\u003e logic to interpret and execute","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"starsia"},"content":" * potential commands from user input e.g., \u003ccode\u003etodo read book\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"starsia"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"starsia"},"content":"public class Parser {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"starsia"},"content":"     * Parses input from user, specifically the \u003ccode\u003emark\u003c/code\u003e command,","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"starsia"},"content":"     * and interprets via the \u003ccode\u003eTaskList\u003c/code\u003e class.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"starsia"},"content":"     * Prints out the actions taken back to user via the \u003ccode\u003eUi\u003c/code\u003e class.","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"starsia"},"content":"     * @param input String written by user eg. \u003ccode\u003emark 2\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"starsia"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e object containing list of tasks","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"starsia"},"content":"     * @param ui \u003ccode\u003eUi\u003c/code\u003e object for printing actions","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"starsia"},"content":"    public static void parseMark(String input, TaskList tasks, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"starsia"},"content":"        String[] split \u003d input.split(\" \");","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"starsia"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"starsia"},"content":"            if (split.length \u003c 2) {","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"starsia"},"content":"                // for invalid entry: \"mark\"","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"starsia"},"content":"                throw new DukeException(\"Here\u0027s the format I require: mark [valid index]\");","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"starsia"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"starsia"},"content":"            int index \u003d Integer.parseInt(split[1]) - 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"starsia"},"content":"            if (index \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"starsia"},"content":"                // for invalid entry \"mark [out of bounds]\"","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"starsia"},"content":"                throw new DukeException(\"Here\u0027s the format I require: mark [valid index]\");","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"starsia"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"starsia"},"content":"            tasks.markTaskDone(Integer.parseInt(split[1]) - 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"starsia"},"content":"            ui.showTaskDone(tasks.getTask(Integer.parseInt(split[1]) - 1));","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"starsia"},"content":"        } catch (DukeException d){","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"starsia"},"content":"            ui.printError(d);","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"starsia"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"starsia"},"content":"     * Parses input from user, specifically the \u003ccode\u003eunmark\u003c/code\u003e command,","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"starsia"},"content":"     * and interprets via the \u003ccode\u003eTaskList\u003c/code\u003e class.","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"starsia"},"content":"     * Prints out the actions taken back to user via the \u003ccode\u003eUi\u003c/code\u003e class.","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"starsia"},"content":"     * @param input String written by user eg. \u003ccode\u003eunmark 2\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"starsia"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e object containing list of tasks","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"starsia"},"content":"     * @param ui \u003ccode\u003eUi\u003c/code\u003e object for printing actions","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"starsia"},"content":"    public static void parseUnmark(String input, TaskList tasks, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"starsia"},"content":"        String[] split \u003d input.split(\" \");","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"starsia"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"starsia"},"content":"            if (split.length \u003c 2) { // for invalid entry: \"unmark\"","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"starsia"},"content":"                throw new DukeException(\"Here\u0027s the format I require: unmark [valid index]\");","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"starsia"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"starsia"},"content":"            // for invalid entry \"unmark [out of bounds]\"","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"starsia"},"content":"            int index \u003d Integer.parseInt(split[1]) - 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"starsia"},"content":"            if (index \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"starsia"},"content":"                throw new DukeException(\"Here\u0027s the format I require: unmark [valid index]\");","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"starsia"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"starsia"},"content":"            tasks.markTaskUndone(Integer.parseInt(split[1]) - 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"starsia"},"content":"            ui.showTaskUndone(tasks.getTask(Integer.parseInt(split[1]) - 1));","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"starsia"},"content":"        } catch (DukeException d){","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"starsia"},"content":"            ui.printError(d);","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"starsia"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"starsia"},"content":"     * Parses input from user, specifically the \u003ccode\u003edeadline\u003c/code\u003e command,","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"starsia"},"content":"     * and interprets via the \u003ccode\u003eTaskList\u003c/code\u003e class.","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"starsia"},"content":"     * Prints out the actions taken back to user via the \u003ccode\u003eUi\u003c/code\u003e class.","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"starsia"},"content":"     * @param input String written by user eg. \u003ccode\u003edeadline /by 2023-02-4\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"starsia"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e object containing list of tasks","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"starsia"},"content":"     * @param ui \u003ccode\u003eUi\u003c/code\u003e object for printing actions","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"starsia"},"content":"    public static void parseDeadline(String input, TaskList tasks, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"starsia"},"content":"        String[] split \u003d input.split(\" /by \");","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"starsia"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"starsia"},"content":"            if (split.length \u003c 2) {","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"starsia"},"content":"                throw new DukeException(\"Here\u0027s the format I require: deadline [name] /by [yyyy-mm-dd]\");","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"starsia"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"starsia"},"content":"            String[] splitAgain \u003d split[0].split(\" \", 2);","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"starsia"},"content":"            String dateline \u003d split[1];","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"starsia"},"content":"            LocalDate localDate \u003d LocalDate.parse(dateline);","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"starsia"},"content":"            Deadline deadline \u003d new Deadline(splitAgain[1], localDate);","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"starsia"},"content":"            tasks.addTask(deadline);","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"starsia"},"content":"            ui.showTaskAdded(deadline, tasks.getSize());","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"starsia"},"content":"        } catch (DukeException d) {","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"starsia"},"content":"            ui.printError(d);","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"starsia"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":96,"author":{"gitId":"starsia"},"content":"     * Parses input from user, specifically the \u003ccode\u003etodo\u003c/code\u003e command,","lastModifiedDate":"2024-02-09"},{"lineNumber":97,"author":{"gitId":"starsia"},"content":"     * and interprets via the \u003ccode\u003eTaskList\u003c/code\u003e class.","lastModifiedDate":"2024-02-09"},{"lineNumber":98,"author":{"gitId":"starsia"},"content":"     * Prints out the actions taken back to user via the \u003ccode\u003eUi\u003c/code\u003e class.","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"starsia"},"content":"     * @param input String written by user eg. \u003ccode\u003etodo read book\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"starsia"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e object containing list of tasks","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"starsia"},"content":"     * @param ui \u003ccode\u003eUi\u003c/code\u003e object for printing actions","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"starsia"},"content":"    public static void parseTodo(String input, TaskList tasks, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"starsia"},"content":"        String[] split \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"starsia"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"starsia"},"content":"            if (split.length \u003c 2) {","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"starsia"},"content":"                throw new DukeException(\"Here\u0027s the format I require: todo [name]\");","lastModifiedDate":"2024-02-07"},{"lineNumber":108,"author":{"gitId":"starsia"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"starsia"},"content":"            String description \u003d split[1];","lastModifiedDate":"2024-02-07"},{"lineNumber":110,"author":{"gitId":"starsia"},"content":"            Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"starsia"},"content":"            tasks.addTask(todo);","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"starsia"},"content":"            ui.showTaskAdded(todo, tasks.getSize());","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"starsia"},"content":"        } catch (DukeException d){","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"starsia"},"content":"            ui.printError(d);","lastModifiedDate":"2024-02-07"},{"lineNumber":115,"author":{"gitId":"starsia"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":116,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":117,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":118,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":119,"author":{"gitId":"starsia"},"content":"     * Parses input from user, specifically the \u003ccode\u003eevent\u003c/code\u003e command,","lastModifiedDate":"2024-02-09"},{"lineNumber":120,"author":{"gitId":"starsia"},"content":"     * and interprets via the \u003ccode\u003eTaskList\u003c/code\u003e class.","lastModifiedDate":"2024-02-09"},{"lineNumber":121,"author":{"gitId":"starsia"},"content":"     * Prints out the actions taken back to user via the \u003ccode\u003eUi\u003c/code\u003e class.","lastModifiedDate":"2024-02-09"},{"lineNumber":122,"author":{"gitId":"starsia"},"content":"     * @param input String written by user","lastModifiedDate":"2024-02-09"},{"lineNumber":123,"author":{"gitId":"starsia"},"content":"     *              eg. \u003ccode\u003eevent orientation /from 2023-08-02 /to 2024-08-09\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":124,"author":{"gitId":"starsia"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e object containing list of tasks","lastModifiedDate":"2024-02-09"},{"lineNumber":125,"author":{"gitId":"starsia"},"content":"     * @param ui \u003ccode\u003eUi\u003c/code\u003e object for printing actions","lastModifiedDate":"2024-02-09"},{"lineNumber":126,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":127,"author":{"gitId":"starsia"},"content":"    public static void parseEvent(String input, TaskList tasks, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":128,"author":{"gitId":"starsia"},"content":"        String[] split \u003d input.split(\" /from \");","lastModifiedDate":"2024-02-07"},{"lineNumber":129,"author":{"gitId":"starsia"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":130,"author":{"gitId":"starsia"},"content":"            if (split.length \u003c 2) {","lastModifiedDate":"2024-02-07"},{"lineNumber":131,"author":{"gitId":"starsia"},"content":"                throw new DukeException(\"Here\u0027s the format I require: \"","lastModifiedDate":"2024-02-09"},{"lineNumber":132,"author":{"gitId":"starsia"},"content":"                        + \"event [name] /from [yyyy-mm-dd] /by [yyyy-mm-dd]\");","lastModifiedDate":"2024-02-09"},{"lineNumber":133,"author":{"gitId":"starsia"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":134,"author":{"gitId":"starsia"},"content":"            String description \u003d split[0].split(\" \", 2)[1];","lastModifiedDate":"2024-02-07"},{"lineNumber":135,"author":{"gitId":"starsia"},"content":"            LocalDate from \u003d LocalDate.parse(split[1].split(\" /to \")[0]);","lastModifiedDate":"2024-02-07"},{"lineNumber":136,"author":{"gitId":"starsia"},"content":"            LocalDate to \u003d LocalDate.parse(split[1].split(\" /to \")[1]);","lastModifiedDate":"2024-02-07"},{"lineNumber":137,"author":{"gitId":"starsia"},"content":"            Event event \u003d new Event(description, from, to);","lastModifiedDate":"2024-02-07"},{"lineNumber":138,"author":{"gitId":"starsia"},"content":"            tasks.addTask(event);","lastModifiedDate":"2024-02-07"},{"lineNumber":139,"author":{"gitId":"starsia"},"content":"            ui.showTaskAdded(event, tasks.getSize());","lastModifiedDate":"2024-02-07"},{"lineNumber":140,"author":{"gitId":"starsia"},"content":"        } catch (DukeException d) {","lastModifiedDate":"2024-02-07"},{"lineNumber":141,"author":{"gitId":"starsia"},"content":"            ui.printError(d);","lastModifiedDate":"2024-02-07"},{"lineNumber":142,"author":{"gitId":"starsia"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":143,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":144,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":145,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":146,"author":{"gitId":"starsia"},"content":"     * Parses input from user, specifically the \u003ccode\u003edelete\u003c/code\u003e command,","lastModifiedDate":"2024-02-09"},{"lineNumber":147,"author":{"gitId":"starsia"},"content":"     * and interprets via the \u003ccode\u003eTaskList\u003c/code\u003e class to get the task to delete.","lastModifiedDate":"2024-02-09"},{"lineNumber":148,"author":{"gitId":"starsia"},"content":"     * Prints out the actions taken back to user via the \u003ccode\u003eUi\u003c/code\u003e class.","lastModifiedDate":"2024-02-09"},{"lineNumber":149,"author":{"gitId":"starsia"},"content":"     * @param input String written by user eg. \u003ccode\u003edelete 2\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":150,"author":{"gitId":"starsia"},"content":"     * @param tasks \u003ccode\u003eTaskList\u003c/code\u003e object containing list of tasks","lastModifiedDate":"2024-02-09"},{"lineNumber":151,"author":{"gitId":"starsia"},"content":"     * @param ui \u003ccode\u003eUi\u003c/code\u003e object for printing actions","lastModifiedDate":"2024-02-09"},{"lineNumber":152,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":153,"author":{"gitId":"starsia"},"content":"    public static void parseDelete(String input, TaskList tasks, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":154,"author":{"gitId":"starsia"},"content":"        String[] split \u003d input.split(\" \");","lastModifiedDate":"2024-02-07"},{"lineNumber":155,"author":{"gitId":"starsia"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":156,"author":{"gitId":"starsia"},"content":"            if (split.length \u003c 2) {","lastModifiedDate":"2024-02-07"},{"lineNumber":157,"author":{"gitId":"starsia"},"content":"                throw new DukeException(\"Which task number do you want to delete?\");","lastModifiedDate":"2024-02-08"},{"lineNumber":158,"author":{"gitId":"starsia"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":159,"author":{"gitId":"starsia"},"content":"            int number \u003d Integer.parseInt(split[1]);","lastModifiedDate":"2024-02-07"},{"lineNumber":160,"author":{"gitId":"starsia"},"content":"            Task task \u003d tasks.getTask(number -  1);","lastModifiedDate":"2024-02-07"},{"lineNumber":161,"author":{"gitId":"starsia"},"content":"            tasks.deleteTask(number - 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":162,"author":{"gitId":"starsia"},"content":"            ui.showTaskDeleted(task, tasks.getSize());","lastModifiedDate":"2024-02-07"},{"lineNumber":163,"author":{"gitId":"starsia"},"content":"        } catch (DukeException d) {","lastModifiedDate":"2024-02-07"},{"lineNumber":164,"author":{"gitId":"starsia"},"content":"            ui.printError(d);","lastModifiedDate":"2024-02-07"},{"lineNumber":165,"author":{"gitId":"starsia"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":166,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":167,"author":{"gitId":"starsia"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"starsia":167}},{"path":"src/main/java/seedu/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"starsia"},"content":"package seedu.duke;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"starsia"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"starsia"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"starsia"},"content":"import java.io.File;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"starsia"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"starsia"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"starsia"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"starsia"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"starsia"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"starsia"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"starsia"},"content":" * Represents \u003ccode\u003eStorage\u003c/code\u003e logic to save and load past","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"starsia"},"content":" * task lists from prior user input","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"starsia"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"starsia"},"content":"public class Storage {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"starsia"},"content":"    private String filepath;","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"starsia"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"starsia"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"starsia"},"content":"     * Loads the saved TaskList into the application from the path provided.","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"starsia"},"content":"     * @return ArrayList\u003cTask\u003e containing the saved \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"starsia"},"content":"     * @throws DukeException in the event of an Exception","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"starsia"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"starsia"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"starsia"},"content":"        // Load tasks from file","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"starsia"},"content":"        // Solution below inspired by:","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"starsia"},"content":"        // https://stackoverflow.com/questions/16111496/java-how-can-i-write-my-arraylist-to-a-file","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"starsia"},"content":"        // -and-read-load-that-file-to-the","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"starsia"},"content":"        try (ObjectInputStream ois \u003d new ObjectInputStream(new FileInputStream(filepath))) {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"starsia"},"content":"            list \u003d (ArrayList\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"starsia"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"starsia"},"content":"            try {","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"starsia"},"content":"                // make directory first","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"starsia"},"content":"                new File(\"./data\").mkdirs();","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"starsia"},"content":"                // then make file","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"starsia"},"content":"                // Solution below inspired by https://www.w3schools.com/java/java_files_create.asp","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"starsia"},"content":"                File myObj \u003d new File(filepath);","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"starsia"},"content":"                if (myObj.createNewFile()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"starsia"},"content":"                    System.out.println(\"File created: \" + myObj.getName());","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"starsia"},"content":"                } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"starsia"},"content":"                    System.out.println(\"File already exists.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"starsia"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"starsia"},"content":"            } catch (IOException i) {","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"starsia"},"content":"                System.out.println(\"An error occurred.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"starsia"},"content":"                e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"starsia"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"starsia"},"content":"            System.out.println(\"Could not load tasks from file: \" + e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"starsia"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"starsia"},"content":"        return list;","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"starsia"},"content":"     * Saves the modified TaskList into the application from the path provided.","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"starsia"},"content":"     * @param list Contains the \u003ccode\u003eTaskList\u003c/code\u003e to be saved","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"starsia"},"content":"    public void saveList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"starsia"},"content":"        try (ObjectOutputStream oos \u003d new ObjectOutputStream(new FileOutputStream(filepath))) {","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"starsia"},"content":"            oos.writeObject(list);","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"starsia"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"starsia"},"content":"            System.out.println(\"Could not save tasks to file: \" + e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"starsia"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"starsia"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"starsia":70}},{"path":"src/main/java/seedu/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"starsia"},"content":"package seedu.duke;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"starsia"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"starsia"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"starsia"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"starsia"},"content":" * Represents the \u003ccode\u003eclass\u003c/code\u003e that is able to contain","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"starsia"},"content":" * and modify the list of tasks created by the user","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"starsia"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"starsia"},"content":"public class TaskList {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"starsia"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"starsia"},"content":"     * Constructor given list, when there is a pre-saved file.","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"starsia"},"content":"     * @param list","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"starsia"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"starsia"},"content":"        this.list \u003d list;","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"starsia"},"content":"     * Constructor not given list, in the event where there is","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"starsia"},"content":"     * no pre-saved file.","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"starsia"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"starsia"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"starsia"},"content":"     * Returns the Task list. Get method.","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"starsia"},"content":"     * @return","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"starsia"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"starsia"},"content":"        return list;","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"starsia"},"content":"     * Returns task based on index. Get method.","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"starsia"},"content":"     * @param index Represents the task index to get","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"starsia"},"content":"     * @return Task","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"starsia"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"starsia"},"content":"        return list.get(index);","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"starsia"},"content":"     * Marks \u003ccode\u003eTask\u003c/code\u003e as done based on index.","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"starsia"},"content":"     * @param index Represents the correct \u003ccode\u003eTask\u003c/code\u003e index","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"starsia"},"content":"     *              to be marked as done.","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"starsia"},"content":"    public void markTaskDone(int index) {","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"starsia"},"content":"        list.get(index).markAsDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"starsia"},"content":"     * Marks \u003ccode\u003eTask\u003c/code\u003e as undone based on index.","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"starsia"},"content":"     * @param index Represents the correct \u003ccode\u003eTask\u003c/code\u003e index","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"starsia"},"content":"     *              to be marked as undone.","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"starsia"},"content":"    public void markTaskUndone(int index) {","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"starsia"},"content":"        list.get(index).markAsUndone();","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"starsia"},"content":"     * Adds \u003ccode\u003eTask\u003c/code\u003e to the list of Tasks.","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"starsia"},"content":"     * @param task Represents the \u003ccode\u003eTask\u003c/code\u003e object to be","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"starsia"},"content":"     *             added","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"starsia"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"starsia"},"content":"        list.add(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"starsia"},"content":"     * Deletes \u003ccode\u003eTask\u003c/code\u003e based on the index.","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"starsia"},"content":"     * @param index Represents the task index to be deleted","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"starsia"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"starsia"},"content":"        list.remove(index);","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"starsia"},"content":"     * Returns size of Task list.","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"starsia"},"content":"     * @return size of type \u003ccode\u003eint\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":85,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":86,"author":{"gitId":"starsia"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"starsia"},"content":"        return list.size();","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"starsia"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"starsia":89}},{"path":"src/main/java/seedu/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"starsia"},"content":"package seedu.duke;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"starsia"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"starsia"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"starsia"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"starsia"},"content":" * Represents the \u003ccode\u003eUI\u003c/code\u003e that users see in response to","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"starsia"},"content":" * their potential input commands e.g., \u003ccode\u003eHello\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"starsia"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"starsia"},"content":"public class Ui {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"starsia"},"content":"     * Represents printed output when a DukeException is thrown.","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"starsia"},"content":"     * @param dukeException","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"starsia"},"content":"    public void printError(DukeException dukeException) {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"starsia"},"content":"        printBreak();","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"starsia"},"content":"        System.out.println(dukeException.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"starsia"},"content":"        printBreak();","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"starsia"},"content":"     * Represents printed output when Duke starts.","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"starsia"},"content":"    public void openingMessage() {","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"starsia"},"content":"        printBreak();","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"starsia"},"content":"        System.out.println(\"Hello! I\u0027m Klara\");","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"starsia"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"starsia"},"content":"        printBreak();","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"starsia"},"content":"     * Represents printed output when Duke ends.","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"starsia"},"content":"    public void closingMessage() {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"starsia"},"content":"        // Logging off upon \"bye\" command","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"starsia"},"content":"        printBreak();","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"starsia"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"starsia"},"content":"        printBreak();","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"starsia"},"content":"     * Represents printed output when a \u003ccode\u003eTask\u003c/code\u003e is marked as done.","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"starsia"},"content":"     * @param task Represents the \u003ccode\u003eTask\u003c/code\u003e object marked","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"starsia"},"content":"    public void showTaskDone(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"starsia"},"content":"        printBreak();","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"starsia"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"starsia"},"content":"        System.out.println(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"starsia"},"content":"        printBreak();","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"starsia"},"content":"     * Represents printed output when a \u003ccode\u003eTask\u003c/code\u003e is marked as undone.","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"starsia"},"content":"     * @param task Represents the \u003ccode\u003eTask\u003c/code\u003e object unmarked","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"starsia"},"content":"    public void showTaskUndone(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"starsia"},"content":"        printBreak();","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"starsia"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"starsia"},"content":"        System.out.println(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"starsia"},"content":"        printBreak();","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"starsia"},"content":"     * Represents printed output when a \u003ccode\u003eTask\u003c/code\u003e is added.","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"starsia"},"content":"     * @param task Represents the \u003ccode\u003eTask\u003c/code\u003e object added","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"starsia"},"content":"     * @param size Represents size of Task list to be printed","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"starsia"},"content":"    public void showTaskAdded(Task task, int size) {","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"starsia"},"content":"        printBreak();","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"starsia"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"starsia"},"content":"        System.out.println(\" \" + task);","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"starsia"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"starsia"},"content":"        printBreak();","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"starsia"},"content":"     * Represents printed output when a \u003ccode\u003eTask\u003c/code\u003e is deleted.","lastModifiedDate":"2024-02-09"},{"lineNumber":80,"author":{"gitId":"starsia"},"content":"     * @param task Represents the \u003ccode\u003eTask\u003c/code\u003e object deleted","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"starsia"},"content":"     * @param size Represents size of Task list to be printed","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"starsia"},"content":"    public void showTaskDeleted(Task task, int size) {","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"starsia"},"content":"        printBreak();","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"starsia"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"starsia"},"content":"        System.out.println(\" \" + task);","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"starsia"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"starsia"},"content":"        printBreak();","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":92,"author":{"gitId":"starsia"},"content":"     * Default spacer to print to tidy output.","lastModifiedDate":"2024-02-09"},{"lineNumber":93,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"starsia"},"content":"    public void printBreak() {","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"starsia"},"content":"        String line \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"starsia"},"content":"        System.out.println(line);","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"starsia"},"content":"     * Represents printed output when \u003ccode\u003elist\u003c/code\u003e command is given","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"starsia"},"content":"     * Loop through the list to print out each \u003ccode\u003eTask\u003c/code\u003e and its","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"starsia"},"content":"     * description","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"starsia"},"content":"     * @param list Represents the list to be printed to system output.","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":105,"author":{"gitId":"starsia"},"content":"    public void printList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"starsia"},"content":"        printBreak();","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"starsia"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":108,"author":{"gitId":"starsia"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"starsia"},"content":"            if (list.get(i).getStatus()) {","lastModifiedDate":"2024-02-09"},{"lineNumber":110,"author":{"gitId":"starsia"},"content":"                System.out.println(i + 1 + \".\" + list.get(i));","lastModifiedDate":"2024-02-09"},{"lineNumber":111,"author":{"gitId":"starsia"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"starsia"},"content":"            else {","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"starsia"},"content":"                System.out.println(i + 1 + \".\" + list.get(i));","lastModifiedDate":"2024-02-09"},{"lineNumber":114,"author":{"gitId":"starsia"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":115,"author":{"gitId":"starsia"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":116,"author":{"gitId":"starsia"},"content":"        printBreak();","lastModifiedDate":"2024-02-07"},{"lineNumber":117,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":118,"author":{"gitId":"starsia"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"starsia":118}},{"path":"src/main/java/seedu/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"starsia"},"content":"package seedu.duke.task;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"starsia"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"starsia"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"starsia"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"starsia"},"content":" * Represents the \u003ccode\u003eDeadline\u003c/code\u003e class to store information","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"starsia"},"content":" * about the user-created deadline e.g., \u003ccode\u003eby\u003c/code\u003e when","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"starsia"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"starsia"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"starsia"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"starsia"},"content":"     * Constructor for \u003ccode\u003eDeadline\u003c/code\u003e.","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"starsia"},"content":"     * @param description Represents description of deadline","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"starsia"},"content":"     * @param by Represents time limit for deadline","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"starsia"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"starsia"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"starsia"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"starsia"},"content":"     * Represents overridden toString method for printing \u003ccode\u003eDeadline\u003c/code\u003e\u003e details.","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"starsia"},"content":"     * @return details of type \u003ccode\u003eString\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"starsia"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"starsia"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"starsia"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"starsia"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"starsia":32}},{"path":"src/main/java/seedu/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"starsia"},"content":"package seedu.duke.task;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"starsia"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"starsia"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"starsia"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"starsia"},"content":" * Represents the \u003ccode\u003eEvent\u003c/code\u003e class to store information","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"starsia"},"content":" * about the user-created event e.g., \u003ccode\u003efrom, to\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"starsia"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"starsia"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"starsia"},"content":"    private LocalDate from;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"starsia"},"content":"    private LocalDate to;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"starsia"},"content":"     * Constructor for \u003ccode\u003eEvent\u003c/code\u003e.","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"starsia"},"content":"     * @param description Represents description of description","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"starsia"},"content":"     * @param from Represents start of event","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"starsia"},"content":"     * @param to Represents end of event","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"starsia"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"starsia"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"starsia"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"starsia"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"starsia"},"content":"     * Represents overridden toString method for printing \u003ccode\u003eEvent\u003c/code\u003e details.","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"starsia"},"content":"     * @return details of type \u003ccode\u003eString\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"starsia"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"starsia"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"starsia"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"starsia"},"content":"                                        + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"starsia"},"content":"                                        + \")\";","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"starsia"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"starsia":37}},{"path":"src/main/java/seedu/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"starsia"},"content":"package seedu.duke.task;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"starsia"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"starsia"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"starsia"},"content":" * Represents the \u003ccode\u003eTask\u003c/code\u003e class to store information","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"starsia"},"content":" * about the user-created task e.g., \u003ccode\u003edescription, isDone\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"starsia"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"starsia"},"content":"public class Task implements Serializable {","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"starsia"},"content":"    private String description;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"starsia"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"starsia"},"content":"     * Constructor for \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"starsia"},"content":"     * @param description Represents description of \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"starsia"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"starsia"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"starsia"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"starsia"},"content":"     * Marks \u003ccode\u003eTask\u003c/code\u003e as done.","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"starsia"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"starsia"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"starsia"},"content":"     * Marks \u003ccode\u003eTask\u003c/code\u003e as undone.","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"starsia"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"starsia"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"starsia"},"content":"     * Returns status \u003ccode\u003etrue/false\u003c/code\u003e of \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"starsia"},"content":"     * @return Status of \u003ccode\u003eTask\u003c/code\u003e eg. \u003ccode\u003eTrue/False\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"starsia"},"content":"    public boolean getStatus() {","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"starsia"},"content":"        return isDone;","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"starsia"},"content":"     * Represents overridden toString method for printing \u003ccode\u003eTask\u003c/code\u003e details.","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"starsia"},"content":"     * @return details of type \u003ccode\u003eString\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"starsia"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"starsia"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"starsia"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"starsia"},"content":"            return \"[X] \" + description;","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"starsia"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"starsia"},"content":"        else {","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"starsia"},"content":"            return \"[ ] \" + description;","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"starsia"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"starsia"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"starsia":58}},{"path":"src/main/java/seedu/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"starsia"},"content":"package seedu.duke.task;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"starsia"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"starsia"},"content":" * Represents the \u003ccode\u003eTodo\u003c/code\u003e class to store information","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"starsia"},"content":" * about the user-created todo","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"starsia"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"starsia"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"starsia"},"content":"     * Constructor for \u003ccode\u003eTodo\u003c/code\u003e.","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"starsia"},"content":"     * @param description Represents description of \u003ccode\u003eTodo\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"starsia"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"starsia"},"content":"        super(description);","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"starsia"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"starsia"},"content":"     * Represents overridden toString method for printing \u003ccode\u003eTodo\u003c/code\u003e details.","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"starsia"},"content":"     * @return details of type \u003ccode\u003eString\u003c/code\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"starsia"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"starsia"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"starsia"},"content":"    public String toString() {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"starsia"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"starsia"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"starsia":25}},{"path":"src/test/java/seedu/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"starsia"},"content":"package seedu.duke;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"starsia"},"content":"import seedu.duke.task.Todo;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"starsia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"starsia"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"starsia"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"starsia"},"content":"    @Test","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"starsia"},"content":"    public void getSize_properAddition_success() throws Exception{","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"starsia"},"content":"        assertEquals(0, new TaskList().getSize());","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"starsia"},"content":"        Todo todo \u003d new Todo(\"hi\");","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"starsia"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"starsia"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"starsia"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"starsia"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"starsia":15}},{"path":"src/test/java/seedu/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"starsia"},"content":"package seedu.duke.task;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"starsia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"starsia"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"starsia"},"content":"public class TaskTest {","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"starsia"},"content":"    @Test","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"starsia"},"content":"    public void testStringConversion() {","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"starsia"},"content":"        assertEquals(\"[ ] hello\", new Task(\"hello\").toString());","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"starsia"},"content":"        Task task \u003d new Task(\"hello\");","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"starsia"},"content":"        task.markAsDone();","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"starsia"},"content":"        assertEquals(\"[X] hello\", task.toString());","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"starsia"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"starsia"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"starsia":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"starsia"},"content":"todo borrow book","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"starsia"},"content":"list","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"starsia"},"content":"","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"starsia":3}},{"path":"data/duke.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"starsia":0}},{"path":"data/tasks.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"starsia":0}}]
