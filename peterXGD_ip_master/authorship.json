[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"# Duke update: Venus","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"\u003e \"Unlock the potential of chat bots.\" - by nobody","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"## Venus features","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"Venus allows you to do so more more, for example,","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"- track your event dates","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"- track your event time","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"- store or load your events ~~easily~~ super easily!","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"And, it\u0027s ~~paid~~ _free_! Yes, **free**! :v:","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"To start,","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"1. You have to [download](https://github.com/peterXGD/ip) it.","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"2. Double click it.","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"4. Either run it from intellij from `./src/java/Venus/Venus.java` or `./gradlew run`","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"Remember, run with `SDK default` and Java 11!","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"Features:","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"- [x] Different class types.","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"- [ ] Save and load tasks whenever you start the program","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"- [ ] Add delight to the experience when all tasks are complete :tada:","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"###","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"If you are a java programmer, here is the program `main` method:","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"```java","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"peterXGD"},"content":"        Venus venus \u003d new Venus(\"data\" + File.separator + \"venus.txt\");","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"peterXGD"},"content":"        venus.run();","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"peterXGD":30,"-":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"checkstyle {","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"peterXGD"},"content":"    mainClass.set(\"Launcher.main\")","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"peterXGD"},"content":"    archiveBaseName \u003d \"venus\"","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"peterXGD"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"peterXGD"},"content":"run {","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"peterXGD"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"peterXGD":26,"-":41}},{"path":"data/venus.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"T|1| apple","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"T|0| orange","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"T|0| apple","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"D|0| 360 | Oct 15 2019","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"T|1| 350","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"E|1| sm3 | Jan 1 2019 to: Jan 2 2019","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"D|1| 222 | Oct 2 2020","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"E|0| 2222 | Oct 10 2020 to: Oct 10 2020","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"T|0| dota2","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"E|0|  | Jan 2 2020 to: Feb 2 2020","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"T|0| dota2","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"T|0| dota2","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"T|0| visit Italy","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"peterXGD":14}},{"path":"src/main/java/venus/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":" * This is a deadline class that extends from the Task class.","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":" * @author peterXGD","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":" * @since 2024-02-05","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"    private LocalDate deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"     * Returns deadline task with event and deadline as parameter.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"     * @param s The deadline event itself","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"     * @param deadline The time string used for the deadline in \"YYYY-MM-DD\" format.","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"    public Deadline(String s, String deadline) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"        super(s);","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"        this.deadline \u003d TimeFormatter.stringToTime(deadline);","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"     * Returns deadline task with event and deadline as parameter.","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"     * @param s The deadline event itself","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"     * @param deadline The time string used for the deadline in \"YYYY-MM-DD\" format.","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"    public Deadline(String s, boolean mark, String deadline) throws DateTimeParseException {","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"        //constructor used for loading","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"peterXGD"},"content":"        super(s);","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"peterXGD"},"content":"        this.deadline \u003d TimeFormatter.loadTimeFromString(deadline);","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"peterXGD"},"content":"        if (mark) {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"peterXGD"},"content":"            this.mark();","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"peterXGD"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"peterXGD"},"content":"            this.unmark();","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"peterXGD"},"content":"     * Return string that prints content of this class with time of format","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"peterXGD"},"content":"     * \"MMM d yyyy\".","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"peterXGD"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"peterXGD"},"content":"     * @return A string that includes day of deadline and the task itself.","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"peterXGD"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"peterXGD"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"peterXGD"},"content":"        String x \u003d (this.getMark()) ? \"X\" : \" \";","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"peterXGD"},"content":"        return \"[D]\" + \"[\" + x + \"] \" + this.getItem()","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"peterXGD"},"content":"                + \" (by: \" + deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"peterXGD":54}},{"path":"src/main/java/venus/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"     * Set up DialogBox and assert if the file is found.","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"     * @param text Text to be wrapped for the DialogBox.","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"     * @param img Image to be used for the DialogBox.","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"peterXGD"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"peterXGD"},"content":"            assert MainWindow.class.getResource(\"/view/DialogBox.fxml\") !\u003d null : \"No FXML for DialogBox!\";","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"peterXGD"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"peterXGD"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"peterXGD"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"peterXGD"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"peterXGD"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"peterXGD"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"peterXGD"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"peterXGD"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"peterXGD"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"peterXGD"},"content":"    private void flip() {","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"peterXGD"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"peterXGD"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"peterXGD"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"peterXGD"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"peterXGD"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"peterXGD"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"peterXGD"},"content":"    public static DialogBox getVenusDialog(String text, Image img) {","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"peterXGD"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"peterXGD"},"content":"        db.flip();","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"peterXGD"},"content":"        return db;","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"peterXGD":68}},{"path":"src/main/java/venus/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":" * This class is dukeException which throws exceptions related to the duke project.","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":" * @author peterXGD","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":" * @since 2024-02-05","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"     * An exception that is caused by problems related to project Duke methods or classes.","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"    public DukeException() {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"        super(\"This is a duke exception of unknown cause.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"     * An exception that is caused by problems related to project Duke with custom exception.","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"     * @param s String to be printed for the DukeException.","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"    public DukeException(String s) {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"        super(s);","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"peterXGD":26}},{"path":"src/main/java/venus/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":" * This is an Event class that extends from the Task class.","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":" * @author peterXGD","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":" * @since 2024-02-05","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"    static final int PREFIX_LENGTH \u003d 4;","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"    static final int POSTFIX_LENGTH \u003d 2;","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"    private LocalDate start;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"    private LocalDate end;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"     * Returns event given description, starting and closing date.","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"     * @param s Event string.","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"     * @param start Starting date in \"YYYY-MM-DD\" format.","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"     * @param end Ending date in \"YYYY-MM-DD\" format.","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"    public Event(String s, String start, String end) {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"        super(s);","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"        this.start \u003d TimeFormatter.stringToTime(start.substring(PREFIX_LENGTH).trim());","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"        this.end \u003d TimeFormatter.stringToTime(end.substring(POSTFIX_LENGTH).trim());","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"     * Returns event class given description, task state, starting and closing date and dummy.","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"peterXGD"},"content":"     * @param s Event string","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"peterXGD"},"content":"     * @param mark Mark if a task is completed","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"peterXGD"},"content":"     * @param start Starting date in \"YYYY-MM-DD\" format.","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"peterXGD"},"content":"     * @param end Ending date in \"YYYY-MM-DD\" format.","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"peterXGD"},"content":"     * @param dummy Dummy boolean","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"peterXGD"},"content":"    public Event(String s, boolean mark, String start, String end, boolean dummy) {","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"peterXGD"},"content":"        // constructor used for loading","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"peterXGD"},"content":"        super(s);","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"peterXGD"},"content":"        this.start \u003d TimeFormatter.loadTimeFromString(start.trim());","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"peterXGD"},"content":"        this.end \u003d TimeFormatter.loadTimeFromString(end.trim());","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"peterXGD"},"content":"        if (mark) {","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"peterXGD"},"content":"            this.mark();","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"peterXGD"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"peterXGD"},"content":"            this.unmark();","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"peterXGD"},"content":"     * Returns string that prints content of this class including starting and ending","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"peterXGD"},"content":"     * dates in \"MMM d yyyy\" format.","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"peterXGD"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"peterXGD"},"content":"     * @return A string that includes day of event and the event itself.","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"peterXGD"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"peterXGD"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"peterXGD"},"content":"        String x \u003d (this.getMark()) ? \"X\" : \" \";","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"peterXGD"},"content":"        return \"[E]\" + \"[\" + x + \"] \" + this.getItem()","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"peterXGD"},"content":"                + \" (from: \" + start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"peterXGD"},"content":"                + \" to: \" + end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"peterXGD":64}},{"path":"src/main/java/venus/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":" * This is a Ui class the create Ui for messages i/o of program.","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":" *","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":" * @author peterXGD","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":" * @since 2024-02-05","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"public class Gui {","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"    private static final String START \u003d","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"                    \"    Hello! I\u0027m Venus.\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"                    + \"    What can I do for you?\\n\";","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"    private static final String END \u003d","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"                    \"    Bye. Please close the tab by yourself. Hope to see you again soon!\\n\";","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"    public static String formatResponse(String message) {","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"        return \"     \" + message + \"\\n\";","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"     * Return a message that says project marked.","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"     * @param task The task that is marked.","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"     * @return Message returned to GUI.","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"    public static String markMessage(Task task) {","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"        return Gui.formatResponse(\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"                + \"       \"","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"                + task.toString());","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"peterXGD"},"content":"     * Returns a message that says project is unmarked.","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"peterXGD"},"content":"     * @param task The task that is unmarked.","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"peterXGD"},"content":"     * @return Message returned to GUI.","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"peterXGD"},"content":"    public static String unmarkMessage(Task task) {","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"peterXGD"},"content":"        return Gui.formatResponse(\"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"peterXGD"},"content":"                + \"       \"","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"peterXGD"},"content":"                + task.toString());","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"peterXGD"},"content":"     * Returns a message that says project is marked.","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"peterXGD"},"content":"     * @param task The task added.","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"peterXGD"},"content":"     * @param size The size of the task that is formatted.","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"peterXGD"},"content":"     * @return Message returned to GUI.","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"peterXGD"},"content":"    public static String addTaskMessage(Task task, int size) {","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"peterXGD"},"content":"        return Gui.formatResponse(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"peterXGD"},"content":"                + \"       \"","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"peterXGD"},"content":"                + task.toString()","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"peterXGD"},"content":"                + \"\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"peterXGD"},"content":"                + \"     Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"peterXGD"},"content":"     * Returns a message that says a project is removed.","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"peterXGD"},"content":"     * @param task The task to that is removed.","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"peterXGD"},"content":"     * @param size The size of the task list after the removal.","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"peterXGD"},"content":"     * @return Message returned to GUI.","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"peterXGD"},"content":"    public static String deleteTaskMessage(Task task, int size) {","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"peterXGD"},"content":"        return Gui.formatResponse(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"peterXGD"},"content":"                + \"       \"","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"peterXGD"},"content":"                + task.toString()","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"peterXGD"},"content":"                + \"\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"peterXGD"},"content":"                + \"     Now you have \" + (size - 1) + \" tasks in the list.\");","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"peterXGD"},"content":"     * Returns all tasks in current project.","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"peterXGD"},"content":"     * @param tasks all the tasks in the Tasklist.","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"peterXGD"},"content":"     * @return All tasks in the TaskList.","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"peterXGD"},"content":"    public static String allTasksMessage(TaskList tasks) {","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"peterXGD"},"content":"        int i \u003d 1;","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"peterXGD"},"content":"        String output \u003d \"     Here are the tasks in your list:\\n\";","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"peterXGD"},"content":"        for (Task s : tasks.getTasks()) {","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"peterXGD"},"content":"            output \u003d output + (\"     \" + i + \".\" + s + \"\\n\");","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"peterXGD"},"content":"            i++;","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"peterXGD"},"content":"        return output;","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"peterXGD"},"content":"    public static String getStart() {","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"peterXGD"},"content":"        return START;","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"peterXGD"},"content":"    public static String getEnd() {","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"peterXGD"},"content":"        return END;","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"peterXGD"},"content":"     * Returns all the tasks in a list.","lastModifiedDate":"2024-02-22"},{"lineNumber":97,"author":{"gitId":"peterXGD"},"content":"     * @param items the list itself.","lastModifiedDate":"2024-02-25"},{"lineNumber":98,"author":{"gitId":"peterXGD"},"content":"     * @return item string to be displayed by GUI.","lastModifiedDate":"2024-02-22"},{"lineNumber":99,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":100,"author":{"gitId":"peterXGD"},"content":"    public static String findMessage(ArrayList\u003cString\u003e items) {","lastModifiedDate":"2024-02-22"},{"lineNumber":101,"author":{"gitId":"peterXGD"},"content":"        int i \u003d 1;","lastModifiedDate":"2024-02-22"},{"lineNumber":102,"author":{"gitId":"peterXGD"},"content":"        String output \u003d \"     Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2024-02-22"},{"lineNumber":103,"author":{"gitId":"peterXGD"},"content":"        for (String s : items) {","lastModifiedDate":"2024-02-22"},{"lineNumber":104,"author":{"gitId":"peterXGD"},"content":"            output \u003d output + (\"     \" + i + \".\" + s + \"\\n\");","lastModifiedDate":"2024-02-22"},{"lineNumber":105,"author":{"gitId":"peterXGD"},"content":"            i++;","lastModifiedDate":"2024-02-22"},{"lineNumber":106,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"peterXGD"},"content":"        return output;","lastModifiedDate":"2024-02-22"},{"lineNumber":108,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":109,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":110,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":111,"author":{"gitId":"peterXGD"},"content":"     * Returns all the tasks in a list that is duplicated","lastModifiedDate":"2024-02-25"},{"lineNumber":112,"author":{"gitId":"peterXGD"},"content":"     * @param duplicates the duplicate tasks in the list.","lastModifiedDate":"2024-02-25"},{"lineNumber":113,"author":{"gitId":"peterXGD"},"content":"     * @return item string to be displayed by GUI.","lastModifiedDate":"2024-02-25"},{"lineNumber":114,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":115,"author":{"gitId":"peterXGD"},"content":"    public static String duplicateMessage(ArrayList\u003cTask\u003e duplicates) {","lastModifiedDate":"2024-02-25"},{"lineNumber":116,"author":{"gitId":"peterXGD"},"content":"        int i \u003d 1;","lastModifiedDate":"2024-02-25"},{"lineNumber":117,"author":{"gitId":"peterXGD"},"content":"        String output \u003d \"     Here are the duplicated tasks in your list:\\n\";","lastModifiedDate":"2024-02-25"},{"lineNumber":118,"author":{"gitId":"peterXGD"},"content":"        for (Task s : duplicates) {","lastModifiedDate":"2024-02-25"},{"lineNumber":119,"author":{"gitId":"peterXGD"},"content":"            output \u003d output + (\"     \" + i + \".\" + s + \"\\n\");","lastModifiedDate":"2024-02-25"},{"lineNumber":120,"author":{"gitId":"peterXGD"},"content":"            i++;","lastModifiedDate":"2024-02-25"},{"lineNumber":121,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":122,"author":{"gitId":"peterXGD"},"content":"        output \u003d output + \"     Please take note that these are the second occurrences and beyond\\n\";","lastModifiedDate":"2024-02-25"},{"lineNumber":123,"author":{"gitId":"peterXGD"},"content":"        output \u003d output + \"     You can delete specific list items using the delete command\";","lastModifiedDate":"2024-02-25"},{"lineNumber":124,"author":{"gitId":"peterXGD"},"content":"        return output;","lastModifiedDate":"2024-02-25"},{"lineNumber":125,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":126,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"peterXGD":126}},{"path":"src/main/java/venus/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"public class Launcher {","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"peterXGD":12}},{"path":"src/main/java/venus/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"    private Venus venus \u003d new Venus();","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setVenus(venus);","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"            stage.show();","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"peterXGD":31}},{"path":"src/main/java/venus/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"    private Venus venus;","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"    private Image userImage; //\u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"    private Image venusImage; //\u003d new Image(this.getClass().getResourceAsStream(\"/images/bot.jpeg\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"     * Constructor for main class that asserts user and bot images are there.","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"    public MainWindow() {","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"        super();","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"peterXGD"},"content":"        assert this.getClass().getResourceAsStream(\"/images/user.png\") !\u003d null","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"peterXGD"},"content":"                : \"User image not found!\";","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"peterXGD"},"content":"        assert this.getClass().getResourceAsStream(\"/images/bot.jpeg\") !\u003d null","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"peterXGD"},"content":"                : \"User image not found!\";","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"peterXGD"},"content":"        userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"peterXGD"},"content":"        venusImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bot.jpeg\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"peterXGD"},"content":"     * Initialize program and adds welcome message.","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"peterXGD"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"peterXGD"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"peterXGD"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"peterXGD"},"content":"        dialogContainer.getChildren().add(DialogBox.getVenusDialog(Gui.getStart(), venusImage));","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"peterXGD"},"content":"    public void setVenus(Venus v) {","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"peterXGD"},"content":"        venus \u003d v;","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"peterXGD"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"peterXGD"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"peterXGD"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"peterXGD"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"peterXGD"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"peterXGD"},"content":"        String response \u003d venus.getResponse(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"peterXGD"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"peterXGD"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"peterXGD"},"content":"                DialogBox.getVenusDialog(response, venusImage)","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"peterXGD"},"content":"        );","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"peterXGD"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"peterXGD":69}},{"path":"src/main/java/venus/OldUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":" * This is a Ui class the create Ui for messages i/o of program.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":" * @author peterXGD","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":" * @since 2024-02-05","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"public class OldUi {","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"    private static final String START \u003d","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"            \"    ____________________________________________________________\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"                    + \"    Hello! I\u0027m Venus\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"                    + \"    What can I do for you?\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"                    + \"    ____________________________________________________________\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"    private static final String END \u003d","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"            \"    ____________________________________________________________\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"                    + \"    Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"                    + \"    ____________________________________________________________\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"    private static final String BORDER \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"    public static void formatResponse(String message) {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"        System.out.println(BORDER + \"     \" + message + \"\\n\" + BORDER);","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"     * Return a message that says project marked.","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"     * @param task The task that is marked.","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"    public static void formatMark(Task task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"        OldUi.formatResponse(\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"peterXGD"},"content":"                + \"       \"","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"peterXGD"},"content":"                + task.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"peterXGD"},"content":"     * Returns a message that says project is unmarked.","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"peterXGD"},"content":"     * @param task The task that is unmarked.","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"peterXGD"},"content":"    public static void formatUnmark(Task task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"peterXGD"},"content":"        OldUi.formatResponse(\"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"peterXGD"},"content":"                + \"       \"","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"peterXGD"},"content":"                + task.toString());","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"peterXGD"},"content":"     * Returns a message that says project is marked.","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"peterXGD"},"content":"     * @param task The task added.","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"peterXGD"},"content":"     * @param size The size of the task that is formatted.","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"peterXGD"},"content":"    public static void formatTask(Task task, int size) {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"peterXGD"},"content":"        OldUi.formatResponse(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"peterXGD"},"content":"                + \"       \"","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"peterXGD"},"content":"                + task.toString()","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"peterXGD"},"content":"                + \"\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"peterXGD"},"content":"                + \"     Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"peterXGD"},"content":"     * Returns a message that says a project is removed.","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"peterXGD"},"content":"     * @param task The task to that is removed.","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"peterXGD"},"content":"     * @param size The size of the task list before remove.","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"peterXGD"},"content":"    public static void formatDelete(Task task, int size) {","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"peterXGD"},"content":"        OldUi.formatResponse(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"peterXGD"},"content":"                + \"       \"","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"peterXGD"},"content":"                + task.toString()","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"peterXGD"},"content":"                + \"\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"peterXGD"},"content":"                + \"     Now you have \" + (size - 1) + \" tasks in the list.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"peterXGD"},"content":"     * Returns all tasks in current project.","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"peterXGD"},"content":"     * @param tasks all the tasks in the Tasklist.","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"peterXGD"},"content":"    public static void printList(TaskList tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"peterXGD"},"content":"        int i \u003d 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"peterXGD"},"content":"        System.out.println(BORDER","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"peterXGD"},"content":"                + \"     Here are the tasks in your list:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"peterXGD"},"content":"        for (Task s : tasks.getTasks()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"peterXGD"},"content":"            System.out.println(\"     \" + i + \".\" + s);","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"peterXGD"},"content":"            i++;","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"peterXGD"},"content":"        System.out.println(BORDER);","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"peterXGD"},"content":"    public static String getStart() {","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"peterXGD"},"content":"        return START;","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"peterXGD"},"content":"    public static String getEnd() {","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"peterXGD"},"content":"        return END;","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":96,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":97,"author":{"gitId":"peterXGD"},"content":"     * Returns all the tasks in a list.","lastModifiedDate":"2024-02-22"},{"lineNumber":98,"author":{"gitId":"peterXGD"},"content":"     * @param items the list itself","lastModifiedDate":"2024-02-22"},{"lineNumber":99,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":100,"author":{"gitId":"peterXGD"},"content":"    public static void printFind(ArrayList\u003cString\u003e items) {","lastModifiedDate":"2024-02-05"},{"lineNumber":101,"author":{"gitId":"peterXGD"},"content":"        int i \u003d 1;","lastModifiedDate":"2024-02-05"},{"lineNumber":102,"author":{"gitId":"peterXGD"},"content":"        System.out.println(BORDER","lastModifiedDate":"2024-02-05"},{"lineNumber":103,"author":{"gitId":"peterXGD"},"content":"                + \"     Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-05"},{"lineNumber":104,"author":{"gitId":"peterXGD"},"content":"        for (String s : items) {","lastModifiedDate":"2024-02-05"},{"lineNumber":105,"author":{"gitId":"peterXGD"},"content":"            System.out.println(\"     \" + i + \".\" + s);","lastModifiedDate":"2024-02-05"},{"lineNumber":106,"author":{"gitId":"peterXGD"},"content":"            i++;","lastModifiedDate":"2024-02-05"},{"lineNumber":107,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":108,"author":{"gitId":"peterXGD"},"content":"        System.out.println(BORDER);","lastModifiedDate":"2024-02-05"},{"lineNumber":109,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":110,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"peterXGD":110}},{"path":"src/main/java/venus/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import java.io.File;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":" * This is a Parser class that make strings understandable for the task formatters.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":" * @author peterXGD","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":" * @since 2024-02-05","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"public class Parser {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"     * Returns TaskList.TYPES in TaskList class that returns given an input from console.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"     * @param input The input from console itself.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"     * @return TASKList.TYPES that determine what action is taken by method setTask in","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"     *          the TaskList class.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"     * @throws IllegalArgumentException If we have invalid input task type, this is then","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"     *                                   the exception is handled by the caller.","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"    public static TaskList.Types findType(String input) throws IllegalArgumentException {","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"        String[] listType \u003d input.toUpperCase().split(\" \");","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"        TaskList.Types type \u003d TaskList.Types.valueOf(listType[0]);","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"        boolean isAllType \u003d listType.length \u003d\u003d 1 \u0026\u0026 listType[0].equals(\"LIST\");","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"        if (isAllType) {","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"            type \u003d TaskList.Types.ALL;","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"        boolean isFindDuplicate \u003d listType.length \u003d\u003d 1 \u0026\u0026 listType[0].equals(\"DUPLICATE\");","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"        if (isFindDuplicate) {","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"            type \u003d TaskList.Types.DUPLICATE;","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"        return type;","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"peterXGD"},"content":"     * Returns an int that correspond to location of the item in TaskList instance.","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"peterXGD"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"peterXGD"},"content":"     * @param input Input to be parsed.","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"peterXGD"},"content":"     * @return Integer location of the item.","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"peterXGD"},"content":"    public static int findMarkIndex(String input) {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"peterXGD"},"content":"        return Integer.valueOf(input.substring(5)) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"peterXGD"},"content":"     * Returns an int that correspond to location of the item in TaskList instance.","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"peterXGD"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"peterXGD"},"content":"     * @param input Input to be parsed.","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"peterXGD"},"content":"     * @return Integer location of the item.","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"peterXGD"},"content":"    public static int findUnmarkIndex(String input) {","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"peterXGD"},"content":"        return Integer.valueOf(input.substring(7)) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"peterXGD"},"content":"     * Returns a string that finds content of Todo class.","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"peterXGD"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"peterXGD"},"content":"     * @param input Input to be parsed.","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"peterXGD"},"content":"     * @return String Todo content.","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"peterXGD"},"content":"    public static String findTodoContent(String input) {","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"peterXGD"},"content":"        return input.substring(5);","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"peterXGD"},"content":"     * Returns a string that finds content and date of Deadline class.","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"peterXGD"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"peterXGD"},"content":"     * @param input Input to be parsed.","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"peterXGD"},"content":"     * @return String array of Deadline content and time (unformatted).","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"peterXGD"},"content":"    public static String[] findDeadlineContent(String input) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"peterXGD"},"content":"        String dString \u003d input.substring(9);","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"peterXGD"},"content":"        String[] parts \u003d dString.split(File.separator + \"by\");","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"peterXGD"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"peterXGD"},"content":"            throw new DukeException(\"Incorrect, choose a specific deadline only please\");","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"peterXGD"},"content":"        parts[0] \u003d parts[0].trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"peterXGD"},"content":"        parts[1] \u003d parts[1].trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"peterXGD"},"content":"        return parts;","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"peterXGD"},"content":"     * Returns a string that finds content and dates of Event class.","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"peterXGD"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"peterXGD"},"content":"     * @param input Input to be parsed.","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"peterXGD"},"content":"     * @return String array of Event content, start and end time(unformatted).","lastModifiedDate":"2024-02-05"},{"lineNumber":87,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":88,"author":{"gitId":"peterXGD"},"content":"    public static String[] findEventParts(String input) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"peterXGD"},"content":"        String dString \u003d input.substring(6);","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"peterXGD"},"content":"        String[] parts \u003d dString.split(File.separator);","lastModifiedDate":"2024-02-05"},{"lineNumber":91,"author":{"gitId":"peterXGD"},"content":"        if (parts.length !\u003d 3) {","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"peterXGD"},"content":"            throw new DukeException(\"Incorrect arguments for events\");","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"peterXGD"},"content":"        for (int j \u003d 0; j \u003c 3; j++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"peterXGD"},"content":"            parts[j] \u003d parts[j].trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"peterXGD"},"content":"        return parts;","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":101,"author":{"gitId":"peterXGD"},"content":"     * Returns an int that finds index of content to be deleted.","lastModifiedDate":"2024-02-05"},{"lineNumber":102,"author":{"gitId":"peterXGD"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":103,"author":{"gitId":"peterXGD"},"content":"     * @param input Input to be parsed.","lastModifiedDate":"2024-02-05"},{"lineNumber":104,"author":{"gitId":"peterXGD"},"content":"     * @return To be deleted content location.","lastModifiedDate":"2024-02-05"},{"lineNumber":105,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":106,"author":{"gitId":"peterXGD"},"content":"    public static int findDeleteIndex(String input) {","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"peterXGD"},"content":"        return Integer.valueOf(input.substring(7)) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":110,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":111,"author":{"gitId":"peterXGD"},"content":"     * Returns a String that finds keyword of content to be listed.","lastModifiedDate":"2024-02-05"},{"lineNumber":112,"author":{"gitId":"peterXGD"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":113,"author":{"gitId":"peterXGD"},"content":"     * @param input Input to be parsed.","lastModifiedDate":"2024-02-05"},{"lineNumber":114,"author":{"gitId":"peterXGD"},"content":"     * @return Keyword to be used for search.","lastModifiedDate":"2024-02-05"},{"lineNumber":115,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":116,"author":{"gitId":"peterXGD"},"content":"    public static String findFindKeyword(String input) {","lastModifiedDate":"2024-02-05"},{"lineNumber":117,"author":{"gitId":"peterXGD"},"content":"        return input.substring(4).trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":118,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":119,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"peterXGD":119}},{"path":"src/main/java/venus/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import java.io.File;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":" * This is a Storage class that controls data to be stored or loaded from .txt data file.","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":" *","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":" * @author peterXGD","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":" * @since 2024-02-05","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"public class Storage {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"    private String filePath;","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"     * Returns Storage that help store or load content from a filepath relative to the project","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"     * structure.","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"     * @param filePath Relative filepath of data in project.","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"        File folder \u003d new File(filePath.split(File.separator)[0]);","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"        if (!folder.exists()) { // handling folder does not exist issues","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"            folder.mkdir();","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"            System.out.println(\"Folder does not exist, data folder is created\");","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"peterXGD"},"content":"        if (!Files.exists(Path.of(\"data\" + File.separator + \"venus.txt\"))) { // handling file does not exist","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"peterXGD"},"content":"            File f \u003d new File(\"data\" + File.separator + \"venus.txt\");","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"peterXGD"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"peterXGD"},"content":"     * Store a single line of task into file.","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"peterXGD"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"peterXGD"},"content":"     * @param textToAdd The toString() string of a task that is stored.","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"peterXGD"},"content":"     * @throws FileNotFoundException Throws exception when file cannot be found.","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"peterXGD"},"content":"    public void saveToFile(String textToAdd) throws FileNotFoundException {","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"peterXGD"},"content":"            FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"peterXGD"},"content":"            String amendedText \u003d changeToSaveString(textToAdd);","lastModifiedDate":"2024-02-25"},{"lineNumber":50,"author":{"gitId":"peterXGD"},"content":"            fw.write(System.lineSeparator() + amendedText);","lastModifiedDate":"2024-02-25"},{"lineNumber":51,"author":{"gitId":"peterXGD"},"content":"            fw.close();","lastModifiedDate":"2024-02-25"},{"lineNumber":52,"author":{"gitId":"peterXGD"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":53,"author":{"gitId":"peterXGD"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2024-02-25"},{"lineNumber":54,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"peterXGD"},"content":"    private static String changeToSaveString(String textToAdd) {","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"peterXGD"},"content":"        String amendedText \u003d textToAdd.replaceAll(\"\\\\[\\\\s\\\\]\", \"|0|\")","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"peterXGD"},"content":"                .replaceAll(\"\\\\[X\\\\]\", \"|1|\")","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"peterXGD"},"content":"                .replaceAll(\"\\\\[\", \"\")","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"peterXGD"},"content":"                .replaceAll(\"\\\\]\", \"\")","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"peterXGD"},"content":"                .replaceAll(\"\\\\(by:\", \"|\")","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"peterXGD"},"content":"                .replaceAll(\"\\\\)\", \"\")","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"peterXGD"},"content":"                .replaceAll(\"\\\\(from:\", \"|\")","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"peterXGD"},"content":"                .replaceAll(\"\\\\(to:\", \"|\")","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"peterXGD"},"content":"                .trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"peterXGD"},"content":"        return amendedText;","lastModifiedDate":"2024-02-25"},{"lineNumber":68,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"peterXGD"},"content":"     * Adds modified Tasks into the data location.","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"peterXGD"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"peterXGD"},"content":"     * @param data The TaskList. data to be accessed.","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"peterXGD"},"content":"     * @throws FileNotFoundException Throws exception when file cannot be found.","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"peterXGD"},"content":"    public void saveAllFile(ArrayList\u003cTask\u003e data) throws FileNotFoundException {","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"peterXGD"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"peterXGD"},"content":"            f.delete();","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"peterXGD"},"content":"            f.createNewFile();","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"peterXGD"},"content":"            FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"peterXGD"},"content":"            for (Task d : data) {","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"peterXGD"},"content":"                String amendedText \u003d changeToSaveString(d.toString());","lastModifiedDate":"2024-02-25"},{"lineNumber":84,"author":{"gitId":"peterXGD"},"content":"                fw.write(System.lineSeparator() + amendedText);","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"peterXGD"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"peterXGD"},"content":"            fw.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"peterXGD"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"peterXGD"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":93,"author":{"gitId":"peterXGD"},"content":"     * Loads file content into ArrayList ls.","lastModifiedDate":"2024-02-16"},{"lineNumber":94,"author":{"gitId":"peterXGD"},"content":"     * @param ls A place where data from txt file is loaded to.","lastModifiedDate":"2024-02-05"},{"lineNumber":95,"author":{"gitId":"peterXGD"},"content":"     * @throws FileNotFoundException Throws exception if file to be loaded cannot be found.","lastModifiedDate":"2024-02-05"},{"lineNumber":96,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":97,"author":{"gitId":"peterXGD"},"content":"    public void loadFile(ArrayList\u003cTask\u003e ls) {","lastModifiedDate":"2024-02-25"},{"lineNumber":98,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"peterXGD"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2024-02-25"},{"lineNumber":100,"author":{"gitId":"peterXGD"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-02-25"},{"lineNumber":101,"author":{"gitId":"peterXGD"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"peterXGD"},"content":"                String[] items \u003d s.nextLine().split(\"\\\\|\");","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"peterXGD"},"content":"                String type \u003d items[0].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"peterXGD"},"content":"                if (items.length \u003d\u003d 1) { // this is to handle the blank spaces","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"peterXGD"},"content":"                    continue;","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"peterXGD"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"peterXGD"},"content":"                if (type.equals(\"T\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"peterXGD"},"content":"                    handleTodo(ls, items);","lastModifiedDate":"2024-02-25"},{"lineNumber":109,"author":{"gitId":"peterXGD"},"content":"                } else if (type.equals(\"D\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"peterXGD"},"content":"                    handleDelete(ls, items);","lastModifiedDate":"2024-02-25"},{"lineNumber":111,"author":{"gitId":"peterXGD"},"content":"                } else if (type.equals(\"E\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"peterXGD"},"content":"                    handleEvent(ls, items);","lastModifiedDate":"2024-02-25"},{"lineNumber":113,"author":{"gitId":"peterXGD"},"content":"                } else { //continue if file is corrupted or at the first line","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"peterXGD"},"content":"                    continue;","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"peterXGD"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"peterXGD"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"peterXGD"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"peterXGD"},"content":"            OldUi.formatResponse(\"File is not found! \" + e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"peterXGD"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"peterXGD"},"content":"            OldUi.formatResponse(\"Invalid date time input or format, please try again\");","lastModifiedDate":"2024-02-22"},{"lineNumber":121,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"peterXGD"},"content":"    private static void handleEvent(ArrayList\u003cTask\u003e ls, String[] items) {","lastModifiedDate":"2024-02-25"},{"lineNumber":125,"author":{"gitId":"peterXGD"},"content":"        boolean b \u003d Integer.parseInt(items[1].trim()) \u003d\u003d 1;","lastModifiedDate":"2024-02-25"},{"lineNumber":126,"author":{"gitId":"peterXGD"},"content":"        String[] times \u003d items[3].split(\"to:\");","lastModifiedDate":"2024-02-25"},{"lineNumber":127,"author":{"gitId":"peterXGD"},"content":"        ls.add(new Event(items[2].trim(), b, times[0].trim(), times[1].trim(), true));","lastModifiedDate":"2024-02-25"},{"lineNumber":128,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":129,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":130,"author":{"gitId":"peterXGD"},"content":"    private static void handleDelete(ArrayList\u003cTask\u003e ls, String[] items) {","lastModifiedDate":"2024-02-25"},{"lineNumber":131,"author":{"gitId":"peterXGD"},"content":"        boolean b \u003d Integer.parseInt(items[1].trim()) \u003d\u003d 1;","lastModifiedDate":"2024-02-25"},{"lineNumber":132,"author":{"gitId":"peterXGD"},"content":"        ls.add(new Deadline(items[2].trim(), b, items[3].trim()));","lastModifiedDate":"2024-02-25"},{"lineNumber":133,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":134,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":135,"author":{"gitId":"peterXGD"},"content":"    private static void handleTodo(ArrayList\u003cTask\u003e ls, String[] items) {","lastModifiedDate":"2024-02-25"},{"lineNumber":136,"author":{"gitId":"peterXGD"},"content":"        boolean b \u003d Integer.parseInt(items[1].trim()) \u003d\u003d 1;","lastModifiedDate":"2024-02-25"},{"lineNumber":137,"author":{"gitId":"peterXGD"},"content":"        ls.add(new Todo(items[2].trim(), b));","lastModifiedDate":"2024-02-25"},{"lineNumber":138,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":139,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":140,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"peterXGD":140}},{"path":"src/main/java/venus/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":" * This is a Task class that is used to save tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":" * @author peterXGD","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":" * @since 2024-02-05","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"public class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"    private String item;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"    private boolean markBoolean;","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"     * Returns Task that saves given item string and mark as false.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"     * @param item String representation of task.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"    public Task(String item) {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"        super();","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"        this.markBoolean \u003d false;","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"        this.item \u003d item;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"    public void mark() {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"        this.markBoolean \u003d true;","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"        this.markBoolean \u003d false;","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"peterXGD"},"content":"    public boolean getMark() {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"peterXGD"},"content":"        return markBoolean;","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"peterXGD"},"content":"    public String getItem() {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"peterXGD"},"content":"        return item;","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"peterXGD"},"content":"     * Returns string of Task with mark indication in front.","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"peterXGD"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"peterXGD"},"content":"     * @return Task string.","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"peterXGD"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"peterXGD"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"peterXGD"},"content":"        String x \u003d (markBoolean) ? \"X\" : \" \";","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"peterXGD"},"content":"        return (\"[\" + x + \"] \" + item);","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"peterXGD":51}},{"path":"src/main/java/venus/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-02-25"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":" * This is a TaskList class that is used to save tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":" * @author peterXGD","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":" * @since 2024-02-05","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"public class TaskList {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"     * Enums that are used to identify Tasks","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"    public enum Types { //Used for type of list encountered","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"        LIST, TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, ALL, INVALID, FIND, DUPLICATE;","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"     * Loads task into TaskList instance with a Storage with the right path.","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"     * @param storage Storage with the correct relative data path.","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"     * @throws FileNotFoundException Throws exception when the file cannot be found.","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"    public void loadTasks(Storage storage) throws FileNotFoundException {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"        storage.loadFile(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"peterXGD"},"content":"     * Save task into data file with a Storage with the right path.","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"peterXGD"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"peterXGD"},"content":"     * @param storage Storage with the correct relative data path.","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"peterXGD"},"content":"     * @throws FileNotFoundException Throws exception when the file cannot be found.","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"peterXGD"},"content":"    public void saveTasks(Storage storage) throws FileNotFoundException {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"peterXGD"},"content":"        storage.saveAllFile(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"peterXGD"},"content":"     * Returns tasks stored as ArrayList in TaskList.","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"peterXGD"},"content":"     * @return ArrayList of tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"peterXGD"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"peterXGD"},"content":"        return tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"peterXGD"},"content":"     * Sets the tasks in TaskList according to input in form of string for old CMD code.","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"peterXGD"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"peterXGD"},"content":"     * @param word Input string to be used to set Tasks in TaskList.","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"peterXGD"},"content":"    public void setTasks(String word) {","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"peterXGD"},"content":"        ArrayList\u003cTask\u003e data \u003d this.tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"peterXGD"},"content":"        Types type \u003d getTypeOld(word);","lastModifiedDate":"2024-02-25"},{"lineNumber":61,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"peterXGD"},"content":"        switch (type) {","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"peterXGD"},"content":"        case ALL:","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"peterXGD"},"content":"            OldUi.printList(this);","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"peterXGD"},"content":"            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"peterXGD"},"content":"        case MARK:","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"peterXGD"},"content":"            handleMarkOld(word);","lastModifiedDate":"2024-02-25"},{"lineNumber":68,"author":{"gitId":"peterXGD"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":69,"author":{"gitId":"peterXGD"},"content":"        case UNMARK:","lastModifiedDate":"2024-02-25"},{"lineNumber":70,"author":{"gitId":"peterXGD"},"content":"            handleUnmarkOld(word);","lastModifiedDate":"2024-02-25"},{"lineNumber":71,"author":{"gitId":"peterXGD"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":72,"author":{"gitId":"peterXGD"},"content":"        case TODO:","lastModifiedDate":"2024-02-25"},{"lineNumber":73,"author":{"gitId":"peterXGD"},"content":"            handleTodoOld(word, data);","lastModifiedDate":"2024-02-25"},{"lineNumber":74,"author":{"gitId":"peterXGD"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":75,"author":{"gitId":"peterXGD"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-25"},{"lineNumber":76,"author":{"gitId":"peterXGD"},"content":"            handleDeadlineOld(word, data);","lastModifiedDate":"2024-02-25"},{"lineNumber":77,"author":{"gitId":"peterXGD"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":78,"author":{"gitId":"peterXGD"},"content":"        case EVENT:","lastModifiedDate":"2024-02-25"},{"lineNumber":79,"author":{"gitId":"peterXGD"},"content":"            handleEventOld(word, data);","lastModifiedDate":"2024-02-25"},{"lineNumber":80,"author":{"gitId":"peterXGD"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":81,"author":{"gitId":"peterXGD"},"content":"        case DELETE:","lastModifiedDate":"2024-02-25"},{"lineNumber":82,"author":{"gitId":"peterXGD"},"content":"            handleDeleteOld(word, data);","lastModifiedDate":"2024-02-25"},{"lineNumber":83,"author":{"gitId":"peterXGD"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":84,"author":{"gitId":"peterXGD"},"content":"        case INVALID:","lastModifiedDate":"2024-02-25"},{"lineNumber":85,"author":{"gitId":"peterXGD"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":86,"author":{"gitId":"peterXGD"},"content":"        case FIND:","lastModifiedDate":"2024-02-25"},{"lineNumber":87,"author":{"gitId":"peterXGD"},"content":"            handleFindOld(word, data);","lastModifiedDate":"2024-02-25"},{"lineNumber":88,"author":{"gitId":"peterXGD"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":89,"author":{"gitId":"peterXGD"},"content":"        default:","lastModifiedDate":"2024-02-25"},{"lineNumber":90,"author":{"gitId":"peterXGD"},"content":"            OldUi.formatResponse(\"Unknown command, please try again\");","lastModifiedDate":"2024-02-25"},{"lineNumber":91,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":92,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":93,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":94,"author":{"gitId":"peterXGD"},"content":"    private static void handleFindOld(String word, ArrayList\u003cTask\u003e data) {","lastModifiedDate":"2024-02-25"},{"lineNumber":95,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"peterXGD"},"content":"            String keyword \u003d Parser.findFindKeyword(word);","lastModifiedDate":"2024-02-25"},{"lineNumber":97,"author":{"gitId":"peterXGD"},"content":"            ArrayList\u003cString\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-25"},{"lineNumber":98,"author":{"gitId":"peterXGD"},"content":"            for (int i \u003d 0; i \u003c data.size(); i++) {","lastModifiedDate":"2024-02-25"},{"lineNumber":99,"author":{"gitId":"peterXGD"},"content":"                if (data.get(i).getItem().contains(keyword)) {","lastModifiedDate":"2024-02-25"},{"lineNumber":100,"author":{"gitId":"peterXGD"},"content":"                    items.add(data.get(i).toString());","lastModifiedDate":"2024-02-25"},{"lineNumber":101,"author":{"gitId":"peterXGD"},"content":"                }","lastModifiedDate":"2024-02-25"},{"lineNumber":102,"author":{"gitId":"peterXGD"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":103,"author":{"gitId":"peterXGD"},"content":"            OldUi.printFind(items);","lastModifiedDate":"2024-02-25"},{"lineNumber":104,"author":{"gitId":"peterXGD"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"peterXGD"},"content":"            OldUi.formatResponse(\"Incorrect argument for find, please check.\");","lastModifiedDate":"2024-02-25"},{"lineNumber":106,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":108,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":109,"author":{"gitId":"peterXGD"},"content":"    private static void handleDeleteOld(String word, ArrayList\u003cTask\u003e data) {","lastModifiedDate":"2024-02-25"},{"lineNumber":110,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"peterXGD"},"content":"            int index \u003d Parser.findDeleteIndex(word);","lastModifiedDate":"2024-02-25"},{"lineNumber":112,"author":{"gitId":"peterXGD"},"content":"            OldUi.formatDelete(data.get(index), data.size());","lastModifiedDate":"2024-02-25"},{"lineNumber":113,"author":{"gitId":"peterXGD"},"content":"            data.remove(index);","lastModifiedDate":"2024-02-25"},{"lineNumber":114,"author":{"gitId":"peterXGD"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"peterXGD"},"content":"            OldUi.formatResponse(\"Incorrect name or spelling for delete, please check\");","lastModifiedDate":"2024-02-25"},{"lineNumber":116,"author":{"gitId":"peterXGD"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"peterXGD"},"content":"            OldUi.formatResponse(\"Incorrect arguments for delete, please check\");","lastModifiedDate":"2024-02-25"},{"lineNumber":118,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":120,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":121,"author":{"gitId":"peterXGD"},"content":"    private static void handleEventOld(String word, ArrayList\u003cTask\u003e data) {","lastModifiedDate":"2024-02-25"},{"lineNumber":122,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"peterXGD"},"content":"            String[] eventParts \u003d Parser.findEventParts(word);","lastModifiedDate":"2024-02-25"},{"lineNumber":124,"author":{"gitId":"peterXGD"},"content":"            Event event \u003d new Event(eventParts[0], eventParts[1], eventParts[2]);","lastModifiedDate":"2024-02-25"},{"lineNumber":125,"author":{"gitId":"peterXGD"},"content":"            data.add(event);","lastModifiedDate":"2024-02-25"},{"lineNumber":126,"author":{"gitId":"peterXGD"},"content":"            OldUi.formatTask(event, data.size());","lastModifiedDate":"2024-02-25"},{"lineNumber":127,"author":{"gitId":"peterXGD"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":128,"author":{"gitId":"peterXGD"},"content":"            OldUi.formatResponse(e.getMessage());","lastModifiedDate":"2024-02-25"},{"lineNumber":129,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":130,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":131,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":132,"author":{"gitId":"peterXGD"},"content":"    private static void handleDeadlineOld(String word, ArrayList\u003cTask\u003e data) {","lastModifiedDate":"2024-02-25"},{"lineNumber":133,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":134,"author":{"gitId":"peterXGD"},"content":"            String[] deadlineParts \u003d Parser.findDeadlineContent(word);","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"peterXGD"},"content":"            Deadline deadline \u003d new Deadline(deadlineParts[0], deadlineParts[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"peterXGD"},"content":"            data.add(deadline);","lastModifiedDate":"2024-02-04"},{"lineNumber":137,"author":{"gitId":"peterXGD"},"content":"            OldUi.formatTask(deadline, data.size());","lastModifiedDate":"2024-02-22"},{"lineNumber":138,"author":{"gitId":"peterXGD"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":139,"author":{"gitId":"peterXGD"},"content":"            OldUi.formatResponse(e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":140,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":141,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":142,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":143,"author":{"gitId":"peterXGD"},"content":"    private static void handleTodoOld(String word, ArrayList\u003cTask\u003e data) {","lastModifiedDate":"2024-02-25"},{"lineNumber":144,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":145,"author":{"gitId":"peterXGD"},"content":"            String todoMessage \u003d Parser.findTodoContent(word);","lastModifiedDate":"2024-02-25"},{"lineNumber":146,"author":{"gitId":"peterXGD"},"content":"            Todo todo \u003d new Todo(todoMessage);","lastModifiedDate":"2024-02-25"},{"lineNumber":147,"author":{"gitId":"peterXGD"},"content":"            data.add(todo);","lastModifiedDate":"2024-02-25"},{"lineNumber":148,"author":{"gitId":"peterXGD"},"content":"            OldUi.formatTask(todo, data.size());","lastModifiedDate":"2024-02-25"},{"lineNumber":149,"author":{"gitId":"peterXGD"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":150,"author":{"gitId":"peterXGD"},"content":"            OldUi.formatResponse(\"Incorrect arguments for todo, please check\");","lastModifiedDate":"2024-02-25"},{"lineNumber":151,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":152,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":153,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":154,"author":{"gitId":"peterXGD"},"content":"    private void handleUnmarkOld(String word) {","lastModifiedDate":"2024-02-25"},{"lineNumber":155,"author":{"gitId":"peterXGD"},"content":"        ArrayList\u003cTask\u003e data \u003d this.tasks;","lastModifiedDate":"2024-02-25"},{"lineNumber":156,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":157,"author":{"gitId":"peterXGD"},"content":"            int index \u003d Parser.findUnmarkIndex(word);","lastModifiedDate":"2024-02-25"},{"lineNumber":158,"author":{"gitId":"peterXGD"},"content":"            data.get(index).unmark();","lastModifiedDate":"2024-02-25"},{"lineNumber":159,"author":{"gitId":"peterXGD"},"content":"            OldUi.formatUnmark(data.get(index));","lastModifiedDate":"2024-02-25"},{"lineNumber":160,"author":{"gitId":"peterXGD"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":161,"author":{"gitId":"peterXGD"},"content":"            OldUi.formatResponse(\"Incorrect name or spelling for unmark, please check\");","lastModifiedDate":"2024-02-25"},{"lineNumber":162,"author":{"gitId":"peterXGD"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":163,"author":{"gitId":"peterXGD"},"content":"            OldUi.formatResponse(\"Incorrect arguments for unmark, please check\");","lastModifiedDate":"2024-02-25"},{"lineNumber":164,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":165,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":166,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":167,"author":{"gitId":"peterXGD"},"content":"    private Types getTypeOld(String word) {","lastModifiedDate":"2024-02-25"},{"lineNumber":168,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":169,"author":{"gitId":"peterXGD"},"content":"            return Parser.findType(word);","lastModifiedDate":"2024-02-25"},{"lineNumber":170,"author":{"gitId":"peterXGD"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":171,"author":{"gitId":"peterXGD"},"content":"            OldUi.formatResponse(\"Input task type invalid, please try again\");","lastModifiedDate":"2024-02-25"},{"lineNumber":172,"author":{"gitId":"peterXGD"},"content":"            return Types.INVALID;","lastModifiedDate":"2024-02-25"},{"lineNumber":173,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":174,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":175,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":176,"author":{"gitId":"peterXGD"},"content":"    private void handleMarkOld(String word) {","lastModifiedDate":"2024-02-25"},{"lineNumber":177,"author":{"gitId":"peterXGD"},"content":"        ArrayList\u003cTask\u003e data \u003d this.tasks;","lastModifiedDate":"2024-02-25"},{"lineNumber":178,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-25"},{"lineNumber":179,"author":{"gitId":"peterXGD"},"content":"            int index \u003d Parser.findMarkIndex(word);","lastModifiedDate":"2024-02-25"},{"lineNumber":180,"author":{"gitId":"peterXGD"},"content":"            data.get(index).mark();","lastModifiedDate":"2024-02-25"},{"lineNumber":181,"author":{"gitId":"peterXGD"},"content":"            OldUi.formatMark(data.get(index));","lastModifiedDate":"2024-02-25"},{"lineNumber":182,"author":{"gitId":"peterXGD"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":183,"author":{"gitId":"peterXGD"},"content":"            OldUi.formatResponse(\"Incorrect name or spelling for mark, please check\");","lastModifiedDate":"2024-02-25"},{"lineNumber":184,"author":{"gitId":"peterXGD"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":185,"author":{"gitId":"peterXGD"},"content":"            OldUi.formatResponse(\"Incorrect arguments for mark, please check\");","lastModifiedDate":"2024-02-25"},{"lineNumber":186,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":187,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":188,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":189,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":190,"author":{"gitId":"peterXGD"},"content":"     * Set tasks like setTasks and return the message as string for GUI.","lastModifiedDate":"2024-02-22"},{"lineNumber":191,"author":{"gitId":"peterXGD"},"content":"     * @param word Input string to be used to set Tasks in TaskList.","lastModifiedDate":"2024-02-22"},{"lineNumber":192,"author":{"gitId":"peterXGD"},"content":"     * @return a string that is returned to the user.","lastModifiedDate":"2024-02-22"},{"lineNumber":193,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":194,"author":{"gitId":"peterXGD"},"content":"    public String setTasksReturnMessage(String word) {","lastModifiedDate":"2024-02-22"},{"lineNumber":195,"author":{"gitId":"peterXGD"},"content":"        ArrayList\u003cTask\u003e data \u003d this.tasks;","lastModifiedDate":"2024-02-22"},{"lineNumber":196,"author":{"gitId":"peterXGD"},"content":"        Types type;","lastModifiedDate":"2024-02-22"},{"lineNumber":197,"author":{"gitId":"peterXGD"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":198,"author":{"gitId":"peterXGD"},"content":"        //Handle invalid input here and return immediately.","lastModifiedDate":"2024-02-25"},{"lineNumber":199,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":200,"author":{"gitId":"peterXGD"},"content":"            type \u003d Parser.findType(word);","lastModifiedDate":"2024-02-22"},{"lineNumber":201,"author":{"gitId":"peterXGD"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":202,"author":{"gitId":"peterXGD"},"content":"            output \u003d Gui.formatResponse(\"Input task type invalid, please try again\");","lastModifiedDate":"2024-02-22"},{"lineNumber":203,"author":{"gitId":"peterXGD"},"content":"            return output;","lastModifiedDate":"2024-02-22"},{"lineNumber":204,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":205,"author":{"gitId":"peterXGD"},"content":"        switch (type) {","lastModifiedDate":"2024-02-22"},{"lineNumber":206,"author":{"gitId":"peterXGD"},"content":"        case DUPLICATE:","lastModifiedDate":"2024-02-25"},{"lineNumber":207,"author":{"gitId":"peterXGD"},"content":"            output \u003d handleFindDuplicate(word, data);","lastModifiedDate":"2024-02-25"},{"lineNumber":208,"author":{"gitId":"peterXGD"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":209,"author":{"gitId":"peterXGD"},"content":"        case ALL:","lastModifiedDate":"2024-02-22"},{"lineNumber":210,"author":{"gitId":"peterXGD"},"content":"            output \u003d Gui.allTasksMessage(this);","lastModifiedDate":"2024-02-22"},{"lineNumber":211,"author":{"gitId":"peterXGD"},"content":"            break;","lastModifiedDate":"2024-02-22"},{"lineNumber":212,"author":{"gitId":"peterXGD"},"content":"        case MARK:","lastModifiedDate":"2024-02-22"},{"lineNumber":213,"author":{"gitId":"peterXGD"},"content":"            output \u003d handleMark(word, data);","lastModifiedDate":"2024-02-25"},{"lineNumber":214,"author":{"gitId":"peterXGD"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":215,"author":{"gitId":"peterXGD"},"content":"        case UNMARK:","lastModifiedDate":"2024-02-25"},{"lineNumber":216,"author":{"gitId":"peterXGD"},"content":"            output \u003d handleUnmark(word, data);","lastModifiedDate":"2024-02-25"},{"lineNumber":217,"author":{"gitId":"peterXGD"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":218,"author":{"gitId":"peterXGD"},"content":"        case TODO:","lastModifiedDate":"2024-02-25"},{"lineNumber":219,"author":{"gitId":"peterXGD"},"content":"            output \u003d handleTodo(word, data);","lastModifiedDate":"2024-02-25"},{"lineNumber":220,"author":{"gitId":"peterXGD"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":221,"author":{"gitId":"peterXGD"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-25"},{"lineNumber":222,"author":{"gitId":"peterXGD"},"content":"            output \u003d handleDeadline(word, data);","lastModifiedDate":"2024-02-25"},{"lineNumber":223,"author":{"gitId":"peterXGD"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":224,"author":{"gitId":"peterXGD"},"content":"        case EVENT:","lastModifiedDate":"2024-02-25"},{"lineNumber":225,"author":{"gitId":"peterXGD"},"content":"            output \u003d handleEvent(word, data);","lastModifiedDate":"2024-02-25"},{"lineNumber":226,"author":{"gitId":"peterXGD"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":227,"author":{"gitId":"peterXGD"},"content":"        case DELETE:","lastModifiedDate":"2024-02-25"},{"lineNumber":228,"author":{"gitId":"peterXGD"},"content":"            output \u003d handleDelete(word, data);","lastModifiedDate":"2024-02-25"},{"lineNumber":229,"author":{"gitId":"peterXGD"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":230,"author":{"gitId":"peterXGD"},"content":"        case FIND:","lastModifiedDate":"2024-02-25"},{"lineNumber":231,"author":{"gitId":"peterXGD"},"content":"            output \u003d handleFind(word, data);","lastModifiedDate":"2024-02-25"},{"lineNumber":232,"author":{"gitId":"peterXGD"},"content":"            break;","lastModifiedDate":"2024-02-25"},{"lineNumber":233,"author":{"gitId":"peterXGD"},"content":"        default:","lastModifiedDate":"2024-02-25"},{"lineNumber":234,"author":{"gitId":"peterXGD"},"content":"            output \u003d Gui.formatResponse(\"Unknown command, please try again\");","lastModifiedDate":"2024-02-25"},{"lineNumber":235,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":236,"author":{"gitId":"peterXGD"},"content":"        return output;","lastModifiedDate":"2024-02-25"},{"lineNumber":237,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":238,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":239,"author":{"gitId":"peterXGD"},"content":"    private String handleFindDuplicate(String word, ArrayList\u003cTask\u003e data) {","lastModifiedDate":"2024-02-25"},{"lineNumber":240,"author":{"gitId":"peterXGD"},"content":"        String output;","lastModifiedDate":"2024-02-25"},{"lineNumber":241,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-25"},{"lineNumber":242,"author":{"gitId":"peterXGD"},"content":"            String keyword \u003d Parser.findFindKeyword(word);","lastModifiedDate":"2024-02-25"},{"lineNumber":243,"author":{"gitId":"peterXGD"},"content":"            HashSet\u003cString\u003e itemsTracked \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-02-25"},{"lineNumber":244,"author":{"gitId":"peterXGD"},"content":"            ArrayList\u003cTask\u003e duplicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-25"},{"lineNumber":245,"author":{"gitId":"peterXGD"},"content":"            for (Task t: data) {","lastModifiedDate":"2024-02-25"},{"lineNumber":246,"author":{"gitId":"peterXGD"},"content":"                boolean isDuplicated \u003d !itemsTracked.add(t.getItem());","lastModifiedDate":"2024-02-25"},{"lineNumber":247,"author":{"gitId":"peterXGD"},"content":"                if (isDuplicated) {","lastModifiedDate":"2024-02-25"},{"lineNumber":248,"author":{"gitId":"peterXGD"},"content":"                    duplicates.add(t);","lastModifiedDate":"2024-02-25"},{"lineNumber":249,"author":{"gitId":"peterXGD"},"content":"                }","lastModifiedDate":"2024-02-25"},{"lineNumber":250,"author":{"gitId":"peterXGD"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":251,"author":{"gitId":"peterXGD"},"content":"            output \u003d Gui.duplicateMessage(duplicates);","lastModifiedDate":"2024-02-25"},{"lineNumber":252,"author":{"gitId":"peterXGD"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":253,"author":{"gitId":"peterXGD"},"content":"            output \u003d Gui.formatResponse(\"Incorrect argument for finding duplicates, please check.\");","lastModifiedDate":"2024-02-25"},{"lineNumber":254,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":255,"author":{"gitId":"peterXGD"},"content":"        return output;","lastModifiedDate":"2024-02-25"},{"lineNumber":256,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":257,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":258,"author":{"gitId":"peterXGD"},"content":"    private static String handleFind(String word, ArrayList\u003cTask\u003e data) {","lastModifiedDate":"2024-02-25"},{"lineNumber":259,"author":{"gitId":"peterXGD"},"content":"        String output;","lastModifiedDate":"2024-02-25"},{"lineNumber":260,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":261,"author":{"gitId":"peterXGD"},"content":"            String keyword \u003d Parser.findFindKeyword(word);","lastModifiedDate":"2024-02-25"},{"lineNumber":262,"author":{"gitId":"peterXGD"},"content":"            ArrayList\u003cString\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-25"},{"lineNumber":263,"author":{"gitId":"peterXGD"},"content":"            for (int i \u003d 0; i \u003c data.size(); i++) {","lastModifiedDate":"2024-02-25"},{"lineNumber":264,"author":{"gitId":"peterXGD"},"content":"                if (data.get(i).getItem().contains(keyword)) {","lastModifiedDate":"2024-02-25"},{"lineNumber":265,"author":{"gitId":"peterXGD"},"content":"                    items.add(data.get(i).toString());","lastModifiedDate":"2024-02-25"},{"lineNumber":266,"author":{"gitId":"peterXGD"},"content":"                }","lastModifiedDate":"2024-02-25"},{"lineNumber":267,"author":{"gitId":"peterXGD"},"content":"            }","lastModifiedDate":"2024-02-25"},{"lineNumber":268,"author":{"gitId":"peterXGD"},"content":"            output \u003d Gui.findMessage(items);","lastModifiedDate":"2024-02-25"},{"lineNumber":269,"author":{"gitId":"peterXGD"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":270,"author":{"gitId":"peterXGD"},"content":"            output \u003d Gui.formatResponse(\"Incorrect argument for find, please check.\");","lastModifiedDate":"2024-02-25"},{"lineNumber":271,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":272,"author":{"gitId":"peterXGD"},"content":"        return output;","lastModifiedDate":"2024-02-25"},{"lineNumber":273,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":274,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":275,"author":{"gitId":"peterXGD"},"content":"    private static String handleDelete(String word, ArrayList\u003cTask\u003e data) {","lastModifiedDate":"2024-02-25"},{"lineNumber":276,"author":{"gitId":"peterXGD"},"content":"        String output;","lastModifiedDate":"2024-02-25"},{"lineNumber":277,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":278,"author":{"gitId":"peterXGD"},"content":"            int index \u003d Parser.findDeleteIndex(word);","lastModifiedDate":"2024-02-25"},{"lineNumber":279,"author":{"gitId":"peterXGD"},"content":"            output \u003d Gui.deleteTaskMessage(data.get(index), data.size());","lastModifiedDate":"2024-02-25"},{"lineNumber":280,"author":{"gitId":"peterXGD"},"content":"            data.remove(index);","lastModifiedDate":"2024-02-25"},{"lineNumber":281,"author":{"gitId":"peterXGD"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":282,"author":{"gitId":"peterXGD"},"content":"            output \u003d Gui.formatResponse(\"Incorrect name or spelling for delete, please check\");","lastModifiedDate":"2024-02-25"},{"lineNumber":283,"author":{"gitId":"peterXGD"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":284,"author":{"gitId":"peterXGD"},"content":"            output \u003d Gui.formatResponse(\"Incorrect arguments for delete, please check\");","lastModifiedDate":"2024-02-25"},{"lineNumber":285,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":286,"author":{"gitId":"peterXGD"},"content":"        return output;","lastModifiedDate":"2024-02-25"},{"lineNumber":287,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":288,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":289,"author":{"gitId":"peterXGD"},"content":"    private static String handleEvent(String word, ArrayList\u003cTask\u003e data) {","lastModifiedDate":"2024-02-25"},{"lineNumber":290,"author":{"gitId":"peterXGD"},"content":"        String output;","lastModifiedDate":"2024-02-25"},{"lineNumber":291,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":292,"author":{"gitId":"peterXGD"},"content":"            String[] eventParts \u003d Parser.findEventParts(word);","lastModifiedDate":"2024-02-25"},{"lineNumber":293,"author":{"gitId":"peterXGD"},"content":"            Event event \u003d new Event(eventParts[0], eventParts[1], eventParts[2]);","lastModifiedDate":"2024-02-25"},{"lineNumber":294,"author":{"gitId":"peterXGD"},"content":"            data.add(event);","lastModifiedDate":"2024-02-25"},{"lineNumber":295,"author":{"gitId":"peterXGD"},"content":"            output \u003d Gui.addTaskMessage(event, data.size());","lastModifiedDate":"2024-02-25"},{"lineNumber":296,"author":{"gitId":"peterXGD"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":297,"author":{"gitId":"peterXGD"},"content":"            output \u003d Gui.formatResponse(e.getMessage());","lastModifiedDate":"2024-02-25"},{"lineNumber":298,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":299,"author":{"gitId":"peterXGD"},"content":"        return output;","lastModifiedDate":"2024-02-25"},{"lineNumber":300,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":301,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":302,"author":{"gitId":"peterXGD"},"content":"    private static String handleDeadline(String word, ArrayList\u003cTask\u003e data) {","lastModifiedDate":"2024-02-25"},{"lineNumber":303,"author":{"gitId":"peterXGD"},"content":"        String output;","lastModifiedDate":"2024-02-25"},{"lineNumber":304,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":305,"author":{"gitId":"peterXGD"},"content":"            String[] deadlineParts \u003d Parser.findDeadlineContent(word);","lastModifiedDate":"2024-02-22"},{"lineNumber":306,"author":{"gitId":"peterXGD"},"content":"            Deadline deadline \u003d new Deadline(deadlineParts[0], deadlineParts[1]);","lastModifiedDate":"2024-02-22"},{"lineNumber":307,"author":{"gitId":"peterXGD"},"content":"            data.add(deadline);","lastModifiedDate":"2024-02-22"},{"lineNumber":308,"author":{"gitId":"peterXGD"},"content":"            output \u003d Gui.addTaskMessage(deadline, data.size());","lastModifiedDate":"2024-02-22"},{"lineNumber":309,"author":{"gitId":"peterXGD"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":310,"author":{"gitId":"peterXGD"},"content":"            output \u003d Gui.formatResponse(e.getMessage());","lastModifiedDate":"2024-02-22"},{"lineNumber":311,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":312,"author":{"gitId":"peterXGD"},"content":"        return output;","lastModifiedDate":"2024-02-25"},{"lineNumber":313,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":314,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":315,"author":{"gitId":"peterXGD"},"content":"    private static String handleTodo(String word, ArrayList\u003cTask\u003e data) {","lastModifiedDate":"2024-02-25"},{"lineNumber":316,"author":{"gitId":"peterXGD"},"content":"        String output;","lastModifiedDate":"2024-02-25"},{"lineNumber":317,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":318,"author":{"gitId":"peterXGD"},"content":"            String todoMessage \u003d Parser.findTodoContent(word);","lastModifiedDate":"2024-02-25"},{"lineNumber":319,"author":{"gitId":"peterXGD"},"content":"            Todo todo \u003d new Todo(todoMessage);","lastModifiedDate":"2024-02-25"},{"lineNumber":320,"author":{"gitId":"peterXGD"},"content":"            data.add(todo);","lastModifiedDate":"2024-02-25"},{"lineNumber":321,"author":{"gitId":"peterXGD"},"content":"            output \u003d Gui.addTaskMessage(todo, data.size());","lastModifiedDate":"2024-02-25"},{"lineNumber":322,"author":{"gitId":"peterXGD"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":323,"author":{"gitId":"peterXGD"},"content":"            output \u003d Gui.formatResponse(\"Incorrect arguments for todo, please check\");","lastModifiedDate":"2024-02-25"},{"lineNumber":324,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":325,"author":{"gitId":"peterXGD"},"content":"        return output;","lastModifiedDate":"2024-02-25"},{"lineNumber":326,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":327,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":328,"author":{"gitId":"peterXGD"},"content":"    private static String handleUnmark(String word, ArrayList\u003cTask\u003e data) {","lastModifiedDate":"2024-02-25"},{"lineNumber":329,"author":{"gitId":"peterXGD"},"content":"        String output;","lastModifiedDate":"2024-02-25"},{"lineNumber":330,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":331,"author":{"gitId":"peterXGD"},"content":"            int index \u003d Parser.findUnmarkIndex(word);","lastModifiedDate":"2024-02-25"},{"lineNumber":332,"author":{"gitId":"peterXGD"},"content":"            data.get(index).unmark();","lastModifiedDate":"2024-02-25"},{"lineNumber":333,"author":{"gitId":"peterXGD"},"content":"            output \u003d Gui.unmarkMessage(data.get(index));","lastModifiedDate":"2024-02-25"},{"lineNumber":334,"author":{"gitId":"peterXGD"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":335,"author":{"gitId":"peterXGD"},"content":"            output \u003d Gui.formatResponse(\"Incorrect name or spelling for unmark, please check\");","lastModifiedDate":"2024-02-25"},{"lineNumber":336,"author":{"gitId":"peterXGD"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":337,"author":{"gitId":"peterXGD"},"content":"            output \u003d Gui.formatResponse(\"Incorrect arguments for unmark, please check\");","lastModifiedDate":"2024-02-25"},{"lineNumber":338,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":339,"author":{"gitId":"peterXGD"},"content":"        return output;","lastModifiedDate":"2024-02-25"},{"lineNumber":340,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":341,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":342,"author":{"gitId":"peterXGD"},"content":"    private static String handleMark(String word, ArrayList\u003cTask\u003e data) {","lastModifiedDate":"2024-02-25"},{"lineNumber":343,"author":{"gitId":"peterXGD"},"content":"        String output;","lastModifiedDate":"2024-02-25"},{"lineNumber":344,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-25"},{"lineNumber":345,"author":{"gitId":"peterXGD"},"content":"            int index \u003d Parser.findMarkIndex(word);","lastModifiedDate":"2024-02-25"},{"lineNumber":346,"author":{"gitId":"peterXGD"},"content":"            data.get(index).mark();","lastModifiedDate":"2024-02-25"},{"lineNumber":347,"author":{"gitId":"peterXGD"},"content":"            output \u003d Gui.markMessage(data.get(index));","lastModifiedDate":"2024-02-25"},{"lineNumber":348,"author":{"gitId":"peterXGD"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":349,"author":{"gitId":"peterXGD"},"content":"            output \u003d Gui.formatResponse(\"Incorrect name or spelling for mark, please check\");","lastModifiedDate":"2024-02-25"},{"lineNumber":350,"author":{"gitId":"peterXGD"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":351,"author":{"gitId":"peterXGD"},"content":"            output \u003d Gui.formatResponse(\"Incorrect arguments for mark, please check\");","lastModifiedDate":"2024-02-25"},{"lineNumber":352,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":353,"author":{"gitId":"peterXGD"},"content":"        return output;","lastModifiedDate":"2024-02-22"},{"lineNumber":354,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":355,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"peterXGD":355}},{"path":"src/main/java/venus/TimeFormatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":" * This is a TaskList class that is used to save tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":" * @author peterXGD","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":" * @since 2024-02-05","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"public class TimeFormatter {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"     * Returns date in LocalDate class given input String of format \"yyyy-mm-dd\".","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"     * @param s date String in format of \"yyyy-mm-dd\".","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"     * @return LocalDate of input.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"     * @throws DateTimeParseException Throws exception when invalid date format is used.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"    public static LocalDate stringToTime(String s) throws DateTimeParseException {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"        String pattern \u003d \"yyyy-mm-dd\";","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(pattern);","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"        LocalDate ld \u003d LocalDate.parse(s);","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"        return ld;","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"     * Returns date in LocalDate class given input String of format \"MMM d yyyy\".","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"     * @param s date String in format of \"MMM d yyyy\".","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"     * @return LocalDate of input.","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"     * @throws DateTimeParseException Throws exception when invalid date format is used.","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"peterXGD"},"content":"    public static LocalDate loadTimeFromString(String s) throws DateTimeParseException {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"peterXGD"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"peterXGD"},"content":"        LocalDate ld \u003d LocalDate.parse(s, formatter);","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"peterXGD"},"content":"        return ld;","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"peterXGD":38}},{"path":"src/main/java/venus/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":" * This is a Todo class that is used to save tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":" * @author peterXGD","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":" * @since 2024-02-05","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"    public Todo(String s) {","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"        super(s);","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"     * Returns todo task given a String and a mark to indicate completion.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"     * @param s String to represent content.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"     * @param mark Mark to include in mark.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"    public Todo(String s, boolean mark) {","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"        super(s);","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"        if (mark) {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"            this.mark();","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"            this.unmark();","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"     * Returns string representation of this class with mark and task type.","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"     * @return String of todo class.","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"peterXGD"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"peterXGD"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"peterXGD"},"content":"        String x \u003d (this.getMark()) ? \"X\" : \" \";","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"peterXGD"},"content":"        return (\"[T]\" + \"[\" + x + \"] \" + this.getItem());","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"peterXGD":39}},{"path":"src/main/java/venus/Venus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import java.io.File;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":" * This is a deadline class that extends from the Task class.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":" *","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":" * @author peterXGD","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":" * @since 2024-02-05","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"public class Venus extends Application {","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"     * A venus used for Launcher in JavaFX.","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"    public Venus() {","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"        this.storage \u003d new Storage(\"data\" + File.separator + \"venus.txt\");","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"            taskList.loadTasks(storage);","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"            throw new RuntimeException(\"File cannot be created or cannot be modified,\"","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"peterXGD"},"content":"                    + \" please check file access modifiers!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"peterXGD"},"content":"     * Returns Venus object with storage set as relative file path and empty taskList.","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"peterXGD"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"peterXGD"},"content":"     * @param filePath Relative file path of file.","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"peterXGD"},"content":"    public Venus(String filePath) {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"peterXGD"},"content":"        this.storage \u003d new Storage(\"data\" + File.separator + \"venus.txt\");","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"peterXGD"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"peterXGD"},"content":"            taskList.loadTasks(storage);","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"peterXGD"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"peterXGD"},"content":"            throw new RuntimeException(\"File cannot be created or cannot be modified,\"","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"peterXGD"},"content":"                    + \" please check file access modifiers!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"peterXGD"},"content":"     * Runs the program in the pre-level 10 style and exit if a \"bye\" input is detected.","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"peterXGD"},"content":"    public void run() {","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"peterXGD"},"content":"            System.out.println(OldUi.getStart());","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"peterXGD"},"content":"            taskList.loadTasks(storage);","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"peterXGD"},"content":"            Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"peterXGD"},"content":"            String words \u003d sc.nextLine().trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"peterXGD"},"content":"            while (!words.equals(\"bye\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"peterXGD"},"content":"                taskList.setTasks(words);","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"peterXGD"},"content":"                words \u003d sc.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"peterXGD"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"peterXGD"},"content":"            sc.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"peterXGD"},"content":"            taskList.saveTasks(storage);","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"peterXGD"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"peterXGD"},"content":"            OldUi.formatResponse(\"File cannot be created or cannot be modified,\"","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"peterXGD"},"content":"                    + \" please check file access modifiers!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"peterXGD"},"content":"        System.out.println(OldUi.getEnd());","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"peterXGD"},"content":"     * Starts the program in PSVM.","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"peterXGD"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"peterXGD"},"content":"        Venus venus \u003d new Venus(\"data\" + File.separator + \"venus.txt\");","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"peterXGD"},"content":"        venus.run();","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"peterXGD"},"content":"     * Start used for JavaFX GUI.","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"peterXGD"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"peterXGD"},"content":"     *              the application scene can be set.","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"peterXGD"},"content":"     *              Applications may create other stages, if needed, but they will not be","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"peterXGD"},"content":"     *              primary stages.","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"peterXGD"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"peterXGD"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"peterXGD"},"content":"        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"peterXGD"},"content":"        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"peterXGD"},"content":"        stage.setScene(scene); // Setting the stage to show our screen","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"peterXGD"},"content":"        stage.show(); // Render the stage.","lastModifiedDate":"2024-02-22"},{"lineNumber":97,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":98,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":99,"author":{"gitId":"peterXGD"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":100,"author":{"gitId":"peterXGD"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2024-02-22"},{"lineNumber":101,"author":{"gitId":"peterXGD"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2024-02-22"},{"lineNumber":102,"author":{"gitId":"peterXGD"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":103,"author":{"gitId":"peterXGD"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-22"},{"lineNumber":104,"author":{"gitId":"peterXGD"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-22"},{"lineNumber":105,"author":{"gitId":"peterXGD"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":106,"author":{"gitId":"peterXGD"},"content":"            String words \u003d input.trim();","lastModifiedDate":"2024-02-22"},{"lineNumber":107,"author":{"gitId":"peterXGD"},"content":"            if (!words.equals(\"bye\")) {","lastModifiedDate":"2024-02-22"},{"lineNumber":108,"author":{"gitId":"peterXGD"},"content":"                output \u003d taskList.setTasksReturnMessage(words);","lastModifiedDate":"2024-02-22"},{"lineNumber":109,"author":{"gitId":"peterXGD"},"content":"            } else {","lastModifiedDate":"2024-02-22"},{"lineNumber":110,"author":{"gitId":"peterXGD"},"content":"                output \u003d Gui.getEnd();","lastModifiedDate":"2024-02-22"},{"lineNumber":111,"author":{"gitId":"peterXGD"},"content":"            }","lastModifiedDate":"2024-02-22"},{"lineNumber":112,"author":{"gitId":"peterXGD"},"content":"            taskList.saveTasks(storage);","lastModifiedDate":"2024-02-22"},{"lineNumber":113,"author":{"gitId":"peterXGD"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":114,"author":{"gitId":"peterXGD"},"content":"            OldUi.formatResponse(\"File cannot be created or cannot be modified,\"","lastModifiedDate":"2024-02-22"},{"lineNumber":115,"author":{"gitId":"peterXGD"},"content":"                    + \" please check file access modifiers!\");","lastModifiedDate":"2024-02-22"},{"lineNumber":116,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":117,"author":{"gitId":"peterXGD"},"content":"        return output;","lastModifiedDate":"2024-02-22"},{"lineNumber":118,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"peterXGD":119}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"peterXGD":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"venus.MainWindow\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"            \u003cFont name\u003d\"Arial Bold\" size\u003d\"18.0\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" vbarPolicy\u003d\"ALWAYS\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" spacing\u003d\"10\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"peterXGD":23}},{"path":"src/test/java/venus/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"    public void findDeadlineContentTest() throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"        String[] test \u003d {\"bye bye\", \"21380-100-01\"};","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"        assertEquals(test[0],","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"                Parser.findDeadlineContent(\"deadline bye bye /by 21380-100-01\")[0]);","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"        assertEquals(test[1],","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"                Parser.findDeadlineContent(\"deadline bye bye /by 21380-100-01\")[1]);","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"    public void findDeadlineContentTest2() {","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"        String[] test \u003d {\"bye bye\", \"21380-100-01\"};","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"        DukeException dukeException \u003d","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"                assertThrows(DukeException.class, () -\u003e Parser.findDeadlineContent(\"deadline 2 /by dl /by \"));","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"        assertEquals(dukeException.getMessage(),","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"                \"Incorrect, choose a specific deadline only please\");","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"    public void findEventContentTest() throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"        String[] expected \u003d {\"event\", \"from bye bye\", \"to 21380\"};","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"        String[] actual \u003d Parser.findEventParts(\"event event /from bye bye/to 21380\");","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"        assertEquals(expected[0], actual[0]);","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"        assertEquals(expected[1], actual[1]);","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"peterXGD"},"content":"        assertEquals(expected[2], actual[2]);","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"peterXGD"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"peterXGD"},"content":"    public void findEventContentTest2() throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"peterXGD"},"content":"        String[] expected \u003d {\"event\", \"from2019-10-10\", \"to   21380\"};","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"peterXGD"},"content":"        String[] actual \u003d Parser.findEventParts(\"event event /from2019-10-10/to   21380 \");","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"peterXGD"},"content":"        assertEquals(expected[0], actual[0]);","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"peterXGD"},"content":"        assertEquals(expected[1], actual[1]);","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"peterXGD"},"content":"        assertEquals(expected[2], actual[2]);","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"peterXGD"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"peterXGD"},"content":"    public void findfindType() {","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"peterXGD"},"content":"        DukeException e \u003d assertThrows(DukeException.class, () -\u003e Parser.findDeadlineContent(\"ee something\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"peterXGD"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"peterXGD"},"content":"    public void findfindType2() {","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"peterXGD"},"content":"        assertEquals(TaskList.Types.EVENT, Parser.findType(\"event deadline deadline\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"peterXGD"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"peterXGD"},"content":"    public void findfindType3() {","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"peterXGD"},"content":"        assertEquals(TaskList.Types.EVENT, Parser.findType(\"event deadlinetodo\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"peterXGD":59}},{"path":"src/test/java/venus/TimeFormatterTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"package venus; // same package as the class being tested","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"public class TimeFormatterTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"    public void stringToTimeTest() {","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"        assertEquals(LocalDate.of(2019, 10, 01),","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"                TimeFormatter.stringToTime(\"2019-10-01\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"    public void stringToTimeTest2() {","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"        assertEquals(LocalDate.of(9999, 1, 1),","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"                TimeFormatter.stringToTime(\"9999-01-01\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"    public void loadTimeFromStringTest() {","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"        assertEquals(TimeFormatter.loadTimeFromString(\"Oct 12 3004\"),","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"                LocalDate.of(3004, 10, 12));","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"    public void loadTimeFromStringTest2() {","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"        assertEquals(TimeFormatter.loadTimeFromString(\"Dec 31 9999\"),","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"                LocalDate.of(9999, 12, 31));","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"peterXGD":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"todo borrow book","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"peterXGD":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"java -classpath ..\\bin venus \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"peterXGD":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"java -classpath ../bin Venus \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"peterXGD":1,"-":37}}]
