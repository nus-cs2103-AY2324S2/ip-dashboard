{"authorDailyContributionsMap":{"jovantanyk":[{"date":"2024-01-22","commitResults":[{"hash":"c17800b7c5c3d7edd018462ddc8d11eb6ed5a0cc","isMergeCommit":false,"messageTitle":"Level-0","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":6}}},{"hash":"09943717c30bca47e16fb6e2c863fa04e9c3685b","isMergeCommit":false,"messageTitle":"Level-1: Echo","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":2}}}]},{"date":"2024-01-24","commitResults":[{"hash":"c7c682f090f49bd752794366aa5b9dbadef60987","isMergeCommit":false,"messageTitle":"Level-2: Add, List","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":4}}},{"hash":"f7b8b00d25820e120dd6ef73fd71880004e3bf03","isMergeCommit":false,"messageTitle":"Renamed Main Class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":2}}}]},{"date":"2024-01-31","commitResults":[{"hash":"49e57b5afd68e51e98a20201a244577ca890e689","isMergeCommit":false,"messageTitle":"Level 3: Mark as Done","messageBody":"","tags":["Level-3","A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":5}}},{"hash":"fc7b900d968ece0b89adba6f8b192851ed3bca6c","isMergeCommit":false,"messageTitle":"Level 4: ToDos, Events, Deadlines","messageBody":"","tags":["Level-4","A-Inheritance","A-Collections"],"fileTypesAndContributionMap":{"java":{"insertions":233,"deletions":43}}},{"hash":"32bb57bbab669d93a1abcdf2173db3bc07c38d85","isMergeCommit":false,"messageTitle":"A-TextUiTesting","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":13,"deletions":0},"java":{"insertions":14,"deletions":10},"sh":{"insertions":1,"deletions":1}}}]},{"date":"2024-02-04","commitResults":[{"hash":"7fc9c1f55c017f15ee7937fd8aa7a1444843830d","isMergeCommit":false,"messageTitle":"Level-5: Handle Errors","messageBody":"","tags":["Level-5","A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":97,"deletions":55}}},{"hash":"4645aad49df89fbbeac0be3f5d983b5591310c5d","isMergeCommit":false,"messageTitle":"Adjusted Chat Formatting","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":9}}},{"hash":"83b576afac937f341c357be249045a2be5fe41c4","isMergeCommit":false,"messageTitle":"Level-6: Delete","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":66,"deletions":15}}},{"hash":"201dd17c6a723edb79033427d662e524b73a8cd0","isMergeCommit":false,"messageTitle":"Level-7: Implemented Save/Load feature","messageBody":"Included example paimon.txt file for reference\n","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":117,"deletions":4}}},{"hash":"b6cafbf9bdd3bfe2a0f5056461cf2341db6f78de","isMergeCommit":true,"messageTitle":"Merge Level-7 into master branch","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"192d30037c522ef059dee155eee14e8ce5fbd3e9","isMergeCommit":false,"messageTitle":"A-Packages: Shifted tasks to its own package","messageBody":"Also implemented more OOP for TaskLists in the form of encapsulation and abstraction\n","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":21}}},{"hash":"d3e066c1ea12b31a5575c60a21a25d28f20d5b79","isMergeCommit":true,"messageTitle":"Merged A-Packages into main","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{}},{"hash":"08ccbd9e404530023247cc28813d56d73bd2b271","isMergeCommit":false,"messageTitle":"Added basic date checking","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":3},"java":{"insertions":86,"deletions":19}}}]},{"date":"2024-02-08","commitResults":[{"hash":"0b805e6df922ca0a66a9c6fdda9b9f4995384100","isMergeCommit":false,"messageTitle":"Edited gitignore file","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1}}},{"hash":"575f38a6766855b4ecb762032813c491a67f583a","isMergeCommit":true,"messageTitle":"Merged Level-8: Date/Time into master","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"17940e197f10a58f1d83ffbb316c37a816ce7fb3","isMergeCommit":false,"messageTitle":"Create Command package and modified CommandParser","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":5},"java":{"insertions":419,"deletions":213}}},{"hash":"2fe9c448f23f8e70f6f97c9014079163ee41ae9a","isMergeCommit":true,"messageTitle":"Merge A-MoreOOP","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"c77b96a1c35cf431572b71b1b9375ba9dc135f12","isMergeCommit":true,"messageTitle":"Merge remote-tracking branch \u0027origin/add-gradle-support\u0027 into branch-A-Gradle","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2024-02-13","commitResults":[{"hash":"f180d1bd49ea266b12cba3bd51c126c20e422d28","isMergeCommit":false,"messageTitle":"A-Gradle: Edit Gradle Configuration and directories","messageBody":"Shift all files to be under package paimon\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"txt":{"insertions":0,"deletions":1},"java":{"insertions":79,"deletions":84}}}]},{"date":"2024-02-14","commitResults":[{"hash":"cf57c6b4e9a61c6ef01950bbdd431bb120eb0a9d","isMergeCommit":true,"messageTitle":"Merge A-Gradle to master branch","messageBody":"","tags":["A-Gradle"],"fileTypesAndContributionMap":{}},{"hash":"06049011373f1849cd934fa233781d9fe42bdbae","isMergeCommit":false,"messageTitle":"Create CommandParserTest","messageBody":"Create CommandParserTest.java to test CommandParser\n","fileTypesAndContributionMap":{"java":{"insertions":128,"deletions":0}}},{"hash":"91c94b63122933bc00e726762506f7318f6824cf","isMergeCommit":false,"messageTitle":"Edit CommandParser to Pass Test Cases","messageBody":"Invalid Regex resulted in false positive test in TodoCommand. Adjust Regex to fix it.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"70ba5eefb9159c6256c660faf57ff3b7816273fc","isMergeCommit":false,"messageTitle":"Add DeadlineCommandTest and Update DateParser","messageBody":"Updated DateParser to properly handle Dates with Time. Added DeadlineCommandTest\n","fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":2},"java":{"insertions":106,"deletions":13}}},{"hash":"7426ffa8b6fe3058921b76c499f3ca57e0314c01","isMergeCommit":true,"messageTitle":"Merge A-JUnit to master branch","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{}},{"hash":"50b1c8b445d020089c649d25663d6db995ba1566","isMergeCommit":false,"messageTitle":"Adjust FileHandler and build.gradle","messageBody":"Build.gradle now creates a paimon.jar, and FileHandler now creates directory if not found\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":3},"txt":{"insertions":0,"deletions":1},"java":{"insertions":14,"deletions":6}}},{"hash":"5756f5163788fbb15a48a2427d11e4adf62b9218","isMergeCommit":true,"messageTitle":"Merge A-Jar to master branch","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{}},{"hash":"aa0164431aaebe9957122277918a2c9ea0ebd5cf","isMergeCommit":false,"messageTitle":"Add FindCommand","messageBody":"Add FindCommand and Tweak UiHandler to accept Strings instead of Tasks\n","fileTypesAndContributionMap":{"java":{"insertions":87,"deletions":20}}},{"hash":"a8ec3339a43658b5c51f42ab5409cd77096138e0","isMergeCommit":false,"messageTitle":"Add JavaDoc comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":602,"deletions":63}}},{"hash":"db48c0878872fd9c5eb49b20821d08000045432c","isMergeCommit":true,"messageTitle":"Merge Level-9: Find to master","messageBody":"","tags":["Level-9"],"fileTypesAndContributionMap":{}},{"hash":"99a082f6a145e417756c872ac92ec323cf414a35","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-JavaDoc\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"01cafe2827e769ac6683d1f7f41b45de37108b96","isMergeCommit":false,"messageTitle":"Adjust UiHandler","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":1,"deletions":1}}},{"hash":"dda74d8c36fd615311b06690a22c878a0576264e","isMergeCommit":false,"messageTitle":"style: change methods in UIHandler to be more consistent","messageBody":"Change various response methods to all start with a verb in accordance with java coding standards.\n\nHaving a consistent naming style for methods improves code quality and readability\n","fileTypesAndContributionMap":{"java":{"insertions":61,"deletions":69}}},{"hash":"04156bacca88f86e681ed5cf1f2f945e50e465fb","isMergeCommit":false,"messageTitle":"style: reformat files","messageBody":"Reformat files to be more consistent with indentation and syntax.\n\nHaving more consistent indentation in accordance with java conventions allows for better readability\n","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":6}}},{"hash":"ca97a50b3ca880a6469238a755d1f4f511103762","isMergeCommit":false,"messageTitle":"fix: update DeleteCommand.java","messageBody":"Update DeleteCommand.java to throw an exception instead of using System.out.\nUIHandler is now solely handling all output and the program is now consistent\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"0271e631dc3191313a183772e15a1ab79485fb20","isMergeCommit":false,"messageTitle":"style: improve imports","messageBody":"Improve imports by reducing the use of wildcard imports. This helps with reducing bloat as only the needed classes are imported\n","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":2}}},{"hash":"2f245c94b75c89b1da09a2bbe754f57ba3ab4a37","isMergeCommit":true,"messageTitle":"Merge A-CodingStandard to master branch","messageBody":"Edit and implement various coding standards to adhere to java coding conventions. This includes optimising import statements, indentation and more consistent method names.\n","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{}},{"hash":"b3d2fff5733a263545bcc87c2f29cff28beb83f6","isMergeCommit":false,"messageTitle":"feat: implement checkstyle","messageBody":"Implement checkstyle to ensure consistent syntax and indentation.\nUpdate all files to ensure they follow checkstyle.\nHaving checkstyle ensures that code is consistent and readable\n","fileTypesAndContributionMap":{"gradle":{"insertions":7,"deletions":1},"java":{"insertions":229,"deletions":170}}},{"hash":"6c70b7e431c5adbf6e5fbfdc1bf18e3848a53ce7","isMergeCommit":true,"messageTitle":"Merge A-CheckStyle to master","messageBody":"Implement Checkstyle and ensure that all files follow java conventions. Indentations are now consistent and import statements are ordered accordingly.\n","tags":["A-CheckStyle"],"fileTypesAndContributionMap":{}},{"hash":"548a9446f6445e9228f65cff003979ef8c46de74","isMergeCommit":false,"messageTitle":"fix: update checkstyle","messageBody":"Fix checkstyle and improper indentation in test files.\nUpdate build.gradle to prepare for JavaFX\n","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0},"java":{"insertions":48,"deletions":24}}},{"hash":"06d000abe1b1a467c98c27860fb56653e75d258c","isMergeCommit":false,"messageTitle":"feat: initial javafx commit","messageBody":"Initial JavaFX commit\n","fileTypesAndContributionMap":{"gradle":{"insertions":7,"deletions":0},"java":{"insertions":26,"deletions":2}}}]},{"date":"2024-02-15","commitResults":[{"hash":"126eb8a2bb0f96dc59ec4a72b759211db302b433","isMergeCommit":false,"messageTitle":"feat: convert command line to gui","messageBody":"Convert all CLI based methods to GUI. Create Basic GUI\n","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":3},"fxml":{"insertions":83,"deletions":0},"java":{"insertions":318,"deletions":153}}}]},{"date":"2024-02-20","commitResults":[{"hash":"a4f8a65ef1e2c1f2c2fe48ede7b784bcdc70352d","isMergeCommit":false,"messageTitle":"feat: add custom images and fix scaling","messageBody":"Adjust Window scaling so that messages and anchor pane can stretch to fill the screen regardless of resizing\n","fileTypesAndContributionMap":{"fxml":{"insertions":8,"deletions":8},"java":{"insertions":10,"deletions":14}}},{"hash":"42b3a1f4990edede21532bf7db65bfedd55c5e60","isMergeCommit":true,"messageTitle":"Merge Level-10 to master","messageBody":"Add Basic GUI to app\n","tags":["Level-10"],"fileTypesAndContributionMap":{}}]},{"date":"2024-02-26","commitResults":[{"hash":"b4fd94b04b8f5d7aad9464555d248e056dcba7f0","isMergeCommit":false,"messageTitle":"feat: add assertions","messageBody":"Add assertions to ensure data integrity\n\nPreviously, the code lacked checks for program state assumptions,\npotentially leading to subtle bugs.\n\nIntroduce assertions to validate program state, such as non-null\ninputs and expected conditions, before method executions.\n\nAssertions aid in early detection of logical errors by documenting\nand enforcing invariants, improving code robustness and debugging\nspeed during development and testing phases.\n","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":2}}},{"hash":"e76087b5df508722503c9efdcaf944849b282cec","isMergeCommit":false,"messageTitle":"refactor: update CommandParser.java to adhere to SLAP","messageBody":"Refactor CommandParser.java for SLAP compliance\n\nThe CommandParser.java implementation was overly complex, making it difficult to understand, maintain, and extend. The parseInput method especially contained multiple levels of abstraction, mixing command parsing logic with command object creation.\n\nRefactor CommandParser.java to adhere to the Single Level of Abstraction Principle (SLAP). Extract command parsing and object creation into separate, smaller methods within the class. This includes creating individual parse methods for each command type, such as parseTodoCommand, parseDeadlineCommand, etc., and a utility method for regex matching.\n\nThis refactoring simplifies the parseInput method, making the CommandParser class easier to read, maintain, and extend. Each command parsing logic is now encapsulated in its own method, improving code modularity and readability. It also makes the class more adaptable to changes in command syntax or the addition of new command types in the future.\n","fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":67}}},{"hash":"04c67783871d666096b4b69a9a27962c79646c8e","isMergeCommit":false,"messageTitle":"style: removed unused imports","messageBody":"Remove unused imports across the codebase for Checkstyle compliance\n\nThe codebase contained numerous unused imports, leading to Checkstyle violations. These unused imports clutter the code, potentially causing confusion and reducing readability.\n\nRemove all unused imports from the codebase to comply with Checkstyle rules. This cleanup involves scrutinizing each file for import statements that are not in use and removing them.\n\nBy adhering to Checkstyle guidelines, we enhance code quality and maintainability. Removing unused imports also reduces the risk of naming conflicts and decreases compilation time slightly.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":4}}},{"hash":"8bbca3dddb5d3c0e9a99332d2add6570659acbe6","isMergeCommit":false,"messageTitle":"style: update javadoc comments","messageBody":"Update JavaDoc comments for Git conventions adherence\n\nJavaDoc comments were previously inconsistent with Git conventions, lacking clarity and uniformity across the codebase.\n\nRevise all JavaDoc comments to align with Git conventions. This includes standardizing the format, ensuring concise and informative descriptions, and adding missing tags like @param, @return, and @throws where applicable.\n\nAdopting Git conventions for JavaDoc comments enhances code readability and maintainability, providing clearer documentation for developers and users alike.\n","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":10}}},{"hash":"8b035b9102e65a6476245e6b8256545a94467f31","isMergeCommit":true,"messageTitle":"Merge pull request #2 from jovantanyk/branch-A-Assertions","messageBody":"Add assertions to ensure data integrity\r\n\r\nPreviously, the code lacked checks for program state assumptions,\r\npotentially leading to subtle bugs.\r\n\r\nIntroduce assertions to validate program state, such as non-null\r\ninputs and expected conditions, before method executions.\r\n\r\nAssertions aid in early detection of logical errors by documenting\r\nand enforcing invariants, improving code robustness and debugging\r\nspeed during development and testing phases.","tags":["A-FullCommitMessage","A-Assertions"],"fileTypesAndContributionMap":{}},{"hash":"e0c2466c2d40e126a77b030c41916593d56feb11","isMergeCommit":true,"messageTitle":"Merge pull request #3 from jovantanyk/branch-A-CodeQuality","messageBody":"Refine code to follow Java conventions and improve JavaDocs\r\n\r\nCodebase had mixed adherence to Java conventions, affecting readability\r\nand maintainability. This update standardizes JavaDocs, indentation, and\r\nformatting across all files.\r\n\r\nEnhancing consistency with Java coding standards improves readability\r\nand facilitates easier code maintenance. Changes are cosmetic, not\r\naffecting functionality.\r\n\r\nThis effort aligns the project with best practices, ensuring a cleaner,\r\nmore professional codebase appearance.\r\n","fileTypesAndContributionMap":{}}]}]},"authorFileTypeContributionMap":{"jovantanyk":{"java":1879,"md":0,"fxml":83,"sh":1,"bat":0,"gradle":26,"txt":16}},"authorContributionVariance":{"jovantanyk":98028.766},"authorDisplayNameMap":{"jovantanyk":"CS2103T-T08-1 TAN ..OVAN"}}
