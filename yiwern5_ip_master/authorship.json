[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"checkstyle {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"    mainClass.set(\"Duke\")","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"    archiveFileName \u003d \u0027Iggly.jar\u0027","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yiwern5":7,"-":40}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import command.Command;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import command.ExitCommand;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import command.GreetCommand;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import duke.Parser;","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import model.TaskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":" * {@link Duke} is the main class of this program.","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":" *","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":" * @author Tsui Yi Wern (yiwern5)","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    private final Storage storage;","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     * Constructor for {@link Duke} to initialize the storage or","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     * get task list from the storage.","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"     * @param filePath the file path of the storage.","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"        if (storage.isFileExists()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"            this.taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"        } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"            storage.createNewFile();","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"            storage.update(taskList.getTaskList());","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"     * Launch the program and initiate the command loop to process user input.","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"     * It displays a greeting message by calling the {@link GreetCommand}.","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"    public void launch() {","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"        new GreetCommand().execute(storage);","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"        try (Scanner scanner \u003d new Scanner(System.in)) {","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"            while (true) {","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"                System.out.print(\"Enter a command:\\n\");","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"                    new ExitCommand().execute(storage);","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"                    break;","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"                } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"                    try {","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"                        Command c \u003d new Parser(input, taskList).parse();","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"                        c.execute(storage);","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"        } catch (RuntimeException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":60,"author":{"gitId":"yiwern5"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-01-22"},{"lineNumber":61,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":63,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"     * The program\u0027s main function to start the application.","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"     * @param args the arguments passed into the application.","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-22"},{"lineNumber":69,"author":{"gitId":"yiwern5"},"content":"        new Duke(\"./data.dat\").launch();","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":67,"-":4}},{"path":"src/main/java/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package command;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import model.Task;","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import model.TaskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import view.AddTaskView;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":" * Command to add a {@link Task} to the {@link TaskList}.","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    public static final String TODO \u003d \"todo\";","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    public static final String EVENT \u003d \"event\";","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"    public static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"    private final Task task;","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"     * Constructs an {@link AddTaskCommand} object with the specified {@link Task} and {@link TaskList}.","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"     * This command is used to add a new task to the given task list.","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     * @param task The task to be added, in the form of {@code ToDo}, {@code Event} or {@code Deadline}.","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"     * @param taskList The task list to which the task will be added.","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"    public AddTaskCommand(Task task, TaskList taskList) {","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"     * Executes the {@link AddTaskCommand}, performing the necessary actions to carry out the specific functionality","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"     * related to adding a task.","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"     * This method adds the given task to the task list, update the storage and display the add task message by","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"     * initialising the add task view.","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"     * @param storage The storage object that manages the data persistence. It is used to update","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"     *                and save changes after executing the command.","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"    public void execute(Storage storage) {","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"        taskList.add(task);","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"        storage.update(taskList.getTaskList());","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"        AddTaskView addTaskView \u003d new AddTaskView(this.task, this.taskList);","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"        addTaskView.display();","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":47}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package command;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":" * The {@link Command} class is an abstract base class representing a generic command in a","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" * command-pattern-based design. Subclasses of this class provide concrete implementations","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" * for the {@code execute} method to define specific behaviors.","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"     * Executes the {@link Command}, performing the necessary actions to carry out the specific functionality","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"     * related to the command implementation.","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"     * @param storage The storage object that manages the data persistence. It is used to update","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"     *                and save changes after executing the command.","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    public abstract void execute(Storage storage);","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":19}},{"path":"src/main/java/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package command;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import model.Task;","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import model.TaskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import view.DeleteTaskView;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":" * Command to delete a {@link Task} from the {@link TaskList} using the task index.","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    private final Task task;","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link DeleteTaskCommand} object with the specified {@link Task} index and {@link TaskList}.","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"     * This command is used to delete a task from the given task list.","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     * @param taskList The task list to which the task will be deleted.","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    public DeleteTaskCommand(int index, TaskList taskList) {","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"        this.task \u003d taskList.get(index);","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"     * Executes the {@link DeleteTaskCommand}, performing the necessary actions to carry out the specific functionality","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"     * related to deleting a task.","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"     * This method deletes the given task index from the task list, update the storage and display the delete task","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"     * message by initialising the delete task view.","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"     * @param storage The storage object that manages the data persistence. It is used to update","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"     *                and save changes after executing the command.","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"    public void execute(Storage storage) {","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"        taskList.remove(task);","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"        storage.update(taskList.getTaskList());","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"        DeleteTaskView deleteTaskView \u003d new DeleteTaskView(this.task, this.taskList);","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"        deleteTaskView.display();","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":45}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package command;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import view.ExitView;","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" * Command to terminate the program.","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    private final ExitView exitView;","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     * Constructs an {@code ExitCommand}.","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    public ExitCommand() {","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"        this.exitView \u003d new ExitView();","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     * Executes the {@link ExitCommand}, print exit message when the program is terminated.","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"     * This method display the exit message by initialising the exit view.","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"     * @param storage The storage object that manages the data persistence. It is not used in {@link ExitCommand}","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    public void execute(Storage storage) {","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"        exitView.display();","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":31}},{"path":"src/main/java/command/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package command;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import model.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import view.FindTaskView;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" * Command to list out filtered tasks in the {@link TaskList} based on user\u0027s input.","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    private final String title;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link FindTaskCommand} object using user\u0027s input and {@link TaskList}.","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"     * This command is used to list filtered tasks in the given task list based on user\u0027s input.","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"     * @param title The user\u0027s desired find task keyword.","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"     * @param taskList The task list which requires filtering.","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"    public FindTaskCommand(String title, TaskList taskList) {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"        this.title \u003d title;","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"     * Executes the {@link FindTaskCommand}, filter a {@link TaskList} based on user\u0027s input and","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"     * prints a filtered {@link TaskList}.","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"     * @param storage The storage object that manages the data persistence. It is not used in {@link FindTaskCommand}","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"    public void execute(Storage storage) {","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"        TaskList filteredTaskList \u003d taskList.find(title);","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"        FindTaskView findTaskView \u003d new FindTaskView(filteredTaskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"        findTaskView.display();","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"yiwern5":39}},{"path":"src/main/java/command/GreetCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package command;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import view.GreetView;","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" * Command to greet user when program is started.","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"public class GreetCommand extends Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"    private final GreetView greetView;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@code GreetCommand}.","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"    public GreetCommand() {","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"        this.greetView \u003d new GreetView();","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"     * Executes the {@link GreetCommand}, print a welcome message greeting the user.","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     * This method display the exit message by initialising the exit view.","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"     * @param storage The storage object that manages the data persistence. It is not used in {@link GreetCommand}","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    public void execute(Storage storage) {","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"        greetView.display();","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":30}},{"path":"src/main/java/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package command;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import duke.DukeException;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" * The {@link InvalidCommand} class represents a command to handle invalid user input.","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"    private final String exception;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"     * Constructs an {@link InvalidCommand} with a default exception message.","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"    public InvalidCommand() {","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"        this.exception \u003d new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\").getMessage();","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"     * Executes the {@link InvalidCommand}, print the error message when user input is invalid.","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     * This method display the error message by printing out the exception message.","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"     * @param storage The storage object that manages the data persistence. It is not used in {@link ExitCommand}","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    public void execute(Storage storage) {","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"        System.out.println(exception);","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":30}},{"path":"src/main/java/command/ListTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package command;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import model.TaskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import view.TaskListView;","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" * Command to list out all tasks in the {@code TaskList}.","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    private final TaskListView taskListView;","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link ListTaskCommand} object using {@link TaskList}.","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"     * This command is used to list all tasks in the given task list.","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"     * @param taskList The task list to be listed .","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"    public ListTaskCommand(TaskList taskList) {","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"        this.taskListView \u003d new TaskListView(taskList);","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"     * Executes the {@link ListTaskCommand}, prints {@link TaskList}.","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"     * This method display the task list using the task list view.","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"     * @param storage The storage object that manages the data persistence. It is not used in {@link ListTaskCommand}","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"    public void execute(Storage storage) {","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"        taskListView.display();","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":36}},{"path":"src/main/java/command/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package command;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import model.Task;","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import model.TaskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import view.MarkTaskView;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":" * Command to mark a {@link Task} as done.","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"    private final Task task;","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link MarkTaskCommand} object with the specified {@link Task} index and {@link TaskList}.","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"     * This command is used to mark a task as done from the given task list.","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     * @param taskList The task list to which the task will be marked.","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    public MarkTaskCommand(int index, TaskList taskList) {","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        this.task \u003d taskList.get(index);","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"     * Executes the {@link MarkTaskCommand}, performing the necessary actions to carry out the specific functionality","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"     * related to marking a task.","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"     * This method marks the given task as done from the task list, update the storage and display the mark task","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"     * message by initialising the mark task view.","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"     * @param storage The storage object that manages the data persistence. It is used to update","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"     *                and save changes after executing the command.","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"    public void execute(Storage storage) {","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"        this.task.mark();","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"        storage.update(taskList.getTaskList());","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"        MarkTaskView markTaskView \u003d new MarkTaskView(this.task);","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"        markTaskView.display();","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":46}},{"path":"src/main/java/command/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package command;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import model.Task;","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import model.TaskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import view.UnmarkTaskView;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":" * Command to mark a {@link Task} as not done.","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    private final Task task;","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link UnmarkTaskCommand} object with the specified {@link Task} index and {@link TaskList}.","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"     * This command is used to mark a task as not done from the given task list.","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"     * @param index The index of the task to be marked as not done.","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     * @param taskList The task list to which the task will be marked.","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    public UnmarkTaskCommand(int index, TaskList taskList) {","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"        this.task \u003d taskList.get(index);","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"     * Executes the {@link UnmarkTaskCommand}, performing the necessary actions to carry out the specific functionality","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"     * related to marking a task.","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"     * This method marks the given task as not done from the task list, update the storage and display the unmark task","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"     * message by initialising the unmark task view.","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"     * @param storage The storage object that manages the data persistence. It is used to update","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"     *                and save changes after executing the command.","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"    public void execute(Storage storage) {","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"        this.task.unmark();","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"        storage.update(taskList.getTaskList());","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"        UnmarkTaskView unmarkTaskView \u003d new UnmarkTaskView(this.task);","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"        unmarkTaskView.display();","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":45}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package duke;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":" * The {@link DukeException} class represents a custom exception specific to the Duke application.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":" * It extends the standard {@link Exception} class and provides a constructor to initialize the","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":" * exception message in a stylized format.","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link DukeException} with a formatted exception message.","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"     * @param exception The specific error message associated with the exception.","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"    public DukeException(String exception) {","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"        super(","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"            \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"            + \"   OOPS!!! \" + exception + \"\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"            + \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"        );","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":21}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package duke;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import command.AddTaskCommand;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import command.Command;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import command.DeleteTaskCommand;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"import command.FindTaskCommand;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"import command.InvalidCommand;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"import command.ListTaskCommand;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"import command.MarkTaskCommand;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"import command.UnmarkTaskCommand;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"import model.Deadline;","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"import model.Event;","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"import model.Task;","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"import model.TaskList;","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"import model.ToDo;","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":" * The {@link Parser} class is responsible for parsing user input and extracting relevant information","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":" * to perform actions within the program.","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"public class Parser {","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"    private final String command;","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link Parser} with the specified command string and {@link TaskList}.","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"     * @param command The raw command string provided by the user for parsing.","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"     * @param taskList The {@code TaskList} associated with the parser, providing context for command execution.","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"    public Parser(String command, TaskList taskList) {","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"        this.command \u003d command;","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"     * Parse user input and return the corresponding command based on user\u0027s input.","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"     * @return a {@code Command} based on user\u0027s input.","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"     * @throws DukeException if user enters an invalid input.","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"    public Command parse() throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"        String[] splitTask \u003d command.split(\" \", 2);","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"        Task task;","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"        Command command \u003d null;","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"        switch(splitTask[0]) {","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"        case ListTaskCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"            command \u003d new ListTaskCommand(taskList);","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"            break;","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"        case MarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"            command \u003d parseMark(splitTask);","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"            break;","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"        case UnmarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"            command \u003d parseUnmark(splitTask);","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"            break;","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"        case AddTaskCommand.TODO:","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"yiwern5"},"content":"            task \u003d parseToDo(splitTask);","lastModifiedDate":"2024-01-22"},{"lineNumber":61,"author":{"gitId":"yiwern5"},"content":"            command \u003d new AddTaskCommand(task, taskList);","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"            break;","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"yiwern5"},"content":"        case AddTaskCommand.EVENT:","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"            task \u003d parseEvent(splitTask);","lastModifiedDate":"2024-01-22"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"            command \u003d new AddTaskCommand(task, taskList);","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"            break;","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"yiwern5"},"content":"        case AddTaskCommand.DEADLINE:","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"yiwern5"},"content":"            task \u003d parseDeadline(splitTask);","lastModifiedDate":"2024-01-22"},{"lineNumber":69,"author":{"gitId":"yiwern5"},"content":"            command \u003d new AddTaskCommand(task, taskList);","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"yiwern5"},"content":"            break;","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"yiwern5"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"yiwern5"},"content":"            command \u003d parseDelete(splitTask);","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"yiwern5"},"content":"            break;","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"yiwern5"},"content":"        case FindTaskCommand.COMMAND_WORD:","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"yiwern5"},"content":"            command \u003d parseFind(splitTask);","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"yiwern5"},"content":"            break;","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"yiwern5"},"content":"        default:","lastModifiedDate":"2024-01-22"},{"lineNumber":78,"author":{"gitId":"yiwern5"},"content":"            command \u003d new InvalidCommand();","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":80,"author":{"gitId":"yiwern5"},"content":"        return command;","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":82,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":83,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"yiwern5"},"content":"     * Parse a todo input.","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"yiwern5"},"content":"     * @return a {@code ToDo} based on user\u0027s input.","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"yiwern5"},"content":"     * @throws DukeException if user left the description empty.","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"yiwern5"},"content":"    private static ToDo parseToDo(String[] todo) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":89,"author":{"gitId":"yiwern5"},"content":"        if (todo.length !\u003d 2 || todo[1].isEmpty()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":90,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":91,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":92,"author":{"gitId":"yiwern5"},"content":"        return new ToDo(todo[1]);","lastModifiedDate":"2024-01-22"},{"lineNumber":93,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":94,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":95,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"yiwern5"},"content":"     * Parse an event input.","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"yiwern5"},"content":"     * @return a {@code Event} based on user\u0027s input.","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"yiwern5"},"content":"     * @throws DukeException if user left the description empty or entered invalid format.","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"yiwern5"},"content":"    private static Event parseEvent(String[] event) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":101,"author":{"gitId":"yiwern5"},"content":"        if (event.length !\u003d 2 || event[1].isEmpty()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":102,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":104,"author":{"gitId":"yiwern5"},"content":"        String[] splitEvent \u003d event[1].split(\" /from \", 2);","lastModifiedDate":"2024-01-22"},{"lineNumber":105,"author":{"gitId":"yiwern5"},"content":"        if (splitEvent.length !\u003d 2) {","lastModifiedDate":"2024-01-22"},{"lineNumber":106,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"Invalid input. Use: event event_title /from dd-mm-yyyy HHmm /to HHmm\");","lastModifiedDate":"2024-01-23"},{"lineNumber":107,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":108,"author":{"gitId":"yiwern5"},"content":"        String[] splitDuration \u003d splitEvent[1].split(\" /to \", 2);","lastModifiedDate":"2024-01-22"},{"lineNumber":109,"author":{"gitId":"yiwern5"},"content":"        if (splitDuration.length !\u003d 2) {","lastModifiedDate":"2024-01-22"},{"lineNumber":110,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"Invalid input. Use: event event_title /from dd-mm-yyyy HHmm /to HHmm\");","lastModifiedDate":"2024-01-23"},{"lineNumber":111,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":112,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":113,"author":{"gitId":"yiwern5"},"content":"        String title \u003d splitEvent[0];","lastModifiedDate":"2024-01-22"},{"lineNumber":114,"author":{"gitId":"yiwern5"},"content":"        String from \u003d splitDuration[0];","lastModifiedDate":"2024-01-22"},{"lineNumber":115,"author":{"gitId":"yiwern5"},"content":"        String to \u003d splitDuration[1];","lastModifiedDate":"2024-01-22"},{"lineNumber":116,"author":{"gitId":"yiwern5"},"content":"        String temp \u003d null;","lastModifiedDate":"2024-01-23"},{"lineNumber":117,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":118,"author":{"gitId":"yiwern5"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-M-yyyy HHmm\");","lastModifiedDate":"2024-01-23"},{"lineNumber":119,"author":{"gitId":"yiwern5"},"content":"            LocalDateTime fromDateTime \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2024-01-23"},{"lineNumber":120,"author":{"gitId":"yiwern5"},"content":"            temp \u003d fromDateTime.format(DateTimeFormatter.ofPattern(\"dd-M-yyyy\")) + \" \" + to;","lastModifiedDate":"2024-01-23"},{"lineNumber":121,"author":{"gitId":"yiwern5"},"content":"            LocalDateTime toTime \u003d LocalDateTime.parse(temp, formatter);","lastModifiedDate":"2024-01-23"},{"lineNumber":122,"author":{"gitId":"yiwern5"},"content":"            return new Event(title, fromDateTime, toTime);","lastModifiedDate":"2024-01-23"},{"lineNumber":123,"author":{"gitId":"yiwern5"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":124,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"Invalid date \u0026 time input. Use /from dd-mm-yyyy HHmm /to HHmm\");","lastModifiedDate":"2024-01-23"},{"lineNumber":125,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":126,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":127,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":128,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":129,"author":{"gitId":"yiwern5"},"content":"     * Parse a deadline input.","lastModifiedDate":"2024-01-25"},{"lineNumber":130,"author":{"gitId":"yiwern5"},"content":"     * @return a {@code Deadline} based on user\u0027s input.","lastModifiedDate":"2024-01-25"},{"lineNumber":131,"author":{"gitId":"yiwern5"},"content":"     * @throws DukeException if user left the description empty or entered invalid format.","lastModifiedDate":"2024-01-25"},{"lineNumber":132,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":133,"author":{"gitId":"yiwern5"},"content":"    private static Deadline parseDeadline(String[] deadline) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":134,"author":{"gitId":"yiwern5"},"content":"        if (deadline.length !\u003d 2 || deadline[1].isEmpty()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":135,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":136,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":137,"author":{"gitId":"yiwern5"},"content":"        String[] splitDeadline \u003d deadline[1].split(\" /by \", 2);","lastModifiedDate":"2024-01-22"},{"lineNumber":138,"author":{"gitId":"yiwern5"},"content":"        if (splitDeadline.length !\u003d 2) {","lastModifiedDate":"2024-01-22"},{"lineNumber":139,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"Invalid input. Use: deadline deadline_title /by dd-mm-yyyy HHmm\");","lastModifiedDate":"2024-01-23"},{"lineNumber":140,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":141,"author":{"gitId":"yiwern5"},"content":"        String title \u003d splitDeadline[0];","lastModifiedDate":"2024-01-22"},{"lineNumber":142,"author":{"gitId":"yiwern5"},"content":"        String time \u003d splitDeadline[1];","lastModifiedDate":"2024-01-22"},{"lineNumber":143,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":144,"author":{"gitId":"yiwern5"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-M-yyyy HHmm\");","lastModifiedDate":"2024-01-23"},{"lineNumber":145,"author":{"gitId":"yiwern5"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(time, formatter);","lastModifiedDate":"2024-01-23"},{"lineNumber":146,"author":{"gitId":"yiwern5"},"content":"            return new Deadline(title, dateTime);","lastModifiedDate":"2024-01-23"},{"lineNumber":147,"author":{"gitId":"yiwern5"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":148,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"Use dd-mm-yyyy HHmm as the date format.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":149,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":150,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":151,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":152,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":153,"author":{"gitId":"yiwern5"},"content":"     * Parse a mark task input.","lastModifiedDate":"2024-01-25"},{"lineNumber":154,"author":{"gitId":"yiwern5"},"content":"     * @return a {@code MarkTaskCommand} based on user\u0027s input.","lastModifiedDate":"2024-01-25"},{"lineNumber":155,"author":{"gitId":"yiwern5"},"content":"     * @throws DukeException if user entered invalid index.","lastModifiedDate":"2024-01-25"},{"lineNumber":156,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":157,"author":{"gitId":"yiwern5"},"content":"    private MarkTaskCommand parseMark(String[] command) throws DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":158,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":159,"author":{"gitId":"yiwern5"},"content":"            int markIndex \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2024-01-22"},{"lineNumber":160,"author":{"gitId":"yiwern5"},"content":"            try {","lastModifiedDate":"2024-01-22"},{"lineNumber":161,"author":{"gitId":"yiwern5"},"content":"                return new MarkTaskCommand(markIndex, this.taskList);","lastModifiedDate":"2024-01-23"},{"lineNumber":162,"author":{"gitId":"yiwern5"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":163,"author":{"gitId":"yiwern5"},"content":"                throw new DukeException(\"Invalid index.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":164,"author":{"gitId":"yiwern5"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":165,"author":{"gitId":"yiwern5"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":166,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"The index of task cannot be empty.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":167,"author":{"gitId":"yiwern5"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":168,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"The index you\u0027ve input is not an integer.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":169,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":170,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":171,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":172,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":173,"author":{"gitId":"yiwern5"},"content":"     * Parse an unmark task input.","lastModifiedDate":"2024-01-25"},{"lineNumber":174,"author":{"gitId":"yiwern5"},"content":"     * @return a {@code UnmarkTaskCommand} based on user\u0027s input.","lastModifiedDate":"2024-01-25"},{"lineNumber":175,"author":{"gitId":"yiwern5"},"content":"     * @throws DukeException if user entered invalid index.","lastModifiedDate":"2024-01-25"},{"lineNumber":176,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":177,"author":{"gitId":"yiwern5"},"content":"    private UnmarkTaskCommand parseUnmark(String[] command) throws DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":178,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":179,"author":{"gitId":"yiwern5"},"content":"            int unmarkIndex \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2024-01-22"},{"lineNumber":180,"author":{"gitId":"yiwern5"},"content":"            try {","lastModifiedDate":"2024-01-22"},{"lineNumber":181,"author":{"gitId":"yiwern5"},"content":"                return new UnmarkTaskCommand(unmarkIndex, this.taskList);","lastModifiedDate":"2024-01-23"},{"lineNumber":182,"author":{"gitId":"yiwern5"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":183,"author":{"gitId":"yiwern5"},"content":"                throw new DukeException(\"Invalid index.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":184,"author":{"gitId":"yiwern5"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":185,"author":{"gitId":"yiwern5"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":186,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"The index of task cannot be empty.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":187,"author":{"gitId":"yiwern5"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":188,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"The index you\u0027ve input is not an integer.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":189,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":190,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":191,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":192,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":193,"author":{"gitId":"yiwern5"},"content":"     * Parse a delete task input.","lastModifiedDate":"2024-01-25"},{"lineNumber":194,"author":{"gitId":"yiwern5"},"content":"     * @return a {@code DeleteTaskCommand} based on user\u0027s input.","lastModifiedDate":"2024-01-25"},{"lineNumber":195,"author":{"gitId":"yiwern5"},"content":"     * @throws DukeException if user entered invalid index.","lastModifiedDate":"2024-01-25"},{"lineNumber":196,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":197,"author":{"gitId":"yiwern5"},"content":"    private DeleteTaskCommand parseDelete(String[] command) throws DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":198,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":199,"author":{"gitId":"yiwern5"},"content":"            int deleteIndex \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2024-01-22"},{"lineNumber":200,"author":{"gitId":"yiwern5"},"content":"            try {","lastModifiedDate":"2024-01-22"},{"lineNumber":201,"author":{"gitId":"yiwern5"},"content":"                return new DeleteTaskCommand(deleteIndex, this.taskList);","lastModifiedDate":"2024-01-23"},{"lineNumber":202,"author":{"gitId":"yiwern5"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":203,"author":{"gitId":"yiwern5"},"content":"                throw new DukeException(\"Invalid index.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":204,"author":{"gitId":"yiwern5"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":205,"author":{"gitId":"yiwern5"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":206,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"The index of task cannot be empty.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":207,"author":{"gitId":"yiwern5"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":208,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"The index you\u0027ve input is not an integer.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":209,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":210,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":211,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":212,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":213,"author":{"gitId":"yiwern5"},"content":"     * Parse a find task input.","lastModifiedDate":"2024-01-29"},{"lineNumber":214,"author":{"gitId":"yiwern5"},"content":"     * @return a {@link FindTaskCommand} based on user\u0027s input.","lastModifiedDate":"2024-01-29"},{"lineNumber":215,"author":{"gitId":"yiwern5"},"content":"     * @throws DukeException if user left the description empty.","lastModifiedDate":"2024-01-29"},{"lineNumber":216,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":217,"author":{"gitId":"yiwern5"},"content":"    private FindTaskCommand parseFind(String[] input) throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":218,"author":{"gitId":"yiwern5"},"content":"        if (input.length !\u003d 2 || input[1].isEmpty()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":219,"author":{"gitId":"yiwern5"},"content":"            throw new DukeException(\"The description of find cannot be empty.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":220,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":221,"author":{"gitId":"yiwern5"},"content":"        return new FindTaskCommand(input[1], this.taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":222,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":223,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":223}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package duke;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import java.io.File;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"import model.Task;","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":" * The {@link Storage} class is responsible for handling the reading, writing and saving task data to a file.","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"public class Storage {","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    private final File file;","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link Storage} instance with the specified file path.","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"     * @param filePath The file path where task data is stored or will be stored.","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"     * Checks if the file associated with this storage exists.","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"     * @return {@code true} if the file exists, {@code false} otherwise.","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"    public boolean isFileExists() {","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"        try (FileInputStream fileInputStream \u003d new FileInputStream(file)) {","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"            return true;","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"            return false;","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"            System.out.println(\"Error checking file existence: \" + e);","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"            return false;","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"     * Creates a new file at the specified file path.","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"    public void createNewFile() {","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"            this.file.createNewFile();","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"            System.out.println(\"Unable to create new file.\");","lastModifiedDate":"2024-01-22"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"     * Updates the file with the provided task list.","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"     * @param taskList The list of tasks to be written to the file.","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"yiwern5"},"content":"    public void update(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-01-22"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"        try (FileOutputStream fileOutputStream \u003d new FileOutputStream(this.file);","lastModifiedDate":"2024-01-22"},{"lineNumber":63,"author":{"gitId":"yiwern5"},"content":"             ObjectOutputStream objectOutputStream \u003d new ObjectOutputStream(fileOutputStream)) {","lastModifiedDate":"2024-01-22"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"            objectOutputStream.writeObject(taskList);","lastModifiedDate":"2024-01-22"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-22"},{"lineNumber":67,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":68,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":69,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":70,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"yiwern5"},"content":"     * Loads tasks from the file and returns the task list.","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"yiwern5"},"content":"     * @return The list of tasks loaded from the file. If an error occurs during loading,","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"yiwern5"},"content":"     *         an empty list is returned.","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"yiwern5"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2024-01-22"},{"lineNumber":77,"author":{"gitId":"yiwern5"},"content":"        try (FileInputStream fileInputStream \u003d new FileInputStream(file);","lastModifiedDate":"2024-01-22"},{"lineNumber":78,"author":{"gitId":"yiwern5"},"content":"             ObjectInputStream objectInputStream \u003d new ObjectInputStream(fileInputStream)) {","lastModifiedDate":"2024-01-22"},{"lineNumber":79,"author":{"gitId":"yiwern5"},"content":"            @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-01-22"},{"lineNumber":80,"author":{"gitId":"yiwern5"},"content":"            ArrayList\u003cTask\u003e taskList \u003d (ArrayList\u003cTask\u003e) objectInputStream.readObject();","lastModifiedDate":"2024-01-22"},{"lineNumber":81,"author":{"gitId":"yiwern5"},"content":"            return taskList;","lastModifiedDate":"2024-01-22"},{"lineNumber":82,"author":{"gitId":"yiwern5"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":83,"author":{"gitId":"yiwern5"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-22"},{"lineNumber":84,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":85,"author":{"gitId":"yiwern5"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-22"},{"lineNumber":86,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":87,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":87}},{"path":"src/main/java/model/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package model;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" * The {@link Deadline} class represents a task with a specific deadline.","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"    private final LocalDateTime date;","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link Deadline} instance with the specified title and deadline date.","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"     * @param title The title of the deadline task.","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"     * @param date The deadline date and time.","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    public Deadline(String title, LocalDateTime date) {","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"        super(title);","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"     * Returns a string representation of the deadline task, including its type, title, and deadline details.","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"     * @return A formatted string representing the deadline task.","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"        return \"[D]\"","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"                + super.toString()","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"                + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mma\"))","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"                + \", \" + date.getDayOfWeek() + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":35}},{"path":"src/main/java/model/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package model;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" * The {@link Event} class represents a task with a specific time range.","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     * Constructs an {@link Event} instance with the specified title, start time, and end time.","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"     * @param title The title of the event task.","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    public Event(String title, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"        super(title);","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"     * Returns a string representation of the event task, including its type, title, and deadline details.","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"     * @return A formatted string representing the event task.","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"        return \"[E]\"","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"                + super.toString()","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"                + \" (on: \" + from.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mma\"))","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"                + \" to \" + to.format(DateTimeFormatter.ofPattern(\"h:mma\")) + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":38}},{"path":"src/main/java/model/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package model;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":" * The {@link Task} class is an abstract base class representing a generic task in the Duke application.","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" * It implements the {@link Serializable} interface to support object serialization.","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"    private final String title;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link Task} instance with the specified title. By default, the task is marked as not done.","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"     * @param title The title of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    public Task(String title) {","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"        this.title \u003d title;","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"     * Returns a string representation of the task, including its status (done or not) and title.","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"            return \"[X] \" + this.title;","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"        } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"            return \"[ ] \" + this.title;","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"     * Mark the task as completed.","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"    public void mark() {","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"     * Mark the task as not completed.","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"     * Checks whether the task associated with this object has been completed.","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"     * @return {@code true} if the task is done, {@code false} otherwise.","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"        return this.isDone;","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"yiwern5"},"content":"     * Returns the title of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"yiwern5"},"content":"     * @return the title of the task.","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"    public String getTitle() {","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"        return this.title;","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":68}},{"path":"src/main/java/model/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package model;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":" * The {@link TaskList} class encapsulates a task list and provides methods to","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" * manipulate and retrieve tasks.","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"public class TaskList {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"     * Constructs an empty {@link TaskList} with an initial capacity of 100.","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link TaskList} with the specified list of tasks loaded from storage.","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     * @param taskList The list of tasks to be initialized with.","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"        return this.taskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"     * Returns the task at the specified index in the list.","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"    public Task get(int index) {","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"        this.taskList.add(task);","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"     * Removes a task from the list.","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"     * @param task The task to be removed.","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"yiwern5"},"content":"    public void remove(Task task) {","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"        this.taskList.remove(task);","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"yiwern5"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"yiwern5"},"content":"    public int size() {","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"yiwern5"},"content":"        return this.taskList.size();","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":73,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"yiwern5"},"content":"     * Returns the filtered task list based on user\u0027s input.","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"yiwern5"},"content":"     * @param input user\u0027s desired find task keyword.","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"yiwern5"},"content":"     * @return the filtered task list.","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"yiwern5"},"content":"    public TaskList find(String input) {","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"yiwern5"},"content":"        ArrayList\u003cTask\u003e filteredTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"yiwern5"},"content":"        for (Task task: taskList) {","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"yiwern5"},"content":"            if (task.getTitle().contains(input)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"yiwern5"},"content":"                filteredTaskList.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"yiwern5"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"yiwern5"},"content":"        return new TaskList(filteredTaskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"yiwern5":89}},{"path":"src/main/java/model/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package model;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":" * The {@link ToDo} class represents a todo task.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link ToDo} instance with the specified title.","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"     * @param title The title of the ToDo task.","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    public ToDo(String title) {","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"        super(title);","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"     * Returns a string representation of the ToDo task, including its type and title.","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"     * @return A formatted string representing the ToDo task.","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":26}},{"path":"src/main/java/view/AddTaskView.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package view;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import model.Task;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import model.TaskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" * The {@link AddTaskView} class represents a view for displaying information after adding a {@link Task}.","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"public class AddTaskView extends Ui {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"    private final Task task;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    private final String size;","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     * Constructs an {@link AddTaskView} with the specified {@link Task} and {@link TaskList}.","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"     * @param task The task that has been added.","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"     * @param taskList The task list to which the task has been added.","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"    public AddTaskView(Task task, TaskList taskList) {","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"        this.size \u003d String.valueOf(taskList.size());","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"     * Displays information about the added task, including its details and the updated task list size.","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    public void display() {","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"        System.out.println(","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"            \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"            + \"   Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"            + \"   \" + this.task.toString() + \"\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"            + \"   Now you have \" + this.size + \" tasks in the list.\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"            + \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"        );","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":37}},{"path":"src/main/java/view/DeleteTaskView.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package view;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import model.Task;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import model.TaskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" * The {@link DeleteTaskView} class represents a view for displaying information after deleting a {@link Task}.","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"public class DeleteTaskView extends Ui {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"    private final Task task;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    private final String size;","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     * Constructs an {@link DeleteTaskView} with the specified {@link Task} and {@link TaskList}.","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"     * @param task The task that has been deleted.","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"     * @param taskList The task list to which the task has been deleted.","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"    public DeleteTaskView(Task task, TaskList taskList) {","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"        this.size \u003d String.valueOf(taskList.size());","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"     * Displays information about the deleted task, including its details and the updated task list size.","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    public void display() {","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"        System.out.println(","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"            \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"            + \"   Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"            + \"   \" + this.task.toString() + \"\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"            + \"   Now you have \" + this.size + \" tasks in the list.\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"            + \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"        );","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":37}},{"path":"src/main/java/view/ExitView.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package view;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":" * The {@link ExitView} class represents a view for displaying a farewell message upon exiting the application.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"public class ExitView extends Ui {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"     * Displays a farewell message when the program is terminated.","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    public void display() {","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"        System.out.println(","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"            \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"            + \" Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"            + \"____________________________________________________________\"","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"        );","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":19}},{"path":"src/main/java/view/FindTaskView.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package view;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import model.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":" * The {@link FindTaskView} class represents a view for displaying the list of filtered tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"public class FindTaskView extends Ui {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link FindTaskView} with the specified task list.","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     * @param taskList The {@link TaskList} containing the filtered tasks to be displayed.","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    public FindTaskView(TaskList taskList) {","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     * Displays the list of filtered tasks along with an introductory message and a formatted task list.","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    public void display() {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        String list \u003d \"\";","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"            list +\u003d (\"    \" + (i + 1) + \". \" + taskList.get(i).toString() + \"\\n\");","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"        System.out.println(","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"                \"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"                + \"\u003d: \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d :\u003d\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"                + \"::                        Task List                        ::\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"                + \"\u003d: \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d :\u003d\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"                + list","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"        );","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"yiwern5":37}},{"path":"src/main/java/view/GreetView.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package view;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":" * The {@link GreetView} class represents a view for displaying a welcome message upon starting the application.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"public class GreetView extends Ui {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"     * Displays a welcome message when the program is started.","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    public void display() {","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"        System.out.println(","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"            \"              ░░  ░░░░░░   ░░░░░░  ░░    ░░    ░░\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"            + \"              ▒▒ ▒▒       ▒▒       ▒▒     ▒▒  ▒▒\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"            + \"              ▒▒ ▒▒   ▒▒▒ ▒▒   ▒▒▒ ▒▒      ▒▒▒▒\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"            + \"              ▓▓ ▓▓    ▓▓ ▓▓    ▓▓ ▓▓       ▓▓\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"            + \"              ██  ██████   ██████  ███████  ██\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"            + \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"            + \"   Hello! I\u0027m Iggly, your personal assistant chatbot.\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"            + \"   What can I do for you?\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"            + \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"        );","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":25}},{"path":"src/main/java/view/MarkTaskView.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package view;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import model.Task;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":" * The {@link MarkTaskView} class represents a view for displaying information after marking a task as done.","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"public class MarkTaskView extends Ui {","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"    private final Task task;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link MarkTaskView} with the specified task.","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     * @param task The task that has been marked as done.","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    public MarkTaskView(Task task) {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     * Displays information about the marked task, including its details and the updated status.","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    public void display() {","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        System.out.println(","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"            \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"            + \" Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"            + \"   \" + this.task.toString() + \"\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"            + \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"        );","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":32}},{"path":"src/main/java/view/TaskListView.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package view;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import model.TaskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":" * The {@link TaskListView} class represents a view for displaying the list of tasks.","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"public class TaskListView extends Ui {","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link TaskListView} with the specified task list.","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     * @param taskList The {@link TaskList} containing the tasks to be displayed.","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    public TaskListView(TaskList taskList) {","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     * Displays the list of tasks along with an introductory message and a formatted task list.","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    public void display() {","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        String list \u003d \"\";","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"            list +\u003d (\"    \" + (i + 1) + \". \" + taskList.get(i).toString() + \"\\n\");","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"        System.out.println(","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"            \"\\n\u003d: \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d :\u003d\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"            + \"::                        Task List                        ::\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"            + \"\u003d: \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d \u003d :\u003d\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"            + list","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"        );","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":36}},{"path":"src/main/java/view/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package view;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":" * The {@link Ui} class is an abstract base class representing the user interface in the Duke application.","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"public abstract class Ui {","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"     * Displays information or messages to the user.","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    public abstract void display();","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":12}},{"path":"src/main/java/view/UnmarkTaskView.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package view;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import model.Task;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":" * The {@link UnmarkTaskView} class represents a view for displaying information after marking a task as not done.","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"public class UnmarkTaskView extends Ui {","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"    private final Task task;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"     * Constructs a {@link UnmarkTaskView} with the specified task.","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"     * @param task The task that has been marked as not done.","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    public UnmarkTaskView(Task task) {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"     * Displays information about the unmarked task, including its details and the updated status.","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    public void display() {","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        System.out.println(","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"            \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"            + \" OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"            + \"   \" + this.task.toString() + \"\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"            + \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"        );","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":32}},{"path":"src/test/java/command/AddTaskCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package command;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import java.io.File;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"import model.Deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"import model.Event;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"import model.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"import model.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"import model.ToDo;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"public class AddTaskCommandTest {","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"    @AfterEach","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    public void cleanup() {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"        File file \u003d new File(\"test.dat\");","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        if (file.exists()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"            assertTrue(file.delete());","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"    public void executeAddTodoTest() {","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"        ToDo todo \u003d new ToDo(\"todo\");","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"        Storage storage \u003d new Storage(\"test.dat\");","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(todo, taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"        addTaskCommand.execute(storage);","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"        ArrayList\u003cTask\u003e updatedTaskList \u003d taskList.getTaskList();","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"        assertEquals(1, updatedTaskList.size());","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"        assertEquals(todo, updatedTaskList.get(0));","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"    public void executeAddEventTest() {","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"        String from \u003d \"01-01-2024 0000\";","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"        String to \u003d \"01-01-2024 2359\";","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-M-yyyy HHmm\");","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"        LocalDateTime startTime \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"        LocalDateTime endTime \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"        Event event \u003d new Event(\"event\", startTime, endTime);","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"        Storage storage \u003d new Storage(\"test.dat\");","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(event, taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"        addTaskCommand.execute(storage);","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"        ArrayList\u003cTask\u003e updatedTaskList \u003d taskList.getTaskList();","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"        assertEquals(1, updatedTaskList.size());","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"        assertEquals(event, updatedTaskList.get(0));","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"yiwern5"},"content":"    public void executeAddDeadlineTest() {","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"        String by \u003d \"01-01-2024 0000\";","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-M-yyyy HHmm\");","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"        LocalDateTime time \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"yiwern5"},"content":"        Deadline deadline \u003d new Deadline(\"deadline\", time);","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"yiwern5"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"yiwern5"},"content":"        Storage storage \u003d new Storage(\"test.dat\");","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"yiwern5"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(deadline, taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"yiwern5"},"content":"        addTaskCommand.execute(storage);","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"yiwern5"},"content":"        ArrayList\u003cTask\u003e updatedTaskList \u003d taskList.getTaskList();","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"yiwern5"},"content":"        assertEquals(1, updatedTaskList.size());","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"yiwern5"},"content":"        assertEquals(deadline, updatedTaskList.get(0));","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"yiwern5":78}},{"path":"src/test/java/command/DeleteTaskCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package command;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import java.io.File;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"import model.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"import model.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"import model.ToDo;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"public class DeleteTaskCommandTest {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"    private static TaskList taskList;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"    private static Storage storage;","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"    @BeforeAll","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    static void setUp() {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        storage \u003d new Storage(\"test.dat\");","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"        ToDo todo \u003d new ToDo(\"todo\");","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(todo, taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"        addTaskCommand.execute(storage);","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"    @AfterEach","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"    public void cleanup() {","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"        File file \u003d new File(\"test.dat\");","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"        if (file.exists()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"            assertTrue(file.delete());","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"    public void executeDeleteTaskTest() {","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"        assertEquals(1, taskList.size());","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(0, taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"        deleteTaskCommand.execute(storage);","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"        ArrayList\u003cTask\u003e updatedTaskList \u003d taskList.getTaskList();","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"        assertEquals(0, updatedTaskList.size());","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"yiwern5":48}},{"path":"src/test/java/command/MarkTaskCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package command;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import java.io.File;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"import model.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"import model.ToDo;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"public class MarkTaskCommandTest {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    @AfterEach","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    public void cleanup() {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"        File file \u003d new File(\"test.dat\");","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"        if (file.exists()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"            assertTrue(file.delete());","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    public void executeMarkTaskCommandTest() {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        ToDo todo \u003d new ToDo(\"todo\");","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"        Storage storage \u003d new Storage(\"test.dat\");","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(todo, taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"        addTaskCommand.execute(storage);","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"        MarkTaskCommand markTaskCommand \u003d new MarkTaskCommand(0, taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"        markTaskCommand.execute(storage);","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"        assertTrue(todo.isDone());","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"        UnmarkTaskCommand unmarkTaskCommand \u003d new UnmarkTaskCommand(0, taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"        unmarkTaskCommand.execute(storage);","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"        assertFalse(todo.isDone());","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"yiwern5":41}},{"path":"src/test/java/duke/DukeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package duke;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"class DukeExceptionTest {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"    void dukeExceptionTest() {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"        String errorMessage \u003d \"Test error message\";","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"        DukeException dukeException \u003d new DukeException(errorMessage);","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"        assertEquals(","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"                \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"                        + \"   OOPS!!! \" + errorMessage + \"\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"                        + \"____________________________________________________________\\n\",","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"                dukeException.getMessage()","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"        );","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"yiwern5":22}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package duke;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import java.io.File;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"import command.AddTaskCommand;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"import command.Command;","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"import command.DeleteTaskCommand;","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"import command.InvalidCommand;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"import command.ListTaskCommand;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"import command.MarkTaskCommand;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"import command.UnmarkTaskCommand;","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"import model.Deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"import model.TaskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"import model.ToDo;","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    private static TaskList taskList;","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"    private Parser parser;","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"    private Command command;","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"    @BeforeAll","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"    static void setUp() {","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"        ToDo todo \u003d new ToDo(\"todo\");","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-M-yyyy HHmm\");","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"        LocalDateTime time \u003d LocalDateTime.parse(\"01-01-2024 0000\", formatter);","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"        Deadline deadline \u003d new Deadline(\"deadline\", time);","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"        Storage storage \u003d new Storage(\"test.dat\");","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"        new AddTaskCommand(todo, taskList).execute(storage);","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"        new AddTaskCommand(deadline, taskList).execute(storage);","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"    @AfterEach","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"    public void cleanup() {","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"        File file \u003d new File(\"test.dat\");","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"        if (file.exists()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"            assertTrue(file.delete());","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"    public void listTaskCommand_writtenCorrectly() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"        parser \u003d new Parser(ListTaskCommand.COMMAND_WORD, taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"        command \u003d parser.parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"        assertInstanceOf(ListTaskCommand.class, command);","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"    public void markTaskCommand_writtenCorrectly() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"yiwern5"},"content":"        parser \u003d new Parser(MarkTaskCommand.COMMAND_WORD + \" 1\", taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"yiwern5"},"content":"        command \u003d parser.parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"        assertInstanceOf(MarkTaskCommand.class, command);","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"yiwern5"},"content":"    public void unmarkTaskCommand_writtenCorrectly() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"yiwern5"},"content":"        parser \u003d new Parser(UnmarkTaskCommand.COMMAND_WORD + \" 1\", taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"yiwern5"},"content":"        command \u003d parser.parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"yiwern5"},"content":"        assertInstanceOf(UnmarkTaskCommand.class, command);","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"yiwern5"},"content":"    public void listTaskCommand_invalidIndex_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(ListTaskCommand.COMMAND_WORD + \" 9\", taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"yiwern5"},"content":"            assertEquals(","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"yiwern5"},"content":"                    \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"yiwern5"},"content":"                            + \"   OOPS!!! Invalid index.\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"yiwern5"},"content":"                            + \"____________________________________________________________\\n\",","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"yiwern5"},"content":"                    e.getMessage()","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"yiwern5"},"content":"            );","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"yiwern5"},"content":"    public void markTaskCommand_invalidIndex_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(MarkTaskCommand.COMMAND_WORD + \" 9\", taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"yiwern5"},"content":"            assertEquals(","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"yiwern5"},"content":"                    \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"yiwern5"},"content":"                            + \"   OOPS!!! Invalid index.\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"yiwern5"},"content":"                            + \"____________________________________________________________\\n\",","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"yiwern5"},"content":"                    e.getMessage()","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"yiwern5"},"content":"            );","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"yiwern5"},"content":"    public void unmarkTaskCommand_invalidIndex_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(UnmarkTaskCommand.COMMAND_WORD + \" 9\", taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"yiwern5"},"content":"            assertEquals(","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"yiwern5"},"content":"                    \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"yiwern5"},"content":"                            + \"   OOPS!!! Invalid index.\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"yiwern5"},"content":"                            + \"____________________________________________________________\\n\",","lastModifiedDate":"2024-01-29"},{"lineNumber":112,"author":{"gitId":"yiwern5"},"content":"                    e.getMessage()","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"yiwern5"},"content":"            );","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":115,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":118,"author":{"gitId":"yiwern5"},"content":"    public void listTaskCommand_emptyInput_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(ListTaskCommand.COMMAND_WORD, taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"yiwern5"},"content":"            assertEquals(","lastModifiedDate":"2024-01-29"},{"lineNumber":124,"author":{"gitId":"yiwern5"},"content":"                    \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"yiwern5"},"content":"                            + \"   OOPS!!! The index of task cannot be empty.\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"yiwern5"},"content":"                            + \"____________________________________________________________\\n\",","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"yiwern5"},"content":"                    e.getMessage()","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"yiwern5"},"content":"            );","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"yiwern5"},"content":"    public void markTaskCommand_emptyInput_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":135,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(MarkTaskCommand.COMMAND_WORD, taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":136,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-29"},{"lineNumber":137,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":138,"author":{"gitId":"yiwern5"},"content":"            assertEquals(","lastModifiedDate":"2024-01-29"},{"lineNumber":139,"author":{"gitId":"yiwern5"},"content":"                    \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":140,"author":{"gitId":"yiwern5"},"content":"                            + \"   OOPS!!! The index of task cannot be empty.\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":141,"author":{"gitId":"yiwern5"},"content":"                            + \"____________________________________________________________\\n\",","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"yiwern5"},"content":"                    e.getMessage()","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"yiwern5"},"content":"            );","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":145,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":146,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":147,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":148,"author":{"gitId":"yiwern5"},"content":"    public void unmarkTaskCommand_emptyInput_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":149,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":150,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(UnmarkTaskCommand.COMMAND_WORD, taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":151,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-29"},{"lineNumber":152,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":153,"author":{"gitId":"yiwern5"},"content":"            assertEquals(","lastModifiedDate":"2024-01-29"},{"lineNumber":154,"author":{"gitId":"yiwern5"},"content":"                    \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":155,"author":{"gitId":"yiwern5"},"content":"                            + \"   OOPS!!! The index of task cannot be empty.\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":156,"author":{"gitId":"yiwern5"},"content":"                            + \"____________________________________________________________\\n\",","lastModifiedDate":"2024-01-29"},{"lineNumber":157,"author":{"gitId":"yiwern5"},"content":"                    e.getMessage()","lastModifiedDate":"2024-01-29"},{"lineNumber":158,"author":{"gitId":"yiwern5"},"content":"            );","lastModifiedDate":"2024-01-29"},{"lineNumber":159,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":160,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":161,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":162,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":163,"author":{"gitId":"yiwern5"},"content":"    public void listTaskCommand_notAnInteger_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":164,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":165,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(ListTaskCommand.COMMAND_WORD + \" a\", taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":166,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-29"},{"lineNumber":167,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":168,"author":{"gitId":"yiwern5"},"content":"            assertEquals(","lastModifiedDate":"2024-01-29"},{"lineNumber":169,"author":{"gitId":"yiwern5"},"content":"                    \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":170,"author":{"gitId":"yiwern5"},"content":"                            + \"   OOPS!!! The index you\u0027ve input is not an integer.\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":171,"author":{"gitId":"yiwern5"},"content":"                            + \"____________________________________________________________\\n\",","lastModifiedDate":"2024-01-29"},{"lineNumber":172,"author":{"gitId":"yiwern5"},"content":"                    e.getMessage()","lastModifiedDate":"2024-01-29"},{"lineNumber":173,"author":{"gitId":"yiwern5"},"content":"            );","lastModifiedDate":"2024-01-29"},{"lineNumber":174,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":175,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":176,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":177,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":178,"author":{"gitId":"yiwern5"},"content":"    public void markTaskCommand_notAnInteger_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":179,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":180,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(MarkTaskCommand.COMMAND_WORD + \" a\", taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":181,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-29"},{"lineNumber":182,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":183,"author":{"gitId":"yiwern5"},"content":"            assertEquals(","lastModifiedDate":"2024-01-29"},{"lineNumber":184,"author":{"gitId":"yiwern5"},"content":"                    \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":185,"author":{"gitId":"yiwern5"},"content":"                            + \"   OOPS!!! The index you\u0027ve input is not an integer.\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":186,"author":{"gitId":"yiwern5"},"content":"                            + \"____________________________________________________________\\n\",","lastModifiedDate":"2024-01-29"},{"lineNumber":187,"author":{"gitId":"yiwern5"},"content":"                    e.getMessage()","lastModifiedDate":"2024-01-29"},{"lineNumber":188,"author":{"gitId":"yiwern5"},"content":"            );","lastModifiedDate":"2024-01-29"},{"lineNumber":189,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":190,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":191,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":192,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":193,"author":{"gitId":"yiwern5"},"content":"    public void unmarkTaskCommand_notAnInteger_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":194,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":195,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(UnmarkTaskCommand.COMMAND_WORD + \" a\", taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":196,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":197,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":198,"author":{"gitId":"yiwern5"},"content":"            assertEquals(","lastModifiedDate":"2024-01-25"},{"lineNumber":199,"author":{"gitId":"yiwern5"},"content":"                    \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":200,"author":{"gitId":"yiwern5"},"content":"                            + \"   OOPS!!! The index you\u0027ve input is not an integer.\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":201,"author":{"gitId":"yiwern5"},"content":"                            + \"____________________________________________________________\\n\",","lastModifiedDate":"2024-01-25"},{"lineNumber":202,"author":{"gitId":"yiwern5"},"content":"                    e.getMessage()","lastModifiedDate":"2024-01-25"},{"lineNumber":203,"author":{"gitId":"yiwern5"},"content":"            );","lastModifiedDate":"2024-01-25"},{"lineNumber":204,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":205,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":206,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":207,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":208,"author":{"gitId":"yiwern5"},"content":"    public void addTaskCommandTest_todo_writtenCorrectly() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":209,"author":{"gitId":"yiwern5"},"content":"        parser \u003d new Parser(AddTaskCommand.TODO + \" test\", taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":210,"author":{"gitId":"yiwern5"},"content":"        command \u003d parser.parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":211,"author":{"gitId":"yiwern5"},"content":"        assertInstanceOf(AddTaskCommand.class, command);","lastModifiedDate":"2024-01-25"},{"lineNumber":212,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":213,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":214,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":215,"author":{"gitId":"yiwern5"},"content":"    public void addTaskCommandTest_event_writtenCorrectly() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":216,"author":{"gitId":"yiwern5"},"content":"        parser \u003d new Parser(AddTaskCommand.EVENT + \" test /from 01-01-2024 0000 /to 2359\", taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":217,"author":{"gitId":"yiwern5"},"content":"        command \u003d parser.parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":218,"author":{"gitId":"yiwern5"},"content":"        assertInstanceOf(AddTaskCommand.class, command);","lastModifiedDate":"2024-01-25"},{"lineNumber":219,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":220,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":221,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":222,"author":{"gitId":"yiwern5"},"content":"    public void addTaskCommandTest_deadline_writtenCorrectly() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":223,"author":{"gitId":"yiwern5"},"content":"        parser \u003d new Parser(AddTaskCommand.DEADLINE + \" test /by 01-01-2024 0000\", taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":224,"author":{"gitId":"yiwern5"},"content":"        command \u003d parser.parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":225,"author":{"gitId":"yiwern5"},"content":"        assertInstanceOf(AddTaskCommand.class, command);","lastModifiedDate":"2024-01-25"},{"lineNumber":226,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":227,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":228,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":229,"author":{"gitId":"yiwern5"},"content":"    public void addTaskCommandTest_todoEmptyDescription_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":230,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":231,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(AddTaskCommand.TODO, taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":232,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":233,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":234,"author":{"gitId":"yiwern5"},"content":"            assertEquals(","lastModifiedDate":"2024-01-25"},{"lineNumber":235,"author":{"gitId":"yiwern5"},"content":"                    \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":236,"author":{"gitId":"yiwern5"},"content":"                    + \"   OOPS!!! The description of a todo cannot be empty.\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":237,"author":{"gitId":"yiwern5"},"content":"                    + \"____________________________________________________________\\n\",","lastModifiedDate":"2024-01-25"},{"lineNumber":238,"author":{"gitId":"yiwern5"},"content":"                    e.getMessage()","lastModifiedDate":"2024-01-25"},{"lineNumber":239,"author":{"gitId":"yiwern5"},"content":"            );","lastModifiedDate":"2024-01-25"},{"lineNumber":240,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":241,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":242,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":243,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":244,"author":{"gitId":"yiwern5"},"content":"    public void addTaskCommandTest_eventEmptyDescription_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":245,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":246,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(AddTaskCommand.EVENT, taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":247,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-29"},{"lineNumber":248,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":249,"author":{"gitId":"yiwern5"},"content":"            assertEquals(","lastModifiedDate":"2024-01-29"},{"lineNumber":250,"author":{"gitId":"yiwern5"},"content":"                    \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":251,"author":{"gitId":"yiwern5"},"content":"                            + \"   OOPS!!! The description of an event cannot be empty.\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":252,"author":{"gitId":"yiwern5"},"content":"                            + \"____________________________________________________________\\n\",","lastModifiedDate":"2024-01-29"},{"lineNumber":253,"author":{"gitId":"yiwern5"},"content":"                    e.getMessage()","lastModifiedDate":"2024-01-29"},{"lineNumber":254,"author":{"gitId":"yiwern5"},"content":"            );","lastModifiedDate":"2024-01-29"},{"lineNumber":255,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":256,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":257,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":258,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":259,"author":{"gitId":"yiwern5"},"content":"    public void addTaskCommandTest_deadlineEmptyDescription_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":260,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":261,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(AddTaskCommand.DEADLINE, taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":262,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-29"},{"lineNumber":263,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":264,"author":{"gitId":"yiwern5"},"content":"            assertEquals(","lastModifiedDate":"2024-01-29"},{"lineNumber":265,"author":{"gitId":"yiwern5"},"content":"                    \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":266,"author":{"gitId":"yiwern5"},"content":"                            + \"   OOPS!!! The description of a deadline cannot be empty.\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":267,"author":{"gitId":"yiwern5"},"content":"                            + \"____________________________________________________________\\n\",","lastModifiedDate":"2024-01-29"},{"lineNumber":268,"author":{"gitId":"yiwern5"},"content":"                    e.getMessage()","lastModifiedDate":"2024-01-29"},{"lineNumber":269,"author":{"gitId":"yiwern5"},"content":"            );","lastModifiedDate":"2024-01-29"},{"lineNumber":270,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":271,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":272,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":273,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":274,"author":{"gitId":"yiwern5"},"content":"    public void addTaskCommandTest_eventNoTime_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":275,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":276,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(AddTaskCommand.EVENT + \"test\", taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":277,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":278,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":279,"author":{"gitId":"yiwern5"},"content":"            assertEquals(","lastModifiedDate":"2024-01-25"},{"lineNumber":280,"author":{"gitId":"yiwern5"},"content":"                    \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":281,"author":{"gitId":"yiwern5"},"content":"                            + \"   OOPS!!! Invalid input. Use: event event_title /from dd-mm-yyyy HHmm /to HHmm\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":282,"author":{"gitId":"yiwern5"},"content":"                            + \"____________________________________________________________\\n\",","lastModifiedDate":"2024-01-25"},{"lineNumber":283,"author":{"gitId":"yiwern5"},"content":"                    e.getMessage()","lastModifiedDate":"2024-01-25"},{"lineNumber":284,"author":{"gitId":"yiwern5"},"content":"            );","lastModifiedDate":"2024-01-25"},{"lineNumber":285,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":286,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":287,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":288,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":289,"author":{"gitId":"yiwern5"},"content":"    public void addTaskCommandTest_deadlineNoTime_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":290,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":291,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(AddTaskCommand.DEADLINE + \"test\", taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":292,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":293,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":294,"author":{"gitId":"yiwern5"},"content":"            assertEquals(","lastModifiedDate":"2024-01-29"},{"lineNumber":295,"author":{"gitId":"yiwern5"},"content":"                    \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":296,"author":{"gitId":"yiwern5"},"content":"                            + \"   OOPS!!! Invalid input. Use: deadline deadline_title /by dd-mm-yyyy HHmm\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":297,"author":{"gitId":"yiwern5"},"content":"                            + \"____________________________________________________________\\n\",","lastModifiedDate":"2024-01-29"},{"lineNumber":298,"author":{"gitId":"yiwern5"},"content":"                    e.getMessage()","lastModifiedDate":"2024-01-29"},{"lineNumber":299,"author":{"gitId":"yiwern5"},"content":"            );","lastModifiedDate":"2024-01-29"},{"lineNumber":300,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":301,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":302,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":303,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":304,"author":{"gitId":"yiwern5"},"content":"    public void addTaskCommandTest_eventEmptyTime_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":305,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":306,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(AddTaskCommand.EVENT + \"test /from\", taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":307,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-29"},{"lineNumber":308,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":309,"author":{"gitId":"yiwern5"},"content":"            assertEquals(","lastModifiedDate":"2024-01-25"},{"lineNumber":310,"author":{"gitId":"yiwern5"},"content":"                    \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":311,"author":{"gitId":"yiwern5"},"content":"                            + \"   OOPS!!! Invalid date \u0026 time input. Use /from dd-mm-yyyy HHmm /to HHmm\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":312,"author":{"gitId":"yiwern5"},"content":"                            + \"____________________________________________________________\\n\",","lastModifiedDate":"2024-01-25"},{"lineNumber":313,"author":{"gitId":"yiwern5"},"content":"                    e.getMessage()","lastModifiedDate":"2024-01-25"},{"lineNumber":314,"author":{"gitId":"yiwern5"},"content":"            );","lastModifiedDate":"2024-01-25"},{"lineNumber":315,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":316,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":317,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":318,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":319,"author":{"gitId":"yiwern5"},"content":"    public void addTaskCommandTest_deadlineEmptyTime_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":320,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":321,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(AddTaskCommand.DEADLINE + \"test /by\", taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":322,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-29"},{"lineNumber":323,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":324,"author":{"gitId":"yiwern5"},"content":"            assertEquals(","lastModifiedDate":"2024-01-29"},{"lineNumber":325,"author":{"gitId":"yiwern5"},"content":"                    \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":326,"author":{"gitId":"yiwern5"},"content":"                            + \"   OOPS!!! Use dd-mm-yyyy HHmm as the date format.\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":327,"author":{"gitId":"yiwern5"},"content":"                            + \"____________________________________________________________\\n\",","lastModifiedDate":"2024-01-29"},{"lineNumber":328,"author":{"gitId":"yiwern5"},"content":"                    e.getMessage()","lastModifiedDate":"2024-01-29"},{"lineNumber":329,"author":{"gitId":"yiwern5"},"content":"            );","lastModifiedDate":"2024-01-29"},{"lineNumber":330,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":331,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":332,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":333,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":334,"author":{"gitId":"yiwern5"},"content":"    public void deleteTaskCommandTest_writtenCorrectly() throws DukeException {","lastModifiedDate":"2024-01-29"},{"lineNumber":335,"author":{"gitId":"yiwern5"},"content":"        parser \u003d new Parser(DeleteTaskCommand.COMMAND_WORD + \" 1\", taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":336,"author":{"gitId":"yiwern5"},"content":"        command \u003d parser.parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":337,"author":{"gitId":"yiwern5"},"content":"        assertInstanceOf(DeleteTaskCommand.class, command);","lastModifiedDate":"2024-01-25"},{"lineNumber":338,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":339,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":340,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":341,"author":{"gitId":"yiwern5"},"content":"    public void deleteTaskCommand_notAnInteger_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":342,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":343,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(DeleteTaskCommand.COMMAND_WORD + \" a\", taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":344,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-29"},{"lineNumber":345,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":346,"author":{"gitId":"yiwern5"},"content":"            assertEquals(","lastModifiedDate":"2024-01-29"},{"lineNumber":347,"author":{"gitId":"yiwern5"},"content":"                    \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":348,"author":{"gitId":"yiwern5"},"content":"                            + \"   OOPS!!! The index you\u0027ve input is not an integer.\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":349,"author":{"gitId":"yiwern5"},"content":"                            + \"____________________________________________________________\\n\",","lastModifiedDate":"2024-01-29"},{"lineNumber":350,"author":{"gitId":"yiwern5"},"content":"                    e.getMessage()","lastModifiedDate":"2024-01-29"},{"lineNumber":351,"author":{"gitId":"yiwern5"},"content":"            );","lastModifiedDate":"2024-01-29"},{"lineNumber":352,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":353,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":354,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":355,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":356,"author":{"gitId":"yiwern5"},"content":"    public void deleteTaskCommand_emptyInput_exceptionThrown() {","lastModifiedDate":"2024-01-29"},{"lineNumber":357,"author":{"gitId":"yiwern5"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":358,"author":{"gitId":"yiwern5"},"content":"            parser \u003d new Parser(DeleteTaskCommand.COMMAND_WORD, taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":359,"author":{"gitId":"yiwern5"},"content":"            command \u003d parser.parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":360,"author":{"gitId":"yiwern5"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":361,"author":{"gitId":"yiwern5"},"content":"            assertEquals(","lastModifiedDate":"2024-01-25"},{"lineNumber":362,"author":{"gitId":"yiwern5"},"content":"                    \"____________________________________________________________\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":363,"author":{"gitId":"yiwern5"},"content":"                            + \"   OOPS!!! The index of task cannot be empty.\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":364,"author":{"gitId":"yiwern5"},"content":"                            + \"____________________________________________________________\\n\",","lastModifiedDate":"2024-01-25"},{"lineNumber":365,"author":{"gitId":"yiwern5"},"content":"                    e.getMessage()","lastModifiedDate":"2024-01-25"},{"lineNumber":366,"author":{"gitId":"yiwern5"},"content":"            );","lastModifiedDate":"2024-01-25"},{"lineNumber":367,"author":{"gitId":"yiwern5"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":368,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":369,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":370,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":371,"author":{"gitId":"yiwern5"},"content":"    public void invalidCommandTest() throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":372,"author":{"gitId":"yiwern5"},"content":"        parser \u003d new Parser(\"blah\", taskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":373,"author":{"gitId":"yiwern5"},"content":"        command \u003d parser.parse();","lastModifiedDate":"2024-01-25"},{"lineNumber":374,"author":{"gitId":"yiwern5"},"content":"        assertInstanceOf(InvalidCommand.class, command);","lastModifiedDate":"2024-01-25"},{"lineNumber":375,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":376,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"yiwern5":376}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package duke;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"import java.io.File;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"import model.Task;","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"import model.ToDo;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"public class StorageTest {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    void isFileExistsTest_returnsTrue() {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"        String filePath \u003d \"test.dat\";","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"        storage.createNewFile();","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"        assertTrue(storage.isFileExists());","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"        assertTrue(file.delete());","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"    void isFileExistsTest_returnsFalse() {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"        String filePath \u003d \"test.dat\";","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"        assertFalse(storage.isFileExists());","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"    void createNewFileTest_returnsTrue() {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"        String filePath \u003d \"test.dat\";","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"        storage.createNewFile();","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"        assertTrue(storage.isFileExists());","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"        assertTrue(file.delete());","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"yiwern5"},"content":"    void updateAndLoadTest_returnsTrue() {","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"yiwern5"},"content":"        String filePath \u003d \"test.dat\";","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"yiwern5"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"yiwern5"},"content":"        ArrayList\u003cTask\u003e originalTaskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"yiwern5"},"content":"        originalTaskList.add(new ToDo(\"todo\"));","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"yiwern5"},"content":"        storage.update(originalTaskList);","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"yiwern5"},"content":"        ArrayList\u003cTask\u003e loadedTaskList \u003d storage.load();","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"yiwern5"},"content":"        assertEquals(originalTaskList.size(), loadedTaskList.size());","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"yiwern5"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"yiwern5"},"content":"        assertTrue(file.delete());","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"yiwern5":65}},{"path":"src/test/java/model/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"package model;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"public class TaskTest {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"    private static ToDo todo;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"yiwern5"},"content":"    private static Event event;","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"yiwern5"},"content":"    private static Deadline deadline;","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"yiwern5"},"content":"    @BeforeAll","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"yiwern5"},"content":"    static void setUp() {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"yiwern5"},"content":"        todo \u003d new ToDo(\"todo\");","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"yiwern5"},"content":"        event \u003d new Event(\"event\", LocalDateTime.of(2024, 1, 1, 0, 0),","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"yiwern5"},"content":"                LocalDateTime.of(2024, 1, 1, 12, 0));","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"yiwern5"},"content":"        deadline \u003d new Deadline(\"deadline\", LocalDateTime.of(2024, 1, 1, 12, 0));","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"yiwern5"},"content":"    public void todoTest() {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"yiwern5"},"content":"        String expectedToString \u003d \"[T][ ] todo\";","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"yiwern5"},"content":"        String actualToString \u003d todo.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"yiwern5"},"content":"        assertInstanceOf(ToDo.class, todo);","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"yiwern5"},"content":"        assertEquals(expectedToString, actualToString);","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"yiwern5"},"content":"    public void eventTest() {","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"yiwern5"},"content":"        String expectedToString \u003d \"[E][ ] event (on: 01 Jan 2024 12:00AM to 12:00PM)\";","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"yiwern5"},"content":"        String actualToString \u003d event.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"yiwern5"},"content":"        assertInstanceOf(Event.class, event);","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"yiwern5"},"content":"        assertEquals(expectedToString, actualToString);","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"yiwern5"},"content":"    @Test","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"yiwern5"},"content":"    public void deadlineTest() {","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"yiwern5"},"content":"        String expectedToString \u003d \"[D][ ] deadline (by: 01 Jan 2024 12:00PM, MONDAY)\";","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"yiwern5"},"content":"        String actualToString \u003d deadline.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"yiwern5"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"yiwern5"},"content":"        assertInstanceOf(Deadline.class, deadline);","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"yiwern5"},"content":"        assertEquals(expectedToString, actualToString);","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"yiwern5"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"yiwern5"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"yiwern5":50}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yiwern5"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"yiwern5"},"content":"deadline assignment /by 06-04-2024 2359","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"yiwern5"},"content":"event ST2132 exam /from 07-05-2024 1600 /to 1800","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"yiwern5"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"yiwern5"},"content":"mark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"yiwern5"},"content":"unmark 8","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"yiwern5"},"content":"event go library","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"yiwern5"},"content":"deadline","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"yiwern5"},"content":"blah","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"yiwern5"},"content":"delete 1","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"yiwern5"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"yiwern5"},"content":"bye","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"yiwern5":12}}]
