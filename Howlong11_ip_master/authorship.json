[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"Howlong11"},"content":"    mainClass.set(\"Duke\")","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Howlong11":1,"-":41}},{"path":"data/lemona.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Howlong11"},"content":"[T] / [ ] / vitamin c","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Howlong11"},"content":"[T] / [ ] / vitamin b","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Howlong11":2}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Howlong11"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Howlong11"},"content":" * Class to initiate the LEMONA task manager","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Howlong11"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Howlong11"},"content":"     * The main method to start the Duke application.","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Howlong11"},"content":"     * Creates an instance of Lemona task manager and runs it.","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Howlong11"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Howlong11"},"content":"        Lemona lemona \u003d new Lemona(\"data/lemona.txt\");","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Howlong11"},"content":"        lemona.run();","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Howlong11"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Howlong11":13,"-":3}},{"path":"src/main/java/Lemona.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Howlong11"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"Howlong11"},"content":"import oop.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Howlong11"},"content":"import oop.Parser;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Howlong11"},"content":"import oop.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Howlong11"},"content":"import oop.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"Howlong11"},"content":"import task.Todo;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Howlong11"},"content":"import task.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Howlong11"},"content":"import task.Event;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Howlong11"},"content":"import task.Deadline;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Howlong11"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Howlong11"},"content":" * The main class representing the Lemona task manager application.","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Howlong11"},"content":" * Lemona allows users to manage their tasks by adding, listing, marking, and deleting tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Howlong11"},"content":" * It also provides the functionality to save tasks to a file and load tasks from a file.","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Howlong11"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Howlong11"},"content":"public class Lemona {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"Howlong11"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Howlong11"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Howlong11"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Howlong11"},"content":"     * Constructs a Lemona object with the specified file path for task storage.","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Howlong11"},"content":"     * @param filePath The file path to store tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Howlong11"},"content":"    public Lemona(String filePath) {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Howlong11"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Howlong11"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Howlong11"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"Howlong11"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Howlong11"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"Howlong11"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Howlong11"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"Howlong11"},"content":"     * Runs the Lemona application.","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Howlong11"},"content":"     * Displays a welcome message and continuously waits for user input.","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Howlong11"},"content":"     * Processes user commands and performs corresponding actions.","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Howlong11"},"content":"     * Exits the application when the \"bye\" command is entered.","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Howlong11"},"content":"    public void run() {","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"Howlong11"},"content":"        ui.greet();","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"Howlong11"},"content":"        while (true) {","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"Howlong11"},"content":"            String input \u003d ui.readInput();","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"Howlong11"},"content":"            String[] parsedInput \u003d Parser.parse(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"Howlong11"},"content":"            switch (parsedInput[0]) {","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"Howlong11"},"content":"            case (\"bye\"):","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"Howlong11"},"content":"                ui.bye();","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"Howlong11"},"content":"                System.exit(0);","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"Howlong11"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"Howlong11"},"content":"            case (\"mark\"):","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"Howlong11"},"content":"                tasks.mark(Integer.parseInt(parsedInput[1]));","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"Howlong11"},"content":"                storage.save(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"Howlong11"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"Howlong11"},"content":"            case (\"unmark\"):","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"Howlong11"},"content":"                tasks.unmark(Integer.parseInt(parsedInput[1]));","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"Howlong11"},"content":"                storage.save(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"Howlong11"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"Howlong11"},"content":"            case (\"delete\"):","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"Howlong11"},"content":"                tasks.delete(Integer.parseInt(parsedInput[1]));","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"Howlong11"},"content":"                storage.save(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"Howlong11"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"Howlong11"},"content":"            case (\"list\"):","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"Howlong11"},"content":"                ui.list(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"Howlong11"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"Howlong11"},"content":"            case (\"todo\"):","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"Howlong11"},"content":"                Task task \u003d new Todo(parsedInput[1]);","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"Howlong11"},"content":"                tasks.add(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"Howlong11"},"content":"                storage.save(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"Howlong11"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"Howlong11"},"content":"            case (\"deadline\"):","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"Howlong11"},"content":"                task \u003d new Deadline(parsedInput[1], parsedInput[2]);","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"Howlong11"},"content":"                tasks.add(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"Howlong11"},"content":"                storage.save(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"Howlong11"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"Howlong11"},"content":"            case (\"event\"):","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"Howlong11"},"content":"                task \u003d new Event(parsedInput[1], parsedInput[2], parsedInput[3]);","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"Howlong11"},"content":"                tasks.add(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"Howlong11"},"content":"                storage.save(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"Howlong11"},"content":"                break;","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"Howlong11"},"content":"            case (\"find\"):","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"Howlong11"},"content":"                tasks.find(parsedInput[1]);","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"Howlong11"},"content":"                break;","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"Howlong11"},"content":"            default:","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"Howlong11"},"content":"                break;","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"Howlong11"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":91,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":92,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"Howlong11"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"Howlong11":93}},{"path":"src/main/java/Task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Howlong11"},"content":"package task;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Howlong11"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Howlong11"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Howlong11"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Howlong11"},"content":"import java.util.Locale;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"Howlong11"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Howlong11"},"content":" * Represents a task with a deadline in the task manager application.","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Howlong11"},"content":" * A deadline task has a description and a due date.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Howlong11"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Howlong11"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Howlong11"},"content":"    private LocalDateTime dueDate;","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Howlong11"},"content":"    private static final String LINE \u003d \"\\t______________________________________________________\";","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Howlong11"},"content":"    private DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"Howlong11"},"content":"    private DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\", Locale.ENGLISH);","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Howlong11"},"content":"     * Constructs a Deadline task with the specified description and due date.","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Howlong11"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Howlong11"},"content":"     * @param dueDate The due date of the deadline task in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Howlong11"},"content":"    public Deadline(String description, String dueDate) {","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"Howlong11"},"content":"        super(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Howlong11"},"content":"        this.dueDate \u003d LocalDateTime.parse(dueDate, inputFormat);","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"Howlong11"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"Howlong11"},"content":"    public String print(){","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Howlong11"},"content":"        String str \u003d \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Howlong11"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Howlong11"},"content":"            String time \u003d dueDate.format(outputFormat);","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"Howlong11"},"content":"            str \u003d \"[D]\" + super.print() + \"(by: \" + time + \")\";","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Howlong11"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"Howlong11"},"content":"            System.out.println(\"\\t I think you haven\u0027t had enough vitamin C.\"","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"Howlong11"},"content":"                    + \"\\n\\t Your time format should be :\"","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Howlong11"},"content":"                    + \"\\n\\t\\t { dd/MM/yyyy HHmm }\"","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Howlong11"},"content":"                    + \"\\n\\t I suggest you take some LEMONA.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Howlong11"},"content":"        return str;","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"Howlong11"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"Howlong11"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"Howlong11"},"content":"        String time \u003d dueDate.format(outputFormat);","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"Howlong11"},"content":"        String str \u003d \"[D]\" + super.getDescription() + \" \" + time;","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"Howlong11"},"content":"        return str;","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"Howlong11"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"Howlong11"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"Howlong11"},"content":"        String time \u003d dueDate.format(outputFormat);","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"Howlong11"},"content":"        return \"[D] \" + \"/ [\" + super.getStatusIcon()","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"Howlong11"},"content":"                + \"] / \" + super.getTaskInfo() + \"/ \" + time;","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"Howlong11"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Howlong11":61}},{"path":"src/main/java/Task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Howlong11"},"content":"package task;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Howlong11"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"Howlong11"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"Howlong11"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Howlong11"},"content":"import java.util.Locale;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Howlong11"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Howlong11"},"content":" * Represents an event task in the task manager application.","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Howlong11"},"content":" * An event task has a description, start time, and end time.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Howlong11"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Howlong11"},"content":"public class Event extends Task{","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"Howlong11"},"content":"    private LocalDateTime startTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"Howlong11"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"Howlong11"},"content":"    private static final String LINE \u003d \"\\t______________________________________________________\";","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Howlong11"},"content":"    private DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"Howlong11"},"content":"    private DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\", Locale.ENGLISH);","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Howlong11"},"content":"     * Constructs an Event task with the specified description, start time, and end time.","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Howlong11"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Howlong11"},"content":"     * @param startTime The start time of the event in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Howlong11"},"content":"     * @param endTime The end time of the event in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Howlong11"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Howlong11"},"content":"        super(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"Howlong11"},"content":"        this.startTime \u003d LocalDateTime.parse(startTime, inputFormat);","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"Howlong11"},"content":"        this.endTime \u003d LocalDateTime.parse(endTime, inputFormat);","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"Howlong11"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"Howlong11"},"content":"    public String print() {","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"Howlong11"},"content":"        String str \u003d \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Howlong11"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Howlong11"},"content":"            String start \u003d startTime.format(outputFormat);","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"Howlong11"},"content":"            String end \u003d endTime.format(outputFormat);","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"Howlong11"},"content":"            str \u003d \"[E]\" + super.print() + \"(from: \" +","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Howlong11"},"content":"                    start + \") (to: \" + end + \")\";","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Howlong11"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"Howlong11"},"content":"            System.out.println(\"\\t I think you haven\u0027t had enough vitamin C.\"","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Howlong11"},"content":"                    + \"\\n\\t Your time format should be :\"","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"Howlong11"},"content":"                    + \"\\n\\t\\t { dd/MM/yyyy HHmm }\"","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"Howlong11"},"content":"                    + \"\\n\\t I suggest you take some LEMONA.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"Howlong11"},"content":"        return str;","lastModifiedDate":"2024-01-26"},{"lineNumber":51,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"Howlong11"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"Howlong11"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"Howlong11"},"content":"        String start \u003d startTime.format(outputFormat);","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"Howlong11"},"content":"        String end \u003d endTime.format(outputFormat);","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"Howlong11"},"content":"        String str \u003d \"[E] \" + super.getDescription() + \" \" + start + \" \" + end;","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"Howlong11"},"content":"        return str;","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"Howlong11"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"Howlong11"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"Howlong11"},"content":"        String start \u003d startTime.format(outputFormat);","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"Howlong11"},"content":"        String end \u003d endTime.format(outputFormat);","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"Howlong11"},"content":"        return \"[E] \" + \"/ [\" + super.getStatusIcon() + \"] / \" + super.getTaskInfo() + \"/ \" + start","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"Howlong11"},"content":"                + \"/ \" + end;","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"Howlong11"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Howlong11":68}},{"path":"src/main/java/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Howlong11"},"content":"package task;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Howlong11"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Howlong11"},"content":" * Represents a generic task in the task manager application.","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Howlong11"},"content":" * A task has a description and can be marked as done or undone.","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Howlong11"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Howlong11"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"Howlong11"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"Howlong11"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"Howlong11"},"content":"    protected String type;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Howlong11"},"content":"     * Constructs a Task with the specified description.","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Howlong11"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Howlong11"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"Howlong11"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"Howlong11"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Howlong11"},"content":"     * Gets the status icon of the task.","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Howlong11"},"content":"     * Returns \"X\" if the task is done, otherwise returns a space.","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Howlong11"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Howlong11"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"Howlong11"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Howlong11"},"content":"     * Gets the description of the task.","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Howlong11"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Howlong11"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"Howlong11"},"content":"        return this.description;","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Howlong11"},"content":"     * Gets the detailed information about the task.","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Howlong11"},"content":"     * This method is intended to be overridden by subclasses.","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Howlong11"},"content":"     * @return The detailed information about the task.","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"Howlong11"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"Howlong11"},"content":"        return this.description;","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"Howlong11"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"Howlong11"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"Howlong11"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"Howlong11"},"content":"     * Marks the task as undone.","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"Howlong11"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"Howlong11"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"Howlong11"},"content":"     * Prints the formatted string representation of the task.","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"Howlong11"},"content":"     * @return The formatted string representation of the task.","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"Howlong11"},"content":"    public String print() {","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"Howlong11"},"content":"        String str \u003d \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"Howlong11"},"content":"        return str;","lastModifiedDate":"2024-01-26"},{"lineNumber":73,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":74,"author":{"gitId":"Howlong11"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"Howlong11":74}},{"path":"src/main/java/Task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Howlong11"},"content":"package task;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Howlong11"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Howlong11"},"content":" * Represents a todo task in the task manager application.","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Howlong11"},"content":" * A todo task has a description and can be marked as done or undone.","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Howlong11"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Howlong11"},"content":"public class Todo extends Task{","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Howlong11"},"content":"     * Constructs a Todo task with the specified description.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Howlong11"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Howlong11"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"Howlong11"},"content":"        super(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"Howlong11"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"Howlong11"},"content":"    public String print() {","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"Howlong11"},"content":"        String str \u003d \"[T]\" + super.print();","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Howlong11"},"content":"        return str;","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"Howlong11"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"Howlong11"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"Howlong11"},"content":"        String str \u003d \"[T] \" + super.getDescription();","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"Howlong11"},"content":"        return str;","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"Howlong11"},"content":"    @Override","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"Howlong11"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"Howlong11"},"content":"        return \"[T] \" + \"/ [\" + super.getStatusIcon()","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"Howlong11"},"content":"                + \"] / \" + super.getTaskInfo();","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"Howlong11"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Howlong11":35}},{"path":"src/main/java/exceptions/DuplicateInstructionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Howlong11"},"content":"package exceptions;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Howlong11"},"content":"public class DuplicateInstructionException extends Exception{","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Howlong11"},"content":"    public String toString(String string) {","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Howlong11"},"content":"        String str;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Howlong11"},"content":"        switch (string) {","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Howlong11"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Howlong11"},"content":"            str \u003d \"\\t I think you haven\u0027t had enough vitamin D.\"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Howlong11"},"content":"                    + \"\\n\\t Your task is already marked!\";","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Howlong11"},"content":"            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Howlong11"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Howlong11"},"content":"            str \u003d \"\\t I think you haven\u0027t had enough vitamin D.\"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Howlong11"},"content":"                    + \"\\n\\t Your task is already unmarked!\";","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Howlong11"},"content":"            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Howlong11"},"content":"        default:","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Howlong11"},"content":"            str \u003d \"\\t I think you haven\u0027t had enough vitamin D.\"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Howlong11"},"content":"                    + \"\\n\\t Your task is already existing in the list!\";","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"Howlong11"},"content":"            break;","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"Howlong11"},"content":"        str \u003d str + \"\\n\\t I suggest you take some LEMONA\";","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"Howlong11"},"content":"        return str;","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"Howlong11"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Howlong11":22}},{"path":"src/main/java/exceptions/MissingDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Howlong11"},"content":"package exceptions;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Howlong11"},"content":"public class MissingDescriptionException  extends Exception{","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Howlong11"},"content":"    public String toString(String string) {","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Howlong11"},"content":"        String str \u003d \"\\t I think you haven\u0027t had enough vitamin K.\" +","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Howlong11"},"content":"                \"\\n\\t Your input should be in format of:\";","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Howlong11"},"content":"        if (string.equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Howlong11"},"content":"            str \u003d str + \"\\n\\t\\t { todo (Task) }\";","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Howlong11"},"content":"        } else if (string.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Howlong11"},"content":"            str \u003d str + \"\\n\\t\\t { deadline (Task) (/by DueDate) }\";","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Howlong11"},"content":"        } else if (string.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Howlong11"},"content":"            str \u003d str + \"\\n\\t\\t { event (Task) (/from StartDate) (/to EndDate) }\";","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Howlong11"},"content":"        str \u003d str + \"\\n\\t I suggest you take some LEMONA.\";","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Howlong11"},"content":"        return str;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Howlong11"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Howlong11":16}},{"path":"src/main/java/exceptions/MissingIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Howlong11"},"content":"package exceptions;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Howlong11"},"content":"public class MissingIndexException extends Exception{","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Howlong11"},"content":"    public String toString(String string) {","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Howlong11"},"content":"        String str \u003d \"\\t I think you haven\u0027t had enough vitamin C.\" +","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Howlong11"},"content":"                \"\\n\\t You need to tell me which task to \" + string +","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Howlong11"},"content":"                \"!\\n\\t I suggest you take some LEMONA.\";","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Howlong11"},"content":"        return str;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Howlong11"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Howlong11":9}},{"path":"src/main/java/exceptions/OutOfIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Howlong11"},"content":"package exceptions;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Howlong11"},"content":"public class OutOfIndexException extends Exception {","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"Howlong11"},"content":"    public String toString(Integer index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"Howlong11"},"content":"        String message;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"Howlong11"},"content":"        if (index \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"Howlong11"},"content":"            message \u003d \"\\n\\t You only have 1 task!\";","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"Howlong11"},"content":"        } else if (index \u003d\u003d 0) {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"Howlong11"},"content":"            message \u003d \"\\n\\t You do not have any task!\";","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"Howlong11"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"Howlong11"},"content":"            message \u003d \"\\n\\t You only have \" + index + \" tasks!\";","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"Howlong11"},"content":"        String str \u003d \"\\t I think you haven\u0027t had enough vitamin A.\" +","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"Howlong11"},"content":"                message + \"\\n\\t I suggest you take some LEMONA.\";","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"Howlong11"},"content":"        return str;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"Howlong11"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"Howlong11":16}},{"path":"src/main/java/oop/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Howlong11"},"content":"package oop;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Howlong11"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Howlong11"},"content":"import exceptions.MissingIndexException;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Howlong11"},"content":"import exceptions.MissingDescriptionException;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Howlong11"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Howlong11"},"content":" * Represents a parser utility for parsing user input.","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Howlong11"},"content":" * Parser parses the user input into meaningful parts for further processing.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Howlong11"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Howlong11"},"content":"public class Parser {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Howlong11"},"content":"    private static final String LINE \u003d \"\\t______________________________________________________\";","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Howlong11"},"content":"     * Trims the input string and splits it into parts.","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Howlong11"},"content":"     * @param input The input string to be trimmed and split.","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Howlong11"},"content":"     * @return An array containing the trimmed and non-empty parts of the input string.","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Howlong11"},"content":"    public static String[] trim(String input) {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Howlong11"},"content":"        String[] untrimmedParts \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Howlong11"},"content":"        String[] parts \u003d Arrays.stream(untrimmedParts)","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Howlong11"},"content":"                .map(String::trim)","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Howlong11"},"content":"                .filter(s -\u003e !s.isEmpty())","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Howlong11"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Howlong11"},"content":"        return parts;","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Howlong11"},"content":"     * Parses the input string into meaningful parts.","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Howlong11"},"content":"     * @param input The input string to be parsed.","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Howlong11"},"content":"     * @return An array containing the parsed parts of the input string.","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Howlong11"},"content":"    public static String[] parse(String input) {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Howlong11"},"content":"        String[] parts \u003d trim(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Howlong11"},"content":"        int size \u003d parts.length;","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"Howlong11"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"Howlong11"},"content":"            if (parts[0].equals(\"mark\") || parts[0].equals(\"unmark\") || parts[0].equals(\"delete\") \u0026\u0026 size \u003d\u003d 1) {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Howlong11"},"content":"                if (size \u003d\u003d 1) {","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Howlong11"},"content":"                    throw new MissingIndexException();","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Howlong11"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Howlong11"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"Howlong11"},"content":"            switch (parts[0]) {","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"Howlong11"},"content":"            case (\"deadline\"):","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"Howlong11"},"content":"                if (size \u003d\u003d 1 || parts[1].split(\"/by \").length \u003d\u003d 1) {","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"Howlong11"},"content":"                    throw new MissingDescriptionException();","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"Howlong11"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"Howlong11"},"content":"                String[] content \u003d parts[1].split(\"/by \");","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"Howlong11"},"content":"                String[] temp \u003d parts;","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"Howlong11"},"content":"                parts \u003d new String[3];","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"Howlong11"},"content":"                parts[0] \u003d temp[0];","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"Howlong11"},"content":"                parts[1] \u003d content[0];","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"Howlong11"},"content":"                parts[2] \u003d content[1];","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"Howlong11"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"Howlong11"},"content":"            case (\"event\"):","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"Howlong11"},"content":"                if (size \u003d\u003d 1 || parts[1].split(\"/from \").length \u003d\u003d 1) {","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"Howlong11"},"content":"                    throw new MissingDescriptionException();","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"Howlong11"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"Howlong11"},"content":"                content \u003d parts[1].split(\"/from \");","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"Howlong11"},"content":"                if (size \u003d\u003d 1 || content[1].split(\"/to \").length \u003d\u003d 1) {","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"Howlong11"},"content":"                    throw new MissingDescriptionException();","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"Howlong11"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"Howlong11"},"content":"                String[] dates \u003d content[1].split(\" /to \");","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"Howlong11"},"content":"                temp \u003d parts;","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"Howlong11"},"content":"                parts \u003d new String[4];","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"Howlong11"},"content":"                parts[0] \u003d temp[0];","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"Howlong11"},"content":"                parts[1] \u003d content[0];","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"Howlong11"},"content":"                parts[2] \u003d dates[0];","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"Howlong11"},"content":"                parts[3] \u003d dates[1];","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"Howlong11"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"Howlong11"},"content":"            case (\"todo\"):","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"Howlong11"},"content":"                if (size \u003d\u003d 1) {","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"Howlong11"},"content":"                    throw new MissingDescriptionException();","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"Howlong11"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"Howlong11"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"Howlong11"},"content":"            default:","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"Howlong11"},"content":"                if (!parts[0].equals(\"list\") \u0026\u0026 !parts[0].equals(\"bye\") \u0026\u0026 !parts[0].equals(\"mark\")","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"Howlong11"},"content":"                        \u0026\u0026 !parts[0].equals(\"unmark\") \u0026\u0026 !parts[0].equals(\"delete\") \u0026\u0026 !parts[0].equals(\"find\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"Howlong11"},"content":"                    System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"Howlong11"},"content":"                    System.out.println(\"\\t I think you haven\u0027t had enough vitamin C.\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"Howlong11"},"content":"                            \"\\n\\t I can\u0027t understand what you want me to do!\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"Howlong11"},"content":"                            \"\\n\\t I suggest you take some LEMONA.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"Howlong11"},"content":"                    System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"Howlong11"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"Howlong11"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"Howlong11"},"content":"        } catch (MissingDescriptionException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":95,"author":{"gitId":"Howlong11"},"content":"            System.out.println(e.toString(parts[0]));","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"Howlong11"},"content":"        } catch (MissingIndexException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"Howlong11"},"content":"            System.out.println(e.toString(parts[0]));","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":101,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"Howlong11"},"content":"        return parts;","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"Howlong11"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Howlong11":104}},{"path":"src/main/java/oop/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Howlong11"},"content":"package oop;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Howlong11"},"content":"import java.io.File;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Howlong11"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Howlong11"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Howlong11"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Howlong11"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Howlong11"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Howlong11"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Howlong11"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Howlong11"},"content":"import task.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Howlong11"},"content":"import task.Todo;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Howlong11"},"content":"import task.Deadline;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Howlong11"},"content":"import task.Event;","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Howlong11"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Howlong11"},"content":" * Represents the storage utility for saving and loading tasks from a file.","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Howlong11"},"content":" * Storage handles the reading and writing of tasks to and from a specified file.","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Howlong11"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Howlong11"},"content":"public class Storage {","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Howlong11"},"content":"    private static String filePath;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Howlong11"},"content":"    private static final String LINE \u003d \"\\t______________________________________________________\";","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Howlong11"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Howlong11"},"content":"     * @param filePath The file path where tasks will be stored.","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"Howlong11"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Howlong11"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Howlong11"},"content":"     * Converts the list of tasks to a string representation.","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"Howlong11"},"content":"     * @param list The list of tasks to be converted to string.","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"Howlong11"},"content":"     * @return The string representation of the list of tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Howlong11"},"content":"    public static String listToString(TaskList list) {","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Howlong11"},"content":"        String content \u003d \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Howlong11"},"content":"        for (int i \u003d 0; i \u003c list.size() - 1; i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Howlong11"},"content":"            Task task \u003d list.get(i);","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"Howlong11"},"content":"            content \u003d content + task.getTaskInfo() + \"\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"Howlong11"},"content":"        Task task \u003d list.get(list.size() - 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"Howlong11"},"content":"        content \u003d content + task.getTaskInfo();","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"Howlong11"},"content":"        return content;","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"Howlong11"},"content":"     * Converts the string representation of tasks to a list of Task objects.","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"Howlong11"},"content":"     * @param tasks The list of tasks to be populated with Task objects.","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"Howlong11"},"content":"     * @param text The string representation of tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"Howlong11"},"content":"     * @return The populated list of tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"Howlong11"},"content":"    public static ArrayList\u003cTask\u003e stringToList(ArrayList\u003cTask\u003e tasks, String text) {","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"Howlong11"},"content":"        String[] list \u003d text.split(\"(new) \");","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"Howlong11"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"Howlong11"},"content":"            for (String s : list) {","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"Howlong11"},"content":"                String[] info \u003d s.split(\"/ \");","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"Howlong11"},"content":"                switch (info[0]) {","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"Howlong11"},"content":"                    case \"[T] \":","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"Howlong11"},"content":"                        Task task \u003d new Todo(info[2]);","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"Howlong11"},"content":"                        if (info[1].equals(\"[X]\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"Howlong11"},"content":"                            task.markAsDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"Howlong11"},"content":"                        }","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"Howlong11"},"content":"                        tasks.add(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"Howlong11"},"content":"                        break;","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"Howlong11"},"content":"                    case \"[D] \":","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"Howlong11"},"content":"                        String dueDate \u003d LocalDateTime.parse(info[3], DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"))","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"Howlong11"},"content":"                                .format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"Howlong11"},"content":"                        task \u003d new Deadline(info[2], dueDate);","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"Howlong11"},"content":"                        if (info[1].equals(\"[X]\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"Howlong11"},"content":"                            task.markAsDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"Howlong11"},"content":"                        }","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"Howlong11"},"content":"                        tasks.add(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"Howlong11"},"content":"                        break;","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"Howlong11"},"content":"                    case \"[E] \":","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"Howlong11"},"content":"                        String startTime \u003d LocalDateTime.parse(info[3], DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"))","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"Howlong11"},"content":"                                .format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"Howlong11"},"content":"                        String endTime \u003d LocalDateTime.parse(info[4], DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"))","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"Howlong11"},"content":"                                .format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"Howlong11"},"content":"                        task \u003d new Event(info[2], startTime, endTime);","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"Howlong11"},"content":"                        if (info[1].equals(\"[X]\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"Howlong11"},"content":"                            task.markAsDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"Howlong11"},"content":"                        }","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"Howlong11"},"content":"                        tasks.add(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"Howlong11"},"content":"                        break;","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"Howlong11"},"content":"                    default:","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"Howlong11"},"content":"                        System.out.println(\"File is corrupted!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"Howlong11"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"Howlong11"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"Howlong11"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"Howlong11"},"content":"            System.out.println(\"\\t I think you haven\u0027t had enough vitamin C.\"","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"Howlong11"},"content":"                    + \"\\n\\t Your time format should be :\"","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"Howlong11"},"content":"                    + \"\\n\\t\\t { dd/MM/yyyy HHmm }\"","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"Howlong11"},"content":"                    + \"\\n\\t I suggest you take some LEMONA.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":104,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"Howlong11"},"content":"        return tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":108,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"Howlong11"},"content":"     * Loads tasks from the file specified by the file path.","lastModifiedDate":"2024-02-07"},{"lineNumber":110,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"Howlong11"},"content":"     * @return The list of tasks loaded from the file.","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"Howlong11"},"content":"     * @throws IOException If an I/O error occurs while reading the file.","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"Howlong11"},"content":"    public static ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2024-02-07"},{"lineNumber":115,"author":{"gitId":"Howlong11"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":116,"author":{"gitId":"Howlong11"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":117,"author":{"gitId":"Howlong11"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":118,"author":{"gitId":"Howlong11"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2024-02-07"},{"lineNumber":119,"author":{"gitId":"Howlong11"},"content":"            file.createNewFile();","lastModifiedDate":"2024-02-07"},{"lineNumber":120,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":121,"author":{"gitId":"Howlong11"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-02-07"},{"lineNumber":122,"author":{"gitId":"Howlong11"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":123,"author":{"gitId":"Howlong11"},"content":"            String task \u003d scanner.nextLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":124,"author":{"gitId":"Howlong11"},"content":"            tasks \u003d stringToList(tasks, task);","lastModifiedDate":"2024-02-07"},{"lineNumber":125,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":126,"author":{"gitId":"Howlong11"},"content":"        return tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":127,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":128,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":129,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":130,"author":{"gitId":"Howlong11"},"content":"     * Saves the tasks in the specified task list to the file.","lastModifiedDate":"2024-02-07"},{"lineNumber":131,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":132,"author":{"gitId":"Howlong11"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2024-02-07"},{"lineNumber":133,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":134,"author":{"gitId":"Howlong11"},"content":"    public static void save(TaskList tasks){","lastModifiedDate":"2024-02-07"},{"lineNumber":135,"author":{"gitId":"Howlong11"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":136,"author":{"gitId":"Howlong11"},"content":"            if (tasks.size() !\u003d 0) {","lastModifiedDate":"2024-02-07"},{"lineNumber":137,"author":{"gitId":"Howlong11"},"content":"                File file \u003d new File(filePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":138,"author":{"gitId":"Howlong11"},"content":"                if (!file.exists()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":139,"author":{"gitId":"Howlong11"},"content":"                    file.getParentFile().mkdirs();","lastModifiedDate":"2024-02-07"},{"lineNumber":140,"author":{"gitId":"Howlong11"},"content":"                    file.createNewFile();","lastModifiedDate":"2024-02-07"},{"lineNumber":141,"author":{"gitId":"Howlong11"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":142,"author":{"gitId":"Howlong11"},"content":"                FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2024-02-07"},{"lineNumber":143,"author":{"gitId":"Howlong11"},"content":"                fw.write(listToString(tasks));","lastModifiedDate":"2024-02-07"},{"lineNumber":144,"author":{"gitId":"Howlong11"},"content":"                fw.close();","lastModifiedDate":"2024-02-07"},{"lineNumber":145,"author":{"gitId":"Howlong11"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":146,"author":{"gitId":"Howlong11"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":147,"author":{"gitId":"Howlong11"},"content":"            System.out.println(\"\\t Sorry, I think I haven\u0027t had enough vitamin C.\"","lastModifiedDate":"2024-02-07"},{"lineNumber":148,"author":{"gitId":"Howlong11"},"content":"                    + \"\\n\\t I am unable to save tasks into the file.\"","lastModifiedDate":"2024-02-07"},{"lineNumber":149,"author":{"gitId":"Howlong11"},"content":"                    + \"\\n\\t I will need to go have some LEMONA.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":150,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":151,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":152,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":153,"author":{"gitId":"Howlong11"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Howlong11":153}},{"path":"src/main/java/oop/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Howlong11"},"content":"package oop;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Howlong11"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Howlong11"},"content":"import task.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"Howlong11"},"content":"import exceptions.DuplicateInstructionException;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Howlong11"},"content":"import exceptions.OutOfIndexException;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Howlong11"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Howlong11"},"content":" * Represents a list of tasks in the task manager application.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Howlong11"},"content":" * TaskList manages the tasks, such as adding, marking, unmarking, and deleting tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Howlong11"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Howlong11"},"content":"public class TaskList {","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Howlong11"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"Howlong11"},"content":"    private static final String LINE \u003d \"\\t______________________________________________________\";","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Howlong11"},"content":"     * Constructs a TaskList with the specified list of tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Howlong11"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Howlong11"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Howlong11"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Howlong11"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Howlong11"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"Howlong11"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Howlong11"},"content":"     * Gets the number of tasks in the task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Howlong11"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"Howlong11"},"content":"    public int size() {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Howlong11"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Howlong11"},"content":"    public Task get(int index) {","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Howlong11"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"Howlong11"},"content":"     * Marks the task at the specified index as done.","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"Howlong11"},"content":"     * If the index is out of range or the task is already marked as done, appropriate error messages are displayed.","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"Howlong11"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"Howlong11"},"content":"    public void mark(int index) {","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"Howlong11"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"Howlong11"},"content":"            if (tasks.size() \u003c index) {","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"Howlong11"},"content":"                throw new OutOfIndexException();","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"Howlong11"},"content":"            } else if (tasks.get(index - 1).getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"Howlong11"},"content":"                throw new DuplicateInstructionException();","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"Howlong11"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"Howlong11"},"content":"            tasks.get(index - 1).markAsDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"Howlong11"},"content":"            System.out.println(\"\\t Nice! I\u0027ve marked this task as done:\" + \"\\n\\t\\t\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"Howlong11"},"content":"                    tasks.get(index - 1).print());","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"Howlong11"},"content":"        } catch (OutOfIndexException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"Howlong11"},"content":"            System.out.println(e.toString(tasks.size()));","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"Howlong11"},"content":"        } catch (DuplicateInstructionException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"Howlong11"},"content":"            System.out.println(e.toString(\"mark\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"Howlong11"},"content":"     * Marks the task at the specified index as not done yet (undone).","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"Howlong11"},"content":"     * If the index is out of range or the task is already marked as not done, appropriate error messages are displayed.","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"Howlong11"},"content":"     * @param index The index of the task to mark as not done yet.","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"Howlong11"},"content":"    public void unmark(int index) {","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"Howlong11"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"Howlong11"},"content":"            if (tasks.size() \u003c index) {","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"Howlong11"},"content":"                throw new OutOfIndexException();","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"Howlong11"},"content":"            } else if (tasks.get(index - 1).getStatusIcon().equals(\" \")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"Howlong11"},"content":"                throw new DuplicateInstructionException();","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"Howlong11"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"Howlong11"},"content":"            tasks.get(index - 1).unmarkAsDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":92,"author":{"gitId":"Howlong11"},"content":"            System.out.println(\"\\t OK, I\u0027ve marked this task as not done yet:\" + \"\\n\\t\\t\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"Howlong11"},"content":"                    tasks.get(index - 1).print());","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":95,"author":{"gitId":"Howlong11"},"content":"        } catch (OutOfIndexException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"Howlong11"},"content":"            System.out.println(e.toString(tasks.size()));","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"Howlong11"},"content":"        } catch (DuplicateInstructionException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":101,"author":{"gitId":"Howlong11"},"content":"            System.out.println(e.toString(\"unmark\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":103,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"Howlong11"},"content":"     * Deletes the task at the specified index from the task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":108,"author":{"gitId":"Howlong11"},"content":"     * If the index is out of range, appropriate error message is displayed.","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":110,"author":{"gitId":"Howlong11"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"Howlong11"},"content":"    public void delete(int index) {","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"Howlong11"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"Howlong11"},"content":"            if (tasks.size() \u003c index || index \u003c 1) {","lastModifiedDate":"2024-02-07"},{"lineNumber":115,"author":{"gitId":"Howlong11"},"content":"                throw new OutOfIndexException();","lastModifiedDate":"2024-02-07"},{"lineNumber":116,"author":{"gitId":"Howlong11"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":117,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":118,"author":{"gitId":"Howlong11"},"content":"            System.out.println(\"\\t OK, I\u0027ve removed this task:\" + \"\\n\\t\\t\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":119,"author":{"gitId":"Howlong11"},"content":"                    tasks.get(index - 1).print());","lastModifiedDate":"2024-02-07"},{"lineNumber":120,"author":{"gitId":"Howlong11"},"content":"            tasks.remove(index - 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":121,"author":{"gitId":"Howlong11"},"content":"            System.out.println(\"\\t Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":122,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":123,"author":{"gitId":"Howlong11"},"content":"        } catch (OutOfIndexException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":124,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":125,"author":{"gitId":"Howlong11"},"content":"            System.out.println(e.toString(tasks.size()));","lastModifiedDate":"2024-02-07"},{"lineNumber":126,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":127,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":128,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":129,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":130,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":131,"author":{"gitId":"Howlong11"},"content":"     * Adds the given task to the task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":132,"author":{"gitId":"Howlong11"},"content":"     * If the task description already exists in the list, appropriate error message is displayed.","lastModifiedDate":"2024-02-07"},{"lineNumber":133,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":134,"author":{"gitId":"Howlong11"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2024-02-07"},{"lineNumber":135,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":136,"author":{"gitId":"Howlong11"},"content":"    public void add(Task task){","lastModifiedDate":"2024-02-07"},{"lineNumber":137,"author":{"gitId":"Howlong11"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":138,"author":{"gitId":"Howlong11"},"content":"            for (Task value : tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":139,"author":{"gitId":"Howlong11"},"content":"                if (value.getDescription().equals(task.getDescription())) {","lastModifiedDate":"2024-02-07"},{"lineNumber":140,"author":{"gitId":"Howlong11"},"content":"                    throw new DuplicateInstructionException();","lastModifiedDate":"2024-02-07"},{"lineNumber":141,"author":{"gitId":"Howlong11"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":142,"author":{"gitId":"Howlong11"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":143,"author":{"gitId":"Howlong11"},"content":"            tasks.add(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":144,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":145,"author":{"gitId":"Howlong11"},"content":"            System.out.println(\"\\t Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":146,"author":{"gitId":"Howlong11"},"content":"            System.out.print(\"\\t   \" + task.print());","lastModifiedDate":"2024-02-07"},{"lineNumber":147,"author":{"gitId":"Howlong11"},"content":"            System.out.println(\"\\n\\t Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":148,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":149,"author":{"gitId":"Howlong11"},"content":"        } catch (DuplicateInstructionException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":150,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":151,"author":{"gitId":"Howlong11"},"content":"            System.out.println(e.toString(\"\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":152,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":153,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":154,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":155,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":156,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":157,"author":{"gitId":"Howlong11"},"content":"     * Searches for tasks that contain the given keyword.","lastModifiedDate":"2024-02-08"},{"lineNumber":158,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":159,"author":{"gitId":"Howlong11"},"content":"     * @param keyword The keyword to search for in the task descriptions.","lastModifiedDate":"2024-02-08"},{"lineNumber":160,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":161,"author":{"gitId":"Howlong11"},"content":"    public ArrayList\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2024-02-08"},{"lineNumber":162,"author":{"gitId":"Howlong11"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-08"},{"lineNumber":163,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":164,"author":{"gitId":"Howlong11"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":165,"author":{"gitId":"Howlong11"},"content":"        System.out.println(\"\\t These are the result of finding the keyword:\");","lastModifiedDate":"2024-02-08"},{"lineNumber":166,"author":{"gitId":"Howlong11"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-08"},{"lineNumber":167,"author":{"gitId":"Howlong11"},"content":"            if (tasks.get(i).getDescription().contains(keyword)) {","lastModifiedDate":"2024-02-08"},{"lineNumber":168,"author":{"gitId":"Howlong11"},"content":"                System.out.println(\"\\t\" + (i + 1) + \". \" + tasks.get(i).print());","lastModifiedDate":"2024-02-08"},{"lineNumber":169,"author":{"gitId":"Howlong11"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":170,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":171,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":172,"author":{"gitId":"Howlong11"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":173,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":174,"author":{"gitId":"Howlong11"},"content":"        return matchingTasks;","lastModifiedDate":"2024-02-08"},{"lineNumber":175,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":176,"author":{"gitId":"Howlong11"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Howlong11":176}},{"path":"src/main/java/oop/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Howlong11"},"content":"package oop;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Howlong11"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Howlong11"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Howlong11"},"content":" * Represents the user interface of the Lemona task manager application.","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Howlong11"},"content":" * Ui handles user interactions and displays messages to the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Howlong11"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Howlong11"},"content":"public class Ui {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Howlong11"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Howlong11"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Howlong11"},"content":"    private static final String LINE \u003d \"\\t______________________________________________________\";","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Howlong11"},"content":"     * Constructs a Ui object and initializes the scanner for user input.","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Howlong11"},"content":"    public Ui() {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Howlong11"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Howlong11"},"content":"     * Reads user input from the console.","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Howlong11"},"content":"     * @return The user input as a string.","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Howlong11"},"content":"    public String readInput() {","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Howlong11"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Howlong11"},"content":"     * Displays a greeting message to the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Howlong11"},"content":"    public void greet() {","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Howlong11"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"Howlong11"},"content":"        System.out.println(\"\\t Hello! I\u0027m Lemona\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Howlong11"},"content":"                \"\\n\\t Would you like some vitamins?\");","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Howlong11"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Howlong11"},"content":"     * Displays a goodbye message to the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Howlong11"},"content":"     * Closes the scanner after displaying the message.","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Howlong11"},"content":"    public void bye() {","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Howlong11"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"Howlong11"},"content":"        System.out.println(\"\\t Bye. Don\u0027t forget to take a LEMONA!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"Howlong11"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"Howlong11"},"content":"        scanner.close();","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"Howlong11"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"Howlong11"},"content":"     * @param list The task list to be displayed.","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"Howlong11"},"content":"    public void list(TaskList list) {","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"Howlong11"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"Howlong11"},"content":"            System.out.println(\"\\t I think you haven\u0027t had enough vitamin E.\"","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"Howlong11"},"content":"                    + \"\\n\\t You do not have any tasks on the list yet!\"","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"Howlong11"},"content":"                    + \"\\n\\t I suggest you take some LEMONA.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"Howlong11"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"Howlong11"},"content":"            System.out.println(\"\\t Here are the tasks in your list:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"Howlong11"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"Howlong11"},"content":"                System.out.println(\"\\t \" + (i + 1) + \". \" + list.get(i).print());","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"Howlong11"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"Howlong11"},"content":"            System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"Howlong11"},"content":"     * Displays an error message when there\u0027s an issue loading tasks from a file.","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"Howlong11"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"Howlong11"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"Howlong11"},"content":"        System.out.println(\"\\t Sorry, I think I haven\u0027t had enough vitamin C.\"","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"Howlong11"},"content":"                + \"\\n\\t There was an error loading file, so I had to make a new taskList for you!\"","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"Howlong11"},"content":"                + \"\\n\\t I will need to go have some LEMONA.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"Howlong11"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"Howlong11"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Howlong11":83}},{"path":"src/test/java/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Howlong11"},"content":"package oop;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Howlong11"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Howlong11"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Howlong11"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Howlong11"},"content":"import task.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Howlong11"},"content":"import task.Todo;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Howlong11"},"content":"import task.Deadline;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Howlong11"},"content":"import task.Event;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Howlong11"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Howlong11"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Howlong11"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Howlong11"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Howlong11"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Howlong11"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Howlong11"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Howlong11"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Howlong11"},"content":"    public void stringToList_givenString_success(){","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Howlong11"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Howlong11"},"content":"        String input \u003d \"[T] / [ ] / vitamin c\";","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Howlong11"},"content":"        Storage storage \u003d new Storage(\"data/lemona.txt\");","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Howlong11"},"content":"        tasks \u003d storage.stringToList(tasks, input);","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Howlong11"},"content":"        assertEquals(\"[T][ ] vitamin c\", tasks.get(0).print());","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Howlong11"},"content":"    @Test void stringToList_dateTimeParse_exceptionThrown() {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Howlong11"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Howlong11"},"content":"        String input \u003d \"[D] / [ ] / vitamin c / 1/1/1\";","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"Howlong11"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Howlong11"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Howlong11"},"content":"        Storage storage \u003d new Storage(\"data/lemona.txt\");","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Howlong11"},"content":"        tasks \u003d storage.stringToList(tasks, input);","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Howlong11"},"content":"        System.setOut(System.out);","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Howlong11"},"content":"        String actualOutput \u003d outContent.toString().trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Howlong11"},"content":"        String output \u003d \"\\t______________________________________________________\"","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"Howlong11"},"content":"                + \"\\n\\t I think you haven\u0027t had enough vitamin C.\"","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"Howlong11"},"content":"                + \"\\n\\t Your time format should be :\"","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Howlong11"},"content":"                + \"\\n\\t\\t { dd/MM/yyyy HHmm }\"","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Howlong11"},"content":"                + \"\\n\\t I suggest you take some LEMONA.\"","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Howlong11"},"content":"                + \"\\n\\t______________________________________________________\";","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Howlong11"},"content":"        assertEquals(output.trim(), actualOutput.replace(\"\\r\\n\", \"\\n\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"Howlong11"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Howlong11":47}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Howlong11"},"content":"package oop;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Howlong11"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Howlong11"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Howlong11"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Howlong11"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Howlong11"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Howlong11"},"content":"import task.Deadline;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Howlong11"},"content":"import task.Event;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"Howlong11"},"content":"import task.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"Howlong11"},"content":"import exceptions.DuplicateInstructionException;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"Howlong11"},"content":"import exceptions.OutOfIndexException;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"Howlong11"},"content":"import task.Todo;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"Howlong11"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"Howlong11"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"Howlong11"},"content":"    public void add_todoTask_success() {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"Howlong11"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"Howlong11"},"content":"        tasks.add(new Todo(\"todoTest\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"Howlong11"},"content":"        //normal adding a Todo task into TaskList","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"Howlong11"},"content":"        assertEquals(\"[T][ ] todoTest\", tasks.get(0).print());","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"Howlong11"},"content":"        tasks.add(new Deadline(\"deadlineTest\", \"01/01/2024 1500\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"Howlong11"},"content":"        //normal adding a Deadline task into TaskList","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"Howlong11"},"content":"        assertEquals(\"[D][ ] deadlineTest(by: Jan 01 2024 1500)\", tasks.get(1).print());","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"Howlong11"},"content":"        tasks.add(new Event(\"eventTest\", \"01/01/2024 1500\", \"01/01/2024 1600\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"Howlong11"},"content":"        //normal adding an Event task into TaskList","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"Howlong11"},"content":"        assertEquals(\"[E][ ] eventTest(from: Jan 01 2024 1500) (to: Jan 01 2024 1600)\", tasks.get(2).print());","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"Howlong11"},"content":"    @Test","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"Howlong11"},"content":"    public void add_duplicateTasks_exceptionThrown() {","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"Howlong11"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"Howlong11"},"content":"        tasks.add(new Todo(\"Test\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"Howlong11"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"Howlong11"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"Howlong11"},"content":"        tasks.add(new Todo(\"Test\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"Howlong11"},"content":"        System.setOut(System.out);","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"Howlong11"},"content":"        String actualOutput \u003d outContent.toString().trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"Howlong11"},"content":"        String output \u003d \"\\t______________________________________________________\"","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"Howlong11"},"content":"                + \"\\n\\t I think you haven\u0027t had enough vitamin D.\"","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"Howlong11"},"content":"                + \"\\n\\t Your task is already existing in the list!\"","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"Howlong11"},"content":"                + \"\\n\\t I suggest you take some LEMONA\"","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"Howlong11"},"content":"                + \"\\n\\t______________________________________________________\";","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"Howlong11"},"content":"        assertEquals(output.trim(), actualOutput.replace(\"\\r\\n\", \"\\n\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"Howlong11"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Howlong11":55}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Howlong11"},"content":"todo vitamin c","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Howlong11"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"Howlong11"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"Howlong11"},"content":"bye","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Howlong11":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"Howlong11"},"content":"del ACTUAL.TXT","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Howlong11"},"content":"java -classpath ..\\bin Lemona \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Howlong11":2,"-":19}}]
