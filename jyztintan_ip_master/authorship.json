[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"checkstyle {","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"    mainClass.set(\"TaskYapper\")","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"jyztintan"},"content":"    archiveBaseName \u003d \"taskyapper\"","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":57,"author":{"gitId":"jyztintan"},"content":"    archiveFileName \u003d \u0027taskyapper.jar\u0027","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jyztintan":22,"-":40}},{"path":"data/taskyapper.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"D | 0 | CS2103T IP | 2024-02-21","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"E | 0 | CNY | 2024-02-10 | 2024-02-24","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"E | 0 | Week 6 | 2024-02-19 | 2024-02-25","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"T | 0 | CS2101 Provisional 1","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"D | 0 | CS2103T TP | 2024-02-22","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"jyztintan":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"# TaskYapper User Guide","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"Welcome to TaskYapper by [Justin Tan](https://www.linkedin.com/in/tan-wee-kian-justin/)","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"The ultimate task management tool that helps you keep track of your todos, deadlines, and events with ease! 🚀🚀🚀","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"![Representative Screenshot for TaskYapper](Ui.png)","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"TaskYapper helps you manage your tasks efficiently with a variety of commands. Below is a guide structured by command descriptors to help you navigate and use TaskYapper effectively.","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"## Getting Started","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"1. Download the jar file.","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"2. Open the folder containing the downloaded jar file in Terminal","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"3. Run `java -jar taskyapper.jar`","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"## TaskYapper Commands","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"### Listing All Tasks","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"- **Command Descriptor:** `yap`","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"- **Format:** `yap`","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"- **Example:** Typing `yap` lists all your tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"### Marking a Task as Done","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"- **Command Descriptor:** `mark`","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"- **Format:** `mark \u003ctask_number\u003e`","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"- **Example:** `mark 1` marks the first task in your list as done.","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"### Unmarking a Task","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"- **Command Descriptor:** `unmark`","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"- **Format:** `unmark \u003ctask_number\u003e`","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"- **Example:** `unmark 1` reverts the first task in your list to not done.","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"### Adding a Todo Task","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"- **Command Descriptor:** `todo`","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"- **Format:** `todo \u003ctask_description\u003e`","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"- **Example:** `todo finish reading TaskYapper user guide` adds a new todo task.","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"### Adding a Deadline Task","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"- **Command Descriptor:** `deadline`","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"- **Format:** `deadline \u003ctask_description\u003e /by \u003cdate: yyyy-mm-dd\u003e`","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"- **Example:** `deadline cs2103t ip /by 2024-02-23` adds a new deadline task.","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"\u003e Note that deadlines require a date, representing the date this task should be done by.","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"### Adding an Event Task","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"- **Command Descriptor:** `event`","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"- **Format:** `event \u003ctask_description\u003e /from \u003cdate: yyyy-mm-dd\u003e /to \u003cdate: yyyy-mm-dd\u003e`","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"- **Example:** `event ay23/24 semester 2 /from 2024-01-15 /to 2024-05-11` adds a new event task.","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"jyztintan"},"content":"\u003e Note that events require a start date and an end date.","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"### Exiting the Application","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"jyztintan"},"content":"- **Command Descriptor:** `bye`","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"jyztintan"},"content":"- **Format:** `bye`","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"jyztintan"},"content":"- **Example:** Typing `bye` exits the application and automatically saves your tasks.","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":58,"author":{"gitId":"jyztintan"},"content":"## Tips","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"jyztintan"},"content":"\u003e **Pro Tip:** Regularly use the `yap` command to review your tasks and stay on top of your commitments!","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"jyztintan"},"content":"## Final Acknowledgements","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"jyztintan"},"content":"- [X] Congratulations for reading the user guide finish!","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"jyztintan"},"content":"  You are now ready to start using TaskYapper!","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"jyztintan"},"content":"Thank you to the CS2103 teaching team, and fellow CS2103T team project mates for all your contributions and advice in this project!","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":67,"author":{"gitId":"jyztintan"},"content":"Feel free to contact [@jyztintan](https://github.com/jyztintan) for any enquiries, bug reports or suggestions for improvements.","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"jyztintan":51,"-":16}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"     * Creates a dialog box with specified text and image.","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"     * The dialog box can be styled differently based on the speaker type.","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"     * @param img The image to be displayed as the speaker\u0027s face in the dialog box.","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"     * @param isTaskYapper A boolean flag to indicate if the dialog box is for a TaskYapper (true) or a user (false).","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"    private DialogBox(String text, Image img, boolean isTaskYapper) {","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"        dialog.setPadding(new Insets(0, 10, 0, 10));","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"        if (isTaskYapper) {","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"            this.setStyle(\"-fx-background-color: #cfcfcf; -fx-background-radius: 10; -fx-padding: 10;\");","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"jyztintan"},"content":"     * Flips the dialog box horizontally, placing the ImageView to the left and the text to the right.","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"jyztintan"},"content":"    private void flip() {","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"jyztintan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"jyztintan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"jyztintan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"jyztintan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"jyztintan"},"content":"     * Creates a dialog box for the user with the specified text and image.","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"jyztintan"},"content":"     * @param text The text for the dialog box.","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"jyztintan"},"content":"     * @param img The image to be used as the user\u0027s avatar.","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"jyztintan"},"content":"     * @return A DialogBox instance configured for a user.","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"jyztintan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"jyztintan"},"content":"        return new DialogBox(text, img, false);","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"jyztintan"},"content":"     * Creates a dialog box for a TaskYapper with the specified text and image.","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"jyztintan"},"content":"     * This dialog box is flipped to indicate the TaskYapper\u0027s speech.","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"jyztintan"},"content":"     * @param text The text for the dialog box.","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"jyztintan"},"content":"     * @param img The image to be used as the TaskYapper\u0027s avatar.","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"jyztintan"},"content":"     * @return A DialogBox instance configured for a TaskYapper, flipped to indicate its speech direction.","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"jyztintan"},"content":"    public static DialogBox getTaskYapperDialog(String text, Image img) {","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"jyztintan"},"content":"        var db \u003d new DialogBox(text, img, true);","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"jyztintan"},"content":"        db.flip();","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"jyztintan"},"content":"        return db;","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"jyztintan"},"content":"     * Sets the CSS style for the dialog text.","lastModifiedDate":"2024-02-19"},{"lineNumber":90,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"jyztintan"},"content":"     * @param style The CSS style string to apply to the dialog text.","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"jyztintan"},"content":"    public void setDialogStyle(String style) {","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"jyztintan"},"content":"        dialog.setStyle(style);","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"jyztintan":96}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":" * Main application class for the TaskYapper GUI.","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":" * It sets up the primary stage and loads the main window layout from an FXML file.","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"     * Instance of TaskYapper to manage tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"    private TaskYapper yapper \u003d new TaskYapper(\"./data/taskyapper.txt\");","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"     * Starts the application by setting up the primary stage (window) and loading the main scene from an FXML file.","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"     * @param stage The primary stage for this application, onto which the application scene can be set.","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"            stage.setTitle(\"TaskYapper\");","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setTaskYapper(yapper);","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"            stage.show();","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"jyztintan":41}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"import javafx.animation.KeyFrame;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"import javafx.animation.Timeline;","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"    private TaskYapper yapper;","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/perrytheplatypus.png\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"    private Image yapperImage \u003d new Image(this.getClass().getResourceAsStream(\"/drheinzdoofenshmirtz.png\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"     * Initializes the controller class. This method is automatically called","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"     * after the FXML file has been loaded. It sets up the scroll pane to","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"     * automatically scroll to the bottom whenever the dialog container\u0027s height","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"     * changes. It also calls the greet method to display the initial greeting","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"     * message in the dialog.","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"        this.greet();","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"     * Sets the TaskYapper instance for the controller. This method allows the","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"     * integration of the main logic of the TaskYapper application with this controller,","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"     * enabling interaction between the UI and the TaskYapper application logic.","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"     * @param d The TaskYapper instance to be used by this controller.","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"jyztintan"},"content":"    public void setTaskYapper(TaskYapper d) {","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"        yapper \u003d d;","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"jyztintan"},"content":"     * Displays a greeting message in the dialog container when the application starts.","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"jyztintan"},"content":"     * The greeting includes a custom message and a graphical representation of the","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"jyztintan"},"content":"     * application\u0027s name, TaskYapper, to welcome the user.","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"jyztintan"},"content":"    private void greet() {","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"jyztintan"},"content":"        String greeting \u003d \"\\n\" + \"ᴛᴀsᴋʏᴀᴘᴘᴇʀ\";","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"jyztintan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"jyztintan"},"content":"                DialogBox.getTaskYapperDialog(","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"jyztintan"},"content":"                        \"*YAP* Good morning YAPPER! *YAP*\\nGreetings from\\n\" + greeting, yapperImage)","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"jyztintan"},"content":"        );","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"jyztintan"},"content":"     * Displays a exit message in the dialog container when the application ends.","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"jyztintan"},"content":"    private String exit() {","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"jyztintan"},"content":"        return \"█▀▀ █▀█ █▀█ █▀▄ █▄▄ █▄█ █▀▀ █\\n\"","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"jyztintan"},"content":"                + \"█▄█ █▄█ █▄█ █▄▀ █▄█ ░█░ ██▄ ▄\\n\";","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"jyztintan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing TaskYapper\u0027s reply","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"jyztintan"},"content":"     * and then appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"jyztintan"},"content":"    @FXML","lastModifiedDate":"2024-02-12"},{"lineNumber":82,"author":{"gitId":"jyztintan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"jyztintan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"jyztintan"},"content":"        assert input !\u003d null;","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"jyztintan"},"content":"        String response \u003d yapper.getResponse(input);","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"jyztintan"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"jyztintan"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"jyztintan"},"content":"            response \u003d response + this.exit();","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"jyztintan"},"content":"            Timeline timeline \u003d new Timeline(new KeyFrame(Duration.seconds(2), event -\u003e Platform.exit()));","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"jyztintan"},"content":"            timeline.play();","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"jyztintan"},"content":"        DialogBox userDialog \u003d DialogBox.getUserDialog(input, userImage);","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"jyztintan"},"content":"        DialogBox yapperDialog \u003d DialogBox.getTaskYapperDialog(response, yapperImage);","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"jyztintan"},"content":"        if (response.startsWith(\"Error\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"jyztintan"},"content":"            yapperDialog.setDialogStyle(\"-fx-text-fill: red;\");","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"jyztintan"},"content":"        dialogContainer.getChildren().addAll(userDialog, yapperDialog);","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"jyztintan"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"jyztintan":106}},{"path":"src/main/java/TaskYapper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"import commands.Command;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"import commands.Parser;","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import exceptions.TaskYapperException;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"import main.Storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":" * TaskYapper is the main class for the task management application.","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":" * It initializes the application and starts the interaction loop with the user.","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"public class TaskYapper {","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"     * Constructs a new TaskYapper object.","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"     * Initializes the UI, storage, and task list components of the application.","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"     * @param filePath The path to the file where tasks are saved and loaded from.","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"    public TaskYapper(String filePath) {","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"            taskList \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"        } catch (TaskYapperException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"     * Processes the user input and generates a response.","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"     * This method parses the user input to understand the command, executes it, and returns the result.","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"     * If an error occurs during the processing of the command, an error message is returned.","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"     * @param userInput The string input provided by the user.","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"     * @return A string response after executing the command based on the user input.","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"        assert userInput !\u003d null;","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"            Command c \u003d Parser.parse(userInput);","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"            assert c !\u003d null;","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"            return c.execute(taskList, ui, storage, userInput);","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"        } catch (TaskYapperException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"            return \"Error: \" + e.getMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"jyztintan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"jyztintan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"jyztintan":57}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package commands;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"import exceptions.TaskYapperException;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"import main.Storage;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":" * Defines the set of commands that can be executed within the TaskYapper application.","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":" * Each enum constant represents a distinct command and defines its own execution behavior.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"public enum Command {","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"     * Command to terminate the application. It saves the current state of tasks before exiting.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"    BYE {","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"        @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"        public String execute(TaskList tasks, Ui ui, Storage storage, String message) {","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"            return \"Stoppin\u0027 the YAP...\\n\";","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"    },","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"     * Command to list all tasks in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"    YAP {","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"        @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"        public String execute(TaskList tasks, Ui ui, Storage storage, String message) {","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"            return tasks.yapTasks();","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"    },","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"     * Command to mark a specified task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"    MARK {","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"        @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"        public String execute(TaskList tasks, Ui ui, Storage storage, String message) throws TaskYapperException {","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"            String[] inputs \u003d message.split(\" \");","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"            int index;","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"            try {","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"                index \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"                throw new TaskYapperException(\"You didn\u0027t specify an input integer yapper\");","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"                throw new TaskYapperException(\"Input has to be an integer value, yapper\");","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"jyztintan"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"            return tasks.markTaskAsDone(index);","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"jyztintan"},"content":"    },","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"jyztintan"},"content":"     * Command to unmark a specified task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"jyztintan"},"content":"    UNMARK {","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"jyztintan"},"content":"        @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"jyztintan"},"content":"        public String execute(TaskList tasks, Ui ui, Storage storage, String message) throws TaskYapperException {","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"jyztintan"},"content":"            // Extract task index from argument and mark the task as not done","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"jyztintan"},"content":"            String[] inputs \u003d message.split(\" \");","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"jyztintan"},"content":"            int index;","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"jyztintan"},"content":"            try {","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"jyztintan"},"content":"                index \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"jyztintan"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"jyztintan"},"content":"                throw new TaskYapperException(\"You didn\u0027t specify an input integer yapper\");","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"jyztintan"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"jyztintan"},"content":"                throw new TaskYapperException(\"Provide an integer value, yapper\");","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"jyztintan"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":71,"author":{"gitId":"jyztintan"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"jyztintan"},"content":"            return tasks.unmarkTaskAsDone(index);","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"jyztintan"},"content":"    },","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"jyztintan"},"content":"     * Command to add a todo task to tasklist.","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"jyztintan"},"content":"    ADD_TODO {","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"jyztintan"},"content":"        @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"jyztintan"},"content":"        public String execute(TaskList tasks, Ui ui, Storage storage, String message) throws TaskYapperException {","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"jyztintan"},"content":"            // Create a new tasks.ToDo task and add it to the task list","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"jyztintan"},"content":"            Task task \u003d tasks.initTask(message, \"todo\");","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"jyztintan"},"content":"            tasks.addTasktoTaskList(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"jyztintan"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"jyztintan"},"content":"            return ui.triggerAddMessage(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"jyztintan"},"content":"    },","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"jyztintan"},"content":"     * Command to add a deadline task to tasklist.","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"jyztintan"},"content":"    ADD_DEADLINE {","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"jyztintan"},"content":"        @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"jyztintan"},"content":"        public String execute(TaskList tasks, Ui ui, Storage storage, String message) throws TaskYapperException {","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"jyztintan"},"content":"            // Create a new tasks.Deadline task and add it to the task list","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"jyztintan"},"content":"            Task task \u003d tasks.initTask(message, \"deadline\");","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"jyztintan"},"content":"            tasks.addTasktoTaskList(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"jyztintan"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"jyztintan"},"content":"            return ui.triggerAddMessage(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"jyztintan"},"content":"    },","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"jyztintan"},"content":"     * Command to add a event task to tasklist.","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"jyztintan"},"content":"    ADD_EVENT {","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"jyztintan"},"content":"        @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"jyztintan"},"content":"        public String execute(TaskList tasks, Ui ui, Storage storage, String message) throws TaskYapperException {","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"jyztintan"},"content":"            // Create a new tasks.Event task and add it to the task list","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"jyztintan"},"content":"            Task task \u003d tasks.initTask(message, \"event\");","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"jyztintan"},"content":"            tasks.addTasktoTaskList(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":110,"author":{"gitId":"jyztintan"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":111,"author":{"gitId":"jyztintan"},"content":"            return ui.triggerAddMessage(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":112,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"jyztintan"},"content":"    },","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"jyztintan"},"content":"     * Command to delete a task from tasklist by index.","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"jyztintan"},"content":"    DELETE {","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"jyztintan"},"content":"        @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"jyztintan"},"content":"        public String execute(TaskList tasks, Ui ui, Storage storage, String message) throws TaskYapperException {","lastModifiedDate":"2024-02-19"},{"lineNumber":121,"author":{"gitId":"jyztintan"},"content":"            String[] inputs \u003d message.split(\" \");","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"jyztintan"},"content":"            int index;","lastModifiedDate":"2024-02-12"},{"lineNumber":123,"author":{"gitId":"jyztintan"},"content":"            try {","lastModifiedDate":"2024-02-12"},{"lineNumber":124,"author":{"gitId":"jyztintan"},"content":"                index \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2024-02-12"},{"lineNumber":125,"author":{"gitId":"jyztintan"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":126,"author":{"gitId":"jyztintan"},"content":"                throw new TaskYapperException(\"You didn\u0027t specify an input integer yapper\");","lastModifiedDate":"2024-02-19"},{"lineNumber":127,"author":{"gitId":"jyztintan"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":128,"author":{"gitId":"jyztintan"},"content":"                throw new TaskYapperException(\"Provide an integer value, yapper\");","lastModifiedDate":"2024-02-19"},{"lineNumber":129,"author":{"gitId":"jyztintan"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":130,"author":{"gitId":"jyztintan"},"content":"            Task task \u003d tasks.removeTaskfromTaskList(index);","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"jyztintan"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"jyztintan"},"content":"            return ui.triggerDeleteMessage(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":133,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":134,"author":{"gitId":"jyztintan"},"content":"    },","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":136,"author":{"gitId":"jyztintan"},"content":"     * Command to find and list out tasks containing a specified keyword or phrase.","lastModifiedDate":"2024-02-19"},{"lineNumber":137,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":138,"author":{"gitId":"jyztintan"},"content":"    FIND {","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"jyztintan"},"content":"        @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"jyztintan"},"content":"        public String execute(TaskList tasks, Ui ui, Storage storage, String message) throws TaskYapperException {","lastModifiedDate":"2024-02-19"},{"lineNumber":141,"author":{"gitId":"jyztintan"},"content":"            try {","lastModifiedDate":"2024-02-12"},{"lineNumber":142,"author":{"gitId":"jyztintan"},"content":"                String[] inputs \u003d message.split(\" \");","lastModifiedDate":"2024-02-12"},{"lineNumber":143,"author":{"gitId":"jyztintan"},"content":"                String queryString \u003d inputs[1];","lastModifiedDate":"2024-02-12"},{"lineNumber":144,"author":{"gitId":"jyztintan"},"content":"                TaskList tempTaskList \u003d tasks.filterByString(queryString);","lastModifiedDate":"2024-02-12"},{"lineNumber":145,"author":{"gitId":"jyztintan"},"content":"                return tempTaskList.yapTasks();","lastModifiedDate":"2024-02-12"},{"lineNumber":146,"author":{"gitId":"jyztintan"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":147,"author":{"gitId":"jyztintan"},"content":"                throw new TaskYapperException(\"Provide a suitable keyword/phrase, yapper\");","lastModifiedDate":"2024-02-19"},{"lineNumber":148,"author":{"gitId":"jyztintan"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":149,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":150,"author":{"gitId":"jyztintan"},"content":"    },","lastModifiedDate":"2024-02-12"},{"lineNumber":151,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":152,"author":{"gitId":"jyztintan"},"content":"     * Command to find events scheduled on a specified date and deadlines due on that specified date.","lastModifiedDate":"2024-02-19"},{"lineNumber":153,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":154,"author":{"gitId":"jyztintan"},"content":"    SCHEDULE {","lastModifiedDate":"2024-02-12"},{"lineNumber":155,"author":{"gitId":"jyztintan"},"content":"        @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":156,"author":{"gitId":"jyztintan"},"content":"        public String execute(TaskList tasks, Ui ui, Storage storage, String message) throws TaskYapperException {","lastModifiedDate":"2024-02-19"},{"lineNumber":157,"author":{"gitId":"jyztintan"},"content":"            try {","lastModifiedDate":"2024-02-12"},{"lineNumber":158,"author":{"gitId":"jyztintan"},"content":"                String[] inputs \u003d message.split(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":159,"author":{"gitId":"jyztintan"},"content":"                String queryString \u003d inputs[1];","lastModifiedDate":"2024-02-02"},{"lineNumber":160,"author":{"gitId":"jyztintan"},"content":"                TaskList tempTaskList \u003d tasks.filterByDate(queryString);","lastModifiedDate":"2024-02-12"},{"lineNumber":161,"author":{"gitId":"jyztintan"},"content":"                return tempTaskList.yapTasks();","lastModifiedDate":"2024-02-12"},{"lineNumber":162,"author":{"gitId":"jyztintan"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":163,"author":{"gitId":"jyztintan"},"content":"                throw new TaskYapperException(\"Provide a suitable keyword/phrase, yapper\");","lastModifiedDate":"2024-02-19"},{"lineNumber":164,"author":{"gitId":"jyztintan"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":165,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":166,"author":{"gitId":"jyztintan"},"content":"    };","lastModifiedDate":"2024-02-12"},{"lineNumber":167,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":168,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":169,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":170,"author":{"gitId":"jyztintan"},"content":"     * Executes the command with the given parameters.","lastModifiedDate":"2024-02-02"},{"lineNumber":171,"author":{"gitId":"jyztintan"},"content":"     * Each command defines its own execution behavior.","lastModifiedDate":"2024-02-02"},{"lineNumber":172,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":173,"author":{"gitId":"jyztintan"},"content":"     * @param tasks The current list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":174,"author":{"gitId":"jyztintan"},"content":"     * @param ui The UI instance for user interaction.","lastModifiedDate":"2024-02-02"},{"lineNumber":175,"author":{"gitId":"jyztintan"},"content":"     * @param storage The storage instance for saving and loading tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":176,"author":{"gitId":"jyztintan"},"content":"     * @param message The additional message or data required for command execution.","lastModifiedDate":"2024-02-02"},{"lineNumber":177,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":178,"author":{"gitId":"jyztintan"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage, String message) throws TaskYapperException {","lastModifiedDate":"2024-02-19"},{"lineNumber":179,"author":{"gitId":"jyztintan"},"content":"        throw new TaskYapperException(\"This command does not take any arguments.\");","lastModifiedDate":"2024-02-19"},{"lineNumber":180,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":181,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":182,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":183,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jyztintan":183}},{"path":"src/main/java/commands/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package commands;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import exceptions.TaskYapperException;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":" * The {@code Parser} class is responsible for interpreting user input messages and converting them into","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":" * command actions that the application can execute. It serves as a crucial component in the user command","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":" * processing pipeline, mapping specific keywords or phrases to their corresponding command types.","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":" *","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":" * \u003cp\u003eThe parser checks the input message against a predefined set of command patterns and, upon finding a match,","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":" * returns the corresponding command type. If the input does not correspond to any recognized command pattern,","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":" * the parser throws a {@link TaskYapperException} to indicate the ambiguity or invalidity of the user\u0027s instruction.","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":" *","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":" * \u003cp\u003eThis class is essential for enabling user interaction with the application by providing a way to understand","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":" * and act upon user commands.","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"public class Parser {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"     * Parses the given input message and returns the corresponding Command.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"     * The method maps specific keywords or phrases in the input message to predefined commands in the application.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"     * If the input message does not match any known command patterns,","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"     * the method throws a TaskYapperException with a message prompting the user to provide a clearer instruction.","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"     * @param message The user input message to be parsed.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"     * @return The Command corresponding to the user\u0027s input message.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"     * @throws TaskYapperException If the input message does not match any known command patterns, indicating that the","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"     *                       user\u0027s instruction is unclear or invalid within the context of the application.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"    public static Command parse(String message) throws TaskYapperException {","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"        if (message.equals(\"bye\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"            return Command.BYE;","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"        } else if (message.equals(\"yap\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"            return Command.YAP;","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"        } else if (message.startsWith(\"mark\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"            return Command.MARK;","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"        } else if (message.startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"            return Command.UNMARK;","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"        } else if (message.startsWith(\"todo\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"            return Command.ADD_TODO;","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"        } else if (message.startsWith(\"deadline\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"            return Command.ADD_DEADLINE;","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"        } else if (message.startsWith(\"event\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"            return Command.ADD_EVENT;","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"        } else if (message.startsWith(\"delete\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"            return Command.DELETE;","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"        } else if (message.startsWith(\"find\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"            return Command.FIND;","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"        } else if (message.startsWith(\"schedule\")) {","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"            return Command.SCHEDULE;","lastModifiedDate":"2024-02-12"},{"lineNumber":51,"author":{"gitId":"jyztintan"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"            throw new TaskYapperException(\"What\u0027s YAPpening??!! Please yap your instruction more clearly\");","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jyztintan":56}},{"path":"src/main/java/exceptions/TaskYapperException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package exceptions;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":" * Represents an exception specific to the TaskYapper application.","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":" * This class is used for handling exceptional scenarios that are unique to the TaskYapper application\u0027s workflow.","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"public class TaskYapperException extends Exception {","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"     * Constructs a new TaskYapperException with the specified detail message.","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"     * The detail message is saved for later retrieval by the {@link Throwable#getMessage()} method.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"     * @param errorMessage the detail message. The detail message is saved for later retrieval by the","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"     *                     {@link Throwable#getMessage()} method.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"    public TaskYapperException(String errormessage) {","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"        super(errormessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"jyztintan":19}},{"path":"src/main/java/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package main;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"import exceptions.TaskYapperException;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"import tasks.Event;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"import tasks.ToDo;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":" * Storage handles the loading and saving of task list data to a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"public class Storage {","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"    private String filePath;","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"     * Constructs a Storage object.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"     * @param filePath The path to the file used for storing task list data.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"     * Loads tasks from the file specified by filePath.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"     * Parses each line of the file into a Task object and adds it to an ArrayList of Tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"     * @return An ArrayList of Task objects loaded from the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws TaskYapperException {","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"                file.createNewFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"                String line \u003d sc.nextLine();","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"                String[] inputs \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"jyztintan"},"content":"                Task task \u003d null;","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"                switch (inputs[0]) {","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"                case \"T\":","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"jyztintan"},"content":"                    task \u003d new ToDo(inputs[2]);","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"jyztintan"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"jyztintan"},"content":"                case \"D\":","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"jyztintan"},"content":"                    task \u003d new Deadline(inputs[2], inputs[3]);","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"jyztintan"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"jyztintan"},"content":"                case \"E\":","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"jyztintan"},"content":"                    task \u003d new Event(inputs[2], LocalDate.parse(inputs[3]), LocalDate.parse(inputs[4]));","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"jyztintan"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"jyztintan"},"content":"                default:","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"jyztintan"},"content":"                    throw new TaskYapperException(\"Invalid Task, data file may be corrupted\");","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"jyztintan"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"jyztintan"},"content":"                if (!task.equals(null)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"jyztintan"},"content":"                    if (inputs[1].equals(\"1\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"jyztintan"},"content":"                        task.markDone(true);","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"jyztintan"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":69,"author":{"gitId":"jyztintan"},"content":"                    taskList.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":70,"author":{"gitId":"jyztintan"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"jyztintan"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"jyztintan"},"content":"            sc.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"jyztintan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"jyztintan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"jyztintan"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"jyztintan"},"content":"            TaskList salvagedTasks \u003d new TaskList(taskList);","lastModifiedDate":"2024-01-29"},{"lineNumber":77,"author":{"gitId":"jyztintan"},"content":"            this.saveTasks(salvagedTasks);","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"jyztintan"},"content":"            file.delete();","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"jyztintan"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"jyztintan"},"content":"                file.createNewFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"jyztintan"},"content":"            } catch (IOException ioException) {","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"jyztintan"},"content":"                throw new TaskYapperException(\"Failed to create a new blank file: \" + ioException.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"jyztintan"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"jyztintan"},"content":"            throw new TaskYapperException(\"Error reading the datafile, it might be corrupted. \"","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"jyztintan"},"content":"                    + \"Creating a new database with any salvaged data\");","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"jyztintan"},"content":"        return taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"jyztintan"},"content":"     * Saves the current list of tasks to the file specified by filePath.","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"jyztintan"},"content":"     * Converts each task into a format suitable for file storage before writing.","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"jyztintan"},"content":"     * @param tasks The TaskList containing the tasks to be saved.","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"jyztintan"},"content":"    public void saveTasks(TaskList tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":97,"author":{"gitId":"jyztintan"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"jyztintan"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"jyztintan"},"content":"            PrintWriter pw \u003d new PrintWriter(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"jyztintan"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"jyztintan"},"content":"                pw.println(task.toFileFormat());","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"jyztintan"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"jyztintan"},"content":"            pw.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":104,"author":{"gitId":"jyztintan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"jyztintan"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jyztintan":109}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":" * Represents a deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":" * A deadline task is a task that needs to be done before a specific date.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"    protected LocalDate by; // The deadline date","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"     * Constructs a Deadline task with the specified description and deadline date.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"     * @param by The deadline date in the format of a String that can be parsed as a LocalDate.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"    public Deadline(String description, String by) throws DateTimeException {","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"     * Returns a string representation of the deadline task, including its type,","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"     * status, description, and deadline date.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"     * @return A string representation of the deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"                + by.getMonth() + \" \" + by.getDayOfMonth() + \" \" + by.getYear() + \")\";","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"     * Checks if the given input date is equal to this Deadline task\u0027s due date.","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"     * @param date The input data to check if task is due today.","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"     * @return A boolean representing the result of the check.","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"    public boolean isDueToday(LocalDate date) {","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"        return date.equals(this.by);","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"     * Returns a string formatted for file storage, including the task type,","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"     * completion status, description, and deadline date.","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"     * @return A string suitable for storing the task in a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"jyztintan"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"jyztintan"},"content":"        String completed \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"jyztintan"},"content":"        return \"D | \" + completed + \" | \" + this.description + \" | \" + this.by;","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"jyztintan":58}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":" * Represents an event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":" * An event is a task that starts at a specific time and ends at a specific time.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"    protected LocalDate from; //The start date of the event","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"    protected LocalDate to; //The end date of the event","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"     * Constructs an Event task with the specified description, start date, and end date.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"     * @param from The start date of the event in the format of a String that can be parsed as a LocalDate.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"     * @param to The end date of the event in the format of a String that can be parsed as a LocalDate.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"    public Event(String description, LocalDate from, LocalDate to) throws DateTimeException {","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"     * Checks if the given input date falls within the duration of this event.","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"     * @param date The input date to be checked","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"     * @return A boolean representation of whether the date falls within this event.","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"    public boolean isHappening(LocalDate date) {","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"        return !date.isBefore(from) \u0026\u0026 !date.isAfter(to);","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"     * Returns a string representation of the event task, including its type,","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"     * status, description, start date, and end date.","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"     * @return A string representation of the event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.getMonth() + \" \" + from.getDayOfMonth() + \" \"","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"                + from.getYear() + \" to \" + to.getMonth() + \" \" + to.getDayOfMonth() + \" \" + to.getYear() + \")\";","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"     * Returns a string formatted for file storage, including the task type,","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"jyztintan"},"content":"     * completion status, description, start date, and end date.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"     * @return A string suitable for storing the task in a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"jyztintan"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"jyztintan"},"content":"        String completed \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"jyztintan"},"content":"        return \"E | \" + completed + \" | \" + this.description + \" | \" + this.from + \" | \" + this.to;","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"jyztintan":59}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":" * Represents a general task in the task management application.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":" * This class serves as a base for specific types of tasks like ToDo, Deadline, and Event.","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"public class Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"    protected String description; // The description of the task","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"    protected boolean isDone; //The completion status of the task","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"     * Constructs a Task with the specified description.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"        assert description !\u003d null;","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"     * @return The task\u0027s description.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"        return this.description;","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"     * @return The task\u0027s completion status.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"    public boolean getStatus() {","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"     * Returns a string representation of the task\u0027s status icon.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"     * Completed tasks are marked with \"[X]\" and incomplete tasks with \"[ ]\".","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"     * @return A string representing the task\u0027s completion status.","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"jyztintan"},"content":"     * Returns a string representation of the task, including its status icon and description.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"jyztintan"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"jyztintan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"jyztintan"},"content":"        return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"jyztintan"},"content":"     * Marks the task as done or not done based on the input.","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"jyztintan"},"content":"     * Prints a message indicating the action taken.","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"jyztintan"},"content":"     * @param start Indicates whether the marking is being done at the start (initial loading).","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"jyztintan"},"content":"    public String markDone(boolean start) {","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"jyztintan"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-01-24"},{"lineNumber":68,"author":{"gitId":"jyztintan"},"content":"            return \"Stop yappin\u0027 bruh... tasks. Task is already marked as done\" + this;","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"jyztintan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"jyztintan"},"content":"        return \"Good job Yapper! I\u0027ve marked this task as done:\" + this;","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"jyztintan"},"content":"     * Unmarks the task as done, setting its status to incomplete.","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"jyztintan"},"content":"     * Prints a message indicating the action taken.","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"jyztintan"},"content":"    public String unmarkDone() {","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"jyztintan"},"content":"        if (!this.isDone) {","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"jyztintan"},"content":"            return \"Stop yappin\u0027 bruh... tasks. Task remains incomplete\" + this;","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"jyztintan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"jyztintan"},"content":"        return \"YAPYAP! I\u0027ve unmarked this task...\" + this;","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":85,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"jyztintan"},"content":"     * Returns a string formatted for file storage.","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"jyztintan"},"content":"     * This method is intended to be overridden by subclasses.","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"jyztintan"},"content":"     * @return A string suitable for storing the task in a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"jyztintan"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"jyztintan"},"content":"        return \"\";","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":96,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"jyztintan":96}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"import exceptions.TaskYapperException;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":" * Represents a list of tasks in the task management application.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":" * This class encapsulates operations such as adding, removing, marking tasks as done, and listing all tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"public class TaskList {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"    private ArrayList\u003cTask\u003e taskList; // The list of tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"     * Constructs a TaskList with the specified list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"     * @param taskList The initial list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"        return this.taskList;","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"     * Displays all tasks in the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"     * If the list is empty, it prints a message indicating there are no tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"jyztintan"},"content":"    public String yapTasks() {","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"jyztintan"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"jyztintan"},"content":"            return \"Nothin\u0027 to yap...\";","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"jyztintan"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"jyztintan"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"jyztintan"},"content":"            output +\u003d (i + 1) + \". \" + taskList.get(i) + \"\\n\";","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"jyztintan"},"content":"        return output;","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"jyztintan"},"content":"     * Marks a task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"jyztintan"},"content":"     * @param index The index of the task in the list to be marked as done, starting from 1.","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"jyztintan"},"content":"    public String markTaskAsDone(int index) throws TaskYapperException {","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"jyztintan"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"jyztintan"},"content":"            Task task \u003d taskList.get(index - 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"jyztintan"},"content":"            return task.markDone(false);","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"jyztintan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"jyztintan"},"content":"            throw new TaskYapperException(\"Quit yappin, that task does not exist\");","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"jyztintan"},"content":"     * Marks a task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"jyztintan"},"content":"     * @param index The index of the task in the list to be marked as done, starting from 1.","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"jyztintan"},"content":"    public String unmarkTaskAsDone(int index) throws TaskYapperException {","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"jyztintan"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"jyztintan"},"content":"            Task task \u003d taskList.get(index - 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"jyztintan"},"content":"            return task.unmarkDone();","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"jyztintan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"jyztintan"},"content":"            throw new TaskYapperException(\"Quit yappin, that task does not exist\");","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"jyztintan"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"jyztintan"},"content":"     * @param task The task to be added to the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"jyztintan"},"content":"    public void addTasktoTaskList(Task task) {","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"jyztintan"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"jyztintan"},"content":"            return;","lastModifiedDate":"2024-01-29"},{"lineNumber":88,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"jyztintan"},"content":"        taskList.add(task);","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"jyztintan"},"content":"     * Removes a task from the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"jyztintan"},"content":"     * @param index The index of the task in the list to be removed, starting from 1.","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"jyztintan"},"content":"     * @return The task that was removed.","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"jyztintan"},"content":"    public Task removeTaskfromTaskList(int index) throws TaskYapperException {","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"jyztintan"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":100,"author":{"gitId":"jyztintan"},"content":"            Task task \u003d taskList.remove(index - 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"jyztintan"},"content":"            return task;","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"jyztintan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":103,"author":{"gitId":"jyztintan"},"content":"            throw new TaskYapperException(\"Quit yappin, that task does not exist\");","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":105,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"jyztintan"},"content":"     * Initializes a task based on the input message and task type.","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"jyztintan"},"content":"     * This method attempts to parse the input and create the appropriate task object.","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"jyztintan"},"content":"     * @param message The input message containing task details.","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"jyztintan"},"content":"     * @param taskType The type of the task (e.g., \"todo\", \"deadline\", \"event\").","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"jyztintan"},"content":"     * @return The initialized task, or null if the task could not be created due to invalid input.","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"jyztintan"},"content":"    public Task initTask(String message, String taskType) throws TaskYapperException {","lastModifiedDate":"2024-02-19"},{"lineNumber":116,"author":{"gitId":"jyztintan"},"content":"        Task task;","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"jyztintan"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"jyztintan"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"jyztintan"},"content":"            task \u003d initTodo(message);","lastModifiedDate":"2024-02-12"},{"lineNumber":120,"author":{"gitId":"jyztintan"},"content":"            break;","lastModifiedDate":"2024-02-12"},{"lineNumber":121,"author":{"gitId":"jyztintan"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-12"},{"lineNumber":122,"author":{"gitId":"jyztintan"},"content":"            task \u003d initDeadline(message);","lastModifiedDate":"2024-02-12"},{"lineNumber":123,"author":{"gitId":"jyztintan"},"content":"            break;","lastModifiedDate":"2024-02-12"},{"lineNumber":124,"author":{"gitId":"jyztintan"},"content":"        case \"event\":","lastModifiedDate":"2024-02-12"},{"lineNumber":125,"author":{"gitId":"jyztintan"},"content":"            task \u003d initEvent(message);","lastModifiedDate":"2024-02-12"},{"lineNumber":126,"author":{"gitId":"jyztintan"},"content":"            break;","lastModifiedDate":"2024-02-12"},{"lineNumber":127,"author":{"gitId":"jyztintan"},"content":"        default:","lastModifiedDate":"2024-02-19"},{"lineNumber":128,"author":{"gitId":"jyztintan"},"content":"            //should not reach here because of filter in main logic","lastModifiedDate":"2024-02-12"},{"lineNumber":129,"author":{"gitId":"jyztintan"},"content":"            task \u003d new Task(message);","lastModifiedDate":"2024-02-12"},{"lineNumber":130,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":131,"author":{"gitId":"jyztintan"},"content":"        return task;","lastModifiedDate":"2024-02-12"},{"lineNumber":132,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":133,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":134,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":135,"author":{"gitId":"jyztintan"},"content":"     * Initializes a {@code ToDo} object based on the given input message.","lastModifiedDate":"2024-02-12"},{"lineNumber":136,"author":{"gitId":"jyztintan"},"content":"     * The method expects the message to start with \"todo \" followed by the task description.","lastModifiedDate":"2024-02-12"},{"lineNumber":137,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":138,"author":{"gitId":"jyztintan"},"content":"     * @param message The input message containing the task description.","lastModifiedDate":"2024-02-12"},{"lineNumber":139,"author":{"gitId":"jyztintan"},"content":"     * @return A new {@code ToDo} object with the specified description.","lastModifiedDate":"2024-02-12"},{"lineNumber":140,"author":{"gitId":"jyztintan"},"content":"     * @throws TaskYapperException If the input message does not contain a valid task description.","lastModifiedDate":"2024-02-19"},{"lineNumber":141,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":142,"author":{"gitId":"jyztintan"},"content":"    private ToDo initTodo(String message) throws TaskYapperException {","lastModifiedDate":"2024-02-19"},{"lineNumber":143,"author":{"gitId":"jyztintan"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"jyztintan"},"content":"            String[] inputs \u003d message.split(\"todo \");","lastModifiedDate":"2024-01-29"},{"lineNumber":145,"author":{"gitId":"jyztintan"},"content":"            return new ToDo(inputs[1]);","lastModifiedDate":"2024-02-12"},{"lineNumber":146,"author":{"gitId":"jyztintan"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":147,"author":{"gitId":"jyztintan"},"content":"            throw new TaskYapperException(\"Whats the task, yapper???\");","lastModifiedDate":"2024-02-19"},{"lineNumber":148,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":149,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":150,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":151,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":152,"author":{"gitId":"jyztintan"},"content":"     * Initializes a {@code Deadline} object based on the given input message.","lastModifiedDate":"2024-02-12"},{"lineNumber":153,"author":{"gitId":"jyztintan"},"content":"     * The method expects the message to start with \"deadline \" followed by the task description","lastModifiedDate":"2024-02-12"},{"lineNumber":154,"author":{"gitId":"jyztintan"},"content":"     * and a \"/by\" delimiter indicating the deadline date.","lastModifiedDate":"2024-02-12"},{"lineNumber":155,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":156,"author":{"gitId":"jyztintan"},"content":"     * @param message The input message containing the task description and deadline.","lastModifiedDate":"2024-02-12"},{"lineNumber":157,"author":{"gitId":"jyztintan"},"content":"     * @return A new {@code Deadline} object with the specified description and deadline date.","lastModifiedDate":"2024-02-12"},{"lineNumber":158,"author":{"gitId":"jyztintan"},"content":"     * @throws TaskYapperException If the input message does not contain a valid task description or deadline date,","lastModifiedDate":"2024-02-19"},{"lineNumber":159,"author":{"gitId":"jyztintan"},"content":"     *                       or if the deadline date is not in the expected format.","lastModifiedDate":"2024-02-12"},{"lineNumber":160,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":161,"author":{"gitId":"jyztintan"},"content":"    private Deadline initDeadline(String message) throws TaskYapperException {","lastModifiedDate":"2024-02-19"},{"lineNumber":162,"author":{"gitId":"jyztintan"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":163,"author":{"gitId":"jyztintan"},"content":"            message \u003d message.substring(\"deadline \".length());","lastModifiedDate":"2024-01-29"},{"lineNumber":164,"author":{"gitId":"jyztintan"},"content":"            String[] inputs \u003d message.split(\"/by\");","lastModifiedDate":"2024-01-29"},{"lineNumber":165,"author":{"gitId":"jyztintan"},"content":"            return new Deadline(inputs[0].trim(), inputs[1].trim());","lastModifiedDate":"2024-02-12"},{"lineNumber":166,"author":{"gitId":"jyztintan"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":167,"author":{"gitId":"jyztintan"},"content":"            throw new TaskYapperException(\"Deadlines need a deadline, yapper!\");","lastModifiedDate":"2024-02-19"},{"lineNumber":168,"author":{"gitId":"jyztintan"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":169,"author":{"gitId":"jyztintan"},"content":"            throw new TaskYapperException(\"Whats the task, yapper???\");","lastModifiedDate":"2024-02-19"},{"lineNumber":170,"author":{"gitId":"jyztintan"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":171,"author":{"gitId":"jyztintan"},"content":"            throw new TaskYapperException(\"Please put dates in format \\\"yyyy-mm-dd\\\"\");","lastModifiedDate":"2024-02-19"},{"lineNumber":172,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":173,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":174,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":175,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":176,"author":{"gitId":"jyztintan"},"content":"     * Initializes an {@code Event} object based on the given input message.","lastModifiedDate":"2024-02-12"},{"lineNumber":177,"author":{"gitId":"jyztintan"},"content":"     * The method expects the message to start with \"event \" followed by the event description,","lastModifiedDate":"2024-02-12"},{"lineNumber":178,"author":{"gitId":"jyztintan"},"content":"     * a \"/from\" delimiter indicating the start time, and a \"/to\" delimiter indicating the end time.","lastModifiedDate":"2024-02-12"},{"lineNumber":179,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":180,"author":{"gitId":"jyztintan"},"content":"     * @param message The input message containing the event description, start time, and end time.","lastModifiedDate":"2024-02-12"},{"lineNumber":181,"author":{"gitId":"jyztintan"},"content":"     * @return A new {@code Event} object with the specified description, start time, and end time.","lastModifiedDate":"2024-02-12"},{"lineNumber":182,"author":{"gitId":"jyztintan"},"content":"     * @throws TaskYapperException When input message does not contain a valid start time, or end time,","lastModifiedDate":"2024-02-19"},{"lineNumber":183,"author":{"gitId":"jyztintan"},"content":"     *                       or are not in the expected format.","lastModifiedDate":"2024-02-19"},{"lineNumber":184,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":185,"author":{"gitId":"jyztintan"},"content":"    public Event initEvent(String message) throws TaskYapperException {","lastModifiedDate":"2024-02-19"},{"lineNumber":186,"author":{"gitId":"jyztintan"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":187,"author":{"gitId":"jyztintan"},"content":"            message \u003d message.substring(\"event \".length());","lastModifiedDate":"2024-01-29"},{"lineNumber":188,"author":{"gitId":"jyztintan"},"content":"            String[] inputs \u003d message.split(\"/from\");","lastModifiedDate":"2024-01-29"},{"lineNumber":189,"author":{"gitId":"jyztintan"},"content":"            String[] innerInputs \u003d inputs[1].split(\"/to\");","lastModifiedDate":"2024-01-29"},{"lineNumber":190,"author":{"gitId":"jyztintan"},"content":"            LocalDate from \u003d LocalDate.parse(innerInputs[0].trim());","lastModifiedDate":"2024-02-19"},{"lineNumber":191,"author":{"gitId":"jyztintan"},"content":"            LocalDate to \u003d LocalDate.parse(innerInputs[1].trim());","lastModifiedDate":"2024-02-19"},{"lineNumber":192,"author":{"gitId":"jyztintan"},"content":"            if (from.isAfter(to)) {","lastModifiedDate":"2024-02-19"},{"lineNumber":193,"author":{"gitId":"jyztintan"},"content":"                throw new TaskYapperException(\"Yapper, the event\u0027s start date must be before its end date\");","lastModifiedDate":"2024-02-19"},{"lineNumber":194,"author":{"gitId":"jyztintan"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":195,"author":{"gitId":"jyztintan"},"content":"            return new Event(inputs[0].trim(), from, to);","lastModifiedDate":"2024-02-19"},{"lineNumber":196,"author":{"gitId":"jyztintan"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":197,"author":{"gitId":"jyztintan"},"content":"            throw new TaskYapperException(\"YAPYAP, When does the event start and end?\");","lastModifiedDate":"2024-02-19"},{"lineNumber":198,"author":{"gitId":"jyztintan"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":199,"author":{"gitId":"jyztintan"},"content":"            throw new TaskYapperException(\"Whats the task, yapper???\");","lastModifiedDate":"2024-02-19"},{"lineNumber":200,"author":{"gitId":"jyztintan"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":201,"author":{"gitId":"jyztintan"},"content":"            throw new TaskYapperException(\"Please put dates in format \\\"yyyy-mm-dd\\\"\");","lastModifiedDate":"2024-02-19"},{"lineNumber":202,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":203,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":204,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":205,"author":{"gitId":"jyztintan"},"content":"     * Filters the current list of tasks, returning a new TaskList that contains only tasks","lastModifiedDate":"2024-02-12"},{"lineNumber":206,"author":{"gitId":"jyztintan"},"content":"     * whose descriptions contain the specified query string.","lastModifiedDate":"2024-02-12"},{"lineNumber":207,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":208,"author":{"gitId":"jyztintan"},"content":"     * @param queryString The string to search for within each task\u0027s description. The method","lastModifiedDate":"2024-02-12"},{"lineNumber":209,"author":{"gitId":"jyztintan"},"content":"     *                    performs a case-sensitive search.","lastModifiedDate":"2024-02-12"},{"lineNumber":210,"author":{"gitId":"jyztintan"},"content":"     * @return A new TaskList containing only the tasks that have the queryString in their","lastModifiedDate":"2024-02-12"},{"lineNumber":211,"author":{"gitId":"jyztintan"},"content":"     *         description. If no tasks match the criteria, an empty TaskList is returned.","lastModifiedDate":"2024-02-12"},{"lineNumber":212,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":213,"author":{"gitId":"jyztintan"},"content":"    public TaskList filterByString(String queryString) {","lastModifiedDate":"2024-02-12"},{"lineNumber":214,"author":{"gitId":"jyztintan"},"content":"        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":215,"author":{"gitId":"jyztintan"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":216,"author":{"gitId":"jyztintan"},"content":"            if (task.getDescription().contains(queryString)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":217,"author":{"gitId":"jyztintan"},"content":"                newList.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":218,"author":{"gitId":"jyztintan"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":219,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":220,"author":{"gitId":"jyztintan"},"content":"        return new TaskList(newList);","lastModifiedDate":"2024-02-02"},{"lineNumber":221,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":222,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":223,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":224,"author":{"gitId":"jyztintan"},"content":"     * Filters the list of tasks and returns a new {@code TaskList} containing","lastModifiedDate":"2024-02-12"},{"lineNumber":225,"author":{"gitId":"jyztintan"},"content":"     * only the tasks that are due on or are happening on the specified date.","lastModifiedDate":"2024-02-12"},{"lineNumber":226,"author":{"gitId":"jyztintan"},"content":"     * This method specifically checks for tasks of type {@code Deadline} and {@code Event}.","lastModifiedDate":"2024-02-12"},{"lineNumber":227,"author":{"gitId":"jyztintan"},"content":"     * For {@code Deadline} tasks, it checks if the deadline is due on the given date.","lastModifiedDate":"2024-02-12"},{"lineNumber":228,"author":{"gitId":"jyztintan"},"content":"     * For {@code Event} tasks, it checks if the event is happening on the given date.","lastModifiedDate":"2024-02-12"},{"lineNumber":229,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-12"},{"lineNumber":230,"author":{"gitId":"jyztintan"},"content":"     * @param stringDate The date to filter the tasks by, in the format of \"yyyy-mm-dd\".","lastModifiedDate":"2024-02-12"},{"lineNumber":231,"author":{"gitId":"jyztintan"},"content":"     *                   It is used to identify tasks that are due on or are happening on this specific date.","lastModifiedDate":"2024-02-12"},{"lineNumber":232,"author":{"gitId":"jyztintan"},"content":"     * @return A new {@code TaskList} containing only the tasks due on or happening on the specified date.","lastModifiedDate":"2024-02-12"},{"lineNumber":233,"author":{"gitId":"jyztintan"},"content":"     * @throws TaskYapperException If the provided date string does not conform to the expected format (\"yyyy-mm-dd\")","lastModifiedDate":"2024-02-19"},{"lineNumber":234,"author":{"gitId":"jyztintan"},"content":"     *                          a {@code TaskYapperException} is thrown with a message prompting the correct format.","lastModifiedDate":"2024-02-19"},{"lineNumber":235,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":236,"author":{"gitId":"jyztintan"},"content":"    public TaskList filterByDate(String stringDate) throws TaskYapperException {","lastModifiedDate":"2024-02-19"},{"lineNumber":237,"author":{"gitId":"jyztintan"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":238,"author":{"gitId":"jyztintan"},"content":"            LocalDate date \u003d LocalDate.parse(stringDate);","lastModifiedDate":"2024-02-12"},{"lineNumber":239,"author":{"gitId":"jyztintan"},"content":"            ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-12"},{"lineNumber":240,"author":{"gitId":"jyztintan"},"content":"            for (Task task : this.taskList) {","lastModifiedDate":"2024-02-12"},{"lineNumber":241,"author":{"gitId":"jyztintan"},"content":"                if (task instanceof Deadline \u0026\u0026 ((Deadline) task).isDueToday(date)) {","lastModifiedDate":"2024-02-12"},{"lineNumber":242,"author":{"gitId":"jyztintan"},"content":"                    newList.add(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":243,"author":{"gitId":"jyztintan"},"content":"                } else if (task instanceof Event \u0026\u0026 ((Event) task).isHappening(date)) {","lastModifiedDate":"2024-02-12"},{"lineNumber":244,"author":{"gitId":"jyztintan"},"content":"                    newList.add(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":245,"author":{"gitId":"jyztintan"},"content":"                }","lastModifiedDate":"2024-02-12"},{"lineNumber":246,"author":{"gitId":"jyztintan"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":247,"author":{"gitId":"jyztintan"},"content":"            return new TaskList(newList);","lastModifiedDate":"2024-02-12"},{"lineNumber":248,"author":{"gitId":"jyztintan"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-02-12"},{"lineNumber":249,"author":{"gitId":"jyztintan"},"content":"            throw new TaskYapperException(\"Please put dates in format \\\"yyyy-mm-dd\\\"\");","lastModifiedDate":"2024-02-19"},{"lineNumber":250,"author":{"gitId":"jyztintan"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":251,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":252,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":253,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":254,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jyztintan":254}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package tasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"/**","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":" * Represents a to-do task.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":" * A to-do is a task without any date/time associated with it.","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"     * Constructs a ToDo task with the specified description.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"     * Returns a string representation of the to-do task, including its type,","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"     * status, and description.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"     * @return A string representation of the to-do task.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"     * Returns a string formatted for file storage, including the task type,","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"     * completion status, and description.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"     * @return A string suitable for storing the task in a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"    public String toFileFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"        String completed \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"        return \"T | \" + completed + \" | \" + this.description;","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"jyztintan":39}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package ui;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":" * Ui class handles the user interface of the application.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":" * It is responsible for reading user input and printing messages to the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"public class Ui {","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"    /*","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"     * Constructor for Ui class.","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"     * It initializes the scanner object to read user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"     * It also prints a greeting message to the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"    public Ui() {}","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"     * Displays a message indicating a task has been added.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"     * @param task The task that has been added.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"    public String triggerAddMessage(Task task) {","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"        return \"Added task:\\n\" + task;","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"     * Displays a message indicating a task has been deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"     * @param task The task that has been deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"    public String triggerDeleteMessage(Task task) {","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"        return \"Okay, I\u0027ll stop yapping about this task:\\n\" + task;","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"jyztintan":37}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"jyztintan":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"jyztintan":19}},{"path":"src/test/java/TaskYapperTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"public class TaskYapperTest {","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"    public void dummyTest() {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"        TaskYapper yapper \u003d new TaskYapper(\"./data/taskyapper.txt\");","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"        String message \u003d yapper.getResponse(\"abc\");","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"        assertEquals(message, \"Error: What\u0027s YAPpening??!! Please yap your instruction more clearly\");","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"        TaskYapperTest test \u003d new TaskYapperTest();","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"        test.dummyTest();","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"jyztintan":17}},{"path":"src/test/java/taskstest/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package taskstest;","lastModifiedDate":"2024-02-12"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"public class TaskTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"    public void testTaskInit() {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"        Task task \u003d new Task(\"hello\");","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"        assertEquals(\"hello\", task.getDescription());","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"        assertEquals(false, task.getStatus());","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"    public void testStatusIcon() {","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"        Task task \u003d new Task(\"hello\");","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"        assertEquals(task.getStatusIcon(), \"[ ]\");","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"        task.markDone(true);","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"        assertEquals(task.getStatusIcon(), \"[X]\");","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"        TaskTest test \u003d new TaskTest();","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"        test.testTaskInit();","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"        test.testStatusIcon();","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"jyztintan":29}},{"path":"src/test/java/uitest/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"package uitest;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"jyztintan"},"content":"public class UiTest {","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"jyztintan"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"jyztintan"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"jyztintan"},"content":"    public void testTriggerAddMessage() {","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"jyztintan"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"jyztintan"},"content":"        Task task \u003d new Task(\"hi\");","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"jyztintan"},"content":"        String addMessage \u003d ui.triggerAddMessage(task);","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"jyztintan"},"content":"        assertEquals(\"Added task:\\n\" + task.getStatusIcon() + \" \" + task.getDescription(), addMessage);","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"jyztintan"},"content":"    @Test","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"jyztintan"},"content":"    public void testTriggerDeleteMessage() {","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"jyztintan"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"jyztintan"},"content":"        Task task \u003d new Task(\"hi\");","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"jyztintan"},"content":"        String deleteMessage \u003d ui.triggerDeleteMessage(task);","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"jyztintan"},"content":"        assertEquals(\"Okay, I\u0027ll stop yapping about this task:\\n\"","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"jyztintan"},"content":"                + task.getStatusIcon() + \" \" + task.getDescription(), deleteMessage);","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"jyztintan"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"jyztintan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"jyztintan"},"content":"        UiTest test \u003d new UiTest();","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"jyztintan"},"content":"        test.testTriggerAddMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"jyztintan"},"content":"        test.testTriggerDeleteMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"jyztintan"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"jyztintan"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"jyztintan":40}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jyztintan"},"content":"yapyapyap","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"jyztintan"},"content":"deadline CS2103T work /by Wednesday 11am","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"jyztintan"},"content":"event CS2103T Lecture /from Friday 4pm /to 6pm","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"jyztintan"},"content":"todo Learn about Git commands","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"jyztintan"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"jyztintan"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"jyztintan"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"jyztintan"},"content":"yap","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"jyztintan"},"content":"delete 1","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"jyztintan"},"content":"yap","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"jyztintan"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"jyztintan":11}}]
