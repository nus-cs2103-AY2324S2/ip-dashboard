[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"# FishStock project template","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"3. After that, locate the `src/main/java/FishStock.java` file, right-click it, and choose `Run FishStock.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bryanyee33":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"checkstyle {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"    mainClass.set(\"fishstock.FishStock\")","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"bryanyee33"},"content":"    archiveBaseName \u003d \"fishstock\"","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bryanyee33":22,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"# FishStock User Guide","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"\u003cimg src\u003d\"Ui.png\" width\u003d\"400\"\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"FishStock is a **desktop app for tracking tasks, optimized for use via a Command Line Interface (CLI)** while still having","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"the benefits of a Graphical User Interface (GUI). If you can type fast, FishStock can get your task management done faster","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"than traditional GUI apps.","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"## Quick start","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"1. Ensure you have **Java 11** installed in your Computer.","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"2. Download the latest `fishstock.jar` from [here](https://github.com/bryanyee33/ip/releases).","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"3. Open a terminal within the folder you saved `fishstock.jar` in.","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"4. Type `java -jar fishstock.jar` into the terminal.","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"## Command Summary","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"| Action | Syntax |","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"| -- | -- |","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"| Add: ***Todo*** | `todo \u003cdescription\u003e` |","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"| Add: ***Deadline*** | `deadline \u003cdescription\u003e /by \u003cdatetime\u003e` |","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"| Add: ***Event*** | `event \u003cdescription\u003e /from \u003cdatetime\u003e /to \u003cdatetime\u003e` |","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"| Delete | `delete \u003cindex\u003e` |","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"| Find | `find \u003ckeyword\u003e` |","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"| Mark | `mark \u003cindex\u003e` |","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"| Unmark | `unmark \u003cindex\u003e` |","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"| Undo | `undo` |","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"| List | `list` |","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"| Help | `help` |","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"| Exit | `bye` |","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"\u003e `datetime` is of format `\u003cdd/mm/yyyy hh:mm\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"\u003e ","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"\u003e `index` is based on the `list` order","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"# Features","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"## Adding a Todo: `todo`","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"Adds a Todo to the list of tasks.","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"- Format: `todo \u003cdescription\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"- Example: `todo borrow book`","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"## Adding a Deadline: `deadline`","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"Adds a Deadline to the list of tasks.","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"- Format: `deadline \u003cdescription\u003e /by \u003cdatetime\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"  - `\u003cdatetime\u003e` is of format `\u003cdd/mm/yyyy hh:mm\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"- Example: `deadline return book /by 27/01/2024 17:15`","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"bryanyee33"},"content":"## Adding an Event: `event`","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"bryanyee33"},"content":"Adds an Event to the list of tasks.","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"bryanyee33"},"content":"- Format: `event \u003cdescription\u003e /from \u003cdatetime\u003e /to \u003cdatetime\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":57,"author":{"gitId":"bryanyee33"},"content":"  - `\u003cdatetime\u003e` is of format `\u003cdd/mm/yyyy hh:mm\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"bryanyee33"},"content":"- Example: `event project meeting /from 01/03/2024 10:00 /to 01/03/2024 12:00`","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"bryanyee33"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"bryanyee33"},"content":"## Deleting a task: `delete`","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"bryanyee33"},"content":"Removes a task from the list.","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":64,"author":{"gitId":"bryanyee33"},"content":"- Format: `delete \u003cindex\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"bryanyee33"},"content":"  - `\u003cindex\u003e` is based on the `list` order.","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"bryanyee33"},"content":"- Example: `delete 3` deletes the 3rd task from the list.  ","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2024-01-07"},{"lineNumber":68,"author":{"gitId":"bryanyee33"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"bryanyee33"},"content":"## Finding a task: `find`","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"bryanyee33"},"content":"Searches for tasks in the list that contain a specified keyword in their description.","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"bryanyee33"},"content":"- Format: `find \u003ckeyword\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"bryanyee33"},"content":"  - The search is case-sensitive.","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"bryanyee33"},"content":"  - Only tasks that contain the exact keyword will be found.","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"bryanyee33"},"content":"- Example: `find book` finds all tasks with descriptions that contain \"book\".","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"bryanyee33"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"bryanyee33"},"content":"## Marking a task: `mark`","lastModifiedDate":"2024-02-18"},{"lineNumber":80,"author":{"gitId":"bryanyee33"},"content":"Marks a task as completed.","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"bryanyee33"},"content":"- Format: `mark \u003cindex\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"bryanyee33"},"content":"  - `\u003cindex\u003e` is based on the `list` order.","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"bryanyee33"},"content":"- Example: `mark 1` marks the 1st task on the list as completed.","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"bryanyee33"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"bryanyee33"},"content":"## Unmarking a task: `unmark`","lastModifiedDate":"2024-02-18"},{"lineNumber":88,"author":{"gitId":"bryanyee33"},"content":"Marks a task as incomplete.","lastModifiedDate":"2024-02-18"},{"lineNumber":89,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":90,"author":{"gitId":"bryanyee33"},"content":"- Format: `unmark \u003cindex\u003e`","lastModifiedDate":"2024-02-18"},{"lineNumber":91,"author":{"gitId":"bryanyee33"},"content":"  - `\u003cindex\u003e` is based on the `list` order.","lastModifiedDate":"2024-02-18"},{"lineNumber":92,"author":{"gitId":"bryanyee33"},"content":"- Example: `unmark 2` marks the 2nd task on the list as incomplete.","lastModifiedDate":"2024-02-18"},{"lineNumber":93,"author":{"gitId":"bryanyee33"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":94,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":95,"author":{"gitId":"bryanyee33"},"content":"## Undoing commands: `undo`","lastModifiedDate":"2024-02-18"},{"lineNumber":96,"author":{"gitId":"bryanyee33"},"content":"Reverts the list to its previous state.","lastModifiedDate":"2024-02-18"},{"lineNumber":97,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":98,"author":{"gitId":"bryanyee33"},"content":"- Format: `undo`","lastModifiedDate":"2024-02-18"},{"lineNumber":99,"author":{"gitId":"bryanyee33"},"content":"  - `undo` can be done multiple times.","lastModifiedDate":"2024-02-18"},{"lineNumber":100,"author":{"gitId":"bryanyee33"},"content":"  - All previous states since app launch can be reverted to.","lastModifiedDate":"2024-02-18"},{"lineNumber":101,"author":{"gitId":"bryanyee33"},"content":"  - Only commands that potentially modify the list can be undone.","lastModifiedDate":"2024-02-18"},{"lineNumber":102,"author":{"gitId":"bryanyee33"},"content":"    - Eg. Adding tasks, deleting tasks, marking tasks, etc.","lastModifiedDate":"2024-02-18"},{"lineNumber":103,"author":{"gitId":"bryanyee33"},"content":"  - Commands that don\u0027t modify the list cannot be undone.","lastModifiedDate":"2024-02-18"},{"lineNumber":104,"author":{"gitId":"bryanyee33"},"content":"    - Eg. Showing the list, finding tasks, etc.","lastModifiedDate":"2024-02-18"},{"lineNumber":105,"author":{"gitId":"bryanyee33"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":106,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":107,"author":{"gitId":"bryanyee33"},"content":"## Listing tasks: `list`","lastModifiedDate":"2024-02-18"},{"lineNumber":108,"author":{"gitId":"bryanyee33"},"content":"Shows all tasks in the list.","lastModifiedDate":"2024-02-18"},{"lineNumber":109,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":110,"author":{"gitId":"bryanyee33"},"content":"- Format: `list`","lastModifiedDate":"2024-02-18"},{"lineNumber":111,"author":{"gitId":"bryanyee33"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":112,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":113,"author":{"gitId":"bryanyee33"},"content":"## Show commands: `help`","lastModifiedDate":"2024-02-18"},{"lineNumber":114,"author":{"gitId":"bryanyee33"},"content":"Show a list of all commands.","lastModifiedDate":"2024-02-18"},{"lineNumber":115,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":116,"author":{"gitId":"bryanyee33"},"content":"- Format: `help`","lastModifiedDate":"2024-02-18"},{"lineNumber":117,"author":{"gitId":"bryanyee33"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":118,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":119,"author":{"gitId":"bryanyee33"},"content":"## Exiting: `bye`","lastModifiedDate":"2024-02-18"},{"lineNumber":120,"author":{"gitId":"bryanyee33"},"content":"Exits the app.","lastModifiedDate":"2024-02-18"},{"lineNumber":121,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":122,"author":{"gitId":"bryanyee33"},"content":"- Format: `bye`","lastModifiedDate":"2024-02-18"},{"lineNumber":123,"author":{"gitId":"bryanyee33"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"bryanyee33":108,"-":15}},{"path":"src/main/java/fishstock/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":" * Encapsulates the keywords for running respective commands.","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"public enum Command {","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"    INVALID, TODO(\"T\"), DEADLINE(\"D\"), EVENT(\"E\"),","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"    DELETE, FIND, MARK, UNMARK, UNDO, LIST, HELP, BYE;","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"    private String shortened;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"    Command() {","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"    Command(String shortened) {","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"        this.shortened \u003d shortened;","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"     * Gets the short form of a Command.","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"    public String getShortened() {","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"        return shortened;","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"     * Finds the Command with the specified shortened string.","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"     * @param shortened The shortened command in String.","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"     * @return The Command of enum type.","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"    public static Command findShortened(String shortened) {","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"        for (Command command : Command.values()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"            if (shortened.equals(command.shortened)) {","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"                return command;","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"        return Command.INVALID;","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"     * Gets the list of all Commands.","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"    public static String toList() {","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"        Command[] commands \u003d Command.values();","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"        String result \u003d commands[1].toString().toLowerCase(); // Remove INVALID Command","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"        for (int i \u003d 2; i \u003c commands.length; i++) {","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"            result +\u003d \", \" + commands[i].toString().toLowerCase();","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"        return result;","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"bryanyee33":52}},{"path":"src/main/java/fishstock/FishStock.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":" * Encapsulates a FishStock object.","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"public class FishStock {","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"    private TaskList list;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"     * Initializes a FishStock object.","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"    public FishStock() {","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"        storage \u003d new Storage(\"./data/tasks.txt\");","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"            list \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"        } catch (FishStockException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"            list \u003d new TaskList();","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"     * Gets the response to user input.","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"    public String getResponse(String inputStr) {","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"        UserInput input \u003d new UserInput(inputStr);","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"        String response \u003d Logic.run(list, input);","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"        return response;","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"     * Exits program while saving the list.","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"    public void exit() {","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"            storage.close(list);","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"     * Launches FishStock.","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"     * @param args ignored","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"bryanyee33"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"bryanyee33"},"content":"        Application.launch(fishstock.ui.Main.class, args);","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"bryanyee33":56}},{"path":"src/main/java/fishstock/FishStockException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":" * Encapsulates a FishStockException.","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"public class FishStockException extends Exception {","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"     * Initializes a FishStockException.","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"     * @param message The error message.","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"    public FishStockException(String message) {","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"        super(message);","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"bryanyee33":15}},{"path":"src/main/java/fishstock/Logic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"class Logic {","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"    private static final String LIST_PREFIX \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"    private static final String MARK_PREFIX \u003d \"Did you actually finish this? \\uD83E\\uDD14:\\n  \";","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"    private static final String UNMARK_PREFIX \u003d \"I knew you didn\u0027t finish it! \\uD83D\\uDE0F:\\n  \";","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"    private static final String DELETE_PREFIX \u003d \"This task has been removed:\\n  \";","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"    private static final String FIND_PREFIX \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"    private static final String UNDO_PREFIX \u003d \"List has been restored to the previous state:\\n\";","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"    private static final String HELP_PREFIX \u003d \"Here\u0027s a list of available commands:\\n\\n\";","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"    private static final String ADD_TASK_PREFIX \u003d \"This task has been added:\\n  \";","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"    private static final String UNKNOWN_COMMAND_TEXT \u003d \"OH NOSE! Wakaranai... :(\";","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"    private static String runCommand(TaskList list, UserInput input) throws FishStockException {","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"        Command command \u003d input.getCommandType();","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"        switch (command) {","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"        case BYE:","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"            Platform.exit();","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"            return \"\"; // Won\u0027t reach here","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"        case LIST:","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"            return LIST_PREFIX + list;","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"        case MARK:","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"            return MARK_PREFIX + list.markTask(input);","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"        case UNMARK:","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"            return UNMARK_PREFIX + list.unmarkTask(input);","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"        case DELETE:","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"            return DELETE_PREFIX + list.deleteTask(input) + getTaskCount(list);","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"        case FIND:","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"            return FIND_PREFIX + list.findTasks(input);","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"        case UNDO:","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"            list.restoreState();","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"            return UNDO_PREFIX + list;","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"        case HELP:","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"            return HELP_PREFIX + Command.toList();","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"        case TODO:","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"            // Fallthrough","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"            // Fallthrough","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"        case EVENT:","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"            return ADD_TASK_PREFIX + list.addTask(input) + getTaskCount(list);","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"        default:","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"            return UNKNOWN_COMMAND_TEXT;","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"     * Runs the command from the UserInput.","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"bryanyee33"},"content":"     * @param list The list of Tasks to execute on.","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"bryanyee33"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"bryanyee33"},"content":"     * @return The output from the command.","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"bryanyee33"},"content":"    protected static String run(TaskList list, UserInput input) {","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"bryanyee33"},"content":"            String result \u003d runCommand(list, input);","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"bryanyee33"},"content":"            return result;","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"bryanyee33"},"content":"        } catch (FishStockException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"bryanyee33"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"bryanyee33"},"content":"     * Gets the number of tasks in list.","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"bryanyee33"},"content":"     * @param list The list of Tasks.","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"bryanyee33"},"content":"     * @return A user-readable String format of task count.","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"bryanyee33"},"content":"    private static String getTaskCount(TaskList list) {","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"bryanyee33"},"content":"        return \"\\nNow you have \" + list.getSize() + \" task(s) in total.\";","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"bryanyee33":74}},{"path":"src/main/java/fishstock/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"import java.io.File;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"import fishstock.task.Task;","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"import fishstock.task.TaskException;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"import fishstock.task.TaskFactory;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":" * Encapsulates a Storage object.","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":" * Handles all storing/loading of save files.","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"class Storage {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"    private final File db;","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"    private final String filePath;","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"     * Initializes a Storage object.","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"     * @param filePath The path to the save file.","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"    protected Storage(String filePath) {","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"        assert filePath.contains(\"/\") : \"File path is invalid\";","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"        db \u003d new File(filePath);","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"     * Loads the entire save file into an ArrayList.","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"     * @return The array with all Tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"     * @throws FishStockException The exceptions while loading all Tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"    protected ArrayList\u003cTask\u003e load() throws FishStockException {","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"            ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"            addTasks(list);","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"            return list;","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"            String pathToDb \u003d filePath.substring(0, filePath.lastIndexOf(\"/\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"            new File(pathToDb).mkdir();","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"File not found... Starting new session...\\n\");","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"        } catch (TaskException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"File corrupted!... Starting new session...\\n\");","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"bryanyee33"},"content":"    private void addTasks(ArrayList\u003cTask\u003e list) throws FileNotFoundException, TaskException {","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"bryanyee33"},"content":"        Scanner sc \u003d new Scanner(db);","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"bryanyee33"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"bryanyee33"},"content":"            Task task \u003d TaskFactory.fromStorageString(sc.nextLine());","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"bryanyee33"},"content":"            list.add(task);","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"bryanyee33"},"content":"     * Saves all Tasks in the TaskList into the save file.","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"bryanyee33"},"content":"     * @throws IOException The exceptions while saving all Tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"bryanyee33"},"content":"    protected void close(TaskList list) throws IOException {","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"bryanyee33"},"content":"        FileWriter fw \u003d new FileWriter(db);","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"bryanyee33"},"content":"        for (Task task : list.list) {","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"bryanyee33"},"content":"            fw.write(task.toSaveFormat());","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"bryanyee33"},"content":"        fw.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"bryanyee33":76}},{"path":"src/main/java/fishstock/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"import java.util.Stack;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"import fishstock.task.Task;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"import fishstock.task.TaskException;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"import fishstock.task.TaskFactory;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":" * Encapsulates a TaskList object.","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":" * Handles all functions related to the array storing Tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"class TaskList {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"    protected ArrayList\u003cTask\u003e list;","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"    protected final Stack\u003cArrayList\u003cTask\u003e\u003e history \u003d new Stack\u003c\u003e();","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"    protected TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"        this.list \u003d list;","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"    protected TaskList() {","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"    protected int getSize() {","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"        return list.size();","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"        String result \u003d \"\";","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"            result +\u003d (i + 1) + \".\" + list.get(i) + \"\\n\";","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"        return result;","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"     * Makes a copy of the current list state into history stack.","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"    private void saveState() {","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"        ArrayList\u003cTask\u003e savedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"        for (Task task : list) {","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"            savedList.add(task.clone());","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"        history.add(savedList);","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"     * Restores the latest saved copy from the history stack into the list.","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"bryanyee33"},"content":"    protected void restoreState() throws FishStockException {","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"bryanyee33"},"content":"        if (history.isEmpty()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"OH NOSE! No more history to undo..\");","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"bryanyee33"},"content":"        list \u003d history.pop();","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"bryanyee33"},"content":"     * Marks the Task.","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"bryanyee33"},"content":"     * @param input The input from user.","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"bryanyee33"},"content":"     * @return The marked Task.","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"bryanyee33"},"content":"     * @throws FishStockException The exceptions while changing the mark.","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"bryanyee33"},"content":"    protected Task markTask(UserInput input) throws FishStockException {","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"bryanyee33"},"content":"        return changeMark(Command.MARK, input);","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"bryanyee33"},"content":"     * Unmarks the Task.","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"bryanyee33"},"content":"     * @param input The input from user.","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"bryanyee33"},"content":"     * @return The unmarked Task.","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"bryanyee33"},"content":"     * @throws FishStockException The exceptions while changing the mark.","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"bryanyee33"},"content":"    protected Task unmarkTask(UserInput input) throws FishStockException {","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"bryanyee33"},"content":"        return changeMark(Command.UNMARK, input);","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"bryanyee33"},"content":"     * Marks whether Task is done.","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":85,"author":{"gitId":"bryanyee33"},"content":"     * @param command The type of command.","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"bryanyee33"},"content":"     * @param input The input from user.","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"bryanyee33"},"content":"     * @return The marked/unmarked Task.","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"bryanyee33"},"content":"     * @throws FishStockException The exceptions while changing the mark.","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"bryanyee33"},"content":"    private Task changeMark(Command command, UserInput input) throws FishStockException {","lastModifiedDate":"2024-02-17"},{"lineNumber":91,"author":{"gitId":"bryanyee33"},"content":"        assert command \u003d\u003d Command.MARK || command \u003d\u003d Command.UNMARK : \"Not a marking Command\";","lastModifiedDate":"2024-02-17"},{"lineNumber":92,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":93,"author":{"gitId":"bryanyee33"},"content":"        int idx \u003d input.getIndex();","lastModifiedDate":"2024-02-13"},{"lineNumber":94,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"bryanyee33"},"content":"            Task task \u003d list.get(idx);","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"bryanyee33"},"content":"            saveState();","lastModifiedDate":"2024-02-13"},{"lineNumber":97,"author":{"gitId":"bryanyee33"},"content":"            changeTaskMark(command, task);","lastModifiedDate":"2024-02-17"},{"lineNumber":98,"author":{"gitId":"bryanyee33"},"content":"            return task;","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"bryanyee33"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"OH NOSE! Task number must be in valid range..\");","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"bryanyee33"},"content":"    private void changeTaskMark(Command command, Task task) {","lastModifiedDate":"2024-02-17"},{"lineNumber":106,"author":{"gitId":"bryanyee33"},"content":"        if (command \u003d\u003d Command.MARK) {","lastModifiedDate":"2024-02-17"},{"lineNumber":107,"author":{"gitId":"bryanyee33"},"content":"            task.markAsDone();","lastModifiedDate":"2024-02-17"},{"lineNumber":108,"author":{"gitId":"bryanyee33"},"content":"        } else if (command \u003d\u003d Command.UNMARK) {","lastModifiedDate":"2024-02-17"},{"lineNumber":109,"author":{"gitId":"bryanyee33"},"content":"            task.markAsUndone();","lastModifiedDate":"2024-02-17"},{"lineNumber":110,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":111,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":112,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":113,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"bryanyee33"},"content":"     * Removes the Task from the list.","lastModifiedDate":"2024-02-17"},{"lineNumber":115,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":116,"author":{"gitId":"bryanyee33"},"content":"     * @param input The input from user.","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"bryanyee33"},"content":"     * @return The removed Task.","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"bryanyee33"},"content":"     * @throws FishStockException The exceptions while removing the Task.","lastModifiedDate":"2024-01-28"},{"lineNumber":119,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":120,"author":{"gitId":"bryanyee33"},"content":"    protected Task deleteTask(UserInput input) throws FishStockException {","lastModifiedDate":"2024-02-13"},{"lineNumber":121,"author":{"gitId":"bryanyee33"},"content":"        int idx \u003d input.getIndex();","lastModifiedDate":"2024-02-13"},{"lineNumber":122,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":123,"author":{"gitId":"bryanyee33"},"content":"            Task task \u003d list.get(idx);","lastModifiedDate":"2024-01-27"},{"lineNumber":124,"author":{"gitId":"bryanyee33"},"content":"            saveState();","lastModifiedDate":"2024-02-13"},{"lineNumber":125,"author":{"gitId":"bryanyee33"},"content":"            list.remove(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":126,"author":{"gitId":"bryanyee33"},"content":"            return task;","lastModifiedDate":"2024-01-27"},{"lineNumber":127,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":128,"author":{"gitId":"bryanyee33"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":129,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"OH NOSE! Task number must be in valid range..\");","lastModifiedDate":"2024-01-27"},{"lineNumber":130,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":131,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":132,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":133,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":134,"author":{"gitId":"bryanyee33"},"content":"     * Adds a Task into the list.","lastModifiedDate":"2024-02-17"},{"lineNumber":135,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":136,"author":{"gitId":"bryanyee33"},"content":"     * @param input The input from user.","lastModifiedDate":"2024-01-28"},{"lineNumber":137,"author":{"gitId":"bryanyee33"},"content":"     * @return The added Task.","lastModifiedDate":"2024-01-28"},{"lineNumber":138,"author":{"gitId":"bryanyee33"},"content":"     * @throws FishStockException The exceptions while adding the Task.","lastModifiedDate":"2024-01-28"},{"lineNumber":139,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":140,"author":{"gitId":"bryanyee33"},"content":"    protected Task addTask(UserInput input) throws FishStockException {","lastModifiedDate":"2024-02-14"},{"lineNumber":141,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":142,"author":{"gitId":"bryanyee33"},"content":"            Task task \u003d TaskFactory.fromUserInput(input);","lastModifiedDate":"2024-02-17"},{"lineNumber":143,"author":{"gitId":"bryanyee33"},"content":"            saveState();","lastModifiedDate":"2024-02-13"},{"lineNumber":144,"author":{"gitId":"bryanyee33"},"content":"            list.add(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":145,"author":{"gitId":"bryanyee33"},"content":"            return task;","lastModifiedDate":"2024-01-27"},{"lineNumber":146,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":147,"author":{"gitId":"bryanyee33"},"content":"        } catch (TaskException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":148,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(e.getMessage());","lastModifiedDate":"2024-02-17"},{"lineNumber":149,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":150,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":151,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":152,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":153,"author":{"gitId":"bryanyee33"},"content":"     * Finds Tasks that contain input in their description.","lastModifiedDate":"2024-02-17"},{"lineNumber":154,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":155,"author":{"gitId":"bryanyee33"},"content":"     * @param input The input to be matched with.","lastModifiedDate":"2024-02-06"},{"lineNumber":156,"author":{"gitId":"bryanyee33"},"content":"     * @return The Tasks that were found.","lastModifiedDate":"2024-02-06"},{"lineNumber":157,"author":{"gitId":"bryanyee33"},"content":"     * @throws FishStockException The exceptions while finding Tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":158,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":159,"author":{"gitId":"bryanyee33"},"content":"    protected String findTasks(UserInput input) throws FishStockException {","lastModifiedDate":"2024-02-13"},{"lineNumber":160,"author":{"gitId":"bryanyee33"},"content":"        String[] splitInput \u003d input.splitByKeywords();","lastModifiedDate":"2024-02-13"},{"lineNumber":161,"author":{"gitId":"bryanyee33"},"content":"        if (splitInput[0].isEmpty()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":162,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"OH NOSE! The match word is empty..\");","lastModifiedDate":"2024-01-28"},{"lineNumber":163,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":164,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":165,"author":{"gitId":"bryanyee33"},"content":"        String match \u003d splitInput[0];","lastModifiedDate":"2024-02-13"},{"lineNumber":166,"author":{"gitId":"bryanyee33"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-02-06"},{"lineNumber":167,"author":{"gitId":"bryanyee33"},"content":"        String result \u003d \"\";","lastModifiedDate":"2024-02-06"},{"lineNumber":168,"author":{"gitId":"bryanyee33"},"content":"        for (Task task : list) {","lastModifiedDate":"2024-01-28"},{"lineNumber":169,"author":{"gitId":"bryanyee33"},"content":"            if (task.getDescription().contains(match)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":170,"author":{"gitId":"bryanyee33"},"content":"                result +\u003d (++count) + \".\" + task + \"\\n\";","lastModifiedDate":"2024-02-06"},{"lineNumber":171,"author":{"gitId":"bryanyee33"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":172,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":173,"author":{"gitId":"bryanyee33"},"content":"        return result;","lastModifiedDate":"2024-01-28"},{"lineNumber":174,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":175,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"bryanyee33":175}},{"path":"src/main/java/fishstock/UserInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":" * Encapsulates a user input.","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"public class UserInput {","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"    private final Command command;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"    private final String details;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"     * Initializes a UserInput.","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"     * @param input The whole input from user (including command).","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"    protected UserInput(String input) {","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"        assert input !\u003d null : \"User input should not be null\";","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"        String[] splitInput \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"        command \u003d parseCommandType(splitInput[0]);","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"        if (splitInput.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"            details \u003d splitInput[1];","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"        } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"            details \u003d \"\";","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"     * Parses command type from input.","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"    private static Command parseCommandType(String commandStr) {","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"            return Command.valueOf(commandStr.toUpperCase());","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"        } catch (java.lang.IllegalArgumentException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"            return Command.INVALID;","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"     * Gets command type from user input.","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"    public Command getCommandType() {","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"        return command;","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"     * Splits the input into an array, delimited by the specified keywords,","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"     * and excluding the command keyword.","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"     * @param keywords The keyword(s) to delimit with.","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"     * @return The array with the split input.","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"bryanyee33"},"content":"    public String[] splitByKeywords(String ... keywords) {","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"bryanyee33"},"content":"        String currDetails \u003d details;","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"bryanyee33"},"content":"        String[] result \u003d new String[keywords.length + 1];","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"bryanyee33"},"content":"        int index \u003d 0;","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"bryanyee33"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"bryanyee33"},"content":"            String[] splitDetails \u003d currDetails.split(keyword, 2);","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"bryanyee33"},"content":"            if (splitDetails.length \u003d\u003d 1) { // Not found","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"bryanyee33"},"content":"                break;","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"bryanyee33"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"bryanyee33"},"content":"            result[index++] \u003d splitDetails[0].trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"bryanyee33"},"content":"            currDetails \u003d splitDetails[1].trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"bryanyee33"},"content":"        result[index] \u003d currDetails.trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"bryanyee33"},"content":"        return result;","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"bryanyee33"},"content":"     * Gets index number from input.","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"bryanyee33"},"content":"     * Has the format \"[command] [task_number]\".","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"bryanyee33"},"content":"     * Subtracts 1 from task_number to obtain index number for array.","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"bryanyee33"},"content":"     * @return The resulting index number.","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"bryanyee33"},"content":"     * @throws FishStockException The exceptions while calculating the index number.","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"bryanyee33"},"content":"    public int getIndex() throws FishStockException {","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"bryanyee33"},"content":"        if (details.isEmpty()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"OH NOSE! Task number cannot be empty..\");","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"bryanyee33"},"content":"            int num \u003d Integer.parseInt(details);","lastModifiedDate":"2024-02-13"},{"lineNumber":86,"author":{"gitId":"bryanyee33"},"content":"            return num - 1; // Start from index 0","lastModifiedDate":"2024-02-13"},{"lineNumber":87,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":88,"author":{"gitId":"bryanyee33"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":89,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"OH NOSE! Task number has to be an integer..\");","lastModifiedDate":"2024-02-13"},{"lineNumber":90,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":91,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":92,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"bryanyee33":92}},{"path":"src/main/java/fishstock/task/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock.task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":" * Encapsulates parsing methods for Dates.","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"class DateParser {","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"    private static final DateTimeFormatter IN_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy H:m\");","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"    private static final DateTimeFormatter OUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\");","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"     * Parses date string into LocalDateTime object.","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"     * Has the format \"[dd/mm/yyyy] [hh:mm]\".","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"     * @param date The date string.","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"     * @return The LocalDateTime object.","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"     * @throws TaskException The exceptions while parsing the date.","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"    protected static LocalDateTime parseDate(String date) throws TaskException {","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"            return LocalDateTime.parse(date, IN_DATE_FORMAT);","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"            throw new TaskException(\"OH NOSE! Dates should be of the format \u003cdd/mm/yyyy hh:mm\u003e\");","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"     * Converts LocalDateTime object into String input format.","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"     * @param date The LocalDateTime object.","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"     * @return The String with input format.","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"    protected static String inDate(LocalDateTime date) {","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"        return date.format(IN_DATE_FORMAT);","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"     * Converts LocalDateTime object into String output format.","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"     * @param date The LocalDateTime object.","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"     * @return The String with output format.","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"    protected static String outDate(LocalDateTime date) {","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"        return date.format(OUT_DATE_FORMAT);","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"bryanyee33":49}},{"path":"src/main/java/fishstock/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock.task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"import fishstock.Command;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"import fishstock.UserInput;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":" * Encapsulates a Deadline Task.","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":" * This Task has a description and deadline date.","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"class Deadline extends Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"    private static final String BY_KEYWORD \u003d \"/by\";","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"     * Initializes a Deadline object.","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"     * @param description The task description.","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"     * @param by The deadline date.","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"    protected Deadline(String description, boolean isDone, LocalDateTime by) {","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"    protected Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"        this(description, false, by);","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"    private static void checkIsValid(String[] splitInput) throws TaskException {","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"        if (splitInput[0].isEmpty()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"            throw new TaskException(\"OH NOSE! The description of deadline cannot be empty..\");","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"        if (splitInput[1] \u003d\u003d null) {","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"            throw new TaskException(\"OH NOSE! \\\"\" + BY_KEYWORD + \"\\\" not found..\");","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"        if (splitInput[1].isEmpty()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"            throw new TaskException(\"OH NOSE! The by-date cannot be empty..\");","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"     * Initializes a Deadline object from UserInput.","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"     * Has format \"deadline [description] /by [date]\".","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"     * @param input The input from user.","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"     * @return The generated Deadline object.","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"     * @throws TaskException The exceptions while creating the Deadline object.","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"    protected static Deadline of(UserInput input) throws TaskException {","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"bryanyee33"},"content":"        assert input.getCommandType() \u003d\u003d Command.DEADLINE : \"The input type is not Deadline\";","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"bryanyee33"},"content":"        String[] splitInput \u003d input.splitByKeywords(BY_KEYWORD);","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"bryanyee33"},"content":"        checkIsValid(splitInput);","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"bryanyee33"},"content":"        String description \u003d splitInput[0];","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"bryanyee33"},"content":"        LocalDateTime by \u003d DateParser.parseDate(splitInput[1]);","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"bryanyee33"},"content":"        return new Deadline(description, by);","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"bryanyee33"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"bryanyee33"},"content":"    public Task clone() {","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"bryanyee33"},"content":"        return new Deadline(this.getDescription(), this.getIsDone(), by);","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"bryanyee33"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"bryanyee33"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"bryanyee33"},"content":"        return Command.DEADLINE.getShortened() + \"|\" + getDescription() + \"|\" + DateParser.inDate(by)","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"bryanyee33"},"content":"                + \"|\" + markStatusToInt() + System.lineSeparator();","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"bryanyee33"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":74,"author":{"gitId":"bryanyee33"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":75,"author":{"gitId":"bryanyee33"},"content":"        return \"[\" + Command.DEADLINE.getShortened() + \"]\" + super.toString() + \" (by: \" + DateParser.outDate(by) + \")\";","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":77,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"bryanyee33":77}},{"path":"src/main/java/fishstock/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock.task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"import fishstock.Command;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"import fishstock.UserInput;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":" * Encapsulates an Event Task.","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":" * This Task has a description, from date, and to date.","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"class Event extends Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"    private static final String FROM_KEYWORD \u003d \"/from\";","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"    private static final String TO_KEYWORD \u003d \"/to\";","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"     * Initializes an Event object.","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"     * @param description The task description.","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"     * @param from The from date.","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"     * @param to The to date.","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"    protected Event(String description, boolean isDone, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"    protected Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"        this(description, false, from, to);","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"    private static void checkIsValid(String[] splitInput) throws TaskException {","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"        if (splitInput[0].isEmpty()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"            throw new TaskException(\"OH NOSE! The description of event cannot be empty..\");","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"        if (splitInput[1] \u003d\u003d null) {","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"            throw new TaskException(\"OH NOSE! \\\"\" + FROM_KEYWORD + \"\\\" not found..\");","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"        if (splitInput[0].contains(TO_KEYWORD)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"            throw new TaskException(\"OH NOSE! The from-date must be put first..\");","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"        if (splitInput[2] \u003d\u003d null) {","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"            throw new TaskException(\"OH NOSE! \\\"\" + TO_KEYWORD + \"\\\" not found..\");","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"        if (splitInput[1].isEmpty()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"            throw new TaskException(\"OH NOSE! The from-date cannot be empty..\");","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"        if (splitInput[2].isEmpty()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"bryanyee33"},"content":"            throw new TaskException(\"OH NOSE! The to-date cannot be empty..\");","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"bryanyee33"},"content":"        LocalDateTime from \u003d DateParser.parseDate(splitInput[1]);","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"bryanyee33"},"content":"        LocalDateTime to \u003d DateParser.parseDate(splitInput[2]);","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"bryanyee33"},"content":"        if (from.isAfter(to) \u0026\u0026 !from.equals(to)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"bryanyee33"},"content":"            throw new TaskException(\"OH NOSE! The from-date must be before the to-date..\");","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"bryanyee33"},"content":"     * Initializes an Event object from UserInput.","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"bryanyee33"},"content":"     * Has format \"event [description] /from [date] /to [date]\".","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"bryanyee33"},"content":"     * @param input The input from user.","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"bryanyee33"},"content":"     * @return The generated Event object.","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"bryanyee33"},"content":"     * @throws TaskException The exceptions while creating the Event object.","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"bryanyee33"},"content":"    protected static Event of(UserInput input) throws TaskException {","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"bryanyee33"},"content":"        assert input.getCommandType() \u003d\u003d Command.EVENT : \"The input type is not Event\";","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"bryanyee33"},"content":"        String[] splitInput \u003d input.splitByKeywords(FROM_KEYWORD, TO_KEYWORD);","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"bryanyee33"},"content":"        checkIsValid(splitInput);","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":77,"author":{"gitId":"bryanyee33"},"content":"        String description \u003d splitInput[0];","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"bryanyee33"},"content":"        LocalDateTime from \u003d DateParser.parseDate(splitInput[1]);","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"bryanyee33"},"content":"        LocalDateTime to \u003d DateParser.parseDate(splitInput[2]);","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"bryanyee33"},"content":"        return new Event(description, from, to);","lastModifiedDate":"2024-01-23"},{"lineNumber":81,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":82,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":83,"author":{"gitId":"bryanyee33"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"bryanyee33"},"content":"    public Task clone() {","lastModifiedDate":"2024-02-17"},{"lineNumber":85,"author":{"gitId":"bryanyee33"},"content":"        return new Event(this.getDescription(), this.getIsDone(), from, to);","lastModifiedDate":"2024-02-13"},{"lineNumber":86,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":87,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":88,"author":{"gitId":"bryanyee33"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"bryanyee33"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-02-17"},{"lineNumber":90,"author":{"gitId":"bryanyee33"},"content":"        return Command.EVENT.getShortened() + \"|\" + getDescription() + \"|\" + DateParser.inDate(from) + \"|\"","lastModifiedDate":"2024-02-17"},{"lineNumber":91,"author":{"gitId":"bryanyee33"},"content":"                + DateParser.inDate(to) + \"|\" + markStatusToInt() + System.lineSeparator();","lastModifiedDate":"2024-02-17"},{"lineNumber":92,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"bryanyee33"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":95,"author":{"gitId":"bryanyee33"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":96,"author":{"gitId":"bryanyee33"},"content":"        return \"[\" + Command.EVENT.getShortened() + \"]\" + super.toString() + \" (from: \" + DateParser.outDate(from)","lastModifiedDate":"2024-02-17"},{"lineNumber":97,"author":{"gitId":"bryanyee33"},"content":"                + \" to: \" + DateParser.outDate(to) + \")\";","lastModifiedDate":"2024-02-17"},{"lineNumber":98,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":99,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"bryanyee33":99}},{"path":"src/main/java/fishstock/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock.task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":" * Encapsulates a Task object.","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"    private String description;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"    protected Task(String description, boolean isDone) {","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"     * Marks Task as done.","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"     * Marks Task as undone.","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"     * Converts Task into String format for saving.","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"    public abstract String toSaveFormat();","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"     * Converts boolean mark status to int.","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"     * Used for saving isDone of Task.","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"     * @return The converted int.","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"    protected int markStatusToInt() {","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"        return isDone ? 1 : 0;","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"     * Gets the Task description.","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"        return description;","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"bryanyee33"},"content":"     * Gets the done status of the Task.","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"bryanyee33"},"content":"    protected boolean getIsDone() {","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"bryanyee33"},"content":"        return isDone;","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"bryanyee33"},"content":"     * Makes a clone of the Task.","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"bryanyee33"},"content":"    public abstract Task clone();","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"bryanyee33"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"bryanyee33"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"bryanyee33"},"content":"        return \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + this.description;","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"bryanyee33":67}},{"path":"src/main/java/fishstock/task/TaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock.task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":" * Encapsulates a TaskException.","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"public class TaskException extends Exception {","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"     * Initializes a TaskException.","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"     * @param message The error message.","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"    public TaskException(String message) {","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"        super(message);","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"bryanyee33":15}},{"path":"src/main/java/fishstock/task/TaskFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock.task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"import fishstock.Command;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"import fishstock.UserInput;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":" * A Factory class to initialize Tasks.","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"public class TaskFactory {","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"     * Initializes a Task from a UserInput.","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"    public static Task fromUserInput(UserInput input) throws TaskException {","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"        Command command \u003d input.getCommandType();","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"        assert Arrays.asList(Command.TODO, Command.DEADLINE, Command.EVENT)","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"                .contains(command) : \"Attempted to add an invalid Task\";","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"        return createTask(command, input);","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"     * Initializes a Task from storage format.","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"    public static Task fromStorageString(String line) throws TaskException {","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"        String[] arr \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"        Command command \u003d Command.findShortened(arr[0]);","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"        boolean isDone \u003d getIsDone(arr[arr.length - 1]);","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"        return createTask(arr, command, isDone);","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"    private static Task createTask(Command command, UserInput input) throws TaskException {","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"        switch (command) {","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"        case TODO:","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"            task \u003d Todo.of(input);","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"            break;","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"            task \u003d Deadline.of(input);","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"            break;","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"        case EVENT:","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"            task \u003d Event.of(input);","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"            break;","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"        default:","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"            // Not possible as asserted beforehand.","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"        return task;","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"bryanyee33"},"content":"    private static Task createTask(String[] arr, Command command, boolean isDone) throws TaskException {","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"bryanyee33"},"content":"        Task task;","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"bryanyee33"},"content":"        switch (command) {","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"bryanyee33"},"content":"        case TODO:","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"bryanyee33"},"content":"            task \u003d new Todo(arr[1], isDone);","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"bryanyee33"},"content":"            break;","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"bryanyee33"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"bryanyee33"},"content":"            task \u003d new Deadline(arr[1], isDone, DateParser.parseDate(arr[2]));","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"bryanyee33"},"content":"            break;","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"bryanyee33"},"content":"        case EVENT:","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"bryanyee33"},"content":"            task \u003d new Event(arr[1], isDone, DateParser.parseDate(arr[2]), DateParser.parseDate(arr[3]));","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"bryanyee33"},"content":"            break;","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"bryanyee33"},"content":"        default:","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"bryanyee33"},"content":"            throw new TaskException(\"Wrong format..\");","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"bryanyee33"},"content":"        return task;","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"bryanyee33"},"content":"    private static boolean getIsDone(String markStatus) throws TaskException {","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"bryanyee33"},"content":"        if (\"1\".equals(markStatus)) {","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"bryanyee33"},"content":"            return true;","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"bryanyee33"},"content":"        } else if (\"0\".equals(markStatus)) {","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"bryanyee33"},"content":"            return false;","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"bryanyee33"},"content":"        } else {","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"bryanyee33"},"content":"            throw new TaskException(\"Mark status corrupted..\");","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"bryanyee33":79}},{"path":"src/main/java/fishstock/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock.task;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"import fishstock.Command;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"import fishstock.UserInput;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":" * Encapsulates Todo Task.","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":" * This Task only has a description.","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"class Todo extends Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"     * Initializes a Todo object.","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"     * @param description The task description.","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"    protected Todo(String description, boolean isDone) {","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"    protected Todo(String description) {","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"        this(description, false);","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"    private static void checkIsValid(String[] splitInput) throws TaskException {","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"        if (splitInput[0].isEmpty()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"            throw new TaskException(\"OH NOSE! The description of todo cannot be empty..\");","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"     * Initializes a Todo object from UserInput.","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"     * Has format \"todo [description]\".","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"     * @param input The input from user.","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"     * @return The generated Todo object.","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"     * @throws TaskException The exceptions while creating the Todo object.","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"    protected static Todo of(UserInput input) throws TaskException {","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"        assert input.getCommandType() \u003d\u003d Command.TODO : \"The input type is not Todo\";","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"        String[] splitInput \u003d input.splitByKeywords();","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"        checkIsValid(splitInput);","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"        String description \u003d splitInput[0];","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"        return new Todo(description);","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"    public Task clone() {","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"        return new Todo(this.getDescription(), this.getIsDone());","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"bryanyee33"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"bryanyee33"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"bryanyee33"},"content":"        return Command.TODO.getShortened() + \"|\" + getDescription() + \"|\" + markStatusToInt() + System.lineSeparator();","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"bryanyee33"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"bryanyee33"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"bryanyee33"},"content":"        return \"[\" + Command.TODO.getShortened() + \"]\" + super.toString();","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"bryanyee33":62}},{"path":"src/main/java/fishstock/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock.ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"    private static final CornerRadii CORNER_RADII \u003d new CornerRadii(10);","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"    private static final Background USER_DIALOG_BACKGROUND \u003d new Background(","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"            new BackgroundFill(Color.CHOCOLATE, CORNER_RADII, null));","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"    private static final Background FISHSTOCK_BACKGROUND \u003d new Background(","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"            new BackgroundFill(Color.BLANCHEDALMOND, CORNER_RADII, null));","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"bryanyee33"},"content":"    private void flip() {","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"bryanyee33"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"bryanyee33"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"bryanyee33"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"bryanyee33"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"bryanyee33"},"content":"     * Initializes a User DialogBox with the given text and image.","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"bryanyee33"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"bryanyee33"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"bryanyee33"},"content":"        db.dialog.setTextFill(Color.MINTCREAM);","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"bryanyee33"},"content":"        db.setBackground(USER_DIALOG_BACKGROUND);","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"bryanyee33"},"content":"        return db;","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"bryanyee33"},"content":"     * Initializes a FishStock DialogBox with the given text and image.","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"bryanyee33"},"content":"    public static DialogBox getFishStockDialog(String text, Image img) {","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"bryanyee33"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"bryanyee33"},"content":"        db.flip();","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"bryanyee33"},"content":"        db.dialog.setTextFill(Color.SADDLEBROWN);","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"bryanyee33"},"content":"        db.setBackground(FISHSTOCK_BACKGROUND);","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"bryanyee33"},"content":"        return db;","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"bryanyee33":79}},{"path":"src/main/java/fishstock/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock.ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"import fishstock.FishStock;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":" * A GUI for FishStock using FXML.","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"    private FishStock fishstock \u003d new FishStock();","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"    private Image fishStockImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/FishStock.png\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"     * Starts the GUI.","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"            stage.setTitle(\"FishStock\");","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"            stage.getIcons().add(fishStockImage);","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setFishStock(fishstock);","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"            stage.show();","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"     * Stops the GUI.","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"    public void stop() {","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"        fishstock.exit();","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"bryanyee33":46}},{"path":"src/main/java/fishstock/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock.ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"import fishstock.Command;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"import fishstock.FishStock;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"    private static final String WELCOME_TEXT \u003d \"Hello, I\u0027m FishStock.\\nI might help if I feel like it.\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"            + \"\\nHere\u0027s a list of available commands:\\n\\n\" + Command.toList();","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"    private FishStock fishstock;","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"    private Image fishStockImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/FishStock.png\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"    private void initialize() {","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"        dialogContainer.getChildren().add(DialogBox.getFishStockDialog(WELCOME_TEXT, fishStockImage));","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"    protected void setFishStock(FishStock f) {","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"        fishstock \u003d f;","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"    private void moveScrollbarToBottom() {","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"        // Manually set vertical scrollbar value. Fixes scrolling to bottom on window width size change issue.","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"        scrollPane.applyCss();","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"        scrollPane.layout();","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing FishStock\u0027s reply","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"     * and then appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"bryanyee33"},"content":"        String response \u003d fishstock.getResponse(input);","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"bryanyee33"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"bryanyee33"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"bryanyee33"},"content":"                DialogBox.getFishStockDialog(response, fishStockImage)","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"bryanyee33"},"content":"        );","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"bryanyee33"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"bryanyee33"},"content":"        moveScrollbarToBottom();","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"bryanyee33":60}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"\u003cfx:root style\u003d\"-fx-border-color: black; -fx-border-radius: 10; -fx-border-style: solid; -fx-border-width: 1; \" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-padding: 0 20 0 20; -fx-font-family: Verdana; -fx-font-size: 14; \" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"bryanyee33":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"\u003cAnchorPane fx:id\u003d\"pane\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"650.0\" prefWidth\u003d\"450.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"fishstock.ui.MainWindow\"\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"    \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"55.0\" prefWidth\u003d\"${pane.width-76.0}\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"    \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"55.0\" prefWidth\u003d\"80.0\" text\u003d\"Send\" AnchorPane.rightAnchor\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"1.0\" style\u003d\"-fx-font-family: Verdana; -fx-font-size:14;\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" vbarPolicy\u003d\"ALWAYS\" hbarPolicy\u003d\"NEVER\" prefWidth\u003d\"${pane.width}\" vvalue\u003d\"1.0\" hvalue\u003d\"1.0\" \u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"${pane.height-58.0}\" prefWidth\u003d\"${pane.width-16.0}\" /\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"      \u003c/content\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"bryanyee33":19}},{"path":"src/test/java/fishstock/UserInputTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"public class UserInputTest {","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"    public void getIndex_oneInteger_success() throws Exception {","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(0, new UserInput(\"mark 1\").getIndex());","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(0, new UserInput(\"mark 001\").getIndex());","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(99, new UserInput(\"unmark 100\").getIndex());","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(-1, new UserInput(\"unmark 0\").getIndex());","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"    public void getIndex_multiOrNonInteger_exceptionThrown() {","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(0, new UserInput(\"mark 1 2 3 4\").getIndex());","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(\"OH NOSE! Task number has to be an integer..\", e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(1, new UserInput(\"mark 2.0\").getIndex());","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(\"OH NOSE! Task number has to be an integer..\", e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(0, new UserInput(\"mark abc\").getIndex());","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(\"OH NOSE! Task number has to be an integer..\", e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"    public void getIndex_noSpaces_exceptionThrown() {","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(0, new UserInput(\"mark\").getIndex());","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(\"OH NOSE! Task number cannot be empty..\", e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(0, new UserInput(\"unmark1\").getIndex());","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"bryanyee33"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"bryanyee33"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(\"OH NOSE! Task number cannot be empty..\", e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(0, new UserInput(\"1\").getIndex());","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"bryanyee33"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"bryanyee33"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(\"OH NOSE! Task number cannot be empty..\", e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"bryanyee33"},"content":"    @Test","lastModifiedDate":"2024-02-18"},{"lineNumber":67,"author":{"gitId":"bryanyee33"},"content":"    public void splitByKeywords_oneKeyword() {","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"bryanyee33"},"content":"        String[] output;","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"bryanyee33"},"content":"        // Normal use case","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"bryanyee33"},"content":"        output \u003d new UserInput(\"some_command description /by date1\").splitByKeywords(\"/by\");","lastModifiedDate":"2024-02-18"},{"lineNumber":72,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(\"description\", output[0]);","lastModifiedDate":"2024-02-18"},{"lineNumber":73,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(\"date1\", output[1]);","lastModifiedDate":"2024-02-18"},{"lineNumber":74,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(2, output.length);","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"bryanyee33"},"content":"        // No spaces (success)","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"bryanyee33"},"content":"        output \u003d new UserInput(\"some_command description/bydate1\").splitByKeywords(\"/by\");","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(\"description\", output[0]);","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(\"date1\", output[1]);","lastModifiedDate":"2024-02-18"},{"lineNumber":80,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(2, output.length);","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"bryanyee33"},"content":"        // No by-date","lastModifiedDate":"2024-02-18"},{"lineNumber":83,"author":{"gitId":"bryanyee33"},"content":"        output \u003d new UserInput(\"some_command description /by\").splitByKeywords(\"/by\");","lastModifiedDate":"2024-02-18"},{"lineNumber":84,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(\"description\", output[0]);","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(\"\", output[1]);","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(2, output.length);","lastModifiedDate":"2024-02-18"},{"lineNumber":87,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":88,"author":{"gitId":"bryanyee33"},"content":"        // Not found","lastModifiedDate":"2024-02-18"},{"lineNumber":89,"author":{"gitId":"bryanyee33"},"content":"        output \u003d new UserInput(\"some_command description by date1\").splitByKeywords(\"/by\");","lastModifiedDate":"2024-02-18"},{"lineNumber":90,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(\"description by date1\", output[0]);","lastModifiedDate":"2024-02-18"},{"lineNumber":91,"author":{"gitId":"bryanyee33"},"content":"        assertNull(output[1]);","lastModifiedDate":"2024-02-18"},{"lineNumber":92,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(2, output.length);","lastModifiedDate":"2024-02-18"},{"lineNumber":93,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":94,"author":{"gitId":"bryanyee33"},"content":"        // No description","lastModifiedDate":"2024-02-18"},{"lineNumber":95,"author":{"gitId":"bryanyee33"},"content":"        output \u003d new UserInput(\"some_command\").splitByKeywords(\"/by\");","lastModifiedDate":"2024-02-18"},{"lineNumber":96,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(\"\", output[0]);","lastModifiedDate":"2024-02-18"},{"lineNumber":97,"author":{"gitId":"bryanyee33"},"content":"        assertNull(output[1]);","lastModifiedDate":"2024-02-18"},{"lineNumber":98,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(2, output.length);","lastModifiedDate":"2024-02-18"},{"lineNumber":99,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":100,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":101,"author":{"gitId":"bryanyee33"},"content":"    @Test","lastModifiedDate":"2024-02-18"},{"lineNumber":102,"author":{"gitId":"bryanyee33"},"content":"    public void splitByKeywords_twoKeyword() {","lastModifiedDate":"2024-02-18"},{"lineNumber":103,"author":{"gitId":"bryanyee33"},"content":"        String[] output;","lastModifiedDate":"2024-02-18"},{"lineNumber":104,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":105,"author":{"gitId":"bryanyee33"},"content":"        // Normal use case","lastModifiedDate":"2024-02-18"},{"lineNumber":106,"author":{"gitId":"bryanyee33"},"content":"        output \u003d new UserInput(\"some_command description /from date1 /to date2\").splitByKeywords(\"/from\", \"/to\");","lastModifiedDate":"2024-02-18"},{"lineNumber":107,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(\"description\", output[0]);","lastModifiedDate":"2024-02-18"},{"lineNumber":108,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(\"date1\", output[1]);","lastModifiedDate":"2024-02-18"},{"lineNumber":109,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(\"date2\", output[2]);","lastModifiedDate":"2024-02-18"},{"lineNumber":110,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(3, output.length);","lastModifiedDate":"2024-02-18"},{"lineNumber":111,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":112,"author":{"gitId":"bryanyee33"},"content":"        // No spaces (success)","lastModifiedDate":"2024-02-18"},{"lineNumber":113,"author":{"gitId":"bryanyee33"},"content":"        output \u003d new UserInput(\"some_command description/fromdate1/todate2\").splitByKeywords(\"/from\", \"/to\");","lastModifiedDate":"2024-02-18"},{"lineNumber":114,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(\"description\", output[0]);","lastModifiedDate":"2024-02-18"},{"lineNumber":115,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(\"date1\", output[1]);","lastModifiedDate":"2024-02-18"},{"lineNumber":116,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(\"date2\", output[2]);","lastModifiedDate":"2024-02-18"},{"lineNumber":117,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(3, output.length);","lastModifiedDate":"2024-02-18"},{"lineNumber":118,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":119,"author":{"gitId":"bryanyee33"},"content":"        // Wrong keyword order in input","lastModifiedDate":"2024-02-18"},{"lineNumber":120,"author":{"gitId":"bryanyee33"},"content":"        output \u003d new UserInput(\"some_command description /to date1 /from date2\").splitByKeywords(\"/from\", \"/to\");","lastModifiedDate":"2024-02-18"},{"lineNumber":121,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(\"description /to date1\", output[0]);","lastModifiedDate":"2024-02-18"},{"lineNumber":122,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(\"date2\", output[1]);","lastModifiedDate":"2024-02-18"},{"lineNumber":123,"author":{"gitId":"bryanyee33"},"content":"        assertNull(output[2]);","lastModifiedDate":"2024-02-18"},{"lineNumber":124,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(3, output.length);","lastModifiedDate":"2024-02-18"},{"lineNumber":125,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":126,"author":{"gitId":"bryanyee33"},"content":"        // Not found","lastModifiedDate":"2024-02-18"},{"lineNumber":127,"author":{"gitId":"bryanyee33"},"content":"        output \u003d new UserInput(\"some_command description /frm date1 / to date2\").splitByKeywords(\"/from\", \"/to\");","lastModifiedDate":"2024-02-18"},{"lineNumber":128,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(\"description /frm date1 / to date2\", output[0]);","lastModifiedDate":"2024-02-18"},{"lineNumber":129,"author":{"gitId":"bryanyee33"},"content":"        assertNull(output[1]);","lastModifiedDate":"2024-02-18"},{"lineNumber":130,"author":{"gitId":"bryanyee33"},"content":"        assertNull(output[2]);","lastModifiedDate":"2024-02-18"},{"lineNumber":131,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(3, output.length);","lastModifiedDate":"2024-02-18"},{"lineNumber":132,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":133,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":134,"author":{"gitId":"bryanyee33"},"content":"    @Test","lastModifiedDate":"2024-02-18"},{"lineNumber":135,"author":{"gitId":"bryanyee33"},"content":"    public void splitByKeywords_noKeyword() {","lastModifiedDate":"2024-02-18"},{"lineNumber":136,"author":{"gitId":"bryanyee33"},"content":"        String[] output;","lastModifiedDate":"2024-02-18"},{"lineNumber":137,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":138,"author":{"gitId":"bryanyee33"},"content":"        // Normal use case","lastModifiedDate":"2024-02-18"},{"lineNumber":139,"author":{"gitId":"bryanyee33"},"content":"        output \u003d new UserInput(\"some_command super long description\").splitByKeywords();","lastModifiedDate":"2024-02-18"},{"lineNumber":140,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(\"super long description\", output[0]);","lastModifiedDate":"2024-02-18"},{"lineNumber":141,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(1, output.length);","lastModifiedDate":"2024-02-18"},{"lineNumber":142,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":143,"author":{"gitId":"bryanyee33"},"content":"        // No description","lastModifiedDate":"2024-02-18"},{"lineNumber":144,"author":{"gitId":"bryanyee33"},"content":"        output \u003d new UserInput(\"some_command\").splitByKeywords();","lastModifiedDate":"2024-02-18"},{"lineNumber":145,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(\"\", output[0]);","lastModifiedDate":"2024-02-18"},{"lineNumber":146,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(1, output.length);","lastModifiedDate":"2024-02-18"},{"lineNumber":147,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":148,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"bryanyee33":148}},{"path":"src/test/java/fishstock/task/TaskFactoryTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock.task;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"public class TaskFactoryTest {","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"    @Test","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"    public void fromStorageString_validTask_success() throws Exception {","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(\"[T][X] borrow book\", TaskFactory.fromStorageString(\"T|borrow book|1\").toString());","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(\"[D][ ] return book (by: Jan 27 2024, 5:15PM)\",","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"                TaskFactory.fromStorageString(\"D|return book|27/1/2024 17:15|0\").toString());","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(\"[E][X] project meeting (from: Jan 01 1998, 12:00PM to: Jan 01 1998, 10:00PM)\",","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"                TaskFactory.fromStorageString(\"E|project meeting|1/1/1998 12:00|1/1/1998 22:00|1\").toString());","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"    @Test","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"    public void fromStorageString_invalidTask_exceptionThrown() {","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"            // Missing mark","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"            TaskFactory.fromStorageString(\"T|borrow book|\");","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"            fail();","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(\"Mark status corrupted..\", e.getMessage());","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"            // Missing task type","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"            TaskFactory.fromStorageString(\"return book|27/1/2024 17:15|0\");","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"            fail();","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(\"Wrong format..\", e.getMessage());","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"            // Invalid date format","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"            TaskFactory.fromStorageString(\"E|project meeting|1/1/98 22:00|1/1/1998 13|1\");","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"            fail();","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(\"OH NOSE! Dates should be of the format \u003cdd/mm/yyyy hh:mm\u003e\", e.getMessage());","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"bryanyee33":46}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"deadline return book /by 27/1/2024 17:15","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"event project meeting /from 1/1/2001 00:00 /to 1/1/1998 23:00","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"event project meeting /from 1/1/1998 23:00 /to 1/1/1998 23:00","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"todo a","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"event 1 /from 19/11/2011 16:50 /to 1/12/2100 18:33","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"todo","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"deadline return book by 1/1/2001 00:00","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"deadline return book/by 1/1/2001 00:00","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"deadline return book /by1/1/2001 00:00","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"event project meeting /from1/1/2001 00:00 /to 1/1/2001 00:00","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"event project meeting /from 1/1/2001 00:00/to 1/1/2001 00:00","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"event project meeting/from1/1/2001 00:00/to1/1/2001 00:00","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"event project meeting /to 1/1/2001 00:00 /from 1/1/2001 00:00","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"listing","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"mark","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"mark abc","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"mark 0","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"mark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"mark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"mark 4","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"mark 50","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"unmark","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"unmark abc","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"unmark 0","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"unmark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"unmark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"unmark 21","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"delete","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"delete def","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"delete 0","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"delete 5","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"delete 5","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"delete 1","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"delete 2","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"event project meeting /from 1/1/2001 /to 1/1/2001 23:00","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"event project meeting /from 1/1/2001 00:00 /to 1/1","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"deadline return book /by 31/13/2024 17:80","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"find","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"find boo","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"bryanyee33":44}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"REM delete db from previous run","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"if exist data\\tasks.txt del data\\tasks.txt","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"javac  -cp ..\\src\\main\\fishstock\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\fishstock\\*.java","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"java -classpath ..\\bin fishstock.FishStock \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bryanyee33":5,"-":19}}]
