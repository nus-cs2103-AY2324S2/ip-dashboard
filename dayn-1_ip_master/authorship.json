[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"    private static final String TYPE \u003d \"D\";","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"    protected String dueDate;","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"    public Deadline(String name, String dueDate) {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"        super(name);","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"    public String getDetails() {","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"        return super.getDetails() + \":::\" + this.dueDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"    public String getType() {","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"        return TYPE;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"        return \"[\" + TYPE + \"]\" + super.toString() + \" (by: \" + dueDate + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"dayn-1":27}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"import java.io.File;","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"import java.util.Objects;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"    private final List\u003cTask\u003e store;","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"    private Integer numItems;","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"    private static final String TXT_LINE \u003d \"\\t____________________________________________________________\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"    private static final String TXT_NODESC \u003d \"\\tPlease provide the description of your \";","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"    private static final String TXT_NOEND \u003d \"\\tHey, please let me know the end date/time for this task!\";","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"    private static final String TXT_OUTBOUNDS \u003d \"\\tHmm looks like this task number doesn\u0027t exist!\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"    private static final String FILEPATH \u003d \"../data/duke.txt\";","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"    private Duke() {","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"        this.store \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"        this.numItems \u003d 0;","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"    private void exit() {","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"        String outroTxt \u003d TXT_LINE + \"\\t Bye. Hope to see you again soon!\\n\" + TXT_LINE;","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"        System.out.println(outroTxt);","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"    private void list() {","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"        StringBuilder listingTxt \u003d new StringBuilder(\"\\tHere are the tasks in your list:\\n\");","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"        for (int i \u003d 0; i \u003c numItems; i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"            listingTxt.append(\"\\t \").append(i + 1).append(\".\").append(store.get(i)).append(\"\\n\");","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"        System.out.println(TXT_LINE + listingTxt + TXT_LINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"    private void mark(String fullCmd, boolean taskComplete) {","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"        String markTxt \u003d \"\\tNice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"dayn-1"},"content":"        String unmarkTxt \u003d \"\\tOK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"        String markFormTxt \u003d \"\\tSorry! To mark or unmark tasks, please do\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"dayn-1"},"content":"                \"\\t\\t(un)mark (number)\\n\";","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"            if (fullCmd.split(\" \")[1].trim().isEmpty()) throw new DukeException(\"Improper Format\");","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"            int updateIndex \u003d Integer.parseInt(fullCmd.split(\" \")[1]);","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"            if (updateIndex \u003e numItems || updateIndex \u003c\u003d 0) throw new DukeException(\"Number Out of Bounds\");","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"            Task updateTask \u003d store.get(updateIndex - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"            if (taskComplete) updateTask.mark();","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"            else updateTask.unmark();","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"dayn-1"},"content":"            String toPrint \u003d taskComplete ? markTxt : unmarkTxt;","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"            System.out.println(TXT_LINE + toPrint +","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"dayn-1"},"content":"                            \"\\t\\t\" + updateTask + \"\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"                    TXT_LINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"dayn-1"},"content":"            saveTasks();","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"dayn-1"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"dayn-1"},"content":"            String errorMsg \u003d e.getMessage();","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"dayn-1"},"content":"            if (errorMsg.equals(\"Improper Format\")) System.out.println(TXT_LINE + markFormTxt + TXT_LINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"dayn-1"},"content":"            if (errorMsg.equals(\"Number Out of Bounds\")) System.out.println(TXT_LINE + TXT_OUTBOUNDS + TXT_LINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"dayn-1"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"dayn-1"},"content":"            System.out.println(TXT_LINE + \"\\tInvalid number given! :(\\n\" + TXT_LINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"dayn-1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"dayn-1"},"content":"            System.out.println(e);","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":68,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":69,"author":{"gitId":"dayn-1"},"content":"    private void toDo(String fullCmd) {","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"dayn-1"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"dayn-1"},"content":"            if (fullCmd.length() \u003c 5) throw new DukeException(\"Description Blank\");","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"dayn-1"},"content":"            String name \u003d fullCmd.substring(5);","lastModifiedDate":"2024-01-23"},{"lineNumber":73,"author":{"gitId":"dayn-1"},"content":"            if (name.trim().isEmpty()) throw new DukeException(\"Description Blank\");","lastModifiedDate":"2024-01-23"},{"lineNumber":74,"author":{"gitId":"dayn-1"},"content":"            Task newTask \u003d new ToDo(name);","lastModifiedDate":"2024-01-23"},{"lineNumber":75,"author":{"gitId":"dayn-1"},"content":"            addTaskPrint(newTask);","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"dayn-1"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":77,"author":{"gitId":"dayn-1"},"content":"            System.out.println(TXT_LINE + TXT_NODESC + \"todo task!\\n\" + TXT_LINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":78,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":79,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":80,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":81,"author":{"gitId":"dayn-1"},"content":"    private void deadline(String fullCmd) {","lastModifiedDate":"2024-01-24"},{"lineNumber":82,"author":{"gitId":"dayn-1"},"content":"        String deadlineFormTxt \u003d \"\\tSorry! Please use the given format for deadline tasks:\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"dayn-1"},"content":"                \"\\t\\tdeadline (description) /by (due date/time)\\n\";","lastModifiedDate":"2024-01-24"},{"lineNumber":84,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":85,"author":{"gitId":"dayn-1"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":86,"author":{"gitId":"dayn-1"},"content":"            String[] fullCmdArr \u003d fullCmd.split(\"/\");","lastModifiedDate":"2024-01-23"},{"lineNumber":87,"author":{"gitId":"dayn-1"},"content":"            if (fullCmdArr.length !\u003d 2) throw new DukeException(\"Improper Format\");","lastModifiedDate":"2024-01-23"},{"lineNumber":88,"author":{"gitId":"dayn-1"},"content":"            if (!fullCmdArr[1].substring(0, Math.min(3, fullCmdArr[1].length())).equals(\"by \")) throw new DukeException(\"Improper Format\");","lastModifiedDate":"2024-01-23"},{"lineNumber":89,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":90,"author":{"gitId":"dayn-1"},"content":"            String name \u003d fullCmdArr[0].substring(9);","lastModifiedDate":"2024-01-23"},{"lineNumber":91,"author":{"gitId":"dayn-1"},"content":"            String dueDate \u003d fullCmd.split(\"/\")[1].substring(3);","lastModifiedDate":"2024-01-22"},{"lineNumber":92,"author":{"gitId":"dayn-1"},"content":"            if (name.trim().isEmpty()) throw new DukeException(\"Description Blank\");","lastModifiedDate":"2024-01-23"},{"lineNumber":93,"author":{"gitId":"dayn-1"},"content":"            if (dueDate.trim().isEmpty()) throw new DukeException(\"End Blank\");","lastModifiedDate":"2024-01-23"},{"lineNumber":94,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":95,"author":{"gitId":"dayn-1"},"content":"            Task newTask \u003d new Deadline(name, dueDate);","lastModifiedDate":"2024-01-22"},{"lineNumber":96,"author":{"gitId":"dayn-1"},"content":"            addTaskPrint(newTask);","lastModifiedDate":"2024-01-24"},{"lineNumber":97,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":98,"author":{"gitId":"dayn-1"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":99,"author":{"gitId":"dayn-1"},"content":"            String errorMsg \u003d e.getMessage();","lastModifiedDate":"2024-01-23"},{"lineNumber":100,"author":{"gitId":"dayn-1"},"content":"            if (errorMsg.equals(\"Improper Format\")) System.out.println(TXT_LINE + deadlineFormTxt + TXT_LINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"dayn-1"},"content":"            if (errorMsg.equals(\"Description Blank\")) System.out.println(TXT_LINE + TXT_NODESC + \"deadline task!\\n\" + TXT_LINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"dayn-1"},"content":"            if (errorMsg.equals(\"End Blank\")) System.out.println(TXT_LINE + TXT_NOEND + \"\\n\" + TXT_LINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":104,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":105,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":106,"author":{"gitId":"dayn-1"},"content":"    private void event(String fullCmd) {","lastModifiedDate":"2024-01-24"},{"lineNumber":107,"author":{"gitId":"dayn-1"},"content":"        String eventFormTxt \u003d \"\\tSorry! Please use the given format for event tasks:\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":108,"author":{"gitId":"dayn-1"},"content":"                \"\\t\\tevent (description) /from (start) /to (end)\\n\";","lastModifiedDate":"2024-01-24"},{"lineNumber":109,"author":{"gitId":"dayn-1"},"content":"        String noStartTxt \u003d \"\\tHey, please let me know the start date/time for this task!\";","lastModifiedDate":"2024-01-24"},{"lineNumber":110,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":111,"author":{"gitId":"dayn-1"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":112,"author":{"gitId":"dayn-1"},"content":"            String[] fullCmdArr \u003d fullCmd.split(\"/\");","lastModifiedDate":"2024-01-23"},{"lineNumber":113,"author":{"gitId":"dayn-1"},"content":"            if (fullCmdArr.length !\u003d 3) throw new DukeException(\"Improper Format\");","lastModifiedDate":"2024-01-23"},{"lineNumber":114,"author":{"gitId":"dayn-1"},"content":"            if (!fullCmdArr[1].substring(0, Math.min(5, fullCmdArr[1].length())).equals(\"from \")) throw new DukeException(\"Improper Format\");","lastModifiedDate":"2024-01-23"},{"lineNumber":115,"author":{"gitId":"dayn-1"},"content":"            if (!fullCmdArr[2].substring(0, Math.min(3, fullCmdArr[2].length())).equals(\"to \")) throw new DukeException(\"Improper Format\");","lastModifiedDate":"2024-01-23"},{"lineNumber":116,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":117,"author":{"gitId":"dayn-1"},"content":"            String name \u003d fullCmdArr[0].substring(6);","lastModifiedDate":"2024-01-23"},{"lineNumber":118,"author":{"gitId":"dayn-1"},"content":"            String start \u003d fullCmdArr[1].substring(5);","lastModifiedDate":"2024-01-23"},{"lineNumber":119,"author":{"gitId":"dayn-1"},"content":"            String end \u003d fullCmdArr[2].substring(3);","lastModifiedDate":"2024-01-23"},{"lineNumber":120,"author":{"gitId":"dayn-1"},"content":"            if (name.trim().isEmpty()) throw new DukeException(\"Description Blank\");","lastModifiedDate":"2024-01-23"},{"lineNumber":121,"author":{"gitId":"dayn-1"},"content":"            if (start.trim().isEmpty()) throw new DukeException(\"Start Blank\");","lastModifiedDate":"2024-01-23"},{"lineNumber":122,"author":{"gitId":"dayn-1"},"content":"            if (end.trim().isEmpty()) throw new DukeException(\"End Blank\");","lastModifiedDate":"2024-01-23"},{"lineNumber":123,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":124,"author":{"gitId":"dayn-1"},"content":"            Task newTask \u003d new Event(name, start, end);","lastModifiedDate":"2024-01-22"},{"lineNumber":125,"author":{"gitId":"dayn-1"},"content":"            addTaskPrint(newTask);","lastModifiedDate":"2024-01-24"},{"lineNumber":126,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":127,"author":{"gitId":"dayn-1"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":128,"author":{"gitId":"dayn-1"},"content":"            String errorMsg \u003d e.getMessage();","lastModifiedDate":"2024-01-23"},{"lineNumber":129,"author":{"gitId":"dayn-1"},"content":"            if (errorMsg.equals(\"Improper Format\")) System.out.println(TXT_LINE + eventFormTxt + TXT_LINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"dayn-1"},"content":"            if (errorMsg.equals(\"Description Blank\")) System.out.println(TXT_LINE + TXT_NODESC + \"deadline task!\\n\" + TXT_LINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":131,"author":{"gitId":"dayn-1"},"content":"            if (errorMsg.equals(\"Start Blank\")) System.out.println(TXT_LINE + noStartTxt + \"\\n\" + TXT_LINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":132,"author":{"gitId":"dayn-1"},"content":"            if (errorMsg.equals(\"End Blank\")) System.out.println(TXT_LINE + TXT_NOEND + \"\\n\" + TXT_LINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":134,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":135,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":136,"author":{"gitId":"dayn-1"},"content":"    private void delete(String fullCmd) {","lastModifiedDate":"2024-01-24"},{"lineNumber":137,"author":{"gitId":"dayn-1"},"content":"        String deleteTxt \u003d \"\\tNoted. I will remove this task for you:\\n\";","lastModifiedDate":"2024-01-24"},{"lineNumber":138,"author":{"gitId":"dayn-1"},"content":"        String deleteFormTxt \u003d \"\\tDid you mean to delete the task? Please do this:\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":139,"author":{"gitId":"dayn-1"},"content":"                \"\\t\\tdelete (number)\\n\";","lastModifiedDate":"2024-01-24"},{"lineNumber":140,"author":{"gitId":"dayn-1"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":141,"author":{"gitId":"dayn-1"},"content":"            if (fullCmd.split(\" \")[1].trim().isEmpty()) throw new DukeException(\"Improper Format\");","lastModifiedDate":"2024-01-24"},{"lineNumber":142,"author":{"gitId":"dayn-1"},"content":"            int deleteIndex \u003d Integer.parseInt(fullCmd.split(\" \")[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":143,"author":{"gitId":"dayn-1"},"content":"            if (deleteIndex \u003e numItems || deleteIndex \u003c\u003d 0) throw new DukeException(\"Number Out of Bounds\");","lastModifiedDate":"2024-01-24"},{"lineNumber":144,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":145,"author":{"gitId":"dayn-1"},"content":"            Task toRemove \u003d store.get(deleteIndex - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":146,"author":{"gitId":"dayn-1"},"content":"            store.remove(toRemove);","lastModifiedDate":"2024-01-24"},{"lineNumber":147,"author":{"gitId":"dayn-1"},"content":"            numItems--;","lastModifiedDate":"2024-01-24"},{"lineNumber":148,"author":{"gitId":"dayn-1"},"content":"            System.out.println(TXT_LINE + deleteTxt + \"\\t\\t\" + toRemove + \"\\n\" +","lastModifiedDate":"2024-01-29"},{"lineNumber":149,"author":{"gitId":"dayn-1"},"content":"                    \"\\tNow you have \" + numItems + \" tasks in the list.\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":150,"author":{"gitId":"dayn-1"},"content":"                    TXT_LINE","lastModifiedDate":"2024-01-29"},{"lineNumber":151,"author":{"gitId":"dayn-1"},"content":"            );","lastModifiedDate":"2024-01-24"},{"lineNumber":152,"author":{"gitId":"dayn-1"},"content":"            saveTasks();","lastModifiedDate":"2024-01-29"},{"lineNumber":153,"author":{"gitId":"dayn-1"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":154,"author":{"gitId":"dayn-1"},"content":"            String errorMsg \u003d e.getMessage();","lastModifiedDate":"2024-01-24"},{"lineNumber":155,"author":{"gitId":"dayn-1"},"content":"            if (errorMsg.equals(\"Improper Format\")) System.out.println(TXT_LINE + deleteFormTxt + TXT_LINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":156,"author":{"gitId":"dayn-1"},"content":"            if (errorMsg.equals(\"Number Out of Bounds\")) System.out.println(TXT_LINE + TXT_OUTBOUNDS + TXT_LINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":157,"author":{"gitId":"dayn-1"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":158,"author":{"gitId":"dayn-1"},"content":"            System.out.println(TXT_LINE + \"\\tInvalid number given! :(\\n\" + TXT_LINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":159,"author":{"gitId":"dayn-1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":160,"author":{"gitId":"dayn-1"},"content":"            System.out.println(e);","lastModifiedDate":"2024-01-29"},{"lineNumber":161,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":162,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":163,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":164,"author":{"gitId":"dayn-1"},"content":"    private void addTaskPrint(Task newTask) {","lastModifiedDate":"2024-01-24"},{"lineNumber":165,"author":{"gitId":"dayn-1"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":166,"author":{"gitId":"dayn-1"},"content":"            numItems++;","lastModifiedDate":"2024-01-24"},{"lineNumber":167,"author":{"gitId":"dayn-1"},"content":"            store.add(newTask);","lastModifiedDate":"2024-01-24"},{"lineNumber":168,"author":{"gitId":"dayn-1"},"content":"            String addTaskTxt \u003d \"\\tGot it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2024-01-24"},{"lineNumber":169,"author":{"gitId":"dayn-1"},"content":"            System.out.println(TXT_LINE + addTaskTxt + \"\\t\\t\" + newTask + \"\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":170,"author":{"gitId":"dayn-1"},"content":"                    + \"\\tNow you have \" + numItems + \" tasks in the list.\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":171,"author":{"gitId":"dayn-1"},"content":"                    + TXT_LINE","lastModifiedDate":"2024-01-29"},{"lineNumber":172,"author":{"gitId":"dayn-1"},"content":"            );","lastModifiedDate":"2024-01-24"},{"lineNumber":173,"author":{"gitId":"dayn-1"},"content":"            saveTasks();","lastModifiedDate":"2024-01-29"},{"lineNumber":174,"author":{"gitId":"dayn-1"},"content":"        } catch(IOException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":175,"author":{"gitId":"dayn-1"},"content":"            System.out.println(e);","lastModifiedDate":"2024-01-29"},{"lineNumber":176,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":177,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":178,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":179,"author":{"gitId":"dayn-1"},"content":"    private void saveTasks() throws IOException {","lastModifiedDate":"2024-01-29"},{"lineNumber":180,"author":{"gitId":"dayn-1"},"content":"        FileWriter fw \u003d new FileWriter(FILEPATH);","lastModifiedDate":"2024-01-29"},{"lineNumber":181,"author":{"gitId":"dayn-1"},"content":"        String toSave \u003d \"\";","lastModifiedDate":"2024-01-29"},{"lineNumber":182,"author":{"gitId":"dayn-1"},"content":"        for (Task task : store) {","lastModifiedDate":"2024-01-29"},{"lineNumber":183,"author":{"gitId":"dayn-1"},"content":"            toSave \u003d toSave + task.getType() + \";;;\"","lastModifiedDate":"2024-01-29"},{"lineNumber":184,"author":{"gitId":"dayn-1"},"content":"                    + (task.getStatus() ? 1 : 0) + \";;;\"","lastModifiedDate":"2024-01-29"},{"lineNumber":185,"author":{"gitId":"dayn-1"},"content":"                    + task.getDetails() + \"\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":186,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":187,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":188,"author":{"gitId":"dayn-1"},"content":"        fw.write(toSave);","lastModifiedDate":"2024-01-29"},{"lineNumber":189,"author":{"gitId":"dayn-1"},"content":"        fw.close();","lastModifiedDate":"2024-01-29"},{"lineNumber":190,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":191,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":192,"author":{"gitId":"dayn-1"},"content":"    private void initiate() {","lastModifiedDate":"2024-01-29"},{"lineNumber":193,"author":{"gitId":"dayn-1"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":194,"author":{"gitId":"dayn-1"},"content":"            File f \u003d new File(FILEPATH);","lastModifiedDate":"2024-01-29"},{"lineNumber":195,"author":{"gitId":"dayn-1"},"content":"            Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2024-01-29"},{"lineNumber":196,"author":{"gitId":"dayn-1"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":197,"author":{"gitId":"dayn-1"},"content":"                String[] taskLine \u003d s.nextLine().split(\";;;\");","lastModifiedDate":"2024-01-29"},{"lineNumber":198,"author":{"gitId":"dayn-1"},"content":"                String[] details \u003d taskLine[2].split(\":::\");","lastModifiedDate":"2024-01-29"},{"lineNumber":199,"author":{"gitId":"dayn-1"},"content":"                if (Objects.equals(taskLine[0], \"T\")) store.add(new ToDo(details[0]));","lastModifiedDate":"2024-01-29"},{"lineNumber":200,"author":{"gitId":"dayn-1"},"content":"                else if (Objects.equals(taskLine[0], \"D\")) store.add(new Deadline(details[0], details[1]));","lastModifiedDate":"2024-01-29"},{"lineNumber":201,"author":{"gitId":"dayn-1"},"content":"                else if (Objects.equals(taskLine[0], \"E\")) store.add(new Event(details[0], details[1], details[2]));","lastModifiedDate":"2024-01-29"},{"lineNumber":202,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":203,"author":{"gitId":"dayn-1"},"content":"                if (Objects.equals(taskLine[1], \"1\")) store.get(numItems).mark();","lastModifiedDate":"2024-01-29"},{"lineNumber":204,"author":{"gitId":"dayn-1"},"content":"                numItems++;","lastModifiedDate":"2024-01-29"},{"lineNumber":205,"author":{"gitId":"dayn-1"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":206,"author":{"gitId":"dayn-1"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":207,"author":{"gitId":"dayn-1"},"content":"\t\t\ttry {","lastModifiedDate":"2024-01-29"},{"lineNumber":208,"author":{"gitId":"dayn-1"},"content":"                File yourFile \u003d new File(FILEPATH);","lastModifiedDate":"2024-01-29"},{"lineNumber":209,"author":{"gitId":"dayn-1"},"content":"                yourFile.getParentFile().mkdirs();","lastModifiedDate":"2024-01-29"},{"lineNumber":210,"author":{"gitId":"dayn-1"},"content":"                yourFile.createNewFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":211,"author":{"gitId":"dayn-1"},"content":"\t\t\t} catch (IOException ex) {","lastModifiedDate":"2024-01-29"},{"lineNumber":212,"author":{"gitId":"dayn-1"},"content":"                System.out.println(ex.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":213,"author":{"gitId":"dayn-1"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":214,"author":{"gitId":"dayn-1"},"content":"\t\t}","lastModifiedDate":"2024-01-29"},{"lineNumber":215,"author":{"gitId":"dayn-1"},"content":"\t}","lastModifiedDate":"2024-01-24"},{"lineNumber":216,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-24"},{"lineNumber":218,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":219,"author":{"gitId":"dayn-1"},"content":"        String introTxt \u003d TXT_LINE +","lastModifiedDate":"2024-01-29"},{"lineNumber":220,"author":{"gitId":"dayn-1"},"content":"                \"\\t Hello! I\u0027m Megatron\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":221,"author":{"gitId":"dayn-1"},"content":"                \"\\t What can I do for you?\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":222,"author":{"gitId":"dayn-1"},"content":"                TXT_LINE;","lastModifiedDate":"2024-01-29"},{"lineNumber":223,"author":{"gitId":"dayn-1"},"content":"        System.out.println(introTxt);","lastModifiedDate":"2024-01-24"},{"lineNumber":224,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":225,"author":{"gitId":"dayn-1"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2024-01-24"},{"lineNumber":226,"author":{"gitId":"dayn-1"},"content":"        duke.initiate();","lastModifiedDate":"2024-01-29"},{"lineNumber":227,"author":{"gitId":"dayn-1"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-24"},{"lineNumber":228,"author":{"gitId":"dayn-1"},"content":"        boolean exit \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":229,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":230,"author":{"gitId":"dayn-1"},"content":"        while (!exit) {","lastModifiedDate":"2024-01-24"},{"lineNumber":231,"author":{"gitId":"dayn-1"},"content":"            String fullCmd \u003d sc.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":232,"author":{"gitId":"dayn-1"},"content":"            String cmd \u003d fullCmd.split(\" \")[0];","lastModifiedDate":"2024-01-24"},{"lineNumber":233,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":234,"author":{"gitId":"dayn-1"},"content":"            if (cmd.equals(\"bye\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":235,"author":{"gitId":"dayn-1"},"content":"                duke.exit();","lastModifiedDate":"2024-01-24"},{"lineNumber":236,"author":{"gitId":"dayn-1"},"content":"                exit \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":237,"author":{"gitId":"dayn-1"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":238,"author":{"gitId":"dayn-1"},"content":"            else if (cmd.equals(\"list\")) duke.list();","lastModifiedDate":"2024-01-24"},{"lineNumber":239,"author":{"gitId":"dayn-1"},"content":"            else if (cmd.equals(\"mark\")) duke.mark(fullCmd, true);","lastModifiedDate":"2024-01-24"},{"lineNumber":240,"author":{"gitId":"dayn-1"},"content":"            else if (cmd.equals(\"unmark\")) duke.mark(fullCmd, false);","lastModifiedDate":"2024-01-24"},{"lineNumber":241,"author":{"gitId":"dayn-1"},"content":"            else if (cmd.equals( \"todo\")) duke.toDo(fullCmd);","lastModifiedDate":"2024-01-24"},{"lineNumber":242,"author":{"gitId":"dayn-1"},"content":"            else if (cmd.equals( \"deadline\")) duke.deadline(fullCmd);","lastModifiedDate":"2024-01-24"},{"lineNumber":243,"author":{"gitId":"dayn-1"},"content":"            else if (cmd.equals( \"event\")) duke.event(fullCmd);","lastModifiedDate":"2024-01-24"},{"lineNumber":244,"author":{"gitId":"dayn-1"},"content":"            else if (cmd.equals( \"delete\")) duke.delete(fullCmd);","lastModifiedDate":"2024-01-24"},{"lineNumber":245,"author":{"gitId":"dayn-1"},"content":"            else {","lastModifiedDate":"2024-01-22"},{"lineNumber":246,"author":{"gitId":"dayn-1"},"content":"                String invalidTxt \u003d \"\\tSorry, what do you mean?\\n\";","lastModifiedDate":"2024-01-24"},{"lineNumber":247,"author":{"gitId":"dayn-1"},"content":"                System.out.println(TXT_LINE + invalidTxt + TXT_LINE);","lastModifiedDate":"2024-01-29"},{"lineNumber":248,"author":{"gitId":"dayn-1"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":249,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":251,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":252,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"dayn-1":249,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"    public DukeException(String errorDesc) {","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"        super(errorDesc);","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"dayn-1":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"    private static final String TYPE \u003d \"E\";","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"    protected String start;","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"    protected String end;","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"    public Event(String name, String start, String end) {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"        super(name);","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"    public String getDetails() {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"        return super.getDetails() + \":::\" + this.start + \":::\" + this.end;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"    public String getType() {","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"        return TYPE;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"        return \"[\" + TYPE + \"]\" + super.toString() +","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"                \"(from: \" + start + \"to: \" + end + \")\";","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"dayn-1":28}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"    protected String name;","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"    public Task(String name) {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"    public abstract String getType();","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"    protected String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"        return (this.getStatus() ? \"X\" : \" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"    public boolean getStatus() {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"        return this.isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"    public void mark() {","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"    public String getDetails() { return this.name; }","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.name;","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"dayn-1":34}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"    private static final String TYPE \u003d \"T\";","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"    public ToDo(String name) {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"        super(name);","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"    public String getType() {","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"        return TYPE;","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"        return \"[\" + TYPE + \"]\" + super.toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"dayn-1":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"todo borrow book","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"mark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"unmark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"todo","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"blah","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"event hi/ /","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"delete 1","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"bye","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"dayn-1":13}}]
