[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"# Duke project","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"This is a project for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE).","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":3,"-":13}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"E0735389":1,"-":41}},{"path":"src/main/java/duke/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"class ByeCommand extends Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"    public void execute(TaskList tasks, boolean silent) {","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"        if (!silent){","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"            System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"        System.exit(0);","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":11}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"/**","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":" * Represents a command.","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":" * Subclasses of this class must register itself with Parser.","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":" * They must have either a constructor with no parameters","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":" * or a constructor with a single String parameter.","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":" */","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"    public abstract void execute(TaskList tasks, boolean silent) throws DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"    public void execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"        execute(tasks, false);","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"    public void executeSilently(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"        execute(tasks, true);","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":19}},{"path":"src/main/java/duke/CommandBuilder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"public interface CommandBuilder {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"    public Command build(String argument) throws InvalidCommandException;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":5}},{"path":"src/main/java/duke/CommandExecutionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"/**","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":" * Represents an exception that occurs during the execution of a command.","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":" */","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"public class CommandExecutionException extends DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"    public CommandExecutionException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"        super(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":10}},{"path":"src/main/java/duke/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"class ClearCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"    public ClearCommand() {}","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"    public void execute(TaskList tasks, boolean silent) {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"        tasks.clear();","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"        if (!silent) {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"            System.out.println(\"Cleared all tasks!\");","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"abstract class AddTaskCommand extends Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"    private Task task;","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"    public abstract Task parseTask(String argument) throws InvalidCommandException;","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"    public AddTaskCommand(String argument) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"        argument \u003d argument.trim();","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"        this.task \u003d parseTask(argument);","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"    public void execute(TaskList tasks, boolean silent) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"        assert task !\u003d null : \"execute() can only be called once\";","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"        tasks.addTask(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"        if (!silent) {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"            System.out.println(task);","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"            tasks.printTaskCount();","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"        task \u003d null;","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"class AddTodoCommand extends AddTaskCommand {","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"E0735389"},"content":"    public AddTodoCommand(String argument) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"E0735389"},"content":"        super(argument);","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"E0735389"},"content":"    public Task parseTask(String argument) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"E0735389"},"content":"        if (argument.isEmpty()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"E0735389"},"content":"            throw new InvalidCommandException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"E0735389"},"content":"        return new Todo(argument);","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"E0735389"},"content":"class AddDeadlineCommand extends AddTaskCommand {","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"E0735389"},"content":"    public AddDeadlineCommand(String argument) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"E0735389"},"content":"        super(argument);","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"E0735389"},"content":"    public Task parseTask(String argument) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"E0735389"},"content":"        String[] parts \u003d argument.split(\" /by \", 2);","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"E0735389"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"E0735389"},"content":"            throw new InvalidCommandException(\"The deadline command should be in the format: deadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"E0735389"},"content":"        if (parts[0].isEmpty()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"E0735389"},"content":"            throw new InvalidCommandException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"E0735389"},"content":"        if (parts[1].isEmpty()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"E0735389"},"content":"            throw new InvalidCommandException(\"The date of a deadline cannot be empty.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"E0735389"},"content":"        return new Deadline(parts[0], parts[1]);","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":73,"author":{"gitId":"E0735389"},"content":"class AddEventCommand extends AddTaskCommand {","lastModifiedDate":"2024-01-23"},{"lineNumber":74,"author":{"gitId":"E0735389"},"content":"    public AddEventCommand(String argument) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":75,"author":{"gitId":"E0735389"},"content":"        super(argument);","lastModifiedDate":"2024-01-23"},{"lineNumber":76,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":77,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":78,"author":{"gitId":"E0735389"},"content":"    private static final Pattern EVENT_PATTERN \u003d Pattern.compile(\"(.*) /from (.*) /to (.*)\");","lastModifiedDate":"2024-01-23"},{"lineNumber":79,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"E0735389"},"content":"    public Task parseTask(String argument) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":81,"author":{"gitId":"E0735389"},"content":"        Matcher matcher \u003d EVENT_PATTERN.matcher(argument);","lastModifiedDate":"2024-01-23"},{"lineNumber":82,"author":{"gitId":"E0735389"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":83,"author":{"gitId":"E0735389"},"content":"            throw new InvalidCommandException(\"The event command should be in the format: event \u003cdescription\u003e /from \u003cstart date\u003e /to \u003cend date\u003e\");","lastModifiedDate":"2024-01-23"},{"lineNumber":84,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":85,"author":{"gitId":"E0735389"},"content":"        String description \u003d matcher.group(1);","lastModifiedDate":"2024-01-23"},{"lineNumber":86,"author":{"gitId":"E0735389"},"content":"        String start \u003d matcher.group(2);","lastModifiedDate":"2024-01-23"},{"lineNumber":87,"author":{"gitId":"E0735389"},"content":"        String end \u003d matcher.group(3);","lastModifiedDate":"2024-01-23"},{"lineNumber":88,"author":{"gitId":"E0735389"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":89,"author":{"gitId":"E0735389"},"content":"            throw new InvalidCommandException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":90,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":91,"author":{"gitId":"E0735389"},"content":"        if (start.isEmpty()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":92,"author":{"gitId":"E0735389"},"content":"            throw new InvalidCommandException(\"The start date of an event cannot be empty.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":93,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":94,"author":{"gitId":"E0735389"},"content":"        if (end.isEmpty()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":95,"author":{"gitId":"E0735389"},"content":"            throw new InvalidCommandException(\"The end date of an event cannot be empty.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":96,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":97,"author":{"gitId":"E0735389"},"content":"        return new Event(description, start, end);","lastModifiedDate":"2024-01-23"},{"lineNumber":98,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":99,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"},{"lineNumber":100,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":101,"author":{"gitId":"E0735389"},"content":"class ListCommand extends Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":102,"author":{"gitId":"E0735389"},"content":"    public void execute(TaskList tasks, boolean silent) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"E0735389"},"content":"        tasks.listTasks();","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":105,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"},{"lineNumber":106,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":107,"author":{"gitId":"E0735389"},"content":"abstract class CommandTakingTaskIndex extends Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":108,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":109,"author":{"gitId":"E0735389"},"content":"     * The 0-indexed index of the task to be operated on.","lastModifiedDate":"2024-01-23"},{"lineNumber":110,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":111,"author":{"gitId":"E0735389"},"content":"    protected int index;","lastModifiedDate":"2024-01-23"},{"lineNumber":112,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":113,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":114,"author":{"gitId":"E0735389"},"content":"     * @param index 1-based index of the task.","lastModifiedDate":"2024-01-23"},{"lineNumber":115,"author":{"gitId":"E0735389"},"content":"     * @throws InvalidCommandException if the index is invalid.","lastModifiedDate":"2024-01-23"},{"lineNumber":116,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":117,"author":{"gitId":"E0735389"},"content":"    public CommandTakingTaskIndex(String index) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":118,"author":{"gitId":"E0735389"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":119,"author":{"gitId":"E0735389"},"content":"            this.index \u003d Integer.parseInt(index);","lastModifiedDate":"2024-01-23"},{"lineNumber":120,"author":{"gitId":"E0735389"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":121,"author":{"gitId":"E0735389"},"content":"            throw new InvalidCommandException(\"The task number must be an integer.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":122,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":123,"author":{"gitId":"E0735389"},"content":"        if (this.index \u003c\u003d 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":124,"author":{"gitId":"E0735389"},"content":"            throw new InvalidCommandException(\"The task number must be positive.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":125,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":126,"author":{"gitId":"E0735389"},"content":"        this.index--;","lastModifiedDate":"2024-01-23"},{"lineNumber":127,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":128,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"},{"lineNumber":129,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":130,"author":{"gitId":"E0735389"},"content":"class MarkDoneCommand extends CommandTakingTaskIndex {","lastModifiedDate":"2024-01-23"},{"lineNumber":131,"author":{"gitId":"E0735389"},"content":"    public MarkDoneCommand(String index) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":132,"author":{"gitId":"E0735389"},"content":"        super(index);","lastModifiedDate":"2024-01-23"},{"lineNumber":133,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":134,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":135,"author":{"gitId":"E0735389"},"content":"    public void execute(TaskList tasks, boolean silent) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"E0735389"},"content":"        tasks.markTaskAsDone(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":137,"author":{"gitId":"E0735389"},"content":"        if (!silent) {","lastModifiedDate":"2024-01-28"},{"lineNumber":138,"author":{"gitId":"E0735389"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":139,"author":{"gitId":"E0735389"},"content":"            System.out.println(tasks.getTaskDescription(index));","lastModifiedDate":"2024-02-04"},{"lineNumber":140,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":141,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":142,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":143,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":144,"author":{"gitId":"E0735389"},"content":"class UnmarkDoneCommand extends CommandTakingTaskIndex {","lastModifiedDate":"2024-01-23"},{"lineNumber":145,"author":{"gitId":"E0735389"},"content":"    public UnmarkDoneCommand(String index) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":146,"author":{"gitId":"E0735389"},"content":"        super(index);","lastModifiedDate":"2024-01-23"},{"lineNumber":147,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":148,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":149,"author":{"gitId":"E0735389"},"content":"    public void execute(TaskList tasks, boolean silent) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":150,"author":{"gitId":"E0735389"},"content":"        tasks.unmarkTaskAsDone(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":151,"author":{"gitId":"E0735389"},"content":"        if (!silent) {","lastModifiedDate":"2024-01-28"},{"lineNumber":152,"author":{"gitId":"E0735389"},"content":"            System.out.println(\"OK, I\u0027ve unmarked this task as not done yet:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":153,"author":{"gitId":"E0735389"},"content":"            System.out.println(tasks.getTaskDescription(index));","lastModifiedDate":"2024-02-04"},{"lineNumber":154,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":155,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":156,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":157,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":158,"author":{"gitId":"E0735389"},"content":"class DeleteCommand extends CommandTakingTaskIndex {","lastModifiedDate":"2024-01-23"},{"lineNumber":159,"author":{"gitId":"E0735389"},"content":"    public DeleteCommand(String index) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":160,"author":{"gitId":"E0735389"},"content":"        super(index);","lastModifiedDate":"2024-01-23"},{"lineNumber":161,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":162,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":163,"author":{"gitId":"E0735389"},"content":"    public void execute(TaskList tasks, boolean silent) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":164,"author":{"gitId":"E0735389"},"content":"        String taskToDelete \u003d tasks.getTaskDescription(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":165,"author":{"gitId":"E0735389"},"content":"        tasks.deleteTask(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":166,"author":{"gitId":"E0735389"},"content":"        if (!silent) {","lastModifiedDate":"2024-01-28"},{"lineNumber":167,"author":{"gitId":"E0735389"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":168,"author":{"gitId":"E0735389"},"content":"            System.out.println(taskToDelete);","lastModifiedDate":"2024-01-23"},{"lineNumber":169,"author":{"gitId":"E0735389"},"content":"            tasks.printTaskCount();","lastModifiedDate":"2024-02-04"},{"lineNumber":170,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":171,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":172,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":173,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":174,"author":{"gitId":"E0735389"},"content":"public class Commands {","lastModifiedDate":"2024-01-23"},{"lineNumber":175,"author":{"gitId":"E0735389"},"content":"    public static void registerCommands() {","lastModifiedDate":"2024-01-23"},{"lineNumber":176,"author":{"gitId":"E0735389"},"content":"        Parser.registerCommand(\"clear\", s -\u003e new ClearCommand());","lastModifiedDate":"2024-02-04"},{"lineNumber":177,"author":{"gitId":"E0735389"},"content":"        Parser.registerCommand(\"todo\", s -\u003e new AddTodoCommand(s));","lastModifiedDate":"2024-01-23"},{"lineNumber":178,"author":{"gitId":"E0735389"},"content":"        Parser.registerCommand(\"deadline\", s -\u003e new AddDeadlineCommand(s));","lastModifiedDate":"2024-01-23"},{"lineNumber":179,"author":{"gitId":"E0735389"},"content":"        Parser.registerCommand(\"event\", s -\u003e new AddEventCommand(s));","lastModifiedDate":"2024-01-23"},{"lineNumber":180,"author":{"gitId":"E0735389"},"content":"        Parser.registerCommand(\"list\", s -\u003e new ListCommand());","lastModifiedDate":"2024-01-23"},{"lineNumber":181,"author":{"gitId":"E0735389"},"content":"        Parser.registerCommand(\"bye\", s -\u003e new ByeCommand());","lastModifiedDate":"2024-01-23"},{"lineNumber":182,"author":{"gitId":"E0735389"},"content":"        Parser.registerCommand(\"mark\", s -\u003e new MarkDoneCommand(s));","lastModifiedDate":"2024-01-23"},{"lineNumber":183,"author":{"gitId":"E0735389"},"content":"        Parser.registerCommand(\"unmark\", s -\u003e new UnmarkDoneCommand(s));","lastModifiedDate":"2024-01-23"},{"lineNumber":184,"author":{"gitId":"E0735389"},"content":"        Parser.registerCommand(\"delete\", s -\u003e new DeleteCommand(s));","lastModifiedDate":"2024-01-23"},{"lineNumber":185,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":186,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":186}},{"path":"src/main/java/duke/Constants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"public class Constants {","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"    public static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"    public static final DateTimeFormatter OUTPUT_FORMATTER \u003d","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"        DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm:ss\");","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"E0735389":8}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"    public Deadline (String description, String by) {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"        this.by \u003d LocalDateTime.parse(by, Constants.INPUT_FORMATTER);","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(Constants.OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"    public String serializeToCommand(int taskIndex) {","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"        return \"deadline \" + description + \" /by \" + by.format(Constants.INPUT_FORMATTER) + \"\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"            + serializeDoneMark(taskIndex);","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"    TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"    Storage storage \u003d new Storage();","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"     * Main function to run the chatbot.","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"    public void run() {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"            tasks.loadFromSavedData(storage.loadFromFile(), parser);","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"            System.err.println(\"Stored tasks file is corrupted: \" + e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"            storage.deleteFile();","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"            System.err.println(\"Deleted the file.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"        ui.printBanner();","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"        while (true) {","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"            String prompt;","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"            try {","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"                prompt \u003d ui.askForPrompt();","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"            } catch (NoSuchElementException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"                System.out.println();","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"                try {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"                    new ByeCommand().execute(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"                } catch (DukeException e2) {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"                    System.out.println(e2.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"            Command command;","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"            try {","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"                command \u003d parser.parse(prompt);","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"                command.execute(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"E0735389"},"content":"                storage.saveToFile(tasks.getSaveData());","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"E0735389"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"E0735389"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"E0735389"},"content":"                continue;","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"E0735389"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"E0735389"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"E0735389"},"content":"        Commands.registerCommands();","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"E0735389"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"E0735389"},"content":"        duke.run();","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"E0735389":51,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"        super(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"    protected LocalDateTime from, to;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"    public Event (String description, String from, String to) {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"        this.from \u003d LocalDateTime.parse(from, Constants.INPUT_FORMATTER);","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"        this.to \u003d LocalDateTime.parse(to, Constants.INPUT_FORMATTER);","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(Constants.OUTPUT_FORMATTER)","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"            + \" to: \" + to.format(Constants.OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"    public String serializeToCommand(int taskIndex) {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"        return \"event \" + description + \" /from \" + from.format(Constants.INPUT_FORMATTER)","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"            + \" /to \" + to.format(Constants.INPUT_FORMATTER) + \"\\n\" + serializeDoneMark(taskIndex);","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":23}},{"path":"src/main/java/duke/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"/**","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":" * Represents an exception where the command format is invalid.","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":" */","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"        super(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":10}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"public class Parser {","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"    private static HashMap\u003cString, CommandBuilder\u003e registeredCommands \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"     * This method registers a command with the parser.","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"     * It must be called exactly once at program start, which is done by","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"     * Commands.registerCommands().","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"    public static void registerCommand(String commandName, CommandBuilder commandBuilder) {","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"        registeredCommands.put(commandName, commandBuilder);","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"    public Parser() {","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"    public Command parse(String command) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"        command \u003d command.trim();","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"        String[] parts \u003d command.split(\" \", 2);","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"        if (parts.length \u003d\u003d 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"            throw new InvalidCommandException(\"Empty command\");","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"        String commandName \u003d parts[0];","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"        CommandBuilder commandBuilder \u003d registeredCommands.get(commandName);","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"        if (commandBuilder \u003d\u003d null) {","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"            throw new InvalidCommandException(\"Unknown command: \" + commandName);","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"        return commandBuilder.build(parts.length \u003d\u003d 1 ? \"\" : parts[1]);","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":33}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"import java.util.List;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"import java.nio.file.StandardCopyOption;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"public class Storage {","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"    private static Path PATH_TO_TASKS_FILE \u003d Paths.get(\"echo_bot_tasks.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"    public void deleteFile() {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"            Files.delete(PATH_TO_TASKS_FILE);","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"    public List\u003cString\u003e loadFromFile() throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"            return Files.readAllLines(PATH_TO_TASKS_FILE);","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"            System.err.println(\"Error reading from file: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"     * Saves the current list of tasks to the file.","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"E0735389"},"content":"    public void saveToFile(List\u003cString\u003e s) {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"E0735389"},"content":"        // We write to a temporary file first, then rename it to the actual file.","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"E0735389"},"content":"        // This is to prevent the file from being corrupted if the program crashes.","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"E0735389"},"content":"        final Path PATH_TO_TMP_FILE \u003d Paths.get(PATH_TO_TASKS_FILE.toString() + \".tmp\");","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"E0735389"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"E0735389"},"content":"            Files.write(PATH_TO_TMP_FILE, s, StandardCharsets.UTF_8);","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"E0735389"},"content":"            Files.move(PATH_TO_TMP_FILE, PATH_TO_TASKS_FILE, StandardCopyOption.REPLACE_EXISTING);","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"E0735389"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"E0735389"},"content":"            System.err.println(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"E0735389"},"content":"};","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":52}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"abstract public class Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"    protected String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"     * Returns the string representation of the task to be saved in the file.","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"     * The string representation should be a sequence of valid commands for the program,","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"     * separated by newlines,","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"     * such that if there was originally taskIndex tasks in the list,","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"     * then after executing the string representation,","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"     * there will be taskIndex + 1 tasks in the list.","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"    public abstract String serializeToCommand(int taskIndex);","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"    protected String serializeDoneMark(int taskIndex) {","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"E0735389"},"content":"            return \"mark \" + (taskIndex + 1) + \"\\n\";","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"E0735389"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"E0735389"},"content":"            return \"\";","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":46}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"import java.util.List;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"public class TaskList {","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"    public void listTasks() {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"    public int getTaskCount() {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"    public void printTaskCount() {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"        int count \u003d getTaskCount();","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"        System.out.println(\"Now you have \" + count + \" \" + (count \u003d\u003d 1 ? \"task\" : \"tasks\") + \" in the list.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"    public String getTaskDescription(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"        return tasks.get(index).toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"    public void markTaskAsDone(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"    public void unmarkTaskAsDone(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"E0735389"},"content":"        tasks.get(index).unmarkAsDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"E0735389"},"content":"    public void clear() {","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"E0735389"},"content":"        tasks.clear();","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"E0735389"},"content":"    public void loadFromSavedData(List\u003cString\u003e lines, Parser parser) {","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"E0735389"},"content":"        clear();","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"E0735389"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"E0735389"},"content":"            for (String command : lines) {","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"E0735389"},"content":"                parser.parse(command).executeSilently(this);","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"E0735389"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"E0735389"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"E0735389"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"E0735389"},"content":"            clear();","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"E0735389"},"content":"    public List\u003cString\u003e getSaveData() {","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"E0735389"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"E0735389"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"E0735389"},"content":"            lines.add(tasks.get(i).serializeToCommand(i));","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"E0735389"},"content":"        return lines;","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"E0735389":67}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"    public Todo (String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"    public String serializeToCommand(int taskIndex) {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"        return \"todo \" + description + \"\\n\" + serializeDoneMark(taskIndex);","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":16}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"public class Ui {","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"    static final String CHATBOT_NAME \u003d \"Echo\";","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"    static final int CELL_WIDTH \u003d 70;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"     * Function to print the banner.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"    public void printBanner() {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"        // Banner somewhat inspired from SageMath\u0027s banner.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"        System.out.println(\"┌\" + new String(new char[CELL_WIDTH - 2]).replace(\"\\0\", \"─\") + \"┐\");","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"        // Java 8 compatible, for now.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"        String firstLine \u003d CHATBOT_NAME + \", the chatbot. Version 0.0.0.\";","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"        System.out.println(String.format(\"│ %-\" + (CELL_WIDTH - 4) + \"s │\", firstLine));","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"        String secondLine \u003d \"Using Java \" + System.getProperty(\"java.version\") + \".\";","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"        System.out.println(String.format(\"│ %-\" + (CELL_WIDTH - 4) + \"s │\", secondLine));","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"        System.out.println(\"└\" + new String(new char[CELL_WIDTH - 2]).replace(\"\\0\", \"─\") + \"┘\");","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"     * Function to ask user for a prompt.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"     * May raises NoSuchElementException if the user presses Ctrl-D.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"    public String askForPrompt() {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"        System.out.print(\"\u003e\u003e\u003e \");","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"        String result \u003d sc.nextLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"        // We print out the prompt if input is redirected to make the expected output more readable.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"        if (System.console() \u003d\u003d null) {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"            System.out.println(result);","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"        return result;","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"    Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"E0735389":39}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"    public void toStringTest(){","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"        assertEquals(new Deadline(\"return book\", \"2021-08-25T18:00\").toString(),","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"            \"[D][ ] return book (by: Aug 25 2021 18:00:00)\");","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"E0735389":13}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"    public void toStringTest(){","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"        assertEquals(new Todo(\"return book\").toString(),","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"            \"[T][ ] return book\");","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"E0735389":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"clear","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"todo","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"abc","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"deadline return book /by 2024-01-01T00:00:00","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"event project meeting /from 2024-01-02T01:00:00 /to 2024-01-02T02:00:00","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"mark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"unmark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"delete 1","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"delete 0","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"delete x","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":15}}]
