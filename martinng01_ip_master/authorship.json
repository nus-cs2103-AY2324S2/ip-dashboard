[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"checkstyle {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"martinng01":6}},{"path":"src/main/java/duke/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"    private final LocalDate deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"     * Represents a deadline task with a name and deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"     * @param name     The name of the deadline task.","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"     * @param deadline The deadline of the deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"     * @throws DukeException If the name or deadline is an empty string.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"    public DeadlineTask(String name, String deadline) throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"        this(name, deadline, false);","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"     * Constructs a deadline task with the given name, deadline, and done status.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"     * @param name     The name of the deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"     * @param isDone   The done status of the deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"     * @throws DukeException If the name or deadline of the task is an empty string.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"    public DeadlineTask(String name, String deadline, boolean isDone) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"        super(name);","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"            throw new DukeException(\"oi the task needs a name la \\uD83D\\uDE21\\uD83D\\uDE21\");","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"        if (deadline.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"            throw new DukeException(\"bro this task needs a deadline bro\");","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"            this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"            throw new DukeException(\"can you follow the format yyyy-mm-dd pls\");","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"                deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"     * Returns a string representation of the task to be written to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"     * @return A string representation of the task to be written to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"        return String.format(\"D | %d | %s | %s\", isDone() ? 1 : 0, getName(), deadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"martinng01":60}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":" * Duke is a chatbot that helps you keep track of your tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":" * It can store your tasks, mark them as done, and delete them.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":" * It also supports different types of tasks, such as ToDos, Deadlines, and Events.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":" * Duke stores your tasks in a file, so you can continue where you left off the next time you run it.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":" * Duke has the characteristics of a typical Chinese Singaporean.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"    static final String NAME \u003d \"jun jie\";","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"    static final String INTRO_MSG \u003d \"hi bro, im \" + NAME + \"\\nwhat you want me to do?\";","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    public Duke() {","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"        FileHandler.init();","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"        String fileContents \u003d FileHandler.read();","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"        TaskList taskList \u003d new TaskList(fileContents);","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"        ui.print(INTRO_MSG);","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"        while (true) {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"            boolean exitFlag \u003d Parser.handleInput(input, ui, taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"            if (exitFlag) break;","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"        new Duke();","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"martinng01":32}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"    public DukeException(String errorMsg) {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"        super(errorMsg);","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"martinng01":7}},{"path":"src/main/java/duke/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"public class EventTask extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"    private final LocalDate from;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"    private final LocalDate to;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"     * Constructs an event task with the given name, start date/time, and end date/time.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"     * @param name The name of the event task.","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"     * @param from The start date/time of the event task.","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"     * @param to   The end date/time of the event task.","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"     * @throws DukeException If the name, start date/time, or end date/time of the task is an empty string.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"    public EventTask(String name, String from, String to) throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"        this(name, from, to, false);","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"     * Constructs an event task with the given name, start date/time, end date/time, and done status.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"     * @param name   The name of the event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"     * @param from   The start date/time of the event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"     * @param to     The end date/time of the event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"     * @param isDone The done status of the event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"     * @throws DukeException If the name, start date/time, or end date/time of the task is an empty string.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"    public EventTask(String name, String from, String to, boolean isDone) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"        super(name);","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"            throw new DukeException(\"oi the task needs a name la \\uD83D\\uDE21\\uD83D\\uDE21\");","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"        if (from.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"            throw new DukeException(\"eh the event needs a start date/time\");","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"        if (to.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"            throw new DukeException(\"eh the event needs a end date/time\");","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"            this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"            this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"            throw new DukeException(\"can you follow the format yyyy-mm-dd pls\");","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(),","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"                from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")),","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"                to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"     * Returns a string representation of the task to be written to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"     * @return A string representation of the task to be written to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"martinng01"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"        return String.format(\"E | %d | %s | %s | %s\", isDone() ? 1 : 0, getName(), from, to);","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"martinng01":67}},{"path":"src/main/java/duke/FileHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"public class FileHandler {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"    private static final String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"    private static File file;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"     * Creates a new file if it does not exist.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    public static void init() {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"            file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"            file.createNewFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"     * Writes the given string to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"     * @param str The string to be written to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"    public static void write(String str) {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"            FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"            fileWriter.write(str);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"            fileWriter.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"     * Reads the file and returns its contents as a string.","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"     * @return The contents of the file as a string.","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"    public static String read() {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"            StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"                str.append(scanner.nextLine());","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"                if (scanner.hasNext()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"                    str.append(\"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"            return str.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"            return \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"martinng01":62}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"public class Parser {","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"     * Handles user input and performs corresponding actions","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"     * @param input","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"     * @return true if exit command is given, otherwise false","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"    public static boolean handleInput(String input, Ui ui, TaskList taskList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"        String[] splitInput \u003d input.split(\" \", 2);","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"        String keyword \u003d splitInput[0];","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"        String content \u003d splitInput.length \u003e 1 ? splitInput[1] : \"\";","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"        switch (keyword) {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"            case \"list\":","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"                ui.print(taskList.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"            case \"bye\":","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"                ui.print(\"ok see you bro\");","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"                return true;","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"            case \"mark\": {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"                Task task \u003d taskList.get(Integer.parseInt(content) - 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"                task.markDone(true);","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"                ui.print(\"good job bro, marked this task as done:\\n\" + task.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"            case \"unmark\": {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"                Task task \u003d taskList.get(Integer.parseInt(content) - 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"                task.markDone(false);","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"                ui.print(\"ok i help you unmark this task ah:\\n\" + task.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"            case \"delete\": {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"                Task task \u003d taskList.remove(Integer.parseInt(content) - 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"                ui.print(\"ok deleted this one:\\n\" + task.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"            case \"todo\": {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"                try {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"                    Task task \u003d new TodoTask(content);","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"                    taskList.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"                    ui.print(\"added this task for you liao:\\n\" + task.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"                    ui.print(e.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"            case \"deadline\": {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"                String[] splitContent \u003d content.split(\" /by \");","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"                String eventName \u003d splitContent[0];","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"                String deadline \u003d splitContent.length \u003e 1 ? splitContent[1] : \"\";","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"                try {","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"                    Task task \u003d new DeadlineTask(eventName, deadline);","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"                    taskList.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"                    ui.print(\"added this task for you liao:\\n\" + task.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"                    ui.print(e.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"martinng01"},"content":"            case \"event\": {","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"martinng01"},"content":"                String[] splitContent \u003d content.split(\" /from \");","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"                String eventName \u003d splitContent[0];","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"martinng01"},"content":"                String temp \u003d splitContent.length \u003e 1 ? splitContent[1] : \"\";","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"martinng01"},"content":"                splitContent \u003d temp.split(\" /to \");","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"martinng01"},"content":"                String from \u003d splitContent[0];","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"                String to \u003d splitContent.length \u003e 1 ? splitContent[1] : \"\";","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"martinng01"},"content":"                try {","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"martinng01"},"content":"                    Task task \u003d new EventTask(eventName, from, to);","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"martinng01"},"content":"                    taskList.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"martinng01"},"content":"                    ui.print(\"added this task for you liao:\\n\" + task.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"martinng01"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"martinng01"},"content":"                    ui.print(e.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"martinng01"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"martinng01"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"martinng01"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"martinng01"},"content":"            default:","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"martinng01"},"content":"                ui.print(\"what are u saying\");","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"martinng01"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"martinng01"},"content":"        return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"martinng01":87}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"    private final String name;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"    private boolean done \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"    public Task(String name) {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"        this.done \u003d isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"     * Marks the task as done or not done.","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"     * @param done The completion status to set for the task (true if done, false if not done).","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"    public void markDone(boolean done) {","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"        this.done \u003d done;","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"    public String getName() {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"        return name;","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"        return done;","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"        return String.format(\"[%s] %s\", done ? \"X\" : \" \", name);","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"     * Returns a string representation of the task to be written to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"     * @return A string representation of the task to be written to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"    public abstract String toFileString();","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"martinng01":44}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"     * Constructs a task list with the given file contents.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"     * @param fileContents The contents of the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"    public TaskList(String fileContents) {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"        if (fileContents.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"            return;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"        String[] tasks \u003d fileContents.split(\"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"        for (String task : tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"            String[] taskDetails \u003d task.split(\" \\\\| \");","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"            String taskType \u003d taskDetails[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"            boolean isDone \u003d taskDetails[1].equals(\"1\");","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"            String taskContent \u003d taskDetails[2];","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"                switch (taskType) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"                    case \"T\":","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"                        this.add(new TodoTask(taskContent, isDone));","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"                        break;","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"                    case \"D\":","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"                        String deadline \u003d taskDetails[3];","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"                        this.add(new DeadlineTask(taskContent, deadline, isDone));","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"                        break;","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"                    case \"E\":","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"                        String eventFrom \u003d taskDetails[3];","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"                        String eventTo \u003d taskDetails[4];","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"                        this.add(new EventTask(taskContent, eventFrom, eventTo, isDone));","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"                        break;","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"    public boolean add(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"        super.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"        FileHandler.write(this.toFileString());","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"martinng01"},"content":"        return false;","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"martinng01"},"content":"    public Task remove(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"martinng01"},"content":"        Task taskRemoved \u003d super.remove(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"martinng01"},"content":"        FileHandler.write(this.toFileString());","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"martinng01"},"content":"        return taskRemoved;","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"martinng01"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"martinng01"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"martinng01"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"martinng01"},"content":"            str.append(String.format(\"%d. %s\", i + 1, this.get(i).toString()));","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"martinng01"},"content":"            if (i !\u003d this.size() - 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"martinng01"},"content":"                str.append(\"\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"martinng01"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"martinng01"},"content":"        return str.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"martinng01"},"content":"     * Returns a string representation of the task list that can be written to a file.","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"martinng01"},"content":"     * @return A string representation of the task list that can be written to a file.","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"martinng01"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"martinng01"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"martinng01"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"martinng01"},"content":"            str.append(String.format(\"%s\", this.get(i).toFileString()));","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"martinng01"},"content":"            if (i !\u003d this.size() - 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"martinng01"},"content":"                str.append(\"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"martinng01"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"martinng01"},"content":"        return str.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"martinng01":86}},{"path":"src/main/java/duke/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"     * Constructs a to-do task with the given name.","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"     * @param name The name of the to-do task.","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"     * @throws DukeException If the name of the to-do task is an empty string.","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"    public TodoTask(String name) throws DukeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"        super(name);","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"            throw new DukeException(\"oi the task needs a name la \\uD83D\\uDE21\\uD83D\\uDE21\");","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"     * Constructs a to-do task with the given name and done status.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"     * @param name   The name of the to-do task.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"     * @param isDone The done status of the to-do task.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"     * @throws DukeException If the name of the to-do task is an empty string.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"    public TodoTask(String name, boolean isDone) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"        super(name, isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"            throw new DukeException(\"oi the task needs a name la \\uD83D\\uDE21\\uD83D\\uDE21\");","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"     * Returns a string representation of the task to be written to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"     * @return A string representation of the task to be written to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"martinng01"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"martinng01"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"martinng01"},"content":"        return String.format(\"T | %d | %s\", isDone() ? 1 : 0, getName());","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"martinng01":46}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"public class Ui {","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"     * Prints the given string surrounded by a border of dashes.","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"     * This method adds a decorative border to the printed output for visual emphasis.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"     * @param str The string to be printed.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"    public void print(String str) {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"        System.out.println(\"-------------------------\");","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"        System.out.println(str);","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"        System.out.println(\"-------------------------\");","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"martinng01":16}},{"path":"text-ui-test/EXPECTED.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"hi bro, im jun jie","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"what you want me to do?","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"duke.DukeException: oi the task needs a name la 😡😡","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"what are u saying","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"martinng01"},"content":"added this task for you liao:","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"martinng01"},"content":"[T][ ] borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"martinng01"},"content":"added this task for you liao:","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"martinng01"},"content":"[D][ ] return book (by: Sunday)","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"martinng01"},"content":"1. [T][ ] borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"martinng01"},"content":"2. [D][ ] return book (by: Sunday)","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"martinng01"},"content":"good job bro, marked this task as done:","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"martinng01"},"content":"[T][X] borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"martinng01"},"content":"1. [T][X] borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"martinng01"},"content":"2. [D][ ] return book (by: Sunday)","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"martinng01"},"content":"ok deleted this one:","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"martinng01"},"content":"[T][X] borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"martinng01"},"content":"1. [D][ ] return book (by: Sunday)","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"martinng01"},"content":"ok see you bro","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"martinng01"},"content":"-------------------------","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"martinng01":40}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"martinng01"},"content":"event","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"martinng01"},"content":"hi","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"martinng01"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"martinng01"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"martinng01"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"martinng01"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"martinng01"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"martinng01"},"content":"delete 1","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"martinng01"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"martinng01"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"martinng01":10}}]
