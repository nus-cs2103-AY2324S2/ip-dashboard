[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"    private String deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"    public Deadline(String s, String deadline){","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"        super(s);","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"    public String toString(){","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"        String X \u003d this.getMark() ? \"X\" : \" \";","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"        return \"[D]\"+\"[\" + X + \"] \" + this.getItem() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"peterXGD":13}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"    //nothing here at the moment","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"    public DukeException() {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"        super(\"This is a duke exception of unknown cause.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"    public DukeException(String s){","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"        super(s);","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"peterXGD":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"public class Event extends Task{","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"    private String start;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"    private String end;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"    public Event (String s, String start, String end){","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"        super(s);","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"        this.start \u003d start.substring(0, 4) + \":\" + start.substring(4);","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"        this.end \u003d end.substring(0, 2) + \":\" + end.substring((2));","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"    public String toString(){","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"        String X \u003d this.getMark() ? \"X\" : \" \";","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"        return \"[E]\"+\"[\" + X + \"] \" + this.getItem()","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"                + \" (\" + start + \" \" + end + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"peterXGD":16}},{"path":"src/main/java/TODO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"public class TODO extends Task{","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"    public TODO(String s) {","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"        super(s);","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"    public String toString(){","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"        String X \u003d this.getMark() ? \"X\" : \" \";","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"        return (\"[T]\"+\"[\" + X + \"] \" + this.getItem());","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"peterXGD":10}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"public class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"    private String item;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"    private boolean mark;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"    public Task(String item){","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"        super();","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"        this.mark \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"        this.item \u003d item;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"    public void mark(){","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"        this.mark \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"    public void unmark(){","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"        this.mark \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"    public boolean getMark(){","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"        return mark;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"    public String getItem(){","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"        return item;","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"    public String toString(){","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"        String X \u003d mark ? \"X\" : \" \";","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"        return (\"[\" + X + \"] \" + item);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"peterXGD":28}},{"path":"src/main/java/Venus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"public class Venus {","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"peterXGD"},"content":"    public enum TYPES {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"peterXGD"},"content":"        LIST, TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, ALL;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"peterXGD"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"peterXGD"},"content":"        String start \u003d","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"peterXGD"},"content":"                \"    ____________________________________________________________\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"peterXGD"},"content":"                        + \"    Hello! I\u0027m Venus\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"peterXGD"},"content":"                        + \"    What can I do for you?\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"peterXGD"},"content":"                        + \"    ____________________________________________________________\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"peterXGD"},"content":"        String end \u003d","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"peterXGD"},"content":"                \"    ____________________________________________________________\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"peterXGD"},"content":"                        + \"    Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"peterXGD"},"content":"                        + \"    ____________________________________________________________\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"peterXGD"},"content":"        String indented_lines \u003d \"    ____________________________________________________________\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"peterXGD"},"content":"        System.out.println(start);","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"peterXGD"},"content":"        ArrayList\u003cTask\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"peterXGD"},"content":"        String words \u003d sc.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"peterXGD"},"content":"        while (!words.equals(\"bye\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"peterXGD"},"content":"            String[] listType \u003d words.toUpperCase().split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"peterXGD"},"content":"            TYPES type \u003d TYPES.valueOf(listType[0]);;","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"peterXGD"},"content":"            if (listType.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"peterXGD"},"content":"                type \u003d TYPES.ALL;","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"peterXGD"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"peterXGD"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"peterXGD"},"content":"            switch (type) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"peterXGD"},"content":"                case ALL:","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"peterXGD"},"content":"                    int i \u003d 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"peterXGD"},"content":"                    System.out.println(indented_lines","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"peterXGD"},"content":"                            + \"     Here are the tasks in your list:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"peterXGD"},"content":"                    for (Task s : data) {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"peterXGD"},"content":"                        System.out.println(\"     \" + i + \".\" + s);","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"peterXGD"},"content":"                        i++;","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"peterXGD"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"peterXGD"},"content":"                    System.out.println(indented_lines);","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"peterXGD"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"peterXGD"},"content":"                case MARK:","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"peterXGD"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"peterXGD"},"content":"                        int index \u003d Integer.valueOf(words.substring(5)) - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"peterXGD"},"content":"                        data.get(index).mark();","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"peterXGD"},"content":"                        System.out.println(indented_lines","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"peterXGD"},"content":"                                + \"     Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"peterXGD"},"content":"                                + \"       \"","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"peterXGD"},"content":"                                + data.get(index).toString()","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"peterXGD"},"content":"                                + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"peterXGD"},"content":"                                + indented_lines);","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"peterXGD"},"content":"                    } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"peterXGD"},"content":"                        System.out.println(indented_lines","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"peterXGD"},"content":"                                + \"     Incorrect name or spelling for mark, please check\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"peterXGD"},"content":"                                + indented_lines);","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"peterXGD"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"peterXGD"},"content":"                        System.out.println(indented_lines","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"peterXGD"},"content":"                                + \"     Incorrect arguments for mark, please check\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"peterXGD"},"content":"                                + indented_lines);","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"peterXGD"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"peterXGD"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"peterXGD"},"content":"                case UNMARK:","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"peterXGD"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"peterXGD"},"content":"                        int index \u003d Integer.valueOf(words.substring(7)) - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"peterXGD"},"content":"                        data.get(index).unmark();","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"peterXGD"},"content":"                        System.out.println(indented_lines","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"peterXGD"},"content":"                                + \"     OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"peterXGD"},"content":"                                + \"       \"","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"peterXGD"},"content":"                                + data.get(index).toString()","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"peterXGD"},"content":"                                + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"peterXGD"},"content":"                                + indented_lines);","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"peterXGD"},"content":"                    } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"peterXGD"},"content":"                        System.out.println(indented_lines","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"peterXGD"},"content":"                                + \"     Incorrect name or spelling for unmark, please check\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"peterXGD"},"content":"                                + indented_lines);","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"peterXGD"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"peterXGD"},"content":"                        System.out.println(indented_lines","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"peterXGD"},"content":"                                + \"     Incorrect arguments for unmark, please check\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"peterXGD"},"content":"                                + indented_lines);","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"peterXGD"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"peterXGD"},"content":"                case TODO:","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"peterXGD"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"peterXGD"},"content":"                        String word \u003d words.substring(5);","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"peterXGD"},"content":"                        TODO todo \u003d new TODO(word);","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"peterXGD"},"content":"                        data.add(todo);","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"peterXGD"},"content":"                        System.out.println(indented_lines","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"peterXGD"},"content":"                                + \"     Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"peterXGD"},"content":"                                + \"       \"","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"peterXGD"},"content":"                                + todo.toString()","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"peterXGD"},"content":"                                + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"peterXGD"},"content":"                                + \"     Now you have \" + data.size() + \" tasks in the list.\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"peterXGD"},"content":"                                + indented_lines);","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"peterXGD"},"content":"                    } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"peterXGD"},"content":"                        System.out.println(indented_lines","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"peterXGD"},"content":"                                + \"     Incorrect arguments for todo, please check\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"peterXGD"},"content":"                                + indented_lines);","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"peterXGD"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"peterXGD"},"content":"                case DEADLINE:","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"peterXGD"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"peterXGD"},"content":"                        String dString \u003d words.substring(9);","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"peterXGD"},"content":"                        String[] parts \u003d dString.split(\"/by\");","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"peterXGD"},"content":"                        if (parts.length !\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"peterXGD"},"content":"                            throw new DukeException(\"Incorrect, choose a specific deadline only please\");","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"peterXGD"},"content":"                        }","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"peterXGD"},"content":"                        System.out.println(parts.length);","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"peterXGD"},"content":"                        parts[0] \u003d parts[0].trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"peterXGD"},"content":"                        parts[1] \u003d parts[1].trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"peterXGD"},"content":"                        Deadline deadline \u003d new Deadline(parts[0], parts[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"peterXGD"},"content":"                        data.add(deadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"peterXGD"},"content":"                        System.out.println(indented_lines","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"peterXGD"},"content":"                                + \"     Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"peterXGD"},"content":"                                + \"       \"","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"peterXGD"},"content":"                                + deadline.toString()","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"peterXGD"},"content":"                                + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"peterXGD"},"content":"                                + \"     Now you have \" + data.size() + \" tasks in the list.\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"peterXGD"},"content":"                                + indented_lines);","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"peterXGD"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"peterXGD"},"content":"                        System.out.println(indented_lines","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"peterXGD"},"content":"                                + \"    \"","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"peterXGD"},"content":"                                + e.getMessage()","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"peterXGD"},"content":"                                + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"peterXGD"},"content":"                                + indented_lines);","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"peterXGD"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"peterXGD"},"content":"                case EVENT:","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"peterXGD"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"peterXGD"},"content":"                        String dString \u003d words.substring(6);","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"peterXGD"},"content":"                        String[] parts \u003d dString.split(\"/\");","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"peterXGD"},"content":"                        if (parts.length !\u003d 2) {","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"peterXGD"},"content":"                            throw new DukeException(\"Incorrect arguments for events\");","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"peterXGD"},"content":"                        }","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"peterXGD"},"content":"                        for (int j \u003d 0; j \u003c 3; j++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"peterXGD"},"content":"                            parts[j] \u003d parts[j].trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"peterXGD"},"content":"                        }","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"peterXGD"},"content":"                        Event event \u003d new Event(parts[0], parts[1], parts[2]);","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"peterXGD"},"content":"                        data.add(event);","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"peterXGD"},"content":"                        System.out.println(indented_lines","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"peterXGD"},"content":"                                + \"     Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"peterXGD"},"content":"                                + \"       \"","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"peterXGD"},"content":"                                + event.toString()","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"peterXGD"},"content":"                                + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"peterXGD"},"content":"                                + \"     Now you have \" + data.size() + \" tasks in the list.\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"peterXGD"},"content":"                                + indented_lines);","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"peterXGD"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"peterXGD"},"content":"                        System.out.println(indented_lines","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"peterXGD"},"content":"                                + \"    \"","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"peterXGD"},"content":"                                + e.getMessage()","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"peterXGD"},"content":"                                + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"peterXGD"},"content":"                                + indented_lines);","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"peterXGD"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"peterXGD"},"content":"                        System.out.println(indented_lines","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"peterXGD"},"content":"                                + \"An unknown exception is created, please report to the devs\"","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"peterXGD"},"content":"                                + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"peterXGD"},"content":"                                + indented_lines);","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"peterXGD"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"peterXGD"},"content":"                case DELETE:","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"peterXGD"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":159,"author":{"gitId":"peterXGD"},"content":"                        int index \u003d Integer.valueOf(words.substring(7)) - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":160,"author":{"gitId":"peterXGD"},"content":"                        System.out.println(indented_lines","lastModifiedDate":"2024-01-31"},{"lineNumber":161,"author":{"gitId":"peterXGD"},"content":"                                + \"     Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":162,"author":{"gitId":"peterXGD"},"content":"                                + \"       \"","lastModifiedDate":"2024-01-31"},{"lineNumber":163,"author":{"gitId":"peterXGD"},"content":"                                + data.get(index).toString()","lastModifiedDate":"2024-01-31"},{"lineNumber":164,"author":{"gitId":"peterXGD"},"content":"                                + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":165,"author":{"gitId":"peterXGD"},"content":"                                + \"     Now you have \" + (data.size() - 1) + \" tasks in the list.\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":166,"author":{"gitId":"peterXGD"},"content":"                                + indented_lines);","lastModifiedDate":"2024-01-31"},{"lineNumber":167,"author":{"gitId":"peterXGD"},"content":"                        data.remove(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":168,"author":{"gitId":"peterXGD"},"content":"                    } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":169,"author":{"gitId":"peterXGD"},"content":"                        System.out.println(indented_lines","lastModifiedDate":"2024-01-31"},{"lineNumber":170,"author":{"gitId":"peterXGD"},"content":"                                + \"     Incorrect name or spelling for delete, please check\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":171,"author":{"gitId":"peterXGD"},"content":"                                + indented_lines);","lastModifiedDate":"2024-01-31"},{"lineNumber":172,"author":{"gitId":"peterXGD"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":173,"author":{"gitId":"peterXGD"},"content":"                        System.out.println(indented_lines","lastModifiedDate":"2024-01-31"},{"lineNumber":174,"author":{"gitId":"peterXGD"},"content":"                                + \"     Incorrect arguments for delete, please check\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":175,"author":{"gitId":"peterXGD"},"content":"                                + indented_lines);","lastModifiedDate":"2024-01-31"},{"lineNumber":176,"author":{"gitId":"peterXGD"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":177,"author":{"gitId":"peterXGD"},"content":"                default:","lastModifiedDate":"2024-01-31"},{"lineNumber":178,"author":{"gitId":"peterXGD"},"content":"                    Task ts \u003d new Task(words);","lastModifiedDate":"2024-01-31"},{"lineNumber":179,"author":{"gitId":"peterXGD"},"content":"                    data.add(ts);","lastModifiedDate":"2024-01-31"},{"lineNumber":180,"author":{"gitId":"peterXGD"},"content":"                    System.out.println(indented_lines","lastModifiedDate":"2024-01-31"},{"lineNumber":181,"author":{"gitId":"peterXGD"},"content":"                            + \"     added: \"","lastModifiedDate":"2024-01-31"},{"lineNumber":182,"author":{"gitId":"peterXGD"},"content":"                            + words +","lastModifiedDate":"2024-01-31"},{"lineNumber":183,"author":{"gitId":"peterXGD"},"content":"                            \"\\n\" + indented_lines);","lastModifiedDate":"2024-01-31"},{"lineNumber":184,"author":{"gitId":"peterXGD"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":185,"author":{"gitId":"peterXGD"},"content":"            words \u003d sc.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":186,"author":{"gitId":"peterXGD"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":187,"author":{"gitId":"peterXGD"},"content":"        sc.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":188,"author":{"gitId":"peterXGD"},"content":"        System.out.println(end);","lastModifiedDate":"2024-01-31"},{"lineNumber":189,"author":{"gitId":"peterXGD"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":190,"author":{"gitId":"peterXGD"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"peterXGD":190}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"peterXGD"},"content":"todo borrow book","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"peterXGD"},"content":"list","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"peterXGD"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"peterXGD"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"peterXGD":4}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"peterXGD"},"content":"java -classpath ../bin Venus \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"peterXGD":1,"-":37}}]
