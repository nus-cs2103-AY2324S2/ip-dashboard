[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dillontkh"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-01-20"},{"lineNumber":2,"author":{"gitId":"dillontkh"},"content":"    protected String deadline;","lastModifiedDate":"2024-01-20"},{"lineNumber":3,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":4,"author":{"gitId":"dillontkh"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2024-01-20"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"        super(description);","lastModifiedDate":"2024-01-20"},{"lineNumber":6,"author":{"gitId":"dillontkh"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-20"},{"lineNumber":7,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":8,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":9,"author":{"gitId":"dillontkh"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":10,"author":{"gitId":"dillontkh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"dillontkh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.deadline + \")\";","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":13,"author":{"gitId":"dillontkh"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"dillontkh":13}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dillontkh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"dillontkh"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"dillontkh"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"dillontkh":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dillontkh"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":2,"author":{"gitId":"dillontkh"},"content":"    protected String from;","lastModifiedDate":"2024-01-20"},{"lineNumber":3,"author":{"gitId":"dillontkh"},"content":"    protected String to;","lastModifiedDate":"2024-01-20"},{"lineNumber":4,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-20"},{"lineNumber":6,"author":{"gitId":"dillontkh"},"content":"        super(description);","lastModifiedDate":"2024-01-20"},{"lineNumber":7,"author":{"gitId":"dillontkh"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-20"},{"lineNumber":8,"author":{"gitId":"dillontkh"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-20"},{"lineNumber":9,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":10,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":11,"author":{"gitId":"dillontkh"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":12,"author":{"gitId":"dillontkh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":13,"author":{"gitId":"dillontkh"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2024-01-20"},{"lineNumber":14,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":15,"author":{"gitId":"dillontkh"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"dillontkh":15}},{"path":"src/main/java/Nollid.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dillontkh"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"dillontkh"},"content":"import java.util.Scanner; // For reading user input","lastModifiedDate":"2024-01-19"},{"lineNumber":3,"author":{"gitId":"dillontkh"},"content":"import java.util.ArrayList; // For storing to-do tasks","lastModifiedDate":"2024-01-19"},{"lineNumber":4,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"public class Nollid {","lastModifiedDate":"2024-01-20"},{"lineNumber":6,"author":{"gitId":"dillontkh"},"content":"    private static ArrayList\u003cTask\u003e todoList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-01-19"},{"lineNumber":7,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"dillontkh"},"content":"    private enum Command {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"dillontkh"},"content":"        BYE(\"bye\"),","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"dillontkh"},"content":"        LIST(\"list\"),","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"dillontkh"},"content":"        TODO(\"todo\"),","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"dillontkh"},"content":"        DEADLINE(\"deadline\"),","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"dillontkh"},"content":"        EVENT(\"event\"),","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"dillontkh"},"content":"        MARK(\"mark\"),","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"dillontkh"},"content":"        UNMARK(\"unmark\"),","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"dillontkh"},"content":"        DELETE(\"delete\"),","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"dillontkh"},"content":"        HELP(\"help\");","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"dillontkh"},"content":"        private final String commandName;","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"dillontkh"},"content":"        Command(String commandName) {","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"dillontkh"},"content":"            this.commandName \u003d commandName;","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"dillontkh"},"content":"        @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"dillontkh"},"content":"        public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"dillontkh"},"content":"            return this.commandName;","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"dillontkh"},"content":"        sendWelcomeMessage();","lastModifiedDate":"2024-01-19"},{"lineNumber":33,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":34,"author":{"gitId":"dillontkh"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-19"},{"lineNumber":35,"author":{"gitId":"dillontkh"},"content":"        String userInput;","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":37,"author":{"gitId":"dillontkh"},"content":"        while (true) {","lastModifiedDate":"2024-01-19"},{"lineNumber":38,"author":{"gitId":"dillontkh"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"dillontkh"},"content":"            userInput \u003d userInput.strip();","lastModifiedDate":"2024-01-19"},{"lineNumber":40,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":41,"author":{"gitId":"dillontkh"},"content":"            if (userInput.isEmpty()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"dillontkh"},"content":"                botSays(\"Please enter a command. Type \u0027help\u0027 to view a list of commands.\");","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"dillontkh"},"content":"                continue;","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"dillontkh"},"content":"            }","lastModifiedDate":"2024-01-19"},{"lineNumber":45,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":46,"author":{"gitId":"dillontkh"},"content":"            // Split user input into individual words","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"dillontkh"},"content":"            // e.g. \"i am user input\" -\u003e [\"i\", \"am\", \"user\", \"input\"]","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"dillontkh"},"content":"            ArrayList\u003cString\u003e inputList \u003d new ArrayList\u003c\u003e(Arrays.asList(userInput.split(\" \")));","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"dillontkh"},"content":"            String userCommand \u003d inputList.get(0);","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"dillontkh"},"content":"            try {","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"dillontkh"},"content":"                if (userCommand.equalsIgnoreCase(Command.BYE.toString())) {","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"dillontkh"},"content":"                    break;","lastModifiedDate":"2024-01-22"},{"lineNumber":54,"author":{"gitId":"dillontkh"},"content":"                } else if (userCommand.equalsIgnoreCase(Command.LIST.toString())) {","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"dillontkh"},"content":"                    listCommand();","lastModifiedDate":"2024-01-22"},{"lineNumber":56,"author":{"gitId":"dillontkh"},"content":"                } else if (userCommand.equalsIgnoreCase(Command.MARK.toString())) {","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"dillontkh"},"content":"                    markCommand(inputList);","lastModifiedDate":"2024-01-22"},{"lineNumber":58,"author":{"gitId":"dillontkh"},"content":"                } else if (userCommand.equalsIgnoreCase(Command.UNMARK.toString())) {","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"dillontkh"},"content":"                    unmarkCommand(inputList);","lastModifiedDate":"2024-01-22"},{"lineNumber":60,"author":{"gitId":"dillontkh"},"content":"                } else if (userCommand.equalsIgnoreCase(Command.TODO.toString())) {","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"dillontkh"},"content":"                    addTodoCommand(inputList);","lastModifiedDate":"2024-01-22"},{"lineNumber":62,"author":{"gitId":"dillontkh"},"content":"                } else if (userCommand.equalsIgnoreCase(Command.DEADLINE.toString())) {","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"dillontkh"},"content":"                    addDeadlineCommand(inputList);","lastModifiedDate":"2024-01-22"},{"lineNumber":64,"author":{"gitId":"dillontkh"},"content":"                } else if (userCommand.equalsIgnoreCase(Command.EVENT.toString())) {","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"dillontkh"},"content":"                    addEventCommand(inputList);","lastModifiedDate":"2024-01-22"},{"lineNumber":66,"author":{"gitId":"dillontkh"},"content":"                } else if (userCommand.equalsIgnoreCase(Command.DELETE.toString())) {","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"dillontkh"},"content":"                    deleteTaskCommand(inputList);","lastModifiedDate":"2024-01-22"},{"lineNumber":68,"author":{"gitId":"dillontkh"},"content":"                } else if (userCommand.equalsIgnoreCase(Command.HELP.toString())) {","lastModifiedDate":"2024-01-24"},{"lineNumber":69,"author":{"gitId":"dillontkh"},"content":"                    helpCommand();","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"dillontkh"},"content":"                } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"dillontkh"},"content":"                    botSays(\"Invalid command. Type \u0027help\u0027 to view a list of commands.\");","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"dillontkh"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":73,"author":{"gitId":"dillontkh"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":74,"author":{"gitId":"dillontkh"},"content":"                botSays(e.getMessage());","lastModifiedDate":"2024-01-22"},{"lineNumber":75,"author":{"gitId":"dillontkh"},"content":"            }","lastModifiedDate":"2024-01-19"},{"lineNumber":76,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-01-19"},{"lineNumber":77,"author":{"gitId":"dillontkh"},"content":"        sendGoodbyeMessage();","lastModifiedDate":"2024-01-19"},{"lineNumber":78,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":79,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":80,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-01-19"},{"lineNumber":81,"author":{"gitId":"dillontkh"},"content":"     * Sends a welcome message upon starting the bot, with horizontal lines","lastModifiedDate":"2024-01-19"},{"lineNumber":82,"author":{"gitId":"dillontkh"},"content":"     * printed for visual separation.","lastModifiedDate":"2024-01-19"},{"lineNumber":83,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-01-19"},{"lineNumber":84,"author":{"gitId":"dillontkh"},"content":"    public static void sendWelcomeMessage() {","lastModifiedDate":"2024-01-19"},{"lineNumber":85,"author":{"gitId":"dillontkh"},"content":"        String welcomeMessage \u003d \"Hello! I\u0027m Nollid.\\n\" + \"What can I do for you?\";","lastModifiedDate":"2024-01-22"},{"lineNumber":86,"author":{"gitId":"dillontkh"},"content":"        botSays(welcomeMessage);","lastModifiedDate":"2024-01-19"},{"lineNumber":87,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":88,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":89,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-01-19"},{"lineNumber":90,"author":{"gitId":"dillontkh"},"content":"     * Sends a goodbye message upon exiting the bot, with horizontal lines","lastModifiedDate":"2024-01-19"},{"lineNumber":91,"author":{"gitId":"dillontkh"},"content":"     * printed for visual separation.","lastModifiedDate":"2024-01-19"},{"lineNumber":92,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-01-19"},{"lineNumber":93,"author":{"gitId":"dillontkh"},"content":"    public static void sendGoodbyeMessage() {","lastModifiedDate":"2024-01-19"},{"lineNumber":94,"author":{"gitId":"dillontkh"},"content":"        String goodbyeMessage \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-01-19"},{"lineNumber":95,"author":{"gitId":"dillontkh"},"content":"        botSays(goodbyeMessage);","lastModifiedDate":"2024-01-19"},{"lineNumber":96,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":97,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":98,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-01-19"},{"lineNumber":99,"author":{"gitId":"dillontkh"},"content":"     * Prints a horizontal line with unicode character U+2500.","lastModifiedDate":"2024-01-19"},{"lineNumber":100,"author":{"gitId":"dillontkh"},"content":"     *","lastModifiedDate":"2024-01-22"},{"lineNumber":101,"author":{"gitId":"dillontkh"},"content":"     * @param length Length of line in characters.","lastModifiedDate":"2024-01-19"},{"lineNumber":102,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-01-19"},{"lineNumber":103,"author":{"gitId":"dillontkh"},"content":"    public static void printHorizontalLine(int length) {","lastModifiedDate":"2024-01-19"},{"lineNumber":104,"author":{"gitId":"dillontkh"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2024-01-19"},{"lineNumber":105,"author":{"gitId":"dillontkh"},"content":"            System.out.print(\"─\");","lastModifiedDate":"2024-01-19"},{"lineNumber":106,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-01-19"},{"lineNumber":107,"author":{"gitId":"dillontkh"},"content":"        System.out.println();","lastModifiedDate":"2024-01-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":110,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-01-19"},{"lineNumber":111,"author":{"gitId":"dillontkh"},"content":"     * Stores a task in the list.","lastModifiedDate":"2024-01-20"},{"lineNumber":112,"author":{"gitId":"dillontkh"},"content":"     *","lastModifiedDate":"2024-01-22"},{"lineNumber":113,"author":{"gitId":"dillontkh"},"content":"     * @param task Task to store","lastModifiedDate":"2024-01-20"},{"lineNumber":114,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-01-19"},{"lineNumber":115,"author":{"gitId":"dillontkh"},"content":"    public static void addToList(Task task) {","lastModifiedDate":"2024-01-20"},{"lineNumber":116,"author":{"gitId":"dillontkh"},"content":"        todoList.add(task);","lastModifiedDate":"2024-01-20"},{"lineNumber":117,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":118,"author":{"gitId":"dillontkh"},"content":"        String message \u003d \"Alright, added:\\n\" + \"\\t\" + task.toString() + \"\\n\";","lastModifiedDate":"2024-01-22"},{"lineNumber":119,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":120,"author":{"gitId":"dillontkh"},"content":"        int listSize \u003d todoList.size();","lastModifiedDate":"2024-01-20"},{"lineNumber":121,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":122,"author":{"gitId":"dillontkh"},"content":"        // \"task\" for singular, \"tasks\" for plural","lastModifiedDate":"2024-01-20"},{"lineNumber":123,"author":{"gitId":"dillontkh"},"content":"        if (listSize \u003d\u003d 1) {","lastModifiedDate":"2024-01-20"},{"lineNumber":124,"author":{"gitId":"dillontkh"},"content":"            message +\u003d \"You now have \" + listSize + \" task in your list.\";","lastModifiedDate":"2024-01-20"},{"lineNumber":125,"author":{"gitId":"dillontkh"},"content":"        } else {","lastModifiedDate":"2024-01-20"},{"lineNumber":126,"author":{"gitId":"dillontkh"},"content":"            message +\u003d \"You now have \" + listSize + \" tasks in your list.\";","lastModifiedDate":"2024-01-20"},{"lineNumber":127,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-01-20"},{"lineNumber":128,"author":{"gitId":"dillontkh"},"content":"        botSays(message);","lastModifiedDate":"2024-01-20"},{"lineNumber":129,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":130,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":131,"author":{"gitId":"dillontkh"},"content":"    /**","lastModifiedDate":"2024-01-19"},{"lineNumber":132,"author":{"gitId":"dillontkh"},"content":"     * Formats message that the bot will send.","lastModifiedDate":"2024-01-19"},{"lineNumber":133,"author":{"gitId":"dillontkh"},"content":"     *","lastModifiedDate":"2024-01-22"},{"lineNumber":134,"author":{"gitId":"dillontkh"},"content":"     * @param message The message for the bot to send.","lastModifiedDate":"2024-01-19"},{"lineNumber":135,"author":{"gitId":"dillontkh"},"content":"     */","lastModifiedDate":"2024-01-19"},{"lineNumber":136,"author":{"gitId":"dillontkh"},"content":"    public static void botSays(String message) {","lastModifiedDate":"2024-01-19"},{"lineNumber":137,"author":{"gitId":"dillontkh"},"content":"        // Length of line to be printed.","lastModifiedDate":"2024-01-19"},{"lineNumber":138,"author":{"gitId":"dillontkh"},"content":"        int lineLength \u003d 30;","lastModifiedDate":"2024-01-19"},{"lineNumber":139,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":140,"author":{"gitId":"dillontkh"},"content":"        printHorizontalLine(lineLength);","lastModifiedDate":"2024-01-19"},{"lineNumber":141,"author":{"gitId":"dillontkh"},"content":"        System.out.println(message);","lastModifiedDate":"2024-01-19"},{"lineNumber":142,"author":{"gitId":"dillontkh"},"content":"        printHorizontalLine(lineLength);","lastModifiedDate":"2024-01-19"},{"lineNumber":143,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":144,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":145,"author":{"gitId":"dillontkh"},"content":"    public static void listCommand() {","lastModifiedDate":"2024-01-22"},{"lineNumber":146,"author":{"gitId":"dillontkh"},"content":"        // List items in to-do list","lastModifiedDate":"2024-01-22"},{"lineNumber":147,"author":{"gitId":"dillontkh"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the tasks in your list: \\n\");","lastModifiedDate":"2024-01-22"},{"lineNumber":148,"author":{"gitId":"dillontkh"},"content":"        if (todoList.isEmpty()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":149,"author":{"gitId":"dillontkh"},"content":"            response \u003d new StringBuilder(\"Your list is empty!\");","lastModifiedDate":"2024-01-22"},{"lineNumber":150,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":151,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":152,"author":{"gitId":"dillontkh"},"content":"        for (int i \u003d 0; i \u003c todoList.size(); i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":153,"author":{"gitId":"dillontkh"},"content":"            if (i \u003c todoList.size() - 1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":154,"author":{"gitId":"dillontkh"},"content":"                response.append(i + 1).append(\".\").append(todoList.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2024-01-22"},{"lineNumber":155,"author":{"gitId":"dillontkh"},"content":"            } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":156,"author":{"gitId":"dillontkh"},"content":"                response.append(i + 1).append(\".\").append(todoList.get(i).toString());","lastModifiedDate":"2024-01-22"},{"lineNumber":157,"author":{"gitId":"dillontkh"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":158,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":159,"author":{"gitId":"dillontkh"},"content":"        botSays(response.toString());","lastModifiedDate":"2024-01-22"},{"lineNumber":160,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":161,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":162,"author":{"gitId":"dillontkh"},"content":"    public static void markCommand(ArrayList\u003cString\u003e inputList) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":163,"author":{"gitId":"dillontkh"},"content":"        // This means that the user has not supplied any number with the command","lastModifiedDate":"2024-01-22"},{"lineNumber":164,"author":{"gitId":"dillontkh"},"content":"        if (inputList.size() \u003d\u003d 1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":165,"author":{"gitId":"dillontkh"},"content":"            throw new DukeException(\"Please enter the task you wish to mark as done!\\n\" + \"Usage: mark [task number]\");","lastModifiedDate":"2024-01-26"},{"lineNumber":166,"author":{"gitId":"dillontkh"},"content":"        } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":167,"author":{"gitId":"dillontkh"},"content":"            try {","lastModifiedDate":"2024-01-22"},{"lineNumber":168,"author":{"gitId":"dillontkh"},"content":"                int taskIndex \u003d Integer.parseInt(inputList.get(1));","lastModifiedDate":"2024-01-22"},{"lineNumber":169,"author":{"gitId":"dillontkh"},"content":"                markDone(taskIndex);","lastModifiedDate":"2024-01-22"},{"lineNumber":170,"author":{"gitId":"dillontkh"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":171,"author":{"gitId":"dillontkh"},"content":"                throw new DukeException(\"Please enter a number for the mark command.\\n\" + \"Usage: mark [task number]\");","lastModifiedDate":"2024-01-26"},{"lineNumber":172,"author":{"gitId":"dillontkh"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":173,"author":{"gitId":"dillontkh"},"content":"                throw new DukeException(\"Are you sure that\u0027s a valid task number? (Tip: use \u0027list\u0027 to check the \"","lastModifiedDate":"2024-01-26"},{"lineNumber":174,"author":{"gitId":"dillontkh"},"content":"                        + \"number of your task!)\\n\" + \"Usage: mark [task number]\");","lastModifiedDate":"2024-01-26"},{"lineNumber":175,"author":{"gitId":"dillontkh"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":176,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":177,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":178,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":179,"author":{"gitId":"dillontkh"},"content":"    public static void markDone(int taskIndex) {","lastModifiedDate":"2024-01-22"},{"lineNumber":180,"author":{"gitId":"dillontkh"},"content":"        todoList.get(taskIndex - 1).markDone();","lastModifiedDate":"2024-01-22"},{"lineNumber":181,"author":{"gitId":"dillontkh"},"content":"        String response \u003d \"Good job! I\u0027ve marked this task as done: \\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":182,"author":{"gitId":"dillontkh"},"content":"                + \"\\t \" + todoList.get(taskIndex - 1).toString();","lastModifiedDate":"2024-01-26"},{"lineNumber":183,"author":{"gitId":"dillontkh"},"content":"        botSays(response);","lastModifiedDate":"2024-01-22"},{"lineNumber":184,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":185,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":186,"author":{"gitId":"dillontkh"},"content":"    public static void unmarkCommand(ArrayList\u003cString\u003e inputList) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":187,"author":{"gitId":"dillontkh"},"content":"        // This means that the user has not supplied any number with the command","lastModifiedDate":"2024-01-22"},{"lineNumber":188,"author":{"gitId":"dillontkh"},"content":"        if (inputList.size() \u003d\u003d 1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":189,"author":{"gitId":"dillontkh"},"content":"            throw new DukeException(\"Please enter the task you wish to mark as not done!\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":190,"author":{"gitId":"dillontkh"},"content":"                    + \"Usage: unmark [task number]\");","lastModifiedDate":"2024-01-26"},{"lineNumber":191,"author":{"gitId":"dillontkh"},"content":"        } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":192,"author":{"gitId":"dillontkh"},"content":"            try {","lastModifiedDate":"2024-01-22"},{"lineNumber":193,"author":{"gitId":"dillontkh"},"content":"                int taskIndex \u003d Integer.parseInt(inputList.get(1));","lastModifiedDate":"2024-01-22"},{"lineNumber":194,"author":{"gitId":"dillontkh"},"content":"                markNotDone(taskIndex);","lastModifiedDate":"2024-01-22"},{"lineNumber":195,"author":{"gitId":"dillontkh"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":196,"author":{"gitId":"dillontkh"},"content":"                throw new DukeException(\"Please enter a number for the unmark command.\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":197,"author":{"gitId":"dillontkh"},"content":"                        + \"Usage: unmark [task number]\");","lastModifiedDate":"2024-01-26"},{"lineNumber":198,"author":{"gitId":"dillontkh"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":199,"author":{"gitId":"dillontkh"},"content":"                throw new DukeException(\"Are you sure that\u0027s a valid task number? (Tip: use \u0027list\u0027 to check the \"","lastModifiedDate":"2024-01-26"},{"lineNumber":200,"author":{"gitId":"dillontkh"},"content":"                        + \"number of your task!)\\n\" + \"Usage: unmark [task number]\");","lastModifiedDate":"2024-01-26"},{"lineNumber":201,"author":{"gitId":"dillontkh"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":202,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":203,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":204,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":205,"author":{"gitId":"dillontkh"},"content":"    public static void markNotDone(int taskIndex) {","lastModifiedDate":"2024-01-22"},{"lineNumber":206,"author":{"gitId":"dillontkh"},"content":"        todoList.get(taskIndex - 1).markNotDone();","lastModifiedDate":"2024-01-22"},{"lineNumber":207,"author":{"gitId":"dillontkh"},"content":"        String response \u003d \"Alright, I\u0027ve marked this task as not done yet: \\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":208,"author":{"gitId":"dillontkh"},"content":"                + \"\\t \" + todoList.get(taskIndex - 1).toString();","lastModifiedDate":"2024-01-26"},{"lineNumber":209,"author":{"gitId":"dillontkh"},"content":"        botSays(response);","lastModifiedDate":"2024-01-22"},{"lineNumber":210,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":211,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":212,"author":{"gitId":"dillontkh"},"content":"    public static void addTodoCommand(ArrayList\u003cString\u003e inputList) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":213,"author":{"gitId":"dillontkh"},"content":"        if (inputList.size() \u003d\u003d 1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":214,"author":{"gitId":"dillontkh"},"content":"            throw new DukeException(\"Todo description cannot be empty!\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":215,"author":{"gitId":"dillontkh"},"content":"                    + \"Usage: todo [task description]\");","lastModifiedDate":"2024-01-26"},{"lineNumber":216,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":217,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":218,"author":{"gitId":"dillontkh"},"content":"        StringBuilder taskDescription \u003d new StringBuilder();","lastModifiedDate":"2024-01-22"},{"lineNumber":219,"author":{"gitId":"dillontkh"},"content":"        for (int i \u003d 1; i \u003c inputList.size(); i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":220,"author":{"gitId":"dillontkh"},"content":"            if (i !\u003d inputList.size() - 1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":221,"author":{"gitId":"dillontkh"},"content":"                taskDescription.append(inputList.get(i)).append(\" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":222,"author":{"gitId":"dillontkh"},"content":"            } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":223,"author":{"gitId":"dillontkh"},"content":"                taskDescription.append(inputList.get(i));","lastModifiedDate":"2024-01-22"},{"lineNumber":224,"author":{"gitId":"dillontkh"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":225,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":226,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":227,"author":{"gitId":"dillontkh"},"content":"        ToDo task \u003d new ToDo(taskDescription.toString());","lastModifiedDate":"2024-01-22"},{"lineNumber":228,"author":{"gitId":"dillontkh"},"content":"        addToList(task);","lastModifiedDate":"2024-01-22"},{"lineNumber":229,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":230,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":231,"author":{"gitId":"dillontkh"},"content":"    public static void addDeadlineCommand(ArrayList\u003cString\u003e inputList) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":232,"author":{"gitId":"dillontkh"},"content":"        int byIndex \u003d inputList.indexOf(\"/by\");","lastModifiedDate":"2024-01-22"},{"lineNumber":233,"author":{"gitId":"dillontkh"},"content":"        if (inputList.size() \u003d\u003d 1 || byIndex \u003d\u003d 1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":234,"author":{"gitId":"dillontkh"},"content":"            throw new DukeException(\"Deadline description cannot be empty!\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":235,"author":{"gitId":"dillontkh"},"content":"                    + \"Usage: deadline [task description] /by [deadline]\");","lastModifiedDate":"2024-01-26"},{"lineNumber":236,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":237,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":238,"author":{"gitId":"dillontkh"},"content":"        if (byIndex \u003d\u003d inputList.size() - 1 || byIndex \u003d\u003d -1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":239,"author":{"gitId":"dillontkh"},"content":"            throw new DukeException(\"Please input a deadline!\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":240,"author":{"gitId":"dillontkh"},"content":"                    + \"Usage: deadline [task description] /by [deadline]\");","lastModifiedDate":"2024-01-26"},{"lineNumber":241,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":242,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":243,"author":{"gitId":"dillontkh"},"content":"        StringBuilder taskDescription \u003d new StringBuilder();","lastModifiedDate":"2024-01-22"},{"lineNumber":244,"author":{"gitId":"dillontkh"},"content":"        for (int i \u003d 1; i \u003c byIndex; i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":245,"author":{"gitId":"dillontkh"},"content":"            if (i !\u003d byIndex - 1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":246,"author":{"gitId":"dillontkh"},"content":"                taskDescription.append(inputList.get(i)).append(\" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":247,"author":{"gitId":"dillontkh"},"content":"            } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":248,"author":{"gitId":"dillontkh"},"content":"                taskDescription.append(inputList.get(i));","lastModifiedDate":"2024-01-22"},{"lineNumber":249,"author":{"gitId":"dillontkh"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":250,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":251,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":252,"author":{"gitId":"dillontkh"},"content":"        StringBuilder deadline \u003d new StringBuilder();","lastModifiedDate":"2024-01-22"},{"lineNumber":253,"author":{"gitId":"dillontkh"},"content":"        for (int i \u003d byIndex + 1; i \u003c inputList.size(); i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":254,"author":{"gitId":"dillontkh"},"content":"            if (i !\u003d inputList.size() - 1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":255,"author":{"gitId":"dillontkh"},"content":"                deadline.append(inputList.get(i)).append(\" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":256,"author":{"gitId":"dillontkh"},"content":"            } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":257,"author":{"gitId":"dillontkh"},"content":"                deadline.append(inputList.get(i));","lastModifiedDate":"2024-01-22"},{"lineNumber":258,"author":{"gitId":"dillontkh"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":259,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":260,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":261,"author":{"gitId":"dillontkh"},"content":"        Deadline task \u003d new Deadline(taskDescription.toString(), deadline.toString());","lastModifiedDate":"2024-01-22"},{"lineNumber":262,"author":{"gitId":"dillontkh"},"content":"        addToList(task);","lastModifiedDate":"2024-01-22"},{"lineNumber":263,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":264,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":265,"author":{"gitId":"dillontkh"},"content":"    public static void addEventCommand(ArrayList\u003cString\u003e inputList) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":266,"author":{"gitId":"dillontkh"},"content":"        int fromIndex \u003d inputList.indexOf(\"/from\");","lastModifiedDate":"2024-01-22"},{"lineNumber":267,"author":{"gitId":"dillontkh"},"content":"        int toIndex \u003d inputList.indexOf(\"/to\");","lastModifiedDate":"2024-01-22"},{"lineNumber":268,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":269,"author":{"gitId":"dillontkh"},"content":"        if (inputList.size() \u003d\u003d 1 || fromIndex \u003d\u003d 1 || toIndex \u003d\u003d 1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":270,"author":{"gitId":"dillontkh"},"content":"            throw new DukeException(\"Event description cannot be empty!\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":271,"author":{"gitId":"dillontkh"},"content":"                    + \"Usage: event [task description] /from [start] /to [end]\");","lastModifiedDate":"2024-01-26"},{"lineNumber":272,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":273,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":274,"author":{"gitId":"dillontkh"},"content":"        if (fromIndex \u003d\u003d -1 || fromIndex \u003d\u003d inputList.size() - 1 || fromIndex \u003d\u003d toIndex - 1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":275,"author":{"gitId":"dillontkh"},"content":"            throw new DukeException(\"Please enter the start of your event!\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":276,"author":{"gitId":"dillontkh"},"content":"                    + \"Usage: event [task description] /from [start] /to [end]\");","lastModifiedDate":"2024-01-26"},{"lineNumber":277,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":278,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":279,"author":{"gitId":"dillontkh"},"content":"        if (toIndex \u003d\u003d -1 || toIndex \u003d\u003d inputList.size() - 1 || toIndex \u003d\u003d fromIndex - 1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":280,"author":{"gitId":"dillontkh"},"content":"            throw new DukeException(\"Please enter the end of your event!\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":281,"author":{"gitId":"dillontkh"},"content":"                    + \"Usage: event [task description] /from [start] /to [end]\");","lastModifiedDate":"2024-01-26"},{"lineNumber":282,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":283,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":284,"author":{"gitId":"dillontkh"},"content":"        StringBuilder taskDescription \u003d new StringBuilder();","lastModifiedDate":"2024-01-22"},{"lineNumber":285,"author":{"gitId":"dillontkh"},"content":"        StringBuilder from \u003d new StringBuilder();","lastModifiedDate":"2024-01-22"},{"lineNumber":286,"author":{"gitId":"dillontkh"},"content":"        StringBuilder to \u003d new StringBuilder();","lastModifiedDate":"2024-01-22"},{"lineNumber":287,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":288,"author":{"gitId":"dillontkh"},"content":"        // Deal with the user sending \"/from\" before \"/to\" or vice versa","lastModifiedDate":"2024-01-22"},{"lineNumber":289,"author":{"gitId":"dillontkh"},"content":"        if (fromIndex \u003c toIndex) {","lastModifiedDate":"2024-01-22"},{"lineNumber":290,"author":{"gitId":"dillontkh"},"content":"            extractEventInfo(inputList, fromIndex, toIndex, taskDescription, from, to);","lastModifiedDate":"2024-01-22"},{"lineNumber":291,"author":{"gitId":"dillontkh"},"content":"        } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":292,"author":{"gitId":"dillontkh"},"content":"            extractEventInfo(inputList, toIndex, fromIndex, taskDescription, to, from);","lastModifiedDate":"2024-01-22"},{"lineNumber":293,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":294,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":295,"author":{"gitId":"dillontkh"},"content":"        Event task \u003d new Event(taskDescription.toString(), from.toString(), to.toString());","lastModifiedDate":"2024-01-22"},{"lineNumber":296,"author":{"gitId":"dillontkh"},"content":"        addToList(task);","lastModifiedDate":"2024-01-22"},{"lineNumber":297,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":298,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":299,"author":{"gitId":"dillontkh"},"content":"    private static void extractEventInfo(ArrayList\u003cString\u003e inputList, int fromIndex, int toIndex,","lastModifiedDate":"2024-01-26"},{"lineNumber":300,"author":{"gitId":"dillontkh"},"content":"                                         StringBuilder taskDescription, StringBuilder from, StringBuilder to) {","lastModifiedDate":"2024-01-26"},{"lineNumber":301,"author":{"gitId":"dillontkh"},"content":"        for (int i \u003d 1; i \u003c fromIndex; i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":302,"author":{"gitId":"dillontkh"},"content":"            if (i !\u003d fromIndex - 1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":303,"author":{"gitId":"dillontkh"},"content":"                taskDescription.append(inputList.get(i)).append(\" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":304,"author":{"gitId":"dillontkh"},"content":"            } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":305,"author":{"gitId":"dillontkh"},"content":"                taskDescription.append(inputList.get(i));","lastModifiedDate":"2024-01-22"},{"lineNumber":306,"author":{"gitId":"dillontkh"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":307,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":308,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":309,"author":{"gitId":"dillontkh"},"content":"        for (int i \u003d fromIndex + 1; i \u003c toIndex; i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":310,"author":{"gitId":"dillontkh"},"content":"            if (i !\u003d toIndex - 1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":311,"author":{"gitId":"dillontkh"},"content":"                from.append(inputList.get(i)).append(\" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":312,"author":{"gitId":"dillontkh"},"content":"            } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":313,"author":{"gitId":"dillontkh"},"content":"                from.append(inputList.get(i));","lastModifiedDate":"2024-01-22"},{"lineNumber":314,"author":{"gitId":"dillontkh"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":315,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":316,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":317,"author":{"gitId":"dillontkh"},"content":"        for (int i \u003d toIndex + 1; i \u003c inputList.size(); i++) {","lastModifiedDate":"2024-01-22"},{"lineNumber":318,"author":{"gitId":"dillontkh"},"content":"            if (i !\u003d inputList.size() - 1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":319,"author":{"gitId":"dillontkh"},"content":"                to.append(inputList.get(i)).append(\" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":320,"author":{"gitId":"dillontkh"},"content":"            } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":321,"author":{"gitId":"dillontkh"},"content":"                to.append(inputList.get(i));","lastModifiedDate":"2024-01-22"},{"lineNumber":322,"author":{"gitId":"dillontkh"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":323,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":324,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":325,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":326,"author":{"gitId":"dillontkh"},"content":"    public static void deleteTaskCommand(ArrayList\u003cString\u003e inputList) throws DukeException {","lastModifiedDate":"2024-01-22"},{"lineNumber":327,"author":{"gitId":"dillontkh"},"content":"        // This means that the user has not supplied any number with the command","lastModifiedDate":"2024-01-22"},{"lineNumber":328,"author":{"gitId":"dillontkh"},"content":"        if (inputList.size() \u003d\u003d 1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":329,"author":{"gitId":"dillontkh"},"content":"            throw new DukeException(\"Please enter the task you wish to delete!\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":330,"author":{"gitId":"dillontkh"},"content":"                    + \"Usage: delete [task number]\");","lastModifiedDate":"2024-01-26"},{"lineNumber":331,"author":{"gitId":"dillontkh"},"content":"        } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":332,"author":{"gitId":"dillontkh"},"content":"            try {","lastModifiedDate":"2024-01-22"},{"lineNumber":333,"author":{"gitId":"dillontkh"},"content":"                int taskIndex \u003d Integer.parseInt(inputList.get(1));","lastModifiedDate":"2024-01-22"},{"lineNumber":334,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":335,"author":{"gitId":"dillontkh"},"content":"                String message \u003d \"Alright, the following task has been removed:\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":336,"author":{"gitId":"dillontkh"},"content":"                        + \"\\t\" + todoList.remove(taskIndex - 1).toString() + \"\\n\";","lastModifiedDate":"2024-01-26"},{"lineNumber":337,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":338,"author":{"gitId":"dillontkh"},"content":"                int listSize \u003d todoList.size();","lastModifiedDate":"2024-01-22"},{"lineNumber":339,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":340,"author":{"gitId":"dillontkh"},"content":"                // \"task\" for singular, \"tasks\" for plural","lastModifiedDate":"2024-01-22"},{"lineNumber":341,"author":{"gitId":"dillontkh"},"content":"                if (listSize \u003d\u003d 1) {","lastModifiedDate":"2024-01-22"},{"lineNumber":342,"author":{"gitId":"dillontkh"},"content":"                    message +\u003d \"You now have \" + listSize + \" task in your list.\";","lastModifiedDate":"2024-01-22"},{"lineNumber":343,"author":{"gitId":"dillontkh"},"content":"                } else {","lastModifiedDate":"2024-01-22"},{"lineNumber":344,"author":{"gitId":"dillontkh"},"content":"                    message +\u003d \"You now have \" + listSize + \" tasks in your list.\";","lastModifiedDate":"2024-01-22"},{"lineNumber":345,"author":{"gitId":"dillontkh"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":346,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":347,"author":{"gitId":"dillontkh"},"content":"                botSays(message);","lastModifiedDate":"2024-01-22"},{"lineNumber":348,"author":{"gitId":"dillontkh"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":349,"author":{"gitId":"dillontkh"},"content":"                throw new DukeException(\"Please enter a number for the delete command.\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":350,"author":{"gitId":"dillontkh"},"content":"                        + \"Usage: delete [task number]\");","lastModifiedDate":"2024-01-26"},{"lineNumber":351,"author":{"gitId":"dillontkh"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":352,"author":{"gitId":"dillontkh"},"content":"                throw new DukeException(\"Are you sure that\u0027s a valid task number? (Tip: use \u0027list\u0027 to check the \"","lastModifiedDate":"2024-01-26"},{"lineNumber":353,"author":{"gitId":"dillontkh"},"content":"                        + \"number of your task!)\\n\" + \"Usage: delete [task number]\");","lastModifiedDate":"2024-01-26"},{"lineNumber":354,"author":{"gitId":"dillontkh"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":355,"author":{"gitId":"dillontkh"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":356,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":357,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":358,"author":{"gitId":"dillontkh"},"content":"    public static void helpCommand() {","lastModifiedDate":"2024-01-23"},{"lineNumber":359,"author":{"gitId":"dillontkh"},"content":"        String message \u003d \"Available commands:\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":360,"author":{"gitId":"dillontkh"},"content":"                + \"list \\t\\t- Lists all your tasks\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":361,"author":{"gitId":"dillontkh"},"content":"                + \"todo \\t\\t- Create a new todo task.\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":362,"author":{"gitId":"dillontkh"},"content":"                + \"deadline \\t- Create a new task with a deadline.\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":363,"author":{"gitId":"dillontkh"},"content":"                + \"event \\t\\t- Create a new task with a starting and ending time.\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":364,"author":{"gitId":"dillontkh"},"content":"                + \"mark \\t\\t- Mark a task as completed.\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":365,"author":{"gitId":"dillontkh"},"content":"                + \"unmark \\t\\t- Mark a task as not completed.\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":366,"author":{"gitId":"dillontkh"},"content":"                + \"delete \\t\\t- Delete a task.\";","lastModifiedDate":"2024-01-26"},{"lineNumber":367,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":368,"author":{"gitId":"dillontkh"},"content":"        botSays(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":369,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"dillontkh":367}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dillontkh"},"content":"// Adapted from partial solution provided on CS2103 website","lastModifiedDate":"2024-01-19"},{"lineNumber":2,"author":{"gitId":"dillontkh"},"content":"public class Task {","lastModifiedDate":"2024-01-19"},{"lineNumber":3,"author":{"gitId":"dillontkh"},"content":"    protected String description;","lastModifiedDate":"2024-01-19"},{"lineNumber":4,"author":{"gitId":"dillontkh"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-19"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":6,"author":{"gitId":"dillontkh"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-19"},{"lineNumber":7,"author":{"gitId":"dillontkh"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-19"},{"lineNumber":8,"author":{"gitId":"dillontkh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-19"},{"lineNumber":9,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":10,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":11,"author":{"gitId":"dillontkh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-19"},{"lineNumber":12,"author":{"gitId":"dillontkh"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-19"},{"lineNumber":13,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":14,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":15,"author":{"gitId":"dillontkh"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-19"},{"lineNumber":16,"author":{"gitId":"dillontkh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-19"},{"lineNumber":17,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":18,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":19,"author":{"gitId":"dillontkh"},"content":"    public void markNotDone() {","lastModifiedDate":"2024-01-19"},{"lineNumber":20,"author":{"gitId":"dillontkh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-19"},{"lineNumber":21,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":22,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-19"},{"lineNumber":23,"author":{"gitId":"dillontkh"},"content":"    @Override","lastModifiedDate":"2024-01-19"},{"lineNumber":24,"author":{"gitId":"dillontkh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-19"},{"lineNumber":25,"author":{"gitId":"dillontkh"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-19"},{"lineNumber":26,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-19"},{"lineNumber":27,"author":{"gitId":"dillontkh"},"content":"}","lastModifiedDate":"2024-01-19"}],"authorContributionMap":{"dillontkh":27}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dillontkh"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-20"},{"lineNumber":2,"author":{"gitId":"dillontkh"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-20"},{"lineNumber":3,"author":{"gitId":"dillontkh"},"content":"        super(description);","lastModifiedDate":"2024-01-20"},{"lineNumber":4,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"","lastModifiedDate":"2024-01-20"},{"lineNumber":6,"author":{"gitId":"dillontkh"},"content":"    @Override","lastModifiedDate":"2024-01-20"},{"lineNumber":7,"author":{"gitId":"dillontkh"},"content":"    public String toString() {","lastModifiedDate":"2024-01-20"},{"lineNumber":8,"author":{"gitId":"dillontkh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-20"},{"lineNumber":9,"author":{"gitId":"dillontkh"},"content":"    }","lastModifiedDate":"2024-01-20"},{"lineNumber":10,"author":{"gitId":"dillontkh"},"content":"}","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"dillontkh":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dillontkh"},"content":"mark","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"dillontkh"},"content":"mark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"dillontkh"},"content":"mark a","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"dillontkh"},"content":"unmark","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"dillontkh"},"content":"unmark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"dillontkh"},"content":"unmark a","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"dillontkh"},"content":"todo","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"dillontkh"},"content":"todo test todo","lastModifiedDate":"2024-01-20"},{"lineNumber":9,"author":{"gitId":"dillontkh"},"content":"mark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"dillontkh"},"content":"unmark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"dillontkh"},"content":"deadline test deadline","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"dillontkh"},"content":"deadline test deadline /by","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"dillontkh"},"content":"deadline test deadline /by now","lastModifiedDate":"2024-01-20"},{"lineNumber":14,"author":{"gitId":"dillontkh"},"content":"event","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"dillontkh"},"content":"event test event","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"dillontkh"},"content":"event test event /from now","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"dillontkh"},"content":"event test event /from now /to later","lastModifiedDate":"2024-01-20"},{"lineNumber":18,"author":{"gitId":"dillontkh"},"content":"mark 2","lastModifiedDate":"2024-01-20"},{"lineNumber":19,"author":{"gitId":"dillontkh"},"content":"mark 3","lastModifiedDate":"2024-01-20"},{"lineNumber":20,"author":{"gitId":"dillontkh"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":21,"author":{"gitId":"dillontkh"},"content":"unmark 2","lastModifiedDate":"2024-01-20"},{"lineNumber":22,"author":{"gitId":"dillontkh"},"content":"unmark 3","lastModifiedDate":"2024-01-20"},{"lineNumber":23,"author":{"gitId":"dillontkh"},"content":"list","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"dillontkh"},"content":"help","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"dillontkh"},"content":"bye","lastModifiedDate":"2024-01-20"}],"authorContributionMap":{"dillontkh":25}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"dillontkh"},"content":"java -classpath ..\\bin Nollid \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"dillontkh":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"dillontkh"},"content":"java -classpath ../bin Nollid \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"dillontkh"},"content":"#cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-01-20"},{"lineNumber":27,"author":{"gitId":"dillontkh"},"content":"#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-01-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"dillontkh"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2024-01-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":34,"dillontkh":4}}]
