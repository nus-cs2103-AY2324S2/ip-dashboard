{"authorDailyContributionsMap":{"Rishit02":[{"date":"2024-01-25","commitResults":[{"hash":"0d07656cd30cd12fbb8b5f907ac5e31fa39b0dec","isMergeCommit":false,"messageTitle":"Rename, Greet and Exit","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":6}}},{"hash":"d4c31097ddd7dfab9af0b562797919edcba9d27b","isMergeCommit":false,"messageTitle":"Echo","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":2}}},{"hash":"0233bc88256c241b137497be27494fb84a449906","isMergeCommit":false,"messageTitle":"Revert \"Echo\"","messageBody":"This reverts commit d4c31097ddd7dfab9af0b562797919edcba9d27b.\n","tags":["Level-1-Echo"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":15}}},{"hash":"b87b8c377429748fa7bb05131edb8a13eede65d9","isMergeCommit":false,"messageTitle":"Echo","messageBody":"","tags":["Level-1-","Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":2}}},{"hash":"7799c0b6c391800e905c61dc0e6b9a8db04b35e8","isMergeCommit":false,"messageTitle":"Add, list","messageBody":"","tags":["Level-2.-Add,-List","Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":1}}},{"hash":"8a65f8c64cdb5f21c15250c85785d42689894d18","isMergeCommit":false,"messageTitle":"Mark as done","messageBody":"Add the ability to mark tasks as done. Optionally, add the ability to change the status back to not done.\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":7}}},{"hash":"d04a3735e307b977e8f2fabe56cb3a94e4c7f1b6","isMergeCommit":false,"messageTitle":"Level 4. ToDos, Events, Deadlines","messageBody":"Add support for tracking three types of tasks:\nToDos: tasks without any date/time attached to it e.g., visit new theme park\nDeadlines: tasks that need to be done before a specific date/time e.g., submit report by 11/10/2019 5pm\nEvents: tasks that start at a specific date/time and ends at a specific date/time\ne.g., (a) team project meeting 2/10/2019 2-4pm (b) orientation week 4/10/2019 to 11/10/2019\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":85,"deletions":33}}},{"hash":"35bb118d1558c5b24165b24f3a6f6220d5fe6130","isMergeCommit":false,"messageTitle":"A-TextUiTesting","messageBody":"Use the input/output redirection technique to semi-automate the testing of Duke.\n","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":0},"java":{"insertions":10,"deletions":7}}}]},{"date":"2024-01-28","commitResults":[{"hash":"16989754bbaca2cc31d2a7106cab91867202813b","isMergeCommit":false,"messageTitle":"Added exceptions","messageBody":"","tags":["Level-6","Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":41}}}]},{"date":"2024-02-04","commitResults":[{"hash":"e6b59b30398c14cf1e7a067d1fa063bccba574ca","isMergeCommit":false,"messageTitle":"Save data to hard disk","messageBody":"Write data to file.\n\nThe data needs to be saved to a file at the end of the operation so that it can be accessed later.\n\nAs a step towards using this data later, data has been saved after end of operation of chatbot.\n","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":142,"deletions":64}}},{"hash":"9abe361ee1e2db12bb7991cb9be60e6c945505ec","isMergeCommit":false,"messageTitle":"Save function","messageBody":"The save function is completed.\n\nThe save function allows for users to load up their previously saved tasks.\n\nThe save function saves to a file called riri.txt in a directory called data. It then loads up the data if the file exists, else it creates a new list.\n","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":1},"java":{"insertions":204,"deletions":80},"bat":{"insertions":1,"deletions":1},"md":{"insertions":2,"deletions":2}}},{"hash":"e05085495803d8a37a50d9efd78cb9b9744313e5","isMergeCommit":true,"messageTitle":"Merge pull request #1 from Rishit02/branch-Level-7","messageBody":"Branch level 7","tags":["Level-7"],"fileTypesAndContributionMap":{}},{"hash":"b461b76c4bd14b60c8bf77495ae4ada124e92402","isMergeCommit":false,"messageTitle":"Dates and Times","messageBody":"Read string and parse it as Java LocalDate objects.\n","fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":9}}},{"hash":"83c8b97510cc6dac17d51f5a9c1da2c56239cc52","isMergeCommit":false,"messageTitle":"Added formatters","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":5}}},{"hash":"d1c15775b0735101e5ba305a6650a3f72be0adfc","isMergeCommit":true,"messageTitle":"Merge pull request #2 from Rishit02/branch-Level-8","messageBody":"Branch level 8","tags":["Level-8"],"fileTypesAndContributionMap":{}}]},{"date":"2024-02-05","commitResults":[{"hash":"9b30d388920c2e132638306776b50c139c45fc15","isMergeCommit":false,"messageTitle":"More OOP","messageBody":"Abstracted out the functionalities of the chatbot, the task list and the storage function.\n","fileTypesAndContributionMap":{"java":{"insertions":230,"deletions":212}}},{"hash":"0365ab09c20ac4a28bbf9517c7a89ced29462b80","isMergeCommit":true,"messageTitle":"Merge pull request #3 from Rishit02/AddIncrements","messageBody":"More OOP","tags":["A-Packages","A-MoreOOP"],"fileTypesAndContributionMap":{}},{"hash":"eab2ed8e8f093baef1171c49b5e0fd37b1d61d3c","isMergeCommit":false,"messageTitle":"Update delete function in tasklist","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":4}}},{"hash":"0822487709344ab29527f4d115894da54a15e30c","isMergeCommit":true,"messageTitle":"Merge remote-tracking branch \u0027upstream/add-gradle-support\u0027","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2024-02-06","commitResults":[{"hash":"0cde2cf176cb9612a922a3b4f09e35af04e786bc","isMergeCommit":false,"messageTitle":"Update TaskList","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":5}}},{"hash":"5d424ec7dc57f0d721f7ae54ad78ca27f05179e1","isMergeCommit":false,"messageTitle":"Use Gradle","messageBody":"Gradle is used. Checkstyle capabilites added.\n","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":8,"deletions":1},"java":{"insertions":59,"deletions":30},"bat":{"insertions":1,"deletions":1},"md":{"insertions":2,"deletions":2}}},{"hash":"172cefc6c7f7b64b284470fd84b9a491a92ddb40","isMergeCommit":false,"messageTitle":"Add JUnit tests","messageBody":"Add JUnit tests.\n\nTest the construction of todo class and deadline class to ensure that tasks created are parsing strings properly.\n","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":64,"deletions":8}}},{"hash":"32c5babf356a0a13b1d96e79da56a76005c6add0","isMergeCommit":false,"messageTitle":"Package the App as a JAR file","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0},"java":{"insertions":11,"deletions":5}}}]},{"date":"2024-02-07","commitResults":[{"hash":"7b091d54b3d2971eb04b2fb72c714d92231e3339","isMergeCommit":false,"messageTitle":"Improve coding standard","messageBody":"Naming conventions are now followed. Changed function names as well as variable names to be more intuitively understood.\n","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":8}}},{"hash":"97ba86827909138303ba59ebb661aa56a110b6bf","isMergeCommit":false,"messageTitle":"Create javadocs.","messageBody":"Add header comments to at least half of the non-private classes/methods.\n","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":112,"deletions":91}}},{"hash":"31e39070cf909370c222cd8fad8ed706d2607b9b","isMergeCommit":false,"messageTitle":"Implement searchTasks method","messageBody":"The searchTasks method has been added to the TaskManager class to facilitate\nefficient searching for tasks based on a specified keyword within their\ndescriptions. This feature addresses the need for users to quickly locate\nrelevant tasks, enhancing the overall usability of the application.\n","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":0}}},{"hash":"af0b5de3438f9d000a3cb1d1de9b31fba07fc050","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-A-CodingStandard\u0027","messageBody":"","fileTypesAndContributionMap":{}},{"hash":"0531e8b5e5631c20d9726fa4d33ac72a41b1c570","isMergeCommit":true,"messageTitle":"Merge branch \u0027branch-Level-9\u0027","messageBody":"","fileTypesAndContributionMap":{}}]},{"date":"2024-02-08","commitResults":[{"hash":"c098d6611bf479bf68932eb6d0227891abc2b676","isMergeCommit":false,"messageTitle":"Add Checkstyle Plugin for Code Quality Checks","messageBody":"Introduce the Checkstyle plugin to the project to enforce coding standards\nand improve code quality. This commit includes the necessary configuration\nfiles and integrates Checkstyle into the build process.\n\n### Why It\u0027s Added\n\n- Enhances code consistency and readability by enforcing a set of coding\n  standards.\n- Identifies potential issues early in the development process, reducing\n  the likelihood of bugs and improving maintainability.\n- Contributes to a more robust and professional codebase.\n\n### What Is Included\n\n- Integration of the Checkstyle plugin into the build process.\n- Addition of Checkstyle configuration files tailored to the project\u0027s\n  coding standards.\n\n### How to Use\n\n- Developers can now run Checkstyle checks using the appropriate build\n  command or IDE integration.\n- Violations of coding standards will be reported, and developers can\n  address them to maintain a high code quality standard.\n\n### Any Other Relevant Info\n\n- Ensure that Checkstyle is configured according to the project\u0027s\n  conventions and requirements.\n- Refer to the project\u0027s documentation for guidelines on resolving\n  Checkstyle violations.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":6}}},{"hash":"768d48406d7d663af875275d21896ec8a93e593f","isMergeCommit":false,"messageTitle":"Add Checkstyle Plugin for Code Quality Checks","messageBody":"Introduce the Checkstyle plugin to the project to enforce coding standards\nand improve code quality. This commit includes the necessary configuration\nfiles and integrates Checkstyle into the build process.\n","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":6}}},{"hash":"6621bd194380444817b59c800611d2cf4802ad81","isMergeCommit":false,"messageTitle":"Enhance Date Parsing and User Communication","messageBody":"Improve the date parsing mechanism to handle various date formats more\nrobustly and enhance the communication with users regarding date-related\ninputs. This commit aims to make date-related functionalities more\nuser-friendly and less error-prone.\nWhat\u0027s Improved\n\n1. **Date Parsing Mechanism:**\n   - Refactor the date parsing logic to handle a wider range of date\n     formats.\n   - Enhance error handling for invalid date inputs, providing more\n     informative error messages.\n\n2. **User Communication:**\n   - Improve user prompts and error messages related to date inputs.\n   - Clearly communicate expected date formats to users for better\n     understanding.\n\nWhy It\u0027s Improved\n\n- Users may input dates in various formats, and the previous parsing\n  mechanism had limitations.\n- Enhancing user communication helps prevent date-related input errors,\n  providing a more intuitive experience.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"18d1b683e6801d7eefbb0837585bb5924f8fbcae","isMergeCommit":false,"messageTitle":"Improve User Input Handling Logic  Enhance the chatbot\u0027s user input processing logic to provide a more responsive and accurate interaction with users. This commit focuses on improving the understanding and handling of various user inputs for better overall chatbot performance.","messageBody":"### What\u0027s Improved\n\n1. **Enhanced User Input Parsing:**\n   - Refactor the user input parsing mechanism for improved accuracy.\n   - Handle a broader range of user inputs with increased robustness.\n\n2. **Contextual Understanding:**\n   - Improve the chatbot\u0027s ability to understand user inputs within the\n     context of the conversation.\n   - Enhance contextual relevance for more natural and coherent responses.\n\n3. **Error Handling:**\n   - Implement better error handling for unexpected or ambiguous user\n     inputs.\n   - Provide clearer error messages to guide users in refining their\n     queries.\n### Why It\u0027s Improved\n\n- Users may provide diverse inputs, and refining the input processing\n  logic ensures a more seamless and user-friendly chatbot experience.\n- Contextual understanding enhances the chatbot\u0027s ability to maintain\n  coherent conversations with users.\n\n### How It Benefits Users\n\n- Users will experience a more intuitive interaction with the chatbot,\n  as it can now better interpret a wider variety of inputs.\n- Improved error handling contributes to a more user-friendly experience\n  by guiding users in case of input issues.\n\n### Any Other Relevant Info\n\n- Ensure that the updated logic aligns with the chatbot\u0027s overall\n  objectives and conversation flow.\n- Thoroughly test the chatbot\u0027s responses with a variety of user inputs\n  to verify the improvements.\n","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":9}}},{"hash":"bb23cfe541018768135f894028828e8d79deef91","isMergeCommit":false,"messageTitle":"Enhance Code Clarity with Additional Comments  Introduce comprehensive comments throughout the codebase to improve readability and provide valuable insights for fellow developers. This commit focuses on enhancing code documentation to facilitate better understanding and maintainability.","messageBody":"### What\u0027s Improved\n\n1. **Code Comments:**\n   - Add inline comments to explain complex or non-trivial sections of\n     the code.\n   - Provide clarifying comments for variable declarations, method\n     invocations, and decision points.\n\n2. **Documentation Updates:**\n   - Enhance Javadoc comments for public methods, specifying their\n     functionality and expected inputs/outputs.\n   - Review and update existing comments to ensure accuracy and\n     relevance.\n\n### Why It\u0027s Improved\n\n- Improved code documentation contributes to a more collaborative\n  development environment, where team members can quickly grasp the\n  purpose and functionality of various code components.\n- Increased clarity in comments reduces the learning curve for new\n  developers joining the project.\n\n### How It Benefits Developers\n\n- Developers can now navigate and understand the codebase more\n  efficiently.\n- Comprehensive comments serve as valuable documentation, aiding in\n  troubleshooting, debugging, and future enhancements.\n\n### Any Other Relevant Info\n\n- Maintain consistency in commenting style and conventions throughout\n  the codebase.\n- Encourage ongoing documentation practices to keep the codebase\n  well-documented and accessible.\n","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":0}}}]}]},"authorFileTypeContributionMap":{"Rishit02":{"java":562,"md":2,"fxml":0,"sh":0,"bat":1,"gradle":9,"txt":6}},"authorContributionVariance":{"Rishit02":26102.916},"authorDisplayNameMap":{"Rishit02":"CS2103T-W12-4 RISH..LWAL"}}
