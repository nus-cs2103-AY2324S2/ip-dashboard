[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"# Leto project template","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the [Dune character, Duke Leto Atreides](https://dune.fandom.com/wiki/Leto_Atreides_I/2021_film). Given below are instructions on how to use it.","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"0. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"2. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"3. Gradle should be set up, click `ip [run]` to run the GUI application.  ","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"---","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"# Copyrights","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"Fair use. Copyright belongs to their respective owners.  ","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"[Vanity Fair - Behold Dune](https://static.wikia.nocookie.net/dune/images/d/d0/Dune_2020_Duke_Leto_Atreides.jpg/revision/latest/scale-to-width-down/1000?cb\u003d20200414181224)  ","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"[Rebecca Ferguson and Timoth√©e Chalamet in Dune (2021)](https://www.imdb.com/title/tt1160419/mediaviewer/rm1265737985/)  ","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"-":11,"camille-readbean":13}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"camille-readbean"},"content":"    mainClass.set(\"me.ruibin.leto.Launcher\")","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"camille-readbean"},"content":"    archiveBaseName \u003d \"leto\"","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"camille-readbean"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"camille-readbean"},"content":"checkstyle {","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"camille-readbean"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"-":40,"camille-readbean":23}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"# Leto User Guide","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"![Screenshot of Leto\u0027s GUI](Ui.png)","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"**Leto** is a powerful and intuitive task management application designed to help you keep track of your daily tasks","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"efficiently. Whether you\u0027re managing deadlines, events, or simple to-do items, Leto provides a streamlined and ","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"user-friendly interface to enhance your productivity. It also supports saving to a portable CSV format so you","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"can import them into a spreadsheet tool like Excel or Google Drive.","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"## Quick start","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"1. Ensure you have Java 11 installed.","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"2. Download the latest version of Leto from [here, under assets, `leto.jar`](https://github.com/camille-readbean/ip/releases/)","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"3. Copy the downloaded `.jar` file to a folder you want to use as the _home folder_ for __Leto__.","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"4. You can run the `leto.jar` directly.","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"## Features","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"### Notes about command format","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"**Leto** follow the format ","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"```bash","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"command \u003cdetail\u003e /options \u003coption details\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"```","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"In most cases, commands are case-insensitive. However, the order of the arguments matter and unless","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"specified, it is compulsory. Options are also **case-sensitive**. ","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"Where needed, index starts from 1, same as the output of `list`.","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"### List of features","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"1. [List of All Tasks](#listing-all-tasks)","lastModifiedDate":"2024-02-17"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"2. [Marking a Task as Done](#marking-a-task-as-done)","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"3. [Unmarking a Task](#unmarking-a-task)","lastModifiedDate":"2024-02-17"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"4. [Adding a Todo](#adding-a-todo)","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"5. [Adding Deadlines](#adding-deadlines)","lastModifiedDate":"2024-02-17"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"6. [Adding Events](#adding-events)","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"7. [Finding a Task](#finding-a-task)","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"8. [Snoozing a Deadline](#snoozing-a-deadline)","lastModifiedDate":"2024-02-17"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"9. [Displaying the help message](#displaying-the-help-message)","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"10. [Saving Tasks](#saving-tasks)","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"11. [Exiting the Application](#exiting-the-application)","lastModifiedDate":"2024-02-17"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"12. [CSV Storage format](#csv-storage-format)  ","lastModifiedDate":"2024-02-17"},{"lineNumber":40,"author":{"gitId":"camille-readbean"},"content":"    a. [File recovery](#file-recovery)   ","lastModifiedDate":"2024-02-17"},{"lineNumber":41,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"camille-readbean"},"content":"### Listing all tasks","lastModifiedDate":"2024-02-17"},{"lineNumber":43,"author":{"gitId":"camille-readbean"},"content":"To list all your tasks, use the `list` command. This command displays all tasks you have added in Leto, regardless of their type (todo, deadline, or event).","lastModifiedDate":"2024-02-17"},{"lineNumber":44,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":45,"author":{"gitId":"camille-readbean"},"content":"Format: `list`","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"camille-readbean"},"content":"### Marking a Task as Done","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"camille-readbean"},"content":"To mark a task as completed, use the `mark` command followed by the task index.","lastModifiedDate":"2024-02-17"},{"lineNumber":49,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"camille-readbean"},"content":"Format: `mark \u003cindex\u003e`","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"camille-readbean"},"content":"Example: `mark 1` - Mark task 1 in the list as done.","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"camille-readbean"},"content":"### Unmarking a Task","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"camille-readbean"},"content":"If you accidentally marked a task as done, you can revert it using the `unmark` command followed by the task index.","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"camille-readbean"},"content":"Example: `unmark \u003cindex\u003e`","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"camille-readbean"},"content":"Example: `unmark 1` - Mark task 1 in the list as done.","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"camille-readbean"},"content":"### Adding a Todo","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"camille-readbean"},"content":"To add a task without a specific deadline or time, use the `todo` command followed by the task details.","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"camille-readbean"},"content":"Format: `todo \u003cdetails\u003e`","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"camille-readbean"},"content":"Example: `todo Read a book` - Add a to-do task with the description \"Read a book\".","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"camille-readbean"},"content":"### Adding Deadlines","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"camille-readbean"},"content":"To add a task with a specific due date, use the `deadline` command followed by the description and the date in YYYY-MM-DD format.","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"camille-readbean"},"content":"Format: `deadline \u003cdescription\u003e /by \u003cdate\u003e`","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"camille-readbean"},"content":"Example: `deadline Submit report /by 2024-03-01` - Add a deadline task \"Submit report\" due by March 1, 2024.","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"camille-readbean"},"content":"### Adding Events","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"camille-readbean"},"content":"To add an event, use the `event` command with the event details, start time, and end time in YYYY-MM-DD format.","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"camille-readbean"},"content":"Format: `event \u003cdetails\u003e /from \u003cstart_time\u003e /to \u003cend_time\u003e`","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"camille-readbean"},"content":"Example: `event Team meeting /from 2024-03-01 /to 2024-03-02` - Schedule an event \"Team meeting\" from March 1 to March 2, 2024.","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"camille-readbean"},"content":"### Finding a Task","lastModifiedDate":"2024-02-17"},{"lineNumber":84,"author":{"gitId":"camille-readbean"},"content":"To find a specific task by keyword, use the `find` command.","lastModifiedDate":"2024-02-17"},{"lineNumber":85,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":86,"author":{"gitId":"camille-readbean"},"content":"Format: `find \u003ckeyword\u003e`","lastModifiedDate":"2024-02-17"},{"lineNumber":87,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":88,"author":{"gitId":"camille-readbean"},"content":"Example: `find report` - Search for tasks containing the keyword \"report\".","lastModifiedDate":"2024-02-17"},{"lineNumber":89,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":90,"author":{"gitId":"camille-readbean"},"content":"### Snoozing a Deadline","lastModifiedDate":"2024-02-17"},{"lineNumber":91,"author":{"gitId":"camille-readbean"},"content":"To postpone a deadline, use the `snooze` command followed by the task index and the number of days to postpone.","lastModifiedDate":"2024-02-17"},{"lineNumber":92,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":93,"author":{"gitId":"camille-readbean"},"content":"Format: `snooze \u003ctask number\u003e /by \u003cnumber\u003e d[ays]`","lastModifiedDate":"2024-02-17"},{"lineNumber":94,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":95,"author":{"gitId":"camille-readbean"},"content":"Example: `snooze 3 /by 2 days` - Postpone the deadline of the third task by two days.","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":97,"author":{"gitId":"camille-readbean"},"content":"### Displaying the Help Message","lastModifiedDate":"2024-02-17"},{"lineNumber":98,"author":{"gitId":"camille-readbean"},"content":"To view all available commands and their formats, use the `help` command.","lastModifiedDate":"2024-02-17"},{"lineNumber":99,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":100,"author":{"gitId":"camille-readbean"},"content":"Format: `help`","lastModifiedDate":"2024-02-17"},{"lineNumber":101,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":102,"author":{"gitId":"camille-readbean"},"content":"### Saving Tasks","lastModifiedDate":"2024-02-17"},{"lineNumber":103,"author":{"gitId":"camille-readbean"},"content":"To save your tasks to persistent storage, use the `save` command. This ensures that your tasks are not lost after closing the application.","lastModifiedDate":"2024-02-17"},{"lineNumber":104,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":105,"author":{"gitId":"camille-readbean"},"content":"Format: `save`","lastModifiedDate":"2024-02-17"},{"lineNumber":106,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":107,"author":{"gitId":"camille-readbean"},"content":"### Exiting the Application","lastModifiedDate":"2024-02-17"},{"lineNumber":108,"author":{"gitId":"camille-readbean"},"content":"To exit Leto, use the `bye` command.  ","lastModifiedDate":"2024-02-17"},{"lineNumber":109,"author":{"gitId":"camille-readbean"},"content":"`quit` and `exit` are aliases to `bye`.  ","lastModifiedDate":"2024-02-17"},{"lineNumber":110,"author":{"gitId":"camille-readbean"},"content":"Any of them will cause the program to **save** and then exit.","lastModifiedDate":"2024-02-17"},{"lineNumber":111,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":112,"author":{"gitId":"camille-readbean"},"content":"Format: `bye`, `quit`, `exit`","lastModifiedDate":"2024-02-17"},{"lineNumber":113,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":114,"author":{"gitId":"camille-readbean"},"content":"## CSV storage format","lastModifiedDate":"2024-02-17"},{"lineNumber":115,"author":{"gitId":"camille-readbean"},"content":"Tasks are stored in the format in the file `Leto-Tasks.csv` next to where you run it.  ","lastModifiedDate":"2024-02-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":117,"author":{"gitId":"camille-readbean"},"content":"Type,Completed,Task,By,From,To","lastModifiedDate":"2024-02-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":120,"author":{"gitId":"camille-readbean"},"content":"Example of a file:","lastModifiedDate":"2024-02-17"},{"lineNumber":121,"author":{"gitId":"camille-readbean"},"content":"```","lastModifiedDate":"2024-02-17"},{"lineNumber":122,"author":{"gitId":"camille-readbean"},"content":"D,N,CS3230 Programming Assignment 1,2024-02-19,,","lastModifiedDate":"2024-02-17"},{"lineNumber":123,"author":{"gitId":"camille-readbean"},"content":"E,N,Talk about Pi,,2024-02-22,2024-02-22","lastModifiedDate":"2024-02-17"},{"lineNumber":124,"author":{"gitId":"camille-readbean"},"content":"T,Y,Get back to Prof about project,,,","lastModifiedDate":"2024-02-17"},{"lineNumber":125,"author":{"gitId":"camille-readbean"},"content":"D,N,Project 2000 words report,2024-02-17,,","lastModifiedDate":"2024-02-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":127,"author":{"gitId":"camille-readbean"},"content":"```","lastModifiedDate":"2024-02-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":129,"author":{"gitId":"camille-readbean"},"content":"In case of any corrupted entries, it will **wipe** the list.  ","lastModifiedDate":"2024-02-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2021-07-17"},{"lineNumber":131,"author":{"gitId":"camille-readbean"},"content":"### File Recovery","lastModifiedDate":"2024-02-17"},{"lineNumber":132,"author":{"gitId":"camille-readbean"},"content":"If **Leto** indicates the file is corrupted, it will start","lastModifiedDate":"2024-02-17"},{"lineNumber":133,"author":{"gitId":"camille-readbean"},"content":"with an empty list.","lastModifiedDate":"2024-02-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":135,"author":{"gitId":"camille-readbean"},"content":"‚õî Do not quit or save the program. ","lastModifiedDate":"2024-02-17"},{"lineNumber":136,"author":{"gitId":"camille-readbean"},"content":"Open up the `Leto-Tasks.csv` as fast as possible and","lastModifiedDate":"2024-02-17"},{"lineNumber":137,"author":{"gitId":"camille-readbean"},"content":"copy it somewhere else. ","lastModifiedDate":"2024-02-17"},{"lineNumber":138,"author":{"gitId":"camille-readbean"},"content":"Because of the human-readable nature of the file, you might be able to","lastModifiedDate":"2024-02-17"},{"lineNumber":139,"author":{"gitId":"camille-readbean"},"content":"manually recover it.","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"-":16,"camille-readbean":123}},{"path":"src/main/java/me/ruibin/leto/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"public class Launcher {","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"camille-readbean":13}},{"path":"src/main/java/me/ruibin/leto/Leto.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.parser.Parser;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.parser.Result;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.ui.Ui;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"/** Main program for Leto. Singleton class. */","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"public class Leto {","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"    private static final Leto leto \u003d new Leto();","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"    private Leto() {","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"        Ui.letoLogo();","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"    public static Leto getLeto() {","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"        return leto;","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"        Parser.readExecuteLoop();","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"     * Returns Result from parsing and reading user\u0027s input.","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"    public Result getResponse(String inputs) {","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"        return Parser.readAndExecute(inputs);","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"camille-readbean":30}},{"path":"src/main/java/me/ruibin/leto/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.ui.MainWindow;","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":" * A GUI for Leto using FXML.","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"    private Leto leto \u003d Leto.getLeto();","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"            stage.setTitle(\"Duke Leto\");","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setLeto(leto);","lastModifiedDate":"2024-02-17"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"            stage.show();","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"camille-readbean":34}},{"path":"src/main/java/me/ruibin/leto/parser/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.ui.Ui;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"/** Save tasks and exit by returning \u003ccode\u003eResults.EXIT\u003c/code\u003e*/","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"public class ByeCommand implements Function\u003cString, Result\u003e {","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"    public Result apply(String s) {","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"        Result r \u003d TaskList.saveTasks();","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"        r.updateType(ResultTypes.EXIT);","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"        r.updateMessage(Ui.letoSpeak(\"Bye\\nHere I am, Here I remain\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"        return r;","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"camille-readbean":17}},{"path":"src/main/java/me/ruibin/leto/parser/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"enum Commands {","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"    BYE(new ByeCommand()),","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"    EXIT(new ByeCommand()),","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"    QUIT(new ByeCommand()),","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"    LIST(new ListCommand()),","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"    TODO(new NewTaskCommand()),","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"    EVENT(new NewTaskCommand()),","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"    DEADLINE(new NewTaskCommand()),","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"    MARK(new MarkCommand()),","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"    UNMARK(new UnmarkCommand()),","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"    DELETE(new DeleteCommand()),","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"    SAVE(new SaveCommand()),","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"    HELP(new HelpCommand()),","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"    DEFAULT(new HelpCommand()),","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"    FIND(new FindCommand()),","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"    SNOOZE(new SnoozeCommand());","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"    private final Function\u003cString, Result\u003e commandAction;","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"    Commands(Function\u003cString, Result\u003e function) {","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"        this.commandAction \u003d function;","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"    /** Run the specific command. */","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"    public Result run(String inputs) {","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"        return this.commandAction.apply(inputs);","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"camille-readbean":31}},{"path":"src/main/java/me/ruibin/leto/parser/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"/** Deletes task and returns \u003ccode\u003eResultTypes.OK\u003c/code\u003e*/","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"public class DeleteCommand implements Function\u003cString, Result\u003e {","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"    public Result apply(String s) {","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"        return TaskList.deleteTask(s);","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"camille-readbean":13}},{"path":"src/main/java/me/ruibin/leto/parser/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.parser;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import static me.ruibin.leto.ui.Ui.letoSpeak;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import java.util.List;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.Task;","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.TaskList;","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.ui.Ui;","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"/** Command for printing tasks found by a keyword search. */","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"public class FindCommand implements Function\u003cString, Result\u003e {","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"     * Run a keyword search in task message from the keyword extracted from the command.","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"     * Prints output as a list","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"     * @param command the command from the user","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"     * @return \u003ccode\u003eResult\u003c/code\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"    public Result apply(String command) {","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"        String[] parts \u003d command.split(\" \");","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"        Result r \u003d Result.makeResultOk(\"\");","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"            r.updateMessage(Ui.shortSay(\"find command: find \u003ckeyword\u003e, please ensure no space in between\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"            return r;","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"        String keyword \u003d parts[1];","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"        Stream\u003cTask\u003e taskStream \u003d TaskList.getTasks().stream();","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"        StringBuilder outputListMessage \u003d new StringBuilder(\"Tasks matching \\\"\" + keyword + \"\\\":\\n\");","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"        List\u003cTask\u003e filteredTasks \u003d taskStream.filter((task) -\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"                task.toCsvString().split(\",\")[2].contains(keyword)).collect(Collectors.toList());","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"        for (int index \u003d 0; index \u003c filteredTasks.size(); index++) {","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"            outputListMessage.append(index + 1).append(\". \").append(filteredTasks.get(index)).append(\"\\n\");","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"            index++;","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"camille-readbean"},"content":"        r.updateMessage(letoSpeak(outputListMessage.toString()));","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"camille-readbean"},"content":"        return r;","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"camille-readbean":43}},{"path":"src/main/java/me/ruibin/leto/parser/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"/** Prints help message and returns \u003ccode\u003eResult\u003c/code\u003e of type \u003ccode\u003eResultTypes.OK\u003c/code\u003e*/","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"public class HelpCommand implements Function\u003cString, Result\u003e {","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"    public Result apply(String s) {","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"        return Result.makeResultOk(Ui.letoHelp());","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"camille-readbean":13}},{"path":"src/main/java/me/ruibin/leto/parser/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"/** Prints the list of tasks and returns \u003ccode\u003eResultTypes.OK\u003c/code\u003e*/","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"public class ListCommand implements Function\u003cString, Result\u003e {","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"    public Result apply(String s) {","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"        return TaskList.printList();","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"camille-readbean":13}},{"path":"src/main/java/me/ruibin/leto/parser/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"/** Marks task as completed and returns \u003ccode\u003eResult\u003c/code\u003e*/","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"public class MarkCommand implements Function\u003cString, Result\u003e {","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"    public Result apply(String s) {","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"        return TaskList.markTaskCompleted(s);","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"camille-readbean":13}},{"path":"src/main/java/me/ruibin/leto/parser/NewTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.Deadline;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.Event;","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.InvalidTaskException;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.Task;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.Todo;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"/** Read input for new task to add to list and returns \u003ccode\u003eResultTypes.OK\u003c/code\u003e*/","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"public class NewTaskCommand implements Function\u003cString, Result\u003e {","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"    public Result apply(String s) {","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"        Result r \u003d Result.makeResultOk(\"\");","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"            Task t \u003d null;","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"            String typeOfTask \u003d s.split(\" \")[0];","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"            switch (typeOfTask.toLowerCase()) {","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"            case \"event\":","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"                t \u003d Event.eventFromCommand(s);","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"                break;","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"                t \u003d Deadline.deadlineFromCommand(s);","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"                break;","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"                t \u003d Todo.todoFromCmd(s);","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"                break;","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"            default:","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"                assert false : \"Should never reach here, means parser failed\";","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"            } // end switch for type of task","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"            assert t !\u003d null : \"t should be a created task by now\";","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"            r.updateMessage(TaskList.addToList(t).getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"            r.updateWithException(e.printException(), e);","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"        return r;","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"camille-readbean":40}},{"path":"src/main/java/me/ruibin/leto/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":" * Class for Parsing command and carrying out commands.","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"public class Parser {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"    private static Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"    public Parser() {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"     * Reads user inputs and parse it, running the resulting command.","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"     * Loops until it encounters a command that returns \u003ccode\u003eResultTypes.EXIT\u003c/code\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"    public static void readExecuteLoop() {","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"        boolean isBye \u003d false;","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"        while (!isBye) {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"            String inputs \u003d sc.nextLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"            try {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"                Result r \u003d readAndExecute(inputs);","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"                if (r.getType().equals(ResultTypes.EXIT)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"                    isBye \u003d true;","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"                } else if (r.getType().equals(ResultTypes.ERROR)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"                    Ui.shortSay(\"Error encountered!\\n\" + r.getLatestException().getMessage());","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"            } catch (ArrayIndexOutOfBoundsException | IllegalArgumentException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"                Commands.HELP.run(\"\");","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"            } // End try","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"        } // End command while loop","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"        System.out.println(\"  \u003c\u003cDuke Leto\u003e\u003e\\n  \u003e Here I am, Here I remain\");","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"camille-readbean"},"content":"     * Returns results from reading and running user inputs.","lastModifiedDate":"2024-02-17"},{"lineNumber":42,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"camille-readbean"},"content":"     * @param inputs String of the input","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"camille-readbean"},"content":"     * @return Result containing type, message and exception if any.","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"camille-readbean"},"content":"    public static Result readAndExecute(String inputs) {","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"camille-readbean"},"content":"        String[] commands \u003d inputs.split(\" \");","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"camille-readbean"},"content":"        Commands cmd;","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"camille-readbean"},"content":"            cmd \u003d Commands.valueOf(commands[0].toUpperCase());","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"camille-readbean"},"content":"            assert cmd !\u003d null : \"Command is null, should never happen\";","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"camille-readbean"},"content":"            return cmd.run(inputs);","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"camille-readbean"},"content":"        } catch (ArrayIndexOutOfBoundsException | IllegalArgumentException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"camille-readbean"},"content":"            return Commands.HELP.run(\"\");","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"camille-readbean":57}},{"path":"src/main/java/me/ruibin/leto/parser/Result.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.parser;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":" * Class for storing status of commands and output to be printed so far.","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":" * Contains the latestException if any.","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"public class Result {","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"    private ResultTypes type;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"    private StringBuilder messageBuilder;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"    private Exception latestException;","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"    private Result(ResultTypes type, String message, Exception e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"        this.messageBuilder \u003d new StringBuilder(message);","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"        this.latestException \u003d e;","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"    public static Result makeResultOk(String message) {","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"        return new Result(ResultTypes.OK, message, null);","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"    public static Result makeResultError(String message, Exception e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"        return new Result(ResultTypes.ERROR, message, e);","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"    public static Result makeResultExit(String message) {","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"        return new Result(ResultTypes.EXIT, message, null);","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"     * Return current StringBuilder with appended messages.","lastModifiedDate":"2024-02-17"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"     * @param message new message to be appended.","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"     * @return Appended message builder.","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"    public StringBuilder updateMessage(String message) {","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"        messageBuilder.append(message);","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"        return messageBuilder;","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"camille-readbean"},"content":"     * Ideally only have one exception, but sometimes there is no need to carry","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"camille-readbean"},"content":"     * everything up. Changes the exception carried to this.","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"camille-readbean"},"content":"     * @param e Lastest exception while calling the function.","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"camille-readbean"},"content":"    public void updateException(Exception e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"camille-readbean"},"content":"        latestException \u003d e;","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"camille-readbean"},"content":"     * Changes the result type.","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"camille-readbean"},"content":"     * @param newType new Result Type.","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"camille-readbean"},"content":"    public void updateType(ResultTypes newType) {","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"camille-readbean"},"content":"        type \u003d newType;","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"camille-readbean"},"content":"     * Return type of result.","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"camille-readbean"},"content":"     * @return The type part of \u003ccode\u003eResultTypes\u003c/code\u003e.","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"camille-readbean"},"content":"    public ResultTypes getType() {","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"camille-readbean"},"content":"        return type;","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"camille-readbean"},"content":"     * Update result to become of type Error and update message and","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"camille-readbean"},"content":"     * exception stored.","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"camille-readbean"},"content":"     * @param message New message to append.","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"camille-readbean"},"content":"     * @param e Latest Exception to store.","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"camille-readbean"},"content":"    public void updateWithException(String message, Exception e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"camille-readbean"},"content":"        type \u003d ResultTypes.ERROR;","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"camille-readbean"},"content":"        messageBuilder.append(message);","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"camille-readbean"},"content":"        latestException \u003d e;","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"camille-readbean"},"content":"    public String getMessage() {","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"camille-readbean"},"content":"        return messageBuilder.toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":86,"author":{"gitId":"camille-readbean"},"content":"    public Exception getLatestException() {","lastModifiedDate":"2024-02-13"},{"lineNumber":87,"author":{"gitId":"camille-readbean"},"content":"        return latestException;","lastModifiedDate":"2024-02-13"},{"lineNumber":88,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":89,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"camille-readbean":89}},{"path":"src/main/java/me/ruibin/leto/parser/ResultTypes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"/** Enum containing possible outcome produced by Command that ran */","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"public enum ResultTypes {","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"    EXIT,","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"    OK,","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"    ERROR","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"camille-readbean":8}},{"path":"src/main/java/me/ruibin/leto/parser/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"/** Save tasks and returns \u003ccode\u003eResultTypes.OK\u003c/code\u003e*/","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"public class SaveCommand implements Function\u003cString, Result\u003e {","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"    public Result apply(String s) {","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"        return TaskList.saveTasks();","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"camille-readbean":13}},{"path":"src/main/java/me/ruibin/leto/parser/SnoozeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.parser;","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-15"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.Deadline;","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.InvalidTaskException;","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.Task;","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.TaskList;","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.ui.Ui;","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"/** Command Class for snoozing a Deadline */","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"public class SnoozeCommand implements Function\u003cString, Result\u003e {","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"     * Extends the deadline of a specified task.","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"     * @param command the command from the user","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"     * @return \u003ccode\u003eResult\u003c/code\u003e","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"    public Result apply(String command) {","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"        Result r \u003d Result.makeResultOk(\"\");","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"        Pattern pattern \u003d Pattern.compile(\"(?i)snooze (\\\\d+) /by (\\\\d+)\\\\s*(d|da|day|days)?\");","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"        Matcher matcher \u003d pattern.matcher(command);","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"            r.updateMessage(Ui.shortSay(\"Invalid command format. Use: snooze \u003ctask number\u003e /by \u003cnumber\u003e d[ays]\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"            return r;","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"            int index \u003d Integer.parseInt(matcher.group(1)) - 1; // Adjust for 0-based indexing","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"            int days \u003d Integer.parseInt(matcher.group(2));","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"            Task task \u003d TaskList.getTaskByIndex(index);","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"            if (!(task instanceof Deadline)) {","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"                throw new InvalidTaskException(\"Only deadline tasks can be snoozed.\");","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"camille-readbean"},"content":"            Deadline dl \u003d (Deadline) task;","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"camille-readbean"},"content":"            dl.extendDeadline(days);","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"camille-readbean"},"content":"            r.updateMessage(Ui.letoSpeak(\"Deadline extended by \" + days + \" days for task: \" + task));","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"camille-readbean"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"camille-readbean"},"content":"            r.updateWithException(\"Invalid task index or day count.\", e);","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"camille-readbean"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"camille-readbean"},"content":"            r.updateWithException(e.printException(), e);","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"camille-readbean"},"content":"        return r;","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"camille-readbean":51}},{"path":"src/main/java/me/ruibin/leto/parser/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.util.function.Function;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"/** Marks task as uncompleted and returns \u003ccode\u003eResult\u003c/code\u003e*/","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"public class UnmarkCommand implements Function\u003cString, Result\u003e {","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"    public Result apply(String s) {","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"        return TaskList.markTaskUncompleted(s);","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"camille-readbean":13}},{"path":"src/main/java/me/ruibin/leto/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import java.io.File;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"import java.io.UncheckedIOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.parser.Result;","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.Deadline;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.Event;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.InvalidTaskException;","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.Todo;","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"/**  returns \u003ccode\u003eResultTypes.OK\u003c/code\u003e*/","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"public class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"    private static final String PATH_TO_STORE \u003d \"Leto-Tasks.csv\";","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"     * Read the files, takes in a ArrayList of taskLists and","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"     * populates it. Throws Error if file is invalid.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"     * If file is not found, will create one by default.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"    public static Result readFile() {","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"        Result result \u003d Result.makeResultOk(\"\");","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(PATH_TO_STORE));","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"            result.updateMessage(","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"                Ui.letoSpeak(\"We found an existing file, will attempt to import it to the list\\nGive me a while\")","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"            );","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"            File f \u003d new File(PATH_TO_STORE);","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"camille-readbean"},"content":"            String absPath \u003d f.getAbsolutePath();","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"camille-readbean"},"content":"            result.updateMessage(Ui.shortSay(\"File path: \" + absPath));","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"camille-readbean"},"content":"            String entry \u003d br.readLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"camille-readbean"},"content":"            List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"camille-readbean"},"content":"            while (entry !\u003d null) {","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"camille-readbean"},"content":"                taskList.add(readEntry(entry));","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"camille-readbean"},"content":"                entry \u003d br.readLine();","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"camille-readbean"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"camille-readbean"},"content":"            Task[] t \u003d new Task[taskList.size()];","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"camille-readbean"},"content":"            taskList.toArray(t);","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"camille-readbean"},"content":"            TaskList.addToList(t);","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"camille-readbean"},"content":"            return result;","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"camille-readbean"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"camille-readbean"},"content":"            String message \u003d Ui.letoSpeak(\"We did not find an existing file containing tasks\"","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"camille-readbean"},"content":"                    + \"\\n  We will carry on without a blank list\");","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"camille-readbean"},"content":"            result.updateWithException(message, e);","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"camille-readbean"},"content":"        } catch (UncheckedIOException | IOException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"camille-readbean"},"content":"            String message \u003d Ui.letoSpeak(\"Blast! Ran into error while reading the file.\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"camille-readbean"},"content":"                    + \"We will proceed with an empty list.\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"camille-readbean"},"content":"            result.updateWithException(message, e);","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"camille-readbean"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"camille-readbean"},"content":"            String message \u003d Ui.letoSpeak(\"File might be corrupted\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"camille-readbean"},"content":"                    + \"Full error report below: \" + e);","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"camille-readbean"},"content":"            result.updateWithException(message, e);","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"camille-readbean"},"content":"        return result;","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"camille-readbean"},"content":"     * Read an entry from the file into a Task and returns the task object.","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"camille-readbean"},"content":"     * Throws Error if entry is invalid.","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"camille-readbean"},"content":"     * If file is not found, will create one by default.","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"camille-readbean"},"content":"     * @return A task specified by the csv entry","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"camille-readbean"},"content":"     * @throws InvalidTaskException entry cannot be parsed.","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":76,"author":{"gitId":"camille-readbean"},"content":"    private static Task readEntry(String entry) throws InvalidTaskException {","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"camille-readbean"},"content":"        String[] parts \u003d entry.split(\",\");","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"camille-readbean"},"content":"        switch (parts[0]) {","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"camille-readbean"},"content":"        case \"T\":","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"camille-readbean"},"content":"            return Todo.todoFromCsv(entry);","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"camille-readbean"},"content":"        case \"D\":","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"camille-readbean"},"content":"            return Deadline.deadlineFromCsv(entry);","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"camille-readbean"},"content":"        case \"E\":","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"camille-readbean"},"content":"            return Event.eventFromCsv(entry);","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"camille-readbean"},"content":"        default:","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"camille-readbean"},"content":"            throw new InvalidTaskException(\"Bad command for creating new entry\");","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"camille-readbean"},"content":"     * Write the current task lists to a csv file.","lastModifiedDate":"2024-02-08"},{"lineNumber":92,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"camille-readbean"},"content":"    public static Result writeFile() {","lastModifiedDate":"2024-02-13"},{"lineNumber":94,"author":{"gitId":"camille-readbean"},"content":"        int saved \u003d 0;","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"camille-readbean"},"content":"        Result result \u003d Result.makeResultOk(\"\");","lastModifiedDate":"2024-02-13"},{"lineNumber":96,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"camille-readbean"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(PATH_TO_STORE));","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"camille-readbean"},"content":"            result.updateMessage(Ui.letoSpeak(\"Saving tasks\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":99,"author":{"gitId":"camille-readbean"},"content":"            for (Task t : TaskList.getTasks()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"camille-readbean"},"content":"                assert t !\u003d null : \"Task to write cannot be null but it is!\";","lastModifiedDate":"2024-02-14"},{"lineNumber":101,"author":{"gitId":"camille-readbean"},"content":"                writeTask(bw, t);","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"camille-readbean"},"content":"                saved++;","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"camille-readbean"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"camille-readbean"},"content":"            bw.flush();","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"camille-readbean"},"content":"            bw.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"camille-readbean"},"content":"            result.updateMessage(Ui.shortSay(\"Saving completed: \" + saved + \" tasks saved\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":107,"author":{"gitId":"camille-readbean"},"content":"            File f \u003d new File(PATH_TO_STORE);","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"camille-readbean"},"content":"            String absPath \u003d f.getAbsolutePath();","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"camille-readbean"},"content":"            result.updateMessage(Ui.shortSay(\"File path: \" + absPath));","lastModifiedDate":"2024-02-13"},{"lineNumber":110,"author":{"gitId":"camille-readbean"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"camille-readbean"},"content":"            String message \u003d Ui.letoSpeak(\"Blast! Ran into error while writing the file.\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":112,"author":{"gitId":"camille-readbean"},"content":"                    + \"Saved \" + saved + \" tasks in the list.\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"camille-readbean"},"content":"            result.updateWithException(message, e);","lastModifiedDate":"2024-02-13"},{"lineNumber":114,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"camille-readbean"},"content":"        return result;","lastModifiedDate":"2024-02-13"},{"lineNumber":116,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":119,"author":{"gitId":"camille-readbean"},"content":"     * Helper method for writing an individual task to BufferedWriter.","lastModifiedDate":"2024-02-08"},{"lineNumber":120,"author":{"gitId":"camille-readbean"},"content":"     * Used within WriteFile.","lastModifiedDate":"2024-02-08"},{"lineNumber":121,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":122,"author":{"gitId":"camille-readbean"},"content":"     * @param bw BufferedWriter for the csv file.","lastModifiedDate":"2024-02-08"},{"lineNumber":123,"author":{"gitId":"camille-readbean"},"content":"     * @param t Task to write.","lastModifiedDate":"2024-02-08"},{"lineNumber":124,"author":{"gitId":"camille-readbean"},"content":"     * @throws IOException Pass up possible IOException from bw write.","lastModifiedDate":"2024-02-08"},{"lineNumber":125,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":126,"author":{"gitId":"camille-readbean"},"content":"    private static void writeTask(BufferedWriter bw, Task t) throws IOException {","lastModifiedDate":"2024-02-07"},{"lineNumber":127,"author":{"gitId":"camille-readbean"},"content":"        assert t !\u003d null : \"Task to write cannot be null but it is!\";","lastModifiedDate":"2024-02-14"},{"lineNumber":128,"author":{"gitId":"camille-readbean"},"content":"        bw.write(t.toCsvString() + \"\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":129,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"camille-readbean":130}},{"path":"src/main/java/me/ruibin/leto/tasklist/BadTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.tasklist;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"/** Exception indicating invalid index for command. */","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"public class BadTaskIndexException extends InvalidTaskException {","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"     * Constructor for BadTaskIndexException to tell range that the index they entered","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"     * should fall under.","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"     * Also give an appropriate help or what to do message.","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"     * @param currentIndex current max length of task list.","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"    public BadTaskIndexException(int currentIndex) {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"        super(","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"                \"Bad task index number, should be a integer more than 0 and less than: \"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"                        + (currentIndex + 1) + \" see /list for all the tasks\");","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"camille-readbean":17}},{"path":"src/main/java/me/ruibin/leto/tasklist/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.tasklist;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"/** A type of Task with a deadline LocalDate field. */","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"    private LocalDate deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"    private Deadline(Boolean completed, String taskString, LocalDate deadline) {","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"        // Call to \u0027super()\u0027 must be first statement in constructor body","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"        super(completed, taskString);","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"     * Extends the deadline by a specified number of days.","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"     * @param days The number of days to extend the deadline.","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"    public void extendDeadline(int days) {","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"        if (days \u003c\u003d 0) {","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"            throw new IllegalArgumentException(\"Cannot extend deadline by a negative number of or 0 days.\");","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"        this.deadline \u003d this.deadline.plusDays(days);","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"     * Read user input and generate a new instance of Deadline.","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"     * @param input Command inputs from user.","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"     * @return A new instance of Deadline.","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"     * @throws InvalidTaskException If input do not fit valid command format.","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"    public static Deadline deadlineFromCommand(String input) throws InvalidTaskException {","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"        String regex \u003d \"(?i)deadline ([^,]+) /by (\\\\d{4}-\\\\d{2}-\\\\d{2}) *\";","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"camille-readbean"},"content":"        Matcher matcher \u003d Pattern.compile(regex).matcher(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"camille-readbean"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"camille-readbean"},"content":"            throw new InvalidTaskException(\"deadline \u003cdescription\u003e /by \u003cdate\u003e,\"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"camille-readbean"},"content":"                    + \" \u003cdate\u003e should be in the format YYYY-MM-DD.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"camille-readbean"},"content":"        LocalDate deadline \u003d LocalDate.parse(matcher.group(2).trim());","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"camille-readbean"},"content":"        return new Deadline(false, matcher.group(1).trim(), deadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"camille-readbean"},"content":"    private String remainingDaysMessage() {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"camille-readbean"},"content":"        long remainingDays \u003d ChronoUnit.DAYS.between(LocalDate.now(), this.deadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"camille-readbean"},"content":"        if (remainingDays \u003d\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"camille-readbean"},"content":"            return \"due today\";","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"camille-readbean"},"content":"        } else if (remainingDays \u003c 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"camille-readbean"},"content":"            return Math.abs(remainingDays) + \" days past deadline\";","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"camille-readbean"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"camille-readbean"},"content":"            return remainingDays + \" days remaining\";","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"camille-readbean"},"content":"     * Create a Deadline task from csv format, Type,Completed,Task,By,From,To.","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"camille-readbean"},"content":"     * @param entry text string containing the row in the csv","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"camille-readbean"},"content":"     * @return a Deadline task","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"camille-readbean"},"content":"    public static Deadline deadlineFromCsv(String entry) throws InvalidTaskException {","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"camille-readbean"},"content":"        String regex \u003d \"([DTE]),([YN]),([^,]*),([^,]*),([^,]*),([^,]*)(\\\\n?)\";","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"camille-readbean"},"content":"        Matcher matcher \u003d Pattern.compile(regex).matcher(entry.trim());","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"camille-readbean"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"camille-readbean"},"content":"            throw new InvalidTaskException(\"Cannot match \" + entry + \" with regex\");","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"camille-readbean"},"content":"        Boolean completed \u003d matcher.group(2).equals(\"Y\");","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"camille-readbean"},"content":"        String message \u003d matcher.group(3);","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"camille-readbean"},"content":"            LocalDate deadline \u003d LocalDate.parse(matcher.group(4));","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"camille-readbean"},"content":"            return new Deadline(completed, message, deadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"camille-readbean"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"camille-readbean"},"content":"            throw new InvalidTaskException(\"By field, [\" + matcher.group(4) + \"] is invalid!\");","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"camille-readbean"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"camille-readbean"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.deadline.toString() + \")\"","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"camille-readbean"},"content":"                + \" \" + this.remainingDaysMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"camille-readbean"},"content":"     * Returns the object as a row in a csv table according to format:\u003cbr\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"camille-readbean"},"content":"     * \u003ccode\u003eType,Completed,Task,By,From,To\u003c/code\u003e.","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":92,"author":{"gitId":"camille-readbean"},"content":"     * @return String in csv format","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"camille-readbean"},"content":"    public String toCsvString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"camille-readbean"},"content":"        return \"D,\" + super.toCsvString() + \",\" + this.deadline.toString() + \",,\";","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"camille-readbean":97}},{"path":"src/main/java/me/ruibin/leto/tasklist/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.tasklist;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"/** A type of Task with LocalDate fields specifying from date and to date. */","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"    private LocalDate from;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"    private LocalDate to;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"    private Event(Boolean completed, String taskString, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"        // Call to \u0027super()\u0027 must be first statement in constructor body","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"        super(completed, taskString);","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"    private String eventDaysMessage() {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"        long daysToStart \u003d ChronoUnit.DAYS.between(LocalDate.now(), this.from);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"        long daysToEnd \u003d ChronoUnit.DAYS.between(LocalDate.now(), this.to);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"        if (daysToStart \u003e 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"            return Math.abs(daysToStart) + \" days to the event\";","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"        } else if (daysToEnd \u003c 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"            return \"ended \" + Math.abs(daysToEnd) + \" days ago\";","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"            return daysToEnd + \" days remaining\";","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"     * Create a new instance of Event from user command.","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"     * @param input Command inputs from user.","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"     * @return A new instance of Event.","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"     * @throws InvalidTaskException If input is not a valid event command.","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"    public static Event eventFromCommand(String input) throws InvalidTaskException {","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"camille-readbean"},"content":"        String regex \u003d \"(?i)event ([^,]+) /from (\\\\d{4}-\\\\d{2}-\\\\d{2}) /to (\\\\d{4}-\\\\d{2}-\\\\d{2}) *\";","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"camille-readbean"},"content":"        Matcher matcher \u003d Pattern.compile(regex).matcher(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"camille-readbean"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"camille-readbean"},"content":"            throw new EventInvalidCmdException();","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"camille-readbean"},"content":"        String taskMessage \u003d matcher.group(1).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"camille-readbean"},"content":"        LocalDate from \u003d LocalDate.parse(matcher.group(2).trim());","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"camille-readbean"},"content":"        LocalDate to \u003d LocalDate.parse(matcher.group(3).trim());","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"camille-readbean"},"content":"        return new Event(false, taskMessage, from, to);","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"camille-readbean"},"content":"     * Create an Event task from csv format:\u003cbr\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"camille-readbean"},"content":"     * \u003ccode\u003eType,Completed,Task,By,From,To\u003c/code\u003e.","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"camille-readbean"},"content":"     * @param entry text string containing the row in the csv","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"camille-readbean"},"content":"     * @return an Event task","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"camille-readbean"},"content":"    public static Event eventFromCsv(String entry) throws InvalidTaskException {","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"camille-readbean"},"content":"        String regex \u003d \"([DTE]),([YN]),([^,]*),([^,]*),(\\\\d{4}-\\\\d{2}-\\\\d{2}),(\\\\d{4}-\\\\d{2}-\\\\d{2})(\\\\n?)\";","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"camille-readbean"},"content":"        Matcher matcher \u003d Pattern.compile(regex).matcher(entry);","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"camille-readbean"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"camille-readbean"},"content":"            throw new InvalidTaskException(\"Cannot match \" + entry + \" with regex\");","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"camille-readbean"},"content":"        Boolean completed \u003d matcher.group(2).equals(\"Y\");","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"camille-readbean"},"content":"        String message \u003d matcher.group(3);","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"camille-readbean"},"content":"        LocalDate from \u003d LocalDate.parse(matcher.group(5));","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"camille-readbean"},"content":"        LocalDate to \u003d LocalDate.parse(matcher.group(6));","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"camille-readbean"},"content":"        return new Event(completed, message, from, to);","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"camille-readbean"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"camille-readbean"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from + \" to: \" + this.to + \")\"","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"camille-readbean"},"content":"                + \" \" + this.eventDaysMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"camille-readbean"},"content":"     * Returns the object as a row in a csv table according to format:\u003cbr\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"camille-readbean"},"content":"     * \u003ccode\u003eType,Completed,Task,By,From,To\u003c/code\u003e.","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"camille-readbean"},"content":"     * @return String in csv format","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"camille-readbean"},"content":"    public String toCsvString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"camille-readbean"},"content":"        return \"E,\" + super.toCsvString() + \",,\" + this.from + \",\" + this.to;","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"camille-readbean":86}},{"path":"src/main/java/me/ruibin/leto/tasklist/EventInvalidCmdException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.tasklist;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"/** Exception for entering an invalid command for creating Event tasks. */","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"public class EventInvalidCmdException extends InvalidTaskException {","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"    /** Further help message specifying how to correctly enter a command for Event. */","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"    public EventInvalidCmdException() {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"        super(\"event command should be in the format:\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"                + \"  event \u003cdescription\u003e /from \u003cdate\u003e /to \u003cdate\u003e\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"                + \"    \u003cdate\u003e should be in the format YYYY-MM-DD.\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"                + \"    Note: NO commas are allowed in the command\");","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"camille-readbean":12}},{"path":"src/main/java/me/ruibin/leto/tasklist/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.tasklist;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.ui.Ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"/** Exception for invalid input for a Task */","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"public class InvalidTaskException extends Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"    public InvalidTaskException(String message) {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"        super(message);","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"    /** Print the error message according using Ui.letoSpeak. */","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"    public String printException() {","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"        return Ui.letoSpeak(\"We have a problem! \" + this.getMessage());","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"camille-readbean":15}},{"path":"src/main/java/me/ruibin/leto/tasklist/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.tasklist;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"/** Class representing a task being keep tracked of by Leto. */","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"public class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"    private boolean isCompleted;","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"    private String message;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"     * Constructor for task allowing the specification on whether it is completed","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"     * and the description.","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"     * @param isCompleted Whether the task is completed.","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"     * @param message Description of the task.","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"    public Task(Boolean isCompleted, String message) {","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"        this.message \u003d message;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"        return isCompleted;","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"    public void markCompleted() {","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"    public void markUncompleted() {","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"        return \"[\" + (isCompleted() ? \"X\" : \" \") + \"] \" + this.message;","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"     * Returns the object as a string formatted as a row in a csv table according to format","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"     * Completed,Task","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"camille-readbean"},"content":"     * @return String in csv format","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"camille-readbean"},"content":"    public String toCsvString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"camille-readbean"},"content":"        return (isCompleted() ? \"Y\" : \"N\") + \",\" + this.message;","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"camille-readbean":47}},{"path":"src/main/java/me/ruibin/leto/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.tasklist;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.parser.Result;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"/** Class representing the list of tasks in Leto. */","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"public class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"    private static final ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"    /** Static method to initialise the task list from csv file. */","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"    public static Result initFromCsvFile() {","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"        return Storage.readFile();","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"    /** Save task list to csv file. */","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"    public static Result saveTasks() {","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"        return Storage.writeFile();","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"     * Takes in a list of tasks as varargs to add to the task list.","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"     * @param tasks Array containing Tasks.","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"     * @return Result of the add. Should be ok.","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"    public static Result addToList(Task... tasks) {","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"        Result r \u003d Result.makeResultOk(\"Adding to task list:\\n\");","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"            list.add(t);","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"            r.updateMessage(Ui.letoSpeak(\"Task added, \" + t","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"                    + \"\\n  \u003e You have \" + TaskList.list.size() + \" tasks.\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"        return r;","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"camille-readbean"},"content":"     * From user input mark the task specified as completed.","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"camille-readbean"},"content":"     * @param inputs Command from the user.","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"camille-readbean"},"content":"     * @return Result of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"camille-readbean"},"content":"    public static Result markTaskCompleted(String inputs) {","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"camille-readbean"},"content":"        Task temp;","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"camille-readbean"},"content":"        Result r \u003d Result.makeResultOk(\"\");","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"camille-readbean"},"content":"            int index \u003d getIndexFromInput(inputs);","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"camille-readbean"},"content":"            temp \u003d getTaskByIndex(index);","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"camille-readbean"},"content":"            assert temp !\u003d null : \"Shouldn\u0027t occur!! Task is null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"camille-readbean"},"content":"            if (temp.isCompleted()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"camille-readbean"},"content":"                throw new InvalidTaskException(\"Task already completed\");","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"camille-readbean"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"camille-readbean"},"content":"            temp.markCompleted();","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"camille-readbean"},"content":"            r.updateMessage(Ui.letoSpeak(\"Task marked as completed! Congratulations\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"camille-readbean"},"content":"            return r;","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"camille-readbean"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"camille-readbean"},"content":"            r.updateWithException(e.printException(), e);","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"camille-readbean"},"content":"            return r;","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"camille-readbean"},"content":"     * From user input mark the task specified as uncompleted.","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"camille-readbean"},"content":"     * @param inputs Command from the user.","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"camille-readbean"},"content":"     * @return Result of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"camille-readbean"},"content":"    public static Result markTaskUncompleted(String inputs) {","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"camille-readbean"},"content":"        Task temp;","lastModifiedDate":"2024-01-23"},{"lineNumber":74,"author":{"gitId":"camille-readbean"},"content":"        Result r \u003d Result.makeResultOk(\"\");","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":76,"author":{"gitId":"camille-readbean"},"content":"            int index \u003d getIndexFromInput(inputs);","lastModifiedDate":"2024-01-23"},{"lineNumber":77,"author":{"gitId":"camille-readbean"},"content":"            temp \u003d getTaskByIndex(index);","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"camille-readbean"},"content":"            assert temp !\u003d null : \"Shouldn\u0027t occur!! Task is null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":79,"author":{"gitId":"camille-readbean"},"content":"            if (!temp.isCompleted()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"camille-readbean"},"content":"                r.updateMessage(Ui.letoSpeak(\"Task is already not completed :\u003c \"));","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"camille-readbean"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":82,"author":{"gitId":"camille-readbean"},"content":"            temp.markUncompleted();","lastModifiedDate":"2024-01-23"},{"lineNumber":83,"author":{"gitId":"camille-readbean"},"content":"            r.updateMessage(","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"camille-readbean"},"content":"                    Ui.letoSpeak(\"Task marked as uncompleted! Things happen, don\u0027t worry we account for it\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"camille-readbean"},"content":"            return r;","lastModifiedDate":"2024-02-13"},{"lineNumber":86,"author":{"gitId":"camille-readbean"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"camille-readbean"},"content":"            r.updateWithException(e.printException(), e);","lastModifiedDate":"2024-02-13"},{"lineNumber":88,"author":{"gitId":"camille-readbean"},"content":"            return r;","lastModifiedDate":"2024-02-13"},{"lineNumber":89,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":90,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":91,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":92,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"camille-readbean"},"content":"     * From user input delete the task specified.","lastModifiedDate":"2024-02-08"},{"lineNumber":94,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":95,"author":{"gitId":"camille-readbean"},"content":"     * @param inputs Command from the user.","lastModifiedDate":"2024-02-08"},{"lineNumber":96,"author":{"gitId":"camille-readbean"},"content":"     * @return Result of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":97,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":98,"author":{"gitId":"camille-readbean"},"content":"    public static Result deleteTask(String inputs) {","lastModifiedDate":"2024-02-13"},{"lineNumber":99,"author":{"gitId":"camille-readbean"},"content":"        Result r \u003d Result.makeResultOk(\"\");","lastModifiedDate":"2024-02-13"},{"lineNumber":100,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":101,"author":{"gitId":"camille-readbean"},"content":"            int index \u003d getIndexFromInput(inputs);","lastModifiedDate":"2024-01-23"},{"lineNumber":102,"author":{"gitId":"camille-readbean"},"content":"            Task t \u003d getTaskByIndex(index);","lastModifiedDate":"2024-02-15"},{"lineNumber":103,"author":{"gitId":"camille-readbean"},"content":"            TaskList.list.remove(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"camille-readbean"},"content":"            r.updateMessage(Ui.letoSpeak(\"Task deleted, [\" + t.toString()","lastModifiedDate":"2024-02-13"},{"lineNumber":105,"author":{"gitId":"camille-readbean"},"content":"                    + \"]\\n  \u003e You have \" + TaskList.list.size() + \" tasks.\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":106,"author":{"gitId":"camille-readbean"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"camille-readbean"},"content":"            r.updateWithException(e.printException(), e);","lastModifiedDate":"2024-02-13"},{"lineNumber":108,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":109,"author":{"gitId":"camille-readbean"},"content":"        return r;","lastModifiedDate":"2024-02-13"},{"lineNumber":110,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":111,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":112,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":113,"author":{"gitId":"camille-readbean"},"content":"     * Helper method to get index of the task from user command.","lastModifiedDate":"2024-02-08"},{"lineNumber":114,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":115,"author":{"gitId":"camille-readbean"},"content":"     * @param input Command from the user.","lastModifiedDate":"2024-02-08"},{"lineNumber":116,"author":{"gitId":"camille-readbean"},"content":"     * @throws InvalidTaskException Invalid task index or parsing issue.","lastModifiedDate":"2024-02-08"},{"lineNumber":117,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":118,"author":{"gitId":"camille-readbean"},"content":"    private static int getIndexFromInput(String input) throws InvalidTaskException {","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":120,"author":{"gitId":"camille-readbean"},"content":"            String[] inputs \u003d input.split(\" \");","lastModifiedDate":"2024-01-23"},{"lineNumber":121,"author":{"gitId":"camille-readbean"},"content":"            if (inputs.length !\u003d 2) {","lastModifiedDate":"2024-01-23"},{"lineNumber":122,"author":{"gitId":"camille-readbean"},"content":"                throw new InvalidTaskException(\"You need to enter a task index number\");","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"camille-readbean"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":124,"author":{"gitId":"camille-readbean"},"content":"            return Integer.parseInt(inputs[1]) - 1;","lastModifiedDate":"2024-02-15"},{"lineNumber":125,"author":{"gitId":"camille-readbean"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":126,"author":{"gitId":"camille-readbean"},"content":"            throw new InvalidTaskException(\"We cannot get task index from your input, \"","lastModifiedDate":"2024-02-07"},{"lineNumber":127,"author":{"gitId":"camille-readbean"},"content":"                    + \"it should be an integer, `(un)mark _int_`\");","lastModifiedDate":"2024-02-07"},{"lineNumber":128,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":129,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":130,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":131,"author":{"gitId":"camille-readbean"},"content":"    public static Task getTaskByIndex(int i) throws InvalidTaskException {","lastModifiedDate":"2024-02-15"},{"lineNumber":132,"author":{"gitId":"camille-readbean"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2024-02-15"},{"lineNumber":133,"author":{"gitId":"camille-readbean"},"content":"            throw new InvalidTaskException(\"Good news at least, you have no task!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":134,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":135,"author":{"gitId":"camille-readbean"},"content":"        if (i \u003e\u003d list.size() || i \u003c 0) {","lastModifiedDate":"2024-02-15"},{"lineNumber":136,"author":{"gitId":"camille-readbean"},"content":"            throw new BadTaskIndexException(list.size());","lastModifiedDate":"2024-02-15"},{"lineNumber":137,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":138,"author":{"gitId":"camille-readbean"},"content":"        return list.get(i);","lastModifiedDate":"2024-02-15"},{"lineNumber":139,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":140,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":141,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":142,"author":{"gitId":"camille-readbean"},"content":"     * Convert tasks in the list to an output string and then call Ui print.","lastModifiedDate":"2024-02-13"},{"lineNumber":143,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":144,"author":{"gitId":"camille-readbean"},"content":"     * @return Result of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":145,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":146,"author":{"gitId":"camille-readbean"},"content":"    public static Result printList() {","lastModifiedDate":"2024-02-13"},{"lineNumber":147,"author":{"gitId":"camille-readbean"},"content":"        StringBuilder toPrint \u003d new StringBuilder(\" \u003c Task List \u003e\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"camille-readbean"},"content":"        for (int i \u003d 0; i \u003c TaskList.list.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"camille-readbean"},"content":"            toPrint.append(\" \").append(i + 1).append(\": \")","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"camille-readbean"},"content":"                    .append(TaskList.list.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":152,"author":{"gitId":"camille-readbean"},"content":"        toPrint.append(\"\\n \u003c End of Task List \u003e\");","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"camille-readbean"},"content":"        return Result.makeResultOk(Ui.letoSpeak(toPrint.toString()));","lastModifiedDate":"2024-02-13"},{"lineNumber":154,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":155,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":157,"author":{"gitId":"camille-readbean"},"content":"     * Get tasks as an unmodifiable list when there is a need to iterate through it.","lastModifiedDate":"2024-02-08"},{"lineNumber":158,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":159,"author":{"gitId":"camille-readbean"},"content":"     * @return An unmodifiable List of Task.","lastModifiedDate":"2024-02-15"},{"lineNumber":160,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":161,"author":{"gitId":"camille-readbean"},"content":"    public static List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-01"},{"lineNumber":162,"author":{"gitId":"camille-readbean"},"content":"        return Collections.unmodifiableList(list);","lastModifiedDate":"2024-02-01"},{"lineNumber":163,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":164,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"camille-readbean":164}},{"path":"src/main/java/me/ruibin/leto/tasklist/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.tasklist;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"/** A type of Task representing a Todo */","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"    private Todo(Boolean completed, String message) {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"        super(completed, message);","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"     * Create a instance of Todo from user command.","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"     * @param input Command entered by the user, the entire line.","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"     * @return a new Todo object.","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"     * @throws TodoInvalidCmdException when input command is invalid.","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"    public static Todo todoFromCmd(String input) throws TodoInvalidCmdException {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"        String regex \u003d \"(?i)todo ([^,]+)\";","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"        Matcher matcher \u003d Pattern.compile(regex).matcher(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"            throw new TodoInvalidCmdException();","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"        String message \u003d matcher.group(1);","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"        return new Todo(false, message);","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"     * Create an Todo task from csv format:\u003cbr\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"     * \u003ccode\u003eType,Completed,Task,By,From,To\u003c/code\u003e.","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"     * @param entry text string containing the row in the csv.","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"     * @return an Event task.","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"    public static Todo todoFromCsv(String entry) throws InvalidTaskException {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"        String regex \u003d \"([DTE]),([YN]),([^,]*),([^,]*),([^,]*),([^,]*)(\\\\n?)\";","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"        Matcher matcher \u003d Pattern.compile(regex).matcher(entry);","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"camille-readbean"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"camille-readbean"},"content":"            throw new InvalidTaskException(\"Cannot match \" + entry + \" with regex\");","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"camille-readbean"},"content":"        Boolean completed \u003d matcher.group(2).equals(\"Y\");","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"camille-readbean"},"content":"        String message \u003d matcher.group(3);","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"camille-readbean"},"content":"        return new Todo(completed, message);","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"camille-readbean"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"camille-readbean"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"camille-readbean"},"content":"     * Returns the object as a row in a csv table according to format: \u003cbr\u003e","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"camille-readbean"},"content":"     * \u003ccode\u003eType,Completed,Task,By,From,To\u003c/code\u003e.","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"camille-readbean"},"content":"     * @return String in csv format","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"camille-readbean"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"camille-readbean"},"content":"    public String toCsvString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"camille-readbean"},"content":"        return \"T,\" + super.toCsvString() + \",,,\";","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"camille-readbean":63}},{"path":"src/main/java/me/ruibin/leto/tasklist/TodoInvalidCmdException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.tasklist;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"/** ** Exception for entering an invalid command for creating Todo tasks. */","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"public class TodoInvalidCmdException extends InvalidTaskException {","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"     * Exception thrown when a invalid \u003ccode\u003etodo\u003c/code\u003e command is entered.","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"    public TodoInvalidCmdException() {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"        super(\"todo command should be in the format:\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"                + \"  todo \u003cdescription\u003e\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"                + \"    Note: NO commas are allowed in the command\");","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"camille-readbean":13}},{"path":"src/main/java/me/ruibin/leto/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.ui;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"    private Circle circle;","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"camille-readbean"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"camille-readbean"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"camille-readbean"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"camille-readbean"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"camille-readbean"},"content":"    private void flip() {","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"camille-readbean"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"camille-readbean"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"camille-readbean"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"camille-readbean"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"camille-readbean"},"content":"        dialog.setTextAlignment(TextAlignment.LEFT);","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"camille-readbean"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"camille-readbean"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"camille-readbean"},"content":"    public static DialogBox getLetoDialog(String text, Image img) {","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"camille-readbean"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"camille-readbean"},"content":"        db.flip();","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"camille-readbean"},"content":"        return db;","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"camille-readbean":68}},{"path":"src/main/java/me/ruibin/leto/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.ui;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.Leto;","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.parser.Result;","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.parser.ResultTypes;","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"import me.ruibin.leto.tasklist.TaskList;","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"    private Leto leto;","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/paul.png\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"    private Image letoImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke_leto.png\"));","lastModifiedDate":"2024-02-17"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"     * Initializes the main window of the app. Display welcome message.","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"camille-readbean"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"camille-readbean"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"camille-readbean"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"camille-readbean"},"content":"        scrollPane.hvalueProperty().bind(dialogContainer.widthProperty());","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"camille-readbean"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"camille-readbean"},"content":"                DialogBox.getLetoDialog(Ui.letoLogo(), letoImage),","lastModifiedDate":"2024-02-17"},{"lineNumber":46,"author":{"gitId":"camille-readbean"},"content":"                DialogBox.getLetoDialog(TaskList.initFromCsvFile().getMessage(), letoImage)","lastModifiedDate":"2024-02-17"},{"lineNumber":47,"author":{"gitId":"camille-readbean"},"content":"        );","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"camille-readbean"},"content":"    public void setLeto(Leto d) {","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"camille-readbean"},"content":"        leto \u003d d;","lastModifiedDate":"2024-02-13"},{"lineNumber":52,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"camille-readbean"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"camille-readbean"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"camille-readbean"},"content":"    @FXML","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"camille-readbean"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"camille-readbean"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"camille-readbean"},"content":"        Result result \u003d leto.getResponse(input);","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"camille-readbean"},"content":"        String response \u003d result.getMessage();","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"camille-readbean"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"camille-readbean"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"camille-readbean"},"content":"                DialogBox.getLetoDialog(response, letoImage)","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"camille-readbean"},"content":"        );","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"camille-readbean"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"camille-readbean"},"content":"        if (result.getType().equals(ResultTypes.EXIT)) {","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"camille-readbean"},"content":"            Platform.runLater(this::waitThenExit);","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"camille-readbean"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"camille-readbean"},"content":"            userInput.setText(\"Program is exiting\");","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"camille-readbean"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-17"},{"lineNumber":74,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":76,"author":{"gitId":"camille-readbean"},"content":"    private void waitThenExit() {","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"camille-readbean"},"content":"            Thread.sleep(2000);","lastModifiedDate":"2024-02-17"},{"lineNumber":79,"author":{"gitId":"camille-readbean"},"content":"            System.exit(0);","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"camille-readbean"},"content":"        } catch (InterruptedException e) {","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"camille-readbean"},"content":"            Thread.currentThread().interrupt();","lastModifiedDate":"2024-02-17"},{"lineNumber":82,"author":{"gitId":"camille-readbean"},"content":"            // application is exiting already","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"camille-readbean":85}},{"path":"src/main/java/me/ruibin/leto/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"import java.io.StringWriter;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"/** Wraps output with custom formatting before sending to stdout using PrintWriter. */","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"public class Ui {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"    private static final StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"    private static final PrintWriter pw \u003d new PrintWriter(sw);","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"     * Prints message in multiple line. Auto indenting on linebreak.","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"     * @param message Message to print.","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"     * @return String printed.","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"    public static String letoSpeak(String message) {","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"        pw.write(\"  \u003c\u003c Duke Leto \u003e\u003e\\n  \u003e \" + message.replaceAll(\"\\n\", \"\\n  \u003e \"));","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"        pw.println();","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"        pw.print(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"        pw.flush();","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"        String toReturn \u003d sw.toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"        sw.getBuffer().setLength(0);","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"        return toReturn;","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"     * Prints message ine a single line.","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"     * @param message To print.","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"     * @return String printed.","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"    public static String shortSay(String message) {","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"        pw.write(\"  \u003c\u003c Duke Leto \u003e\u003e : \" + message + \"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"        pw.flush();","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"        String toReturn \u003d sw.toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"        sw.getBuffer().setLength(0);","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"        return toReturn;","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"camille-readbean"},"content":"     * Prints the logo.","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"camille-readbean"},"content":"     * @return String printed.","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"camille-readbean"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"camille-readbean"},"content":"    public static String letoLogo() {","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"camille-readbean"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"camille-readbean"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"camille-readbean"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"camille-readbean"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"camille-readbean"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|   Leto\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"camille-readbean"},"content":"        pw.write(\"Good day from\\n\" + logo);","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"camille-readbean"},"content":"        pw.print(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"camille-readbean"},"content":"        pw.flush();","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"camille-readbean"},"content":"        String toReturn \u003d sw.toString();","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"camille-readbean"},"content":"        sw.getBuffer().setLength(0);","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"camille-readbean"},"content":"        return toReturn;","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"camille-readbean"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"camille-readbean"},"content":"     * Print the standard help message.","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"camille-readbean"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"camille-readbean"},"content":"     * @return String printed.","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"camille-readbean"},"content":"     * */","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"camille-readbean"},"content":"    public static String letoHelp() {","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"camille-readbean"},"content":"        return letoSpeak(\"Supported commands:\\n\"","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"camille-readbean"},"content":"            + \"list     -  list all tasks\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"camille-readbean"},"content":"            + \"mark     -  mark task as done\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"camille-readbean"},"content":"            + \"              usage: mark \u003cindex\u003e\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"camille-readbean"},"content":"            + \"unmark   -  unmark task as done, :(\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"camille-readbean"},"content":"            + \"              usage: unmark \u003cindex\u003e\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"camille-readbean"},"content":"            + \"todo     -  create a task of type todo \\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"camille-readbean"},"content":"            + \"              usage: todo \u003cdetails\u003e\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"camille-readbean"},"content":"            + \"deadline -  create a task of type deadline\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"camille-readbean"},"content":"            + \"              usage: deadline \u003cdescription\u003e /by \u003cdate\u003e,\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"camille-readbean"},"content":"            + \"              \u003cdate\u003e should be in the format YYYY-MM-DD. \\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"camille-readbean"},"content":"            + \"event    -  create a task of type event    \\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"camille-readbean"},"content":"            + \"               usage: event \u003cdetails\u003e /from \u003cstart_time YYYY-MM-DD\u003e /to \u003cend_time YYYY-MM-DD\u003e\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"camille-readbean"},"content":"            + \"save     -  save tasks to persistent storage\\n\"","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"camille-readbean"},"content":"            + \"find     -  find a task by keyword, searches within their entire descriptionx\\n\"","lastModifiedDate":"2024-02-17"},{"lineNumber":81,"author":{"gitId":"camille-readbean"},"content":"            + \"                usage: event \u003ckeyword\u003e\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"camille-readbean"},"content":"            + \"                case sensitive\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"camille-readbean"},"content":"            + \"snooze   -  snooze as task deadline by specified days\\n\"","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"camille-readbean"},"content":"            + \"                usage: snooze \u003ctask number\u003e /by \u003cnumber\u003e d[ays]\\n\"","lastModifiedDate":"2024-02-15"},{"lineNumber":85,"author":{"gitId":"camille-readbean"},"content":"            + \"bye      -  exit\");","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"camille-readbean":87}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"         maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"         minWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"         spacing\u003d\"15\"","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"        \u003cInsets bottom\u003d\"10\" right\u003d\"10\" left\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" minWidth\u003d\"450\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" textAlignment\u003d\"RIGHT\"/\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"\u003c!--        \u003cText fx:id\u003d\"dialog\" text\u003d\"Label\" /\u003e--\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"            \u003cclip\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"                \u003cCircle centerX\u003d\"49.5\" centerY\u003d\"49.5\" radius\u003d\"49.5\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"            \u003c/clip\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"camille-readbean":33}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"600\" minWidth\u003d\"600\" prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"me.ruibin.leto.ui.MainWindow\"\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"500.0\" promptText\u003d\"Type command\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"            \u003cFont name\u003d\"Roboto Medium\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"500\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"100.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"         \u003cfont\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"            \u003cFont name\u003d\"Roboto Bold\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"\u003c!--        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e--\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hvalue\u003d\"1.0\" minHeight\u003d\"560.0\" minWidth\u003d\"590.0\" vvalue\u003d\"1.0\" AnchorPane.topAnchor\u003d\"0\" AnchorPane.bottomAnchor\u003d\"42\"\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"560.0\" prefWidth\u003d\"590.0\" /\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"camille-readbean":27}},{"path":"src/test/java/me/ruibin/leto/tasklist/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.tasklist;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"    /** Test creating Deadline from valid command by date 1 day ago. */","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"    public void deadlineFromCommand_validCommand_success() {","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"        LocalDate deadline \u003d LocalDate.now().minusDays(1);","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"        String command \u003d \"DEadLine SUBMIT.Paper #CS320  /by \" + deadline;","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"        String correctOutput \u003d \"[D][ ] SUBMIT.Paper #CS320 (by: \"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"                + deadline + \") 1 days past deadline\";","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"            Deadline produced \u003d Deadline.deadlineFromCommand(command);","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"            assertEquals(produced.toString(), correctOutput);","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"            fail(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"    /** Test creating Deadline from invalid command with bad by date. */","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"    public void deadlineFromCommand_commandWithBadFormat_failure() {","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"        LocalDate deadline \u003d LocalDate.now().minusDays(1);","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"        String command \u003d \"DEadLine SUBMIT.Paper #CS320  /by \"","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"                + deadline.format(DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"        String errorMessage \u003d \"deadline \u003cdescription\u003e /by \u003cdate\u003e, \u003cdate\u003e should be in the format YYYY-MM-DD.\";","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"            Deadline.deadlineFromCommand(command);","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"            assertEquals(errorMessage, e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"camille-readbean"},"content":"    /** Test creating Deadline from valid CSV. */","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"camille-readbean"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"camille-readbean"},"content":"    public void deadlineFromCsv_validEntry_success() {","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"camille-readbean"},"content":"        LocalDate deadline \u003d LocalDate.now().minusDays(1);","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"camille-readbean"},"content":"        String entry \u003d \"D,N,SUBMIT.Paper #CS320,\" + deadline + \",,\";","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"camille-readbean"},"content":"        String correctOutput \u003d \"[D][ ] SUBMIT.Paper #CS320 (by: \"","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"camille-readbean"},"content":"                + deadline + \") 1 days past deadline\";","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"camille-readbean"},"content":"            Deadline produced \u003d Deadline.deadlineFromCsv(entry);","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"camille-readbean"},"content":"            assertEquals(produced.toString(), correctOutput);","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"camille-readbean"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"camille-readbean"},"content":"            fail(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"camille-readbean"},"content":"    /** Test creating Deadline from invalid CSV with empty by date. */","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"camille-readbean"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"camille-readbean"},"content":"    public void deadlineFromCsv_invalidEmptyDatesEntry_failure() {","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"camille-readbean"},"content":"        String entry \u003d \"D,N,SUBMIT.Paper #CS320,XXX,,\";","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"camille-readbean"},"content":"        String errorMessage \u003d \"By field, [XXX] is invalid!\";","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"camille-readbean"},"content":"            Deadline.deadlineFromCsv(entry);","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"camille-readbean"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"camille-readbean"},"content":"            assertEquals(errorMessage, e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"camille-readbean"},"content":"    /** Test snoozing Deadline to one day after today. */","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"camille-readbean"},"content":"    @Test","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"camille-readbean"},"content":"    public void deadlineFromCsvSnoozeToTomorrow_validDays_success() {","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"camille-readbean"},"content":"        LocalDate deadline \u003d LocalDate.now().minusDays(1);","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"camille-readbean"},"content":"        String entry \u003d \"D,N,SUBMIT.Paper #CS320,\" + deadline + \",,\";","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"camille-readbean"},"content":"        String correctOutput \u003d \"[D][ ] SUBMIT.Paper #CS320 (by: \"","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"camille-readbean"},"content":"                + deadline.plusDays(1) + \") due today\";","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"camille-readbean"},"content":"            Deadline produced \u003d Deadline.deadlineFromCsv(entry);","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"camille-readbean"},"content":"            produced.extendDeadline(1);","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"camille-readbean"},"content":"            assertEquals(produced.toString(), correctOutput);","lastModifiedDate":"2024-02-15"},{"lineNumber":79,"author":{"gitId":"camille-readbean"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"camille-readbean"},"content":"            fail(e);","lastModifiedDate":"2024-02-15"},{"lineNumber":81,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":82,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":83,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"camille-readbean"},"content":"    /** Test snoozing Deadline to one day after today. */","lastModifiedDate":"2024-02-15"},{"lineNumber":85,"author":{"gitId":"camille-readbean"},"content":"    @Test","lastModifiedDate":"2024-02-15"},{"lineNumber":86,"author":{"gitId":"camille-readbean"},"content":"    public void deadlineFromCsvSnoozeToTomorrow_invalidDays_fail() {","lastModifiedDate":"2024-02-15"},{"lineNumber":87,"author":{"gitId":"camille-readbean"},"content":"        LocalDate deadline \u003d LocalDate.now().minusDays(1);","lastModifiedDate":"2024-02-15"},{"lineNumber":88,"author":{"gitId":"camille-readbean"},"content":"        String entry \u003d \"D,N,SUBMIT.Paper #CS320,\" + deadline + \",,\";","lastModifiedDate":"2024-02-15"},{"lineNumber":89,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-15"},{"lineNumber":90,"author":{"gitId":"camille-readbean"},"content":"            Deadline produced \u003d Deadline.deadlineFromCsv(entry);","lastModifiedDate":"2024-02-15"},{"lineNumber":91,"author":{"gitId":"camille-readbean"},"content":"            produced.extendDeadline(0);","lastModifiedDate":"2024-02-15"},{"lineNumber":92,"author":{"gitId":"camille-readbean"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":93,"author":{"gitId":"camille-readbean"},"content":"            assertEquals(\"Cannot extend deadline by a negative number of or 0 days.\", e.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":94,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":95,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":96,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"camille-readbean":96}},{"path":"src/test/java/me/ruibin/leto/tasklist/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"package me.ruibin.leto.tasklist;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"import java.text.MessageFormat;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"public class EventTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"    /** Test creating Event from valid command with 10 days long 10 days from now. */","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"    public void eventFromCommand_validCommand_success() {","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"camille-readbean"},"content":"        LocalDate startDate \u003d LocalDate.now().plusDays(10);","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"camille-readbean"},"content":"        LocalDate endDate \u003d LocalDate.now().plusDays(20);","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"        StringBuilder correctOuputBuilder \u003d new StringBuilder(\"[E][ ] H4(K1nG  cOnv@nt!0n (from: \");","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"camille-readbean"},"content":"        correctOuputBuilder.append(startDate)","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"camille-readbean"},"content":"                .append(\" to: \").append(endDate).append(\") 10 days to the event\");","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"camille-readbean"},"content":"        String correctOutput \u003d correctOuputBuilder.toString();","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"camille-readbean"},"content":"        String command \u003d \"event  H4(K1nG  cOnv@nt!0n   /from \" + startDate + \" /to \" + endDate + \"  \";","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"camille-readbean"},"content":"            Event produced \u003d Event.eventFromCommand(command);","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"camille-readbean"},"content":"            assertEquals(produced.toString(), correctOutput);","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"camille-readbean"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"camille-readbean"},"content":"            fail(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"camille-readbean"},"content":"    /** Test creating Event from invalid command with bad date formats. */","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"camille-readbean"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"camille-readbean"},"content":"    public void eventFromCommand_commandWithBadFormat_failure() {","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"camille-readbean"},"content":"        LocalDate startDate \u003d LocalDate.now().plusDays(10);","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"camille-readbean"},"content":"        LocalDate endDate \u003d LocalDate.now().plusDays(20);","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"camille-readbean"},"content":"        String command \u003d MessageFormat.format(\"event  H4(K1nG  cOnv@nt!0n   /from {0} /to {1}\",","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"camille-readbean"},"content":"                startDate.format(DateTimeFormatter.ofPattern(\"d MMMM yyyy\")),","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"camille-readbean"},"content":"                endDate);","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"camille-readbean"},"content":"            Event produced \u003d Event.eventFromCommand(command);","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"camille-readbean"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"camille-readbean"},"content":"            assertEquals((new EventInvalidCmdException()).getMessage(), e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"camille-readbean"},"content":"    /** Test creating Event from valid csv. */","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"camille-readbean"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"camille-readbean"},"content":"    public void eventFromCsv_validCsvEntry_success() {","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"camille-readbean"},"content":"        LocalDate startDate \u003d LocalDate.now().plusDays(10);","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"camille-readbean"},"content":"        LocalDate endDate \u003d LocalDate.now().plusDays(20);","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"camille-readbean"},"content":"        String entry \u003d MessageFormat.format(\"E,Y,  H4(K1nG  cOnv@nt!0n,,{0},{1}\",","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"camille-readbean"},"content":"                startDate,","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"camille-readbean"},"content":"                endDate);","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"camille-readbean"},"content":"        String pattern \u003d \"[E][X]   H4(K1nG  cOnv@nt!0n (from: {0} to: {1}) 10 days to the event\";","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"camille-readbean"},"content":"        String correctOutput \u003d MessageFormat.format(pattern, startDate, endDate);","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"camille-readbean"},"content":"            Event produced \u003d Event.eventFromCsv(entry);","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"camille-readbean"},"content":"            assertEquals(produced.toString(), correctOutput);","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"camille-readbean"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"camille-readbean"},"content":"            fail(e);","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"camille-readbean"},"content":"    /** Test creating Event from invalid csv with empty dates. */","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"camille-readbean"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"camille-readbean"},"content":"    public void eventFromCsv_badCsvEntry_failure() {","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"camille-readbean"},"content":"        String entry \u003d \"E,N,event  H4(K1nG  cOnv@nt!0n,,,\";","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"camille-readbean"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"camille-readbean"},"content":"            Event produced \u003d Event.eventFromCsv(entry);","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"camille-readbean"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"camille-readbean"},"content":"            String expectedErrorMessage \u003d \"Cannot match \" + entry + \" with regex\";","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"camille-readbean"},"content":"            assertEquals(expectedErrorMessage, e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"camille-readbean"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"camille-readbean"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"camille-readbean"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"camille-readbean":75}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"camille-readbean"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"camille-readbean"},"content":"hi","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"camille-readbean"},"content":"todo Finish level-7","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"camille-readbean"},"content":"deadline Apply grants /by 25 Jan 2024","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"camille-readbean"},"content":"mark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"camille-readbean"},"content":"mark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"camille-readbean"},"content":"unmark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"camille-readbean"},"content":"unmark 2","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"camille-readbean"},"content":"event Dinner /from 7 pm to 9 pm","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"camille-readbean"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"camille-readbean"},"content":"unmark 4","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"camille-readbean"},"content":"yay","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"camille-readbean"},"content":"LIST","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"camille-readbean"},"content":"byee","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"camille-readbean"},"content":"bye","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"camille-readbean":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"camille-readbean"},"content":"java -classpath ..\\bin Leto \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"camille-readbean":1}}]
