[{"path":"AI.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"# Using AI","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"When starting on duke in week 2,","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"I wanted to try to learn how to effectively use","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"GitHub CoPilot to help me write code.","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"I had heard about it from a friend and was curious","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"to see how it would work.","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"(This Markdown file was","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"written with CoPilot\u0027s help.)","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"I also used ChatGPT for refactoring to use handlers.","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"drustanyjt":12}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"# duke project template","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"drustanyjt":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"drustanyjt":1,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"public class Duke {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"    public void run() {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"            try {","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"                storage.save(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"drustanyjt"},"content":"            } finally {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"drustanyjt"},"content":"                ui.showLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"drustanyjt"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"drustanyjt"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"drustanyjt"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"drustanyjt":48,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"        super(errorMessage);","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"drustanyjt":7}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"/*","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":" * The ByeCommand class is a subclass of Command and represents a command to exit the program.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":" * It does not take in any parameters.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"        ui.showGoodbye();","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"        return true;","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":22}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":12}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"/*","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"* The DeadlineCommand class is a subclass of Command and represents a command to add a Deadline task to the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"* It takes in a description String and a by as a LocalDate object.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"    protected String description;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"    /*","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"     * Constructs DeadlineCommand object with description and by as LocalDate objects.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"    public DeadlineCommand(String description, LocalDate by) {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"        tasks.addTask(deadline);","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"        ui.showTaskAdded(deadline, tasks.getSize());","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":37}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.*;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"/*","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"* The DeleteCommand class is a subclass of Command and represents a command to delete a task from the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"* It takes in an index as an int.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"    protected int index;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"    /*","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"     * Constructs DeleteCommand object with index as an int.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"        tasks.deleteTask(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"        ui.showTaskDeleted(task, tasks.getSize());","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":34}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"/*","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"* The EventCommand class is a subclass of Command and represents a command to add an Event task to the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"* It takes in a description String, from and to as LocalDate objects.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"    protected String description;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"    /*","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"     * Constructs EventCommand object with description, from and to as LocalDate objects.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"    public EventCommand(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage){","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"        tasks.addTask(event);","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"        ui.showTaskAdded(event, tasks.getSize());","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":39}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"/*","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"* The ListCommand class is a subclass of Command and represents a command to list all tasks in the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"* It does not take in any parameters.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"        ui.showTaskList(tasks);","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":22}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"    private int index;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"        tasks.getTask(index).markAsDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"        ui.showMessage(\"Nice! I\u0027ve marked this task as done:\\n\" + tasks.getTask(index));","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":25}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"/*","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":" * This TodoCommand class is a subclass of Command class. It is used to create a new Todo task","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":" * and add it to the task list.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":" * It takes in a description String.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"    protected String description;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"    /*","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"     * Constructs TodoCommand object with description as a String.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"        ui.showTaskAdded(todo, tasks.getSize());","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":34}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"    private int index;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"        tasks.getTask(index).markAsNotDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"        ui.showMessage(\"Nice! I\u0027ve marked this task as undone:\\n\" + tasks.getTask(index));","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"        return false;","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":25}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.parser;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import duke.command.*;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"/*","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":" * The Parser class is responsible for making sense of the user command.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":" * It takes in a user command and returns the corresponding Command object.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":" * It is also responsible for parsing the user input into the command and description.","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"public class Parser {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"    private static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"    private static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"    private static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"    private static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"    private static final String UNMARK_COMMAND \u003d \"unmark\";","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"    private static final String MARK_COMMAND \u003d \"mark\";","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"    private static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"    private static final String BYE_COMMAND \u003d \"bye\";","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"    /*","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"     * Parses the user input and returns the corresponding Command object.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"        String[] commandParts \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"        String command \u003d commandParts[0].toLowerCase();","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"        switch (command) {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"            case TODO_COMMAND:","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"                return parseTodoCommand(commandParts);","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"            case DEADLINE_COMMAND:","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"                return parseDeadlineCommand(commandParts);","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"            case EVENT_COMMAND:","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"                return parseEventCommand(commandParts);","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"            case LIST_COMMAND:","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"                return new ListCommand();","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"            case UNMARK_COMMAND:","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"                return parseUnmarkCommand(commandParts);","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"drustanyjt"},"content":"            case MARK_COMMAND:","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"drustanyjt"},"content":"                return parseMarkCommand(commandParts);","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"drustanyjt"},"content":"            case DELETE_COMMAND:","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"drustanyjt"},"content":"                return parseDeleteCommand(commandParts);","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"drustanyjt"},"content":"            case BYE_COMMAND:","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"drustanyjt"},"content":"                return new ByeCommand();","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"drustanyjt"},"content":"            default:","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"drustanyjt"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"drustanyjt"},"content":"    static Command parseTodoCommand(String[] commandParts) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"drustanyjt"},"content":"        if (commandParts.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"drustanyjt"},"content":"        return new TodoCommand(commandParts[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"drustanyjt"},"content":"    static Command parseDeadlineCommand(String[] commandParts) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"drustanyjt"},"content":"        if (commandParts.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"drustanyjt"},"content":"        String[] deadlineParts \u003d commandParts[1].split(\" /by \");","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"drustanyjt"},"content":"        if (deadlineParts.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"The date of a deadline cannot be empty.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"drustanyjt"},"content":"        LocalDate by;","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"drustanyjt"},"content":"            by \u003d LocalDate.parse(deadlineParts[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"drustanyjt"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"Please enter a valid date in the format yyyy-mm-dd\");","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"drustanyjt"},"content":"        return new DeadlineCommand(deadlineParts[0], by);","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"drustanyjt"},"content":"    static Command parseEventCommand(String[] commandParts) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"drustanyjt"},"content":"        if (commandParts.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"drustanyjt"},"content":"        String[] eventParts \u003d commandParts[1].split(\" /from \");","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"drustanyjt"},"content":"        if (eventParts.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"The start date of an event cannot be empty. \" +","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"drustanyjt"},"content":"                    \"Please use /from to specify the start date.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"drustanyjt"},"content":"        String[] eventParts2 \u003d eventParts[1].split(\" /to \");","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"drustanyjt"},"content":"        if (eventParts2.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"The end date of an event cannot be empty. \" +","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"drustanyjt"},"content":"                    \"Please use /to to specify the end date.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"drustanyjt"},"content":"        LocalDate from;","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"drustanyjt"},"content":"        LocalDate to;","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"drustanyjt"},"content":"            from \u003d LocalDate.parse(eventParts2[0]);","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"drustanyjt"},"content":"            to \u003d LocalDate.parse(eventParts2[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"drustanyjt"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"Please enter a valid date in the format yyyy-mm-dd.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"drustanyjt"},"content":"        return new EventCommand(eventParts[0], from, to);","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"drustanyjt"},"content":"    static Command parseMarkCommand(String[] commandParts) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"drustanyjt"},"content":"        if (commandParts.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"The index of a mark cannot be empty.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"drustanyjt"},"content":"        int indexToMark;","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"drustanyjt"},"content":"            indexToMark \u003d Integer.parseInt(commandParts[1]) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"drustanyjt"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"Invalid task index provided for marking. Please provide an integer.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"drustanyjt"},"content":"        return new MarkCommand(indexToMark);","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"drustanyjt"},"content":"    static Command parseUnmarkCommand(String[] commandParts) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"drustanyjt"},"content":"        if (commandParts.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"The index of an unmark cannot be empty.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"drustanyjt"},"content":"        int indexToUnmark;","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"drustanyjt"},"content":"            indexToUnmark \u003d Integer.parseInt(commandParts[1]) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":121,"author":{"gitId":"drustanyjt"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":122,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"Invalid task index provided for unmarking. Please provide an integer.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":124,"author":{"gitId":"drustanyjt"},"content":"        return new UnmarkCommand(indexToUnmark);","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"drustanyjt"},"content":"    static Command parseDeleteCommand(String[] commandParts) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":128,"author":{"gitId":"drustanyjt"},"content":"        if (commandParts.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":129,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"The index of a delete cannot be empty.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":130,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":131,"author":{"gitId":"drustanyjt"},"content":"        int indexToDelete;","lastModifiedDate":"2024-02-04"},{"lineNumber":132,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":133,"author":{"gitId":"drustanyjt"},"content":"            indexToDelete \u003d Integer.parseInt(commandParts[1]) - 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":134,"author":{"gitId":"drustanyjt"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":135,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"Invalid task index provided for deletion. Please provide an integer.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":137,"author":{"gitId":"drustanyjt"},"content":"        return new DeleteCommand(indexToDelete);","lastModifiedDate":"2024-02-04"},{"lineNumber":138,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":139,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":139}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"import java.util.List;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"/*","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":" * The Storage class is used to read and write data to the hard disk.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"public class Storage {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"    protected String filePath;","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"    /*","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"     * Constructs Storage object with filePath as a String.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"    /*","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"     * Writes data to the hard disk.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"    public void save(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"                fileWriter.write(encodeTask(task) + \"\\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"            fileWriter.close();","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"drustanyjt"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"Error writing to file\");","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"drustanyjt"},"content":"    /*","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"drustanyjt"},"content":"     * Reads data from the hard disk.","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"drustanyjt"},"content":"    public List\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"drustanyjt"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"drustanyjt"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(Paths.get(filePath));","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"drustanyjt"},"content":"            for (String line : lines) {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"drustanyjt"},"content":"                tasks.add(decodeTask(line));","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"drustanyjt"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"drustanyjt"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"Error reading from file\");","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"drustanyjt"},"content":"        return tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"drustanyjt"},"content":"    /*","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"drustanyjt"},"content":"     * Encodes task to a String for saving to the hard disk.","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"drustanyjt"},"content":"     * Prepends the type of task to the task\u0027s fileString.","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"drustanyjt"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"drustanyjt"},"content":"     * @param task the Task to be encoded.","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"drustanyjt"},"content":"     * @return Encoded task as a String.","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"drustanyjt"},"content":"    public String encodeTask(Task task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"drustanyjt"},"content":"        return task.getType() + \" | \" + task.toFileString();","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"drustanyjt"},"content":"    public Task decodeTask(String encodedTaskString) throws DukeException{","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"drustanyjt"},"content":"        String[] taskDetails \u003d encodedTaskString.split(\" \\\\| \", 2);","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"drustanyjt"},"content":"        String taskType \u003d taskDetails[0];","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"drustanyjt"},"content":"        String taskFileString \u003d taskDetails[1];","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"drustanyjt"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"drustanyjt"},"content":"            case \"T\":","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"drustanyjt"},"content":"                return Todo.TodoFromFileString(taskFileString);","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"drustanyjt"},"content":"            case \"D\":","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"drustanyjt"},"content":"                return Deadline.DeadlineFromFileString(taskFileString);","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"drustanyjt"},"content":"            case \"E\":","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"drustanyjt"},"content":"                return Event.EventFromFileString(taskFileString);","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"drustanyjt"},"content":"            default:","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"drustanyjt"},"content":"                throw new DukeException(\"Error reading from file\");","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":87}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"    private final String TYPE \u003d \"D\";","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"Please enter a valid date in the format yyyy-mm-dd\");","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"    /*","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"     * Constructs Deadline object with description and by as LocalDate objects.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"    public Deadline(String description, LocalDate by, boolean isDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"    public String getType() {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"        return TYPE;","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"drustanyjt"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"drustanyjt"},"content":"        return \"[\" + TYPE + \"]\" + super.toString() + \" (by: \" + by.format(Task.DATE_TIME_FORMATTER) + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"drustanyjt"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"drustanyjt"},"content":"        return TYPE + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by;","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"drustanyjt"},"content":"    public static Deadline DeadlineFromFileString(String fileString) {","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"drustanyjt"},"content":"        String[] taskDetails \u003d fileString.split(\" \\\\| \");","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"drustanyjt"},"content":"        boolean isDone \u003d taskDetails[1].equals(\"1\");","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"drustanyjt"},"content":"        String description \u003d taskDetails[2];","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"drustanyjt"},"content":"        LocalDate by \u003d LocalDate.parse(taskDetails[3]);","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"drustanyjt"},"content":"        return new Deadline(description, by, isDone);","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":57,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"drustanyjt":57}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"/*","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":" * The Event class is a subclass of Task and represents a task that starts","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":" * at a specific time and ends at a specific time.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":" * It takes in a LocalData as the start time and end time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"    /*","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"     * Constructs Event object with description, from and to as Strings.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"    public Event(String description, String from, String to) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"            this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"            this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"Please enter a valid date in the format yyyy-mm-dd\");","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"    /*","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"     * Constructs Event object with description, from and to as LocalDate objects.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"    public Event(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"    public Event(String description, LocalDate from, LocalDate to, boolean isDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"drustanyjt"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"drustanyjt"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"drustanyjt"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"drustanyjt"},"content":"    public String getType() {","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"drustanyjt"},"content":"        return \"E\";","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"drustanyjt"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"drustanyjt"},"content":"        return \"[\" + getType() + \"]\" + super.toString() + \" (from: \" + from.format(Task.DATE_TIME_FORMATTER) +","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"drustanyjt"},"content":"               \" to: \" + to.format(Task.DATE_TIME_FORMATTER) + \")\";","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":55,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"drustanyjt"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"drustanyjt"},"content":"        return getType() + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + from + \" | \" + to;","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"drustanyjt"},"content":"    public static Event EventFromFileString(String fileString) {","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"drustanyjt"},"content":"        String[] taskDetails \u003d fileString.split(\" \\\\| \");","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"drustanyjt"},"content":"        boolean isDone \u003d taskDetails[1].equals(\"1\");","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"drustanyjt"},"content":"        String description \u003d taskDetails[2];","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"drustanyjt"},"content":"        LocalDate from \u003d LocalDate.parse(taskDetails[3]);","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"drustanyjt"},"content":"        LocalDate to \u003d LocalDate.parse(taskDetails[4]);","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"drustanyjt"},"content":"        return new Event(description, from, to, isDone);","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"drustanyjt":69}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"    protected String description;","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"    protected static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"        this.isDone \u003d false; // Task is not done by default","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"        return (isDone ? \"x\" : \" \");","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"        // Mark task as done","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"        // Mark task as done","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"        // Return task description","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"        return this.description;","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"drustanyjt"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"drustanyjt"},"content":"        // Return task status icon and description","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"drustanyjt"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2024-01-22"},{"lineNumber":43,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":44,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"drustanyjt"},"content":"    public abstract String toFileString();","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"drustanyjt"},"content":"    public abstract String getType();","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"drustanyjt"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"drustanyjt"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"drustanyjt":52}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"public class Todo extends Task{","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"    public Todo (String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"    public Todo (String description, boolean isDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"        super(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"    public String getType() {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"        return \"T\";","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"        return \"[\" + this.getType() + \"]\" + super.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"        return this.getType() + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"    public static Todo TodoFromFileString(String fileString) {","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"        String[] taskDetails \u003d fileString.split(\" \\\\| \");","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"        boolean isDone \u003d taskDetails[1].equals(\"1\");","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"        String description \u003d taskDetails[2];","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"        return new Todo(description, isDone);","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"drustanyjt":35}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.tasklist;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"import java.util.List;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"public class TaskList {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"    public void deleteTask(int index) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"The task number is out of bounds.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"    public Task getTask(int index) throws DukeException{","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"            throw new DukeException(\"The task number is out of bounds.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"drustanyjt"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"drustanyjt"},"content":"        return tasks;","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":45}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"public class Ui {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(\"Hello! I\u0027m Fluffy, \\nWhat can I do for you?\");","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"        showLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"    public void showLine() {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"    public void showGoodbye() {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(\"OOPS!!! \" + errorMessage);","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(\"Error loading file. Creating new file...\");","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"    public void showTaskList(TaskList tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"                System.out.println((i + 1) + \". \" + tasks.getTask(i));","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"drustanyjt"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"drustanyjt"},"content":"                showError(e.getMessage());","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"drustanyjt"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"drustanyjt"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"drustanyjt"},"content":"    public void showTaskAdded(Task task, int newSize) {","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(\"Now you have \" + newSize + \" tasks in the list.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"drustanyjt"},"content":"    public void showTaskDeleted(Task task, int newSize) {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"drustanyjt"},"content":"        System.out.println(\"Now you have \" + newSize + \" tasks in the list.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"drustanyjt"},"content":"    public String readCommand() {","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"drustanyjt"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"drustanyjt"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":62}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":2}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.parser;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"import static duke.parser.Parser.*;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"    public void parse_invalidCommand_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"        assertThrows(DukeException.class, () -\u003e parse(\"invalid\"));","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"    public void parseEventCommand_emptyDescription_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"        String[] commandParts \u003d new String[]{\"event\"};","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parseEventCommand(commandParts));","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"    public void parseEventCommand_noStartDate_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"        String[] commandParts \u003d new String[]{\"event\", \"description\"};","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parseEventCommand(commandParts));","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"    public void parseEventCommand_noEndDate_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"        String[] commandParts \u003d new String[]{\"event\", \"description /from 2022-01-01\"};","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parseEventCommand(commandParts));","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"    public void parseEventCommand_invalidDateFormat_exceptionThrown() {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"drustanyjt"},"content":"        String[] commandParts \u003d new String[]{\"event\", \"description /from 01-01-2022 /to 01-01-2023\"};","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"drustanyjt"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parseEventCommand(commandParts));","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"drustanyjt"},"content":"   @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"drustanyjt"},"content":"   public void parseEventCommand_validCommand_eventCommandReturned() throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"drustanyjt"},"content":"       String[] commandParts \u003d new String[]{\"event\", \"description /from 2022-01-01 /to 2023-01-01\"};","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"drustanyjt"},"content":"       Command actual \u003d Parser.parseEventCommand(commandParts);","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"drustanyjt"},"content":"       assertInstanceOf(EventCommand.class, actual);","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"drustanyjt"},"content":"   }","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":50}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"drustanyjt"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"drustanyjt"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"drustanyjt"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"drustanyjt"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"drustanyjt"},"content":"    public void getType_returnsT() {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"drustanyjt"},"content":"        Todo todo \u003d new Todo(\"description\");","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"drustanyjt"},"content":"        assertEquals(\"T\", todo.getType());","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"drustanyjt"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"drustanyjt"},"content":"    public void constructor_correctlySetsValues() {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"drustanyjt"},"content":"        Todo todo \u003d new Todo(\"description\", true);","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"drustanyjt"},"content":"        assertEquals(\"description\", todo.getDescription());","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"drustanyjt"},"content":"        assertTrue(todo.isDone());","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"drustanyjt"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"drustanyjt"},"content":"    public void toString_containsDescription() {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"drustanyjt"},"content":"        String description \u003d \"description\";","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"drustanyjt"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"drustanyjt"},"content":"        assertTrue(todo.toString().contains(description));","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"drustanyjt"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"drustanyjt"},"content":"    public void toString_containsDescription_variations() {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"drustanyjt"},"content":"        String description1 \u003d \"description with spaces\";","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"drustanyjt"},"content":"        Todo todo1 \u003d new Todo(description1);","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"drustanyjt"},"content":"        assertTrue(todo1.toString().contains(description1));","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"drustanyjt"},"content":"        String description2 \u003d \"description_with_underscores\";","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"drustanyjt"},"content":"        Todo todo2 \u003d new Todo(description2);","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"drustanyjt"},"content":"        assertTrue(todo2.toString().contains(description2));","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"drustanyjt"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"drustanyjt"},"content":"        String description3 \u003d \"description-with-hyphens\";","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"drustanyjt"},"content":"        Todo todo3 \u003d new Todo(description3);","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"drustanyjt"},"content":"        assertTrue(todo3.toString().contains(description3));","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"drustanyjt"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"drustanyjt"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"drustanyjt":43}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"drustanyjt"},"content":"bye","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"drustanyjt":1}}]
