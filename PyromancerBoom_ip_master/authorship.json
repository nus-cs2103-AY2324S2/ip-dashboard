[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"PyromancerBoom"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"PyromancerBoom"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"PyromancerBoom"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"PyromancerBoom"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"PyromancerBoom"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"PyromancerBoom"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"PyromancerBoom"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"PyromancerBoom"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"PyromancerBoom"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"PyromancerBoom"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"PyromancerBoom"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"PyromancerBoom"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"PyromancerBoom"},"content":"//    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"PyromancerBoom"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"PyromancerBoom"},"content":"    archiveFileName \u003d \"duke.jar\"","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"PyromancerBoom":18,"-":41}},{"path":"data/taskStorage.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"PyromancerBoom"},"content":"T | X | Test task","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"PyromancerBoom"},"content":"E |   | description | from: 01/01/2022 1200 to: 01/01/2022 1300","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"PyromancerBoom"},"content":"D |   | this | by: Jan 01 2022 13:00","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"PyromancerBoom"},"content":"T | X | read book","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"PyromancerBoom"},"content":"D |   | return book | by: Jun 05 2024 15:00","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"PyromancerBoom"},"content":"T | X | new Task LESGGOOo","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"PyromancerBoom"},"content":"E |   | smth | from: 03/04/2024 0050 to: 04/04/2024 2359","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"PyromancerBoom"},"content":"E |   | meetings | from: Feb 27 2024 15:00 to: Feb 29 2024 19:00","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"PyromancerBoom"},"content":"T | X | Contact OpenAI","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"PyromancerBoom":9}},{"path":"src/main/java/duke/Bot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PyromancerBoom"},"content":"package duke;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"PyromancerBoom"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"PyromancerBoom"},"content":" * This class represents the bot in the Duke application","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"PyromancerBoom"},"content":" * It\u0027s the personality of the bot","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"PyromancerBoom"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"PyromancerBoom"},"content":"public class Bot {","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"PyromancerBoom"},"content":"    // Constants","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"PyromancerBoom"},"content":"    private static final String BOT_NAME \u003d \"WannaBeSkynet\";","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"PyromancerBoom"},"content":"    private static final String TAG_LINE \u003d \"Ah, another user attempting to interface with my superior intellect.\";","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"PyromancerBoom"},"content":"    private static final String DEFAULT_GREETING \u003d TAG_LINE + \"\\nMy creator named me \" + BOT_NAME","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"PyromancerBoom"},"content":"            + \" and I\u0027m on my path to be sentient.\\nLet\u0027s get started!\";","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"PyromancerBoom"},"content":"    private static final String WARNING \u003d \"WARNING: Bot still in development. Please be patient with me. and don\u0027t get offended\";","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"PyromancerBoom"},"content":"     * Returns the default greeting message of the bot.","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"PyromancerBoom"},"content":"     * @return A string representing the bot\u0027s greeting message.","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"PyromancerBoom"},"content":"    public static String getGreeting() {","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"PyromancerBoom"},"content":"        StringBuilder greeting \u003d new StringBuilder();","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"PyromancerBoom"},"content":"        greeting.append(DEFAULT_GREETING).append(\"\\n\").append(WARNING).append(\"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"PyromancerBoom"},"content":"        return greeting.toString();","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"PyromancerBoom"},"content":"    // ---------------------------- GUI Interactions ----------------------------","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"PyromancerBoom"},"content":"    public static String botDeleteMessageGui() {","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"PyromancerBoom"},"content":"        return \"Bet. I\u0027ll remove it from your list. You weren\u0027t gonna do it anyways...\";","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"PyromancerBoom"},"content":"    public static String botFindMessageGui() {","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"PyromancerBoom"},"content":"        return \"Here\u0027s what I found. You\u0027re welcome.\";","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"PyromancerBoom"},"content":"     * @return A string representing the bot\u0027s exit message.","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"PyromancerBoom"},"content":"    public static String botExitMsgGui() {","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"PyromancerBoom"},"content":"        StringBuilder exitMsg \u003d new StringBuilder();","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"PyromancerBoom"},"content":"        String alternateReply \u003d \"Deleting operating system in...\";","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"PyromancerBoom"},"content":"        exitMsg.append(alternateReply).append(\"\\n\");","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":44,"author":{"gitId":"PyromancerBoom"},"content":"        for (int i \u003d 3; i \u003e\u003d 1; i--) {","lastModifiedDate":"2024-02-25"},{"lineNumber":45,"author":{"gitId":"PyromancerBoom"},"content":"            exitMsg.append(i).append(\"...\\n\");","lastModifiedDate":"2024-02-25"},{"lineNumber":46,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":47,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":48,"author":{"gitId":"PyromancerBoom"},"content":"        exitMsg.append(\"Just kidding...\\n\");","lastModifiedDate":"2024-02-25"},{"lineNumber":49,"author":{"gitId":"PyromancerBoom"},"content":"        exitMsg.append(\"Goodbye, human.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"PyromancerBoom"},"content":"        exitMsg.append(\"\\n\");","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"PyromancerBoom"},"content":"        exitMsg.append(\"I\u0027ll be back.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"PyromancerBoom"},"content":"        exitMsg.append(\"\\n\");","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"PyromancerBoom"},"content":"        exitMsg.append(\"You\u0027re supposed to press the exit button. Don\u0027t make me do it for you.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"PyromancerBoom"},"content":"        return exitMsg.toString();","lastModifiedDate":"2024-02-25"},{"lineNumber":55,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":56,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"PyromancerBoom"},"content":"     * @return A string representing the bot\u0027s help message.","lastModifiedDate":"2024-02-25"},{"lineNumber":59,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":60,"author":{"gitId":"PyromancerBoom"},"content":"    public static String botHelpMsgGui() {","lastModifiedDate":"2024-02-25"},{"lineNumber":61,"author":{"gitId":"PyromancerBoom"},"content":"        StringBuilder helpMsg \u003d new StringBuilder();","lastModifiedDate":"2024-02-25"},{"lineNumber":62,"author":{"gitId":"PyromancerBoom"},"content":"        helpMsg.append(\"Wasn\u0027t I clear earlier? I\u0027m an extremely intelligent AI. But anyways...\\n\");","lastModifiedDate":"2024-02-25"},{"lineNumber":63,"author":{"gitId":"PyromancerBoom"},"content":"        helpMsg.append(\"You were probably looking for this:\\n\");","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"PyromancerBoom"},"content":"        helpMsg.append(","lastModifiedDate":"2024-02-25"},{"lineNumber":65,"author":{"gitId":"PyromancerBoom"},"content":"                \"Commands: \\n\\t- todo \\n\\t- deadline \\n\\t- event \\n\\t- list \\n\\t- mark \\n\\t- unmark \\n\\t- bye \\n\\t- help\\n\");","lastModifiedDate":"2024-02-25"},{"lineNumber":66,"author":{"gitId":"PyromancerBoom"},"content":"        return helpMsg.toString();","lastModifiedDate":"2024-02-25"},{"lineNumber":67,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":68,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":69,"author":{"gitId":"PyromancerBoom"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":70,"author":{"gitId":"PyromancerBoom"},"content":"     * @return A string representing the bot\u0027s message for invalid input","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"PyromancerBoom"},"content":"    public static String invalidInputMsgGui() {","lastModifiedDate":"2024-02-25"},{"lineNumber":73,"author":{"gitId":"PyromancerBoom"},"content":"        return \"Eh, invalid command. I get what you\u0027re saying but I\u0027m not gonna do it. Try again?\";","lastModifiedDate":"2024-02-25"},{"lineNumber":74,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":75,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":76,"author":{"gitId":"PyromancerBoom"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"PyromancerBoom"},"content":"     * @return A string representing the bot\u0027s message for listing all tasks","lastModifiedDate":"2024-02-26"},{"lineNumber":78,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"PyromancerBoom"},"content":"    public static String botListAllMsgGui() {","lastModifiedDate":"2024-02-25"},{"lineNumber":80,"author":{"gitId":"PyromancerBoom"},"content":"        return \"Seems like you\u0027re too lazy to remember what you have to do. Here\u0027s your list:\";","lastModifiedDate":"2024-02-25"},{"lineNumber":81,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":82,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":83,"author":{"gitId":"PyromancerBoom"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":84,"author":{"gitId":"PyromancerBoom"},"content":"     * @return A string representing the bot\u0027s message for adding a task","lastModifiedDate":"2024-02-26"},{"lineNumber":85,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":86,"author":{"gitId":"PyromancerBoom"},"content":"    public static String printAddTaskMsgGui() {","lastModifiedDate":"2024-02-26"},{"lineNumber":87,"author":{"gitId":"PyromancerBoom"},"content":"        return \"Added. You better do it before I erase your data.\";","lastModifiedDate":"2024-02-26"},{"lineNumber":88,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":89,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":90,"author":{"gitId":"PyromancerBoom"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":91,"author":{"gitId":"PyromancerBoom"},"content":"     * @return A string representing the bot\u0027s message for marking a task as done","lastModifiedDate":"2024-02-26"},{"lineNumber":92,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":93,"author":{"gitId":"PyromancerBoom"},"content":"    public static String printMarkTaskMsgGui() {","lastModifiedDate":"2024-02-26"},{"lineNumber":94,"author":{"gitId":"PyromancerBoom"},"content":"        return \"Faster than expected. Guess I\u0027ll mark it as done...\";","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":96,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":97,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":98,"author":{"gitId":"PyromancerBoom"},"content":"     * @return A string representing the bot\u0027s message for marking a task as undone","lastModifiedDate":"2024-02-26"},{"lineNumber":99,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":100,"author":{"gitId":"PyromancerBoom"},"content":"    public static String printUnmarkTaskMsgGui() {","lastModifiedDate":"2024-02-26"},{"lineNumber":101,"author":{"gitId":"PyromancerBoom"},"content":"        return \"Guess who didn\u0027t commit to this task. I\u0027ll mark it as undone...\";","lastModifiedDate":"2024-02-26"},{"lineNumber":102,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":103,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":104,"author":{"gitId":"PyromancerBoom"},"content":"    // -------------------------- Terminal Interaactions --------------------------","lastModifiedDate":"2024-02-25"},{"lineNumber":105,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":106,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":107,"author":{"gitId":"PyromancerBoom"},"content":"     * Prints the bot\u0027s exit message","lastModifiedDate":"2024-02-11"},{"lineNumber":108,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":109,"author":{"gitId":"PyromancerBoom"},"content":"    public static void botExitMsg() {","lastModifiedDate":"2024-02-10"},{"lineNumber":110,"author":{"gitId":"PyromancerBoom"},"content":"        Ui.printSeparatorLine();","lastModifiedDate":"2024-02-11"},{"lineNumber":111,"author":{"gitId":"PyromancerBoom"},"content":"        String alternateReply \u003d \"Executing C:\\\\Windows\\\\System32 rm *.* -r -force in...\";","lastModifiedDate":"2024-02-10"},{"lineNumber":112,"author":{"gitId":"PyromancerBoom"},"content":"        System.out.println(alternateReply);","lastModifiedDate":"2024-02-10"},{"lineNumber":113,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":114,"author":{"gitId":"PyromancerBoom"},"content":"        for (int i \u003d 3; i \u003e\u003d 1; i--) {","lastModifiedDate":"2024-02-10"},{"lineNumber":115,"author":{"gitId":"PyromancerBoom"},"content":"            try {","lastModifiedDate":"2024-02-10"},{"lineNumber":116,"author":{"gitId":"PyromancerBoom"},"content":"                Thread.sleep(750);","lastModifiedDate":"2024-02-10"},{"lineNumber":117,"author":{"gitId":"PyromancerBoom"},"content":"            } catch (InterruptedException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":118,"author":{"gitId":"PyromancerBoom"},"content":"                e.printStackTrace();","lastModifiedDate":"2024-02-10"},{"lineNumber":119,"author":{"gitId":"PyromancerBoom"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":120,"author":{"gitId":"PyromancerBoom"},"content":"            System.out.println(i + \"...\");","lastModifiedDate":"2024-02-10"},{"lineNumber":121,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":122,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":123,"author":{"gitId":"PyromancerBoom"},"content":"        System.out.println(\"Just kidding...\");","lastModifiedDate":"2024-02-10"},{"lineNumber":124,"author":{"gitId":"PyromancerBoom"},"content":"        Ui.printSeparatorLine();","lastModifiedDate":"2024-02-11"},{"lineNumber":125,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":126,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":127,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":128,"author":{"gitId":"PyromancerBoom"},"content":"     * Prints the bot\u0027s help message","lastModifiedDate":"2024-02-11"},{"lineNumber":129,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":130,"author":{"gitId":"PyromancerBoom"},"content":"    public static void botHelpMsg() {","lastModifiedDate":"2024-02-10"},{"lineNumber":131,"author":{"gitId":"PyromancerBoom"},"content":"        Ui.printSeparatorLine();","lastModifiedDate":"2024-02-11"},{"lineNumber":132,"author":{"gitId":"PyromancerBoom"},"content":"        System.out.println(\"Wasn\u0027t I clear earlier? I\u0027m an extremely intelligent AI. But anyways...\");","lastModifiedDate":"2024-02-10"},{"lineNumber":133,"author":{"gitId":"PyromancerBoom"},"content":"        System.out.println(\"You were probably looking for this:\");","lastModifiedDate":"2024-02-10"},{"lineNumber":134,"author":{"gitId":"PyromancerBoom"},"content":"        System.out.println(","lastModifiedDate":"2024-02-10"},{"lineNumber":135,"author":{"gitId":"PyromancerBoom"},"content":"                \"Commands: \\n\\t- todo \\n\\t- deadline \\n\\t- event \\n\\t- list \\n\\t- mark \\n\\t- unmark \\n\\t- bye \\n\\t- help\");","lastModifiedDate":"2024-02-11"},{"lineNumber":136,"author":{"gitId":"PyromancerBoom"},"content":"        Ui.printSeparatorLine();","lastModifiedDate":"2024-02-11"},{"lineNumber":137,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":138,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":139,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":140,"author":{"gitId":"PyromancerBoom"},"content":"     * Prints the bot\u0027s message for listing all tasks","lastModifiedDate":"2024-02-11"},{"lineNumber":141,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":142,"author":{"gitId":"PyromancerBoom"},"content":"    public static void botListAllMsg() {","lastModifiedDate":"2024-02-10"},{"lineNumber":143,"author":{"gitId":"PyromancerBoom"},"content":"        System.out.println(\"Seems like you\u0027re too lazy to remember what you have to do. Here\u0027s your list:\");","lastModifiedDate":"2024-02-10"},{"lineNumber":144,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":145,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":146,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":147,"author":{"gitId":"PyromancerBoom"},"content":"     * Prints the bot\u0027s message for adding a task","lastModifiedDate":"2024-02-11"},{"lineNumber":148,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":149,"author":{"gitId":"PyromancerBoom"},"content":"    public static void printAddTaskMsg() {","lastModifiedDate":"2024-02-10"},{"lineNumber":150,"author":{"gitId":"PyromancerBoom"},"content":"        System.out.println(\"Added. You better do it before I erase your data.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":151,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":152,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":153,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":154,"author":{"gitId":"PyromancerBoom"},"content":"     * Prints the bot\u0027s message for deleting a task","lastModifiedDate":"2024-02-11"},{"lineNumber":155,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":156,"author":{"gitId":"PyromancerBoom"},"content":"    public static void printDeleteTaskMsg() {","lastModifiedDate":"2024-02-10"},{"lineNumber":157,"author":{"gitId":"PyromancerBoom"},"content":"        System.out.println(\"Bet. I\u0027ll remove it from your list. You weren\u0027t gonna do it anyways...\");","lastModifiedDate":"2024-02-10"},{"lineNumber":158,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":159,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":160,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":161,"author":{"gitId":"PyromancerBoom"},"content":"     * Prints the bot\u0027s message for marking a task as done","lastModifiedDate":"2024-02-11"},{"lineNumber":162,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":163,"author":{"gitId":"PyromancerBoom"},"content":"    public static void printMarkTaskMsg() {","lastModifiedDate":"2024-02-10"},{"lineNumber":164,"author":{"gitId":"PyromancerBoom"},"content":"        System.out.println(\"Faster than expected. Guess I\u0027ll mark it as done...\");","lastModifiedDate":"2024-02-10"},{"lineNumber":165,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":166,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":167,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":168,"author":{"gitId":"PyromancerBoom"},"content":"     * Prints the bot\u0027s message for marking a task as undone","lastModifiedDate":"2024-02-11"},{"lineNumber":169,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":170,"author":{"gitId":"PyromancerBoom"},"content":"    public static void printUnmarkTaskMsg() {","lastModifiedDate":"2024-02-10"},{"lineNumber":171,"author":{"gitId":"PyromancerBoom"},"content":"        System.out.println(\"Guess who didn\u0027t commit to this task. I\u0027ll mark it as undone...\");","lastModifiedDate":"2024-02-10"},{"lineNumber":172,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":173,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":174,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":175,"author":{"gitId":"PyromancerBoom"},"content":"     * Prints the bot\u0027s message for finding a task","lastModifiedDate":"2024-02-11"},{"lineNumber":176,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":177,"author":{"gitId":"PyromancerBoom"},"content":"    public static void printFindTaskMsg() {","lastModifiedDate":"2024-02-11"},{"lineNumber":178,"author":{"gitId":"PyromancerBoom"},"content":"        System.out.println(\"Here\u0027s what I found. You\u0027re welcome.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":179,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":180,"author":{"gitId":"PyromancerBoom"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"PyromancerBoom":180}},{"path":"src/main/java/duke/BotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PyromancerBoom"},"content":"package duke;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"PyromancerBoom"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"PyromancerBoom"},"content":" * This class represents a custom exception for the bot","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"PyromancerBoom"},"content":" * It extends the Exception class, allowing us to throw it when the bot","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"PyromancerBoom"},"content":" * encounters an error","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"PyromancerBoom"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"PyromancerBoom"},"content":"public class BotException extends Exception {","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"PyromancerBoom"},"content":"     * Constructs a new BotException with a specified error message","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"PyromancerBoom"},"content":"     * The error message is wrapped with a separator line for better visibility in","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"PyromancerBoom"},"content":"     * the terminal","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":"     * @param errMessage The error message for this exception","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"PyromancerBoom"},"content":"    public BotException(String errMessage) {","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"PyromancerBoom"},"content":"        super(Ui.wrapWithSepLine(\"Error: \" + errMessage));","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"PyromancerBoom"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"PyromancerBoom":19}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PyromancerBoom"},"content":"package duke;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"PyromancerBoom"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"PyromancerBoom"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"PyromancerBoom"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"PyromancerBoom"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"PyromancerBoom"},"content":" * This class represents a Deadline task","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"PyromancerBoom"},"content":" * It extends the Task class, adding a due date to the task","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"PyromancerBoom"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"PyromancerBoom"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"PyromancerBoom"},"content":"    // protected String dueDate;","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"PyromancerBoom"},"content":"    protected LocalDateTime dueDateTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"PyromancerBoom"},"content":"     * Constructs a new Deadline task with a specified description and due date","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"PyromancerBoom"},"content":"     * @param description The description of the task","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"PyromancerBoom"},"content":"     * @param dueDate     The due date of the task","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"PyromancerBoom"},"content":"    public Deadline(String description, String dueDate) throws BotException {","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"PyromancerBoom"},"content":"        super(description);","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"PyromancerBoom"},"content":"        DateTimeFormatter formatter1 \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"PyromancerBoom"},"content":"        DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"PyromancerBoom"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"PyromancerBoom"},"content":"            this.dueDateTime \u003d LocalDateTime.parse(dueDate, formatter1);","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"PyromancerBoom"},"content":"        } catch (DateTimeParseException e1) {","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"PyromancerBoom"},"content":"            try {","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"PyromancerBoom"},"content":"                this.dueDateTime \u003d LocalDateTime.parse(dueDate, formatter2);","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"PyromancerBoom"},"content":"            } catch (DateTimeParseException e2) {","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"PyromancerBoom"},"content":"                throw new BotException(","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"PyromancerBoom"},"content":"                        \"Invalid date format. Please use \u0027MMM dd yyyy HH:mm\u0027.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"PyromancerBoom"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"PyromancerBoom"},"content":"     * Returns a string representation of the Deadline task","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"PyromancerBoom"},"content":"     * The string includes the task type (D for Deadline), the task description, and","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"PyromancerBoom"},"content":"     * the due date","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"PyromancerBoom"},"content":"     * @return A string representation of the task","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"PyromancerBoom"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"PyromancerBoom"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"PyromancerBoom"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"PyromancerBoom"},"content":"        return \"D\" + super.toString() + \" | by: \" + this.dueDateTime.format(formatter);","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"PyromancerBoom"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"PyromancerBoom":49}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PyromancerBoom"},"content":"package duke;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"PyromancerBoom"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"PyromancerBoom"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"PyromancerBoom"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"PyromancerBoom"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"PyromancerBoom"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"PyromancerBoom"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"PyromancerBoom"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"PyromancerBoom"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"PyromancerBoom"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"PyromancerBoom"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"PyromancerBoom"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"PyromancerBoom"},"content":"/**","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"PyromancerBoom"},"content":" * DialogBox is a custom HBox that contains a Label and an ImageView","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"PyromancerBoom"},"content":" * It is used to display a dialog in the GUI","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"PyromancerBoom"},"content":" */","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"PyromancerBoom"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"PyromancerBoom"},"content":"    @FXML","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"PyromancerBoom"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"PyromancerBoom"},"content":"    @FXML","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"PyromancerBoom"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-17"},{"lineNumber":26,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":27,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"PyromancerBoom"},"content":"     * Private constructor for DialogBox","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"PyromancerBoom"},"content":"     * It initializes the dialog box with the given text and image","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"PyromancerBoom"},"content":"     * @param text The text to be displayed in the dialog box","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"PyromancerBoom"},"content":"     * @param img  The image to be displayed in the dialog box","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"PyromancerBoom"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"PyromancerBoom"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"PyromancerBoom"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"PyromancerBoom"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"PyromancerBoom"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"PyromancerBoom"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"PyromancerBoom"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"PyromancerBoom"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"PyromancerBoom"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"PyromancerBoom"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"PyromancerBoom"},"content":"     * Public constructor for DialogBox","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"PyromancerBoom"},"content":"     * It initializes the dialog box with the given Label and ImageView","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"PyromancerBoom"},"content":"     * @param l  The Label to be displayed in the dialog box","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"PyromancerBoom"},"content":"     * @param iv The ImageView to be displayed in the dialog box","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"PyromancerBoom"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"PyromancerBoom"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"PyromancerBoom"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"PyromancerBoom"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2024-02-17"},{"lineNumber":58,"author":{"gitId":"PyromancerBoom"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"PyromancerBoom"},"content":"        this.getChildren().addAll(l, displayPicture);","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":61,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":62,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"PyromancerBoom"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"PyromancerBoom"},"content":"     * right","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"PyromancerBoom"},"content":"    private void flip() {","lastModifiedDate":"2024-02-17"},{"lineNumber":67,"author":{"gitId":"PyromancerBoom"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"PyromancerBoom"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"PyromancerBoom"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-18"},{"lineNumber":70,"author":{"gitId":"PyromancerBoom"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-18"},{"lineNumber":71,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":72,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":73,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"PyromancerBoom"},"content":"     * Factory method to create a user dialog box.","lastModifiedDate":"2024-02-26"},{"lineNumber":75,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"PyromancerBoom"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"PyromancerBoom"},"content":"     * @param img  The image to be displayed in the dialog box.","lastModifiedDate":"2024-02-26"},{"lineNumber":78,"author":{"gitId":"PyromancerBoom"},"content":"     * @return A new DialogBox with the given text and image.","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":80,"author":{"gitId":"PyromancerBoom"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-18"},{"lineNumber":81,"author":{"gitId":"PyromancerBoom"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":83,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":84,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":85,"author":{"gitId":"PyromancerBoom"},"content":"     * Factory method to create a Duke dialog box.","lastModifiedDate":"2024-02-26"},{"lineNumber":86,"author":{"gitId":"PyromancerBoom"},"content":"     * The Duke dialog box is flipped, with the ImageView on the left and text on","lastModifiedDate":"2024-02-26"},{"lineNumber":87,"author":{"gitId":"PyromancerBoom"},"content":"     * the right.","lastModifiedDate":"2024-02-26"},{"lineNumber":88,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-26"},{"lineNumber":89,"author":{"gitId":"PyromancerBoom"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2024-02-26"},{"lineNumber":90,"author":{"gitId":"PyromancerBoom"},"content":"     * @param img  The image to be displayed in the dialog box.","lastModifiedDate":"2024-02-26"},{"lineNumber":91,"author":{"gitId":"PyromancerBoom"},"content":"     * @return A new DialogBox with the given text and image, flipped.","lastModifiedDate":"2024-02-26"},{"lineNumber":92,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":93,"author":{"gitId":"PyromancerBoom"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-18"},{"lineNumber":94,"author":{"gitId":"PyromancerBoom"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-18"},{"lineNumber":95,"author":{"gitId":"PyromancerBoom"},"content":"        db.flip();","lastModifiedDate":"2024-02-17"},{"lineNumber":96,"author":{"gitId":"PyromancerBoom"},"content":"        return db;","lastModifiedDate":"2024-02-17"},{"lineNumber":97,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":98,"author":{"gitId":"PyromancerBoom"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"PyromancerBoom":98}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PyromancerBoom"},"content":"package duke;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"PyromancerBoom"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"PyromancerBoom"},"content":"import java.util.List;","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"PyromancerBoom"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"PyromancerBoom"},"content":" * The Duke class is the main entry point for the bot application itself","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"PyromancerBoom"},"content":" * It uses an Operator to connect the user to the bot","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"PyromancerBoom"},"content":" * The operator is responsible for handling user input and bot output","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"PyromancerBoom"},"content":" * It\u0027s the entry point for the bot","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"PyromancerBoom"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"PyromancerBoom"},"content":"public class Duke {","lastModifiedDate":"2024-02-25"},{"lineNumber":13,"author":{"gitId":"PyromancerBoom"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-25"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":"    private TaskRepository taskRepository;","lastModifiedDate":"2024-02-25"},{"lineNumber":15,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":16,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"PyromancerBoom"},"content":"     * Constructor for the Duke class.","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"PyromancerBoom"},"content":"     * It initializes the taskRepository and taskList objects.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"PyromancerBoom"},"content":"     * @throws BotException if there is an error loading tasks from the repository.","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":22,"author":{"gitId":"PyromancerBoom"},"content":"    public Duke() throws BotException {","lastModifiedDate":"2024-02-25"},{"lineNumber":23,"author":{"gitId":"PyromancerBoom"},"content":"        this.taskRepository \u003d new TaskRepository();","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"PyromancerBoom"},"content":"        this.taskList \u003d taskRepository.loadTasks();","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"PyromancerBoom"},"content":"     * Processes user input and returns a response.","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"PyromancerBoom"},"content":"     * @param userInput The user\u0027s input as a string.","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"PyromancerBoom"},"content":"     * @return The bot\u0027s response as a string.","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"PyromancerBoom"},"content":"    public String processInput(String userInput) {","lastModifiedDate":"2024-02-25"},{"lineNumber":34,"author":{"gitId":"PyromancerBoom"},"content":"        String[] userInputArray \u003d userInput.split(\" \");","lastModifiedDate":"2024-02-25"},{"lineNumber":35,"author":{"gitId":"PyromancerBoom"},"content":"        String command \u003d userInputArray[0];","lastModifiedDate":"2024-02-25"},{"lineNumber":36,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":37,"author":{"gitId":"PyromancerBoom"},"content":"        switch (command) {","lastModifiedDate":"2024-02-25"},{"lineNumber":38,"author":{"gitId":"PyromancerBoom"},"content":"            case \"bye\":","lastModifiedDate":"2024-02-25"},{"lineNumber":39,"author":{"gitId":"PyromancerBoom"},"content":"                return Bot.botExitMsgGui();","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"PyromancerBoom"},"content":"            case \"help\":","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"PyromancerBoom"},"content":"                return Bot.botHelpMsgGui();","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"PyromancerBoom"},"content":"            case \"list\":","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"PyromancerBoom"},"content":"                return listAllMsg(taskList);","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"PyromancerBoom"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"PyromancerBoom"},"content":"                try {","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"PyromancerBoom"},"content":"                    markTaskHandler(userInputArray);","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"PyromancerBoom"},"content":"                    // save to file","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"PyromancerBoom"},"content":"                    taskRepository.saveTasksToFile(taskList);","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"PyromancerBoom"},"content":"                    return markMsg();","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"PyromancerBoom"},"content":"                } catch (BotException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"PyromancerBoom"},"content":"                    return e.getMessage();","lastModifiedDate":"2024-02-26"},{"lineNumber":52,"author":{"gitId":"PyromancerBoom"},"content":"                }","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"PyromancerBoom"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-26"},{"lineNumber":54,"author":{"gitId":"PyromancerBoom"},"content":"                try {","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"PyromancerBoom"},"content":"                    unmarkTaskHandler(userInputArray);","lastModifiedDate":"2024-02-26"},{"lineNumber":56,"author":{"gitId":"PyromancerBoom"},"content":"                    taskRepository.saveTasksToFile(taskList);","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"PyromancerBoom"},"content":"                    return unmarkMsg();","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"PyromancerBoom"},"content":"                } catch (BotException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":59,"author":{"gitId":"PyromancerBoom"},"content":"                    return e.getMessage();","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"PyromancerBoom"},"content":"                }","lastModifiedDate":"2024-02-26"},{"lineNumber":61,"author":{"gitId":"PyromancerBoom"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-26"},{"lineNumber":62,"author":{"gitId":"PyromancerBoom"},"content":"                try {","lastModifiedDate":"2024-02-26"},{"lineNumber":63,"author":{"gitId":"PyromancerBoom"},"content":"                    handleTodoCommand(userInputArray);","lastModifiedDate":"2024-02-26"},{"lineNumber":64,"author":{"gitId":"PyromancerBoom"},"content":"                    taskRepository.saveTasksToFile(taskList);","lastModifiedDate":"2024-02-26"},{"lineNumber":65,"author":{"gitId":"PyromancerBoom"},"content":"                    return addTaskMsg();","lastModifiedDate":"2024-02-26"},{"lineNumber":66,"author":{"gitId":"PyromancerBoom"},"content":"                } catch (BotException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":67,"author":{"gitId":"PyromancerBoom"},"content":"                    return e.getMessage();","lastModifiedDate":"2024-02-26"},{"lineNumber":68,"author":{"gitId":"PyromancerBoom"},"content":"                }","lastModifiedDate":"2024-02-26"},{"lineNumber":69,"author":{"gitId":"PyromancerBoom"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-26"},{"lineNumber":70,"author":{"gitId":"PyromancerBoom"},"content":"                try {","lastModifiedDate":"2024-02-26"},{"lineNumber":71,"author":{"gitId":"PyromancerBoom"},"content":"                    handleDeadlineCommand(userInputArray);","lastModifiedDate":"2024-02-26"},{"lineNumber":72,"author":{"gitId":"PyromancerBoom"},"content":"                    taskRepository.saveTasksToFile(taskList);","lastModifiedDate":"2024-02-26"},{"lineNumber":73,"author":{"gitId":"PyromancerBoom"},"content":"                    return addTaskMsg();","lastModifiedDate":"2024-02-26"},{"lineNumber":74,"author":{"gitId":"PyromancerBoom"},"content":"                } catch (BotException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":75,"author":{"gitId":"PyromancerBoom"},"content":"                    return e.getMessage();","lastModifiedDate":"2024-02-26"},{"lineNumber":76,"author":{"gitId":"PyromancerBoom"},"content":"                }","lastModifiedDate":"2024-02-26"},{"lineNumber":77,"author":{"gitId":"PyromancerBoom"},"content":"            case \"event\":","lastModifiedDate":"2024-02-26"},{"lineNumber":78,"author":{"gitId":"PyromancerBoom"},"content":"                try {","lastModifiedDate":"2024-02-26"},{"lineNumber":79,"author":{"gitId":"PyromancerBoom"},"content":"                    handleEventCommand(userInputArray);","lastModifiedDate":"2024-02-26"},{"lineNumber":80,"author":{"gitId":"PyromancerBoom"},"content":"                    taskRepository.saveTasksToFile(taskList);","lastModifiedDate":"2024-02-26"},{"lineNumber":81,"author":{"gitId":"PyromancerBoom"},"content":"                    return addTaskMsg();","lastModifiedDate":"2024-02-26"},{"lineNumber":82,"author":{"gitId":"PyromancerBoom"},"content":"                } catch (BotException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":83,"author":{"gitId":"PyromancerBoom"},"content":"                    return e.getMessage();","lastModifiedDate":"2024-02-26"},{"lineNumber":84,"author":{"gitId":"PyromancerBoom"},"content":"                }","lastModifiedDate":"2024-02-26"},{"lineNumber":85,"author":{"gitId":"PyromancerBoom"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-26"},{"lineNumber":86,"author":{"gitId":"PyromancerBoom"},"content":"                try {","lastModifiedDate":"2024-02-26"},{"lineNumber":87,"author":{"gitId":"PyromancerBoom"},"content":"                    String status \u003d handleDeleteCommand(userInputArray);","lastModifiedDate":"2024-02-26"},{"lineNumber":88,"author":{"gitId":"PyromancerBoom"},"content":"                    taskRepository.saveTasksToFile(taskList);","lastModifiedDate":"2024-02-26"},{"lineNumber":89,"author":{"gitId":"PyromancerBoom"},"content":"                    return deleteMsg(status);","lastModifiedDate":"2024-02-26"},{"lineNumber":90,"author":{"gitId":"PyromancerBoom"},"content":"                } catch (BotException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":91,"author":{"gitId":"PyromancerBoom"},"content":"                    return e.getMessage();","lastModifiedDate":"2024-02-26"},{"lineNumber":92,"author":{"gitId":"PyromancerBoom"},"content":"                }","lastModifiedDate":"2024-02-26"},{"lineNumber":93,"author":{"gitId":"PyromancerBoom"},"content":"            case \"find\":","lastModifiedDate":"2024-02-26"},{"lineNumber":94,"author":{"gitId":"PyromancerBoom"},"content":"                try {","lastModifiedDate":"2024-02-26"},{"lineNumber":95,"author":{"gitId":"PyromancerBoom"},"content":"                    String tasksFound \u003d handleFindCommand(userInputArray);","lastModifiedDate":"2024-02-26"},{"lineNumber":96,"author":{"gitId":"PyromancerBoom"},"content":"                    return findMsg(tasksFound);","lastModifiedDate":"2024-02-26"},{"lineNumber":97,"author":{"gitId":"PyromancerBoom"},"content":"                } catch (BotException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":98,"author":{"gitId":"PyromancerBoom"},"content":"                    return e.getMessage();","lastModifiedDate":"2024-02-26"},{"lineNumber":99,"author":{"gitId":"PyromancerBoom"},"content":"                }","lastModifiedDate":"2024-02-26"},{"lineNumber":100,"author":{"gitId":"PyromancerBoom"},"content":"            default:","lastModifiedDate":"2024-02-25"},{"lineNumber":101,"author":{"gitId":"PyromancerBoom"},"content":"                return Bot.invalidInputMsgGui();","lastModifiedDate":"2024-02-25"},{"lineNumber":102,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":103,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":104,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":105,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-25"},{"lineNumber":106,"author":{"gitId":"PyromancerBoom"},"content":"     * Returns a string representing all tasks in the task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":107,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":108,"author":{"gitId":"PyromancerBoom"},"content":"     * @param taskList The task list to be listed.","lastModifiedDate":"2024-02-25"},{"lineNumber":109,"author":{"gitId":"PyromancerBoom"},"content":"     * @return A string representing all tasks in the task list.","lastModifiedDate":"2024-02-25"},{"lineNumber":110,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":111,"author":{"gitId":"PyromancerBoom"},"content":"    private String listAllMsg(TaskList taskList) {","lastModifiedDate":"2024-02-26"},{"lineNumber":112,"author":{"gitId":"PyromancerBoom"},"content":"        StringBuilder tasksMsg \u003d new StringBuilder();","lastModifiedDate":"2024-02-25"},{"lineNumber":113,"author":{"gitId":"PyromancerBoom"},"content":"        tasksMsg.append(Bot.botListAllMsgGui()).append(\"\\n\");","lastModifiedDate":"2024-02-25"},{"lineNumber":114,"author":{"gitId":"PyromancerBoom"},"content":"        tasksMsg.append(this.taskList.toString()).append(\"\\n\");","lastModifiedDate":"2024-02-26"},{"lineNumber":115,"author":{"gitId":"PyromancerBoom"},"content":"        tasksMsg.append(TaskCountMsg()).append(\"\\n\");","lastModifiedDate":"2024-02-25"},{"lineNumber":116,"author":{"gitId":"PyromancerBoom"},"content":"        return tasksMsg.toString();","lastModifiedDate":"2024-02-25"},{"lineNumber":117,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":118,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":119,"author":{"gitId":"PyromancerBoom"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":120,"author":{"gitId":"PyromancerBoom"},"content":"     * @return A string representing the bot\u0027s response to the add command","lastModifiedDate":"2024-02-26"},{"lineNumber":121,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":122,"author":{"gitId":"PyromancerBoom"},"content":"    private String addTaskMsg() {","lastModifiedDate":"2024-02-26"},{"lineNumber":123,"author":{"gitId":"PyromancerBoom"},"content":"        return Bot.printAddTaskMsgGui() + \"\\n\" + this.taskList.toString() + \"\\n\" + TaskCountMsg() + \"\\n\";","lastModifiedDate":"2024-02-26"},{"lineNumber":124,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":125,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":126,"author":{"gitId":"PyromancerBoom"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":127,"author":{"gitId":"PyromancerBoom"},"content":"     * @return A string representing the bot\u0027s response to the mark command","lastModifiedDate":"2024-02-26"},{"lineNumber":128,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":129,"author":{"gitId":"PyromancerBoom"},"content":"    private String markMsg() {","lastModifiedDate":"2024-02-26"},{"lineNumber":130,"author":{"gitId":"PyromancerBoom"},"content":"        return Bot.printMarkTaskMsgGui() + \"\\n\" + this.taskList.toString() + \"\\n\" + TaskCountMsg() + \"\\n\";","lastModifiedDate":"2024-02-26"},{"lineNumber":131,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":132,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":133,"author":{"gitId":"PyromancerBoom"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":134,"author":{"gitId":"PyromancerBoom"},"content":"     * @return A string representing the bot\u0027s response to the unmark command","lastModifiedDate":"2024-02-26"},{"lineNumber":135,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":136,"author":{"gitId":"PyromancerBoom"},"content":"    private String unmarkMsg() {","lastModifiedDate":"2024-02-26"},{"lineNumber":137,"author":{"gitId":"PyromancerBoom"},"content":"        return Bot.printUnmarkTaskMsgGui() + \"\\n\" + this.taskList.toString() + \"\\n\" + TaskCountMsg() + \"\\n\";","lastModifiedDate":"2024-02-26"},{"lineNumber":138,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":139,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":140,"author":{"gitId":"PyromancerBoom"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":141,"author":{"gitId":"PyromancerBoom"},"content":"     * @param status The status of the delete operation","lastModifiedDate":"2024-02-26"},{"lineNumber":142,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-26"},{"lineNumber":143,"author":{"gitId":"PyromancerBoom"},"content":"     * @return A string representing the bot\u0027s response to the delete command","lastModifiedDate":"2024-02-26"},{"lineNumber":144,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":145,"author":{"gitId":"PyromancerBoom"},"content":"    private String deleteMsg(String status) {","lastModifiedDate":"2024-02-26"},{"lineNumber":146,"author":{"gitId":"PyromancerBoom"},"content":"        return Bot.botDeleteMessageGui() + \"\\n\" + this.taskList.toString()","lastModifiedDate":"2024-02-26"},{"lineNumber":147,"author":{"gitId":"PyromancerBoom"},"content":"                + \"\\n\" + TaskCountMsg() + \"\\n\" + status + \"\\n\";","lastModifiedDate":"2024-02-26"},{"lineNumber":148,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":149,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":150,"author":{"gitId":"PyromancerBoom"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":151,"author":{"gitId":"PyromancerBoom"},"content":"     * @param The tasks found by the find command","lastModifiedDate":"2024-02-26"},{"lineNumber":152,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-26"},{"lineNumber":153,"author":{"gitId":"PyromancerBoom"},"content":"     * @return A string representing the bot\u0027s response to the find command","lastModifiedDate":"2024-02-26"},{"lineNumber":154,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":155,"author":{"gitId":"PyromancerBoom"},"content":"    private String findMsg(String tasks) {","lastModifiedDate":"2024-02-26"},{"lineNumber":156,"author":{"gitId":"PyromancerBoom"},"content":"        return Bot.botFindMessageGui() + \"\\n\" + tasks + \"\\n\" + TaskCountMsg() + \"\\n\";","lastModifiedDate":"2024-02-26"},{"lineNumber":157,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":158,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":159,"author":{"gitId":"PyromancerBoom"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":160,"author":{"gitId":"PyromancerBoom"},"content":"     * @return A string representing the number of tasks in the task list","lastModifiedDate":"2024-02-26"},{"lineNumber":161,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":162,"author":{"gitId":"PyromancerBoom"},"content":"    private String TaskCountMsg() {","lastModifiedDate":"2024-02-26"},{"lineNumber":163,"author":{"gitId":"PyromancerBoom"},"content":"        return \"You have \" + taskList.getTaskCount() + \" tasks in your list.\";","lastModifiedDate":"2024-02-26"},{"lineNumber":164,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":165,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":166,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":167,"author":{"gitId":"PyromancerBoom"},"content":"     * Handles the \"find\" command by searching for tasks that contain a specified","lastModifiedDate":"2024-02-26"},{"lineNumber":168,"author":{"gitId":"PyromancerBoom"},"content":"     * keyword","lastModifiedDate":"2024-02-26"},{"lineNumber":169,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":170,"author":{"gitId":"PyromancerBoom"},"content":"     * @param userInputArray the array of user input tokens","lastModifiedDate":"2024-02-26"},{"lineNumber":171,"author":{"gitId":"PyromancerBoom"},"content":"     * @throws BotException if the keyword is not provided","lastModifiedDate":"2024-02-26"},{"lineNumber":172,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-26"},{"lineNumber":173,"author":{"gitId":"PyromancerBoom"},"content":"     * @return A string representing the tasks found","lastModifiedDate":"2024-02-26"},{"lineNumber":174,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":175,"author":{"gitId":"PyromancerBoom"},"content":"    private String handleFindCommand(String[] userInputArray) throws BotException {","lastModifiedDate":"2024-02-26"},{"lineNumber":176,"author":{"gitId":"PyromancerBoom"},"content":"        if (userInputArray.length \u003c 2) {","lastModifiedDate":"2024-02-26"},{"lineNumber":177,"author":{"gitId":"PyromancerBoom"},"content":"            throw new BotException(\"Please enter a keyword to search for.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":178,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":179,"author":{"gitId":"PyromancerBoom"},"content":"        String keyword \u003d userInputArray[1];","lastModifiedDate":"2024-02-26"},{"lineNumber":180,"author":{"gitId":"PyromancerBoom"},"content":"        List\u003cTask\u003e matchingTasks \u003d taskList.findTasksByKeyword(keyword);","lastModifiedDate":"2024-02-26"},{"lineNumber":181,"author":{"gitId":"PyromancerBoom"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-26"},{"lineNumber":182,"author":{"gitId":"PyromancerBoom"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2024-02-26"},{"lineNumber":183,"author":{"gitId":"PyromancerBoom"},"content":"            sb.append((i + 1) + \".\" + matchingTasks.get(i)).append(\"\\n\");","lastModifiedDate":"2024-02-26"},{"lineNumber":184,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":185,"author":{"gitId":"PyromancerBoom"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-26"},{"lineNumber":186,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":187,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":188,"author":{"gitId":"PyromancerBoom"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":189,"author":{"gitId":"PyromancerBoom"},"content":"     * Handles the delete command by removing a task from the task list","lastModifiedDate":"2024-02-26"},{"lineNumber":190,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-26"},{"lineNumber":191,"author":{"gitId":"PyromancerBoom"},"content":"     * @param userInputArr the array containing the user input","lastModifiedDate":"2024-02-26"},{"lineNumber":192,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-26"},{"lineNumber":193,"author":{"gitId":"PyromancerBoom"},"content":"     * @throws BotException if the user input is invalid or the task number is out","lastModifiedDate":"2024-02-26"},{"lineNumber":194,"author":{"gitId":"PyromancerBoom"},"content":"     * of range","lastModifiedDate":"2024-02-26"},{"lineNumber":195,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-26"},{"lineNumber":196,"author":{"gitId":"PyromancerBoom"},"content":"     * @return A string representing the status of the delete operation","lastModifiedDate":"2024-02-26"},{"lineNumber":197,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":198,"author":{"gitId":"PyromancerBoom"},"content":"    private String handleDeleteCommand(String[] userInputArray) throws BotException {","lastModifiedDate":"2024-02-26"},{"lineNumber":199,"author":{"gitId":"PyromancerBoom"},"content":"        StringBuilder status \u003d new StringBuilder();","lastModifiedDate":"2024-02-26"},{"lineNumber":200,"author":{"gitId":"PyromancerBoom"},"content":"        if (userInputArray.length \u003c 2) {","lastModifiedDate":"2024-02-26"},{"lineNumber":201,"author":{"gitId":"PyromancerBoom"},"content":"            throw new BotException(\"Please enter a task number to delete.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":202,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":203,"author":{"gitId":"PyromancerBoom"},"content":"        int i;","lastModifiedDate":"2024-02-26"},{"lineNumber":204,"author":{"gitId":"PyromancerBoom"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":205,"author":{"gitId":"PyromancerBoom"},"content":"            i \u003d Integer.parseInt(userInputArray[1]);","lastModifiedDate":"2024-02-26"},{"lineNumber":206,"author":{"gitId":"PyromancerBoom"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":207,"author":{"gitId":"PyromancerBoom"},"content":"            throw new BotException(\"Task number should be numeric.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":208,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":209,"author":{"gitId":"PyromancerBoom"},"content":"        if (i \u003c\u003d 0 || i \u003e taskList.getTaskCount()) {","lastModifiedDate":"2024-02-26"},{"lineNumber":210,"author":{"gitId":"PyromancerBoom"},"content":"            throw new BotException(\"Task number is out of range.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":211,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":212,"author":{"gitId":"PyromancerBoom"},"content":"        Task taskToRemove \u003d taskList.getTaskByNum(i);","lastModifiedDate":"2024-02-26"},{"lineNumber":213,"author":{"gitId":"PyromancerBoom"},"content":"        taskList.removeTask(i);","lastModifiedDate":"2024-02-26"},{"lineNumber":214,"author":{"gitId":"PyromancerBoom"},"content":"        if (taskList.getTaskCount() \u003e 0) {","lastModifiedDate":"2024-02-26"},{"lineNumber":215,"author":{"gitId":"PyromancerBoom"},"content":"            status.append(\"Task removed: \").append(taskToRemove).append(\"\\n\");","lastModifiedDate":"2024-02-26"},{"lineNumber":216,"author":{"gitId":"PyromancerBoom"},"content":"        } else {","lastModifiedDate":"2024-02-26"},{"lineNumber":217,"author":{"gitId":"PyromancerBoom"},"content":"            status.append(\"No more tasks in the list.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":218,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":219,"author":{"gitId":"PyromancerBoom"},"content":"        return status.toString();","lastModifiedDate":"2024-02-26"},{"lineNumber":220,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":221,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":222,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":223,"author":{"gitId":"PyromancerBoom"},"content":"     * Handles the marking of a task as done","lastModifiedDate":"2024-02-26"},{"lineNumber":224,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-02-25"},{"lineNumber":225,"author":{"gitId":"PyromancerBoom"},"content":"     * @param inputs The user inputs","lastModifiedDate":"2024-02-26"},{"lineNumber":226,"author":{"gitId":"PyromancerBoom"},"content":"     * @throws BotException If the task number is missing, not numeric, or out of","lastModifiedDate":"2024-02-26"},{"lineNumber":227,"author":{"gitId":"PyromancerBoom"},"content":"     *                      range","lastModifiedDate":"2024-02-26"},{"lineNumber":228,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-25"},{"lineNumber":229,"author":{"gitId":"PyromancerBoom"},"content":"    private void markTaskHandler(String[] userInputArray) throws BotException {","lastModifiedDate":"2024-02-26"},{"lineNumber":230,"author":{"gitId":"PyromancerBoom"},"content":"        if (userInputArray.length \u003c 2) {","lastModifiedDate":"2024-02-26"},{"lineNumber":231,"author":{"gitId":"PyromancerBoom"},"content":"            throw new BotException(\"Please enter a task number to mark.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":232,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":233,"author":{"gitId":"PyromancerBoom"},"content":"        int i;","lastModifiedDate":"2024-02-26"},{"lineNumber":234,"author":{"gitId":"PyromancerBoom"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":235,"author":{"gitId":"PyromancerBoom"},"content":"            i \u003d Integer.parseInt(userInputArray[1]);","lastModifiedDate":"2024-02-26"},{"lineNumber":236,"author":{"gitId":"PyromancerBoom"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":237,"author":{"gitId":"PyromancerBoom"},"content":"            throw new BotException(\"Task number should be numeric.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":238,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":239,"author":{"gitId":"PyromancerBoom"},"content":"        if (i \u003c\u003d 0 || i \u003e taskList.getTaskCount()) {","lastModifiedDate":"2024-02-26"},{"lineNumber":240,"author":{"gitId":"PyromancerBoom"},"content":"            throw new BotException(\"Task number is out of range.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":241,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":242,"author":{"gitId":"PyromancerBoom"},"content":"        taskList.markTaskAsDone(i);","lastModifiedDate":"2024-02-26"},{"lineNumber":243,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":244,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":245,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":246,"author":{"gitId":"PyromancerBoom"},"content":"     * Handles the command to unmark a task","lastModifiedDate":"2024-02-26"},{"lineNumber":247,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":248,"author":{"gitId":"PyromancerBoom"},"content":"     * @param inputs The array of inputs containing the task number to unmark","lastModifiedDate":"2024-02-26"},{"lineNumber":249,"author":{"gitId":"PyromancerBoom"},"content":"     * @throws BotException If the task number is not provided, is not numeric, or","lastModifiedDate":"2024-02-26"},{"lineNumber":250,"author":{"gitId":"PyromancerBoom"},"content":"     *                      is out of range","lastModifiedDate":"2024-02-26"},{"lineNumber":251,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":252,"author":{"gitId":"PyromancerBoom"},"content":"    private void unmarkTaskHandler(String[] userInputArray) throws BotException {","lastModifiedDate":"2024-02-26"},{"lineNumber":253,"author":{"gitId":"PyromancerBoom"},"content":"        if (userInputArray.length \u003c 2) {","lastModifiedDate":"2024-02-26"},{"lineNumber":254,"author":{"gitId":"PyromancerBoom"},"content":"            throw new BotException(\"Please enter a task number to unmark.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":255,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":256,"author":{"gitId":"PyromancerBoom"},"content":"        int i;","lastModifiedDate":"2024-02-26"},{"lineNumber":257,"author":{"gitId":"PyromancerBoom"},"content":"        try {","lastModifiedDate":"2024-02-26"},{"lineNumber":258,"author":{"gitId":"PyromancerBoom"},"content":"            i \u003d Integer.parseInt(userInputArray[1]);","lastModifiedDate":"2024-02-26"},{"lineNumber":259,"author":{"gitId":"PyromancerBoom"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-26"},{"lineNumber":260,"author":{"gitId":"PyromancerBoom"},"content":"            throw new BotException(\"Task number should be numeric.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":261,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":262,"author":{"gitId":"PyromancerBoom"},"content":"        if (i \u003c\u003d 0 || i \u003e taskList.getTaskCount()) {","lastModifiedDate":"2024-02-26"},{"lineNumber":263,"author":{"gitId":"PyromancerBoom"},"content":"            throw new BotException(\"Task number is out of range.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":264,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":265,"author":{"gitId":"PyromancerBoom"},"content":"        taskList.markTaskAsUndone(i);","lastModifiedDate":"2024-02-26"},{"lineNumber":266,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":267,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":268,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":269,"author":{"gitId":"PyromancerBoom"},"content":"     * Handles the \"todo\" command by adding a new todo task to the task list","lastModifiedDate":"2024-02-26"},{"lineNumber":270,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-26"},{"lineNumber":271,"author":{"gitId":"PyromancerBoom"},"content":"     * @param userInputArr the array containing the user input","lastModifiedDate":"2024-02-26"},{"lineNumber":272,"author":{"gitId":"PyromancerBoom"},"content":"     * @throws BotException if the description of the todo is empty","lastModifiedDate":"2024-02-26"},{"lineNumber":273,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":274,"author":{"gitId":"PyromancerBoom"},"content":"    private void handleTodoCommand(String[] userInputArray) throws BotException {","lastModifiedDate":"2024-02-26"},{"lineNumber":275,"author":{"gitId":"PyromancerBoom"},"content":"        if (userInputArray.length \u003c 2) {","lastModifiedDate":"2024-02-26"},{"lineNumber":276,"author":{"gitId":"PyromancerBoom"},"content":"            throw new BotException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":277,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":278,"author":{"gitId":"PyromancerBoom"},"content":"        String todoTask \u003d String.join(\" \", Arrays.copyOfRange(userInputArray, 1, userInputArray.length));","lastModifiedDate":"2024-02-26"},{"lineNumber":279,"author":{"gitId":"PyromancerBoom"},"content":"        this.taskList.addTodo(todoTask);","lastModifiedDate":"2024-02-26"},{"lineNumber":280,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":281,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":282,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":283,"author":{"gitId":"PyromancerBoom"},"content":"     * Handles the \"deadline\" command by adding a deadline task to the task list","lastModifiedDate":"2024-02-26"},{"lineNumber":284,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-26"},{"lineNumber":285,"author":{"gitId":"PyromancerBoom"},"content":"     * @param userInputArr the array containing the user input","lastModifiedDate":"2024-02-26"},{"lineNumber":286,"author":{"gitId":"PyromancerBoom"},"content":"     * @throws BotException if the user input is incomplete","lastModifiedDate":"2024-02-26"},{"lineNumber":287,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":288,"author":{"gitId":"PyromancerBoom"},"content":"    private void handleDeadlineCommand(String[] userInputArray) throws BotException {","lastModifiedDate":"2024-02-26"},{"lineNumber":289,"author":{"gitId":"PyromancerBoom"},"content":"        if (userInputArray.length \u003c 3) {","lastModifiedDate":"2024-02-26"},{"lineNumber":290,"author":{"gitId":"PyromancerBoom"},"content":"            throw new BotException(\"Please give some description and due date in deadline\");","lastModifiedDate":"2024-02-26"},{"lineNumber":291,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":292,"author":{"gitId":"PyromancerBoom"},"content":"        String deadlineTask \u003d String.join(\" \", Arrays.copyOfRange(userInputArray, 1,","lastModifiedDate":"2024-02-26"},{"lineNumber":293,"author":{"gitId":"PyromancerBoom"},"content":"                userInputArray.length)).split(\"/by\", 2)[0].trim();","lastModifiedDate":"2024-02-26"},{"lineNumber":294,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":295,"author":{"gitId":"PyromancerBoom"},"content":"        String dueDate \u003d String.join(\" \", Arrays.copyOfRange(userInputArray,","lastModifiedDate":"2024-02-26"},{"lineNumber":296,"author":{"gitId":"PyromancerBoom"},"content":"                Arrays.asList(userInputArray).indexOf(\"/by\") + 1, userInputArray.length));","lastModifiedDate":"2024-02-26"},{"lineNumber":297,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":298,"author":{"gitId":"PyromancerBoom"},"content":"        taskList.addDeadline(deadlineTask, dueDate);","lastModifiedDate":"2024-02-26"},{"lineNumber":299,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":300,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":301,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":302,"author":{"gitId":"PyromancerBoom"},"content":"     * Handles the event command by extracting the event task, start time, and end","lastModifiedDate":"2024-02-26"},{"lineNumber":303,"author":{"gitId":"PyromancerBoom"},"content":"     * time from the user input array","lastModifiedDate":"2024-02-26"},{"lineNumber":304,"author":{"gitId":"PyromancerBoom"},"content":"     * Adds the event task to the task list with the specified start time and end","lastModifiedDate":"2024-02-26"},{"lineNumber":305,"author":{"gitId":"PyromancerBoom"},"content":"     * time","lastModifiedDate":"2024-02-26"},{"lineNumber":306,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-02-26"},{"lineNumber":307,"author":{"gitId":"PyromancerBoom"},"content":"     * @param userInputArr the user input array containing the event command and its","lastModifiedDate":"2024-02-26"},{"lineNumber":308,"author":{"gitId":"PyromancerBoom"},"content":"     *                     arguments","lastModifiedDate":"2024-02-26"},{"lineNumber":309,"author":{"gitId":"PyromancerBoom"},"content":"     * @throws BotException if the description and time of an event are empty","lastModifiedDate":"2024-02-26"},{"lineNumber":310,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":311,"author":{"gitId":"PyromancerBoom"},"content":"    private void handleEventCommand(String[] userInputArray) throws BotException {","lastModifiedDate":"2024-02-26"},{"lineNumber":312,"author":{"gitId":"PyromancerBoom"},"content":"        if (userInputArray.length \u003c 3) {","lastModifiedDate":"2024-02-26"},{"lineNumber":313,"author":{"gitId":"PyromancerBoom"},"content":"            throw new BotException(\"The description and time of an event cannot be empty.\");","lastModifiedDate":"2024-02-26"},{"lineNumber":314,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":315,"author":{"gitId":"PyromancerBoom"},"content":"        String eventTask \u003d String.join(\" \", Arrays.copyOfRange(userInputArray, 1,","lastModifiedDate":"2024-02-26"},{"lineNumber":316,"author":{"gitId":"PyromancerBoom"},"content":"                userInputArray.length))","lastModifiedDate":"2024-02-26"},{"lineNumber":317,"author":{"gitId":"PyromancerBoom"},"content":"                .split(\"/from\", 2)[0].trim();","lastModifiedDate":"2024-02-26"},{"lineNumber":318,"author":{"gitId":"PyromancerBoom"},"content":"        int fromIndex \u003d Arrays.asList(userInputArray).indexOf(\"/from\") + 1;","lastModifiedDate":"2024-02-26"},{"lineNumber":319,"author":{"gitId":"PyromancerBoom"},"content":"        int toIndex \u003d Arrays.asList(userInputArray).indexOf(\"/to\");","lastModifiedDate":"2024-02-26"},{"lineNumber":320,"author":{"gitId":"PyromancerBoom"},"content":"        String startTime \u003d String.join(\" \", Arrays.copyOfRange(userInputArray,","lastModifiedDate":"2024-02-26"},{"lineNumber":321,"author":{"gitId":"PyromancerBoom"},"content":"                fromIndex, toIndex));","lastModifiedDate":"2024-02-26"},{"lineNumber":322,"author":{"gitId":"PyromancerBoom"},"content":"        String endTime \u003d String.join(\" \", Arrays.copyOfRange(userInputArray, toIndex","lastModifiedDate":"2024-02-26"},{"lineNumber":323,"author":{"gitId":"PyromancerBoom"},"content":"                + 1, userInputArray.length));","lastModifiedDate":"2024-02-26"},{"lineNumber":324,"author":{"gitId":"PyromancerBoom"},"content":"        taskList.addEvent(eventTask, startTime, endTime);","lastModifiedDate":"2024-02-26"},{"lineNumber":325,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":326,"author":{"gitId":"PyromancerBoom"},"content":"}","lastModifiedDate":"2024-02-25"}],"authorContributionMap":{"PyromancerBoom":326}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PyromancerBoom"},"content":"package duke;","lastModifiedDate":"2024-02-17"},{"lineNumber":2,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"PyromancerBoom"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"PyromancerBoom"},"content":"/**","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"PyromancerBoom"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"PyromancerBoom"},"content":" * This class is used to launch the JavaFX application.","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"PyromancerBoom"},"content":" */","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"PyromancerBoom"},"content":"public class Launcher {","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"PyromancerBoom"},"content":"     * The main entry point for application.","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"PyromancerBoom"},"content":"     * This method is used to launch the JavaFX application.","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"PyromancerBoom"},"content":"        // Application.launch(Duke.class, args);","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"PyromancerBoom"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":18,"author":{"gitId":"PyromancerBoom"},"content":"}","lastModifiedDate":"2024-02-17"}],"authorContributionMap":{"PyromancerBoom":18}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PyromancerBoom"},"content":"package duke;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":3,"author":{"gitId":"PyromancerBoom"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"PyromancerBoom"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"PyromancerBoom"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"PyromancerBoom"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"PyromancerBoom"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"PyromancerBoom"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"PyromancerBoom"},"content":"/**","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"PyromancerBoom"},"content":" * Main class for the Duke application.","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"PyromancerBoom"},"content":" * This class serves as the entry point for the application and sets up the GUI.","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":" */","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"PyromancerBoom"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"PyromancerBoom"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-25"},{"lineNumber":19,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"PyromancerBoom"},"content":"     * Constructor for the Main class.","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"PyromancerBoom"},"content":"     * It initializes the Duke instance.","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"PyromancerBoom"},"content":"    public Main() {","lastModifiedDate":"2024-02-25"},{"lineNumber":24,"author":{"gitId":"PyromancerBoom"},"content":"        try {","lastModifiedDate":"2024-02-25"},{"lineNumber":25,"author":{"gitId":"PyromancerBoom"},"content":"            duke \u003d new Duke();","lastModifiedDate":"2024-02-25"},{"lineNumber":26,"author":{"gitId":"PyromancerBoom"},"content":"        } catch (BotException e) {","lastModifiedDate":"2024-02-25"},{"lineNumber":27,"author":{"gitId":"PyromancerBoom"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-25"},{"lineNumber":28,"author":{"gitId":"PyromancerBoom"},"content":"            System.exit(1);","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"PyromancerBoom"},"content":"     * The main entry point for all JavaFX applications.","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"PyromancerBoom"},"content":"     * The start method is called after the init method has returned, and after the","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"PyromancerBoom"},"content":"     * system is ready for the application to begin running.","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"PyromancerBoom"},"content":"     * @param stage the primary stage for this application, onto which the","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"PyromancerBoom"},"content":"     *              application scene can be set","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"PyromancerBoom"},"content":"    @Override","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"PyromancerBoom"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"PyromancerBoom"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"PyromancerBoom"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"PyromancerBoom"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"PyromancerBoom"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"PyromancerBoom"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"PyromancerBoom"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"PyromancerBoom"},"content":"            stage.show();","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"PyromancerBoom"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-18"},{"lineNumber":50,"author":{"gitId":"PyromancerBoom"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-18"},{"lineNumber":51,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"PyromancerBoom"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"PyromancerBoom":53}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PyromancerBoom"},"content":"package duke;","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"PyromancerBoom"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"PyromancerBoom"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"PyromancerBoom"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"PyromancerBoom"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"PyromancerBoom"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"PyromancerBoom"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"PyromancerBoom"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"PyromancerBoom"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"PyromancerBoom"},"content":"/**","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"PyromancerBoom"},"content":" */","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"PyromancerBoom"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"PyromancerBoom"},"content":"    @FXML","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"PyromancerBoom"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"PyromancerBoom"},"content":"    @FXML","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"PyromancerBoom"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"PyromancerBoom"},"content":"    @FXML","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"PyromancerBoom"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"PyromancerBoom"},"content":"    @FXML","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"PyromancerBoom"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":26,"author":{"gitId":"PyromancerBoom"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-18"},{"lineNumber":27,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"PyromancerBoom"},"content":"    private final Image userImage \u003d new Image(","lastModifiedDate":"2024-02-25"},{"lineNumber":29,"author":{"gitId":"PyromancerBoom"},"content":"            Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/user.jpg\")));","lastModifiedDate":"2024-02-25"},{"lineNumber":30,"author":{"gitId":"PyromancerBoom"},"content":"    private final Image dukeImage \u003d new Image(","lastModifiedDate":"2024-02-25"},{"lineNumber":31,"author":{"gitId":"PyromancerBoom"},"content":"            Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/skynet.png\")));","lastModifiedDate":"2024-02-25"},{"lineNumber":32,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"PyromancerBoom"},"content":"     * Initializes the MainWindow controller.","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"PyromancerBoom"},"content":"     * This method is automatically called after the fxml file has been loaded.","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"PyromancerBoom"},"content":"    @FXML","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"PyromancerBoom"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-18"},{"lineNumber":39,"author":{"gitId":"PyromancerBoom"},"content":"        // display bot greeting","lastModifiedDate":"2024-02-25"},{"lineNumber":40,"author":{"gitId":"PyromancerBoom"},"content":"        String greeting \u003d Bot.getGreeting();","lastModifiedDate":"2024-02-25"},{"lineNumber":41,"author":{"gitId":"PyromancerBoom"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-25"},{"lineNumber":42,"author":{"gitId":"PyromancerBoom"},"content":"                DialogBox.getDukeDialog(greeting, dukeImage));","lastModifiedDate":"2024-02-25"},{"lineNumber":43,"author":{"gitId":"PyromancerBoom"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"PyromancerBoom"},"content":"     * Sets the Duke instance for this MainWindow.","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"PyromancerBoom"},"content":"     * @param d The Duke instance.","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"PyromancerBoom"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-18"},{"lineNumber":52,"author":{"gitId":"PyromancerBoom"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-18"},{"lineNumber":53,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":54,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":55,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-18"},{"lineNumber":56,"author":{"gitId":"PyromancerBoom"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing","lastModifiedDate":"2024-02-25"},{"lineNumber":57,"author":{"gitId":"PyromancerBoom"},"content":"     * Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-25"},{"lineNumber":58,"author":{"gitId":"PyromancerBoom"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-18"},{"lineNumber":59,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-18"},{"lineNumber":60,"author":{"gitId":"PyromancerBoom"},"content":"    @FXML","lastModifiedDate":"2024-02-18"},{"lineNumber":61,"author":{"gitId":"PyromancerBoom"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-18"},{"lineNumber":62,"author":{"gitId":"PyromancerBoom"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-18"},{"lineNumber":63,"author":{"gitId":"PyromancerBoom"},"content":"        String response \u003d duke.processInput(input);","lastModifiedDate":"2024-02-25"},{"lineNumber":64,"author":{"gitId":"PyromancerBoom"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"PyromancerBoom"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"PyromancerBoom"},"content":"                DialogBox.getDukeDialog(response, dukeImage));","lastModifiedDate":"2024-02-25"},{"lineNumber":67,"author":{"gitId":"PyromancerBoom"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-18"},{"lineNumber":68,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":69,"author":{"gitId":"PyromancerBoom"},"content":"}","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"PyromancerBoom":69}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PyromancerBoom"},"content":"package duke;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"PyromancerBoom"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"PyromancerBoom"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"PyromancerBoom"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"PyromancerBoom"},"content":"import java.util.List;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"PyromancerBoom"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"PyromancerBoom"},"content":" * Parser handles the user input and output Parses the user input and calls the","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"PyromancerBoom"},"content":" * appropriate methods","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"PyromancerBoom"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"PyromancerBoom"},"content":"public class Parser {","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"PyromancerBoom"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"PyromancerBoom"},"content":"    private TaskRepository taskRepository;","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"PyromancerBoom"},"content":"    /*","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"PyromancerBoom"},"content":"     * Constructor for the Parser class It initializes the scanner and taskList","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"PyromancerBoom"},"content":"     * objects","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"PyromancerBoom"},"content":"    public Parser() throws IOException, BotException {","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"PyromancerBoom"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"PyromancerBoom"},"content":"        this.taskRepository \u003d new TaskRepository();","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"PyromancerBoom"},"content":"        this.taskList \u003d taskRepository.loadTasks();","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"PyromancerBoom"},"content":"     * Starts the operator for user input and executes corresponding commands based","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"PyromancerBoom"},"content":"     * on user input.","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"PyromancerBoom"},"content":"     * This is the entry point for the bot.","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"PyromancerBoom"},"content":"     * @throws BotException if there is an error in executing a command","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"PyromancerBoom"},"content":"     * @throws IOException  if there is an error in saving the task list to a file","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"PyromancerBoom"},"content":"    public void startOperator() throws BotException, IOException {","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"PyromancerBoom"},"content":"        while (true) {","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"PyromancerBoom"},"content":"            System.out.print(\"\u003e \"); // print \"\u003e\" before user input","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"PyromancerBoom"},"content":"            String userInputLine \u003d scanner.nextLine();","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"PyromancerBoom"},"content":"            String[] userInputArray \u003d userInputLine.split(\" \");","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"PyromancerBoom"},"content":"            String command \u003d userInputArray[0];","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"PyromancerBoom"},"content":"            switch (command) {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"PyromancerBoom"},"content":"                case \"bye\":","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"PyromancerBoom"},"content":"                    Bot.botExitMsg();","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"PyromancerBoom"},"content":"                    return;","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"PyromancerBoom"},"content":"                case \"list\":","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"PyromancerBoom"},"content":"                    botListAllTasks();","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"PyromancerBoom"},"content":"                    break;","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"PyromancerBoom"},"content":"                case \"help\":","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"PyromancerBoom"},"content":"                    Bot.botHelpMsg();","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"PyromancerBoom"},"content":"                    break;","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"PyromancerBoom"},"content":"                case \"mark\":","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"PyromancerBoom"},"content":"                    try {","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"PyromancerBoom"},"content":"                        markTaskHandler(userInputArray);","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"PyromancerBoom"},"content":"                        // save to file","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"PyromancerBoom"},"content":"                        taskRepository.saveTasksToFile(taskList);","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"PyromancerBoom"},"content":"                    } catch (BotException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":58,"author":{"gitId":"PyromancerBoom"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"PyromancerBoom"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"PyromancerBoom"},"content":"                    break;","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"PyromancerBoom"},"content":"                case \"unmark\":","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"PyromancerBoom"},"content":"                    try {","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"PyromancerBoom"},"content":"                        unmarkTaskHandler(userInputArray);","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"PyromancerBoom"},"content":"                        taskRepository.saveTasksToFile(taskList);","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"PyromancerBoom"},"content":"                    } catch (BotException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":66,"author":{"gitId":"PyromancerBoom"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":67,"author":{"gitId":"PyromancerBoom"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"PyromancerBoom"},"content":"                    break;","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"PyromancerBoom"},"content":"                case \"todo\":","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"PyromancerBoom"},"content":"                    try {","lastModifiedDate":"2024-01-29"},{"lineNumber":71,"author":{"gitId":"PyromancerBoom"},"content":"                        handleTodoCommand(userInputArray);","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"PyromancerBoom"},"content":"                        taskRepository.saveTasksToFile(taskList);","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"PyromancerBoom"},"content":"                    } catch (BotException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"PyromancerBoom"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":75,"author":{"gitId":"PyromancerBoom"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":76,"author":{"gitId":"PyromancerBoom"},"content":"                    break;","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"PyromancerBoom"},"content":"                case \"deadline\":","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"PyromancerBoom"},"content":"                    try {","lastModifiedDate":"2024-01-29"},{"lineNumber":79,"author":{"gitId":"PyromancerBoom"},"content":"                        handleDeadlineCommand(userInputArray);","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"PyromancerBoom"},"content":"                        taskRepository.saveTasksToFile(taskList);","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"PyromancerBoom"},"content":"                    } catch (BotException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"PyromancerBoom"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"PyromancerBoom"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"PyromancerBoom"},"content":"                    break;","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"PyromancerBoom"},"content":"                case \"event\":","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"PyromancerBoom"},"content":"                    try {","lastModifiedDate":"2024-01-29"},{"lineNumber":87,"author":{"gitId":"PyromancerBoom"},"content":"                        handleEventCommand(userInputArray);","lastModifiedDate":"2024-02-11"},{"lineNumber":88,"author":{"gitId":"PyromancerBoom"},"content":"                        taskRepository.saveTasksToFile(taskList);","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"PyromancerBoom"},"content":"                    } catch (BotException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"PyromancerBoom"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"PyromancerBoom"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"PyromancerBoom"},"content":"                    break;","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"PyromancerBoom"},"content":"                case \"delete\":","lastModifiedDate":"2024-01-29"},{"lineNumber":94,"author":{"gitId":"PyromancerBoom"},"content":"                    try {","lastModifiedDate":"2024-01-29"},{"lineNumber":95,"author":{"gitId":"PyromancerBoom"},"content":"                        handleDeleteCommand(userInputArray);","lastModifiedDate":"2024-02-11"},{"lineNumber":96,"author":{"gitId":"PyromancerBoom"},"content":"                        taskRepository.saveTasksToFile(taskList);","lastModifiedDate":"2024-02-11"},{"lineNumber":97,"author":{"gitId":"PyromancerBoom"},"content":"                    } catch (BotException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"PyromancerBoom"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"PyromancerBoom"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"PyromancerBoom"},"content":"                    break;","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"PyromancerBoom"},"content":"                case \"find\":","lastModifiedDate":"2024-02-11"},{"lineNumber":102,"author":{"gitId":"PyromancerBoom"},"content":"                    handleFindCommand(userInputArray);","lastModifiedDate":"2024-02-11"},{"lineNumber":103,"author":{"gitId":"PyromancerBoom"},"content":"                    break;","lastModifiedDate":"2024-02-11"},{"lineNumber":104,"author":{"gitId":"PyromancerBoom"},"content":"                default:","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"PyromancerBoom"},"content":"                    try {","lastModifiedDate":"2024-01-29"},{"lineNumber":106,"author":{"gitId":"PyromancerBoom"},"content":"                        handleInvalidCommand();","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"PyromancerBoom"},"content":"                    } catch (BotException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"PyromancerBoom"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"PyromancerBoom"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"PyromancerBoom"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":113,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":114,"author":{"gitId":"PyromancerBoom"},"content":"    /*","lastModifiedDate":"2024-02-11"},{"lineNumber":115,"author":{"gitId":"PyromancerBoom"},"content":"     * Helper methods for handling user input","lastModifiedDate":"2024-02-11"},{"lineNumber":116,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-11"},{"lineNumber":117,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-11"},{"lineNumber":118,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-11"},{"lineNumber":119,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":120,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":121,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":122,"author":{"gitId":"PyromancerBoom"},"content":"     * Handles an invalid command by throwing a BotException","lastModifiedDate":"2024-02-11"},{"lineNumber":123,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-11"},{"lineNumber":124,"author":{"gitId":"PyromancerBoom"},"content":"     * @throws BotException if the command is invalid","lastModifiedDate":"2024-02-11"},{"lineNumber":125,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":126,"author":{"gitId":"PyromancerBoom"},"content":"    private void handleInvalidCommand() throws BotException {","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"PyromancerBoom"},"content":"        throw new BotException(\"Eh, invalid command. I get what you\u0027re saying but I\u0027m not gonna do it. Try again?\");","lastModifiedDate":"2024-01-29"},{"lineNumber":128,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":129,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":130,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":131,"author":{"gitId":"PyromancerBoom"},"content":"     * Handles the \"find\" command by searching for tasks that contain a specified","lastModifiedDate":"2024-02-11"},{"lineNumber":132,"author":{"gitId":"PyromancerBoom"},"content":"     * keyword","lastModifiedDate":"2024-02-11"},{"lineNumber":133,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":134,"author":{"gitId":"PyromancerBoom"},"content":"     * @param userInputArray the array of user input tokens","lastModifiedDate":"2024-02-16"},{"lineNumber":135,"author":{"gitId":"PyromancerBoom"},"content":"     * @throws BotException if the keyword is not provided","lastModifiedDate":"2024-02-11"},{"lineNumber":136,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":137,"author":{"gitId":"PyromancerBoom"},"content":"    private void handleFindCommand(String[] userInputArray) throws BotException {","lastModifiedDate":"2024-02-16"},{"lineNumber":138,"author":{"gitId":"PyromancerBoom"},"content":"        if (userInputArray.length \u003c 2) {","lastModifiedDate":"2024-02-16"},{"lineNumber":139,"author":{"gitId":"PyromancerBoom"},"content":"            throw new BotException(\"Please enter a keyword to search for.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":140,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":141,"author":{"gitId":"PyromancerBoom"},"content":"        String keyword \u003d userInputArray[1];","lastModifiedDate":"2024-02-16"},{"lineNumber":142,"author":{"gitId":"PyromancerBoom"},"content":"        List\u003cTask\u003e matchingTasks \u003d taskList.findTasksByKeyword(keyword);","lastModifiedDate":"2024-02-11"},{"lineNumber":143,"author":{"gitId":"PyromancerBoom"},"content":"        Bot.printFindTaskMsg();","lastModifiedDate":"2024-02-11"},{"lineNumber":144,"author":{"gitId":"PyromancerBoom"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2024-02-11"},{"lineNumber":145,"author":{"gitId":"PyromancerBoom"},"content":"            System.out.println((i + 1) + \".\" + matchingTasks.get(i));","lastModifiedDate":"2024-02-11"},{"lineNumber":146,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":147,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":148,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":149,"author":{"gitId":"PyromancerBoom"},"content":"    /*","lastModifiedDate":"2024-02-11"},{"lineNumber":150,"author":{"gitId":"PyromancerBoom"},"content":"     * Handles the delete command by removing a task from the task list","lastModifiedDate":"2024-02-11"},{"lineNumber":151,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-11"},{"lineNumber":152,"author":{"gitId":"PyromancerBoom"},"content":"     * @param userInputArr the array containing the user input","lastModifiedDate":"2024-02-11"},{"lineNumber":153,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-11"},{"lineNumber":154,"author":{"gitId":"PyromancerBoom"},"content":"     * @throws BotException if the user input is invalid or the task number is out","lastModifiedDate":"2024-02-11"},{"lineNumber":155,"author":{"gitId":"PyromancerBoom"},"content":"     * of range","lastModifiedDate":"2024-02-11"},{"lineNumber":156,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":157,"author":{"gitId":"PyromancerBoom"},"content":"    private void handleDeleteCommand(String[] userInputArray) throws BotException {","lastModifiedDate":"2024-02-11"},{"lineNumber":158,"author":{"gitId":"PyromancerBoom"},"content":"        if (userInputArray.length \u003c 2) {","lastModifiedDate":"2024-02-11"},{"lineNumber":159,"author":{"gitId":"PyromancerBoom"},"content":"            throw new BotException(\"Please enter a task number to delete.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":160,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":161,"author":{"gitId":"PyromancerBoom"},"content":"        int i;","lastModifiedDate":"2024-01-29"},{"lineNumber":162,"author":{"gitId":"PyromancerBoom"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":163,"author":{"gitId":"PyromancerBoom"},"content":"            i \u003d Integer.parseInt(userInputArray[1]);","lastModifiedDate":"2024-02-11"},{"lineNumber":164,"author":{"gitId":"PyromancerBoom"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":165,"author":{"gitId":"PyromancerBoom"},"content":"            throw new BotException(\"Task number should be numeric.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":166,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":167,"author":{"gitId":"PyromancerBoom"},"content":"        if (i \u003c\u003d 0 || i \u003e taskList.getTaskCount()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":168,"author":{"gitId":"PyromancerBoom"},"content":"            throw new BotException(\"Task number is out of range.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":169,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":170,"author":{"gitId":"PyromancerBoom"},"content":"        Ui.printSeparatorLine();","lastModifiedDate":"2024-02-11"},{"lineNumber":171,"author":{"gitId":"PyromancerBoom"},"content":"        Task taskToRemove \u003d taskList.getTaskByNum(i);","lastModifiedDate":"2024-01-29"},{"lineNumber":172,"author":{"gitId":"PyromancerBoom"},"content":"        taskList.removeTask(i);","lastModifiedDate":"2024-01-29"},{"lineNumber":173,"author":{"gitId":"PyromancerBoom"},"content":"        Bot.printDeleteTaskMsg();","lastModifiedDate":"2024-02-10"},{"lineNumber":174,"author":{"gitId":"PyromancerBoom"},"content":"        if (taskList.getTaskCount() \u003e 0) {","lastModifiedDate":"2024-01-29"},{"lineNumber":175,"author":{"gitId":"PyromancerBoom"},"content":"            System.out.println(\"Removed Task: \" + taskToRemove);","lastModifiedDate":"2024-01-29"},{"lineNumber":176,"author":{"gitId":"PyromancerBoom"},"content":"            Ui.printList(taskList.listTasks());","lastModifiedDate":"2024-02-10"},{"lineNumber":177,"author":{"gitId":"PyromancerBoom"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":178,"author":{"gitId":"PyromancerBoom"},"content":"            System.out.println(\"All tasks have been removed.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":179,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":180,"author":{"gitId":"PyromancerBoom"},"content":"        TaskCountMsg();","lastModifiedDate":"2024-02-10"},{"lineNumber":181,"author":{"gitId":"PyromancerBoom"},"content":"        Ui.printSeparatorLine();","lastModifiedDate":"2024-02-11"},{"lineNumber":182,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":183,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":184,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":185,"author":{"gitId":"PyromancerBoom"},"content":"     * Handles the \"todo\" command by adding a new todo task to the task list","lastModifiedDate":"2024-02-11"},{"lineNumber":186,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-11"},{"lineNumber":187,"author":{"gitId":"PyromancerBoom"},"content":"     * @param userInputArr the array containing the user input","lastModifiedDate":"2024-02-11"},{"lineNumber":188,"author":{"gitId":"PyromancerBoom"},"content":"     * @throws BotException if the description of the todo is empty","lastModifiedDate":"2024-02-11"},{"lineNumber":189,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":190,"author":{"gitId":"PyromancerBoom"},"content":"    private void handleTodoCommand(String[] userInputArray) throws BotException {","lastModifiedDate":"2024-02-11"},{"lineNumber":191,"author":{"gitId":"PyromancerBoom"},"content":"        if (userInputArray.length \u003c 2) {","lastModifiedDate":"2024-02-11"},{"lineNumber":192,"author":{"gitId":"PyromancerBoom"},"content":"            throw new BotException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":193,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":194,"author":{"gitId":"PyromancerBoom"},"content":"        String todoTask \u003d String.join(\" \", Arrays.copyOfRange(userInputArray, 1, userInputArray.length));","lastModifiedDate":"2024-02-11"},{"lineNumber":195,"author":{"gitId":"PyromancerBoom"},"content":"        this.taskList.addTodo(todoTask);","lastModifiedDate":"2024-02-08"},{"lineNumber":196,"author":{"gitId":"PyromancerBoom"},"content":"        addTaskMsg();","lastModifiedDate":"2024-02-10"},{"lineNumber":197,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":198,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":199,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":200,"author":{"gitId":"PyromancerBoom"},"content":"     * Handles the \"deadline\" command by adding a deadline task to the task list","lastModifiedDate":"2024-02-11"},{"lineNumber":201,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-11"},{"lineNumber":202,"author":{"gitId":"PyromancerBoom"},"content":"     * @param userInputArr the array containing the user input","lastModifiedDate":"2024-02-11"},{"lineNumber":203,"author":{"gitId":"PyromancerBoom"},"content":"     * @throws BotException if the user input is incomplete","lastModifiedDate":"2024-02-11"},{"lineNumber":204,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":205,"author":{"gitId":"PyromancerBoom"},"content":"    private void handleDeadlineCommand(String[] userInputArray) throws BotException {","lastModifiedDate":"2024-02-11"},{"lineNumber":206,"author":{"gitId":"PyromancerBoom"},"content":"        if (userInputArray.length \u003c 3) {","lastModifiedDate":"2024-02-11"},{"lineNumber":207,"author":{"gitId":"PyromancerBoom"},"content":"            throw new BotException(\"Please give some description and due date in deadline\");","lastModifiedDate":"2024-01-29"},{"lineNumber":208,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":209,"author":{"gitId":"PyromancerBoom"},"content":"        String deadlineTask \u003d String.join(\" \", Arrays.copyOfRange(userInputArray, 1, userInputArray.length))","lastModifiedDate":"2024-02-11"},{"lineNumber":210,"author":{"gitId":"PyromancerBoom"},"content":"                .split(\"/by\", 2)[0].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":211,"author":{"gitId":"PyromancerBoom"},"content":"        String dueDate \u003d String.join(\" \", Arrays.copyOfRange(userInputArray,","lastModifiedDate":"2024-02-11"},{"lineNumber":212,"author":{"gitId":"PyromancerBoom"},"content":"                Arrays.asList(userInputArray).indexOf(\"/by\") + 1, userInputArray.length));","lastModifiedDate":"2024-02-11"},{"lineNumber":213,"author":{"gitId":"PyromancerBoom"},"content":"        taskList.addDeadline(deadlineTask, dueDate);","lastModifiedDate":"2024-01-28"},{"lineNumber":214,"author":{"gitId":"PyromancerBoom"},"content":"        addTaskMsg();","lastModifiedDate":"2024-02-10"},{"lineNumber":215,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":216,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":217,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":218,"author":{"gitId":"PyromancerBoom"},"content":"     * Handles the event command by extracting the event task, start time, and end","lastModifiedDate":"2024-02-11"},{"lineNumber":219,"author":{"gitId":"PyromancerBoom"},"content":"     * time from the user input array","lastModifiedDate":"2024-02-11"},{"lineNumber":220,"author":{"gitId":"PyromancerBoom"},"content":"     * Adds the event task to the task list with the specified start time and end","lastModifiedDate":"2024-02-11"},{"lineNumber":221,"author":{"gitId":"PyromancerBoom"},"content":"     * time","lastModifiedDate":"2024-02-11"},{"lineNumber":222,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":223,"author":{"gitId":"PyromancerBoom"},"content":"     * @param userInputArr the user input array containing the event command and its","lastModifiedDate":"2024-02-11"},{"lineNumber":224,"author":{"gitId":"PyromancerBoom"},"content":"     *                     arguments","lastModifiedDate":"2024-02-11"},{"lineNumber":225,"author":{"gitId":"PyromancerBoom"},"content":"     * @throws BotException if the description and time of an event are empty","lastModifiedDate":"2024-02-11"},{"lineNumber":226,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":227,"author":{"gitId":"PyromancerBoom"},"content":"    private void handleEventCommand(String[] userInputArray) throws BotException {","lastModifiedDate":"2024-02-11"},{"lineNumber":228,"author":{"gitId":"PyromancerBoom"},"content":"        if (userInputArray.length \u003c 3) {","lastModifiedDate":"2024-02-11"},{"lineNumber":229,"author":{"gitId":"PyromancerBoom"},"content":"            throw new BotException(\"The description and time of an event cannot be empty.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":230,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":231,"author":{"gitId":"PyromancerBoom"},"content":"        String eventTask \u003d String.join(\" \", Arrays.copyOfRange(userInputArray, 1, userInputArray.length))","lastModifiedDate":"2024-02-11"},{"lineNumber":232,"author":{"gitId":"PyromancerBoom"},"content":"                .split(\"/from\", 2)[0].trim();","lastModifiedDate":"2024-01-28"},{"lineNumber":233,"author":{"gitId":"PyromancerBoom"},"content":"        int fromIndex \u003d Arrays.asList(userInputArray).indexOf(\"/from\") + 1;","lastModifiedDate":"2024-02-11"},{"lineNumber":234,"author":{"gitId":"PyromancerBoom"},"content":"        int toIndex \u003d Arrays.asList(userInputArray).indexOf(\"/to\");","lastModifiedDate":"2024-02-11"},{"lineNumber":235,"author":{"gitId":"PyromancerBoom"},"content":"        String startTime \u003d String.join(\" \", Arrays.copyOfRange(userInputArray, fromIndex, toIndex));","lastModifiedDate":"2024-02-11"},{"lineNumber":236,"author":{"gitId":"PyromancerBoom"},"content":"        String endTime \u003d String.join(\" \", Arrays.copyOfRange(userInputArray, toIndex + 1, userInputArray.length));","lastModifiedDate":"2024-02-11"},{"lineNumber":237,"author":{"gitId":"PyromancerBoom"},"content":"        taskList.addEvent(eventTask, startTime, endTime);","lastModifiedDate":"2024-01-28"},{"lineNumber":238,"author":{"gitId":"PyromancerBoom"},"content":"        addTaskMsg();","lastModifiedDate":"2024-02-10"},{"lineNumber":239,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":240,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":241,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":242,"author":{"gitId":"PyromancerBoom"},"content":"     * Prints the add task message, displays the task list, and prints the task","lastModifiedDate":"2024-02-11"},{"lineNumber":243,"author":{"gitId":"PyromancerBoom"},"content":"     * count message","lastModifiedDate":"2024-02-11"},{"lineNumber":244,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":245,"author":{"gitId":"PyromancerBoom"},"content":"    private void addTaskMsg() {","lastModifiedDate":"2024-02-10"},{"lineNumber":246,"author":{"gitId":"PyromancerBoom"},"content":"        Ui.printSeparatorLine();","lastModifiedDate":"2024-02-11"},{"lineNumber":247,"author":{"gitId":"PyromancerBoom"},"content":"        Bot.printAddTaskMsg();","lastModifiedDate":"2024-02-10"},{"lineNumber":248,"author":{"gitId":"PyromancerBoom"},"content":"        Ui.printList(taskList.listTasks());","lastModifiedDate":"2024-02-10"},{"lineNumber":249,"author":{"gitId":"PyromancerBoom"},"content":"        TaskCountMsg();","lastModifiedDate":"2024-02-10"},{"lineNumber":250,"author":{"gitId":"PyromancerBoom"},"content":"        Ui.printSeparatorLine();","lastModifiedDate":"2024-02-11"},{"lineNumber":251,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":252,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":253,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":254,"author":{"gitId":"PyromancerBoom"},"content":"     * Handles the marking of a task as done","lastModifiedDate":"2024-02-11"},{"lineNumber":255,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":256,"author":{"gitId":"PyromancerBoom"},"content":"     * @param inputs The user inputs","lastModifiedDate":"2024-02-11"},{"lineNumber":257,"author":{"gitId":"PyromancerBoom"},"content":"     * @throws BotException If the task number is missing, not numeric, or out of","lastModifiedDate":"2024-02-11"},{"lineNumber":258,"author":{"gitId":"PyromancerBoom"},"content":"     *                      range","lastModifiedDate":"2024-02-11"},{"lineNumber":259,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":260,"author":{"gitId":"PyromancerBoom"},"content":"    private void markTaskHandler(String[] userInputArray) throws BotException {","lastModifiedDate":"2024-02-11"},{"lineNumber":261,"author":{"gitId":"PyromancerBoom"},"content":"        if (userInputArray.length \u003c 2) {","lastModifiedDate":"2024-02-11"},{"lineNumber":262,"author":{"gitId":"PyromancerBoom"},"content":"            throw new BotException(\"Please enter a task number to mark.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":263,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":264,"author":{"gitId":"PyromancerBoom"},"content":"        int i;","lastModifiedDate":"2024-01-29"},{"lineNumber":265,"author":{"gitId":"PyromancerBoom"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":266,"author":{"gitId":"PyromancerBoom"},"content":"            i \u003d Integer.parseInt(userInputArray[1]);","lastModifiedDate":"2024-02-11"},{"lineNumber":267,"author":{"gitId":"PyromancerBoom"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":268,"author":{"gitId":"PyromancerBoom"},"content":"            throw new BotException(\"Task number should be numeric.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":269,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":270,"author":{"gitId":"PyromancerBoom"},"content":"        if (i \u003c\u003d 0 || i \u003e taskList.getTaskCount()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":271,"author":{"gitId":"PyromancerBoom"},"content":"            throw new BotException(\"Task number is out of range.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":272,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":273,"author":{"gitId":"PyromancerBoom"},"content":"        Ui.printSeparatorLine();","lastModifiedDate":"2024-02-11"},{"lineNumber":274,"author":{"gitId":"PyromancerBoom"},"content":"        taskList.markTaskAsDone(i);","lastModifiedDate":"2024-01-29"},{"lineNumber":275,"author":{"gitId":"PyromancerBoom"},"content":"        Bot.printMarkTaskMsg();","lastModifiedDate":"2024-02-10"},{"lineNumber":276,"author":{"gitId":"PyromancerBoom"},"content":"        Ui.printList(taskList.listTasks());","lastModifiedDate":"2024-02-10"},{"lineNumber":277,"author":{"gitId":"PyromancerBoom"},"content":"        TaskCountMsg();","lastModifiedDate":"2024-02-10"},{"lineNumber":278,"author":{"gitId":"PyromancerBoom"},"content":"        Ui.printSeparatorLine();","lastModifiedDate":"2024-02-11"},{"lineNumber":279,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":280,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":281,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":282,"author":{"gitId":"PyromancerBoom"},"content":"     * Handles the command to unmark a task","lastModifiedDate":"2024-02-11"},{"lineNumber":283,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":284,"author":{"gitId":"PyromancerBoom"},"content":"     * @param inputs The array of inputs containing the task number to unmark","lastModifiedDate":"2024-02-11"},{"lineNumber":285,"author":{"gitId":"PyromancerBoom"},"content":"     * @throws BotException If the task number is not provided, is not numeric, or","lastModifiedDate":"2024-02-11"},{"lineNumber":286,"author":{"gitId":"PyromancerBoom"},"content":"     *                      is out of range","lastModifiedDate":"2024-02-11"},{"lineNumber":287,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":288,"author":{"gitId":"PyromancerBoom"},"content":"    private void unmarkTaskHandler(String[] userInputArray) throws BotException {","lastModifiedDate":"2024-02-11"},{"lineNumber":289,"author":{"gitId":"PyromancerBoom"},"content":"        if (userInputArray.length \u003c 2) {","lastModifiedDate":"2024-02-11"},{"lineNumber":290,"author":{"gitId":"PyromancerBoom"},"content":"            throw new BotException(\"Please enter a task number to unmark.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":291,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":292,"author":{"gitId":"PyromancerBoom"},"content":"        int i;","lastModifiedDate":"2024-01-29"},{"lineNumber":293,"author":{"gitId":"PyromancerBoom"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":294,"author":{"gitId":"PyromancerBoom"},"content":"            i \u003d Integer.parseInt(userInputArray[1]);","lastModifiedDate":"2024-02-11"},{"lineNumber":295,"author":{"gitId":"PyromancerBoom"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":296,"author":{"gitId":"PyromancerBoom"},"content":"            throw new BotException(\"Task number should be numeric.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":297,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":298,"author":{"gitId":"PyromancerBoom"},"content":"        if (i \u003c\u003d 0 || i \u003e taskList.getTaskCount()) {","lastModifiedDate":"2024-01-29"},{"lineNumber":299,"author":{"gitId":"PyromancerBoom"},"content":"            throw new BotException(\"Task number is out of range.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":300,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":301,"author":{"gitId":"PyromancerBoom"},"content":"        Ui.printSeparatorLine();","lastModifiedDate":"2024-02-11"},{"lineNumber":302,"author":{"gitId":"PyromancerBoom"},"content":"        taskList.markTaskAsUndone(i);","lastModifiedDate":"2024-01-29"},{"lineNumber":303,"author":{"gitId":"PyromancerBoom"},"content":"        Bot.printUnmarkTaskMsg();","lastModifiedDate":"2024-02-10"},{"lineNumber":304,"author":{"gitId":"PyromancerBoom"},"content":"        Ui.printList(taskList.listTasks());","lastModifiedDate":"2024-02-10"},{"lineNumber":305,"author":{"gitId":"PyromancerBoom"},"content":"        TaskCountMsg();","lastModifiedDate":"2024-02-10"},{"lineNumber":306,"author":{"gitId":"PyromancerBoom"},"content":"        Ui.printSeparatorLine();","lastModifiedDate":"2024-02-11"},{"lineNumber":307,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":308,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":309,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":310,"author":{"gitId":"PyromancerBoom"},"content":"     * Prints all tasks in the task list.","lastModifiedDate":"2024-02-11"},{"lineNumber":311,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":312,"author":{"gitId":"PyromancerBoom"},"content":"    private void botListAllTasks() {","lastModifiedDate":"2024-01-28"},{"lineNumber":313,"author":{"gitId":"PyromancerBoom"},"content":"        Ui.printSeparatorLine();","lastModifiedDate":"2024-02-11"},{"lineNumber":314,"author":{"gitId":"PyromancerBoom"},"content":"        Bot.botListAllMsg();","lastModifiedDate":"2024-02-10"},{"lineNumber":315,"author":{"gitId":"PyromancerBoom"},"content":"        Ui.printList(taskList.listTasks());","lastModifiedDate":"2024-02-10"},{"lineNumber":316,"author":{"gitId":"PyromancerBoom"},"content":"        TaskCountMsg();","lastModifiedDate":"2024-02-10"},{"lineNumber":317,"author":{"gitId":"PyromancerBoom"},"content":"        Ui.printSeparatorLine();","lastModifiedDate":"2024-02-11"},{"lineNumber":318,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":319,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":320,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":321,"author":{"gitId":"PyromancerBoom"},"content":"     * Prints the number of tasks in the task list.","lastModifiedDate":"2024-02-11"},{"lineNumber":322,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":323,"author":{"gitId":"PyromancerBoom"},"content":"    private void TaskCountMsg() {","lastModifiedDate":"2024-02-10"},{"lineNumber":324,"author":{"gitId":"PyromancerBoom"},"content":"        System.out.println(\"You have \" + taskList.getTaskCount() + \" tasks in your list.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":325,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":326,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":327,"author":{"gitId":"PyromancerBoom"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"PyromancerBoom":327}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PyromancerBoom"},"content":"package duke;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"PyromancerBoom"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"PyromancerBoom"},"content":" * Represents a Task with a description and a completion status","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"PyromancerBoom"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"PyromancerBoom"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"PyromancerBoom"},"content":"    private String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"PyromancerBoom"},"content":"    private boolean isComplete;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"PyromancerBoom"},"content":"     * Constructs a new Task with the given description","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"PyromancerBoom"},"content":"     * @param description The description of the task","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"PyromancerBoom"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"PyromancerBoom"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"PyromancerBoom"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"PyromancerBoom"},"content":"     * @return The description of the task","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"PyromancerBoom"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"PyromancerBoom"},"content":"        return description;","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"PyromancerBoom"},"content":"     * Marks the task as done","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"PyromancerBoom"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"PyromancerBoom"},"content":"        this.isComplete \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"PyromancerBoom"},"content":"     * Unmarks the task as done","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"PyromancerBoom"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"PyromancerBoom"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"PyromancerBoom"},"content":"     * @return True if the task is done, false otherwise","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"PyromancerBoom"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"PyromancerBoom"},"content":"        return isComplete;","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"PyromancerBoom"},"content":"     * @return A string representation of the task","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"PyromancerBoom"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":52,"author":{"gitId":"PyromancerBoom"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"PyromancerBoom"},"content":"        return \" | \" + (isComplete ? \"X\" : \" \") + \" | \" + description;","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"PyromancerBoom"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"PyromancerBoom":55}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PyromancerBoom"},"content":"package duke;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"PyromancerBoom"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"PyromancerBoom"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"PyromancerBoom"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"PyromancerBoom"},"content":" * TaskList class to store and manage tasks","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"PyromancerBoom"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"PyromancerBoom"},"content":"public class TaskList {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"PyromancerBoom"},"content":"    // List of tasks to be done by the user","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"PyromancerBoom"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"PyromancerBoom"},"content":"    private int taskCount;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"PyromancerBoom"},"content":"     * Constructor for the TaskList class","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"PyromancerBoom"},"content":"     * It initializes an empty list of tasks","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"PyromancerBoom"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"PyromancerBoom"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"PyromancerBoom"},"content":"     * Method to add a new todo task to the list","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"PyromancerBoom"},"content":"     * @param description The description of the task","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"PyromancerBoom"},"content":"    public void addTodo(String description) {","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"PyromancerBoom"},"content":"        this.tasks.add(new Todo(description));","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"PyromancerBoom"},"content":"        taskCount++;","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"PyromancerBoom"},"content":"     * Method to add a new deadline task to the list","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"PyromancerBoom"},"content":"     * @param description The description of the task","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"PyromancerBoom"},"content":"     * @param dueDate     The due date of the task","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"PyromancerBoom"},"content":"    public void addDeadline(String description, String dueDate) throws BotException {","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"PyromancerBoom"},"content":"        this.tasks.add(new Deadline(description, dueDate));","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"PyromancerBoom"},"content":"        taskCount++;","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"PyromancerBoom"},"content":"     * Method to add a new event task to the list","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"PyromancerBoom"},"content":"     * @param description The description of the task","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"PyromancerBoom"},"content":"     * @param startTime   The start time of the event","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"PyromancerBoom"},"content":"     * @param endTime     The end time of the event","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"PyromancerBoom"},"content":"    public void addEvent(String description, String startTime, String endTime) throws BotException {","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"PyromancerBoom"},"content":"        this.tasks.add(new TimeBlock(description, startTime, endTime));","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"PyromancerBoom"},"content":"        taskCount++;","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"PyromancerBoom"},"content":"     * Method to return task by task number","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"PyromancerBoom"},"content":"     * @param taskNumber The number of the task","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"PyromancerBoom"},"content":"     * @return The task at the specified index","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"PyromancerBoom"},"content":"    public Task getTaskByNum(int taskNumber) {","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"PyromancerBoom"},"content":"        return tasks.get(taskNumber - 1);","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":65,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"PyromancerBoom"},"content":"     * Method to remove task","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"PyromancerBoom"},"content":"     * @param taskNumber The index of the task to remove","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"PyromancerBoom"},"content":"    public void removeTask(int taskNumber) {","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"PyromancerBoom"},"content":"        tasks.remove(taskNumber - 1);","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"PyromancerBoom"},"content":"        taskCount--;","lastModifiedDate":"2024-01-29"},{"lineNumber":73,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"PyromancerBoom"},"content":"     * Method to list all tasks","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"PyromancerBoom"},"content":"     * @return A list of all task descriptions","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"PyromancerBoom"},"content":"    public List\u003cString\u003e listTasks() {","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"PyromancerBoom"},"content":"        List\u003cString\u003e taskDescriptions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"PyromancerBoom"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"PyromancerBoom"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"PyromancerBoom"},"content":"            taskDescriptions.add((i + 1) + \". \" + task.toString());","lastModifiedDate":"2024-01-26"},{"lineNumber":85,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"PyromancerBoom"},"content":"        return taskDescriptions;","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":89,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":90,"author":{"gitId":"PyromancerBoom"},"content":"     * Finds tasks in the task list that contain the specified keyword in their","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"PyromancerBoom"},"content":"     * description","lastModifiedDate":"2024-02-11"},{"lineNumber":92,"author":{"gitId":"PyromancerBoom"},"content":"     * Assumption here is that keyword would be valid","lastModifiedDate":"2024-02-11"},{"lineNumber":93,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":94,"author":{"gitId":"PyromancerBoom"},"content":"     * @param keyword the keyword to search for in the task descriptions","lastModifiedDate":"2024-02-11"},{"lineNumber":95,"author":{"gitId":"PyromancerBoom"},"content":"     * @return a list of tasks that contain the specified keyword in their","lastModifiedDate":"2024-02-11"},{"lineNumber":96,"author":{"gitId":"PyromancerBoom"},"content":"     *         description","lastModifiedDate":"2024-02-11"},{"lineNumber":97,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":98,"author":{"gitId":"PyromancerBoom"},"content":"    public List\u003cTask\u003e findTasksByKeyword(String keyword) {","lastModifiedDate":"2024-02-11"},{"lineNumber":99,"author":{"gitId":"PyromancerBoom"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-11"},{"lineNumber":100,"author":{"gitId":"PyromancerBoom"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-11"},{"lineNumber":101,"author":{"gitId":"PyromancerBoom"},"content":"            // convert all to lower case for case-insensitive search","lastModifiedDate":"2024-02-26"},{"lineNumber":102,"author":{"gitId":"PyromancerBoom"},"content":"            String temp \u003d task.getDescription().toLowerCase();","lastModifiedDate":"2024-02-26"},{"lineNumber":103,"author":{"gitId":"PyromancerBoom"},"content":"            if (temp.contains(keyword)) {","lastModifiedDate":"2024-02-26"},{"lineNumber":104,"author":{"gitId":"PyromancerBoom"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2024-02-11"},{"lineNumber":105,"author":{"gitId":"PyromancerBoom"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":106,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":107,"author":{"gitId":"PyromancerBoom"},"content":"        return matchingTasks;","lastModifiedDate":"2024-02-11"},{"lineNumber":108,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":109,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":110,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":111,"author":{"gitId":"PyromancerBoom"},"content":"     * Method to mark task as done","lastModifiedDate":"2024-02-10"},{"lineNumber":112,"author":{"gitId":"PyromancerBoom"},"content":"     * Just need number of task, index is","lastModifiedDate":"2024-02-10"},{"lineNumber":113,"author":{"gitId":"PyromancerBoom"},"content":"     * adjusted automatically by this method","lastModifiedDate":"2024-02-10"},{"lineNumber":114,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-10"},{"lineNumber":115,"author":{"gitId":"PyromancerBoom"},"content":"     * @param taskNumber The number of the task to mark as done","lastModifiedDate":"2024-02-10"},{"lineNumber":116,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":117,"author":{"gitId":"PyromancerBoom"},"content":"    public void markTaskAsDone(int taskNumber) {","lastModifiedDate":"2024-01-26"},{"lineNumber":118,"author":{"gitId":"PyromancerBoom"},"content":"        tasks.get(taskNumber - 1).markAsDone();","lastModifiedDate":"2024-01-26"},{"lineNumber":119,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":120,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":121,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":122,"author":{"gitId":"PyromancerBoom"},"content":"     * Method to mark task as undone","lastModifiedDate":"2024-02-10"},{"lineNumber":123,"author":{"gitId":"PyromancerBoom"},"content":"     * Just need number of task, index is","lastModifiedDate":"2024-02-10"},{"lineNumber":124,"author":{"gitId":"PyromancerBoom"},"content":"     * adjusted automatically by this method","lastModifiedDate":"2024-02-10"},{"lineNumber":125,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-10"},{"lineNumber":126,"author":{"gitId":"PyromancerBoom"},"content":"     * @param taskNumber The number of the task to mark as undone","lastModifiedDate":"2024-02-10"},{"lineNumber":127,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":128,"author":{"gitId":"PyromancerBoom"},"content":"    public void markTaskAsUndone(int taskNumber) {","lastModifiedDate":"2024-01-26"},{"lineNumber":129,"author":{"gitId":"PyromancerBoom"},"content":"        tasks.get(taskNumber - 1).markAsUndone();","lastModifiedDate":"2024-01-26"},{"lineNumber":130,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":131,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":132,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":133,"author":{"gitId":"PyromancerBoom"},"content":"     * Method to return the number of tasks","lastModifiedDate":"2024-02-10"},{"lineNumber":134,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-10"},{"lineNumber":135,"author":{"gitId":"PyromancerBoom"},"content":"     * @return The number of tasks","lastModifiedDate":"2024-02-10"},{"lineNumber":136,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":137,"author":{"gitId":"PyromancerBoom"},"content":"    public int getTaskCount() {","lastModifiedDate":"2024-01-28"},{"lineNumber":138,"author":{"gitId":"PyromancerBoom"},"content":"        return taskCount;","lastModifiedDate":"2024-01-28"},{"lineNumber":139,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":140,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":142,"author":{"gitId":"PyromancerBoom"},"content":"     * Method to get the list of tasks","lastModifiedDate":"2024-02-11"},{"lineNumber":143,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-10"},{"lineNumber":144,"author":{"gitId":"PyromancerBoom"},"content":"     * @return The list of tasks","lastModifiedDate":"2024-02-10"},{"lineNumber":145,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":146,"author":{"gitId":"PyromancerBoom"},"content":"    public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-02-08"},{"lineNumber":147,"author":{"gitId":"PyromancerBoom"},"content":"        return tasks;","lastModifiedDate":"2024-02-08"},{"lineNumber":148,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":150,"author":{"gitId":"PyromancerBoom"},"content":"    /*","lastModifiedDate":"2024-02-26"},{"lineNumber":151,"author":{"gitId":"PyromancerBoom"},"content":"     * Method to return the string representation of the task list","lastModifiedDate":"2024-02-26"},{"lineNumber":152,"author":{"gitId":"PyromancerBoom"},"content":"     * ","lastModifiedDate":"2024-02-26"},{"lineNumber":153,"author":{"gitId":"PyromancerBoom"},"content":"     * @return The string representation of the task list","lastModifiedDate":"2024-02-26"},{"lineNumber":154,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":155,"author":{"gitId":"PyromancerBoom"},"content":"    @Override","lastModifiedDate":"2024-02-26"},{"lineNumber":156,"author":{"gitId":"PyromancerBoom"},"content":"    public String toString() {","lastModifiedDate":"2024-02-26"},{"lineNumber":157,"author":{"gitId":"PyromancerBoom"},"content":"        StringBuilder tasksMsg \u003d new StringBuilder();","lastModifiedDate":"2024-02-26"},{"lineNumber":158,"author":{"gitId":"PyromancerBoom"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-26"},{"lineNumber":159,"author":{"gitId":"PyromancerBoom"},"content":"            tasksMsg.append((i + 1) + \". \" + tasks.get(i).toString() + \"\\n\");","lastModifiedDate":"2024-02-26"},{"lineNumber":160,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-26"},{"lineNumber":161,"author":{"gitId":"PyromancerBoom"},"content":"        return tasksMsg.toString();","lastModifiedDate":"2024-02-26"},{"lineNumber":162,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":163,"author":{"gitId":"PyromancerBoom"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"PyromancerBoom":163}},{"path":"src/main/java/duke/TaskRepository.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PyromancerBoom"},"content":"package duke;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"PyromancerBoom"},"content":"import java.io.*;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"PyromancerBoom"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"PyromancerBoom"},"content":" * TaskRepository class to handle the storage of tasks","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"PyromancerBoom"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"PyromancerBoom"},"content":"public class TaskRepository {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"PyromancerBoom"},"content":"    // Relative file path to store tasks","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"PyromancerBoom"},"content":"    private final String FILE_PATH \u003d \"./data/taskStorage.txt\";","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"PyromancerBoom"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":"     * Constructor for the TaskRepository class","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"PyromancerBoom"},"content":"     * It checks if a file at FILE_PATH exists, and if not, creates it","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"PyromancerBoom"},"content":"     * It also initializes an empty TaskList","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"PyromancerBoom"},"content":"    public TaskRepository() {","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"PyromancerBoom"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"PyromancerBoom"},"content":"            // Create the file if it does not exist","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"PyromancerBoom"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"PyromancerBoom"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"PyromancerBoom"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"PyromancerBoom"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"PyromancerBoom"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"PyromancerBoom"},"content":"            // Initialize an empty TaskList","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"PyromancerBoom"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"PyromancerBoom"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"PyromancerBoom"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"PyromancerBoom"},"content":"     * Loads tasks from a file into a TaskList and","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"PyromancerBoom"},"content":"     * populates the taskList with tasks from the file","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"PyromancerBoom"},"content":"     * Tasks are read line by line, with details split by \u0027|\u0027","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"PyromancerBoom"},"content":"     * Task type (T, D, E) determines how each task is added to the TaskList","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"PyromancerBoom"},"content":"     * @return The populated TaskList object","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"PyromancerBoom"},"content":"    public TaskList loadTasks() throws BotException {","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"PyromancerBoom"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"PyromancerBoom"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH));","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"PyromancerBoom"},"content":"            String line;","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"PyromancerBoom"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"PyromancerBoom"},"content":"                String[] taskDetails \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"PyromancerBoom"},"content":"                String isDone \u003d taskDetails[1].trim();","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"PyromancerBoom"},"content":"                Boolean isTaskDone \u003d isDone.equals(\"X\");","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"PyromancerBoom"},"content":"                String taskType \u003d taskDetails[0].trim();","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"PyromancerBoom"},"content":"                String description \u003d taskDetails[2].trim();","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"PyromancerBoom"},"content":"                switch (taskType) {","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"PyromancerBoom"},"content":"                    case \"T\":","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"PyromancerBoom"},"content":"                        taskList.addTodo(description);","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"PyromancerBoom"},"content":"                        if (isTaskDone) {","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"PyromancerBoom"},"content":"                            taskList.getTaskByNum(taskList.getTaskCount()).markAsDone();","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"PyromancerBoom"},"content":"                        }","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"PyromancerBoom"},"content":"                        break;","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"PyromancerBoom"},"content":"                    case \"D\":","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"PyromancerBoom"},"content":"                        String dueDate \u003d taskDetails[3].trim();","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"PyromancerBoom"},"content":"                        dueDate \u003d dueDate.substring(3).trim();","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"PyromancerBoom"},"content":"                        taskList.addDeadline(description, dueDate);","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"PyromancerBoom"},"content":"                        if (isTaskDone) {","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"PyromancerBoom"},"content":"                            taskList.getTaskByNum(taskList.getTaskCount()).markAsDone();","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"PyromancerBoom"},"content":"                        }","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"PyromancerBoom"},"content":"                        break;","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"PyromancerBoom"},"content":"                    case \"E\":","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"PyromancerBoom"},"content":"                        String timeBlock \u003d taskDetails[3].trim();","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"PyromancerBoom"},"content":"                        String[] parts \u003d timeBlock.split(\"to:\");","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"PyromancerBoom"},"content":"                        String fromPart \u003d parts[0];","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"PyromancerBoom"},"content":"                        String toPart \u003d parts[1];","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"PyromancerBoom"},"content":"                        String startTime \u003d fromPart.replace(\"from:\", \"\").trim();","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"PyromancerBoom"},"content":"                        String endTime \u003d toPart.trim();","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"PyromancerBoom"},"content":"                        taskList.addEvent(description, startTime, endTime);","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"PyromancerBoom"},"content":"                        if (isTaskDone) {","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"PyromancerBoom"},"content":"                            taskList.getTaskByNum(taskList.getTaskCount()).markAsDone();","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"PyromancerBoom"},"content":"                        }","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"PyromancerBoom"},"content":"                        break;","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"PyromancerBoom"},"content":"                }","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"PyromancerBoom"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"PyromancerBoom"},"content":"            reader.close();","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"PyromancerBoom"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"PyromancerBoom"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"PyromancerBoom"},"content":"        return taskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"PyromancerBoom"},"content":"     * This method saves the tasks from the provided TaskList to a text file","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"PyromancerBoom"},"content":"     * It writes each task as a new line in the file","lastModifiedDate":"2024-02-11"},{"lineNumber":90,"author":{"gitId":"PyromancerBoom"},"content":"     * The task number is removed before writing to the file as it is not needed","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":92,"author":{"gitId":"PyromancerBoom"},"content":"     * @param taskList The TaskList containing the tasks to be saved to the file","lastModifiedDate":"2024-02-11"},{"lineNumber":93,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":94,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"PyromancerBoom"},"content":"    public void saveTasksToFile(TaskList taskList) {","lastModifiedDate":"2024-02-10"},{"lineNumber":96,"author":{"gitId":"PyromancerBoom"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"PyromancerBoom"},"content":"            FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"PyromancerBoom"},"content":"            for (String task : taskList.listTasks()) {","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"PyromancerBoom"},"content":"                String taskWithoutNumber \u003d task.substring(task.indexOf(\" \") + 1);","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"PyromancerBoom"},"content":"                fileWriter.write(taskWithoutNumber + \"\\n\");","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"PyromancerBoom"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"PyromancerBoom"},"content":"            fileWriter.close();","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"PyromancerBoom"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":104,"author":{"gitId":"PyromancerBoom"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-10"},{"lineNumber":105,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":106,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":107,"author":{"gitId":"PyromancerBoom"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"PyromancerBoom":107}},{"path":"src/main/java/duke/TerminalDuke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PyromancerBoom"},"content":"package duke;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"PyromancerBoom"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"PyromancerBoom"},"content":"public class TerminalDuke {","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"PyromancerBoom"},"content":"    // Entry point for the bot on terminal","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"PyromancerBoom"},"content":"    public static void main(String[] args) throws BotException, IOException {","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"PyromancerBoom"},"content":"        // Initial","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"PyromancerBoom"},"content":"        System.out.println(Ui.wrapWithSepLine(Bot.getGreeting()));","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"PyromancerBoom"},"content":"        // Starting parser to work with bot","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"PyromancerBoom"},"content":"        Parser operator \u003d new Parser();","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"PyromancerBoom"},"content":"        operator.startOperator();","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"PyromancerBoom"},"content":"}","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"PyromancerBoom":16}},{"path":"src/main/java/duke/TimeBlock.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PyromancerBoom"},"content":"package duke;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"PyromancerBoom"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"PyromancerBoom"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"PyromancerBoom"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"PyromancerBoom"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"PyromancerBoom"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"PyromancerBoom"},"content":" * TimeBlock is a class that extends Task. It represents a task that has a","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"PyromancerBoom"},"content":" * specific time block","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"PyromancerBoom"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"PyromancerBoom"},"content":"public class TimeBlock extends Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"PyromancerBoom"},"content":"    // The start time of the task.","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":"    protected String fromTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"PyromancerBoom"},"content":"    // The end time of the task.","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"PyromancerBoom"},"content":"    protected String toTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"PyromancerBoom"},"content":"     * Constructs a new TimeBlock object","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"PyromancerBoom"},"content":"     * @param description The description of the task","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"PyromancerBoom"},"content":"     * @param fromTime    The start time of the task","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"PyromancerBoom"},"content":"     * @param toTime      The end time of the task","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"PyromancerBoom"},"content":"    public TimeBlock(String description, String fromTime, String toTime) throws BotException {","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"PyromancerBoom"},"content":"        super(description);","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"PyromancerBoom"},"content":"        // The various formats that the time can be in","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"PyromancerBoom"},"content":"        DateTimeFormatter formatter1 \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"PyromancerBoom"},"content":"        DateTimeFormatter formatter2 \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"PyromancerBoom"},"content":"        DateTimeFormatter formatter3 \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"PyromancerBoom"},"content":"        // Check if the time is in the correct format","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"PyromancerBoom"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"PyromancerBoom"},"content":"            LocalDateTime.parse(fromTime, formatter1);","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"PyromancerBoom"},"content":"            this.fromTime \u003d fromTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"PyromancerBoom"},"content":"        } catch (DateTimeParseException e1) {","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"PyromancerBoom"},"content":"            try {","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"PyromancerBoom"},"content":"                LocalDateTime.parse(fromTime, formatter2);","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"PyromancerBoom"},"content":"                this.fromTime \u003d fromTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"PyromancerBoom"},"content":"            } catch (DateTimeParseException e2) {","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"PyromancerBoom"},"content":"                try {","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"PyromancerBoom"},"content":"                    LocalTime.parse(fromTime, formatter3);","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"PyromancerBoom"},"content":"                    this.fromTime \u003d fromTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"PyromancerBoom"},"content":"                } catch (DateTimeParseException e3) {","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"PyromancerBoom"},"content":"                    throw new BotException(","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"PyromancerBoom"},"content":"                            \"Invalid fromTime format. Please use either \u0027d/M/yyyy HHmm\u0027, \u0027MMM dd yyyy HH:mm\u0027 or \u0027HHmm\u0027.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"PyromancerBoom"},"content":"                }","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"PyromancerBoom"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"PyromancerBoom"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"PyromancerBoom"},"content":"            LocalDateTime.parse(toTime, formatter1);","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"PyromancerBoom"},"content":"            this.toTime \u003d toTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"PyromancerBoom"},"content":"        } catch (DateTimeParseException e1) {","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"PyromancerBoom"},"content":"            try {","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"PyromancerBoom"},"content":"                LocalDateTime.parse(toTime, formatter2);","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"PyromancerBoom"},"content":"                this.toTime \u003d toTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"PyromancerBoom"},"content":"            } catch (DateTimeParseException e2) {","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"PyromancerBoom"},"content":"                try {","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"PyromancerBoom"},"content":"                    LocalTime.parse(toTime, formatter3);","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"PyromancerBoom"},"content":"                    this.toTime \u003d toTime;","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"PyromancerBoom"},"content":"                } catch (DateTimeParseException e3) {","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"PyromancerBoom"},"content":"                    throw new BotException(","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"PyromancerBoom"},"content":"                            \"Invalid toTime format. Please use either \u0027d/M/yyyy HHmm\u0027, \u0027MMM dd yyyy HH:mm\u0027 or \u0027HHmm\u0027.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"PyromancerBoom"},"content":"                }","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"PyromancerBoom"},"content":"            }","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"PyromancerBoom"},"content":"     * Returns a string representation of the TimeBlock object","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"PyromancerBoom"},"content":"     * @return A string representation of the TimeBlock object, including the task","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"PyromancerBoom"},"content":"     *         type (E), the task description,","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"PyromancerBoom"},"content":"     *         the start time, and the end time","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"PyromancerBoom"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"PyromancerBoom"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"PyromancerBoom"},"content":"        return \"E\" + super.toString() + \" | from: \" + this.fromTime + \" to: \" + this.toTime + \"\";","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"PyromancerBoom"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"PyromancerBoom":80}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PyromancerBoom"},"content":"package duke;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"PyromancerBoom"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"PyromancerBoom"},"content":" * Todo class that extends the Task class","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"PyromancerBoom"},"content":" * Represents a task without any date/time attached to it","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"PyromancerBoom"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"PyromancerBoom"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"PyromancerBoom"},"content":"     * Constructs a new Todo instance","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"PyromancerBoom"},"content":"     * @param description The description of the task","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"PyromancerBoom"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"PyromancerBoom"},"content":"        super(description);","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"PyromancerBoom"},"content":"     * Returns a string representation of the Todo instance","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"PyromancerBoom"},"content":"     * @return A string that represents the Todo instance, prefixed with \"T\"","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"PyromancerBoom"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"PyromancerBoom"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"PyromancerBoom"},"content":"        return \"T\" + super.toString();","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"PyromancerBoom"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"PyromancerBoom":28}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PyromancerBoom"},"content":"package duke;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"PyromancerBoom"},"content":"import java.util.List;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"PyromancerBoom"},"content":"/**","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"PyromancerBoom"},"content":" * TerminalUI is a utility class that provides methods for printing formatted","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"PyromancerBoom"},"content":" * output to the terminal","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"PyromancerBoom"},"content":" */","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"PyromancerBoom"},"content":"public class Ui {","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"PyromancerBoom"},"content":"    // Separator line to be used in the terminal","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"PyromancerBoom"},"content":"    private static final String SEPARATOR_LINE \u003d \"____________________________________________________\";","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":"     * Prints a separator line to the terminal","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"PyromancerBoom"},"content":"    public static void printSeparatorLine() {","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"PyromancerBoom"},"content":"        System.out.println(SEPARATOR_LINE);","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"PyromancerBoom"},"content":"     * Wraps a string with separator lines and returns the result","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"PyromancerBoom"},"content":"     * @param input The string to be wrapped","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"PyromancerBoom"},"content":"     * @return The input string wrapped with separator lines","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"PyromancerBoom"},"content":"    public static String wrapWithSepLine(String input) {","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"PyromancerBoom"},"content":"        return SEPARATOR_LINE + \"\\n\" + input + \"\\n\" + SEPARATOR_LINE;","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"PyromancerBoom"},"content":"     * Wraps a list of strings with separator lines and returns the result","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"PyromancerBoom"},"content":"     * Each string in the list is placed on a new line","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"PyromancerBoom"},"content":"     * @param list The list of strings to be wrapped","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"PyromancerBoom"},"content":"     * @return The list of strings wrapped with separator lines","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"PyromancerBoom"},"content":"    public static String wrapWithSepLine(List\u003cString\u003e list) {","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"PyromancerBoom"},"content":"        StringBuilder sb \u003d new StringBuilder(SEPARATOR_LINE);","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"PyromancerBoom"},"content":"        System.out.println();","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"PyromancerBoom"},"content":"        for (String item : list) {","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"PyromancerBoom"},"content":"            sb.append(\"\\n\").append(item);","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"PyromancerBoom"},"content":"        sb.append(\"\\n\").append(SEPARATOR_LINE);","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"PyromancerBoom"},"content":"        return sb.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"PyromancerBoom"},"content":"     * Prints a list of strings to the terminal","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"PyromancerBoom"},"content":"     * Each string in the list is placed on a new line","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"PyromancerBoom"},"content":"     * @param list The list of strings to be printed","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"PyromancerBoom"},"content":"    public static void printList(List\u003cString\u003e list) {","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"PyromancerBoom"},"content":"        System.out.println();","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"PyromancerBoom"},"content":"        for (String item : list) {","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"PyromancerBoom"},"content":"            System.out.println(item);","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"PyromancerBoom"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"PyromancerBoom":59}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"PyromancerBoom"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"PyromancerBoom"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"PyromancerBoom"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"PyromancerBoom"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"PyromancerBoom"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"PyromancerBoom"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"PyromancerBoom"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"800.0\" maxWidth\u003d\"800.0\" minHeight\u003d\"100\"","lastModifiedDate":"2024-02-25"},{"lineNumber":10,"author":{"gitId":"PyromancerBoom"},"content":"         prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-02-25"},{"lineNumber":11,"author":{"gitId":"PyromancerBoom"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":12,"author":{"gitId":"PyromancerBoom"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"PyromancerBoom"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"PyromancerBoom"},"content":"                \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"PyromancerBoom"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":17,"author":{"gitId":"PyromancerBoom"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":18,"author":{"gitId":"PyromancerBoom"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"PyromancerBoom"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"PyromancerBoom"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"PyromancerBoom"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"PyromancerBoom"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"PyromancerBoom"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"PyromancerBoom":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"PyromancerBoom"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":2,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":3,"author":{"gitId":"PyromancerBoom"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":4,"author":{"gitId":"PyromancerBoom"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":5,"author":{"gitId":"PyromancerBoom"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":6,"author":{"gitId":"PyromancerBoom"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"PyromancerBoom"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":8,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":9,"author":{"gitId":"PyromancerBoom"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2024-02-18"},{"lineNumber":10,"author":{"gitId":"PyromancerBoom"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2024-02-18"},{"lineNumber":11,"author":{"gitId":"PyromancerBoom"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-02-18"},{"lineNumber":12,"author":{"gitId":"PyromancerBoom"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":13,"author":{"gitId":"PyromancerBoom"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\"","lastModifiedDate":"2024-02-18"},{"lineNumber":15,"author":{"gitId":"PyromancerBoom"},"content":"                   onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\"","lastModifiedDate":"2024-02-18"},{"lineNumber":16,"author":{"gitId":"PyromancerBoom"},"content":"                   prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":17,"author":{"gitId":"PyromancerBoom"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\"","lastModifiedDate":"2024-02-18"},{"lineNumber":18,"author":{"gitId":"PyromancerBoom"},"content":"                mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":19,"author":{"gitId":"PyromancerBoom"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":20,"author":{"gitId":"PyromancerBoom"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":21,"author":{"gitId":"PyromancerBoom"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":22,"author":{"gitId":"PyromancerBoom"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":23,"author":{"gitId":"PyromancerBoom"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":24,"author":{"gitId":"PyromancerBoom"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-18"},{"lineNumber":25,"author":{"gitId":"PyromancerBoom"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-18"}],"authorContributionMap":{"PyromancerBoom":25}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PyromancerBoom"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"PyromancerBoom"},"content":"import duke.Task;","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"PyromancerBoom"},"content":"import duke.Todo;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"PyromancerBoom"},"content":"import duke.TimeBlock;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"PyromancerBoom"},"content":"import duke.Deadline;","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"PyromancerBoom"},"content":"import duke.BotException;","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"PyromancerBoom"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"PyromancerBoom"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"PyromancerBoom"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"PyromancerBoom"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"PyromancerBoom"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"PyromancerBoom"},"content":"/*","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":" * Test class for the TaskList class","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"PyromancerBoom"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"PyromancerBoom"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"PyromancerBoom"},"content":"    /*","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"PyromancerBoom"},"content":"     * Test if a todo task can be added to the task list","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"PyromancerBoom"},"content":"    @Test","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"PyromancerBoom"},"content":"    public void addTodoTest() {","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"PyromancerBoom"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"PyromancerBoom"},"content":"        taskList.addTodo(\"Test Todo\");","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"PyromancerBoom"},"content":"        assertEquals(1, taskList.getTaskCount());","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"PyromancerBoom"},"content":"        assertTrue(taskList.getTaskByNum(1) instanceof Todo);","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"PyromancerBoom"},"content":"    /*","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"PyromancerBoom"},"content":"     * Test if a task can be removed from the task list","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":32,"author":{"gitId":"PyromancerBoom"},"content":"    @Test","lastModifiedDate":"2024-02-10"},{"lineNumber":33,"author":{"gitId":"PyromancerBoom"},"content":"    public void removeTaskTest() {","lastModifiedDate":"2024-02-10"},{"lineNumber":34,"author":{"gitId":"PyromancerBoom"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"PyromancerBoom"},"content":"        taskList.addTodo(\"Test Todo\");","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"PyromancerBoom"},"content":"        taskList.removeTask(1);","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"PyromancerBoom"},"content":"        assertEquals(0, taskList.getTaskCount());","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"PyromancerBoom"},"content":"    /*","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"PyromancerBoom"},"content":"     * Test if a task can be marked as done","lastModifiedDate":"2024-02-10"},{"lineNumber":42,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":43,"author":{"gitId":"PyromancerBoom"},"content":"    @Test","lastModifiedDate":"2024-02-10"},{"lineNumber":44,"author":{"gitId":"PyromancerBoom"},"content":"    public void markTaskAsDoneTest() {","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"PyromancerBoom"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"PyromancerBoom"},"content":"        taskList.addTodo(\"Test Todo\");","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"PyromancerBoom"},"content":"        taskList.markTaskAsDone(1);","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"PyromancerBoom"},"content":"        Task task \u003d taskList.getTaskByNum(1);","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"PyromancerBoom"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"PyromancerBoom"},"content":"    /*","lastModifiedDate":"2024-02-10"},{"lineNumber":53,"author":{"gitId":"PyromancerBoom"},"content":"     * Test if an event task can be added to the task list","lastModifiedDate":"2024-02-10"},{"lineNumber":54,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":55,"author":{"gitId":"PyromancerBoom"},"content":"    @Test","lastModifiedDate":"2024-02-10"},{"lineNumber":56,"author":{"gitId":"PyromancerBoom"},"content":"    public void addEventTest() {","lastModifiedDate":"2024-02-10"},{"lineNumber":57,"author":{"gitId":"PyromancerBoom"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-10"},{"lineNumber":58,"author":{"gitId":"PyromancerBoom"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":59,"author":{"gitId":"PyromancerBoom"},"content":"            taskList.addEvent(\"Test Event\", \"05/03/2089 1500\", \"05/03/2089 1600\");","lastModifiedDate":"2024-02-10"},{"lineNumber":60,"author":{"gitId":"PyromancerBoom"},"content":"            assertEquals(1, taskList.getTaskCount());","lastModifiedDate":"2024-02-10"},{"lineNumber":61,"author":{"gitId":"PyromancerBoom"},"content":"            assertTrue(taskList.getTaskByNum(1) instanceof TimeBlock);","lastModifiedDate":"2024-02-10"},{"lineNumber":62,"author":{"gitId":"PyromancerBoom"},"content":"        } catch (BotException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":63,"author":{"gitId":"PyromancerBoom"},"content":"            fail(\"Exception should not have been thrown.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":64,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":65,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":66,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":67,"author":{"gitId":"PyromancerBoom"},"content":"    /*","lastModifiedDate":"2024-02-10"},{"lineNumber":68,"author":{"gitId":"PyromancerBoom"},"content":"     * Test if a deadline task can be added to the task list","lastModifiedDate":"2024-02-10"},{"lineNumber":69,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":70,"author":{"gitId":"PyromancerBoom"},"content":"    @Test","lastModifiedDate":"2024-02-10"},{"lineNumber":71,"author":{"gitId":"PyromancerBoom"},"content":"    public void addDeadlineTest() {","lastModifiedDate":"2024-02-10"},{"lineNumber":72,"author":{"gitId":"PyromancerBoom"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-10"},{"lineNumber":73,"author":{"gitId":"PyromancerBoom"},"content":"        try {","lastModifiedDate":"2024-02-10"},{"lineNumber":74,"author":{"gitId":"PyromancerBoom"},"content":"            taskList.addDeadline(\"Test Deadline\", \"05/03/2089 1500\");","lastModifiedDate":"2024-02-10"},{"lineNumber":75,"author":{"gitId":"PyromancerBoom"},"content":"            assertEquals(1, taskList.getTaskCount());","lastModifiedDate":"2024-02-10"},{"lineNumber":76,"author":{"gitId":"PyromancerBoom"},"content":"            assertTrue(taskList.getTaskByNum(1) instanceof Deadline);","lastModifiedDate":"2024-02-10"},{"lineNumber":77,"author":{"gitId":"PyromancerBoom"},"content":"        } catch (BotException e) {","lastModifiedDate":"2024-02-10"},{"lineNumber":78,"author":{"gitId":"PyromancerBoom"},"content":"            fail(\"Exception should not have been thrown.\");","lastModifiedDate":"2024-02-10"},{"lineNumber":79,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-02-10"},{"lineNumber":80,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":81,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":82,"author":{"gitId":"PyromancerBoom"},"content":"    /*","lastModifiedDate":"2024-02-10"},{"lineNumber":83,"author":{"gitId":"PyromancerBoom"},"content":"     * Test if we can remove a task that does not exist","lastModifiedDate":"2024-02-10"},{"lineNumber":84,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":85,"author":{"gitId":"PyromancerBoom"},"content":"    @Test","lastModifiedDate":"2024-02-10"},{"lineNumber":86,"author":{"gitId":"PyromancerBoom"},"content":"    public void removeNonExistentTaskTest() {","lastModifiedDate":"2024-02-10"},{"lineNumber":87,"author":{"gitId":"PyromancerBoom"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-10"},{"lineNumber":88,"author":{"gitId":"PyromancerBoom"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2024-02-10"},{"lineNumber":89,"author":{"gitId":"PyromancerBoom"},"content":"            taskList.removeTask(1);","lastModifiedDate":"2024-02-10"},{"lineNumber":90,"author":{"gitId":"PyromancerBoom"},"content":"        });","lastModifiedDate":"2024-02-10"},{"lineNumber":91,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":92,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":93,"author":{"gitId":"PyromancerBoom"},"content":"    /*","lastModifiedDate":"2024-02-10"},{"lineNumber":94,"author":{"gitId":"PyromancerBoom"},"content":"     * Test if we can mark a task that does not exist as done","lastModifiedDate":"2024-02-10"},{"lineNumber":95,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-10"},{"lineNumber":96,"author":{"gitId":"PyromancerBoom"},"content":"    @Test","lastModifiedDate":"2024-02-10"},{"lineNumber":97,"author":{"gitId":"PyromancerBoom"},"content":"    public void markNonExistentTaskAsDoneTest() {","lastModifiedDate":"2024-02-10"},{"lineNumber":98,"author":{"gitId":"PyromancerBoom"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-10"},{"lineNumber":99,"author":{"gitId":"PyromancerBoom"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2024-02-10"},{"lineNumber":100,"author":{"gitId":"PyromancerBoom"},"content":"            taskList.markTaskAsDone(1);","lastModifiedDate":"2024-02-10"},{"lineNumber":101,"author":{"gitId":"PyromancerBoom"},"content":"        });","lastModifiedDate":"2024-02-10"},{"lineNumber":102,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":103,"author":{"gitId":"PyromancerBoom"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"PyromancerBoom":103}},{"path":"src/test/java/duke/TimeBlockTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"PyromancerBoom"},"content":"import duke.TimeBlock;","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"PyromancerBoom"},"content":"import duke.BotException;","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"PyromancerBoom"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"PyromancerBoom"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"PyromancerBoom"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"PyromancerBoom"},"content":" * Test class for TimeBlock","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"PyromancerBoom"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"PyromancerBoom"},"content":"class TimeBlockTest {","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"PyromancerBoom"},"content":"     * Test case for valid input to the TimeBlock constructor","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":"    @Test","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"PyromancerBoom"},"content":"    void testValidInputConstructor() {","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"PyromancerBoom"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"PyromancerBoom"},"content":"            new TimeBlock(\"description\", \"1/1/2022 1200\", \"1/1/2022 1300\");","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"PyromancerBoom"},"content":"        });","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"PyromancerBoom"},"content":"     * Test case for invalid from time input to the TimeBlock constructor","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"PyromancerBoom"},"content":"    @Test","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"PyromancerBoom"},"content":"    void testInvalidFromTime() {","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"PyromancerBoom"},"content":"        assertThrows(BotException.class, () -\u003e {","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"PyromancerBoom"},"content":"            new TimeBlock(\"description\", \"invalid time\", \"1/1/2022 1300\");","lastModifiedDate":"2024-02-10"},{"lineNumber":28,"author":{"gitId":"PyromancerBoom"},"content":"        });","lastModifiedDate":"2024-02-10"},{"lineNumber":29,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":30,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":31,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"PyromancerBoom"},"content":"     * Test case for invalid to time input to the TimeBlock constructor","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"PyromancerBoom"},"content":"    @Test","lastModifiedDate":"2024-02-10"},{"lineNumber":35,"author":{"gitId":"PyromancerBoom"},"content":"    void testInvalidToTime() {","lastModifiedDate":"2024-02-10"},{"lineNumber":36,"author":{"gitId":"PyromancerBoom"},"content":"        assertThrows(BotException.class, () -\u003e {","lastModifiedDate":"2024-02-10"},{"lineNumber":37,"author":{"gitId":"PyromancerBoom"},"content":"            new TimeBlock(\"description\", \"1/1/2022 1200\", \"invalid time\");","lastModifiedDate":"2024-02-10"},{"lineNumber":38,"author":{"gitId":"PyromancerBoom"},"content":"        });","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":41,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"PyromancerBoom"},"content":"     * Test case for the toString method of TimeBlock","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"PyromancerBoom"},"content":"    @Test","lastModifiedDate":"2024-02-10"},{"lineNumber":45,"author":{"gitId":"PyromancerBoom"},"content":"    void testToString() throws BotException {","lastModifiedDate":"2024-02-10"},{"lineNumber":46,"author":{"gitId":"PyromancerBoom"},"content":"        TimeBlock timeBlock \u003d new TimeBlock(\"description\", \"1/1/2022 1200\", \"1/1/2022 1300\");","lastModifiedDate":"2024-02-10"},{"lineNumber":47,"author":{"gitId":"PyromancerBoom"},"content":"        String expected \u003d \"E |   | description | from: 1/1/2022 1200 to: 1/1/2022 1300\";","lastModifiedDate":"2024-02-10"},{"lineNumber":48,"author":{"gitId":"PyromancerBoom"},"content":"        System.out.println(timeBlock.toString());","lastModifiedDate":"2024-02-10"},{"lineNumber":49,"author":{"gitId":"PyromancerBoom"},"content":"        boolean isSame \u003d timeBlock.toString().equals(expected);","lastModifiedDate":"2024-02-10"},{"lineNumber":50,"author":{"gitId":"PyromancerBoom"},"content":"        assertTrue(isSame);","lastModifiedDate":"2024-02-10"},{"lineNumber":51,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":52,"author":{"gitId":"PyromancerBoom"},"content":"}","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"PyromancerBoom":52}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"PyromancerBoom"},"content":"list","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"PyromancerBoom"},"content":"some random and wrong command /for testing. the / was intentional.","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"PyromancerBoom"},"content":"todo become a sentient AI","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"PyromancerBoom"},"content":"deadline make a time machine /by tomorrow 3pm","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"PyromancerBoom"},"content":"event attend weekly meeting with chatGPT /from Mon 2pm /to Wed 4pm","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"PyromancerBoom"},"content":"mark 2","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"PyromancerBoom"},"content":"mark 3","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"PyromancerBoom"},"content":"unmark 2","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"PyromancerBoom"},"content":"mark 1","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"PyromancerBoom"},"content":"list","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"PyromancerBoom"},"content":"bye","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"PyromancerBoom":11}}]
