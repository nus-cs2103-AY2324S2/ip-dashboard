[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"yuhinarita"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"yuhinarita"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"yuhinarita"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"yuhinarita"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"yuhinarita"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"yuhinarita"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"yuhinarita"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"yuhinarita"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"yuhinarita"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"yuhinarita"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":27,"author":{"gitId":"yuhinarita"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"yuhinarita"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"yuhinarita"},"content":"    mainClass.set(\"chipchat.Launcher\")","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"yuhinarita"},"content":"    archiveBaseName \u003d \"chipchat\"","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yuhinarita":17,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"# ChipChat User Guide","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"Welcome to Chipchat user guide! ChipChat is a **chatbot to assist users in managing their tasks**. As of now it supports three task types: 1) ToDo 2) Deadline 3) Event. ","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":"## Add Tasks","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"Add tasks of three types.","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":"Format: `\u003cTASK TYPE\u003e \u003cTASK NAME\u003e`","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":"### Add ToDo","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":"Add todos.","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"Format: `todo \u003cTASK NAME\u003e`","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"Usage: `todo revise maths`","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"yuhinarita"},"content":"Expected Output: ","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"yuhinarita":10,"-":6}},{"path":"src/main/data/storage.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"0. TODO /isDone false /description work /tag ","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"1. TODO /isDone false /description work /tag  #test","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"2. TODO /isDone false /description work /tag ","lastModifiedDate":"2024-02-20"}],"authorContributionMap":{"yuhinarita":3}},{"path":"src/main/java/chipchat/App.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"import java.util.List;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":"import chipchat.action.Action;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"import chipchat.exception.ChipchatException;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":"import chipchat.parser.Parser;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":"import chipchat.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":"import chipchat.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":"import chipchat.ui.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":" * Encapsulates the main program application.","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"yuhinarita"},"content":"public class App {","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"yuhinarita"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"yuhinarita"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"yuhinarita"},"content":"    private final Ui ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"yuhinarita"},"content":"    private final Stage stage;","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"yuhinarita"},"content":"     * Constructs the App. Retrieves saved data from storage at initialization.","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"yuhinarita"},"content":"    public App(Stage stage) {","lastModifiedDate":"2024-02-20"},{"lineNumber":26,"author":{"gitId":"yuhinarita"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"yuhinarita"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"yuhinarita"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"yuhinarita"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"yuhinarita"},"content":"        List\u003cAction\u003e actions \u003d storage.load();","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"yuhinarita"},"content":"        for (Action addTask : actions) {","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"yuhinarita"},"content":"            addTask.run(tasks, ui, null);","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"yuhinarita"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"yuhinarita"},"content":"        ui.clearBuffer();","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"yuhinarita"},"content":"     * Returns the welcome message.","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"yuhinarita"},"content":"     * @return the welcome message","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"yuhinarita"},"content":"    public String getGreetings() {","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"yuhinarita"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-02-18"},{"lineNumber":46,"author":{"gitId":"yuhinarita"},"content":"        return ui.getOutput();","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"yuhinarita"},"content":"     * Returns the app response.","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"yuhinarita"},"content":"     * @param userInput the user input to be handled","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"yuhinarita"},"content":"     * @return the response by the app","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"yuhinarita"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"yuhinarita"},"content":"        run(userInput);","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"yuhinarita"},"content":"        return ui.getOutput();","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"yuhinarita"},"content":"     * Runs the main program through a Read-Eval-Print loop.","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"yuhinarita"},"content":"    public void run(String userInput) {","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"yuhinarita"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"yuhinarita"},"content":"            Action action \u003d Parser.parseAction(userInput);","lastModifiedDate":"2024-02-18"},{"lineNumber":66,"author":{"gitId":"yuhinarita"},"content":"            action.run(tasks, ui, storage);","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"yuhinarita"},"content":"            if (action.isExit()) {","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"yuhinarita"},"content":"                closeApp();","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"yuhinarita"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"yuhinarita"},"content":"        } catch (ChipchatException exc) {","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"yuhinarita"},"content":"            ui.showErrMsg(exc);","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"yuhinarita"},"content":"    private void closeApp() {","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"yuhinarita"},"content":"        stage.close();","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"yuhinarita":78}},{"path":"src/main/java/chipchat/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"import chipchat.ui.Gui;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":"public class Launcher {","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"     * Starts the main program of the app.","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":"     * @param args system input arguments","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"yuhinarita"},"content":"        Application.launch(Gui.class, args);","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"yuhinarita":18}},{"path":"src/main/java/chipchat/action/Action.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat.action;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"import chipchat.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":"import chipchat.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":"import chipchat.ui.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":" * Represents an executable action that will perform operations relating to tasks.","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":"public abstract class Action {","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":"     * Executes the action.","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":"     * @param tasks task list to perform operations on","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"yuhinarita"},"content":"     * @param ui ui of application","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"yuhinarita"},"content":"     * @param storage storage of application","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"yuhinarita"},"content":"    public abstract void run(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"yuhinarita"},"content":"     * Returns whether this action will exit from the application or not","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"yuhinarita"},"content":"     * @return false","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"yuhinarita"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"yuhinarita"},"content":"        return false;","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"yuhinarita":29}},{"path":"src/main/java/chipchat/action/AddTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat.action;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":"import java.util.List;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"import chipchat.exception.ChipchatException;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":"import chipchat.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":"import chipchat.task.Deadline;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":"import chipchat.task.Event;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":"import chipchat.task.Task;","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"import chipchat.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"import chipchat.task.Todo;","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":"import chipchat.ui.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"yuhinarita"},"content":" * Represents an executable action that will add new tasks to a task list. Subclass of Action.","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"yuhinarita"},"content":"public class AddTask extends Action {","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"yuhinarita"},"content":"    private static final String SUCCESS_MSG \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"yuhinarita"},"content":"    private final Task task;","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"yuhinarita"},"content":"    private final CommandType taskType;","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"yuhinarita"},"content":"    private AddTask(Task task, CommandType taskType) {","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"yuhinarita"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"yuhinarita"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"yuhinarita"},"content":"     * Factory method to initialize this class with an instantiated Todo task.","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"yuhinarita"},"content":"     * @param description name/description of task","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"yuhinarita"},"content":"     * @param isDone completion status of task","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"yuhinarita"},"content":"     * @return action class that will add a Todo task when executed","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"yuhinarita"},"content":"    public static AddTask addTodo(String description, boolean isDone, List\u003cString\u003e tags) {","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"yuhinarita"},"content":"        return new AddTask(new Todo(description, isDone, tags), CommandType.TODO);","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"yuhinarita"},"content":"     * Factory method to initialize this class with an instantiated Deadline task.","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"yuhinarita"},"content":"     * @param description name/description of task","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"yuhinarita"},"content":"     * @param isDone completion status of task","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"yuhinarita"},"content":"     * @return action class that will add a deadline task when executed","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"yuhinarita"},"content":"    public static AddTask addDeadline(String description, boolean isDone, LocalDate dueBy, List\u003cString\u003e tags) {","lastModifiedDate":"2024-02-18"},{"lineNumber":47,"author":{"gitId":"yuhinarita"},"content":"        return new AddTask(new Deadline(description, isDone, dueBy, tags), CommandType.DEADLINE);","lastModifiedDate":"2024-02-17"},{"lineNumber":48,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"yuhinarita"},"content":"     * Factory method to initialize this class with an instantiated Event task.","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"yuhinarita"},"content":"     * @param description name/description of task","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"yuhinarita"},"content":"     * @param isDone completion status of task","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"yuhinarita"},"content":"     * @return action class that will add an Event task when executed","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"yuhinarita"},"content":"    public static AddTask addEvent(String description, boolean isDone, LocalDate dateFrom, LocalDate dateTo, List\u003cString\u003e tags) {","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"yuhinarita"},"content":"        return new AddTask(new Event(description, isDone, dateFrom, dateTo, tags), CommandType.EVENT);","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"yuhinarita"},"content":"     * Adds the pre-initialized task to the given task list and reflect this status through UI and Storage.","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"yuhinarita"},"content":"     * @param tasks task list to perform operations on","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"yuhinarita"},"content":"     * @param ui ui of application","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"yuhinarita"},"content":"     * @param storage storage of application","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"yuhinarita"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"yuhinarita"},"content":"    public void run(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"yuhinarita"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"yuhinarita"},"content":"            tasks.add(task);","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"yuhinarita"},"content":"            ui.showMsg(SUCCESS_MSG);","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"yuhinarita"},"content":"            ui.showMsg(this.task.toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"yuhinarita"},"content":"            if (storage !\u003d null) {","lastModifiedDate":"2024-02-18"},{"lineNumber":75,"author":{"gitId":"yuhinarita"},"content":"                storage.save(tasks);","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"yuhinarita"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":77,"author":{"gitId":"yuhinarita"},"content":"        } catch (ChipchatException exc) {","lastModifiedDate":"2024-02-14"},{"lineNumber":78,"author":{"gitId":"yuhinarita"},"content":"            ui.showErrMsg(exc);","lastModifiedDate":"2024-02-14"},{"lineNumber":79,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"yuhinarita":81}},{"path":"src/main/java/chipchat/action/Bye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat.action;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"import chipchat.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":"import chipchat.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":"import chipchat.ui.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":" * Represents an executable action that will exit this application when executed.","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":"public final class Bye extends Action {","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":"     * Simple constructor.","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":"    public Bye() {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"yuhinarita"},"content":"     * Performs the saving and UI outputs before exiting the application.","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"yuhinarita"},"content":"     * @param tasks task list to perform operations on","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"yuhinarita"},"content":"     * @param ui ui of application","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"yuhinarita"},"content":"     * @param storage storage of application","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"yuhinarita"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"yuhinarita"},"content":"    public void run(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"yuhinarita"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"yuhinarita"},"content":"     * Returns whether this action will exit from the application or not","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"yuhinarita"},"content":"     * @return true","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"yuhinarita"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"yuhinarita"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"yuhinarita"},"content":"        return true;","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"yuhinarita":39}},{"path":"src/main/java/chipchat/action/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat.action;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":" * Represents the types of commands/actions that users can instruct to the application","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"public enum CommandType {","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":"    BYE, LIST, DELETE, MARK, UNMARK, FIND, TODO, DEADLINE, EVENT;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"yuhinarita":8}},{"path":"src/main/java/chipchat/action/Delete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat.action;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"import chipchat.exception.ChipchatException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":"import chipchat.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":"import chipchat.task.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"import chipchat.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":"import chipchat.ui.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":" * Represents an executable action that will delete a task from the given task list.","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"public class Delete extends Action {","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":"    private final String SUCCESS_MSG \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"    private final int index;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"yuhinarita"},"content":"     * Initializes the task with the specific index.","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"yuhinarita"},"content":"     * @param index the index of a task in the list to be deleted","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"yuhinarita"},"content":"    public Delete(int index) {","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"yuhinarita"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"yuhinarita"},"content":"     * Deletes the task with pre-specified index from given task list.","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"yuhinarita"},"content":"     * @param tasks task list to perform operations on","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"yuhinarita"},"content":"     * @param ui ui of application","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"yuhinarita"},"content":"     * @param storage storage of application","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"yuhinarita"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"yuhinarita"},"content":"    public void run(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"yuhinarita"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"yuhinarita"},"content":"            Task removedTask \u003d tasks.delete(this.index);","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"yuhinarita"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"yuhinarita"},"content":"            ui.showMsg(SUCCESS_MSG);","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"yuhinarita"},"content":"            ui.showMsg(removedTask.toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"yuhinarita"},"content":"        } catch (ChipchatException exc) {","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"yuhinarita"},"content":"            ui.showErrMsg(exc);","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"yuhinarita":43}},{"path":"src/main/java/chipchat/action/Find.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat.action;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"import java.util.List;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":"import chipchat.exception.ChipchatException;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"import chipchat.storage.Storage;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":"import chipchat.task.Task;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":"import chipchat.task.TaskList;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":"import chipchat.ui.Ui;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":" * Represents an executable action that will find a matching task from a given task list","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"public class Find extends Action {","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":"    private final String SUCCESS_MSG \u003d \"Here are possible tasks that match your query:\";","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"yuhinarita"},"content":"    private final String query;","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"yuhinarita"},"content":"     * Initializes the action with the query string","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"yuhinarita"},"content":"     * @param query string to be queried based on","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"yuhinarita"},"content":"    public Find(String query) {","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"yuhinarita"},"content":"        this.query \u003d query;","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"yuhinarita"},"content":"     * Finds the task based on a query from a given task list.","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"yuhinarita"},"content":"     * @param tasks task list to perform operations on","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"yuhinarita"},"content":"     * @param ui ui of application","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"yuhinarita"},"content":"     * @param storage storage of application","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"yuhinarita"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"yuhinarita"},"content":"    public void run(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"yuhinarita"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"yuhinarita"},"content":"            List\u003cTask\u003e matches \u003d tasks.queryByString(this.query);","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"yuhinarita"},"content":"            StringBuilder taskList \u003d new StringBuilder(SUCCESS_MSG + \"\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"yuhinarita"},"content":"            for (int i \u003d 0; i \u003c matches.size(); i++) {","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"yuhinarita"},"content":"                taskList.append(String.format(\"%d. %s\\n\", i, matches.get(i)));","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"yuhinarita"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"yuhinarita"},"content":"            ui.showMsg(taskList.toString());","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"yuhinarita"},"content":"        } catch (ChipchatException exc) {","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"yuhinarita"},"content":"            ui.showErrMsg(exc);","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"yuhinarita":46}},{"path":"src/main/java/chipchat/action/ListTasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat.action;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"import chipchat.exception.ChipchatException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":"import chipchat.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":"import chipchat.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"import chipchat.ui.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":" * Represents an executable task that will print all tasks in a given task list.","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"public class ListTasks extends Action {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"    private final String SUCCESS_MSG \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":"     * Simple constructor.","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"yuhinarita"},"content":"    public ListTasks() {","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"yuhinarita"},"content":"     * Lists and prints all tasks from a given task list.","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"yuhinarita"},"content":"     * @param tasks task list to perform operations on","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"yuhinarita"},"content":"     * @param ui ui of application","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"yuhinarita"},"content":"     * @param storage storage of application","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"yuhinarita"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"yuhinarita"},"content":"    public void run(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"yuhinarita"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"yuhinarita"},"content":"            ui.showMsg(SUCCESS_MSG);","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"yuhinarita"},"content":"            ui.showMsg(tasks.toString());","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"yuhinarita"},"content":"        } catch (ChipchatException exc) {","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"yuhinarita"},"content":"            ui.showErrMsg(exc);","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"yuhinarita":36}},{"path":"src/main/java/chipchat/action/Mark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat.action;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"import chipchat.exception.ChipchatException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":"import chipchat.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":"import chipchat.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"import chipchat.ui.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":" * Represents an executable action that will perform the mark operation on a given task list.","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"public class Mark extends Action {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"    private final String SUCCESS_MSG \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":"    private final int index;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"yuhinarita"},"content":"     * Initializes the task with the specific index.","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"yuhinarita"},"content":"     * @param index the index of a task in the list to be marked as done","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"yuhinarita"},"content":"    public Mark(int index) {","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"yuhinarita"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"yuhinarita"},"content":"     * Marks the task with pre-specified index from given task list as done.","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"yuhinarita"},"content":"     * @param tasks task list to perform operations on","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"yuhinarita"},"content":"     * @param ui ui of application","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"yuhinarita"},"content":"     * @param storage storage of application","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"yuhinarita"},"content":"    public void run(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"yuhinarita"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"yuhinarita"},"content":"            tasks.mark(this.index);","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"yuhinarita"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"yuhinarita"},"content":"            ui.showMsg(SUCCESS_MSG);","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"yuhinarita"},"content":"            ui.showMsg(tasks.printTask(this.index));","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"yuhinarita"},"content":"        } catch (ChipchatException exc) {","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"yuhinarita"},"content":"            ui.showErrMsg(exc);","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"yuhinarita":41}},{"path":"src/main/java/chipchat/action/Unmark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat.action;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"import chipchat.exception.ChipchatException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":"import chipchat.storage.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":"import chipchat.task.TaskList;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"import chipchat.ui.Ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":" * Represents an executable action that will perform the unmark operation on a given task list.","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"public class Unmark extends Action {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"    private final String SUCCESS_MSG \u003d \"Nice! I\u0027ve unmarked this task as not done:\";","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":"    private final int index;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"yuhinarita"},"content":"     * Initializes the task with the specific index.","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"yuhinarita"},"content":"     * @param index the index of a task in the list to be unmarked as not done","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"yuhinarita"},"content":"    public Unmark(int index) {","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"yuhinarita"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"yuhinarita"},"content":"     * Unmarks the task with pre-specified index from given task list as not done.","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"yuhinarita"},"content":"     * @param tasks task list to perform operations on","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"yuhinarita"},"content":"     * @param ui ui of application","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"yuhinarita"},"content":"     * @param storage storage of application","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"yuhinarita"},"content":"    public void run(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"yuhinarita"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"yuhinarita"},"content":"            tasks.unmark(this.index);","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"yuhinarita"},"content":"            storage.save(tasks);","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"yuhinarita"},"content":"            ui.showMsg(SUCCESS_MSG);","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"yuhinarita"},"content":"            ui.showMsg(tasks.printTask(this.index));","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"yuhinarita"},"content":"        } catch (ChipchatException exc) {","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"yuhinarita"},"content":"            ui.showErrMsg(exc);","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"yuhinarita":41}},{"path":"src/main/java/chipchat/exception/ArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat.exception;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":" * Represents exceptions related to input arguments. Subclass of ChipchatException.","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"public class ArgumentException extends ChipchatException {","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":"     * Initializes the exception.","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":"     * @param msg the error message","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"    public ArgumentException(String msg) {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":"        super(msg);","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"yuhinarita":15}},{"path":"src/main/java/chipchat/exception/ChipchatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat.exception;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":" * Represents runtime exceptions related to Chipchat. Subclass of RuntimeException.","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"public class ChipchatException extends RuntimeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":"     * Initializes the exception.","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":"     * @param msg the error message","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"    public ChipchatException(String msg) {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":"        super(msg);","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"yuhinarita":15}},{"path":"src/main/java/chipchat/exception/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat.exception;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":" * Represents exceptions arising from invalid input arguments. Subclass of ArgumentException.","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"public class InvalidArgumentException extends ArgumentException {","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":"     * Initializes the exception.","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":"     * @param msg the error message","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"    public InvalidArgumentException(String msg) {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":"        super(msg);","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"yuhinarita":15}},{"path":"src/main/java/chipchat/exception/MissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat.exception;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":" * Represents exceptions arising from missing arguments in the input. Subclass of ArgumentException.","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"public class MissingArgumentException extends ArgumentException {","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":"     * Initializes the exception object.","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":"     * @param msg the error message","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"    public MissingArgumentException(String msg) {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":"        super(msg);","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"yuhinarita":15}},{"path":"src/main/java/chipchat/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat.parser;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"import java.util.EnumMap;","lastModifiedDate":"2024-02-18"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":"import java.util.List;","lastModifiedDate":"2024-02-17"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":"import chipchat.action.Action;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"import chipchat.action.AddTask;","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"import chipchat.action.Bye;","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":"import chipchat.action.CommandType;","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"import chipchat.action.Delete;","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":"import chipchat.action.Find;","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"yuhinarita"},"content":"import chipchat.action.ListTasks;","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"yuhinarita"},"content":"import chipchat.action.Mark;","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"yuhinarita"},"content":"import chipchat.action.Unmark;","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"yuhinarita"},"content":"import chipchat.exception.ArgumentException;","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"yuhinarita"},"content":"import chipchat.exception.InvalidArgumentException;","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"yuhinarita"},"content":"import chipchat.exception.MissingArgumentException;","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"yuhinarita"},"content":" * Represents a utility class used to parse user inputs and data inputs given to the main Chipchat application.","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"yuhinarita"},"content":"public class Parser {","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"yuhinarita"},"content":"    private enum ArgumentType {","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"yuhinarita"},"content":"        DESCRIPTION, ISDONE, BY, FROM, TO, TAG;","lastModifiedDate":"2024-02-18"},{"lineNumber":29,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":30,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":31,"author":{"gitId":"yuhinarita"},"content":"    private static EnumMap\u003cArgumentType, String\u003e argsMap \u003d new EnumMap\u003c\u003e(ArgumentType.class);","lastModifiedDate":"2024-02-18"},{"lineNumber":32,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"yuhinarita"},"content":"    // Initialize argsMap such that is_done attribute is false by default","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"yuhinarita"},"content":"    static {","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"yuhinarita"},"content":"        argsMap.put(ArgumentType.ISDONE, \"false\");","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":38,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"yuhinarita"},"content":"     * Returns an action parsed from the user input.","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"yuhinarita"},"content":"     * @param userInput user input given from standard input","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"yuhinarita"},"content":"     * @return an action that can be executed on-demand","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"yuhinarita"},"content":"     * @throws ArgumentException","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"yuhinarita"},"content":"    public static Action parseAction(String userInput) throws ArgumentException {","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"yuhinarita"},"content":"        String[] tokens \u003d userInput.trim().split(\" \");","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"yuhinarita"},"content":"        if (tokens.length \u003d\u003d 0) {","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"yuhinarita"},"content":"            throw new MissingArgumentException(\"Error: Please enter something\");","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"yuhinarita"},"content":"        CommandType command \u003d parseCommand(tokens[0]);","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"yuhinarita"},"content":"        switch(command) {","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"yuhinarita"},"content":"        case BYE:","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"yuhinarita"},"content":"            return new Bye();","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"yuhinarita"},"content":"        case LIST:","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"yuhinarita"},"content":"            return new ListTasks();","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"yuhinarita"},"content":"        case FIND:","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"yuhinarita"},"content":"            return parseFindAction(command, tokens);","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"yuhinarita"},"content":"        case DELETE:","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"yuhinarita"},"content":"        case MARK:","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"yuhinarita"},"content":"        case UNMARK:","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"yuhinarita"},"content":"            return parseEditAction(command, tokens);","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"yuhinarita"},"content":"        case TODO:","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"yuhinarita"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"yuhinarita"},"content":"        case EVENT:","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"yuhinarita"},"content":"            return parseTask(command, tokens);","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"yuhinarita"},"content":"        default:","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"yuhinarita"},"content":"            // Should not reach default branch","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"yuhinarita"},"content":"            throw new ArgumentException(\"Reached default branch of parseAction() due to unrecognized command type\");","lastModifiedDate":"2024-02-17"},{"lineNumber":70,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"yuhinarita"},"content":"     * A simple data parser that uses yyyy-MM-dd format.","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"yuhinarita"},"content":"     * @param date a string representing a date","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"yuhinarita"},"content":"     * @return parsed date","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"yuhinarita"},"content":"    public static LocalDate parseDate(String date) {","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"yuhinarita"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ISO_LOCAL_DATE;","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"yuhinarita"},"content":"        return LocalDate.parse(date, formatter);","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"yuhinarita"},"content":"     * Returns a task parsed from saved data.","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"yuhinarita"},"content":"     * @param line the data-format string retrieved from storage file","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"yuhinarita"},"content":"     * @return parsed action that has been initialized based on stored data","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"yuhinarita"},"content":"     * @throws ArgumentException","lastModifiedDate":"2024-02-22"},{"lineNumber":90,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":91,"author":{"gitId":"yuhinarita"},"content":"    public static AddTask parseLoadedTask(String line) throws ArgumentException {","lastModifiedDate":"2024-02-22"},{"lineNumber":92,"author":{"gitId":"yuhinarita"},"content":"        String[] tokens \u003d line.split(\" \");","lastModifiedDate":"2024-02-22"},{"lineNumber":93,"author":{"gitId":"yuhinarita"},"content":"        CommandType taskType \u003d parseCommand(tokens[1]);","lastModifiedDate":"2024-02-22"},{"lineNumber":94,"author":{"gitId":"yuhinarita"},"content":"        return parseTask(taskType, Arrays.copyOfRange(tokens, 1, tokens.length));","lastModifiedDate":"2024-02-22"},{"lineNumber":95,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":96,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":97,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":98,"author":{"gitId":"yuhinarita"},"content":"    private static CommandType parseCommand(String command) throws InvalidArgumentException {","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"yuhinarita"},"content":"        assert(!command.isEmpty());","lastModifiedDate":"2024-02-16"},{"lineNumber":100,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":101,"author":{"gitId":"yuhinarita"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"yuhinarita"},"content":"            return CommandType.valueOf(command.toUpperCase());","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"yuhinarita"},"content":"        } catch (IllegalArgumentException exc) {","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"yuhinarita"},"content":"            throw new InvalidArgumentException(\"Error: Sorry. I don\u0027t know what that means\");","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":108,"author":{"gitId":"yuhinarita"},"content":"    private static int parseIndex(String index) throws InvalidArgumentException {","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"yuhinarita"},"content":"        assert(!index.isEmpty());","lastModifiedDate":"2024-02-16"},{"lineNumber":110,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":111,"author":{"gitId":"yuhinarita"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"yuhinarita"},"content":"            return Integer.parseInt(index);","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"yuhinarita"},"content":"        } catch (NumberFormatException exc) {","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"yuhinarita"},"content":"            throw new InvalidArgumentException(","lastModifiedDate":"2024-02-13"},{"lineNumber":115,"author":{"gitId":"yuhinarita"},"content":"                    \"Error: Please enter the index (number) of the task you would like to edit\");","lastModifiedDate":"2024-02-13"},{"lineNumber":116,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":117,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":118,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":119,"author":{"gitId":"yuhinarita"},"content":"    private static ArgumentType parseArgumentType(String arg) throws InvalidArgumentException {","lastModifiedDate":"2024-02-18"},{"lineNumber":120,"author":{"gitId":"yuhinarita"},"content":"        assert(!arg.isEmpty());","lastModifiedDate":"2024-02-18"},{"lineNumber":121,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":122,"author":{"gitId":"yuhinarita"},"content":"        try {","lastModifiedDate":"2024-02-18"},{"lineNumber":123,"author":{"gitId":"yuhinarita"},"content":"            return ArgumentType.valueOf(arg.toUpperCase());","lastModifiedDate":"2024-02-18"},{"lineNumber":124,"author":{"gitId":"yuhinarita"},"content":"        } catch (IllegalArgumentException exc) {","lastModifiedDate":"2024-02-18"},{"lineNumber":125,"author":{"gitId":"yuhinarita"},"content":"            throw new InvalidArgumentException(\"Error: Sorry. I don\u0027t know what that means\");","lastModifiedDate":"2024-02-18"},{"lineNumber":126,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":127,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":128,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":129,"author":{"gitId":"yuhinarita"},"content":"    private static void readArguments(String[] tokens) {","lastModifiedDate":"2024-02-18"},{"lineNumber":130,"author":{"gitId":"yuhinarita"},"content":"        StringBuilder currArg \u003d new StringBuilder();","lastModifiedDate":"2024-02-18"},{"lineNumber":131,"author":{"gitId":"yuhinarita"},"content":"        ArgumentType argType \u003d ArgumentType.DESCRIPTION;","lastModifiedDate":"2024-02-18"},{"lineNumber":132,"author":{"gitId":"yuhinarita"},"content":"        for (String token : tokens) {","lastModifiedDate":"2024-02-18"},{"lineNumber":133,"author":{"gitId":"yuhinarita"},"content":"            if (token.startsWith(\"/\")) {","lastModifiedDate":"2024-02-18"},{"lineNumber":134,"author":{"gitId":"yuhinarita"},"content":"                if (currArg.length() \u003e 0) {","lastModifiedDate":"2024-02-18"},{"lineNumber":135,"author":{"gitId":"yuhinarita"},"content":"                    argsMap.put(argType, currArg.toString().trim());","lastModifiedDate":"2024-02-18"},{"lineNumber":136,"author":{"gitId":"yuhinarita"},"content":"                    currArg.setLength(0);","lastModifiedDate":"2024-02-18"},{"lineNumber":137,"author":{"gitId":"yuhinarita"},"content":"                }","lastModifiedDate":"2024-02-18"},{"lineNumber":138,"author":{"gitId":"yuhinarita"},"content":"                String[] args \u003d token.trim().split(\"/\");","lastModifiedDate":"2024-02-18"},{"lineNumber":139,"author":{"gitId":"yuhinarita"},"content":"                String arg \u003d args[1].substring(0).toUpperCase();","lastModifiedDate":"2024-02-18"},{"lineNumber":140,"author":{"gitId":"yuhinarita"},"content":"                argType \u003d parseArgumentType(arg);","lastModifiedDate":"2024-02-18"},{"lineNumber":141,"author":{"gitId":"yuhinarita"},"content":"            } else {","lastModifiedDate":"2024-02-18"},{"lineNumber":142,"author":{"gitId":"yuhinarita"},"content":"                currArg.append(token)","lastModifiedDate":"2024-02-18"},{"lineNumber":143,"author":{"gitId":"yuhinarita"},"content":"                        .append(\" \");","lastModifiedDate":"2024-02-18"},{"lineNumber":144,"author":{"gitId":"yuhinarita"},"content":"            }","lastModifiedDate":"2024-02-18"},{"lineNumber":145,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":146,"author":{"gitId":"yuhinarita"},"content":"        // Add remaining currArg to args list","lastModifiedDate":"2024-02-18"},{"lineNumber":147,"author":{"gitId":"yuhinarita"},"content":"        argsMap.put(argType, currArg.toString().trim());","lastModifiedDate":"2024-02-18"},{"lineNumber":148,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":149,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":150,"author":{"gitId":"yuhinarita"},"content":"    private static List\u003cString\u003e parseTags(String tagString) {","lastModifiedDate":"2024-02-17"},{"lineNumber":151,"author":{"gitId":"yuhinarita"},"content":"        if (tagString \u003d\u003d null) {","lastModifiedDate":"2024-02-18"},{"lineNumber":152,"author":{"gitId":"yuhinarita"},"content":"            return List.of();","lastModifiedDate":"2024-02-18"},{"lineNumber":153,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-18"},{"lineNumber":154,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":155,"author":{"gitId":"yuhinarita"},"content":"        String[] tags \u003d tagString.split(\"#\");","lastModifiedDate":"2024-02-17"},{"lineNumber":156,"author":{"gitId":"yuhinarita"},"content":"        return Arrays.asList(tags)","lastModifiedDate":"2024-02-17"},{"lineNumber":157,"author":{"gitId":"yuhinarita"},"content":"                .stream()","lastModifiedDate":"2024-02-17"},{"lineNumber":158,"author":{"gitId":"yuhinarita"},"content":"                .map(tag -\u003e tag.trim())","lastModifiedDate":"2024-02-17"},{"lineNumber":159,"author":{"gitId":"yuhinarita"},"content":"                .filter(tag -\u003e tag.length() \u003e 0)","lastModifiedDate":"2024-02-17"},{"lineNumber":160,"author":{"gitId":"yuhinarita"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-02-17"},{"lineNumber":161,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":162,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":163,"author":{"gitId":"yuhinarita"},"content":"    private static void resetArgsMap() {","lastModifiedDate":"2024-02-20"},{"lineNumber":164,"author":{"gitId":"yuhinarita"},"content":"        argsMap.clear();","lastModifiedDate":"2024-02-20"},{"lineNumber":165,"author":{"gitId":"yuhinarita"},"content":"        argsMap \u003d new EnumMap\u003c\u003e(ArgumentType.class);","lastModifiedDate":"2024-02-20"},{"lineNumber":166,"author":{"gitId":"yuhinarita"},"content":"        argsMap.put(ArgumentType.ISDONE, \"false\");","lastModifiedDate":"2024-02-20"},{"lineNumber":167,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":168,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":169,"author":{"gitId":"yuhinarita"},"content":"    private static Action parseFindAction(CommandType command, String[] tokens) {","lastModifiedDate":"2024-02-11"},{"lineNumber":170,"author":{"gitId":"yuhinarita"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2024-02-11"},{"lineNumber":171,"author":{"gitId":"yuhinarita"},"content":"            throw new MissingArgumentException(","lastModifiedDate":"2024-02-13"},{"lineNumber":172,"author":{"gitId":"yuhinarita"},"content":"                    \"Error: Missing query\\nPlease enter the query (text) of the task to find\");","lastModifiedDate":"2024-02-13"},{"lineNumber":173,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":174,"author":{"gitId":"yuhinarita"},"content":"        return new Find(tokens[1]);","lastModifiedDate":"2024-02-11"},{"lineNumber":175,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":176,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":177,"author":{"gitId":"yuhinarita"},"content":"    private static Action parseEditAction(CommandType command, String[] tokens) {","lastModifiedDate":"2024-02-07"},{"lineNumber":178,"author":{"gitId":"yuhinarita"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2024-02-07"},{"lineNumber":179,"author":{"gitId":"yuhinarita"},"content":"            throw new MissingArgumentException(","lastModifiedDate":"2024-02-13"},{"lineNumber":180,"author":{"gitId":"yuhinarita"},"content":"                    \"Error: Missing Index\\nPlease enter the index (number) of the task to edit\");","lastModifiedDate":"2024-02-13"},{"lineNumber":181,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":182,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":183,"author":{"gitId":"yuhinarita"},"content":"        int index \u003d parseIndex(tokens[1]);","lastModifiedDate":"2024-02-07"},{"lineNumber":184,"author":{"gitId":"yuhinarita"},"content":"        switch(command) {","lastModifiedDate":"2024-02-07"},{"lineNumber":185,"author":{"gitId":"yuhinarita"},"content":"        case DELETE:","lastModifiedDate":"2024-02-07"},{"lineNumber":186,"author":{"gitId":"yuhinarita"},"content":"            return new Delete(index);","lastModifiedDate":"2024-02-06"},{"lineNumber":187,"author":{"gitId":"yuhinarita"},"content":"        case MARK:","lastModifiedDate":"2024-02-06"},{"lineNumber":188,"author":{"gitId":"yuhinarita"},"content":"            return new Mark(index);","lastModifiedDate":"2024-02-06"},{"lineNumber":189,"author":{"gitId":"yuhinarita"},"content":"        case UNMARK:","lastModifiedDate":"2024-02-06"},{"lineNumber":190,"author":{"gitId":"yuhinarita"},"content":"            return new Unmark(index);","lastModifiedDate":"2024-02-06"},{"lineNumber":191,"author":{"gitId":"yuhinarita"},"content":"        default:","lastModifiedDate":"2024-02-13"},{"lineNumber":192,"author":{"gitId":"yuhinarita"},"content":"            // Should not reach default branch","lastModifiedDate":"2024-02-17"},{"lineNumber":193,"author":{"gitId":"yuhinarita"},"content":"            throw new ArgumentException(\"Reached default branch of parseEditAction() due to unrecognized command type\");","lastModifiedDate":"2024-02-17"},{"lineNumber":194,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":195,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":196,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":197,"author":{"gitId":"yuhinarita"},"content":"    private static AddTask parseTask(CommandType command, String[] tokens) {","lastModifiedDate":"2024-02-18"},{"lineNumber":198,"author":{"gitId":"yuhinarita"},"content":"        if (tokens.length \u003c 2) {","lastModifiedDate":"2024-02-07"},{"lineNumber":199,"author":{"gitId":"yuhinarita"},"content":"            throw new MissingArgumentException(","lastModifiedDate":"2024-02-13"},{"lineNumber":200,"author":{"gitId":"yuhinarita"},"content":"                    \"Error: Missing description\\nPlease enter the description of the task to add\");","lastModifiedDate":"2024-02-13"},{"lineNumber":201,"author":{"gitId":"yuhinarita"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":202,"author":{"gitId":"yuhinarita"},"content":"            tokens \u003d Arrays.copyOfRange(tokens, 1, tokens.length);","lastModifiedDate":"2024-02-07"},{"lineNumber":203,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":204,"author":{"gitId":"yuhinarita"},"content":"        readArguments(tokens);","lastModifiedDate":"2024-02-18"},{"lineNumber":205,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":206,"author":{"gitId":"yuhinarita"},"content":"        String description \u003d argsMap.get(ArgumentType.DESCRIPTION);","lastModifiedDate":"2024-02-18"},{"lineNumber":207,"author":{"gitId":"yuhinarita"},"content":"        boolean isDone \u003d argsMap.get(ArgumentType.ISDONE).equals(\"true\");","lastModifiedDate":"2024-02-18"},{"lineNumber":208,"author":{"gitId":"yuhinarita"},"content":"        List\u003cString\u003e tags \u003d parseTags(argsMap.get(ArgumentType.TAG));","lastModifiedDate":"2024-02-18"},{"lineNumber":209,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":210,"author":{"gitId":"yuhinarita"},"content":"        AddTask addTaskAction \u003d null;","lastModifiedDate":"2024-02-20"},{"lineNumber":211,"author":{"gitId":"yuhinarita"},"content":"        switch(command) {","lastModifiedDate":"2024-02-06"},{"lineNumber":212,"author":{"gitId":"yuhinarita"},"content":"        case TODO:","lastModifiedDate":"2024-02-06"},{"lineNumber":213,"author":{"gitId":"yuhinarita"},"content":"            addTaskAction \u003d AddTask.addTodo(description, isDone, tags);","lastModifiedDate":"2024-02-20"},{"lineNumber":214,"author":{"gitId":"yuhinarita"},"content":"            break;","lastModifiedDate":"2024-02-20"},{"lineNumber":215,"author":{"gitId":"yuhinarita"},"content":"        case DEADLINE:","lastModifiedDate":"2024-02-06"},{"lineNumber":216,"author":{"gitId":"yuhinarita"},"content":"            LocalDate dueBy \u003d parseDate(argsMap.get(ArgumentType.BY));","lastModifiedDate":"2024-02-18"},{"lineNumber":217,"author":{"gitId":"yuhinarita"},"content":"            addTaskAction \u003d AddTask.addDeadline(description, isDone, dueBy, tags);","lastModifiedDate":"2024-02-20"},{"lineNumber":218,"author":{"gitId":"yuhinarita"},"content":"            break;","lastModifiedDate":"2024-02-20"},{"lineNumber":219,"author":{"gitId":"yuhinarita"},"content":"        case EVENT:","lastModifiedDate":"2024-02-06"},{"lineNumber":220,"author":{"gitId":"yuhinarita"},"content":"            LocalDate dateFrom \u003d parseDate(argsMap.get(ArgumentType.FROM));","lastModifiedDate":"2024-02-18"},{"lineNumber":221,"author":{"gitId":"yuhinarita"},"content":"            LocalDate dateTo \u003d parseDate(argsMap.get(ArgumentType.TO));","lastModifiedDate":"2024-02-18"},{"lineNumber":222,"author":{"gitId":"yuhinarita"},"content":"            addTaskAction \u003d AddTask.addEvent(description, isDone, dateFrom, dateTo, tags);","lastModifiedDate":"2024-02-20"},{"lineNumber":223,"author":{"gitId":"yuhinarita"},"content":"            break;","lastModifiedDate":"2024-02-20"},{"lineNumber":224,"author":{"gitId":"yuhinarita"},"content":"        default:","lastModifiedDate":"2024-02-13"},{"lineNumber":225,"author":{"gitId":"yuhinarita"},"content":"            throw new ArgumentException(\"Reached default branch of parseTask() due to unrecognized command type\");","lastModifiedDate":"2024-02-17"},{"lineNumber":226,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":227,"author":{"gitId":"yuhinarita"},"content":"        resetArgsMap();","lastModifiedDate":"2024-02-20"},{"lineNumber":228,"author":{"gitId":"yuhinarita"},"content":"        return addTaskAction;","lastModifiedDate":"2024-02-20"},{"lineNumber":229,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":230,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"yuhinarita":230}},{"path":"src/main/java/chipchat/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat.storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":"import chipchat.action.Action;","lastModifiedDate":"2024-02-18"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"import chipchat.parser.Parser;","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":"import chipchat.task.Task;","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"yuhinarita"},"content":"import chipchat.task.TaskList;","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"yuhinarita"},"content":" * Represents the storage for Chipchat, used to read/write task data to storage files.","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"yuhinarita"},"content":"public class Storage {","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"yuhinarita"},"content":"    private static final String STORAGE_PATH \u003d \"/src/main/data/storage.txt\";","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"yuhinarita"},"content":"    private final Path filePath;","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"yuhinarita"},"content":"     * Initializes the storage if no file path is given.","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"yuhinarita"},"content":"     * The following file path will be used:","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"yuhinarita"},"content":"     * path to top-level working directory + \"/src/main/data/storage.txt\"","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"yuhinarita"},"content":"    public Storage() {","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"yuhinarita"},"content":"        this.filePath \u003d createFilePath(System.getProperty(\"user.dir\"), STORAGE_PATH);","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"yuhinarita"},"content":"     * Initializes the storage using the given file path","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"yuhinarita"},"content":"     * @param filePath file path of where the storage file will be created and stored at.","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"yuhinarita"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"yuhinarita"},"content":"        this.filePath \u003d Paths.get(filePath);","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"yuhinarita"},"content":"    private static Path createFilePath(String pathToProjectRoot, String filePathFromProjectRoot) {","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"yuhinarita"},"content":"        String absPath \u003d pathToProjectRoot + filePathFromProjectRoot;","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"yuhinarita"},"content":"        String[] paths \u003d absPath.split(\"/\");","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"yuhinarita"},"content":"        return Paths.get(paths[0], Arrays.copyOfRange(paths, 1, paths.length));","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"yuhinarita"},"content":"     * Saves task data from a given task list to the pre-specified file path.","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"yuhinarita"},"content":"     * @param tasks task list to retrieve parsable data string of tasks from","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"yuhinarita"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"yuhinarita"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"yuhinarita"},"content":"            if (Files.notExists(this.filePath)) {","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"yuhinarita"},"content":"                Files.createFile(this.filePath);","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"yuhinarita"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"yuhinarita"},"content":"        } catch (IOException x) {","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"yuhinarita"},"content":"            System.err.format(\"File existence check, IOException: %s\\n\", x);","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"yuhinarita"},"content":"        try (BufferedWriter writer \u003d Files.newBufferedWriter(filePath, StandardCharsets.UTF_8)) {","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"yuhinarita"},"content":"            writer.write(tasks.dataString());","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"yuhinarita"},"content":"        } catch (IOException x) {","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"yuhinarita"},"content":"            System.err.format(\"File write, IOException: %s\\n\", x);","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"yuhinarita"},"content":"     * Loads task data from storage file at pre-specified file path.","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"yuhinarita"},"content":"     * @return an array list of tasks that has been initialized with loaded data","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"yuhinarita"},"content":"    public ArrayList\u003cAction\u003e load() {","lastModifiedDate":"2024-02-18"},{"lineNumber":76,"author":{"gitId":"yuhinarita"},"content":"        if (Files.notExists(this.filePath)) {","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"yuhinarita"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"yuhinarita"},"content":"        try (BufferedReader reader \u003d Files.newBufferedReader(this.filePath, StandardCharsets.UTF_8)) {","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"yuhinarita"},"content":"            ArrayList\u003cAction\u003e actions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-18"},{"lineNumber":82,"author":{"gitId":"yuhinarita"},"content":"            String line \u003d null;","lastModifiedDate":"2024-02-06"},{"lineNumber":83,"author":{"gitId":"yuhinarita"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-06"},{"lineNumber":84,"author":{"gitId":"yuhinarita"},"content":"                Action addTask \u003d Parser.parseLoadedTask(line);","lastModifiedDate":"2024-02-18"},{"lineNumber":85,"author":{"gitId":"yuhinarita"},"content":"                actions.add(addTask);","lastModifiedDate":"2024-02-18"},{"lineNumber":86,"author":{"gitId":"yuhinarita"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"yuhinarita"},"content":"            return actions;","lastModifiedDate":"2024-02-18"},{"lineNumber":88,"author":{"gitId":"yuhinarita"},"content":"        } catch (IOException x) {","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"yuhinarita"},"content":"            System.err.format(\"IOException: %s\\n\", x);","lastModifiedDate":"2024-02-06"},{"lineNumber":90,"author":{"gitId":"yuhinarita"},"content":"            return null;","lastModifiedDate":"2024-02-06"},{"lineNumber":91,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":92,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":93,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"yuhinarita":93}},{"path":"src/main/java/chipchat/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":"import java.util.List;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"import chipchat.action.CommandType;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":" * Represents a type of task with a deadline. Subclass of Task.","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"    private final LocalDate dueBy;","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":"     * Constructor of Deadline that takes in a date.","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"yuhinarita"},"content":"     * @param description name/description of the task","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"yuhinarita"},"content":"     * @param isDone completion status of the task","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"yuhinarita"},"content":"     * @param dueBy due date of the task","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"yuhinarita"},"content":"    public Deadline(String description, boolean isDone, LocalDate dueBy, List\u003cString\u003e tags) {","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"yuhinarita"},"content":"        super(description, isDone, tags);","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"yuhinarita"},"content":"        this.dueBy \u003d dueBy;","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"yuhinarita"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"yuhinarita"},"content":"     * @return a string representation of the task","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"yuhinarita"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"yuhinarita"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"yuhinarita"},"content":"        return String.format(\"[D]%s (by: %s) %s\", super.toString(), this.dueBy, super.printTags());","lastModifiedDate":"2024-02-17"},{"lineNumber":34,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"yuhinarita"},"content":"     * Returns the data-format string of the task. For Chipchat-specific storage purposes.","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"yuhinarita"},"content":"     * @return a string representation of the task in a parsable format","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"yuhinarita"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"yuhinarita"},"content":"    public String dataString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"yuhinarita"},"content":"        return String.format(\"%s /isDone %s /by %s\", CommandType.DEADLINE, super.dataString(), this.dueBy);","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"yuhinarita":45}},{"path":"src/main/java/chipchat/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":"import java.util.List;","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"import chipchat.action.CommandType;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":" * Represents a type of task that is an event. Subclass of task.","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"    private final LocalDate dateFrom;","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":"    private final LocalDate dateTo;","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"yuhinarita"},"content":"     * Constructor of Event. Takes in the starting date and ending date.","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"yuhinarita"},"content":"     * @param description name/description of the task","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"yuhinarita"},"content":"     * @param isDone completion status of the task","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"yuhinarita"},"content":"     * @param dateFrom starting date","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"yuhinarita"},"content":"     * @param dateTo ending date","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"yuhinarita"},"content":"    public Event(String description, boolean isDone, LocalDate dateFrom, LocalDate dateTo, List\u003cString\u003e tags) {","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"yuhinarita"},"content":"        super(description, isDone, tags);","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"yuhinarita"},"content":"        this.dateFrom \u003d dateFrom;","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"yuhinarita"},"content":"        this.dateTo \u003d dateTo;","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"yuhinarita"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"yuhinarita"},"content":"     * @return a string representation of the task","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"yuhinarita"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"yuhinarita"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"yuhinarita"},"content":"        return String.format(\"[E]%s (from: %s to: %s) %s\",","lastModifiedDate":"2024-02-17"},{"lineNumber":37,"author":{"gitId":"yuhinarita"},"content":"                super.toString(), this.dateFrom, this.dateTo, super.printTags());","lastModifiedDate":"2024-02-17"},{"lineNumber":38,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"yuhinarita"},"content":"     * Returns the data-format string of the task. For Chipchat-specific storage purposes.","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"yuhinarita"},"content":"     * @return a string representation of the task in a parsable format","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"yuhinarita"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"yuhinarita"},"content":"    public String dataString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"yuhinarita"},"content":"        return String.format(\"%s /isDone %s /from %s /to %s\",","lastModifiedDate":"2024-02-18"},{"lineNumber":48,"author":{"gitId":"yuhinarita"},"content":"                CommandType.EVENT, super.dataString(), this.dateFrom, this.dateTo);","lastModifiedDate":"2024-02-18"},{"lineNumber":49,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"yuhinarita":50}},{"path":"src/main/java/chipchat/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"import java.util.List;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":" * Represents a task that can be managed by this chatbot.","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":"    private final List\u003cString\u003e tags;","lastModifiedDate":"2024-02-17"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":"    private final String description;","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"     * Constructor of Task.","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"yuhinarita"},"content":"     * @param description name/description of the task","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"yuhinarita"},"content":"     * @param isDone completion status of the task","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"yuhinarita"},"content":"    public Task(String description, boolean isDone, List\u003cString\u003e tags) {","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"yuhinarita"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"yuhinarita"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"yuhinarita"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"yuhinarita"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"yuhinarita"},"content":"    public void mark() {","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"yuhinarita"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"yuhinarita"},"content":"     * Unmarks the task as not done.","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"yuhinarita"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"yuhinarita"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"yuhinarita"},"content":"     * Checks if the name/description of this task matches the query.","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"yuhinarita"},"content":"     * @param query string that is queried","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"yuhinarita"},"content":"     * @return result of query","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"yuhinarita"},"content":"    public boolean matchByString(String query) {","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"yuhinarita"},"content":"        return this.description.contains(query);","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"yuhinarita"},"content":"     * Prints all tags attached to this task as a string.","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"yuhinarita"},"content":"     * @return all tags in one string, with # attached at the start of each tag","lastModifiedDate":"2024-02-17"},{"lineNumber":53,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-17"},{"lineNumber":54,"author":{"gitId":"yuhinarita"},"content":"    public String printTags() {","lastModifiedDate":"2024-02-17"},{"lineNumber":55,"author":{"gitId":"yuhinarita"},"content":"        return this.tags.stream()","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"yuhinarita"},"content":"                .map(tag -\u003e \"#\" + tag)","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"yuhinarita"},"content":"                .reduce(\"\", (str, tag) -\u003e str + \" \" + tag);","lastModifiedDate":"2024-02-18"},{"lineNumber":58,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":59,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"yuhinarita"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"yuhinarita"},"content":"     * @return a string representation of the task","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"yuhinarita"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"yuhinarita"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"yuhinarita"},"content":"        String statusIcon \u003d this.isDone ? \"X\" : \" \";","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"yuhinarita"},"content":"        return String.format(\"[%s] %s\", statusIcon, this.description);","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"yuhinarita"},"content":"     * Returns the data-format string of the task. For Chipchat-specific storage purposes.","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"yuhinarita"},"content":"     * @return a string representation of the task in a parsable format","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"yuhinarita"},"content":"    public String dataString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"yuhinarita"},"content":"        return String.format(\"%s /description %s /tag %s\",","lastModifiedDate":"2024-02-18"},{"lineNumber":78,"author":{"gitId":"yuhinarita"},"content":"                this.isDone, this.description, this.printTags());","lastModifiedDate":"2024-02-18"},{"lineNumber":79,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"yuhinarita":80}},{"path":"src/main/java/chipchat/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":"import java.util.List;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":" * Represents a list that manages tasks.","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":"public class TaskList {","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":"     * Constructor of task if no initial tasks are given.","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"yuhinarita"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"yuhinarita"},"content":"     * Constructor of task if initial tasks are given.","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"yuhinarita"},"content":"    public TaskList(ArrayList\u003cTask\u003e initTasks) {","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"yuhinarita"},"content":"        this.tasks \u003d initTasks;","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"yuhinarita"},"content":"     * Adds a new task to this list.","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"yuhinarita"},"content":"     * @param task task to be added to the list","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"yuhinarita"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"yuhinarita"},"content":"        this.tasks.add(task);","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"yuhinarita"},"content":"     * Removes the task specified by the index from this list.","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"yuhinarita"},"content":"     * @param index index of task in the list to be removed","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"yuhinarita"},"content":"     * @return task removed from the list","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"yuhinarita"},"content":"    public Task delete(int index) {","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"yuhinarita"},"content":"        return this.tasks.remove(index);","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"yuhinarita"},"content":"     * Marks the task specified by the index as done.","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"yuhinarita"},"content":"     * @param index indec of task in the list to be marked as done","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"yuhinarita"},"content":"    public void mark(int index) {","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"yuhinarita"},"content":"        this.tasks.get(index).mark();","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"yuhinarita"},"content":"     * Unmarks the task specified by the index as not done.","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"yuhinarita"},"content":"     * @param index index of task in the list to be unmarked as not done","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"yuhinarita"},"content":"    public void unmark(int index) {","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"yuhinarita"},"content":"        this.tasks.get(index).unmark();","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"yuhinarita"},"content":"     * Returns a list of tasks that contains the queried string.","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"yuhinarita"},"content":"     * @param query the string to be queried","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"yuhinarita"},"content":"     * @return list of tasks","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"yuhinarita"},"content":"    public List\u003cTask\u003e queryByString(String query) {","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"yuhinarita"},"content":"        ArrayList\u003cTask\u003e candidates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"yuhinarita"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"yuhinarita"},"content":"            if (task.matchByString(query)) {","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"yuhinarita"},"content":"                candidates.add(task);","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"yuhinarita"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"yuhinarita"},"content":"        return candidates;","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"yuhinarita"},"content":"     * Returns the string representation of the task in the list specified by the index","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"yuhinarita"},"content":"     * @param index index of task in the list to be printed","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"yuhinarita"},"content":"     * @return string representation of task specified by the index","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":85,"author":{"gitId":"yuhinarita"},"content":"    public String printTask(int index) {","lastModifiedDate":"2024-02-06"},{"lineNumber":86,"author":{"gitId":"yuhinarita"},"content":"        return this.tasks.get(index).toString();","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":90,"author":{"gitId":"yuhinarita"},"content":"     * Returns the string representation of all tasks in the list.","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":92,"author":{"gitId":"yuhinarita"},"content":"     * @return string representation of all tasks","lastModifiedDate":"2024-02-11"},{"lineNumber":93,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":94,"author":{"gitId":"yuhinarita"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":95,"author":{"gitId":"yuhinarita"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":96,"author":{"gitId":"yuhinarita"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2024-02-06"},{"lineNumber":97,"author":{"gitId":"yuhinarita"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2024-02-06"},{"lineNumber":98,"author":{"gitId":"yuhinarita"},"content":"            str.append(String.format(\"%d. %s\\n\", i, tasks.get(i)));","lastModifiedDate":"2024-02-06"},{"lineNumber":99,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":100,"author":{"gitId":"yuhinarita"},"content":"        return str.toString();","lastModifiedDate":"2024-02-06"},{"lineNumber":101,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":102,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":104,"author":{"gitId":"yuhinarita"},"content":"     * Returns the data-format string of all tasks in the list. For Chipchat specific storage purposes.","lastModifiedDate":"2024-02-11"},{"lineNumber":105,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":106,"author":{"gitId":"yuhinarita"},"content":"     * @return a string representation of all tasks in the list in a parsable format","lastModifiedDate":"2024-02-11"},{"lineNumber":107,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":108,"author":{"gitId":"yuhinarita"},"content":"    public String dataString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"yuhinarita"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":110,"author":{"gitId":"yuhinarita"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"yuhinarita"},"content":"            str.append(String.format(\"%d. %s\\n\", i, tasks.get(i).dataString()));","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"yuhinarita"},"content":"        return str.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":115,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"yuhinarita":115}},{"path":"src/main/java/chipchat/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat.task;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"import java.util.List;","lastModifiedDate":"2024-02-17"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":"import chipchat.action.CommandType;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":" * Represents a simple type of task that only has a description and completion status. Subclass of Task.","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":"     * Constructor of Todo.","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":"     * @param description name/description of the task","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"yuhinarita"},"content":"     * @param isDone completion status of the task","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"yuhinarita"},"content":"    public Todo(String description, boolean isDone, List\u003cString\u003e tags) {","lastModifiedDate":"2024-02-17"},{"lineNumber":19,"author":{"gitId":"yuhinarita"},"content":"        super(description, isDone, tags);","lastModifiedDate":"2024-02-17"},{"lineNumber":20,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"yuhinarita"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"yuhinarita"},"content":"     * @return a string representation of the task","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"yuhinarita"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"yuhinarita"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"yuhinarita"},"content":"        return String.format(\"[T]%s %s\", super.toString(), super.printTags());","lastModifiedDate":"2024-02-17"},{"lineNumber":30,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"yuhinarita"},"content":"     * Returns the data-format string of the task. For Chipchat-specific storage purposes.","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"yuhinarita"},"content":"     * @return a string representation of the task in a parsable format","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"yuhinarita"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"yuhinarita"},"content":"    public String dataString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"yuhinarita"},"content":"        return String.format(\"%s /isDone %s\", CommandType.TODO, super.dataString());","lastModifiedDate":"2024-02-18"},{"lineNumber":40,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"yuhinarita":41}},{"path":"src/main/java/chipchat/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat.ui;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"yuhinarita"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"yuhinarita"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"yuhinarita"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"yuhinarita"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"yuhinarita"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"yuhinarita"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"yuhinarita"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"yuhinarita"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"yuhinarita"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"yuhinarita"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"yuhinarita"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"yuhinarita"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"yuhinarita"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"yuhinarita"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"yuhinarita"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"yuhinarita"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"yuhinarita"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"yuhinarita"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"yuhinarita"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"yuhinarita"},"content":"    private void flip() {","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"yuhinarita"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"yuhinarita"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"yuhinarita"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"yuhinarita"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"yuhinarita"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"yuhinarita"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"yuhinarita"},"content":"    public static DialogBox getAppDialog(String text, Image img) {","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"yuhinarita"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"yuhinarita"},"content":"        db.flip();","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"yuhinarita"},"content":"        return db;","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"yuhinarita":61}},{"path":"src/main/java/chipchat/ui/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat.ui;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":"import chipchat.App;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"yuhinarita"},"content":"public class Gui extends Application {","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"yuhinarita"},"content":"    private App app;","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"yuhinarita"},"content":"     * Starts the running of the GUI.","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"yuhinarita"},"content":"     * @param stage","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"yuhinarita"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"yuhinarita"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"yuhinarita"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"yuhinarita"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Gui.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"yuhinarita"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"yuhinarita"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"yuhinarita"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"yuhinarita"},"content":"            stage.setTitle(\"ChipChat\");","lastModifiedDate":"2024-02-18"},{"lineNumber":33,"author":{"gitId":"yuhinarita"},"content":"            this.app \u003d new App(stage);","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"yuhinarita"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setApp(app);","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"yuhinarita"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().showInitialGreeting();","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"yuhinarita"},"content":"            stage.setOnCloseRequest(e -\u003e {","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"yuhinarita"},"content":"                Platform.exit();","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"yuhinarita"},"content":"                System.exit(0);","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"yuhinarita"},"content":"            });","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"yuhinarita"},"content":"            stage.show();","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"yuhinarita"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"yuhinarita"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"yuhinarita"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"yuhinarita":45}},{"path":"src/main/java/chipchat/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat.ui;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"import chipchat.App;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"yuhinarita"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"yuhinarita"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"yuhinarita"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"yuhinarita"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"yuhinarita"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"yuhinarita"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"yuhinarita"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"yuhinarita"},"content":"    private App app;","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"yuhinarita"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"yuhinarita"},"content":"    private Image appImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-18"},{"lineNumber":28,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"yuhinarita"},"content":"     * Initializes the scrollPane to bind with a dialogContainer.","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"yuhinarita"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"yuhinarita"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"yuhinarita"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"yuhinarita"},"content":"     * Shows the initial greetings message.","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"yuhinarita"},"content":"    @FXML","lastModifiedDate":"2024-02-18"},{"lineNumber":41,"author":{"gitId":"yuhinarita"},"content":"    public void showInitialGreeting() {","lastModifiedDate":"2024-02-18"},{"lineNumber":42,"author":{"gitId":"yuhinarita"},"content":"        dialogContainer.getChildren().add(DialogBox.getAppDialog(app.getGreetings(), appImage));","lastModifiedDate":"2024-02-18"},{"lineNumber":43,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":44,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":45,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"yuhinarita"},"content":"     * Assigns the application logic to the interface.","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"yuhinarita"},"content":"     * @param app the application logic","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"yuhinarita"},"content":"    public void setApp(App app) {","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"yuhinarita"},"content":"        this.app \u003d app;","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"yuhinarita"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"yuhinarita"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"yuhinarita"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"yuhinarita"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"yuhinarita"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"yuhinarita"},"content":"        String response \u003d this.app.getResponse(input);","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"yuhinarita"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"yuhinarita"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-14"},{"lineNumber":64,"author":{"gitId":"yuhinarita"},"content":"                DialogBox.getAppDialog(response, appImage)","lastModifiedDate":"2024-02-18"},{"lineNumber":65,"author":{"gitId":"yuhinarita"},"content":"        );","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"yuhinarita"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"yuhinarita":68}},{"path":"src/main/java/chipchat/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat.ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"import chipchat.exception.ChipchatException;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":" * Represents the UI of the app.","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":"public class Ui {","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":"    private static final String WELCOME_MSG \u003d \"Hello! I\u0027m ChipChat. \\nWhat can I do for you?\";","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":"    private final StringBuilder outputBuffer;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":"     * Constructs the ui.","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":"    public Ui() {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"yuhinarita"},"content":"        this.outputBuffer \u003d new StringBuilder();","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"yuhinarita"},"content":"     * Flushes the content of the output string buffer.","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"yuhinarita"},"content":"     * @return the output string buffer","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"yuhinarita"},"content":"    public String getOutput() {","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"yuhinarita"},"content":"        String output \u003d this.outputBuffer.toString();","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"yuhinarita"},"content":"        this.clearBuffer();","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"yuhinarita"},"content":"        return output;","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"yuhinarita"},"content":"     * Clears the current string buffer.","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"yuhinarita"},"content":"    public void clearBuffer() {","lastModifiedDate":"2024-02-18"},{"lineNumber":34,"author":{"gitId":"yuhinarita"},"content":"        this.outputBuffer.setLength(0);","lastModifiedDate":"2024-02-18"},{"lineNumber":35,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-18"},{"lineNumber":36,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":37,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"yuhinarita"},"content":"     * Appends a welcome message to the output buffer.","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"yuhinarita"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"yuhinarita"},"content":"        this.appendWithNewLine(WELCOME_MSG);","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"yuhinarita"},"content":"     * Appends a message to the output buffer.","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"yuhinarita"},"content":"     * @param message the message to be printed","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"yuhinarita"},"content":"    public void showMsg(String message) {","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"yuhinarita"},"content":"        this.appendWithNewLine(message);","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"yuhinarita"},"content":"     * Appends an error message to the output buffer.","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"yuhinarita"},"content":"     *","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"yuhinarita"},"content":"     * @param exc the exception caught","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"yuhinarita"},"content":"    public void showErrMsg(ChipchatException exc) {","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"yuhinarita"},"content":"        this.appendWithNewLine(exc.toString());","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"yuhinarita"},"content":"    private void appendWithNewLine(String str) {","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"yuhinarita"},"content":"        this.outputBuffer.append(str).append(\"\\n\");","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"yuhinarita":66}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"yuhinarita"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"yuhinarita":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"chipchat.ui.MainWindow\"\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"yuhinarita"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"yuhinarita"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"yuhinarita"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"yuhinarita"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"yuhinarita":19}},{"path":"src/test/java/chipchat/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat.parser;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":"import static org.junit.jupiter.api.Assertions.assertInstanceOf;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":"import chipchat.task.TaskList;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"import chipchat.action.Action;","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"import chipchat.action.AddTask;","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":"import chipchat.action.Bye;","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":"import chipchat.action.Delete;","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":"import chipchat.action.ListTasks;","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"yuhinarita"},"content":"import chipchat.action.Mark;","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"yuhinarita"},"content":"import chipchat.action.Unmark;","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"yuhinarita"},"content":"import chipchat.task.Deadline;","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"yuhinarita"},"content":"import chipchat.task.Event;","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"yuhinarita"},"content":"import chipchat.task.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"yuhinarita"},"content":"import chipchat.task.Todo;","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"yuhinarita"},"content":" * Represents a class that tests the Parser.","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"yuhinarita"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"yuhinarita"},"content":"     * Tests whether Parser::parseAction will return the correct Action class.","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"yuhinarita"},"content":"    @Test","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"yuhinarita"},"content":"    public void parseAction_feedUserInput_returnCorrectAction() {","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"yuhinarita"},"content":"        Action action;","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"yuhinarita"},"content":"        action \u003d Parser.parseAction(\"bye\");","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"yuhinarita"},"content":"        assertInstanceOf(Bye.class, action);","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"yuhinarita"},"content":"        action \u003d Parser.parseAction(\"list\");","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"yuhinarita"},"content":"        assertInstanceOf(ListTasks.class, action);","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"yuhinarita"},"content":"        action \u003d Parser.parseAction(\"delete 0\");","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"yuhinarita"},"content":"        assertInstanceOf(Delete.class, action);","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"yuhinarita"},"content":"        action \u003d Parser.parseAction(\"mark 0\");","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"yuhinarita"},"content":"        assertInstanceOf(Mark.class, action);","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"yuhinarita"},"content":"        action \u003d Parser.parseAction(\"unmark 0\");","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"yuhinarita"},"content":"        assertInstanceOf(Unmark.class, action);","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"yuhinarita"},"content":"        action \u003d Parser.parseAction(\"todo study\");","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"yuhinarita"},"content":"        assertInstanceOf(AddTask.class, action);","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"yuhinarita"},"content":"        action \u003d Parser.parseAction(\"deadline homework /by 2024-01-01\");","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"yuhinarita"},"content":"        assertInstanceOf(AddTask.class, action);","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"yuhinarita"},"content":"        action \u003d Parser.parseAction(\"event trip /from 2024-01-01 /to 2024-01-02\");","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"yuhinarita"},"content":"        assertInstanceOf(AddTask.class, action);","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"yuhinarita"},"content":"//    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"yuhinarita"},"content":"//     * Tests whether the correct task type is returned from Parser::parseLoadedTask.","lastModifiedDate":"2024-02-22"},{"lineNumber":62,"author":{"gitId":"yuhinarita"},"content":"//     */","lastModifiedDate":"2024-02-22"},{"lineNumber":63,"author":{"gitId":"yuhinarita"},"content":"//    @Test","lastModifiedDate":"2024-02-22"},{"lineNumber":64,"author":{"gitId":"yuhinarita"},"content":"//    public void parseLoadedTask_testInput_returnCorrectTask() {","lastModifiedDate":"2024-02-22"},{"lineNumber":65,"author":{"gitId":"yuhinarita"},"content":"//        String input;","lastModifiedDate":"2024-02-22"},{"lineNumber":66,"author":{"gitId":"yuhinarita"},"content":"//        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-22"},{"lineNumber":67,"author":{"gitId":"yuhinarita"},"content":"//        AddTask addTask;","lastModifiedDate":"2024-02-22"},{"lineNumber":68,"author":{"gitId":"yuhinarita"},"content":"//        Task actualTask;","lastModifiedDate":"2024-02-22"},{"lineNumber":69,"author":{"gitId":"yuhinarita"},"content":"//        Task expectedTask;","lastModifiedDate":"2024-02-22"},{"lineNumber":70,"author":{"gitId":"yuhinarita"},"content":"//","lastModifiedDate":"2024-02-22"},{"lineNumber":71,"author":{"gitId":"yuhinarita"},"content":"//        input \u003d \"0. TODO /isDone false /description study\";","lastModifiedDate":"2024-02-22"},{"lineNumber":72,"author":{"gitId":"yuhinarita"},"content":"//        addTask \u003d Parser.parseLoadedTask(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":73,"author":{"gitId":"yuhinarita"},"content":"//        addTask.run();","lastModifiedDate":"2024-02-22"},{"lineNumber":74,"author":{"gitId":"yuhinarita"},"content":"//        expectedTask \u003d new Todo(\"study\", false);","lastModifiedDate":"2024-02-22"},{"lineNumber":75,"author":{"gitId":"yuhinarita"},"content":"//        assertEquals(expectedTask.toString(), actualTask.toString());","lastModifiedDate":"2024-02-22"},{"lineNumber":76,"author":{"gitId":"yuhinarita"},"content":"//","lastModifiedDate":"2024-02-22"},{"lineNumber":77,"author":{"gitId":"yuhinarita"},"content":"//        input \u003d \"1. DEADLINE /isDone false /description homework /by 2023-01-01\";","lastModifiedDate":"2024-02-22"},{"lineNumber":78,"author":{"gitId":"yuhinarita"},"content":"//        actualTask \u003d Parser.parseLoadedTask(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":79,"author":{"gitId":"yuhinarita"},"content":"//        LocalDate dueBy \u003d Parser.parseDate(\"2023-01-01\");","lastModifiedDate":"2024-02-22"},{"lineNumber":80,"author":{"gitId":"yuhinarita"},"content":"//        expectedTask \u003d new Deadline(\"homework\", false, dueBy);","lastModifiedDate":"2024-02-22"},{"lineNumber":81,"author":{"gitId":"yuhinarita"},"content":"//        assertEquals(expectedTask.toString(), actualTask.toString());","lastModifiedDate":"2024-02-22"},{"lineNumber":82,"author":{"gitId":"yuhinarita"},"content":"//","lastModifiedDate":"2024-02-22"},{"lineNumber":83,"author":{"gitId":"yuhinarita"},"content":"//        input \u003d \"2. EVENT /isDone false /description trip /from 2024-01-01 /to 2024-01-02\";","lastModifiedDate":"2024-02-22"},{"lineNumber":84,"author":{"gitId":"yuhinarita"},"content":"//        actualTask \u003d Parser.parseLoadedTask(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":85,"author":{"gitId":"yuhinarita"},"content":"//        LocalDate dateFrom \u003d Parser.parseDate(\"2024-01-01\");","lastModifiedDate":"2024-02-22"},{"lineNumber":86,"author":{"gitId":"yuhinarita"},"content":"//        LocalDate dateTo \u003d Parser.parseDate(\"2024-01-02\");","lastModifiedDate":"2024-02-22"},{"lineNumber":87,"author":{"gitId":"yuhinarita"},"content":"//        expectedTask \u003d new Event(\"trip\", false, dateFrom, dateTo);","lastModifiedDate":"2024-02-22"},{"lineNumber":88,"author":{"gitId":"yuhinarita"},"content":"//        assertEquals(expectedTask.toString(), actualTask.toString());","lastModifiedDate":"2024-02-22"},{"lineNumber":89,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"yuhinarita":89}},{"path":"src/test/java/chipchat/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"package chipchat.task;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"yuhinarita"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"yuhinarita"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":11,"author":{"gitId":"yuhinarita"},"content":"import chipchat.parser.Parser;","lastModifiedDate":"2024-02-13"},{"lineNumber":12,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"yuhinarita"},"content":"/**","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"yuhinarita"},"content":" * Represents a class that tests the functioning of TaskList.","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"yuhinarita"},"content":" */","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"yuhinarita"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"yuhinarita"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"yuhinarita"},"content":"     * Tests whether the toString() methods of TaskList and all tasks returns the correct string.","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"yuhinarita"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"yuhinarita"},"content":"    @Test","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"yuhinarita"},"content":"    public void toString_returnCorrectListOfString() {","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"yuhinarita"},"content":"        Task todo \u003d new Todo(\"study\", false);","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"yuhinarita"},"content":"        LocalDate dueBy \u003d Parser.parseDate(\"2024-01-01\");","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"yuhinarita"},"content":"        Task deadline \u003d new Deadline(\"homework\", false, dueBy);","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"yuhinarita"},"content":"        LocalDate dateFrom \u003d Parser.parseDate(\"2024-01-01\");","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"yuhinarita"},"content":"        LocalDate dateTo \u003d Parser.parseDate(\"2024-01-02\");","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"yuhinarita"},"content":"        Task event \u003d new Event(\"trip\", false, dateFrom, dateTo);","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"yuhinarita"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e(Arrays.asList(todo, deadline, event));","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"yuhinarita"},"content":"        TaskList tasks \u003d new TaskList(taskArrayList);","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"yuhinarita"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"yuhinarita"},"content":"        String expectedString \u003d \"0. [T][ ] study\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"yuhinarita"},"content":"                + \"1. [D][ ] homework (by: 2024-01-01)\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"yuhinarita"},"content":"                + \"2. [E][ ] trip (from: 2024-01-01 to: 2024-01-02)\\n\";","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"yuhinarita"},"content":"        assertEquals(expectedString, tasks.toString());","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"yuhinarita"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"yuhinarita"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"yuhinarita":40}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yuhinarita"},"content":"todo study","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"yuhinarita"},"content":"deadline homework /by 2024-01-01","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"yuhinarita"},"content":"event trip /from 2024-01-01 /to 2024-01-02","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"yuhinarita"},"content":"todo word","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"yuhinarita"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"yuhinarita"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"yuhinarita":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"yuhinarita"},"content":"java -classpath ..\\bin chipchat.task.Chipchat \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yuhinarita":1,"-":20}}]
