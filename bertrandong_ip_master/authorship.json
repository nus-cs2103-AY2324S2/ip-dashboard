[{"path":"src/main/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"T|0|1","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"T|0|test","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"T|0|tests","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"bertrandong":3}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"import task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"import utilities.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"import utilities.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"public class AddCommand extends Command{","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"     * Task to be added into the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"    private Task taskToAdd;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"     * AddCommand class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"     * @param newTask New task created and waiting to be added into the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"    public AddCommand(Task newTask) {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"        super(false);","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"        this.taskToAdd \u003d newTask;","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"     * Executes the add task process.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"     * @param taskList The task list that the task is added to.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"     * @param storage The storage that the task list is stored in after the task is added.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"     * @param ui Provides corresponding user output based on whether the process is successful or not.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"        taskList.addTask(this.taskToAdd);","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"        storage.save(taskList);","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"        ui.showTaskListLength(taskList);","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":36}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"import utilities.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"import utilities.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"     * Variable to tell the program whether to exit or not.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"    private boolean isExit;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"     * Command class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"     * @param isExit Variable to tell the program whether to exit or not.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"    public Command(boolean isExit) {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"     * Method to tell the program whether to exit or not.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"     * @return A boolean value.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"        return this.isExit;","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"     * Executes the task process.","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"     * @param taskList The task list that the command is applied to.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"     * @param storage The storage that the task list is stored in after the command is applied.","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"     * @param ui Provides corresponding user output based on whether the process is successful or not.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"     * @throws DukeException The exception thrown when the process is unsuccessful.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"    public abstract void execute(TaskList taskList, Storage storage, Ui ui) throws DukeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":40}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"import task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"import utilities.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"import utilities.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"     * The task index of the task that is to be deleted.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"    private int taskToDeleteIndex;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"     * DeleteCommand class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"     * @param userInput The input that the user types into the command line.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"    public DeleteCommand(String userInput) {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"        super(false);","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"        this.taskToDeleteIndex \u003d Integer.parseInt(userInput.split(\" \")[1]) - 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"     * Executes the delete task process.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"     * @param taskList The task list that the task is deleted from.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"     * @param storage The storage that the task list is stored in after the task is deleted.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"     * @param ui Provides corresponding user output based on whether the process is successful or not.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"     * @throws DukeException The exception thrown when the user input is invalid.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"            Task removedTask \u003d taskList.deleteTask(this.taskToDeleteIndex);","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"            ui.showDelete(removedTask);","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"            throw new DukeException(\"Invalid input. Please provide a valid task index or check that the task exists.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"        storage.save(taskList);","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"        ui.showTaskListLength(taskList);","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":44}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"import utilities.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"import utilities.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"     * ExitCommand class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"    public ExitCommand() {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"        super(true);","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"     * Executes the exit program process.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"     * @param taskList The task list that the command is applied to.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"     * @param storage The storage that the task list is stored in after the command is applied.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"     * @param ui Provides corresponding user output based on whether the process is successful or not.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"        System.out.println(\"Bye! Hope to see you again!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":26}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"import utilities.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"import utilities.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"     * The keyword that the user is filtering.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"    private String keyword;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"     * FindCommand class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"     * @param keyword The keyword that the user is filtering.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"        super(false);","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"     * Executes the find task process.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"     * @param taskList The task list that the task is filtered from.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"     * @param storage The storage that the task list is stored in.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"     * @param ui Provides corresponding user output based on whether the process is successful or not.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"        TaskList foundTasks \u003d taskList.find(this.keyword);","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"        ui.showFoundTasks(foundTasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"bertrandong":36}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"import utilities.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"import utilities.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"     * ListCommand class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"    public ListCommand() {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"        super(false);","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"     * Executes the listing process of all tasks in the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"     * @param taskList The task list that the command is applied to.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"     * @param storage The storage that the task list is stored in after the command is applied.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"     * @param ui Provides corresponding user output based on whether the process is successful or not.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"        ui.showList(taskList);","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":26}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package command;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"import task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"import utilities.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"import utilities.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"     * The task index of which task is to be marked.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"    private int taskIndex;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"     * The mark status of a given task.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"    private boolean isMarked;","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"     * MarkCommand class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"     * @param userInput The input that the user types into the command line.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"     * @param isMarked The variable that determines whether a given task is to be marked or unmarked.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"    public MarkCommand(String userInput, boolean isMarked) {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"        super(false);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"        this.taskIndex \u003d Integer.parseInt(userInput.split(\" \")[1]) - 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"     * Executes the mark task process.","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"     * @param taskList The task list that the command is applied to.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"     * @param storage The storage that the task list is stored in after the given task is marked.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"     * @param ui Provides corresponding user output based on whether the process is successful or not.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"     * @throws DukeException The exception thrown when an invalid put is entered.","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"    public void execute(TaskList taskList, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"bertrandong"},"content":"            Task taskToMark \u003d taskList.markTask(this.taskIndex, this.isMarked);","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"bertrandong"},"content":"            ui.showMarkTask(taskToMark, this.isMarked);","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"bertrandong"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"bertrandong"},"content":"            throw new DukeException(\"Invalid input. Please provide a valid task index or check that the task exists.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"bertrandong"},"content":"        storage.save(taskList);","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":51}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package exceptions;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"     * DukeException class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"     * @param message The exception message.","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"        super(message);","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":11}},{"path":"src/main/java/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package main;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"import command.Command;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"import utilities.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"import utilities.Storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"import utilities.Parser;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"     * Ui responsible for user interaction.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"     * The user\u0027s task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"     * The storage used to access the save file if it exists.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"     * Duke class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"     * @param fileName Name of the file that the data is going to be saved into.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"     * @param directoryName Name of the directory that the file is going to be saved into.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"    public Duke(String fileName, String directoryName) {","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"        this.storage \u003d new Storage(fileName, directoryName);","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"        this.taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"     * Starts the TodoPal chatbot.","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"    public void run() {","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"bertrandong"},"content":"        while (!isExit) {","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"bertrandong"},"content":"            try {","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"bertrandong"},"content":"                String userInput \u003d ui.readCommand();","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"bertrandong"},"content":"                Command command \u003d Parser.parse(userInput);","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"bertrandong"},"content":"                command.execute(taskList, storage, ui);","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"bertrandong"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"bertrandong"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"bertrandong"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"bertrandong"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"bertrandong"},"content":"     * Main function that is called when the program is initially booted up.","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"bertrandong"},"content":"     * @param args Command line user input.","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"bertrandong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"bertrandong"},"content":"        new Duke(\"duke.txt\", \"./src/main/data\").run();","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"bertrandong":60}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import utilities.DateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"     * The due date or deadline of the given task in string form.","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"    private String by;","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"     * The due date or deadline of the given task as a date time object.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"    private DateTime deadline;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"     * Deadline class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"     * @param description Task description.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"     * @param by The due date or deadline of the given task.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"        this.deadline \u003d new DateTime(by);","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"     * Deadline class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"     * @param description The task description.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"     * @param isDone A variable that determines whether a task has been completed.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"     * @param by The due date or deadline of the given task.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"    public Deadline(String description, boolean isDone, String by) {","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"        this.deadline \u003d new DateTime(by);","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"     * Outputs the task as a string to the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"     * @return A string representing the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"bertrandong"},"content":"                + \" (by: \" + this.deadline.formatDate() + \"hrs)\";","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"bertrandong"},"content":"     * Outputs the task as a string to be stored in the save file.","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"bertrandong"},"content":"     * @return A string representing the task to be saved.","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"bertrandong"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"bertrandong"},"content":"        return \"D\" + super.toFileString() + \"|\" + this.by;","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"bertrandong":55}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import utilities.DateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"     * The date time of the start of the event as a string.","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"    private String from;","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"     * The date time of the end of the event as a string.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"    private String to;","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"     * The date time of the start of the event as a date time object.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"    private DateTime start;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"     * The date time of the end of the event as a date time object.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"    private DateTime end;","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"     * Event class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"     * @param description The task description.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"     * @param from The date time of the start of the event.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"     * @param to The date time of the end of the event.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"        this.start \u003d new DateTime(from);","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"        this.end \u003d new DateTime(to);","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"     * Event class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"     * @param description The task description.","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"     * @param isDone A variable that determines whether a task has been completed.","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"     * @param from The date time of the start of the event.","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"     * @param to The date time of the end of the event.","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"bertrandong"},"content":"    public Event(String description, boolean isDone, String from, String to) {","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"bertrandong"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"bertrandong"},"content":"        this.start \u003d new DateTime(from);","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"bertrandong"},"content":"        this.end \u003d new DateTime(to);","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"bertrandong"},"content":"     * Outputs the task as a string to the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"bertrandong"},"content":"     * @return A string representing the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"bertrandong"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"bertrandong"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"bertrandong"},"content":"                + \" (from: \" + this.start.formatDate() + \"hrs to: \"","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"bertrandong"},"content":"                + this.end.formatDate() + \"hrs)\";","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"bertrandong"},"content":"     * Outputs the task as a string to be stored in the save file.","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"bertrandong"},"content":"     * @return A string representing the task to be saved.","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"bertrandong"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"bertrandong"},"content":"        return \"E\" + super.toFileString() + \"|\" + this.from + \"|\" + this.to;","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"bertrandong":69}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"public class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"     * The task description as a string.","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"    private String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"     * A variable that determines whether a task has been completed.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"     * Task class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"     * @param description The task description.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"     * Task class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"     * @param description The task description.","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"     * @param isDone A variable that determines whether a task has been completed.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"     * A method to mark whether a task has been done or not.","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"     * @param isDone isDone A variable that determines whether a task has been completed.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"     * Outputs the task as a string to the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"     * @return A string representing the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"bertrandong"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"bertrandong"},"content":"        return \"[\" + (this.isDone ? \"X\" : \" \") + \"] \"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"bertrandong"},"content":"                + this.description;","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"bertrandong"},"content":"     * Outputs the task as a string to be stored in the save file.","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"bertrandong"},"content":"     * @return A string representing the task to be saved.","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"bertrandong"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"bertrandong"},"content":"        return \"|\" + (this.isDone ? \"1\" : \"0\") + \"|\"","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"bertrandong"},"content":"                + this.description;","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"bertrandong"},"content":"     * Checks if task description contains the given keyword.","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"bertrandong"},"content":"     * @param keyword The keyword that the user is filtering.","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"bertrandong"},"content":"     * @return A boolean value depending on whether the task description contains the keyword.","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"bertrandong"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"bertrandong"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"bertrandong":67}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"public class TaskList {","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"     * The task list which contains all the tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"     * TaskList class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"     * TaskList class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"     * @param taskArray The task list that is loaded into the TaskList constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskArray) {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"        this.taskList \u003d taskArray;","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"     * Outputs the length of the task list as an integer.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"     * @return The length of the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"    public int length() {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"        return this.taskList.size();","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"     * Returns the task list as an array list.","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"        return this.taskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"     * Retrieves the task from the task list at the specified index.","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"     * @param index The task index for which task is to be retrived.","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"bertrandong"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"bertrandong"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"bertrandong"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"bertrandong"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"bertrandong"},"content":"     * @return A boolean value representing whether the task list is empty or not.","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"bertrandong"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"bertrandong"},"content":"        return this.taskList.isEmpty();","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"bertrandong"},"content":"     * Adds a new task to the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"bertrandong"},"content":"     * @param newTask The new task that is to be added.","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"bertrandong"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"bertrandong"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"bertrandong"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"bertrandong"},"content":"        System.out.println(newTask.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"bertrandong"},"content":"     * Marks the task in the task list at the specified index.","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"bertrandong"},"content":"     * @param taskIndex The task index of the task that is to be marked.","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"bertrandong"},"content":"     * @param isMarked A variable that determines whether a task is to be marked or unmarked.","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"bertrandong"},"content":"     * @return A task that is marked or unmarked depending on the isMarked variable.","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"bertrandong"},"content":"    public Task markTask(int taskIndex, boolean isMarked) {","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"bertrandong"},"content":"        Task taskToMark \u003d this.taskList.get(taskIndex);","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"bertrandong"},"content":"        taskToMark.setDone(isMarked);","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"bertrandong"},"content":"        return taskToMark;","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"bertrandong"},"content":"     * Deletes the task in the task list at the specified index.","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"bertrandong"},"content":"     * @param taskIndex The task index of the task that is to be deleted.","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"bertrandong"},"content":"     * @return The task that has been deleted.","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"bertrandong"},"content":"    public Task deleteTask(int taskIndex) {","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"bertrandong"},"content":"        return this.taskList.remove(taskIndex);","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"bertrandong"},"content":"     * Returns a task list of all tasks with the matching keyword.","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"bertrandong"},"content":"     * @param keyword The keyword that the user is filtering.","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"bertrandong"},"content":"     * @return The task list with matching keywords.","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"bertrandong"},"content":"    public TaskList find(String keyword) {","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"bertrandong"},"content":"        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"bertrandong"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"bertrandong"},"content":"            if (task.contains(keyword)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"bertrandong"},"content":"                arr.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"bertrandong"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"bertrandong"},"content":"        TaskList foundTasks \u003d new TaskList(arr);","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"bertrandong"},"content":"        return foundTasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":104}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"     * Todo class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"     * @param description The task description.","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"     * Todo class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"     * @param description The task description.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"     * @param isDone A variable that determines whether a task has been completed.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"     * Outputs the task as a string to the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"     * @return A string representing the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"     * Outputs the task as a string to be stored in the save file.","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"     * @return A string representing the task to be saved.","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"        return \"T\" + super.toFileString();","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"bertrandong":38}},{"path":"src/main/java/utilities/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package utilities;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"public class DateTime {","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"     * The date time string that the user inputs.","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"    private String dateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"     * The date time object after conversion.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"    private LocalDateTime dateTimeData;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"     * DateTime class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"     * @param dateTime The date time string that the user inputs.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"    public DateTime(String dateTime) {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"        DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"        this.dateTimeData \u003d LocalDateTime.parse(dateTime, inputFormat);","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"     * Formats the date from a date time object into a string.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"     * @return The converted date time that is to be output by the program.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"    public String formatDate() {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, HHmm\");","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"        return this.dateTimeData.format(outputFormat);","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"bertrandong":34}},{"path":"src/main/java/utilities/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package utilities;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import command.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"import task.Todo;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"import task.Deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"import task.Event;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"public class Parser {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"     * A method that helps to interpret what the user has keyed in the command line, and responds accordingly.","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"     * @param userInput The input that is entered by the user in the command line.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"     * @return A command based on what the user has entered.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"     * @throws DukeException The exception thrown when the user enters an invalid input.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"    public static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"        if (userInput.equals(\"bye\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"        } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"            return new ListCommand();","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"        } else if (userInput.startsWith(\"mark\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"            return new MarkCommand(userInput, true);","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"        } else if (userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"            return new MarkCommand(userInput, false);","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"        } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"            return new DeleteCommand(userInput);","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"        } else if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"                String keyword \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"                if (keyword.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"                    throw new DukeException(\"Keyword cannot be empty. Please follow the given find format \u0027find \u003ckeyword\u003e\u0027.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"                return new FindCommand(keyword);","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"                throw new DukeException(\"OOPS!!! Please follow the given find format \u0027find \u003ckeyword\u003e\u0027.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"            // Sort out type of task","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"            if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"                try {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"                    String description \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"bertrandong"},"content":"                    if (description.isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"bertrandong"},"content":"                        throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"bertrandong"},"content":"                    } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"bertrandong"},"content":"                        Todo newTodo \u003d new Todo(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"bertrandong"},"content":"                        return new AddCommand(newTodo);","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"bertrandong"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"bertrandong"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"bertrandong"},"content":"                    throw new DukeException(\"OOPS!!! Please follow the given todo format \u0027todo \u003ctask description\u003e\u0027.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"bertrandong"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"bertrandong"},"content":"            } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"bertrandong"},"content":"                try {","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"bertrandong"},"content":"                    String description \u003d userInput.split(\" /by \")[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"bertrandong"},"content":"                    if (description.isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"bertrandong"},"content":"                        throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"bertrandong"},"content":"                    } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"bertrandong"},"content":"                        String by \u003d userInput.split(\" /by \")[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"bertrandong"},"content":"                        Deadline newDeadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"bertrandong"},"content":"                        return new AddCommand(newDeadline);","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"bertrandong"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"bertrandong"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"bertrandong"},"content":"                    throw new DukeException(\"OOPS!!! Please follow the given deadline format \u0027deadline \u003ctask description\u003e /by \u003cdeadline\u003e\u0027.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"bertrandong"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"bertrandong"},"content":"                    throw new DukeException(\"Invalid date time provided!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"bertrandong"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"bertrandong"},"content":"            } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"bertrandong"},"content":"                try {","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"bertrandong"},"content":"                    String description \u003d userInput.split(\" /from \")[0].split(\" \", 2)[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"bertrandong"},"content":"                    if (description.isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"bertrandong"},"content":"                        throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"bertrandong"},"content":"                    } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"bertrandong"},"content":"                        String from \u003d userInput.split(\" /from \")[1].split(\" /to \")[0];","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"bertrandong"},"content":"                        String to \u003d userInput.split(\" /to \")[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"bertrandong"},"content":"                        Event newEvent \u003d new Event(description, from, to);","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"bertrandong"},"content":"                        return new AddCommand(newEvent);","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"bertrandong"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"bertrandong"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"bertrandong"},"content":"                    throw new DukeException(\"OOPS!!! Please follow the given event format \u0027event \u003ctask description\u003e /from \u003cstart\u003e /to \u003cend\u003e\u0027.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"bertrandong"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"bertrandong"},"content":"                    throw new DukeException(\"Invalid date time provided!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"bertrandong"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"bertrandong"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"bertrandong"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-( Please start with todo, deadline or event.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"bertrandong"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":89}},{"path":"src/main/java/utilities/SaveFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package utilities;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import java.io.File;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"import task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"import task.Todo;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"import task.Deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"import task.Event;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"public class SaveFile {","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"     * The file name of the save file.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"    private String fileName;","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"     * The directory path of where the save file is saved.","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"    private String directoryName;","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"     * SaveFile class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"     * @param fileName The file name of the save file.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"     * @param directoryName The directory path of where the save file is saved.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"    public SaveFile(String fileName, String directoryName) {","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"        this.directoryName \u003d directoryName;","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"     * Method to create directory path if it does not already exist.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"    public void createDirectory() {","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"        File directory \u003d new File(directoryName);","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"            if (directory.mkdir()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"bertrandong"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"bertrandong"},"content":"                System.err.println(\"Error creating directory\");","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"bertrandong"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"bertrandong"},"content":"     * Method to create the save file if it does not already exist.","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"bertrandong"},"content":"    public void createFile() {","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"bertrandong"},"content":"        File file \u003d new File(directoryName, fileName);","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"bertrandong"},"content":"        if(!file.exists()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"bertrandong"},"content":"            try {","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"bertrandong"},"content":"                file.createNewFile();","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"bertrandong"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"bertrandong"},"content":"                System.out.println(\"Error generating task list\");","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"bertrandong"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"bertrandong"},"content":"     * Writes the task list into the save file.","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"bertrandong"},"content":"     * @param taskList The task list that is to be saved.","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"bertrandong"},"content":"    public void saveToFile(TaskList taskList) {","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"bertrandong"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"bertrandong"},"content":"            FileWriter fw \u003d new FileWriter(this.directoryName + \"/\" + this.fileName);","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"bertrandong"},"content":"            for (Task t : taskList.getList()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"bertrandong"},"content":"                fw.write(t.toFileString());","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"bertrandong"},"content":"                fw.write((System.lineSeparator()));","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"bertrandong"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"bertrandong"},"content":"            fw.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"bertrandong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"bertrandong"},"content":"            System.err.println(\"Error writing task list to file: \" + e.getMessage());","lastModifiedDate":"2024-01-27"},{"lineNumber":78,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":79,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"bertrandong"},"content":"     * Reads the task list from the save file.","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"bertrandong"},"content":"     * @return The task list as an array list.","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"bertrandong"},"content":"    public ArrayList\u003cTask\u003e readFile() {","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"bertrandong"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"bertrandong"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"bertrandong"},"content":"            File f \u003d new File(this.directoryName + \"/\" + this.fileName);","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"bertrandong"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"bertrandong"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"bertrandong"},"content":"                String data \u003d s.nextLine();","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"bertrandong"},"content":"                boolean isDone;","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"bertrandong"},"content":"                if (data.split(\"[|]\")[1].equals(\"0\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"bertrandong"},"content":"                    isDone \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"bertrandong"},"content":"                } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"bertrandong"},"content":"                    isDone \u003d true;","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"bertrandong"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"bertrandong"},"content":"                if (data.startsWith(\"T\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"bertrandong"},"content":"                    String description \u003d data.split(\"[|]\")[2];","lastModifiedDate":"2024-01-27"},{"lineNumber":102,"author":{"gitId":"bertrandong"},"content":"                    Todo newTodo \u003d new Todo(description, isDone);","lastModifiedDate":"2024-01-27"},{"lineNumber":103,"author":{"gitId":"bertrandong"},"content":"                    taskList.add(newTodo);","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"bertrandong"},"content":"                } else if (data.startsWith(\"D\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"bertrandong"},"content":"                    String description \u003d data.split(\"[|]\")[2];","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"bertrandong"},"content":"                    String by \u003d data.split(\"[|]\")[3];","lastModifiedDate":"2024-01-27"},{"lineNumber":107,"author":{"gitId":"bertrandong"},"content":"                    Deadline newDeadline \u003d new Deadline(description, isDone, by);","lastModifiedDate":"2024-01-27"},{"lineNumber":108,"author":{"gitId":"bertrandong"},"content":"                    taskList.add(newDeadline);","lastModifiedDate":"2024-01-27"},{"lineNumber":109,"author":{"gitId":"bertrandong"},"content":"                } else if (data.startsWith(\"E\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":110,"author":{"gitId":"bertrandong"},"content":"                    String description \u003d data.split(\"[|]\")[2];","lastModifiedDate":"2024-01-27"},{"lineNumber":111,"author":{"gitId":"bertrandong"},"content":"                    String from \u003d data.split(\"[|]\")[3];","lastModifiedDate":"2024-01-27"},{"lineNumber":112,"author":{"gitId":"bertrandong"},"content":"                    String to \u003d data.split(\"[|]\")[4];","lastModifiedDate":"2024-01-27"},{"lineNumber":113,"author":{"gitId":"bertrandong"},"content":"                    Event newEvent \u003d new Event(description, isDone, from, to);","lastModifiedDate":"2024-01-27"},{"lineNumber":114,"author":{"gitId":"bertrandong"},"content":"                    taskList.add(newEvent);","lastModifiedDate":"2024-01-27"},{"lineNumber":115,"author":{"gitId":"bertrandong"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":116,"author":{"gitId":"bertrandong"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":117,"author":{"gitId":"bertrandong"},"content":"            s.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":118,"author":{"gitId":"bertrandong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":119,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":120,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":121,"author":{"gitId":"bertrandong"},"content":"        return taskList;","lastModifiedDate":"2024-01-27"},{"lineNumber":122,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":123,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"bertrandong":123}},{"path":"src/main/java/utilities/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package utilities;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"import task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"public class Storage {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"     * The save file stored in the storage.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"    private SaveFile saveFile;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"     * Storage class constructor.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"     * @param fileName The file name of the save file.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"     * @param directoryName The directory path of where the save file is saved.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"    public Storage(String fileName, String directoryName) {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"        this.saveFile \u003d new SaveFile(fileName, directoryName);","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"        this.saveFile.createDirectory();","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"        this.saveFile.createFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"     * Save task list to save file.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"     * @param taskList The task list to be saved as a TaskList.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"        this.saveFile.saveToFile(taskList);","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"     * Load task list from save file.","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"     * @return The save file as an array list.","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"        return this.saveFile.readFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":40}},{"path":"src/main/java/utilities/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package utilities;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"import task.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"import task.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"public class Ui {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"     * Method to read what the user inputs.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"     * @return The next line of input by the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"    public String readCommand() {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"     * Displays the welcome message.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"        System.out.println(\"Hello! I\u0027m TodoPal!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"     * Lists out all existing tasks in the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"     * @param taskList The task list to be listed out.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"    public void showList(TaskList taskList) {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"            System.out.println(\"Your task list is empty.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"            for (int i \u003d 0; i \u003c taskList.length(); i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"                System.out.println((i + 1) + \".\" + taskList.getTask(i).toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"     * Displays the length of the task list.","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"     * @param taskList The task list to be determined.","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"bertrandong"},"content":"    public void showTaskListLength(TaskList taskList) {","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"bertrandong"},"content":"        System.out.println(\"Now you have \" + taskList.length() + \" task(s) in the list.\");","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"bertrandong"},"content":"     * Displays the task that has been deleted.","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"bertrandong"},"content":"     * @param removedTask The task that has been deleted.","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"bertrandong"},"content":"    public void showDelete(Task removedTask) {","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"bertrandong"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"bertrandong"},"content":"        System.out.println(removedTask.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"bertrandong"},"content":"     * Displays the task that has been marked.","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"bertrandong"},"content":"     * @param task The task that has been marked.","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"bertrandong"},"content":"     * @param isMarked A variable to determine whether a task is to be marked or unmarked.","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"bertrandong"},"content":"    public void showMarkTask(Task task, boolean isMarked) {","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"bertrandong"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as \" + (isMarked ? \"done:\" : \"not done yet:\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"bertrandong"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"bertrandong"},"content":"     * Displays the error message that to user encounters.","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"bertrandong"},"content":"     * @param message The error message.","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"bertrandong"},"content":"    public void showError(String message) {","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"bertrandong"},"content":"        System.out.println(message);","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"bertrandong"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"bertrandong"},"content":"     * Displays all tasks in the task list with the matching keywords.","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"bertrandong"},"content":"     * @param foundTasks The task list containing all the matching tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"bertrandong"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"bertrandong"},"content":"    public void showFoundTasks(TaskList foundTasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"bertrandong"},"content":"        if (foundTasks.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"bertrandong"},"content":"            System.out.println(\"You have no matching tasks.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"bertrandong"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"bertrandong"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"bertrandong"},"content":"            for(int i \u003d 0; i \u003c foundTasks.length(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"bertrandong"},"content":"                System.out.println((i + 1) + \".\" + foundTasks.getTask(i).toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"bertrandong"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":90}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"    public void toString_unMarkedDeadline_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"24/8/2024 2359\");","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"[D][ ] return book (by: 24 Aug 2024, 2359hrs)\", deadline.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"    public void toString_markedDeadline_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"24/8/2024 2359\");","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"        deadline.setDone(true);","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"[D][X] return book (by: 24 Aug 2024, 2359hrs)\", deadline.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"    public void toFileString_unMarkedDeadline_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"24/8/2024 2359\");","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"D|0|return book|24/8/2024 2359\", deadline.toFileString());","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"    public void toFileString_markedDeadline_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"24/8/2024 2359\");","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"        deadline.setDone(true);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"D|1|return book|24/8/2024 2359\", deadline.toFileString());","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":32}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"public class EventTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"    public void toString_unMarkedDeadline_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"        Event event \u003d new Event(\"project meeting\", \"31/8/2024 1400\", \"31/8/2024 1600\");","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"[E][ ] project meeting (from: 31 Aug 2024, 1400hrs to: 31 Aug 2024, 1600hrs)\", event.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"    public void toString_markedDeadline_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"        Event event \u003d new Event(\"project meeting\", \"31/8/2024 1400\", \"31/8/2024 1600\");","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"        event.setDone(true);","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"[E][X] project meeting (from: 31 Aug 2024, 1400hrs to: 31 Aug 2024, 1600hrs)\", event.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"    public void toFileString_unMarkedDeadline_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"        Event event \u003d new Event(\"project meeting\", \"31/8/2024 1400\", \"31/8/2024 1600\");","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"E|0|project meeting|31/8/2024 1400|31/8/2024 1600\", event.toFileString());","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"    public void toFileString_markedDeadline_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"        Event event \u003d new Event(\"project meeting\", \"31/8/2024 1400\", \"31/8/2024 1600\");","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"        event.setDone(true);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"E|1|project meeting|31/8/2024 1400|31/8/2024 1600\", event.toFileString());","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":32}},{"path":"src/test/java/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"import command.Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"import exceptions.DukeException;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"import utilities.Parser;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"import utilities.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"import utilities.Storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"public class TaskListTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"    public void get_validTask_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"        Task expected \u003d new Task(\"dummy\");","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"        ArrayList\u003cTask\u003e taskList1 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"        taskList1.add(expected);","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"        TaskList taskList2 \u003d new TaskList(taskList1);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"        assertEquals(expected, taskList2.getTask(0));","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"bertrandong"},"content":"    public void get_invalidTask_exceptionThrown() throws DukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"bertrandong"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"bertrandong"},"content":"            Storage storage \u003d new Storage(\"duke.txt\", \"./src/main/data\");","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"bertrandong"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"bertrandong"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"bertrandong"},"content":"            Command command \u003d Parser.parse(\"mark -1\");","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"bertrandong"},"content":"            command.execute(taskList, storage, ui);","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"bertrandong"},"content":"            fail();","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"bertrandong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"bertrandong"},"content":"            assertEquals(\"Invalid input. Please provide a valid task index or check that the task exists.\", e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"bertrandong"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"bertrandong"},"content":"    public void addTask_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"bertrandong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"bertrandong"},"content":"        Task dummy1 \u003d new Task(\"dummy\");","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"bertrandong"},"content":"        Task dummy2 \u003d new Task(\"dummy\");","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"bertrandong"},"content":"        taskList.addTask(dummy1);","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"bertrandong"},"content":"        taskList.addTask(dummy2);","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"bertrandong"},"content":"        assertEquals(2, taskList.length());","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"bertrandong"},"content":"    public void delete_validTask_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"bertrandong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"bertrandong"},"content":"        Task dummy1 \u003d new Task(\"dummy\");","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"bertrandong"},"content":"        Task dummy2 \u003d new Task(\"dummy\");","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"bertrandong"},"content":"        taskList.addTask(dummy1);","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"bertrandong"},"content":"        taskList.addTask(dummy2);","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"bertrandong"},"content":"        taskList.deleteTask(0);","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"bertrandong"},"content":"        taskList.deleteTask(0);","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"bertrandong"},"content":"        assertEquals(0, taskList.length());","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":68}},{"path":"src/test/java/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"public class TaskTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"    public void toString_unMarkedTask_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"        Task task \u003d new Task(\"study for finals\");","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"[ ] study for finals\", task.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"    public void toString_markedTask_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"        Task task \u003d new Task(\"study for finals\");","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"        task.setDone(true);","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"[X] study for finals\", task.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"    public void toFileString_unMarkedTask_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"        Task task \u003d new Task(\"study for finals\");","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"|0|study for finals\", task.toFileString());","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"    public void toFileString_markedTask_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"        Task task \u003d new Task(\"study for finals\");","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"        task.setDone(true);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"|1|study for finals\", task.toFileString());","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":32}},{"path":"src/test/java/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"package task;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"public class TodoTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"    public void toString_unMarkedTodo_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"        Todo todo \u003d new Todo(\"study for finals\");","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"[T][ ] study for finals\", todo.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"    public void toString_markedTodo_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"bertrandong"},"content":"        Todo todo \u003d new Todo(\"study for finals\");","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"bertrandong"},"content":"        todo.setDone(true);","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"[T][X] study for finals\", todo.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"bertrandong"},"content":"    public void toFileString_unMarkedTodo_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"bertrandong"},"content":"        Todo todo \u003d new Todo(\"study for finals\");","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"T|0|study for finals\", todo.toFileString());","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"bertrandong"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"bertrandong"},"content":"    @Test","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"bertrandong"},"content":"    public void toFileString_markedTodo_success() {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"bertrandong"},"content":"        Todo todo \u003d new Todo(\"study for finals\");","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"bertrandong"},"content":"        todo.setDone(true);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"bertrandong"},"content":"        assertEquals(\"T|1|study for finals\", todo.toFileString());","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"bertrandong"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"bertrandong"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"bertrandong":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bertrandong"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"bertrandong"},"content":"todo","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"bertrandong"},"content":"todo borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"bertrandong"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"bertrandong"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"bertrandong"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"bertrandong"},"content":"mark","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"bertrandong"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"bertrandong"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"bertrandong"},"content":"unmark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"bertrandong"},"content":"delete","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"bertrandong"},"content":"delete 1","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"bertrandong"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"bertrandong"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"bertrandong":14}}]
