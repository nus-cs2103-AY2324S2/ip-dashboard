[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ReflectiveObsidian"},"content":"    protected String by;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ReflectiveObsidian"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ReflectiveObsidian"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ReflectiveObsidian"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ReflectiveObsidian"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"ReflectiveObsidian"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"ReflectiveObsidian"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ReflectiveObsidian":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"ReflectiveObsidian"},"content":"        Pyrite toDoList \u003d new Pyrite();","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ReflectiveObsidian"},"content":"        toDoList.begin();","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ReflectiveObsidian":3,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"public class DukeException extends UnsupportedOperationException{","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ReflectiveObsidian"},"content":"    private String error;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ReflectiveObsidian"},"content":"    public DukeException(String error) {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ReflectiveObsidian"},"content":"        this.error \u003d error;","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ReflectiveObsidian"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ReflectiveObsidian"},"content":"        return error;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ReflectiveObsidian"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ReflectiveObsidian":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ReflectiveObsidian"},"content":"    protected String start;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ReflectiveObsidian"},"content":"    protected String end;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ReflectiveObsidian"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ReflectiveObsidian"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ReflectiveObsidian"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ReflectiveObsidian"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ReflectiveObsidian"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ReflectiveObsidian"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"ReflectiveObsidian"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ReflectiveObsidian":15}},{"path":"src/main/java/Pyrite.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ReflectiveObsidian"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ReflectiveObsidian"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ReflectiveObsidian"},"content":"public class Pyrite {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ReflectiveObsidian"},"content":"    static String name \u003d \"Pyrite\";","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ReflectiveObsidian"},"content":"    static String horizontal_line \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ReflectiveObsidian"},"content":"    static String greeting \u003d \"\\tHello! I\u0027m \" + name + \"\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ReflectiveObsidian"},"content":"            + \"\\tWhat can I do for you?\";","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ReflectiveObsidian"},"content":"    static String farewell \u003d \"\\tBye. Hope to see you again soon!\";","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ReflectiveObsidian"},"content":"    static String taskAddedAcknowledgement \u003d \"\\t\" + \"Got it. I\u0027ve added this task: \";","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"ReflectiveObsidian"},"content":"    ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"ReflectiveObsidian"},"content":"    private void printList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"ReflectiveObsidian"},"content":"        System.out.println(\"\\t\" + \"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"ReflectiveObsidian"},"content":"        for (Task t : list) {","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"ReflectiveObsidian"},"content":"            System.out.println(\"\\t\" + (list.indexOf(t) + 1) + \". \" + t.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"ReflectiveObsidian"},"content":"    private int findCommand(String[] toSearch, String toFind) {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"ReflectiveObsidian"},"content":"        for (int i \u003d 0; i \u003c toSearch.length; i++) {","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"ReflectiveObsidian"},"content":"            if (toSearch[i].equals(toFind)) {","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"ReflectiveObsidian"},"content":"                return i;","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"ReflectiveObsidian"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"ReflectiveObsidian"},"content":"        return -1;","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"ReflectiveObsidian"},"content":"    private void assertValidId(int id) {","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"ReflectiveObsidian"},"content":"        if (id \u003c 0 || id \u003e\u003d list.size()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"ReflectiveObsidian"},"content":"            throw new DukeException(\"Task to mark/unmark does not exist.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"ReflectiveObsidian"},"content":"    private int parseID(String parameters[]) {","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"ReflectiveObsidian"},"content":"        int id;","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"ReflectiveObsidian"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"ReflectiveObsidian"},"content":"            id \u003d Integer.parseInt(parameters[1]) - 1;","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"ReflectiveObsidian"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"ReflectiveObsidian"},"content":"            throw new DukeException(\"Provide a valid id to mark/unmark.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"ReflectiveObsidian"},"content":"        return id;","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void begin() {","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"ReflectiveObsidian"},"content":"        System.out.println(this.horizontal_line);","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"ReflectiveObsidian"},"content":"        System.out.println(this.greeting);","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"ReflectiveObsidian"},"content":"        System.out.println(this.horizontal_line);","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"ReflectiveObsidian"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"ReflectiveObsidian"},"content":"        String input;","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"ReflectiveObsidian"},"content":"        // Solution below inspired by","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"ReflectiveObsidian"},"content":"        // https://stackoverflow.com/questions/31690570/java-scanner-command-system","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"ReflectiveObsidian"},"content":"        // https://stackoverflow.com/questions/4822256/java-is-there-an-easy-way-to-select-a-subset-of-an-array","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"ReflectiveObsidian"},"content":"        while (true) {","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"ReflectiveObsidian"},"content":"            System.out.println();","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"ReflectiveObsidian"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"ReflectiveObsidian"},"content":"            System.out.println(this.horizontal_line);","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"ReflectiveObsidian"},"content":"            try {","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"ReflectiveObsidian"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"ReflectiveObsidian"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"ReflectiveObsidian"},"content":"                } else if (input.equals(\"list\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"ReflectiveObsidian"},"content":"                    printList(this.list);","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"ReflectiveObsidian"},"content":"                } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"ReflectiveObsidian"},"content":"                    boolean added_task \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"ReflectiveObsidian"},"content":"                    // Commands with parameters","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"ReflectiveObsidian"},"content":"                    String parameters[] \u003d input.split(\" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"ReflectiveObsidian"},"content":"                    if (parameters[0].equals(\"mark\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"ReflectiveObsidian"},"content":"                        int id \u003d parseID(parameters);","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"ReflectiveObsidian"},"content":"                        assertValidId(id);","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"ReflectiveObsidian"},"content":"                        list.get(id).setDone(true);","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"ReflectiveObsidian"},"content":"                        System.out.println(\"\\t\"","lastModifiedDate":"2024-01-24"},{"lineNumber":68,"author":{"gitId":"ReflectiveObsidian"},"content":"                                + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":69,"author":{"gitId":"ReflectiveObsidian"},"content":"                                + \"\\t\\t\"","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"ReflectiveObsidian"},"content":"                                + list.get(id).toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"ReflectiveObsidian"},"content":"                    } else if (parameters[0].equals(\"unmark\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":72,"author":{"gitId":"ReflectiveObsidian"},"content":"                        int id \u003d parseID(parameters);","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"ReflectiveObsidian"},"content":"                        assertValidId(id);","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"ReflectiveObsidian"},"content":"                        list.get(id).setDone(false);","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"ReflectiveObsidian"},"content":"                        System.out.println(\"\\t\"","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"ReflectiveObsidian"},"content":"                                + \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"ReflectiveObsidian"},"content":"                                + \"\\t\\t\"","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"ReflectiveObsidian"},"content":"                                + list.get(id).toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"ReflectiveObsidian"},"content":"                        // 3 types of tasks","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"ReflectiveObsidian"},"content":"                        //  Solution below inspired by","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"ReflectiveObsidian"},"content":"                        //  https://stackoverflow.com/questions/11001720/get-only-part-of-an-array-in-java","lastModifiedDate":"2024-01-24"},{"lineNumber":82,"author":{"gitId":"ReflectiveObsidian"},"content":"                    } else if (parameters[0].equals(\"delete\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"ReflectiveObsidian"},"content":"                        int id \u003d parseID(parameters);","lastModifiedDate":"2024-01-24"},{"lineNumber":84,"author":{"gitId":"ReflectiveObsidian"},"content":"                        assertValidId(id);","lastModifiedDate":"2024-01-24"},{"lineNumber":85,"author":{"gitId":"ReflectiveObsidian"},"content":"                        System.out.println(\"\\t\"","lastModifiedDate":"2024-01-24"},{"lineNumber":86,"author":{"gitId":"ReflectiveObsidian"},"content":"                                + \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"ReflectiveObsidian"},"content":"                                + \"\\t\\t\"","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"ReflectiveObsidian"},"content":"                                + list.get(id).toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":89,"author":{"gitId":"ReflectiveObsidian"},"content":"                        list.remove(id);","lastModifiedDate":"2024-01-24"},{"lineNumber":90,"author":{"gitId":"ReflectiveObsidian"},"content":"                    } else if (parameters[0].equals(\"todo\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":91,"author":{"gitId":"ReflectiveObsidian"},"content":"                        String description \u003d String.join(","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"ReflectiveObsidian"},"content":"                                \" \",","lastModifiedDate":"2024-01-24"},{"lineNumber":93,"author":{"gitId":"ReflectiveObsidian"},"content":"                                Arrays.copyOfRange(parameters, 1, parameters.length)","lastModifiedDate":"2024-01-24"},{"lineNumber":94,"author":{"gitId":"ReflectiveObsidian"},"content":"                        );","lastModifiedDate":"2024-01-24"},{"lineNumber":95,"author":{"gitId":"ReflectiveObsidian"},"content":"                        if (description.equals(\"\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":96,"author":{"gitId":"ReflectiveObsidian"},"content":"                            throw new DukeException(","lastModifiedDate":"2024-01-24"},{"lineNumber":97,"author":{"gitId":"ReflectiveObsidian"},"content":"                                    \"The description of a todo cannot be empty. Add the description after \u0027todo\u0027.\"","lastModifiedDate":"2024-01-24"},{"lineNumber":98,"author":{"gitId":"ReflectiveObsidian"},"content":"                            );","lastModifiedDate":"2024-01-24"},{"lineNumber":99,"author":{"gitId":"ReflectiveObsidian"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":100,"author":{"gitId":"ReflectiveObsidian"},"content":"                        list.add(new ToDo(description));","lastModifiedDate":"2024-01-24"},{"lineNumber":101,"author":{"gitId":"ReflectiveObsidian"},"content":"                        added_task \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":102,"author":{"gitId":"ReflectiveObsidian"},"content":"                    } else if (parameters[0].equals(\"deadline\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":103,"author":{"gitId":"ReflectiveObsidian"},"content":"                        int descEnd \u003d findCommand(parameters, \"/by\");","lastModifiedDate":"2024-01-24"},{"lineNumber":104,"author":{"gitId":"ReflectiveObsidian"},"content":"                        if (descEnd !\u003d -1){","lastModifiedDate":"2024-01-24"},{"lineNumber":105,"author":{"gitId":"ReflectiveObsidian"},"content":"                            String description \u003d String.join(\" \",","lastModifiedDate":"2024-01-24"},{"lineNumber":106,"author":{"gitId":"ReflectiveObsidian"},"content":"                                    Arrays.copyOfRange(parameters, 1, descEnd));","lastModifiedDate":"2024-01-24"},{"lineNumber":107,"author":{"gitId":"ReflectiveObsidian"},"content":"                            if (description.equals(\"\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":108,"author":{"gitId":"ReflectiveObsidian"},"content":"                                throw new DukeException(","lastModifiedDate":"2024-01-24"},{"lineNumber":109,"author":{"gitId":"ReflectiveObsidian"},"content":"                                        \"The description of a deadline cannot be empty. \" +","lastModifiedDate":"2024-01-24"},{"lineNumber":110,"author":{"gitId":"ReflectiveObsidian"},"content":"                                                \"Add the description after \u0027deadline\u0027.\"","lastModifiedDate":"2024-01-24"},{"lineNumber":111,"author":{"gitId":"ReflectiveObsidian"},"content":"                                );","lastModifiedDate":"2024-01-24"},{"lineNumber":112,"author":{"gitId":"ReflectiveObsidian"},"content":"                            }","lastModifiedDate":"2024-01-24"},{"lineNumber":113,"author":{"gitId":"ReflectiveObsidian"},"content":"                            list.add(new Deadline(","lastModifiedDate":"2024-01-24"},{"lineNumber":114,"author":{"gitId":"ReflectiveObsidian"},"content":"                                    description,","lastModifiedDate":"2024-01-24"},{"lineNumber":115,"author":{"gitId":"ReflectiveObsidian"},"content":"                                    String.join(\" \",","lastModifiedDate":"2024-01-24"},{"lineNumber":116,"author":{"gitId":"ReflectiveObsidian"},"content":"                                            Arrays.copyOfRange(parameters, descEnd + 1, parameters.length))","lastModifiedDate":"2024-01-24"},{"lineNumber":117,"author":{"gitId":"ReflectiveObsidian"},"content":"                            ));","lastModifiedDate":"2024-01-24"},{"lineNumber":118,"author":{"gitId":"ReflectiveObsidian"},"content":"                            added_task \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":119,"author":{"gitId":"ReflectiveObsidian"},"content":"                        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":120,"author":{"gitId":"ReflectiveObsidian"},"content":"                            throw new DukeException(\"Incomplete Command. Add deadline using \u0027/by\u0027.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":121,"author":{"gitId":"ReflectiveObsidian"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":122,"author":{"gitId":"ReflectiveObsidian"},"content":"                    } else if (parameters[0].equals(\"event\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":123,"author":{"gitId":"ReflectiveObsidian"},"content":"                        int fromID \u003d findCommand(parameters, \"/from\");","lastModifiedDate":"2024-01-24"},{"lineNumber":124,"author":{"gitId":"ReflectiveObsidian"},"content":"                        int toID \u003d findCommand(parameters, \"/to\");","lastModifiedDate":"2024-01-24"},{"lineNumber":125,"author":{"gitId":"ReflectiveObsidian"},"content":"                        if (fromID !\u003d -1 \u0026\u0026 toID !\u003d -1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":126,"author":{"gitId":"ReflectiveObsidian"},"content":"                            String description \u003d String.join(","lastModifiedDate":"2024-01-24"},{"lineNumber":127,"author":{"gitId":"ReflectiveObsidian"},"content":"                                    \" \", Arrays.copyOfRange(parameters, 1, (fromID \u003c toID ? fromID : toID))","lastModifiedDate":"2024-01-24"},{"lineNumber":128,"author":{"gitId":"ReflectiveObsidian"},"content":"                            );","lastModifiedDate":"2024-01-24"},{"lineNumber":129,"author":{"gitId":"ReflectiveObsidian"},"content":"                            if (description.equals(\"\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":130,"author":{"gitId":"ReflectiveObsidian"},"content":"                                throw new DukeException(","lastModifiedDate":"2024-01-24"},{"lineNumber":131,"author":{"gitId":"ReflectiveObsidian"},"content":"                                        \"The description of a event cannot be empty. \" +","lastModifiedDate":"2024-01-24"},{"lineNumber":132,"author":{"gitId":"ReflectiveObsidian"},"content":"                                                \"Add the description after \u0027event\u0027.\"","lastModifiedDate":"2024-01-24"},{"lineNumber":133,"author":{"gitId":"ReflectiveObsidian"},"content":"                                );","lastModifiedDate":"2024-01-24"},{"lineNumber":134,"author":{"gitId":"ReflectiveObsidian"},"content":"                            }","lastModifiedDate":"2024-01-24"},{"lineNumber":135,"author":{"gitId":"ReflectiveObsidian"},"content":"                            if (fromID \u003c toID) {","lastModifiedDate":"2024-01-24"},{"lineNumber":136,"author":{"gitId":"ReflectiveObsidian"},"content":"                                list.add( new Event(","lastModifiedDate":"2024-01-24"},{"lineNumber":137,"author":{"gitId":"ReflectiveObsidian"},"content":"                                        description,","lastModifiedDate":"2024-01-24"},{"lineNumber":138,"author":{"gitId":"ReflectiveObsidian"},"content":"                                        String.join(\" \", Arrays.copyOfRange(parameters, fromID + 1, toID)),","lastModifiedDate":"2024-01-24"},{"lineNumber":139,"author":{"gitId":"ReflectiveObsidian"},"content":"                                        String.join(\" \",","lastModifiedDate":"2024-01-24"},{"lineNumber":140,"author":{"gitId":"ReflectiveObsidian"},"content":"                                                Arrays.copyOfRange(parameters, toID + 1, parameters.length))","lastModifiedDate":"2024-01-24"},{"lineNumber":141,"author":{"gitId":"ReflectiveObsidian"},"content":"                                ));","lastModifiedDate":"2024-01-24"},{"lineNumber":142,"author":{"gitId":"ReflectiveObsidian"},"content":"                            } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":143,"author":{"gitId":"ReflectiveObsidian"},"content":"                                list.add( new Event(","lastModifiedDate":"2024-01-24"},{"lineNumber":144,"author":{"gitId":"ReflectiveObsidian"},"content":"                                        description,","lastModifiedDate":"2024-01-24"},{"lineNumber":145,"author":{"gitId":"ReflectiveObsidian"},"content":"                                        String.join(\" \",","lastModifiedDate":"2024-01-24"},{"lineNumber":146,"author":{"gitId":"ReflectiveObsidian"},"content":"                                                Arrays.copyOfRange(parameters, fromID + 1, parameters.length)),","lastModifiedDate":"2024-01-24"},{"lineNumber":147,"author":{"gitId":"ReflectiveObsidian"},"content":"                                        String.join(\" \",","lastModifiedDate":"2024-01-24"},{"lineNumber":148,"author":{"gitId":"ReflectiveObsidian"},"content":"                                                Arrays.copyOfRange(parameters, toID + 1, fromID))","lastModifiedDate":"2024-01-24"},{"lineNumber":149,"author":{"gitId":"ReflectiveObsidian"},"content":"                                ));","lastModifiedDate":"2024-01-24"},{"lineNumber":150,"author":{"gitId":"ReflectiveObsidian"},"content":"                            }","lastModifiedDate":"2024-01-24"},{"lineNumber":151,"author":{"gitId":"ReflectiveObsidian"},"content":"                        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":152,"author":{"gitId":"ReflectiveObsidian"},"content":"                            throw new DukeException(\"Incomplete Command. \" +","lastModifiedDate":"2024-01-24"},{"lineNumber":153,"author":{"gitId":"ReflectiveObsidian"},"content":"                                    \"Add start and end dates using \u0027/from\u0027 and \u0027/to\u0027.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":154,"author":{"gitId":"ReflectiveObsidian"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":155,"author":{"gitId":"ReflectiveObsidian"},"content":"                        added_task \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":156,"author":{"gitId":"ReflectiveObsidian"},"content":"                    } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":157,"author":{"gitId":"ReflectiveObsidian"},"content":"                        throw new DukeException(\"Unknown Command.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":158,"author":{"gitId":"ReflectiveObsidian"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":159,"author":{"gitId":"ReflectiveObsidian"},"content":"                    if (added_task) {","lastModifiedDate":"2024-01-24"},{"lineNumber":160,"author":{"gitId":"ReflectiveObsidian"},"content":"                        System.out.println(taskAddedAcknowledgement);","lastModifiedDate":"2024-01-24"},{"lineNumber":161,"author":{"gitId":"ReflectiveObsidian"},"content":"                        System.out.println(\"\\t\\t\" + list.get(list.size()-1).toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":162,"author":{"gitId":"ReflectiveObsidian"},"content":"                        System.out.println(\"\\t\" + \"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":163,"author":{"gitId":"ReflectiveObsidian"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":164,"author":{"gitId":"ReflectiveObsidian"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":165,"author":{"gitId":"ReflectiveObsidian"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":166,"author":{"gitId":"ReflectiveObsidian"},"content":"                System.out.println(\"\\t\" + e);","lastModifiedDate":"2024-01-24"},{"lineNumber":167,"author":{"gitId":"ReflectiveObsidian"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":168,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":169,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":170,"author":{"gitId":"ReflectiveObsidian"},"content":"            System.out.println(this.horizontal_line);","lastModifiedDate":"2024-01-24"},{"lineNumber":171,"author":{"gitId":"ReflectiveObsidian"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":172,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":173,"author":{"gitId":"ReflectiveObsidian"},"content":"        System.out.println(this.farewell);","lastModifiedDate":"2024-01-24"},{"lineNumber":174,"author":{"gitId":"ReflectiveObsidian"},"content":"        System.out.println(this.horizontal_line);","lastModifiedDate":"2024-01-24"},{"lineNumber":175,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":176,"author":{"gitId":"ReflectiveObsidian"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ReflectiveObsidian":176}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ReflectiveObsidian"},"content":"    enum Status {","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ReflectiveObsidian"},"content":"        DONE,","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ReflectiveObsidian"},"content":"        NOT_DONE","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ReflectiveObsidian"},"content":"    protected String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ReflectiveObsidian"},"content":"    protected Status status;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ReflectiveObsidian"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ReflectiveObsidian"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ReflectiveObsidian"},"content":"        this.status \u003d Status.NOT_DONE;","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"ReflectiveObsidian"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"ReflectiveObsidian"},"content":"        return (status \u003d\u003d Status.DONE ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"ReflectiveObsidian"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"ReflectiveObsidian"},"content":"        return description;","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"ReflectiveObsidian"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"ReflectiveObsidian"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"ReflectiveObsidian"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"ReflectiveObsidian"},"content":"        this.status \u003d (done ? Status.DONE : Status.NOT_DONE);","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"ReflectiveObsidian"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"ReflectiveObsidian"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ReflectiveObsidian":31}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"public class ToDo extends Task{","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ReflectiveObsidian"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ReflectiveObsidian"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ReflectiveObsidian"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ReflectiveObsidian"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ReflectiveObsidian"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ReflectiveObsidian"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ReflectiveObsidian"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ReflectiveObsidian":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ReflectiveObsidian"},"content":"todo borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ReflectiveObsidian"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ReflectiveObsidian"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ReflectiveObsidian"},"content":"event project meeting 2 /to 4pm /from Mon 2pm","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ReflectiveObsidian"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ReflectiveObsidian"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ReflectiveObsidian"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ReflectiveObsidian"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ReflectiveObsidian"},"content":"delete 1","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ReflectiveObsidian"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ReflectiveObsidian"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ReflectiveObsidian":11}}]
