[{"path":"src/main/java/Hari.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HM33-Stu"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"HM33-Stu"},"content":"import java.io.File;","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"HM33-Stu"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"HM33-Stu"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"HM33-Stu"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"HM33-Stu"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"HM33-Stu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"HM33-Stu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"HM33-Stu"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"HM33-Stu"},"content":" * Class representing a task management chatbot named Hari.","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"HM33-Stu"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"HM33-Stu"},"content":"class HandlerBot {","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"HM33-Stu"},"content":"    private static final String FOLDER_PATH \u003d \".\" + File.separator + \"data\";","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"HM33-Stu"},"content":"    private static final String FILE_PATH \u003d FOLDER_PATH + File.separator + \"hari.txt\";","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"HM33-Stu"},"content":"     * Main class for the Hari chatbot.","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"HM33-Stu"},"content":"    public Task[] arrTasks; // To store tasks created by the user for easy retrieval and listing","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"HM33-Stu"},"content":"    public int counterTasks; // Counter for assumption that there are no more than 100 tasks","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"HM33-Stu"},"content":"    // Class object","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"HM33-Stu"},"content":"    public HandlerBot() {","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"HM33-Stu"},"content":"        arrTasks \u003d new Task[100]; // Assumption that there are no more than 100 tasks","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"HM33-Stu"},"content":"        counterTasks \u003d 0; // Counter for the number of tasks","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"HM33-Stu"},"content":"    // Class for task (called Task)","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"HM33-Stu"},"content":"    public class Task {","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"HM33-Stu"},"content":"        private String summary; // Description of tasks","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"HM33-Stu"},"content":"        private boolean completion; // To check if a task is or is not completed","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"HM33-Stu"},"content":"        private String taskType; // To identify the type of task","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"HM33-Stu"},"content":"        private LocalDate deadline; // Add LocalDate for deadline","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"HM33-Stu"},"content":"        private String timerStart; // Start time for Event tasks","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"HM33-Stu"},"content":"        private String timerEnd; // End time for Event tasks","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"HM33-Stu"},"content":"        private String deadlineStat; // Deadline for Deadline tasks","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"HM33-Stu"},"content":"        // Constructor for To Do tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"HM33-Stu"},"content":"        public Task(String summary) {","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"HM33-Stu"},"content":"            this.summary \u003d summary;","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"HM33-Stu"},"content":"            this.completion \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"HM33-Stu"},"content":"            this.taskType \u003d \"T\";","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"HM33-Stu"},"content":"            this.deadline \u003d null;","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"HM33-Stu"},"content":"            this.timerStart \u003d null;","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"HM33-Stu"},"content":"            this.timerEnd \u003d null;","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"HM33-Stu"},"content":"        // Constructor for Deadline tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"HM33-Stu"},"content":"        public Task(String summary, String deadlineStat) {","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"HM33-Stu"},"content":"            this.summary \u003d summary;","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"HM33-Stu"},"content":"            this.completion \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"HM33-Stu"},"content":"            this.taskType \u003d \"D\";","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"HM33-Stu"},"content":"            this.deadline \u003d parseDeadline(deadlineStat);","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"HM33-Stu"},"content":"            this.timerStart \u003d null;","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"HM33-Stu"},"content":"            this.timerEnd \u003d null;","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"HM33-Stu"},"content":"        // Constructor for Event tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"HM33-Stu"},"content":"        public Task(String summary, String startTime, String endTime) {","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"HM33-Stu"},"content":"            this.summary \u003d summary;","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"HM33-Stu"},"content":"            this.completion \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"HM33-Stu"},"content":"            this.taskType \u003d \"E\";","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"HM33-Stu"},"content":"            this.deadline \u003d null;","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"HM33-Stu"},"content":"            this.timerStart \u003d startTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"HM33-Stu"},"content":"            this.timerEnd \u003d endTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"HM33-Stu"},"content":"        // Additional method to parse deadline string into LocalDate","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"HM33-Stu"},"content":"        private LocalDate parseDeadline(String deadlineStat) {","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"HM33-Stu"},"content":"            try {","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"HM33-Stu"},"content":"                // Parse the date string into a LocalDate object","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"HM33-Stu"},"content":"                return LocalDate.parse(deadlineStat, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"HM33-Stu"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"HM33-Stu"},"content":"                // Handle parsing exception (invalid date format)","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"HM33-Stu"},"content":"                System.out.println(\"Error when parsing deadline. Please use the format yyyy-MM-dd.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"HM33-Stu"},"content":"                return null;","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"HM33-Stu"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"HM33-Stu"},"content":"        // To mark as completed","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"HM33-Stu"},"content":"        public void markAsComplete() {","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"HM33-Stu"},"content":"            this.completion \u003d true;","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"HM33-Stu"},"content":"        // To unmark completed tasks","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"HM33-Stu"},"content":"        public void markAsIncomplete() {","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"HM33-Stu"},"content":"            this.completion \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"HM33-Stu"},"content":"        // For displaying the X or [ ] depending on completion status","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"HM33-Stu"},"content":"        public String getStatus() {","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"HM33-Stu"},"content":"            return (completion ? \"X\" : \" \"); // To display the X or [ ]","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"HM33-Stu"},"content":"        // For displaying task description","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"HM33-Stu"},"content":"        public String getDescription() {","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"HM33-Stu"},"content":"            return summary;","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"HM33-Stu"},"content":"        // For displaying the task type","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"HM33-Stu"},"content":"        public String getTaskType() {","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"HM33-Stu"},"content":"            return taskType;","lastModifiedDate":"2024-02-06"},{"lineNumber":105,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"HM33-Stu"},"content":"        // For displaying start time of event tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"HM33-Stu"},"content":"        public String getStartTime() {","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"HM33-Stu"},"content":"            return timerStart;","lastModifiedDate":"2024-02-06"},{"lineNumber":110,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"HM33-Stu"},"content":"        // For displaying end time of event tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"HM33-Stu"},"content":"        public String getEndTime() {","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"HM33-Stu"},"content":"            return timerEnd;","lastModifiedDate":"2024-02-06"},{"lineNumber":115,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":116,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"HM33-Stu"},"content":"        // For displaying deadline of deadline tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"HM33-Stu"},"content":"        public String getDeadline() {","lastModifiedDate":"2024-02-07"},{"lineNumber":119,"author":{"gitId":"HM33-Stu"},"content":"            return deadlineStat;","lastModifiedDate":"2024-02-06"},{"lineNumber":120,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"HM33-Stu"},"content":"        // Additional method to check if task description is empty","lastModifiedDate":"2024-01-29"},{"lineNumber":123,"author":{"gitId":"HM33-Stu"},"content":"        public boolean isDescriptionEmpty() {","lastModifiedDate":"2024-02-07"},{"lineNumber":124,"author":{"gitId":"HM33-Stu"},"content":"            return summary.trim().isEmpty();","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"HM33-Stu"},"content":"        // Additional method to display deadline in a different format","lastModifiedDate":"2024-02-06"},{"lineNumber":128,"author":{"gitId":"HM33-Stu"},"content":"        public String formattedDeadline() {","lastModifiedDate":"2024-02-06"},{"lineNumber":129,"author":{"gitId":"HM33-Stu"},"content":"            return deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":130,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":131,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":132,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":133,"author":{"gitId":"HM33-Stu"},"content":"    // Task finder","lastModifiedDate":"2024-02-06"},{"lineNumber":134,"author":{"gitId":"HM33-Stu"},"content":"    public void findTask(String keyword) {","lastModifiedDate":"2024-02-06"},{"lineNumber":135,"author":{"gitId":"HM33-Stu"},"content":"        boolean found \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":136,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-06"},{"lineNumber":137,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(\" Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-06"},{"lineNumber":138,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":139,"author":{"gitId":"HM33-Stu"},"content":"        for (int i \u003d 0; i \u003c counterTasks; i++) {","lastModifiedDate":"2024-02-06"},{"lineNumber":140,"author":{"gitId":"HM33-Stu"},"content":"            if (arrTasks[i].getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2024-02-07"},{"lineNumber":141,"author":{"gitId":"HM33-Stu"},"content":"                System.out.println(\" \" + (i + 1) + \".\" + arrTasks[i].getDescription() + \"  \" +","lastModifiedDate":"2024-02-07"},{"lineNumber":142,"author":{"gitId":"HM33-Stu"},"content":"                        (arrTasks[i].getTaskType().equals(\"E\") ?","lastModifiedDate":"2024-02-07"},{"lineNumber":143,"author":{"gitId":"HM33-Stu"},"content":"                                \" (from: \" + arrTasks[i].getStartTime() + \" to: \" + arrTasks[i].getEndTime() + \")\" :","lastModifiedDate":"2024-02-07"},{"lineNumber":144,"author":{"gitId":"HM33-Stu"},"content":"                                (arrTasks[i].getTaskType().equals(\"D\") ? \" (by: \" + arrTasks[i].getDeadline() + \")\" : \"\")));","lastModifiedDate":"2024-02-07"},{"lineNumber":145,"author":{"gitId":"HM33-Stu"},"content":"                found \u003d true;","lastModifiedDate":"2024-02-06"},{"lineNumber":146,"author":{"gitId":"HM33-Stu"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":147,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":148,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":149,"author":{"gitId":"HM33-Stu"},"content":"        if (!found) {","lastModifiedDate":"2024-02-06"},{"lineNumber":150,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\" No matching tasks found.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":151,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":152,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":153,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-06"},{"lineNumber":154,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":155,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":156,"author":{"gitId":"HM33-Stu"},"content":"    // Function to save tasks to a file","lastModifiedDate":"2024-02-05"},{"lineNumber":157,"author":{"gitId":"HM33-Stu"},"content":"    private void saveTasksToFile() {","lastModifiedDate":"2024-02-05"},{"lineNumber":158,"author":{"gitId":"HM33-Stu"},"content":"        try (FileWriter writer \u003d new FileWriter(FILE_PATH)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":159,"author":{"gitId":"HM33-Stu"},"content":"            for (int i \u003d 0; i \u003c counterTasks; i++) {","lastModifiedDate":"2024-02-06"},{"lineNumber":160,"author":{"gitId":"HM33-Stu"},"content":"                Task task \u003d arrTasks[i];","lastModifiedDate":"2024-02-06"},{"lineNumber":161,"author":{"gitId":"HM33-Stu"},"content":"                writer.write(task.getTaskType() + \" | \" + (task.completion ? \"1\" : \"0\") + \" | \" +","lastModifiedDate":"2024-02-07"},{"lineNumber":162,"author":{"gitId":"HM33-Stu"},"content":"                        task.getDescription() + \" | \" +","lastModifiedDate":"2024-02-07"},{"lineNumber":163,"author":{"gitId":"HM33-Stu"},"content":"                        (task.getTaskType().equals(\"D\") ? task.getDeadline() : \"\") + \" | \" +","lastModifiedDate":"2024-02-07"},{"lineNumber":164,"author":{"gitId":"HM33-Stu"},"content":"                        (task.getTaskType().equals(\"E\") ? task.getStartTime() + \" to \" + task.getEndTime() : \"\") + \"\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":165,"author":{"gitId":"HM33-Stu"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":166,"author":{"gitId":"HM33-Stu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":167,"author":{"gitId":"HM33-Stu"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-05"},{"lineNumber":168,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":169,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":170,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":171,"author":{"gitId":"HM33-Stu"},"content":"    // Function to load data from the file","lastModifiedDate":"2024-02-05"},{"lineNumber":172,"author":{"gitId":"HM33-Stu"},"content":"    public void loadFromFile() {","lastModifiedDate":"2024-02-05"},{"lineNumber":173,"author":{"gitId":"HM33-Stu"},"content":"        File folder \u003d new File(FOLDER_PATH);","lastModifiedDate":"2024-02-05"},{"lineNumber":174,"author":{"gitId":"HM33-Stu"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-05"},{"lineNumber":175,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":176,"author":{"gitId":"HM33-Stu"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":177,"author":{"gitId":"HM33-Stu"},"content":"            // Create the folder if it doesn\u0027t exist","lastModifiedDate":"2024-02-05"},{"lineNumber":178,"author":{"gitId":"HM33-Stu"},"content":"            if (!folder.exists()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":179,"author":{"gitId":"HM33-Stu"},"content":"                if (folder.mkdirs()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":180,"author":{"gitId":"HM33-Stu"},"content":"                    System.out.println(\"Data folder created.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":181,"author":{"gitId":"HM33-Stu"},"content":"                } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":182,"author":{"gitId":"HM33-Stu"},"content":"                    System.out.println(\"Failed to create data folder.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":183,"author":{"gitId":"HM33-Stu"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":184,"author":{"gitId":"HM33-Stu"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":185,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":186,"author":{"gitId":"HM33-Stu"},"content":"            // Create the file if it doesn\u0027t exist","lastModifiedDate":"2024-02-05"},{"lineNumber":187,"author":{"gitId":"HM33-Stu"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":188,"author":{"gitId":"HM33-Stu"},"content":"                if (file.createNewFile()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":189,"author":{"gitId":"HM33-Stu"},"content":"                    System.out.println(\"Data file created.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":190,"author":{"gitId":"HM33-Stu"},"content":"                } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":191,"author":{"gitId":"HM33-Stu"},"content":"                    System.out.println(\"Failed to create data file.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":192,"author":{"gitId":"HM33-Stu"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":193,"author":{"gitId":"HM33-Stu"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":194,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":195,"author":{"gitId":"HM33-Stu"},"content":"            // Load tasks from the file","lastModifiedDate":"2024-02-05"},{"lineNumber":196,"author":{"gitId":"HM33-Stu"},"content":"            loadTasksFromFile();","lastModifiedDate":"2024-02-05"},{"lineNumber":197,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":198,"author":{"gitId":"HM33-Stu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":199,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"Error handling file operations: \" + e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":200,"author":{"gitId":"HM33-Stu"},"content":"        } catch (CorruptedDataException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":201,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"Error loading data from file. The file may be corrupted.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":202,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":203,"author":{"gitId":"HM33-Stu"},"content":"            // Handle the corrupted file situation (prompt the user, take corrective actions, etc.)","lastModifiedDate":"2024-02-05"},{"lineNumber":204,"author":{"gitId":"HM33-Stu"},"content":"            // For example, you may choose to delete the corrupted file and create a new one.","lastModifiedDate":"2024-02-05"},{"lineNumber":205,"author":{"gitId":"HM33-Stu"},"content":"            if (file.exists() \u0026\u0026 file.delete()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":206,"author":{"gitId":"HM33-Stu"},"content":"                System.out.println(\"Corrupted file deleted. A new file will be created.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":207,"author":{"gitId":"HM33-Stu"},"content":"                loadFromFile(); // Retry loading from file","lastModifiedDate":"2024-02-05"},{"lineNumber":208,"author":{"gitId":"HM33-Stu"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":209,"author":{"gitId":"HM33-Stu"},"content":"                System.out.println(\"Failed to delete corrupted file. Please create a new file manually.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":210,"author":{"gitId":"HM33-Stu"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":211,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":212,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":213,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":214,"author":{"gitId":"HM33-Stu"},"content":"    // Function to load tasks from the file","lastModifiedDate":"2024-02-05"},{"lineNumber":215,"author":{"gitId":"HM33-Stu"},"content":"    private void loadTasksFromFile() throws CorruptedDataException {","lastModifiedDate":"2024-02-05"},{"lineNumber":216,"author":{"gitId":"HM33-Stu"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH))) {","lastModifiedDate":"2024-02-05"},{"lineNumber":217,"author":{"gitId":"HM33-Stu"},"content":"            String line;","lastModifiedDate":"2024-02-05"},{"lineNumber":218,"author":{"gitId":"HM33-Stu"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-05"},{"lineNumber":219,"author":{"gitId":"HM33-Stu"},"content":"                String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-02-05"},{"lineNumber":220,"author":{"gitId":"HM33-Stu"},"content":"                String type \u003d parts[0];","lastModifiedDate":"2024-02-05"},{"lineNumber":221,"author":{"gitId":"HM33-Stu"},"content":"                boolean completion \u003d parts[1].equals(\"1\");","lastModifiedDate":"2024-02-05"},{"lineNumber":222,"author":{"gitId":"HM33-Stu"},"content":"                String summary \u003d parts[2];","lastModifiedDate":"2024-02-05"},{"lineNumber":223,"author":{"gitId":"HM33-Stu"},"content":"                Task task;","lastModifiedDate":"2024-02-06"},{"lineNumber":224,"author":{"gitId":"HM33-Stu"},"content":"                if (type.equals(\"T\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":225,"author":{"gitId":"HM33-Stu"},"content":"                    task \u003d new Task(summary);","lastModifiedDate":"2024-02-06"},{"lineNumber":226,"author":{"gitId":"HM33-Stu"},"content":"                } else if (type.equals(\"D\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":227,"author":{"gitId":"HM33-Stu"},"content":"                    task \u003d new Task(summary, parts[3]);","lastModifiedDate":"2024-02-06"},{"lineNumber":228,"author":{"gitId":"HM33-Stu"},"content":"                } else if (type.equals(\"E\")) {","lastModifiedDate":"2024-02-05"},{"lineNumber":229,"author":{"gitId":"HM33-Stu"},"content":"                    task \u003d new Task(summary, parts[3], parts[4]);","lastModifiedDate":"2024-02-06"},{"lineNumber":230,"author":{"gitId":"HM33-Stu"},"content":"                } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":231,"author":{"gitId":"HM33-Stu"},"content":"                    // Handle unrecognized task type","lastModifiedDate":"2024-02-05"},{"lineNumber":232,"author":{"gitId":"HM33-Stu"},"content":"                    throw new CorruptedDataException(\"Unrecognized task type in the file.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":233,"author":{"gitId":"HM33-Stu"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":234,"author":{"gitId":"HM33-Stu"},"content":"                if (completion) {","lastModifiedDate":"2024-02-05"},{"lineNumber":235,"author":{"gitId":"HM33-Stu"},"content":"                    task.markAsComplete();","lastModifiedDate":"2024-02-07"},{"lineNumber":236,"author":{"gitId":"HM33-Stu"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":237,"author":{"gitId":"HM33-Stu"},"content":"                arrTasks[counterTasks++] \u003d task;","lastModifiedDate":"2024-02-06"},{"lineNumber":238,"author":{"gitId":"HM33-Stu"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":239,"author":{"gitId":"HM33-Stu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":240,"author":{"gitId":"HM33-Stu"},"content":"            // Handle file not found or other IO exceptions","lastModifiedDate":"2024-02-05"},{"lineNumber":241,"author":{"gitId":"HM33-Stu"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-05"},{"lineNumber":242,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":243,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":244,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":245,"author":{"gitId":"HM33-Stu"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":246,"author":{"gitId":"HM33-Stu"},"content":"     * Custom exception class for handling corrupted data during file operations.","lastModifiedDate":"2024-02-06"},{"lineNumber":247,"author":{"gitId":"HM33-Stu"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":248,"author":{"gitId":"HM33-Stu"},"content":"    class CorruptedDataException extends Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":249,"author":{"gitId":"HM33-Stu"},"content":"        public CorruptedDataException(String message) {","lastModifiedDate":"2024-02-05"},{"lineNumber":250,"author":{"gitId":"HM33-Stu"},"content":"            super(message);","lastModifiedDate":"2024-02-05"},{"lineNumber":251,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":252,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":253,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":254,"author":{"gitId":"HM33-Stu"},"content":"    // Function that handles the greeting message","lastModifiedDate":"2024-01-25"},{"lineNumber":255,"author":{"gitId":"HM33-Stu"},"content":"    public void messageGreeting() {","lastModifiedDate":"2024-02-06"},{"lineNumber":256,"author":{"gitId":"HM33-Stu"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":257,"author":{"gitId":"HM33-Stu"},"content":"            // Load tasks from file when the chatbot starts up","lastModifiedDate":"2024-02-05"},{"lineNumber":258,"author":{"gitId":"HM33-Stu"},"content":"            loadTasksFromFile();","lastModifiedDate":"2024-02-05"},{"lineNumber":259,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-25"},{"lineNumber":260,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\" Hey! I\u0027m Hari!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":261,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\" How may I be of service today?\");","lastModifiedDate":"2024-01-25"},{"lineNumber":262,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-25"},{"lineNumber":263,"author":{"gitId":"HM33-Stu"},"content":"        } catch (CorruptedDataException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":264,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"Error loading data from file. File may be corrupted.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":265,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":266,"author":{"gitId":"HM33-Stu"},"content":"            // Handle the corrupted file situation","lastModifiedDate":"2024-02-05"},{"lineNumber":267,"author":{"gitId":"HM33-Stu"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-05"},{"lineNumber":268,"author":{"gitId":"HM33-Stu"},"content":"            if (file.exists() \u0026\u0026 file.delete()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":269,"author":{"gitId":"HM33-Stu"},"content":"                System.out.println(\"Corrupted file deleted. A new file will be created.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":270,"author":{"gitId":"HM33-Stu"},"content":"                messageGreeting(); // Retry loading from file","lastModifiedDate":"2024-02-06"},{"lineNumber":271,"author":{"gitId":"HM33-Stu"},"content":"            } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":272,"author":{"gitId":"HM33-Stu"},"content":"                System.out.println(\"Failed to delete corrupted file. Please create new file manually.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":273,"author":{"gitId":"HM33-Stu"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":274,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":275,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":276,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":277,"author":{"gitId":"HM33-Stu"},"content":"    // Function that handles the exit message","lastModifiedDate":"2024-01-25"},{"lineNumber":278,"author":{"gitId":"HM33-Stu"},"content":"    public void messageFarewell() {","lastModifiedDate":"2024-02-06"},{"lineNumber":279,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-25"},{"lineNumber":280,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(\"Au revoir! Till we meet again!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":281,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-25"},{"lineNumber":282,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":283,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":284,"author":{"gitId":"HM33-Stu"},"content":"    // Function that handles and echoes user input (this is maintained as not all inputs are tasks)","lastModifiedDate":"2024-01-25"},{"lineNumber":285,"author":{"gitId":"HM33-Stu"},"content":"    public void userEchoedInput(String readerInput) {","lastModifiedDate":"2024-02-06"},{"lineNumber":286,"author":{"gitId":"HM33-Stu"},"content":"        if (readerInput.equalsIgnoreCase(\"list\")) // To list out tasks","lastModifiedDate":"2024-02-06"},{"lineNumber":287,"author":{"gitId":"HM33-Stu"},"content":"        {","lastModifiedDate":"2024-01-25"},{"lineNumber":288,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-25"},{"lineNumber":289,"author":{"gitId":"HM33-Stu"},"content":"            listTasks();","lastModifiedDate":"2024-02-07"},{"lineNumber":290,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-25"},{"lineNumber":291,"author":{"gitId":"HM33-Stu"},"content":"        } else if (readerInput.equalsIgnoreCase(\"bye\")) // To exit the chatbot program","lastModifiedDate":"2024-02-06"},{"lineNumber":292,"author":{"gitId":"HM33-Stu"},"content":"        {","lastModifiedDate":"2024-01-25"},{"lineNumber":293,"author":{"gitId":"HM33-Stu"},"content":"            messageFarewell();","lastModifiedDate":"2024-02-06"},{"lineNumber":294,"author":{"gitId":"HM33-Stu"},"content":"        } else // Anything else, is assumed to be a new task to add","lastModifiedDate":"2024-01-28"},{"lineNumber":295,"author":{"gitId":"HM33-Stu"},"content":"        {","lastModifiedDate":"2024-01-25"},{"lineNumber":296,"author":{"gitId":"HM33-Stu"},"content":"            addTask(readerInput);","lastModifiedDate":"2024-02-07"},{"lineNumber":297,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":298,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":299,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":300,"author":{"gitId":"HM33-Stu"},"content":"    // Function to add tasks","lastModifiedDate":"2024-01-25"},{"lineNumber":301,"author":{"gitId":"HM33-Stu"},"content":"    // No modification done to userEchoedInput function as not all inputs are tasks","lastModifiedDate":"2024-02-06"},{"lineNumber":302,"author":{"gitId":"HM33-Stu"},"content":"    public void addTask(String taskings) {","lastModifiedDate":"2024-02-07"},{"lineNumber":303,"author":{"gitId":"HM33-Stu"},"content":"        // Display message based on the task type","lastModifiedDate":"2024-01-28"},{"lineNumber":304,"author":{"gitId":"HM33-Stu"},"content":"        if (taskings.startsWith(\"todo\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":305,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":306,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":307,"author":{"gitId":"HM33-Stu"},"content":"            arrTasks[counterTasks] \u003d new Task(taskings.substring(5).trim()); // 5 because of the word to do","lastModifiedDate":"2024-02-06"},{"lineNumber":308,"author":{"gitId":"HM33-Stu"},"content":"        } else if (taskings.startsWith(\"deadline\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":309,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":310,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":311,"author":{"gitId":"HM33-Stu"},"content":"            String[] parts \u003d taskings.substring(8).trim().split(\"/by\"); // 8 because of the word deadline","lastModifiedDate":"2024-01-28"},{"lineNumber":312,"author":{"gitId":"HM33-Stu"},"content":"            arrTasks[counterTasks] \u003d new Task(parts[0].trim(), parts[1].trim());","lastModifiedDate":"2024-02-06"},{"lineNumber":313,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"   \" + \"[\" + arrTasks[counterTasks].getTaskType() + \"]\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":314,"author":{"gitId":"HM33-Stu"},"content":"                    \"[\" + arrTasks[counterTasks].getStatus() + \"]\" + arrTasks[counterTasks].getDescription() +","lastModifiedDate":"2024-02-07"},{"lineNumber":315,"author":{"gitId":"HM33-Stu"},"content":"                    \" (by: \" + arrTasks[counterTasks].formattedDeadline() + \")\");","lastModifiedDate":"2024-02-06"},{"lineNumber":316,"author":{"gitId":"HM33-Stu"},"content":"        } else if (taskings.startsWith(\"event\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":317,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":318,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":319,"author":{"gitId":"HM33-Stu"},"content":"            String[] parts \u003d taskings.substring(5).trim().split(\"/from|/to\"); // 5 because of the word event","lastModifiedDate":"2024-01-28"},{"lineNumber":320,"author":{"gitId":"HM33-Stu"},"content":"            arrTasks[counterTasks] \u003d new Task(parts[0].trim(), parts[1].trim(), parts[2].trim());","lastModifiedDate":"2024-02-06"},{"lineNumber":321,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"   \" + \"[\" + arrTasks[counterTasks].getTaskType() + \"]\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":322,"author":{"gitId":"HM33-Stu"},"content":"                    \"[\" + arrTasks[counterTasks].getStatus() + \"]\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":323,"author":{"gitId":"HM33-Stu"},"content":"                    arrTasks[counterTasks].getDescription() +","lastModifiedDate":"2024-02-07"},{"lineNumber":324,"author":{"gitId":"HM33-Stu"},"content":"                    \" (from: \" + arrTasks[counterTasks].getStartTime() + \" to: \" + arrTasks[counterTasks].getEndTime() + \")\");","lastModifiedDate":"2024-02-07"},{"lineNumber":325,"author":{"gitId":"HM33-Stu"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":326,"author":{"gitId":"HM33-Stu"},"content":"            // Error handlings for missing task types","lastModifiedDate":"2024-02-06"},{"lineNumber":327,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":328,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\" SAD! Please start your task with \u0027todo\u0027, \u0027deadline\u0027, or \u0027event\u0027.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":329,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":330,"author":{"gitId":"HM33-Stu"},"content":"            return;","lastModifiedDate":"2024-01-29"},{"lineNumber":331,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":332,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":333,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(\" Now you have \" + counterTasks + \" task(s) in the list\");","lastModifiedDate":"2024-02-06"},{"lineNumber":334,"author":{"gitId":"HM33-Stu"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-25"},{"lineNumber":335,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":336,"author":{"gitId":"HM33-Stu"},"content":"        // Save tasks to file whenever the task list changes","lastModifiedDate":"2024-02-05"},{"lineNumber":337,"author":{"gitId":"HM33-Stu"},"content":"        saveTasksToFile();","lastModifiedDate":"2024-02-05"},{"lineNumber":338,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":339,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":340,"author":{"gitId":"HM33-Stu"},"content":"    // Function to display tasks","lastModifiedDate":"2024-01-25"},{"lineNumber":341,"author":{"gitId":"HM33-Stu"},"content":"    // No modification done to userEchoedInput function as not all inputs are tasks","lastModifiedDate":"2024-02-06"},{"lineNumber":342,"author":{"gitId":"HM33-Stu"},"content":"    public void listTasks() {","lastModifiedDate":"2024-02-07"},{"lineNumber":343,"author":{"gitId":"HM33-Stu"},"content":"        if (counterTasks \u003d\u003d 0) {","lastModifiedDate":"2024-02-06"},{"lineNumber":344,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-27"},{"lineNumber":345,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\" Your task list is empty. Add tasks by simply typing them in.\"); // If there are no tasks, a message to guide the user","lastModifiedDate":"2024-01-28"},{"lineNumber":346,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-27"},{"lineNumber":347,"author":{"gitId":"HM33-Stu"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":348,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-27"},{"lineNumber":349,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\" Here are your tasks:\"); // Display all tasks","lastModifiedDate":"2024-01-25"},{"lineNumber":350,"author":{"gitId":"HM33-Stu"},"content":"            for (int i \u003d 0; i \u003c counterTasks; i++) {","lastModifiedDate":"2024-02-06"},{"lineNumber":351,"author":{"gitId":"HM33-Stu"},"content":"                System.out.println(\" \" + (i + 1) + \". \" + \"[\" + arrTasks[i].getTaskType() + \"]\" + \"[\" + arrTasks[i].getStatus() + \"]\" + arrTasks[i].getDescription() +","lastModifiedDate":"2024-02-07"},{"lineNumber":352,"author":{"gitId":"HM33-Stu"},"content":"                        (arrTasks[i].getTaskType().equals(\"E\") ?","lastModifiedDate":"2024-02-07"},{"lineNumber":353,"author":{"gitId":"HM33-Stu"},"content":"                                \" (from: \" + arrTasks[i].getStartTime() + \" to: \" + arrTasks[i].getEndTime() + \")\" :","lastModifiedDate":"2024-02-07"},{"lineNumber":354,"author":{"gitId":"HM33-Stu"},"content":"                                (arrTasks[i].getTaskType().equals(\"D\") ? \" (by: \" + arrTasks[i].getDeadline() + \")\" : \"\")));","lastModifiedDate":"2024-02-07"},{"lineNumber":355,"author":{"gitId":"HM33-Stu"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":356,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-27"},{"lineNumber":357,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":358,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":359,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":360,"author":{"gitId":"HM33-Stu"},"content":"    // Function to mark task as completed","lastModifiedDate":"2024-02-06"},{"lineNumber":361,"author":{"gitId":"HM33-Stu"},"content":"    public void markAsComplete(int taskRecorder) {","lastModifiedDate":"2024-02-07"},{"lineNumber":362,"author":{"gitId":"HM33-Stu"},"content":"        if (taskRecorder \u003e 0 \u0026\u0026 taskRecorder \u003c\u003d counterTasks) // If there are tasks","lastModifiedDate":"2024-02-06"},{"lineNumber":363,"author":{"gitId":"HM33-Stu"},"content":"        {","lastModifiedDate":"2024-01-27"},{"lineNumber":364,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-27"},{"lineNumber":365,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\" Another one in the bag! Well done!\");","lastModifiedDate":"2024-01-27"},{"lineNumber":366,"author":{"gitId":"HM33-Stu"},"content":"            arrTasks[taskRecorder - 1].markAsComplete(); // Mark as complete","lastModifiedDate":"2024-02-07"},{"lineNumber":367,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"   \" + \"[\" + arrTasks[taskRecorder - 1].getTaskType() + \"]\" + \"[\" + arrTasks[taskRecorder - 1].getStatus() + \"]\" + arrTasks[taskRecorder - 1].getDescription() + \"  \" +","lastModifiedDate":"2024-02-07"},{"lineNumber":368,"author":{"gitId":"HM33-Stu"},"content":"                    (arrTasks[taskRecorder - 1].getTaskType().equals(\"E\") ?","lastModifiedDate":"2024-02-07"},{"lineNumber":369,"author":{"gitId":"HM33-Stu"},"content":"                            \" (from: \" + arrTasks[taskRecorder - 1].getStartTime() + \" to: \" + arrTasks[taskRecorder - 1].getEndTime() + \")\" :","lastModifiedDate":"2024-02-07"},{"lineNumber":370,"author":{"gitId":"HM33-Stu"},"content":"                            (arrTasks[taskRecorder - 1].getTaskType().equals(\"D\") ? \" (by: \" + arrTasks[taskRecorder - 1].getDeadline() + \")\" : \"\")));","lastModifiedDate":"2024-02-07"},{"lineNumber":371,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-27"},{"lineNumber":372,"author":{"gitId":"HM33-Stu"},"content":"        } else // Error handling: There are no tasks or invalid task number","lastModifiedDate":"2024-01-29"},{"lineNumber":373,"author":{"gitId":"HM33-Stu"},"content":"        {","lastModifiedDate":"2024-01-27"},{"lineNumber":374,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-27"},{"lineNumber":375,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\" Hmmm...I don\u0027t seem to have a task under this number\");","lastModifiedDate":"2024-01-28"},{"lineNumber":376,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-27"},{"lineNumber":377,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":378,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":379,"author":{"gitId":"HM33-Stu"},"content":"        // Save tasks to file whenever task list changes","lastModifiedDate":"2024-02-06"},{"lineNumber":380,"author":{"gitId":"HM33-Stu"},"content":"        saveTasksToFile();","lastModifiedDate":"2024-02-05"},{"lineNumber":381,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":382,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":383,"author":{"gitId":"HM33-Stu"},"content":"    // Function to unmark previously marked as completed task","lastModifiedDate":"2024-01-29"},{"lineNumber":384,"author":{"gitId":"HM33-Stu"},"content":"    public void markAsIncomplete(int taskRecorder) {","lastModifiedDate":"2024-02-07"},{"lineNumber":385,"author":{"gitId":"HM33-Stu"},"content":"        if (taskRecorder \u003e 0 \u0026\u0026 taskRecorder \u003c\u003d counterTasks) // If there are tasks","lastModifiedDate":"2024-02-06"},{"lineNumber":386,"author":{"gitId":"HM33-Stu"},"content":"        {","lastModifiedDate":"2024-01-27"},{"lineNumber":387,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-27"},{"lineNumber":388,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\" Oh dear, better get on it!\");","lastModifiedDate":"2024-01-27"},{"lineNumber":389,"author":{"gitId":"HM33-Stu"},"content":"            arrTasks[taskRecorder - 1].markAsIncomplete(); // Mark as incomplete","lastModifiedDate":"2024-02-07"},{"lineNumber":390,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"   \" + \"[\" + arrTasks[taskRecorder - 1].getTaskType() + \"]\" + \"[\" + arrTasks[taskRecorder - 1].getStatus() + \"]\" + arrTasks[taskRecorder - 1].getDescription() + \"  \" +","lastModifiedDate":"2024-02-07"},{"lineNumber":391,"author":{"gitId":"HM33-Stu"},"content":"                    (arrTasks[taskRecorder - 1].getTaskType().equals(\"E\") ?","lastModifiedDate":"2024-02-07"},{"lineNumber":392,"author":{"gitId":"HM33-Stu"},"content":"                            \" (from: \" + arrTasks[taskRecorder - 1].getStartTime() + \" to: \" + arrTasks[taskRecorder - 1].getEndTime() + \")\" :","lastModifiedDate":"2024-02-07"},{"lineNumber":393,"author":{"gitId":"HM33-Stu"},"content":"                            (arrTasks[taskRecorder - 1].getTaskType().equals(\"D\") ? \" (by: \" + arrTasks[taskRecorder - 1].getDeadline() + \")\" : \"\")));","lastModifiedDate":"2024-02-07"},{"lineNumber":394,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-27"},{"lineNumber":395,"author":{"gitId":"HM33-Stu"},"content":"        } else // Error handling: There are no tasks or invalid task number","lastModifiedDate":"2024-01-29"},{"lineNumber":396,"author":{"gitId":"HM33-Stu"},"content":"        {","lastModifiedDate":"2024-01-27"},{"lineNumber":397,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-27"},{"lineNumber":398,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\" Hmmm...I don\u0027t seem to have a task under this number\");","lastModifiedDate":"2024-01-28"},{"lineNumber":399,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-27"},{"lineNumber":400,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":401,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":402,"author":{"gitId":"HM33-Stu"},"content":"        // Save tasks to file whenever the task list changes","lastModifiedDate":"2024-02-05"},{"lineNumber":403,"author":{"gitId":"HM33-Stu"},"content":"        saveTasksToFile();","lastModifiedDate":"2024-02-05"},{"lineNumber":404,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":405,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":406,"author":{"gitId":"HM33-Stu"},"content":"    // Function to delete a task","lastModifiedDate":"2024-01-29"},{"lineNumber":407,"author":{"gitId":"HM33-Stu"},"content":"    public void deleteTask(int taskNumber) {","lastModifiedDate":"2024-02-07"},{"lineNumber":408,"author":{"gitId":"HM33-Stu"},"content":"        if (taskNumber \u003e 0 \u0026\u0026 taskNumber \u003c\u003d counterTasks) {","lastModifiedDate":"2024-02-06"},{"lineNumber":409,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":410,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\" Okay, I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-29"},{"lineNumber":411,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"   \" + \"[\" + arrTasks[taskNumber - 1].getTaskType() + \"]\" + \"[\" + arrTasks[taskNumber - 1].getStatus() + \"]\" + arrTasks[taskNumber - 1].getDescription() + \"  \" +","lastModifiedDate":"2024-02-07"},{"lineNumber":412,"author":{"gitId":"HM33-Stu"},"content":"                    (arrTasks[taskNumber - 1].getTaskType().equals(\"E\") ?","lastModifiedDate":"2024-02-07"},{"lineNumber":413,"author":{"gitId":"HM33-Stu"},"content":"                            \" (from: \" + arrTasks[taskNumber - 1].getStartTime() + \" to: \" + arrTasks[taskNumber - 1].getEndTime() + \")\" :","lastModifiedDate":"2024-02-07"},{"lineNumber":414,"author":{"gitId":"HM33-Stu"},"content":"                            (arrTasks[taskNumber - 1].getTaskType().equals(\"D\") ? \" (by: \" + arrTasks[taskNumber - 1].getDeadline() + \")\" : \"\")));","lastModifiedDate":"2024-02-07"},{"lineNumber":415,"author":{"gitId":"HM33-Stu"},"content":"            // Shift tasks in the array to fill the gap","lastModifiedDate":"2024-01-29"},{"lineNumber":416,"author":{"gitId":"HM33-Stu"},"content":"            for (int i \u003d taskNumber - 1; i \u003c counterTasks - 1; i++) {","lastModifiedDate":"2024-02-06"},{"lineNumber":417,"author":{"gitId":"HM33-Stu"},"content":"                arrTasks[i] \u003d arrTasks[i + 1];","lastModifiedDate":"2024-02-06"},{"lineNumber":418,"author":{"gitId":"HM33-Stu"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":419,"author":{"gitId":"HM33-Stu"},"content":"            arrTasks[counterTasks - 1] \u003d null; // Set the last element to null","lastModifiedDate":"2024-02-06"},{"lineNumber":420,"author":{"gitId":"HM33-Stu"},"content":"            counterTasks--;","lastModifiedDate":"2024-02-06"},{"lineNumber":421,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\" Now you have \" + counterTasks + \" task(s) in the list\");","lastModifiedDate":"2024-02-06"},{"lineNumber":422,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":423,"author":{"gitId":"HM33-Stu"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":424,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":425,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\" Hmmm...I don\u0027t seem to have a task under this number\");","lastModifiedDate":"2024-01-29"},{"lineNumber":426,"author":{"gitId":"HM33-Stu"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":427,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":428,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":429,"author":{"gitId":"HM33-Stu"},"content":"        // Save tasks to file whenever the task list changes","lastModifiedDate":"2024-02-05"},{"lineNumber":430,"author":{"gitId":"HM33-Stu"},"content":"        saveTasksToFile();","lastModifiedDate":"2024-02-05"},{"lineNumber":431,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":432,"author":{"gitId":"HM33-Stu"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":433,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":434,"author":{"gitId":"HM33-Stu"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":435,"author":{"gitId":"HM33-Stu"},"content":" * Main method to run the Hari chatbot program.","lastModifiedDate":"2024-02-06"},{"lineNumber":436,"author":{"gitId":"HM33-Stu"},"content":" *","lastModifiedDate":"2024-02-06"},{"lineNumber":437,"author":{"gitId":"HM33-Stu"},"content":" * @param args Command-line arguments (not used in this program).","lastModifiedDate":"2024-02-06"},{"lineNumber":438,"author":{"gitId":"HM33-Stu"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":439,"author":{"gitId":"HM33-Stu"},"content":"public class Hari {","lastModifiedDate":"2024-01-28"},{"lineNumber":440,"author":{"gitId":"HM33-Stu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-28"},{"lineNumber":441,"author":{"gitId":"HM33-Stu"},"content":"        Scanner inputRead \u003d new Scanner(System.in); // Scanner object to read and process user input","lastModifiedDate":"2024-02-06"},{"lineNumber":442,"author":{"gitId":"HM33-Stu"},"content":"        HandlerBot hari \u003d new HandlerBot(); // Create a new \"Hari\" chatbot (HandlerBot object)","lastModifiedDate":"2024-02-06"},{"lineNumber":443,"author":{"gitId":"HM33-Stu"},"content":"        hari.messageGreeting(); // Call the messageGreeting function to greet the user","lastModifiedDate":"2024-02-06"},{"lineNumber":444,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":445,"author":{"gitId":"HM33-Stu"},"content":"        String readerInput; // To store user input","lastModifiedDate":"2024-02-06"},{"lineNumber":446,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":447,"author":{"gitId":"HM33-Stu"},"content":"        while (true) // Modified do-while to a while as I have now streamlined all the code in the main body and reduced the number of function calls","lastModifiedDate":"2024-01-28"},{"lineNumber":448,"author":{"gitId":"HM33-Stu"},"content":"        {","lastModifiedDate":"2024-01-25"},{"lineNumber":449,"author":{"gitId":"HM33-Stu"},"content":"            readerInput \u003d inputRead.nextLine(); // Read and store user input inside readerInput variable","lastModifiedDate":"2024-02-06"},{"lineNumber":450,"author":{"gitId":"HM33-Stu"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":451,"author":{"gitId":"HM33-Stu"},"content":"            if (readerInput.equalsIgnoreCase(\"bye\")) { // If \"bye\" is written as an input, the chatbot exits with the farewell message","lastModifiedDate":"2024-02-06"},{"lineNumber":452,"author":{"gitId":"HM33-Stu"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":453,"author":{"gitId":"HM33-Stu"},"content":"            } else if (readerInput.equalsIgnoreCase(\"list\")) { // To list out tasks","lastModifiedDate":"2024-02-06"},{"lineNumber":454,"author":{"gitId":"HM33-Stu"},"content":"                hari.listTasks();","lastModifiedDate":"2024-02-07"},{"lineNumber":455,"author":{"gitId":"HM33-Stu"},"content":"            } else if (readerInput.startsWith(\"todo\") || readerInput.startsWith(\"event\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":456,"author":{"gitId":"HM33-Stu"},"content":"                // Check if there is anything following \"todo\" or \"event\"","lastModifiedDate":"2024-01-29"},{"lineNumber":457,"author":{"gitId":"HM33-Stu"},"content":"                if (readerInput.length() \u003c\u003d 5) {","lastModifiedDate":"2024-02-06"},{"lineNumber":458,"author":{"gitId":"HM33-Stu"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":459,"author":{"gitId":"HM33-Stu"},"content":"                    System.out.println(\" SAD! Missing task description after \u0027todo\u0027, \u0027deadline\u0027, or \u0027event\u0027.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":460,"author":{"gitId":"HM33-Stu"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":461,"author":{"gitId":"HM33-Stu"},"content":"                } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":462,"author":{"gitId":"HM33-Stu"},"content":"                    hari.userEchoedInput(readerInput); // Else, it proceeds to call the user input processing function","lastModifiedDate":"2024-02-06"},{"lineNumber":463,"author":{"gitId":"HM33-Stu"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":464,"author":{"gitId":"HM33-Stu"},"content":"            } else if (readerInput.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":465,"author":{"gitId":"HM33-Stu"},"content":"                // Check if there is anything following \"deadline\"","lastModifiedDate":"2024-01-29"},{"lineNumber":466,"author":{"gitId":"HM33-Stu"},"content":"                if (readerInput.length() \u003c\u003d 9) {","lastModifiedDate":"2024-02-06"},{"lineNumber":467,"author":{"gitId":"HM33-Stu"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":468,"author":{"gitId":"HM33-Stu"},"content":"                    System.out.println(\" SAD! Missing task description after \u0027todo\u0027, \u0027deadline\u0027, or \u0027event\u0027.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":469,"author":{"gitId":"HM33-Stu"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":470,"author":{"gitId":"HM33-Stu"},"content":"                } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":471,"author":{"gitId":"HM33-Stu"},"content":"                    hari.userEchoedInput(readerInput); // Else, it proceeds to call the user input processing function","lastModifiedDate":"2024-02-06"},{"lineNumber":472,"author":{"gitId":"HM33-Stu"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":473,"author":{"gitId":"HM33-Stu"},"content":"            } else if (readerInput.startsWith(\"unmark\") || readerInput.startsWith(\"delete\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":474,"author":{"gitId":"HM33-Stu"},"content":"                // Check if there is anything following \"unmark\", \"mark\", or \"delete\"","lastModifiedDate":"2024-01-29"},{"lineNumber":475,"author":{"gitId":"HM33-Stu"},"content":"                if (readerInput.length() \u003c\u003d 6) {","lastModifiedDate":"2024-02-06"},{"lineNumber":476,"author":{"gitId":"HM33-Stu"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":477,"author":{"gitId":"HM33-Stu"},"content":"                    System.out.println(\" SAD! Missing task number after \u0027unmark\u0027, \u0027mark\u0027, or \u0027delete\u0027.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":478,"author":{"gitId":"HM33-Stu"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":479,"author":{"gitId":"HM33-Stu"},"content":"                } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":480,"author":{"gitId":"HM33-Stu"},"content":"                    try {","lastModifiedDate":"2024-01-29"},{"lineNumber":481,"author":{"gitId":"HM33-Stu"},"content":"                        int taskIndexer \u003d Integer.parseInt(readerInput.substring(6).trim());","lastModifiedDate":"2024-02-06"},{"lineNumber":482,"author":{"gitId":"HM33-Stu"},"content":"                        if (taskIndexer \u003e 0 \u0026\u0026 taskIndexer \u003c\u003d hari.counterTasks) {","lastModifiedDate":"2024-02-06"},{"lineNumber":483,"author":{"gitId":"HM33-Stu"},"content":"                            if (readerInput.startsWith(\"unmark\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":484,"author":{"gitId":"HM33-Stu"},"content":"                                hari.markAsIncomplete(taskIndexer);","lastModifiedDate":"2024-02-07"},{"lineNumber":485,"author":{"gitId":"HM33-Stu"},"content":"                            } else if (readerInput.startsWith(\"delete\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":486,"author":{"gitId":"HM33-Stu"},"content":"                                hari.deleteTask(taskIndexer);","lastModifiedDate":"2024-02-07"},{"lineNumber":487,"author":{"gitId":"HM33-Stu"},"content":"                            }","lastModifiedDate":"2024-01-29"},{"lineNumber":488,"author":{"gitId":"HM33-Stu"},"content":"                        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":489,"author":{"gitId":"HM33-Stu"},"content":"                            // Error handling: Invalid task number","lastModifiedDate":"2024-01-29"},{"lineNumber":490,"author":{"gitId":"HM33-Stu"},"content":"                            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":491,"author":{"gitId":"HM33-Stu"},"content":"                            System.out.println(\" Hmmm...I don\u0027t seem to have a task under this number\");","lastModifiedDate":"2024-02-06"},{"lineNumber":492,"author":{"gitId":"HM33-Stu"},"content":"                            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":493,"author":{"gitId":"HM33-Stu"},"content":"                        }","lastModifiedDate":"2024-01-29"},{"lineNumber":494,"author":{"gitId":"HM33-Stu"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":495,"author":{"gitId":"HM33-Stu"},"content":"                        // Error handling: Invalid input after \"unmark\" or \"delete\"","lastModifiedDate":"2024-02-06"},{"lineNumber":496,"author":{"gitId":"HM33-Stu"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":497,"author":{"gitId":"HM33-Stu"},"content":"                        System.out.println(\" SAD! Please provide a valid task number after \u0027unmark\u0027 or \u0027delete\u0027.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":498,"author":{"gitId":"HM33-Stu"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":499,"author":{"gitId":"HM33-Stu"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":500,"author":{"gitId":"HM33-Stu"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":501,"author":{"gitId":"HM33-Stu"},"content":"            } else if (readerInput.startsWith(\"done\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":502,"author":{"gitId":"HM33-Stu"},"content":"                // Check if there is anything following \"done\"","lastModifiedDate":"2024-02-06"},{"lineNumber":503,"author":{"gitId":"HM33-Stu"},"content":"                if (readerInput.length() \u003c\u003d 4) {","lastModifiedDate":"2024-02-06"},{"lineNumber":504,"author":{"gitId":"HM33-Stu"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":505,"author":{"gitId":"HM33-Stu"},"content":"                    System.out.println(\" SAD! Missing task number after \u0027done\u0027.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":506,"author":{"gitId":"HM33-Stu"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":507,"author":{"gitId":"HM33-Stu"},"content":"                } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":508,"author":{"gitId":"HM33-Stu"},"content":"                    try {","lastModifiedDate":"2024-01-29"},{"lineNumber":509,"author":{"gitId":"HM33-Stu"},"content":"                        int taskIndexer \u003d Integer.parseInt(readerInput.substring(4).trim());","lastModifiedDate":"2024-02-06"},{"lineNumber":510,"author":{"gitId":"HM33-Stu"},"content":"                        if (taskIndexer \u003e 0 \u0026\u0026 taskIndexer \u003c\u003d hari.counterTasks) {","lastModifiedDate":"2024-02-06"},{"lineNumber":511,"author":{"gitId":"HM33-Stu"},"content":"                            hari.markAsComplete(taskIndexer);","lastModifiedDate":"2024-02-07"},{"lineNumber":512,"author":{"gitId":"HM33-Stu"},"content":"                        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":513,"author":{"gitId":"HM33-Stu"},"content":"                            // Error handling: Invalid task number","lastModifiedDate":"2024-01-29"},{"lineNumber":514,"author":{"gitId":"HM33-Stu"},"content":"                            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":515,"author":{"gitId":"HM33-Stu"},"content":"                            System.out.println(\" Hmmm...I don\u0027t seem to have a task under this number\");","lastModifiedDate":"2024-02-06"},{"lineNumber":516,"author":{"gitId":"HM33-Stu"},"content":"                            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":517,"author":{"gitId":"HM33-Stu"},"content":"                        }","lastModifiedDate":"2024-01-29"},{"lineNumber":518,"author":{"gitId":"HM33-Stu"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":519,"author":{"gitId":"HM33-Stu"},"content":"                        // Error handling: Invalid input after \"done\"","lastModifiedDate":"2024-02-06"},{"lineNumber":520,"author":{"gitId":"HM33-Stu"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":521,"author":{"gitId":"HM33-Stu"},"content":"                        System.out.println(\" SAD! Please provide a valid task number after \u0027done\u0027.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":522,"author":{"gitId":"HM33-Stu"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-29"},{"lineNumber":523,"author":{"gitId":"HM33-Stu"},"content":"                    }","lastModifiedDate":"2024-01-29"},{"lineNumber":524,"author":{"gitId":"HM33-Stu"},"content":"                }","lastModifiedDate":"2024-01-29"},{"lineNumber":525,"author":{"gitId":"HM33-Stu"},"content":"            } else if (readerInput.startsWith(\"find\")) {","lastModifiedDate":"2024-02-06"},{"lineNumber":526,"author":{"gitId":"HM33-Stu"},"content":"                String keyword \u003d readerInput.substring(4).trim();","lastModifiedDate":"2024-02-06"},{"lineNumber":527,"author":{"gitId":"HM33-Stu"},"content":"                hari.findTask(keyword);","lastModifiedDate":"2024-02-06"},{"lineNumber":528,"author":{"gitId":"HM33-Stu"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":529,"author":{"gitId":"HM33-Stu"},"content":"                // If none of the above conditions are met, it is assumed to be an unstructured input and echoes it back","lastModifiedDate":"2024-02-06"},{"lineNumber":530,"author":{"gitId":"HM33-Stu"},"content":"                hari.userEchoedInput(readerInput);","lastModifiedDate":"2024-02-06"},{"lineNumber":531,"author":{"gitId":"HM33-Stu"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":532,"author":{"gitId":"HM33-Stu"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":533,"author":{"gitId":"HM33-Stu"},"content":"        inputRead.close(); // Close the Scanner object to avoid resource leak","lastModifiedDate":"2024-02-06"},{"lineNumber":534,"author":{"gitId":"HM33-Stu"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":535,"author":{"gitId":"HM33-Stu"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"HM33-Stu":535}}]
