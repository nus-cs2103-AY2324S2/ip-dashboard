[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":" * This class represents a Task with a deadline.","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"    private static final String TYPE_SYMBOL \u003d \"[D]\";","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"    private LocalDate deadlineDate \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"    private LocalTime deadlineTime \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"     * Constructs a new deadline Task with the specified description, and deadline.","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"     * @param description Description of the deadline Task","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"     * @param deadline    Deadline of the Task in the format \"YYYY-MM-DD (optional: HH:MM)\"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"     * @throws MeanDukeException if deadline is invalid","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"    public Deadline(String description, String deadline) throws MeanDukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"        super(description, TYPE_SYMBOL);","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"        //Parses deadline","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"        String[] parsedDeadline \u003d deadline.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"            this.deadlineDate \u003d LocalDate.parse(parsedDeadline[0]);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"            if (parsedDeadline.length \u003e 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"                this.deadlineTime \u003d LocalTime.parse(parsedDeadline[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"            throw new MeanDukeException(\"Usage: \\\"add deadline \u003cdescription\u003e /by yyyy-mm-dd (hh:mm)\\\"\");","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"     * Constructs a new deadline Task with the specified description, completion status, and deadline.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"     * @param description  Description of the deadline Task","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"     * @param isDone       boolean value that determines if the initialised deadline Task is completed or not","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"     * @param deadlineDate Deadline date of the Task in format \"YYYY-MM-DD\"","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"     * @param deadlineTime Deadline time of the Task in format \"HH:MM\", or null.","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"    public Deadline(String description, boolean isDone, LocalDate deadlineDate, LocalTime deadlineTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"        super(description, TYPE_SYMBOL, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":"    public String saveString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"        return \"DEADLINE\" + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"billyhoce"},"content":"                + super.saveString() + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"billyhoce"},"content":"                + this.deadlineDate","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"billyhoce"},"content":"                + (this.deadlineTime \u003d\u003d null ? \"\" : \";\" + this.deadlineTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"billyhoce"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"billyhoce"},"content":"    public String toString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"billyhoce"},"content":"        String deadlineString \u003d this.deadlineDate.getDayOfMonth() + \" \"","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"billyhoce"},"content":"                + this.deadlineDate.getMonth().toString() + \" \"","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"billyhoce"},"content":"                + this.deadlineDate.getYear()","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"billyhoce"},"content":"                + (this.deadlineTime \u003d\u003d null ? \"\" : \" \" + this.deadlineTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"billyhoce"},"content":"        return super.toString() + \" (by: \" + deadlineString + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"billyhoce":64}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":" * This class represents a Task with a start and end duration","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"    private static final String TYPE_SYMBOL \u003d \"[E]\";","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"    private LocalDate fromDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"    private LocalDate toDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"    private LocalTime fromTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"    private LocalTime toTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"     * Constructs a new Event with the specified description, start, and end period.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"     * @param description Description of the Event","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"     * @param from        Starting period of the Event in the format \"YYYY-MM-DD (optional: HH:MM)\"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"     * @param to          Ending period of the Event in the format \"YYYY-MM-DD (optional: HH:MM)\"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"     * @throws MeanDukeException if starting or ending period is invalid","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"    public Event(String description, String from, String to) throws MeanDukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"        super(description, TYPE_SYMBOL);","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"        if (from.isEmpty() || to.isEmpty()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"            throw new MeanDukeException(\"Usage: \\\"add event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\\\"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"        //Parses from and to","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"        String[] parsedFrom \u003d from.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"        String[] parsedTo \u003d from.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"            this.fromDate \u003d LocalDate.parse(parsedFrom[0]);","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"            if (parsedFrom.length \u003e 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"                this.fromTime \u003d LocalTime.parse(parsedFrom[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"            this.toDate \u003d LocalDate.parse(parsedTo[0]);","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"            if (parsedTo.length \u003e 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"                this.toTime \u003d LocalTime.parse(parsedTo[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"            throw new MeanDukeException(\"Usage: \\\"add event \u003cdescription\u003e /from yyyy-mm-dd (hh:mm) /to yyyy-mm-dd (hh:mm)\\\"\");","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"     * Constructs a new Event with the specified description, completion state, start, and end period.","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"     * @param description Description of the Event","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"billyhoce"},"content":"     * @param isDone      boolean value that determines if the initialised Event is completed or not","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"billyhoce"},"content":"     * @param fromDate    start date of the Event in the format \"YYYY-MM-DD\"","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"billyhoce"},"content":"     * @param fromTime    start time of the Event in the format \"HH:MM\", or null","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"billyhoce"},"content":"     * @param toDate      end date of the Event in the format \"YYYY-MM-DD\"","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"billyhoce"},"content":"     * @param toTime      end time of the Event in the format \"HH:MM\", or null","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"billyhoce"},"content":"    public Event(String description, boolean isDone, LocalDate fromDate,","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"billyhoce"},"content":"                 LocalTime fromTime, LocalDate toDate, LocalTime toTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"billyhoce"},"content":"        super(description, TYPE_SYMBOL, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"billyhoce"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"billyhoce"},"content":"        this.fromTime \u003d fromTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"billyhoce"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"billyhoce"},"content":"        this.toTime \u003d toTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"billyhoce"},"content":"    public String saveString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"billyhoce"},"content":"        return \"EVENT\" + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"billyhoce"},"content":"                + super.saveString() + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"billyhoce"},"content":"                + this.fromDate","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"billyhoce"},"content":"                + (this.fromTime \u003d\u003d null ? \"\" : \";\" + this.fromTime) + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"billyhoce"},"content":"                + this.toDate","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"billyhoce"},"content":"                + (this.toTime \u003d\u003d null ? \"\" : \";\" + this.toTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"billyhoce"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"billyhoce"},"content":"    public String toString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"billyhoce"},"content":"        String fromString \u003d this.fromDate.getDayOfMonth() + \" \"","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"billyhoce"},"content":"                + this.fromDate.getMonth().toString() + \" \"","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"billyhoce"},"content":"                + this.fromDate.getYear()","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"billyhoce"},"content":"                + (this.fromTime \u003d\u003d null ? \"\" : \" \" + this.fromTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"billyhoce"},"content":"        String toString \u003d this.toDate.getDayOfMonth() + \" \"","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"billyhoce"},"content":"                + this.toDate.getMonth().toString() + \" \"","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"billyhoce"},"content":"                + this.toDate.getYear()","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"billyhoce"},"content":"                + (this.toTime \u003d\u003d null ? \"\" : \" \" + this.toTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"billyhoce"},"content":"        return super.toString() + \" (\" + fromString + \" - \" + toString + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"billyhoce":87}},{"path":"src/main/java/MeanDuke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":" * This class represents a MEAN chatbot with task-tracking capabilities","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"public class MeanDuke {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"    //Text art to be used","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"    private static final String LOGO \u003d","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"            \" __       __  ________   ______   __    __          _______   __    __  __    __  ________\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"                    + \"/  \\\\     /  |/        | /      \\\\ /  \\\\  /  |        /       \\\\ /  |  /  |/  |  /  |/        |\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"                    + \"$$  \\\\   /$$ |$$$$$$$$/ /$$$$$$  |$$  \\\\ $$ |        $$$$$$$  |$$ |  $$ |$$ | /$$/ $$$$$$$$/\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"                    + \"$$$  \\\\ /$$$ |$$ |__    $$ |__$$ |$$$  \\\\$$ | ______ $$ |  $$ |$$ |  $$ |$$ |/$$/  $$ |__\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"                    + \"$$$$  /$$$$ |$$    |   $$    $$ |$$$$  $$ |/      |$$ |  $$ |$$ |  $$ |$$  $$\u003c   $$    |\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"                    + \"$$ $$ $$/$$ |$$$$$/    $$$$$$$$ |$$ $$ $$ |$$$$$$/ $$ |  $$ |$$ |  $$ |$$$$$  \\\\  $$$$$/\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"                    + \"$$ |$$$/ $$ |$$ |_____ $$ |  $$ |$$ |$$$$ |        $$ |__$$ |$$ \\\\__$$ |$$ |$$  \\\\ $$ |_____\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"                    + \"$$ | $/  $$ |$$       |$$ |  $$ |$$ | $$$ |        $$    $$/ $$    $$/ $$ | $$  |$$       |\\n\"","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"                    + \"$$/      $$/ $$$$$$$$/ $$/   $$/ $$/   $$/         $$$$$$$/   $$$$$$/  $$/   $$/ $$$$$$$$/\\n\";","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"    private static final String SPACER \u003d \"__________________________________________________________________________________\";","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"    private static final String INTRO \u003d LOGO + SPACER + \"\\n\" + \"What do you want this time?\\n\" + SPACER;","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"    private static final String OUTRO \u003d SPACER + \"\\n\" + \"Finally you\u0027re finished, thought you would never stop yapping.\\n\" + SPACER;","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"    //Creates an empty task list","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"    static TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"        //Try to load Task List from hard disk. If missing or corrupted, create a new file","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"        File savedTaskList \u003d new File(\"./data/MeanDuke.txt\");","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"            load(savedTaskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"            System.out.println(\"Successfully loaded save file.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"            System.out.println(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"            System.out.println(\"Missing or corrupted save file. Creating new tasklist\");","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"            tasklist \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"        //Prints intro","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"        System.out.println(INTRO);","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":"        //Reads each line of user input and perform respective actions","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"        Scanner inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"billyhoce"},"content":"        String userInput \u003d inputScanner.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"billyhoce"},"content":"        String output;","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"billyhoce"},"content":"        while (!userInput.equals(\"end\")) {  //Session terminates when user inputs \"end\"","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"billyhoce"},"content":"            System.out.println(SPACER);","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"billyhoce"},"content":"            String[] command \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"billyhoce"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"billyhoce"},"content":"                switch (command[0]) {","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"billyhoce"},"content":"                case \"add\":","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"billyhoce"},"content":"                    output \u003d MeanDuke.add(userInput);","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"billyhoce"},"content":"                    save(savedTaskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"billyhoce"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"billyhoce"},"content":"                case \"list\":","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":"                    output \u003d tasklist.toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"billyhoce"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"billyhoce"},"content":"                case \"mark\":","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"billyhoce"},"content":"                    output \u003d MeanDuke.mark(userInput);","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"billyhoce"},"content":"                    save(savedTaskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"billyhoce"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"billyhoce"},"content":"                case \"unmark\":","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"billyhoce"},"content":"                    output \u003d MeanDuke.unmark(userInput);","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"billyhoce"},"content":"                    save(savedTaskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"billyhoce"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"billyhoce"},"content":"                case \"delete\":","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"billyhoce"},"content":"                    output \u003d MeanDuke.delete(userInput);","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"billyhoce"},"content":"                    save(savedTaskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"billyhoce"},"content":"                    break;","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"billyhoce"},"content":"                default:","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"billyhoce"},"content":"                    output \u003d \"What are you saying? Read the damn user manual, it was written for a reason\";","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"billyhoce"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"billyhoce"},"content":"            } catch (MeanDukeException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"billyhoce"},"content":"                output \u003d e.getMessage();","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"billyhoce"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"billyhoce"},"content":"            System.out.println(output);","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"billyhoce"},"content":"            System.out.println(SPACER);","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"billyhoce"},"content":"            userInput \u003d inputScanner.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"billyhoce"},"content":"        //Outro message and end of program","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"billyhoce"},"content":"        System.out.println(OUTRO);","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"billyhoce"},"content":"    private static String add(String input) throws MeanDukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"billyhoce"},"content":"        //Check what type of task is being added","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"billyhoce"},"content":"        String[] split \u003d input.split(\" \", 3);","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"billyhoce"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"billyhoce"},"content":"            switch (split[1]) {","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"billyhoce"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"billyhoce"},"content":"                try {","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"billyhoce"},"content":"                    tasklist.add(new ToDo(split[2].strip()));","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"billyhoce"},"content":"                    return \"Added ToDo to list: \" + split[2].strip();","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"billyhoce"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"billyhoce"},"content":"                    throw new MeanDukeException(\"Usage: \\\"add todo \u003cdescription\u003e\\\"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"billyhoce"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"billyhoce"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"billyhoce"},"content":"                try {","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"billyhoce"},"content":"                    String[] desc_by \u003d split[2].split(\"/by \", 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"billyhoce"},"content":"                    String desc \u003d desc_by[0].strip();","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"billyhoce"},"content":"                    String by \u003d desc_by[1].strip();","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"billyhoce"},"content":"                    tasklist.add(new Deadline(desc, by));","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"billyhoce"},"content":"                    return \"Added Deadline to list: \" + desc + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"billyhoce"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"billyhoce"},"content":"                    throw new MeanDukeException(\"Usage: \\\"add deadline \u003cdescription\u003e /by \u003cdeadline\u003e\\\"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"billyhoce"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"billyhoce"},"content":"            case \"event\":","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"billyhoce"},"content":"                try {","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"billyhoce"},"content":"                    String[] desc_fromTo \u003d split[2].split(\"/from \", 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"billyhoce"},"content":"                    String[] from_to \u003d desc_fromTo[1].split(\"/to\", 2);","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"billyhoce"},"content":"                    String desc \u003d desc_fromTo[0].strip();","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"billyhoce"},"content":"                    String from \u003d from_to[0].strip();","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"billyhoce"},"content":"                    String to \u003d from_to[1].strip();","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"billyhoce"},"content":"                    tasklist.add(new Event(desc, from, to));","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"billyhoce"},"content":"                    return \"Added Event to list: \" + desc + \" (\" + from + \" - \" + to + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"billyhoce"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"billyhoce"},"content":"                    throw new MeanDukeException(\"Usage: \\\"add event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\\\"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"billyhoce"},"content":"                }","lastModifiedDate":"2024-01-27"},{"lineNumber":130,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":131,"author":{"gitId":"billyhoce"},"content":"            default:","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"billyhoce"},"content":"                throw new MeanDukeException(\"Usage: \\\"add \u003ctype\u003e \u003cdescription\u003e ...\\\"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":134,"author":{"gitId":"billyhoce"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":135,"author":{"gitId":"billyhoce"},"content":"        } catch (","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"billyhoce"},"content":"                ArrayIndexOutOfBoundsException e) { //Catch any issues with formatting which results in split not working","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"billyhoce"},"content":"            throw new MeanDukeException(\"Usage: \\\"add \u003ctype\u003e \u003cdescription\u003e ...\\\"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":138,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"billyhoce"},"content":"    private static String mark(String input) throws MeanDukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":142,"author":{"gitId":"billyhoce"},"content":"        String indexString \u003d input.substring(4).strip(); //Remove \"mark\"","lastModifiedDate":"2024-01-30"},{"lineNumber":143,"author":{"gitId":"billyhoce"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":144,"author":{"gitId":"billyhoce"},"content":"            int index \u003d Integer.parseInt(indexString) - 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":145,"author":{"gitId":"billyhoce"},"content":"            if (tasklist.markDone(index)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":146,"author":{"gitId":"billyhoce"},"content":"                //Task successfully changed from not done to done","lastModifiedDate":"2024-01-27"},{"lineNumber":147,"author":{"gitId":"billyhoce"},"content":"                return \"Marked task: \" + indexString + \" as completed.\\nCould you have taken any longer?\";","lastModifiedDate":"2024-01-30"},{"lineNumber":148,"author":{"gitId":"billyhoce"},"content":"            } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":149,"author":{"gitId":"billyhoce"},"content":"                //Task was already completed","lastModifiedDate":"2024-01-27"},{"lineNumber":150,"author":{"gitId":"billyhoce"},"content":"                return \"You have already marked task \" + indexString + \" as completed you goldfish...\";","lastModifiedDate":"2024-01-30"},{"lineNumber":151,"author":{"gitId":"billyhoce"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":152,"author":{"gitId":"billyhoce"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":153,"author":{"gitId":"billyhoce"},"content":"            throw new MeanDukeException(\"Usage: \\\"mark \u003ctask_number\u003e\\\"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":154,"author":{"gitId":"billyhoce"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":155,"author":{"gitId":"billyhoce"},"content":"            throw new MeanDukeException(\"Dude... you don\u0027t even have a task \" + indexString);","lastModifiedDate":"2024-01-30"},{"lineNumber":156,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":157,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":158,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":159,"author":{"gitId":"billyhoce"},"content":"    private static String unmark(String input) throws MeanDukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":160,"author":{"gitId":"billyhoce"},"content":"        String indexString \u003d input.substring(6).strip(); //Remove \"unmark\"","lastModifiedDate":"2024-01-30"},{"lineNumber":161,"author":{"gitId":"billyhoce"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":162,"author":{"gitId":"billyhoce"},"content":"            int index \u003d Integer.parseInt(indexString) - 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":163,"author":{"gitId":"billyhoce"},"content":"            if (tasklist.unmarkDone(index)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":164,"author":{"gitId":"billyhoce"},"content":"                //Task successfully changed from done to not done","lastModifiedDate":"2024-01-27"},{"lineNumber":165,"author":{"gitId":"billyhoce"},"content":"                return \"Marked task: \" + indexString + \" as not completed.\\nWhy did you mark this in the first place?\";","lastModifiedDate":"2024-01-30"},{"lineNumber":166,"author":{"gitId":"billyhoce"},"content":"            } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":167,"author":{"gitId":"billyhoce"},"content":"                //Task was already not complete","lastModifiedDate":"2024-01-27"},{"lineNumber":168,"author":{"gitId":"billyhoce"},"content":"                return \"Task \" + indexString + \" is already not completed. Maybe you should start working on it.\";","lastModifiedDate":"2024-01-30"},{"lineNumber":169,"author":{"gitId":"billyhoce"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":170,"author":{"gitId":"billyhoce"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":171,"author":{"gitId":"billyhoce"},"content":"            throw new MeanDukeException(\"Usage: \\\"unmark \u003ctask_number\u003e\\\"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":172,"author":{"gitId":"billyhoce"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":173,"author":{"gitId":"billyhoce"},"content":"            throw new MeanDukeException(\"Dude... you don\u0027t even have a task \" + indexString);","lastModifiedDate":"2024-01-30"},{"lineNumber":174,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":175,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":176,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":177,"author":{"gitId":"billyhoce"},"content":"    private static String delete(String input) throws MeanDukeException {","lastModifiedDate":"2024-01-30"},{"lineNumber":178,"author":{"gitId":"billyhoce"},"content":"        String indexString \u003d input.substring(6).strip(); //Remove \"delete\"","lastModifiedDate":"2024-01-30"},{"lineNumber":179,"author":{"gitId":"billyhoce"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":180,"author":{"gitId":"billyhoce"},"content":"            int index \u003d Integer.parseInt(indexString) - 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":181,"author":{"gitId":"billyhoce"},"content":"            return \"deleted task:\\n  \" + tasklist.delete(index);","lastModifiedDate":"2024-01-30"},{"lineNumber":182,"author":{"gitId":"billyhoce"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":183,"author":{"gitId":"billyhoce"},"content":"            throw new MeanDukeException(\"Usage: \\\"delete \u003ctask_number\u003e\\\"\");","lastModifiedDate":"2024-01-30"},{"lineNumber":184,"author":{"gitId":"billyhoce"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":185,"author":{"gitId":"billyhoce"},"content":"            throw new MeanDukeException(\"Dude... you don\u0027t even have a task \" + indexString);","lastModifiedDate":"2024-01-30"},{"lineNumber":186,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":187,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":188,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":189,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":190,"author":{"gitId":"billyhoce"},"content":"     * Loads a saved TaskList from the given File","lastModifiedDate":"2024-01-31"},{"lineNumber":191,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":192,"author":{"gitId":"billyhoce"},"content":"     * @param saveFile The File containing the save data","lastModifiedDate":"2024-01-31"},{"lineNumber":193,"author":{"gitId":"billyhoce"},"content":"     * @throws FileNotFoundException  if the File is not found","lastModifiedDate":"2024-01-31"},{"lineNumber":194,"author":{"gitId":"billyhoce"},"content":"     * @throws NoSuchElementException if the save File is not in the expected format or is corrupted","lastModifiedDate":"2024-01-31"},{"lineNumber":195,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":196,"author":{"gitId":"billyhoce"},"content":"    private static void load(File saveFile) throws FileNotFoundException, NoSuchElementException {","lastModifiedDate":"2024-01-31"},{"lineNumber":197,"author":{"gitId":"billyhoce"},"content":"        Scanner s \u003d new Scanner(saveFile);","lastModifiedDate":"2024-01-31"},{"lineNumber":198,"author":{"gitId":"billyhoce"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":199,"author":{"gitId":"billyhoce"},"content":"            switch (s.nextLine()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":200,"author":{"gitId":"billyhoce"},"content":"            case \"TODO\":","lastModifiedDate":"2024-01-31"},{"lineNumber":201,"author":{"gitId":"billyhoce"},"content":"                tasklist.add(new ToDo(s.nextLine(), parseSaveBoolean(s.nextLine())));","lastModifiedDate":"2024-01-31"},{"lineNumber":202,"author":{"gitId":"billyhoce"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":203,"author":{"gitId":"billyhoce"},"content":"            case \"DEADLINE\":","lastModifiedDate":"2024-01-31"},{"lineNumber":204,"author":{"gitId":"billyhoce"},"content":"                String deadlineDesc \u003d s.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":205,"author":{"gitId":"billyhoce"},"content":"                boolean deadlineisDone \u003d parseSaveBoolean(s.nextLine());","lastModifiedDate":"2024-01-31"},{"lineNumber":206,"author":{"gitId":"billyhoce"},"content":"                String[] dateTime \u003d s.nextLine().split(\";\");","lastModifiedDate":"2024-01-31"},{"lineNumber":207,"author":{"gitId":"billyhoce"},"content":"                tasklist.add(new Deadline(deadlineDesc, deadlineisDone,","lastModifiedDate":"2024-01-31"},{"lineNumber":208,"author":{"gitId":"billyhoce"},"content":"                        LocalDate.parse(dateTime[0]),","lastModifiedDate":"2024-01-31"},{"lineNumber":209,"author":{"gitId":"billyhoce"},"content":"                        dateTime.length \u003d\u003d 1 ? null : LocalTime.parse(dateTime[1])));","lastModifiedDate":"2024-01-31"},{"lineNumber":210,"author":{"gitId":"billyhoce"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":211,"author":{"gitId":"billyhoce"},"content":"            case \"EVENT\":","lastModifiedDate":"2024-01-31"},{"lineNumber":212,"author":{"gitId":"billyhoce"},"content":"                String eventDesc \u003d s.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":213,"author":{"gitId":"billyhoce"},"content":"                boolean eventIsDone \u003d parseSaveBoolean(s.nextLine());","lastModifiedDate":"2024-01-31"},{"lineNumber":214,"author":{"gitId":"billyhoce"},"content":"                String[] dateTimeFrom \u003d s.nextLine().split(\";\");","lastModifiedDate":"2024-01-31"},{"lineNumber":215,"author":{"gitId":"billyhoce"},"content":"                String[] dateTimeTo \u003d s.nextLine().split(\";\");","lastModifiedDate":"2024-01-31"},{"lineNumber":216,"author":{"gitId":"billyhoce"},"content":"                tasklist.add(new Event(eventDesc, eventIsDone,","lastModifiedDate":"2024-01-31"},{"lineNumber":217,"author":{"gitId":"billyhoce"},"content":"                        LocalDate.parse(dateTimeFrom[0]),","lastModifiedDate":"2024-01-31"},{"lineNumber":218,"author":{"gitId":"billyhoce"},"content":"                        dateTimeFrom.length \u003d\u003d 1 ? null : LocalTime.parse(dateTimeFrom[1]),","lastModifiedDate":"2024-01-31"},{"lineNumber":219,"author":{"gitId":"billyhoce"},"content":"                        LocalDate.parse(dateTimeTo[0]),","lastModifiedDate":"2024-01-31"},{"lineNumber":220,"author":{"gitId":"billyhoce"},"content":"                        dateTimeTo.length \u003d\u003d 1 ? null : LocalTime.parse(dateTimeTo[1])));","lastModifiedDate":"2024-01-31"},{"lineNumber":221,"author":{"gitId":"billyhoce"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":222,"author":{"gitId":"billyhoce"},"content":"            default:","lastModifiedDate":"2024-01-31"},{"lineNumber":223,"author":{"gitId":"billyhoce"},"content":"                throw new NoSuchElementException(s.nextLine());","lastModifiedDate":"2024-01-31"},{"lineNumber":224,"author":{"gitId":"billyhoce"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":225,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":226,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":227,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":228,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":229,"author":{"gitId":"billyhoce"},"content":"     * Parses the given string into a boolean value.","lastModifiedDate":"2024-01-31"},{"lineNumber":230,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":231,"author":{"gitId":"billyhoce"},"content":"     * @param str The string to be parsed","lastModifiedDate":"2024-01-31"},{"lineNumber":232,"author":{"gitId":"billyhoce"},"content":"     * @return true or false depending on the string","lastModifiedDate":"2024-01-31"},{"lineNumber":233,"author":{"gitId":"billyhoce"},"content":"     * @throws java.util.InputMismatchException if string is not a valid boolean value","lastModifiedDate":"2024-01-31"},{"lineNumber":234,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":235,"author":{"gitId":"billyhoce"},"content":"    private static boolean parseSaveBoolean(String str) throws java.util.InputMismatchException {","lastModifiedDate":"2024-01-31"},{"lineNumber":236,"author":{"gitId":"billyhoce"},"content":"        if (str.equals(\"true\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":237,"author":{"gitId":"billyhoce"},"content":"            return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":238,"author":{"gitId":"billyhoce"},"content":"        } else if (str.equals(\"false\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":239,"author":{"gitId":"billyhoce"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":240,"author":{"gitId":"billyhoce"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":241,"author":{"gitId":"billyhoce"},"content":"            throw new java.util.InputMismatchException();","lastModifiedDate":"2024-01-31"},{"lineNumber":242,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":243,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":244,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":245,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":246,"author":{"gitId":"billyhoce"},"content":"     * Save the current TaskList into disk","lastModifiedDate":"2024-01-31"},{"lineNumber":247,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":248,"author":{"gitId":"billyhoce"},"content":"     * @param savedTaskList The File to save the data into","lastModifiedDate":"2024-01-31"},{"lineNumber":249,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":250,"author":{"gitId":"billyhoce"},"content":"    private static void save(File savedTaskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":251,"author":{"gitId":"billyhoce"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":252,"author":{"gitId":"billyhoce"},"content":"            new File(\"./data\").mkdir();","lastModifiedDate":"2024-01-31"},{"lineNumber":253,"author":{"gitId":"billyhoce"},"content":"            FileWriter fw \u003d new FileWriter(savedTaskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":254,"author":{"gitId":"billyhoce"},"content":"            fw.write(tasklist.saveString());","lastModifiedDate":"2024-01-31"},{"lineNumber":255,"author":{"gitId":"billyhoce"},"content":"            fw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":256,"author":{"gitId":"billyhoce"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":257,"author":{"gitId":"billyhoce"},"content":"            System.out.println(\"An error has occurred during saving.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":258,"author":{"gitId":"billyhoce"},"content":"            System.out.println(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":259,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":260,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":261,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"billyhoce":261}},{"path":"src/main/java/MeanDukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":" * Checked exception thrown typically due to issues that affect the behaviour of the chatbot","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"public class MeanDukeException extends Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"     * Constructs an instance of this class.","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"     * @param message A string containing details of the cause of this exception","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"    public MeanDukeException(String message) {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"        super(message);","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"billyhoce":14}},{"path":"src/main/java/Savable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":" * A savable is an object that can be saved to disk, containing information from the interaction with Mean Duke","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"interface Savable {","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"     * Produces the string containing interaction data to be stored.","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"     * @return string containing save data","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"    String saveString();","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"billyhoce":12}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"/**","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":" * This class represents a task that tracks if it is completed.","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":" *","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":" * @author Billy Ho Cheng En","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":" */","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"abstract class Task implements Savable {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"    private static final String DONE_SYMBOL \u003d \"[X]\";","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"    private static final String UNDONE_SYMBOL \u003d \"[ ]\";","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"    private final String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"    String task_symbol;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"    private boolean is_done;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"     * Constructs a new Task with the specified description and task symbol.","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"     * @param description textual description of the task","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"     * @param task_symbol textual symbol that represents the type of Task","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"    public Task(String description, String task_symbol) {","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"        this.is_done \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"        this.task_symbol \u003d task_symbol;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"     * Constructs a new Task with the specified description, task symbol and completion state.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"     * @param description textual description of the task","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"     * @param task_symbol textual symbol that represents the type of Task","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"     * @param isDone      boolean value that determines if the initialised Task is completed or not","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"    public Task(String description, String task_symbol, Boolean isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"        this.is_done \u003d isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"        this.task_symbol \u003d task_symbol;","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"     * Marks this task as done.","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"     * @return true if task was change from not done to done. Else false.","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"    public boolean markDone() {","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"        if (this.is_done) {","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"            return false;","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"            this.is_done \u003d true;","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"            return true;","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"billyhoce"},"content":"     * Marks this task as not done.","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"billyhoce"},"content":"     * @return true if task was change from done to not done. Else false.","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"billyhoce"},"content":"    public boolean unmarkDone() {","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"billyhoce"},"content":"        if (this.is_done) {","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"billyhoce"},"content":"            this.is_done \u003d false;","lastModifiedDate":"2024-01-27"},{"lineNumber":60,"author":{"gitId":"billyhoce"},"content":"            return true;","lastModifiedDate":"2024-01-27"},{"lineNumber":61,"author":{"gitId":"billyhoce"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"billyhoce"},"content":"            return false;","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"billyhoce"},"content":"    public String saveString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"billyhoce"},"content":"        return this.description + \"\\n\" + this.is_done;","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"billyhoce"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"billyhoce"},"content":"    public String toString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"billyhoce"},"content":"        return this.task_symbol","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"billyhoce"},"content":"                + (this.is_done ? DONE_SYMBOL : UNDONE_SYMBOL)","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"billyhoce"},"content":"                + \" \"","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"billyhoce"},"content":"                + this.description;","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"billyhoce":77}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"/**","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":" * This class represents a list of Tasks of up to 100 Tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":" *","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":" * @author Billy Ho Cheng En","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":" */","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"class TaskList implements Savable {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"    private final ArrayList\u003cTask\u003e arr;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"     * Constructs a new TaskList with initial capacity of 100","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"        arr \u003d new ArrayList\u003cTask\u003e(100);","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"     * Adds a task to the back of the task list.","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"        this.arr.add(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"     * Marks the task at the given index as done","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"billyhoce"},"content":"     * @param index the index of the task to be marked done","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"billyhoce"},"content":"     * @return true if task was already done, else false","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"billyhoce"},"content":"    public boolean markDone(int index) {","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"billyhoce"},"content":"        return arr.get(index).markDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"billyhoce"},"content":"     * Marks the task at the given index as not done","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"billyhoce"},"content":"     * @param index the index of the task to be marked not done","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"billyhoce"},"content":"     * @return true if task was already not done, else false","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"billyhoce"},"content":"    public boolean unmarkDone(int index) {","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"billyhoce"},"content":"        return arr.get(index).unmarkDone();","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":49,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"billyhoce"},"content":"     * Removes the Task at the given index from this list","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"billyhoce"},"content":"     * @param index The index of the Task to be removed","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"billyhoce"},"content":"     * @return The String representation of the removed Task","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"billyhoce"},"content":"    public String delete(int index) {","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"billyhoce"},"content":"        String ret \u003d this.arr.get(index).toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"billyhoce"},"content":"        this.arr.remove(index);","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"billyhoce"},"content":"        return ret;","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"billyhoce"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"billyhoce"},"content":"    public String saveString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"billyhoce"},"content":"        String ret \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"billyhoce"},"content":"        for (Task t : this.arr) {","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"billyhoce"},"content":"            ret \u003d ret + t.saveString() + \"\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"billyhoce"},"content":"        return ret;","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"billyhoce"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":71,"author":{"gitId":"billyhoce"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":72,"author":{"gitId":"billyhoce"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"billyhoce"},"content":"        for (int i \u003d 0; i \u003c arr.size(); i++) {","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"billyhoce"},"content":"            sb.append((i + 1) + \". \" + arr.get(i) + \"\\n\");","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"billyhoce"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":76,"author":{"gitId":"billyhoce"},"content":"        return sb.toString();","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":78,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"billyhoce":78}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":" * This class represents a basic Task without any time constraints.","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"    private static final String TYPE_SYMBOL \u003d \"[T]\";","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"     * Constructs a basic ToDo task.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"     * @param description Description of the ToDo Task","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"        super(description, TYPE_SYMBOL);","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"     * Constructs a basic ToDo task.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"     * @param description Description of the ToDo Task","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"     * @param isDone      boolean value that determines if the initialised ToDo Task is completed or not","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"    public ToDo(String description, Boolean isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"        super(description, TYPE_SYMBOL, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"billyhoce"},"content":"    public String saveString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"billyhoce"},"content":"        return \"TODO\" + \"\\n\" + super.saveString();","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"billyhoce"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"billyhoce"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"billyhoce":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"billyhoce"},"content":"hi","lastModifiedDate":"2024-01-29"},{"lineNumber":2,"author":{"gitId":"billyhoce"},"content":"add","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"billyhoce"},"content":"add task","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"billyhoce"},"content":"add todo","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"billyhoce"},"content":"add todo todo1","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"billyhoce"},"content":"add deadline","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"billyhoce"},"content":"add deadline deadline1","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"billyhoce"},"content":"add deadline deadline1 /by","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"billyhoce"},"content":"add deadline deadline1 /by 1st jan","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"billyhoce"},"content":"add event","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"billyhoce"},"content":"add event event1","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"billyhoce"},"content":"add event event1 /from /to","lastModifiedDate":"2024-01-29"},{"lineNumber":13,"author":{"gitId":"billyhoce"},"content":"add event event1 /from 1st jan /to","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"billyhoce"},"content":"add event event1 /from 1st jan /to 2nd jan","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"billyhoce"},"content":"list","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"billyhoce"},"content":"mark 0","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"billyhoce"},"content":"mark 1","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"mark 1","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"billyhoce"},"content":"unmark 0","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"billyhoce"},"content":"unmark 1","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"billyhoce"},"content":"unmark 1","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"billyhoce"},"content":"delete","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"delete","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"billyhoce"},"content":"delete 0","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"billyhoce"},"content":"delete 1","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"billyhoce"},"content":"end","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"billyhoce":26}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"billyhoce"},"content":"java -classpath ..\\bin MeanDuke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"billyhoce":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"billyhoce"},"content":"java -classpath ../bin MeanDuke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"billyhoce":1}}]
