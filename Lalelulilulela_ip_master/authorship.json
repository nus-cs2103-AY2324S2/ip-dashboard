[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"# Lelu project template","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Lelu_. Given below are instructions on how to use it.","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"3. After that, locate the `src/main/java/Lelu.java` file, right-click it, and choose `Run Lelu.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Lalelulilulela":3,"-":21}},{"path":"data/lelu.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"D | 1 | sleep  | 2023-08-02 13:09","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Lalelulilulela":1}},{"path":"src/main/java/Exceptions/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package Exceptions;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import Tasks.Task;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"public class InvalidFormatException extends InvalidInputException {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"    public InvalidFormatException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"    public static void callInvalidFormatException(ErrorType task) throws InvalidFormatException {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"        switch (task) {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"            case TODO:","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"                throw new InvalidFormatException(\"   To record your task, enter:\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"                        \"   todo \u003ctask\u003e\");","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"            case DEADLINE:","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"                throw new InvalidFormatException(\"   To set a deadline, enter:\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"                        \"   deadline \u003ctask\u003e /by \u003cdeadline\u003e\\n\");","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"            case EVENT:","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"                throw new InvalidFormatException(\"   To record an event, enter:\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"                        \"   event \u003cevent\u003e /from \u003cdate and time\u003e /to \u003cdate and time\u003e\\n\");","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Lalelulilulela":23}},{"path":"src/main/java/Exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package Exceptions;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"public class InvalidInputException extends LeluException{","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Lalelulilulela":7}},{"path":"src/main/java/Exceptions/LeluException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package Exceptions;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"public class LeluException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"    public enum ErrorType {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"        TODO,","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"        EVENT,","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"        DEADLINE","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"    public LeluException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Lalelulilulela":12}},{"path":"src/main/java/Lelu.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"import Exceptions.*;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"import Tasks.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import Tasks.ToDo;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"import Tasks.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"import Tasks.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-21"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"public class Lelu {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"    public static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"    public static int index;","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"    public static void greet() {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"        String greet \u003d \"    Hi! I am your favourite friend, Lelu :)\\n    What can I do for you?\\n\";","lastModifiedDate":"2024-01-21"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"        System.out.println(greet);","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"    public static void exit() {","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"        String exit \u003d \"    Ok bye, you shall be missed :(\";","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"        System.out.println(exit);","lastModifiedDate":"2024-01-21"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"    public static void list() {","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"        for (int i \u003d 0; i \u003c Lelu.tasks.size(); i++) {","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"            System.out.printf(\"    %d.%s\\n\", i + 1, tasks.get(i).toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"        System.out.println();","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"    public static void mark(int i) {","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"        Lelu.tasks.get(i).markTask();","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"        System.out.printf(\"    Great job completing your task!\\n      %s\\n\\n\", tasks.get(i).toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"Lalelulilulela"},"content":"    public static void unmark(int i) {","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"Lalelulilulela"},"content":"        Lelu.tasks.get(i).unmarkTask();","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"Lalelulilulela"},"content":"        System.out.printf(\"    Don\u0027t forget to complete your task soon...\\n      %s\\n\\n\", tasks.get(i).toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"Lalelulilulela"},"content":"    public static void delete(int i) {","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"Lalelulilulela"},"content":"        Task t \u003d Lelu.tasks.get(i);","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"Lalelulilulela"},"content":"        Lelu.tasks.remove(i);","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"Lalelulilulela"},"content":"        System.out.printf(\"    Ok, I have removed your task:\\n    %s\\n    You have %d task(s) in the \" +","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"Lalelulilulela"},"content":"                \"list now.\\n\\n\", t.toString(), Lelu.tasks.size());;","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":45,"author":{"gitId":"Lalelulilulela"},"content":"    public static void listen() throws InvalidInputException {","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"Lalelulilulela"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"Lalelulilulela"},"content":"        while (true) {","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"Lalelulilulela"},"content":"            String taskName \u003d sc.nextLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":50,"author":{"gitId":"Lalelulilulela"},"content":"            if (taskName.equals(\"bye\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"Lalelulilulela"},"content":"                Lelu.exit();","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"Lalelulilulela"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":53,"author":{"gitId":"Lalelulilulela"},"content":"            } else if (taskName.equals(\"list\")) {","lastModifiedDate":"2024-01-22"},{"lineNumber":54,"author":{"gitId":"Lalelulilulela"},"content":"                Lelu.list();","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"Lalelulilulela"},"content":"                continue;","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"Lalelulilulela"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"Lalelulilulela"},"content":"            Task t \u003d null;","lastModifiedDate":"2024-01-22"},{"lineNumber":58,"author":{"gitId":"Lalelulilulela"},"content":"            switch (taskName.split(\" \")[0]) {","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"Lalelulilulela"},"content":"                case \"mark\":","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"Lalelulilulela"},"content":"                    Lelu.mark(Integer.parseInt(taskName.split(\" \")[1]) - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"Lalelulilulela"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"Lalelulilulela"},"content":"                case \"unmark\":","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"Lalelulilulela"},"content":"                    Lelu.unmark(Integer.parseInt(taskName.split(\" \")[1]) - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"Lalelulilulela"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"Lalelulilulela"},"content":"                case \"delete\":","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"Lalelulilulela"},"content":"                    Lelu.delete(Integer.parseInt(taskName.split(\" \")[1]) - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"Lalelulilulela"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":68,"author":{"gitId":"Lalelulilulela"},"content":"                case \"todo\":","lastModifiedDate":"2024-01-24"},{"lineNumber":69,"author":{"gitId":"Lalelulilulela"},"content":"                    t \u003d ToDo.ToDoOf(taskName);","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"Lalelulilulela"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"Lalelulilulela"},"content":"                case \"deadline\":","lastModifiedDate":"2024-01-24"},{"lineNumber":72,"author":{"gitId":"Lalelulilulela"},"content":"                    t \u003d Deadline.DeadlineOf(taskName);","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"Lalelulilulela"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"Lalelulilulela"},"content":"                case \"event\":","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"Lalelulilulela"},"content":"                    t \u003d Event.EventOf(taskName);","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"Lalelulilulela"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"Lalelulilulela"},"content":"                default:","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"Lalelulilulela"},"content":"                    throw new InvalidInputException(\"Please type in:\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"Lalelulilulela"},"content":"                            \"------------------------\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"Lalelulilulela"},"content":"                            \"[to record your task(s)/ events]\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"Lalelulilulela"},"content":"                            \"- todo \u003ctask\u003e\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":82,"author":{"gitId":"Lalelulilulela"},"content":"                            \"- deadline \u003ctask\u003e /by \u003cdate\u003e\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"Lalelulilulela"},"content":"                            \"- event \u003cevent\u003e /from \u003cdate and time\u003e /to \u003cdate and time\u003e\\n\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":84,"author":{"gitId":"Lalelulilulela"},"content":"                            \"[to view your task(s)]\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":85,"author":{"gitId":"Lalelulilulela"},"content":"                            \"- list\\n\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":86,"author":{"gitId":"Lalelulilulela"},"content":"                            \"[to mark or unmark your task as done]\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"Lalelulilulela"},"content":"                            \"- mark \u003ctask number in list\u003e\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"Lalelulilulela"},"content":"                            \"- unmark \u003ctask number in list\u003e\\n\" +","lastModifiedDate":"2024-01-24"},{"lineNumber":89,"author":{"gitId":"Lalelulilulela"},"content":"                            \"-------------------------------------\\n\");","lastModifiedDate":"2024-01-24"},{"lineNumber":90,"author":{"gitId":"Lalelulilulela"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":91,"author":{"gitId":"Lalelulilulela"},"content":"            if (t !\u003d null) {","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"Lalelulilulela"},"content":"                Lelu.tasks.add(t);","lastModifiedDate":"2024-01-24"},{"lineNumber":93,"author":{"gitId":"Lalelulilulela"},"content":"                System.out.printf(\"    Ok! I have added your task:\\n      %s\\n    You have %d task(s) in the \" +","lastModifiedDate":"2024-01-24"},{"lineNumber":94,"author":{"gitId":"Lalelulilulela"},"content":"                        \"list now.\\n\\n\", t.toString(), Lelu.tasks.size());","lastModifiedDate":"2024-01-24"},{"lineNumber":95,"author":{"gitId":"Lalelulilulela"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":96,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-01-21"},{"lineNumber":97,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":98,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-21"},{"lineNumber":99,"author":{"gitId":"Lalelulilulela"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-24"},{"lineNumber":100,"author":{"gitId":"Lalelulilulela"},"content":"        Lelu.greet();","lastModifiedDate":"2024-01-24"},{"lineNumber":101,"author":{"gitId":"Lalelulilulela"},"content":"        Lelu.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-24"},{"lineNumber":102,"author":{"gitId":"Lalelulilulela"},"content":"        Lelu.index \u003d 0;","lastModifiedDate":"2024-01-24"},{"lineNumber":103,"author":{"gitId":"Lalelulilulela"},"content":"        Storage store \u003d new Storage(\"./data/lelu.txt\");","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"Lalelulilulela"},"content":"        while (true) {","lastModifiedDate":"2024-01-24"},{"lineNumber":105,"author":{"gitId":"Lalelulilulela"},"content":"            try {","lastModifiedDate":"2024-01-24"},{"lineNumber":106,"author":{"gitId":"Lalelulilulela"},"content":"                store.load(Lelu.tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"Lalelulilulela"},"content":"                Lelu.listen();","lastModifiedDate":"2024-01-24"},{"lineNumber":108,"author":{"gitId":"Lalelulilulela"},"content":"                store.save(Lelu.tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"Lalelulilulela"},"content":"                break;","lastModifiedDate":"2024-01-24"},{"lineNumber":110,"author":{"gitId":"Lalelulilulela"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"Lalelulilulela"},"content":"                System.out.println(\"\\n    Date should be in the form: \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"Lalelulilulela"},"content":"                        \"\u003cYYYY-MM-DD HH:mm\u003e e.g.2024-01-20 14:20\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"Lalelulilulela"},"content":"            } catch (LeluException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":114,"author":{"gitId":"Lalelulilulela"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-24"},{"lineNumber":115,"author":{"gitId":"Lalelulilulela"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     }","lastModifiedDate":"2019-07-29"},{"lineNumber":118,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":119,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":120,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Lalelulilulela":118,"-":2}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"import Tasks.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"import Tasks.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import Tasks.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"import Tasks.ToDo;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"import java.io.File;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"public class Storage {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"    private File file;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"    Storage(String filePath) {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"                file.createNewFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"            FileWriter fw \u003d new FileWriter(this.file);","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"                fw.write(task.saveFormat());","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"Lalelulilulela"},"content":"            fw.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"Lalelulilulela"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"Lalelulilulela"},"content":"            System.out.println(ioException.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"Lalelulilulela"},"content":"    public void load(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"Lalelulilulela"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"Lalelulilulela"},"content":"            Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"Lalelulilulela"},"content":"            while(sc.hasNext()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"Lalelulilulela"},"content":"                String s \u003d sc.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"Lalelulilulela"},"content":"                String[] task \u003d s.split(\" \\\\| \");","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"Lalelulilulela"},"content":"                Task t \u003d null;","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"Lalelulilulela"},"content":"                switch(task[0]) {","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"Lalelulilulela"},"content":"                    case \"T\":","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"Lalelulilulela"},"content":"                        t \u003d new ToDo(task[2]);","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"Lalelulilulela"},"content":"                        break;","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"Lalelulilulela"},"content":"                    case \"D\":","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"Lalelulilulela"},"content":"                        t \u003d new Deadline(task[2], task[3]);","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"Lalelulilulela"},"content":"                        break;","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"Lalelulilulela"},"content":"                    default:","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"Lalelulilulela"},"content":"                        t \u003d new Event(task[2], task[3], task[4]);","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"Lalelulilulela"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"Lalelulilulela"},"content":"                if (task[1].equals(\"1\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"Lalelulilulela"},"content":"                    t.markTask();","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"Lalelulilulela"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"Lalelulilulela"},"content":"                tasks.add(t);","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"Lalelulilulela"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"Lalelulilulela"},"content":"            FileWriter fw \u003d new FileWriter(this.file);","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"Lalelulilulela"},"content":"            fw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"Lalelulilulela"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"Lalelulilulela"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"Lalelulilulela"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"Lalelulilulela"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"Lalelulilulela":74}},{"path":"src/main/java/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package Tasks;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import Exceptions.InvalidFormatException;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"import Exceptions.InvalidInputException;","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"import Exceptions.LeluException;","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"    public Deadline(String taskName, String deadline) throws DateTimeParseException {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"        super(taskName);","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"    public static Deadline DeadlineOf(String input) throws InvalidInputException {","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"        if (input.replaceAll(\" \", \"\").equals(\"deadline\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"            InvalidFormatException.callInvalidFormatException(LeluException.ErrorType.DEADLINE);","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"        String[] t \u003d input.replaceFirst(\"deadline \", \"\").split(\"/by \");","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"        if (t.length \u003c 2) {","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"            InvalidFormatException.callInvalidFormatException(LeluException.ErrorType.DEADLINE);","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"        return new Deadline(t[0], t[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"    public String saveFormat() {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"        int check \u003d this.completed ? 1 : 0;","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Lalelulilulela"},"content":"        return String.format(\"D | %d | %s | %s\\n\", check, this.taskName,","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Lalelulilulela"},"content":"                this.deadline.format(formatter));","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"Lalelulilulela"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"Lalelulilulela"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"Lalelulilulela"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Lalelulilulela"},"content":"                this.deadline.format(DateTimeFormatter.ofPattern(\"d MMM yyyy hh:mma\")));","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Lalelulilulela":42}},{"path":"src/main/java/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package Tasks;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import Exceptions.InvalidFormatException;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"import Exceptions.LeluException;","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"    protected String from;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"    protected String to;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"    public Event(String taskName, String from, String to) {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"        super(taskName);","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"    public static Event EventOf(String input) throws InvalidFormatException {","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"        if (input.replaceAll(\" \", \"\").equals(\"event\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"            InvalidFormatException.callInvalidFormatException(LeluException.ErrorType.EVENT);","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"        String[] t \u003d input.replaceFirst(\"event \", \"\").split(\"/from \");","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"        if (t.length \u003c 2) {","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"            InvalidFormatException.callInvalidFormatException(LeluException.ErrorType.EVENT);","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"        String[] frTo \u003d t[1].split(\"/to \");","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"        if (frTo.length \u003c 2) {","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"            InvalidFormatException.callInvalidFormatException(LeluException.ErrorType.EVENT);","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"Lalelulilulela"},"content":"        return new Event(t[0], frTo[0], frTo[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"Lalelulilulela"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"Lalelulilulela"},"content":"    public String saveFormat() {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"Lalelulilulela"},"content":"        int check \u003d this.completed ? 1 : 0;","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"Lalelulilulela"},"content":"        return String.format(\"E | %d | %s | %s | %s\\n\", check, this.taskName, this.from, this.to);","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"Lalelulilulela"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"Lalelulilulela"},"content":"    public String toString () {","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"Lalelulilulela"},"content":"        return String.format(\"[E]%s (From: %s To: %s)\", super.toString(), this.from, this.to);","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Lalelulilulela":39}},{"path":"src/main/java/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package Tasks;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"    protected String taskName;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"    protected boolean completed;","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"    public Task(String task) {","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"        this.taskName \u003d task;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"    public void markTask() {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"        this.completed \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"    public void unmarkTask() {","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"        this.completed \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"    public abstract String saveFormat();","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"        String check \u003d completed ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"        return check + \" \" + this.taskName;","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"Lalelulilulela":23}},{"path":"src/main/java/Tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"package Tasks;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"import Exceptions.InvalidFormatException;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"import Exceptions.LeluException;","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"        super(taskName);","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"Lalelulilulela"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"Lalelulilulela"},"content":"    public static ToDo ToDoOf(String input) throws InvalidFormatException {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"Lalelulilulela"},"content":"        if (input.replaceAll(\" \", \"\").equals(\"todo\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"Lalelulilulela"},"content":"            InvalidFormatException.callInvalidFormatException(LeluException.ErrorType.TODO);","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"Lalelulilulela"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"Lalelulilulela"},"content":"        String t \u003d input.replaceFirst(\"todo \", \"\");","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"Lalelulilulela"},"content":"        return new ToDo(t);","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"    public String saveFormat() {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"Lalelulilulela"},"content":"        int check \u003d this.completed ? 1 : 0;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"Lalelulilulela"},"content":"        return String.format(\"T | %d | %s \\n\", check, this.taskName);","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"Lalelulilulela"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"Lalelulilulela"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"Lalelulilulela"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"Lalelulilulela"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"Lalelulilulela":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Lalelulilulela"},"content":"eat","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"Lalelulilulela"},"content":"todo sleep","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"Lalelulilulela"},"content":"event play /from 10am /to 10pm","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"Lalelulilulela"},"content":"deadline homework /by tmr","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"Lalelulilulela"},"content":"mark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"Lalelulilulela"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"Lalelulilulela"},"content":"unmark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"Lalelulilulela"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"Lalelulilulela"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"Lalelulilulela":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Lalelulilulela"},"content":"java -classpath ..\\bin Lelu \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Lalelulilulela":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Lalelulilulela"},"content":"java -classpath ../bin Lelu \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Lalelulilulela":1,"-":37}}]
