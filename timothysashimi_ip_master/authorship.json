[{"path":"data/temp.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"timothysashimi"},"content":"T | 1 | 1","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"timothysashimi"},"content":"T | 0 | 2","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"timothysashimi"},"content":"T | 0 | 3","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"timothysashimi"},"content":"T | 0 | 4","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"timothysashimi"},"content":"D | 0 | return book  | Jan 30 2024","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"timothysashimi"},"content":"D | 1 | return book  | Jan 30 2024","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"timothysashimi"},"content":"D | 0 | don\u0027t return book  | Jan 30 2024","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"timothysashimi"},"content":"D | 0 | return book  | Jan 30 2024","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"timothysashimi"},"content":"T | 1 | 9","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"timothysashimi":9}},{"path":"data/toothless.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"timothysashimi"},"content":"T | 1 | 1","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"timothysashimi"},"content":"T | 0 | 2","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"timothysashimi"},"content":"T | 0 | 3","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"timothysashimi"},"content":"T | 0 | 4","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"timothysashimi"},"content":"D | 0 | return book  | Jan 30 2024","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"timothysashimi"},"content":"D | 1 | return book  | Jan 30 2024","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"timothysashimi"},"content":"D | 0 | don\u0027t return book  | Jan 30 2024","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"timothysashimi"},"content":"D | 0 | return book  | Jan 30 2024","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"timothysashimi"},"content":"T | 1 | 9","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"timothysashimi":9}},{"path":"src/main/java/duke/Exceptions/InvalidInstructionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timothysashimi"},"content":"package duke.Exceptions;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"timothysashimi"},"content":"public class InvalidInstructionException extends RuntimeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"timothysashimi"},"content":"    public InvalidInstructionException(String errorMessage) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"timothysashimi"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"timothysashimi"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"timothysashimi":8}},{"path":"src/main/java/duke/Exceptions/MissingTaskToMarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timothysashimi"},"content":"package duke.Exceptions;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"timothysashimi"},"content":"public class MissingTaskToMarkException extends RuntimeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"timothysashimi"},"content":"    public MissingTaskToMarkException(String errorMessage) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"timothysashimi"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"timothysashimi"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"timothysashimi":8}},{"path":"src/main/java/duke/Exceptions/MissingTaskToUnmarkException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timothysashimi"},"content":"package duke.Exceptions;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"timothysashimi"},"content":"public class MissingTaskToUnmarkException extends RuntimeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"timothysashimi"},"content":"    public MissingTaskToUnmarkException(String errorMessage) {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"timothysashimi"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"timothysashimi"},"content":"}","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"timothysashimi":10}},{"path":"src/main/java/duke/Exceptions/MissingToDoNameException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timothysashimi"},"content":"package duke.Exceptions;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"timothysashimi"},"content":"public class MissingToDoNameException extends RuntimeException {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"timothysashimi"},"content":"    public MissingToDoNameException(String errorMessage) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"timothysashimi"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"timothysashimi"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"timothysashimi":8}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timothysashimi"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"timothysashimi"},"content":"import duke.Exceptions.InvalidInstructionException;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"timothysashimi"},"content":"import duke.Exceptions.MissingTaskToMarkException;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"timothysashimi"},"content":"import duke.Exceptions.MissingToDoNameException;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"timothysashimi"},"content":"import duke.Parsers.DateTimeParser;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"timothysashimi"},"content":"import duke.Tasks.*;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"timothysashimi"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"timothysashimi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"timothysashimi"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"timothysashimi"},"content":" * Class that takes in the user input and executes the command, returning a response string to be printed","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"timothysashimi"},"content":" * and the modified TaskList.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"timothysashimi"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"timothysashimi"},"content":"public class Parser {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"timothysashimi"},"content":"    //String response;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"timothysashimi"},"content":"    String line;","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"timothysashimi"},"content":"    public Parser() {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"timothysashimi"},"content":"        //this.response \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"timothysashimi"},"content":"        this.line \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"timothysashimi"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"timothysashimi"},"content":"     * @param tasksList TaskList to be modified depending on user input","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"timothysashimi"},"content":"     * @param input User input to execute instructions on TaskList","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"timothysashimi"},"content":"     * @return Returns a String response and modified TaskList","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"timothysashimi"},"content":"     * @throws InvalidInstructionException if instruction is not formatted properly or has logical issues.","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"timothysashimi"},"content":"    public Pair\u003cTaskList, String\u003e parse(TaskList tasksList, String input) throws InvalidInstructionException {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"timothysashimi"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"timothysashimi"},"content":"        if (!input.toLowerCase().equals(\"bye\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"timothysashimi"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"timothysashimi"},"content":"                return new Pair\u003cTaskList, String\u003e(tasksList, tasksList.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"timothysashimi"},"content":"            } else if (input.toLowerCase().startsWith(\"todo\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"timothysashimi"},"content":"                try {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"timothysashimi"},"content":"                    if (input.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"timothysashimi"},"content":"                        throw new MissingToDoNameException(\"Please provide the description of the todo task :) Eg. \u0027Todo Chores\u0027\");","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"timothysashimi"},"content":"                    } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"timothysashimi"},"content":"                        String name \u003d input.substring(5);","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"timothysashimi"},"content":"                        String response \u003d tasksList.add(new ToDo(name, false, \"T\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"timothysashimi"},"content":"                        output +\u003d this.line;","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"timothysashimi"},"content":"                        output +\u003d (response + \"\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"timothysashimi"},"content":"                        output +\u003d this.line;","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"timothysashimi"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"timothysashimi"},"content":"                } catch (MissingToDoNameException err) {","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"timothysashimi"},"content":"                    output +\u003d this.line;","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"timothysashimi"},"content":"                    output +\u003d (err.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"timothysashimi"},"content":"                    output +\u003d this.line;","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"timothysashimi"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"timothysashimi"},"content":"            } else if (input.toLowerCase().startsWith(\"deadline\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"timothysashimi"},"content":"                int endChar \u003d input.indexOf(\"/\");","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"timothysashimi"},"content":"                int startChar \u003d 9;","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"timothysashimi"},"content":"                String name \u003d input.substring(9, endChar);","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"timothysashimi"},"content":"                String deadline \u003d input.substring(endChar + 4);","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"timothysashimi"},"content":"                LocalDate d \u003d DateTimeParser.stringToDT(deadline);","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"timothysashimi"},"content":"                String response \u003d tasksList.add(new Deadline(name, d, false, \"D\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"timothysashimi"},"content":"                output +\u003d this.line;","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"timothysashimi"},"content":"                output +\u003d (response);","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"timothysashimi"},"content":"                output +\u003d this.line;","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"timothysashimi"},"content":"            } else if (input.toLowerCase().startsWith(\"event\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"timothysashimi"},"content":"                int endChar \u003d input.indexOf(\"/\");","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"timothysashimi"},"content":"                int endChar2 \u003d input.indexOf(\"/\", endChar + 1);","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"timothysashimi"},"content":"                int startChar \u003d 6;","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"timothysashimi"},"content":"                String name \u003d input.substring(6, endChar);","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"timothysashimi"},"content":"                String startTime \u003d input.substring(endChar + 5, endChar2);","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"timothysashimi"},"content":"                String endTime \u003d input.substring(endChar2 + 3);","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"timothysashimi"},"content":"                LocalDate start \u003d DateTimeParser.stringToDT(startTime);","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"timothysashimi"},"content":"                LocalDate end \u003d DateTimeParser.stringToDT(endTime);","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"timothysashimi"},"content":"                String response \u003d tasksList.add(new Event(name, start, end, false, \"E\"));","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"timothysashimi"},"content":"                output +\u003d this.line;","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"timothysashimi"},"content":"                output +\u003d (response);","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"timothysashimi"},"content":"                output +\u003d this.line;","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"timothysashimi"},"content":"            } else if (input.toLowerCase().startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"timothysashimi"},"content":"                try {","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"timothysashimi"},"content":"                    if (input.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"timothysashimi"},"content":"                        throw new MissingTaskToMarkException(\"Please provide a task to unmark :)\");","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"timothysashimi"},"content":"                    } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"timothysashimi"},"content":"                        int index \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"timothysashimi"},"content":"                        String response \u003d tasksList.unmark(index);","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"timothysashimi"},"content":"                        output +\u003d (response);","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"timothysashimi"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"timothysashimi"},"content":"                } catch (MissingTaskToMarkException err) {","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"timothysashimi"},"content":"                    output +\u003d (err.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"timothysashimi"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"timothysashimi"},"content":"            } else if (input.toLowerCase().startsWith(\"mark\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"timothysashimi"},"content":"                try {","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"timothysashimi"},"content":"                    if (input.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"timothysashimi"},"content":"                        throw new MissingTaskToMarkException(\"Please provide a task to mark :)\");","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"timothysashimi"},"content":"                    } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"timothysashimi"},"content":"                        int index \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"timothysashimi"},"content":"                        String response \u003d tasksList.mark(index);","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"timothysashimi"},"content":"                        output +\u003d (response);","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"timothysashimi"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"timothysashimi"},"content":"                } catch (MissingTaskToMarkException err) {","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"timothysashimi"},"content":"                    output +\u003d (err.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"timothysashimi"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"timothysashimi"},"content":"            } else if (input.toLowerCase().startsWith(\"delete\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"timothysashimi"},"content":"                int index \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"timothysashimi"},"content":"                String response \u003d tasksList.delete(index);","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"timothysashimi"},"content":"                output +\u003d (response);","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"timothysashimi"},"content":"            } else if (input.toLowerCase().startsWith(\"find\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"timothysashimi"},"content":"                String keyword \u003d input.split(\" \")[1];","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"timothysashimi"},"content":"                TaskList temp \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"timothysashimi"},"content":"                for (Task t : tasksList.getTasksList()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"timothysashimi"},"content":"                    if (t.getTaskName().contains(keyword)) {","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"timothysashimi"},"content":"                        temp.add(t);","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"timothysashimi"},"content":"                    }","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"timothysashimi"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"timothysashimi"},"content":"                output +\u003d this.line;","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"timothysashimi"},"content":"                output +\u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"timothysashimi"},"content":"                output +\u003d temp.toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"timothysashimi"},"content":"                output +\u003d (\"\\n\" + this.line);","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"timothysashimi"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"timothysashimi"},"content":"                output +\u003d (\"Try entering a valid instruction! Eg. \u0027Todo Chores\u0027 or \u0027Mark 2\u0027\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"timothysashimi"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"timothysashimi"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"timothysashimi"},"content":"            output \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":134,"author":{"gitId":"timothysashimi"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":135,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":137,"author":{"gitId":"timothysashimi"},"content":"        return new Pair\u003cTaskList, String\u003e(tasksList, output);","lastModifiedDate":"2024-01-30"},{"lineNumber":138,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"timothysashimi"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"timothysashimi":139}},{"path":"src/main/java/duke/Parsers/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timothysashimi"},"content":"package duke.Parsers;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"timothysashimi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"timothysashimi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"timothysashimi"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"timothysashimi"},"content":"import java.util.List;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"timothysashimi"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"timothysashimi"},"content":" * Class to parse a DateTime object into a String of different format or vice versa","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"timothysashimi"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"timothysashimi"},"content":"public class DateTimeParser {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"timothysashimi"},"content":"     * Converts DateTime object to String","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"timothysashimi"},"content":"     * @param ldt DateTime object to be converted","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"timothysashimi"},"content":"     * @return a String representation of the DateTime object in a different format.","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"timothysashimi"},"content":"    public static String dtToString(LocalDate ldt) {","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"timothysashimi"},"content":"        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"timothysashimi"},"content":"        String formattedDateTime \u003d ldt.format(outputFormatter);","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"timothysashimi"},"content":"        return formattedDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"timothysashimi"},"content":"     * COnverts String to DateTime object","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"timothysashimi"},"content":"     * @param s String to be converted","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"timothysashimi"},"content":"     * @return DateTime object to be returned to store into a Task.","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"timothysashimi"},"content":"    public static LocalDate stringToDT(String s) {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"timothysashimi"},"content":"        List\u003cString\u003e dateTimeFormats \u003d Arrays.asList(","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"timothysashimi"},"content":"                \"d/MM/yyyy\",","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"timothysashimi"},"content":"                \"dd/MM/yyyy\",","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"timothysashimi"},"content":"                \"d/M/yyyy\",","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"timothysashimi"},"content":"                \"dd/M/yyyy\",","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"timothysashimi"},"content":"                \"dd-MM-yyyy\",","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"timothysashimi"},"content":"                \"d-MM-yyyy\",","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"timothysashimi"},"content":"                \"dd-M-yyyy\",","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"timothysashimi"},"content":"                \"d-M-yyyy\"","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"timothysashimi"},"content":"        );","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"timothysashimi"},"content":"        LocalDate parsedDateTime \u003d LocalDate.now();","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"timothysashimi"},"content":"        for (String format : dateTimeFormats) {","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"timothysashimi"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"timothysashimi"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(format);","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"timothysashimi"},"content":"                parsedDateTime \u003d LocalDate.parse(s, formatter);","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"timothysashimi"},"content":"                break;  // Exit loop if parsing succeeds","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"timothysashimi"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"timothysashimi"},"content":"                // Parsing failed for the current format, try the next one","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"timothysashimi"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"timothysashimi"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"timothysashimi"},"content":"        return parsedDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"timothysashimi"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"timothysashimi":52}},{"path":"src/main/java/duke/Parsers/FileParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timothysashimi"},"content":"package duke.Parsers;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"timothysashimi"},"content":"import duke.Tasks.Event;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"timothysashimi"},"content":"import duke.Tasks.ToDo;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"timothysashimi"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"timothysashimi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"timothysashimi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"timothysashimi"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"timothysashimi"},"content":"import duke.Tasks.Deadline;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"timothysashimi"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"timothysashimi"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"timothysashimi"},"content":" * Class to parse text file and generates a TaskList for modifications from the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"timothysashimi"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"timothysashimi"},"content":"public class FileParser {","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"timothysashimi"},"content":"    public File file;","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"timothysashimi"},"content":"    public TaskList taskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"timothysashimi"},"content":"    public FileParser(File file) {","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"timothysashimi"},"content":"        this.file \u003d file;","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"timothysashimi"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"timothysashimi"},"content":"     * Parses file object","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"timothysashimi"},"content":"     * @param file File object to be passed","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"timothysashimi"},"content":"     * @throws FileNotFoundException if file object is not found.","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"timothysashimi"},"content":"    public void parseFile(File file) throws FileNotFoundException {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"timothysashimi"},"content":"        Scanner s \u003d new Scanner(file); // create a Scanner using the File as the source","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"timothysashimi"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"timothysashimi"},"content":"            String next \u003d s.nextLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"timothysashimi"},"content":"            String[] taskInfo \u003d next.split(\" \\\\| \");","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"timothysashimi"},"content":"            String taskType \u003d taskInfo[0];","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"timothysashimi"},"content":"            Boolean isDone \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"timothysashimi"},"content":"            if (taskInfo[1].equals(\"1\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"timothysashimi"},"content":"                isDone \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"timothysashimi"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"timothysashimi"},"content":"            String taskName \u003d taskInfo[2];","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"timothysashimi"},"content":"            if (taskType.equals(\"T\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"timothysashimi"},"content":"                taskList.add(new ToDo(taskName, isDone, \"T\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"timothysashimi"},"content":"            } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"timothysashimi"},"content":"                LocalDate start \u003d DateTimeParser.stringToDT(taskInfo[3]);","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"timothysashimi"},"content":"                taskList.add(new Deadline(taskName, start, isDone,\"D\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"timothysashimi"},"content":"            } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"timothysashimi"},"content":"                LocalDate start \u003d DateTimeParser.stringToDT(taskInfo[3]);","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"timothysashimi"},"content":"                LocalDate end \u003d DateTimeParser.stringToDT(taskInfo[4]);","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"timothysashimi"},"content":"                taskList.add(new Event(taskName, start, end, isDone, \"E\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"timothysashimi"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"timothysashimi"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"timothysashimi"},"content":"        s.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"timothysashimi"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"timothysashimi"},"content":"        return this.taskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"timothysashimi"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"timothysashimi":62}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timothysashimi"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"timothysashimi"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"timothysashimi"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"timothysashimi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"timothysashimi"},"content":"import duke.Parsers.DateTimeParser;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"timothysashimi"},"content":"import duke.Tasks.Task;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"timothysashimi"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"timothysashimi"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"timothysashimi"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"timothysashimi"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"timothysashimi"},"content":"import java.nio.file.StandardCopyOption;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"timothysashimi"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"timothysashimi"},"content":" * A class to modify the txt file at the file path after receiving a taskList","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"timothysashimi"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"timothysashimi"},"content":"public class Storage {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"timothysashimi"},"content":"    String toothlessFilePath;","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"timothysashimi"},"content":"    TaskList taskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"timothysashimi"},"content":"    public Storage(TaskList taskList) {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"timothysashimi"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"timothysashimi"},"content":"        this.toothlessFilePath \u003d \"data/toothless.txt\";","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"timothysashimi"},"content":"     * Creates new file if file does not exist at path. Else, modifies the file at the path.","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"timothysashimi"},"content":"     * @throws IOException if file cannot be created at the path","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"timothysashimi"},"content":"    public void store() throws IOException{","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"timothysashimi"},"content":"        String filePathOld \u003d \"data/toothless.txt\";","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"timothysashimi"},"content":"        File oldFile \u003d new File(filePathOld);","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"timothysashimi"},"content":"        String filePathNew \u003d \"data/temp.txt\";","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"timothysashimi"},"content":"        File newFile \u003d new File(filePathNew);","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"timothysashimi"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"timothysashimi"},"content":"            boolean fileCreated \u003d newFile.createNewFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"timothysashimi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"timothysashimi"},"content":"            System.err.println(\"Error creating the file: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"timothysashimi"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"timothysashimi"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"timothysashimi"},"content":"        FileWriter fw \u003d new FileWriter(filePathNew);","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"timothysashimi"},"content":"        for (Task t : taskList.getTasksList()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"timothysashimi"},"content":"            String textToAdd \u003d \"\";","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"timothysashimi"},"content":"            String taskType \u003d t.getTaskType();","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"timothysashimi"},"content":"            if (taskType.equals(\"T\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"timothysashimi"},"content":"                String name \u003d t.getTaskName();","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"timothysashimi"},"content":"                String isDone \u003d \"0\";","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"timothysashimi"},"content":"                if (t.getIsDone()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"timothysashimi"},"content":"                    isDone \u003d \"1\";","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"timothysashimi"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"timothysashimi"},"content":"                textToAdd +\u003d (taskType + \" | \" + isDone + \" | \" + name + \"\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"timothysashimi"},"content":"                fw.write(textToAdd);","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"timothysashimi"},"content":"                //System.out.println(\"1\");","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"timothysashimi"},"content":"            } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"timothysashimi"},"content":"                String name \u003d t.getTaskName();","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"timothysashimi"},"content":"                String deadline \u003d DateTimeParser.dtToString(t.getDeadline());","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"timothysashimi"},"content":"                String isDone \u003d \"0\";","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"timothysashimi"},"content":"                if (t.getIsDone()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"timothysashimi"},"content":"                    isDone \u003d \"1\";","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"timothysashimi"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"timothysashimi"},"content":"                textToAdd +\u003d (taskType + \" | \" + isDone + \" | \" + name + \" | \" + deadline + \"\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"timothysashimi"},"content":"                fw.write(textToAdd);","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"timothysashimi"},"content":"            } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"timothysashimi"},"content":"                String name \u003d t.getTaskName();","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"timothysashimi"},"content":"                String start \u003d DateTimeParser.dtToString(t.getStart());","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"timothysashimi"},"content":"                String end \u003d DateTimeParser.dtToString(t.getEnd());","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"timothysashimi"},"content":"                String isDone \u003d \"0\";","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"timothysashimi"},"content":"                if (t.getIsDone()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"timothysashimi"},"content":"                    isDone \u003d \"1\";","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"timothysashimi"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"timothysashimi"},"content":"                textToAdd +\u003d (taskType + \" | \" + isDone + \" | \" + name + \" | \" + \" from \" + start + \" to \" + end + \"\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"timothysashimi"},"content":"                fw.write(textToAdd);","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"timothysashimi"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"timothysashimi"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"timothysashimi"},"content":"        //System.out.println(\"1\");","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"timothysashimi"},"content":"        fw.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"timothysashimi"},"content":"        Path source \u003d Paths.get(\"data/temp.txt\");","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"timothysashimi"},"content":"        Path destination \u003d Paths.get(\"data/toothless.txt\");","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"timothysashimi"},"content":"        //oldFile.delete();","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"timothysashimi"},"content":"        Files.copy(source, destination, StandardCopyOption.REPLACE_EXISTING);","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"timothysashimi"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"timothysashimi":87}},{"path":"src/main/java/duke/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timothysashimi"},"content":"package duke.Tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"timothysashimi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"timothysashimi"},"content":"import duke.Parsers.DateTimeParser;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"timothysashimi"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"timothysashimi"},"content":" * Type of task with a deadline","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"timothysashimi"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"timothysashimi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"timothysashimi"},"content":"    String taskType;","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"timothysashimi"},"content":"    String taskName;","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"timothysashimi"},"content":"    LocalDate deadline;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"timothysashimi"},"content":"    Boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"timothysashimi"},"content":"    public Deadline(String taskName, LocalDate deadline, Boolean isDone, String taskType) {","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"timothysashimi"},"content":"        super(taskName, isDone, taskType);","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"timothysashimi"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"timothysashimi"},"content":"     * To mark the task as done using the superclass\u0027s mark method.","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"timothysashimi"},"content":"    public void mark() {","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"timothysashimi"},"content":"        super.mark();","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"timothysashimi"},"content":"     * To unmark the task as done using the superclass\u0027s mark method.","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"timothysashimi"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"timothysashimi"},"content":"        super.unmark();","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"timothysashimi"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"timothysashimi"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"timothysashimi"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + DateTimeParser.dtToString(this.deadline) + \")\";","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"timothysashimi"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"timothysashimi"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"timothysashimi"},"content":"        return this.deadline;","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"timothysashimi"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"timothysashimi":44}},{"path":"src/main/java/duke/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timothysashimi"},"content":"package duke.Tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"timothysashimi"},"content":"import duke.Parsers.DateTimeParser;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"timothysashimi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"timothysashimi"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"timothysashimi"},"content":" * Type of task with two LocalDates, a start and an end.","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"timothysashimi"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"timothysashimi"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"timothysashimi"},"content":"    String taskType;","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"timothysashimi"},"content":"    String taskName;","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"timothysashimi"},"content":"    Boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"timothysashimi"},"content":"    LocalDate start;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"timothysashimi"},"content":"    LocalDate end;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"timothysashimi"},"content":"    public Event(String taskName, LocalDate start, LocalDate end, Boolean isDone, String taskType) {","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"timothysashimi"},"content":"        super(taskName, isDone, taskType);","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"timothysashimi"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"timothysashimi"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"timothysashimi"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"timothysashimi"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"timothysashimi"},"content":"        return \"[E]\" + super.toString() + \"(from:\" + DateTimeParser.dtToString(this.start) +","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"timothysashimi"},"content":"                \"to:\" + DateTimeParser.dtToString(this.end) + \")\";","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"timothysashimi"},"content":"     * To get the task\u0027s start.","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"timothysashimi"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"timothysashimi"},"content":"    public LocalDate getStart() {","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"timothysashimi"},"content":"        return this.start;","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"timothysashimi"},"content":"     * To get the task\u0027s end.","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"timothysashimi"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"timothysashimi"},"content":"    public LocalDate getEnd() {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"timothysashimi"},"content":"        return this.end;","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"timothysashimi"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"timothysashimi":43}},{"path":"src/main/java/duke/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timothysashimi"},"content":"package duke.Tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"timothysashimi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"timothysashimi"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"timothysashimi"},"content":" * Super class of the tasks. Has mainly a task name, a boolean value indicating if the task is marked as completed,","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"timothysashimi"},"content":" * and a task type.","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"timothysashimi"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"timothysashimi"},"content":"public class Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"timothysashimi"},"content":"    String taskName;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"timothysashimi"},"content":"    Boolean isDone;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"timothysashimi"},"content":"    String taskType;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"timothysashimi"},"content":"    public Task(String taskName, Boolean isDone, String taskType) {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"timothysashimi"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"timothysashimi"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"timothysashimi"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"timothysashimi"},"content":"     * To mark the task as done, changing the isDone boolean value.","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"timothysashimi"},"content":"    public void mark() {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"timothysashimi"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"timothysashimi"},"content":"     * To mark the task as done, changing the isDone boolean value.","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"timothysashimi"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"timothysashimi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"timothysashimi"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"timothysashimi"},"content":"    public String toString() {","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"timothysashimi"},"content":"        String done \u003d \" \";","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"timothysashimi"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"timothysashimi"},"content":"            done \u003d \"X\";","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"timothysashimi"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"timothysashimi"},"content":"        return \"[\" + done + \"] \" + this.taskName;","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"timothysashimi"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"timothysashimi"},"content":"     * @return Getter returning task attribute.","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"timothysashimi"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"timothysashimi"},"content":"        return this.taskType;","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"timothysashimi"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"timothysashimi"},"content":"     * @return Getter returning task attribute.","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"timothysashimi"},"content":"    public String getTaskName() {","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"timothysashimi"},"content":"        return this.taskName;","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"timothysashimi"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"timothysashimi"},"content":"     * @return Getter returning task attribute.","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"timothysashimi"},"content":"    public Boolean getIsDone() {","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"timothysashimi"},"content":"        return this.isDone;","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"timothysashimi"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"timothysashimi"},"content":"     * @return Getter returning task attribute.","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"timothysashimi"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"timothysashimi"},"content":"        return LocalDate.parse(\"12-12-2019\");","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"timothysashimi"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"timothysashimi"},"content":"     * @return Getter returning task attribute.","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"timothysashimi"},"content":"    public LocalDate getStart() {","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"timothysashimi"},"content":"        return LocalDate.parse(\"12-12-2019\");","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"timothysashimi"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"timothysashimi"},"content":"     * @return Getter returning task attribute.","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"timothysashimi"},"content":"    public LocalDate getEnd() {","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"timothysashimi"},"content":"        return LocalDate.parse(\"12-12-2019\");","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"timothysashimi"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"timothysashimi":84}},{"path":"src/main/java/duke/Tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timothysashimi"},"content":"package duke.Tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"timothysashimi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"timothysashimi"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"timothysashimi"},"content":" * Class that keeps track of a list of tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"timothysashimi"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"timothysashimi"},"content":"public class TaskList {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"timothysashimi"},"content":"    ArrayList\u003cTask\u003e tasksList;","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"timothysashimi"},"content":"    String line \u003d \"____________________________________________________________\";","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"timothysashimi"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"timothysashimi"},"content":"        this.tasksList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"timothysashimi"},"content":"     * Adds task to list","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"timothysashimi"},"content":"     * @param t task to be added","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"timothysashimi"},"content":"    public void add(Task t) {","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"timothysashimi"},"content":"        this.tasksList.add(t);","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"timothysashimi"},"content":"     * Adds ToDo task to list","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"timothysashimi"},"content":"     * @param t ToDo task to be added","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"timothysashimi"},"content":"     * @return String response to be outputted to the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"timothysashimi"},"content":"    public String add(ToDo t) {","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"timothysashimi"},"content":"        this.tasksList.add(t);","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"timothysashimi"},"content":"        String output \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"timothysashimi"},"content":"        output +\u003d t.toString() + \"\\n\";","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"timothysashimi"},"content":"        output +\u003d \"Now you have \" + tasksList.size() + \" tasks in the list.\";","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"timothysashimi"},"content":"        return output;","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"timothysashimi"},"content":"     * Adds DeadLine task to list","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"timothysashimi"},"content":"     * @param t DeadLine task to be added","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"timothysashimi"},"content":"     * @return String response to be outputted to the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"timothysashimi"},"content":"    public String add(Deadline t) {","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"timothysashimi"},"content":"        this.tasksList.add(t);","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"timothysashimi"},"content":"        String output \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"timothysashimi"},"content":"        output +\u003d t.toString() + \"\\n\";","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"timothysashimi"},"content":"        output +\u003d \"Now you have \" + tasksList.size() + \" tasks in the list.\";","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"timothysashimi"},"content":"        return output;","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"timothysashimi"},"content":"     * Adds Event task to list","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"timothysashimi"},"content":"     * @param t Event task to be added","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"timothysashimi"},"content":"     * @return String response to be outputted to the user.","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"timothysashimi"},"content":"    public String add(Event t) {","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"timothysashimi"},"content":"        this.tasksList.add(t);","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"timothysashimi"},"content":"        String output \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"timothysashimi"},"content":"        output +\u003d t.toString() + \"\\n\";","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"timothysashimi"},"content":"        output +\u003d \"Now you have \" + tasksList.size() + \" tasks in the list.\";","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"timothysashimi"},"content":"        return output;","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"timothysashimi"},"content":"     * Marks task as completed based on index in task list","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"timothysashimi"},"content":"     * @param index task to be marked","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"timothysashimi"},"content":"     * @return String to be outputted to user.","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"timothysashimi"},"content":"    public String mark(int index) {","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"timothysashimi"},"content":"        String output \u003d \"\\n\" + this.line;","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"timothysashimi"},"content":"        int length \u003d this.tasksList.size();","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"timothysashimi"},"content":"        if (index \u003e length || index \u003c\u003d 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"timothysashimi"},"content":"            return \"\";","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"timothysashimi"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":73,"author":{"gitId":"timothysashimi"},"content":"            index -\u003d 1;","lastModifiedDate":"2024-01-23"},{"lineNumber":74,"author":{"gitId":"timothysashimi"},"content":"            this.tasksList.get(index).mark();","lastModifiedDate":"2024-01-23"},{"lineNumber":75,"author":{"gitId":"timothysashimi"},"content":"            output +\u003d \"\\nNice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2024-01-23"},{"lineNumber":76,"author":{"gitId":"timothysashimi"},"content":"            output +\u003d this.tasksList.get(index).toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":77,"author":{"gitId":"timothysashimi"},"content":"            output +\u003d (\"\\n\" + this.line);","lastModifiedDate":"2024-01-23"},{"lineNumber":78,"author":{"gitId":"timothysashimi"},"content":"            return output;","lastModifiedDate":"2024-01-23"},{"lineNumber":79,"author":{"gitId":"timothysashimi"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":81,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":82,"author":{"gitId":"timothysashimi"},"content":"    public String delete(int index) {","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"timothysashimi"},"content":"        String output \u003d \"\\n\" + this.line;","lastModifiedDate":"2024-01-24"},{"lineNumber":84,"author":{"gitId":"timothysashimi"},"content":"        int length \u003d this.tasksList.size();","lastModifiedDate":"2024-01-24"},{"lineNumber":85,"author":{"gitId":"timothysashimi"},"content":"        if (index \u003e length || index \u003c\u003d 0) {","lastModifiedDate":"2024-01-24"},{"lineNumber":86,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"timothysashimi"},"content":"            return \"\";","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"timothysashimi"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":89,"author":{"gitId":"timothysashimi"},"content":"            index -\u003d 1;","lastModifiedDate":"2024-01-24"},{"lineNumber":90,"author":{"gitId":"timothysashimi"},"content":"            Task t \u003d this.tasksList.get(index);","lastModifiedDate":"2024-01-24"},{"lineNumber":91,"author":{"gitId":"timothysashimi"},"content":"            this.tasksList.remove(index);","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"timothysashimi"},"content":"            output +\u003d \"\\nNoted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2024-01-24"},{"lineNumber":93,"author":{"gitId":"timothysashimi"},"content":"            output +\u003d t.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":94,"author":{"gitId":"timothysashimi"},"content":"            output +\u003d (\"\\nNow you have \" + (length - 1) + \" tasks in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":95,"author":{"gitId":"timothysashimi"},"content":"            output +\u003d (\"\\n\" + this.line);","lastModifiedDate":"2024-01-24"},{"lineNumber":96,"author":{"gitId":"timothysashimi"},"content":"            return output;","lastModifiedDate":"2024-01-24"},{"lineNumber":97,"author":{"gitId":"timothysashimi"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":98,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":99,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"timothysashimi"},"content":"     * Unmarks task as completed based on index in task list","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"timothysashimi"},"content":"     * @param index task to be marked","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"timothysashimi"},"content":"     * @return String to be outputted to user.","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"timothysashimi"},"content":"    public String unmark(int index) {","lastModifiedDate":"2024-01-23"},{"lineNumber":105,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":106,"author":{"gitId":"timothysashimi"},"content":"        String output \u003d \"\\n\" + this.line;","lastModifiedDate":"2024-01-23"},{"lineNumber":107,"author":{"gitId":"timothysashimi"},"content":"        int length \u003d this.tasksList.size();","lastModifiedDate":"2024-01-23"},{"lineNumber":108,"author":{"gitId":"timothysashimi"},"content":"        if (index \u003e length || index \u003c\u003d 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":109,"author":{"gitId":"timothysashimi"},"content":"            return \"\";","lastModifiedDate":"2024-01-23"},{"lineNumber":110,"author":{"gitId":"timothysashimi"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":111,"author":{"gitId":"timothysashimi"},"content":"            index -\u003d 1;","lastModifiedDate":"2024-01-23"},{"lineNumber":112,"author":{"gitId":"timothysashimi"},"content":"            this.tasksList.get(index).unmark();","lastModifiedDate":"2024-01-23"},{"lineNumber":113,"author":{"gitId":"timothysashimi"},"content":"            output +\u003d \"\\nOK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2024-01-23"},{"lineNumber":114,"author":{"gitId":"timothysashimi"},"content":"            output +\u003d this.tasksList.get(index).toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":115,"author":{"gitId":"timothysashimi"},"content":"            output +\u003d (\"\\n\" + this.line);","lastModifiedDate":"2024-01-23"},{"lineNumber":116,"author":{"gitId":"timothysashimi"},"content":"            return output;","lastModifiedDate":"2024-01-23"},{"lineNumber":117,"author":{"gitId":"timothysashimi"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":118,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":119,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":120,"author":{"gitId":"timothysashimi"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":121,"author":{"gitId":"timothysashimi"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":122,"author":{"gitId":"timothysashimi"},"content":"        int taskCount \u003d 0;","lastModifiedDate":"2024-01-23"},{"lineNumber":123,"author":{"gitId":"timothysashimi"},"content":"        String output \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2024-01-23"},{"lineNumber":124,"author":{"gitId":"timothysashimi"},"content":"        output +\u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2024-01-23"},{"lineNumber":125,"author":{"gitId":"timothysashimi"},"content":"        for (Task t : this.tasksList) {","lastModifiedDate":"2024-01-23"},{"lineNumber":126,"author":{"gitId":"timothysashimi"},"content":"            taskCount++;","lastModifiedDate":"2024-01-23"},{"lineNumber":127,"author":{"gitId":"timothysashimi"},"content":"            output +\u003d (taskCount + \" \" + t.toString() + \"\\n\");","lastModifiedDate":"2024-01-23"},{"lineNumber":128,"author":{"gitId":"timothysashimi"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":129,"author":{"gitId":"timothysashimi"},"content":"        output +\u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2024-01-23"},{"lineNumber":130,"author":{"gitId":"timothysashimi"},"content":"        return output;","lastModifiedDate":"2024-01-23"},{"lineNumber":131,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":132,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":133,"author":{"gitId":"timothysashimi"},"content":"    public ArrayList\u003cTask\u003e getTasksList() {","lastModifiedDate":"2024-01-28"},{"lineNumber":134,"author":{"gitId":"timothysashimi"},"content":"        return this.tasksList;","lastModifiedDate":"2024-01-28"},{"lineNumber":135,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":136,"author":{"gitId":"timothysashimi"},"content":"    void printLines() {","lastModifiedDate":"2024-01-23"},{"lineNumber":137,"author":{"gitId":"timothysashimi"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-23"},{"lineNumber":138,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":139,"author":{"gitId":"timothysashimi"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"timothysashimi":139}},{"path":"src/main/java/duke/Tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timothysashimi"},"content":"package duke.Tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"timothysashimi"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"timothysashimi"},"content":"    String taskType;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"timothysashimi"},"content":"    String taskName;","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"timothysashimi"},"content":"    Boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"timothysashimi"},"content":"    public ToDo(String taskName, Boolean isDone, String taskType) {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"timothysashimi"},"content":"        super(taskName, isDone, taskType);","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"timothysashimi"},"content":"        this.taskType \u003d \"T\";","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"timothysashimi"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"timothysashimi"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"timothysashimi"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"timothysashimi"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"timothysashimi":18}},{"path":"src/main/java/duke/Toothless.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timothysashimi"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"timothysashimi"},"content":"import duke.Parsers.FileParser;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"timothysashimi"},"content":"import duke.Tasks.*;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"timothysashimi"},"content":"import duke.Parsers.*;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"timothysashimi"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"timothysashimi"},"content":"import duke.Parser;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"timothysashimi"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"timothysashimi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"timothysashimi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"timothysashimi"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"timothysashimi"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"timothysashimi"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"timothysashimi"},"content":" * Main class of duke chatbot project. Upon running, creates a new ui to handle interactions with user and a parser to parse instructions","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"timothysashimi"},"content":" * from the user. Stores a txt file containing consequences of the instructions using Storage and parses the txt file for future","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"timothysashimi"},"content":" * use using the FileParser class.","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"timothysashimi"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"timothysashimi"},"content":"public class Toothless {","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"timothysashimi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"timothysashimi"},"content":"        String filePath \u003d \"data/toothless.txt\";","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"timothysashimi"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"timothysashimi"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"timothysashimi"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"timothysashimi"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"timothysashimi"},"content":"            boolean fileCreated \u003d f.createNewFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"timothysashimi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"timothysashimi"},"content":"            System.err.println(\"Error creating the file: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"timothysashimi"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"timothysashimi"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"timothysashimi"},"content":"        FileParser fileParser \u003d new FileParser(f);","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"timothysashimi"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"timothysashimi"},"content":"            fileParser.parseFile(f);","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"timothysashimi"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"timothysashimi"},"content":"        catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"timothysashimi"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"timothysashimi"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"timothysashimi"},"content":"        TaskList currTaskList \u003d fileParser.getTaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"timothysashimi"},"content":"        currTaskList \u003d ui.run(parser, currTaskList);","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"timothysashimi"},"content":"        Storage storage \u003d new Storage(currTaskList);","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"timothysashimi"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"timothysashimi"},"content":"            storage.store();","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"timothysashimi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"timothysashimi"},"content":"            System.err.println(\"Error writing to the file: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"timothysashimi"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"timothysashimi"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":52,"author":{"gitId":"timothysashimi"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"timothysashimi":52}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timothysashimi"},"content":"package duke;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"timothysashimi"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"timothysashimi"},"content":"import javafx.util.Pair;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"timothysashimi"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"timothysashimi"},"content":"/**","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"timothysashimi"},"content":" * Handles interaction with the user by printing out the response generated from each command in the console log/","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"timothysashimi"},"content":" */","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"timothysashimi"},"content":"public class Ui {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"timothysashimi"},"content":"    public Ui() {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"timothysashimi"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"timothysashimi"},"content":"     * @param parser to make sense of the user command and execute action","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"timothysashimi"},"content":"     * @param taskList adds/deletes/marks/unmarks tasks in taskList depending on user input","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"timothysashimi"},"content":"     * @return the modified taskList","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"timothysashimi"},"content":"    public TaskList run(Parser parser, TaskList taskList) {","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"timothysashimi"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"timothysashimi"},"content":"        String input \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"timothysashimi"},"content":"        this.greet();","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"timothysashimi"},"content":"        while (!input.toLowerCase().equals(\"bye\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"timothysashimi"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"timothysashimi"},"content":"            taskList \u003d this.printMessage(input, parser, taskList);","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"timothysashimi"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"timothysashimi"},"content":"        this.bye();","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"timothysashimi"},"content":"        return taskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"timothysashimi"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"timothysashimi"},"content":"     * @param message command from user","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"timothysashimi"},"content":"     * @param parser parser created","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"timothysashimi"},"content":"     * @param taskList current taskList","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"timothysashimi"},"content":"     * @return returns a modified taskList for further modifications during the run function.","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"timothysashimi"},"content":"    public TaskList printMessage(String message, Parser parser, TaskList taskList) {","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"timothysashimi"},"content":"        Pair\u003cTaskList, String\u003e output \u003d  parser.parse(taskList, message);","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"timothysashimi"},"content":"        System.out.println(output.getValue());","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"timothysashimi"},"content":"        return output.getKey();","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"timothysashimi"},"content":"     * Greets the user upon running the chatbot.","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"timothysashimi"},"content":"    public void greet() {","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"timothysashimi"},"content":"        this.printLines();","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"timothysashimi"},"content":"        System.out.println(\"Hello! I\u0027m Toothless!\\nWhat can I do for you?\");","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"timothysashimi"},"content":"        this.printLines();","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"timothysashimi"},"content":"     * Greets the user bye upon receiving a \"bye\" instruction.","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"timothysashimi"},"content":"    public void bye() {","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"timothysashimi"},"content":"        this.printLines();","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"timothysashimi"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"timothysashimi"},"content":"        this.printLines();","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"timothysashimi"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"timothysashimi"},"content":"     * For formatting purposes","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"timothysashimi"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"timothysashimi"},"content":"    public void printLines() {","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"timothysashimi"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"timothysashimi"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"timothysashimi":72}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"timothysashimi"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"timothysashimi"},"content":"import duke.Tasks.ToDo;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"timothysashimi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"timothysashimi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"timothysashimi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"timothysashimi"},"content":"public class TaskListTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"timothysashimi"},"content":"    /*","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"timothysashimi"},"content":"    public TaskList taskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"timothysashimi"},"content":"    public TaskListTest() {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"timothysashimi"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"timothysashimi"},"content":"    */","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"timothysashimi"},"content":"    public void dummyTest() {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"timothysashimi"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"timothysashimi"},"content":"        assertEquals(taskList.getTasksList(), new ArrayList\u003c\u003e());","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"timothysashimi"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"timothysashimi":24}},{"path":"src/test/java/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timothysashimi"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"timothysashimi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"timothysashimi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"timothysashimi"},"content":"import duke.Tasks.TaskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"timothysashimi"},"content":"import duke.Tasks.ToDo;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"timothysashimi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"timothysashimi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"timothysashimi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"timothysashimi"},"content":"public class ToDoTest {","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"timothysashimi"},"content":"    /*","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"timothysashimi"},"content":"    public TaskList taskList;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"timothysashimi"},"content":"    public TaskListTest() {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"timothysashimi"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"timothysashimi"},"content":"    */","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"timothysashimi"},"content":"    public void dummyTest() {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"timothysashimi"},"content":"        ToDo todo \u003d new ToDo(\"hi\", true, \"T\");","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"timothysashimi"},"content":"        assertEquals(todo.getIsDone(), true);","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"timothysashimi"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"timothysashimi"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"timothysashimi"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"timothysashimi":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"timothysashimi"},"content":"todo borrow book","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"timothysashimi"},"content":"todo chores","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"timothysashimi"},"content":"list","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"timothysashimi"},"content":"deadline return book /by 2024-01-01","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"timothysashimi"},"content":"mark 1","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"timothysashimi"},"content":"unmark 1","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"timothysashimi"},"content":"list","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"timothysashimi"},"content":"bye","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"timothysashimi":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"timothysashimi"},"content":"javac  -cp ..\\src\\main\\java\\*.java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"timothysashimi":1,"-":20}}]
