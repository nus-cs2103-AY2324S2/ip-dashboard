[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"# Bob project template","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"3. After that, locate the `src/main/java/Bob.java` file, right-click it, and choose `Run Bob.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bryanyee33":2,"-":22}},{"path":"src/main/java/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"public class Bob {","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"    public static boolean startsWith(String keyword, String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"        return input.length() \u003e\u003d keyword.length() \u0026\u0026","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"                keyword.equals(input.substring(0, keyword.length()));","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"    private static Task getTaskFromIndex(String keyword, String input, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"            int num \u003d Integer.parseInt(input.substring(keyword.length() + 1));","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"            return list.get(num - 1);","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"            System.out.println(\"OH NOSE! Task number cannot be empty..\");","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"            System.out.println(\"OH NOSE! Task number has to be an integer..\");","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"            System.out.println(\"OH NOSE! Task number must be in valid range..\");","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"        return null;","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"    private static void addTask(ArrayList\u003cTask\u003e list, Task task) {","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"            list.add(task);","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"            System.out.println(\"This task has been added:\\n  \" + task +","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"                               \"\\n\" + \"Now you have \" + list.size() +","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"                               \" task(s) in total.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"        String line \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"        String input;","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"        System.out.println(line + \"Hello, I\u0027m Bob.\\nI might help if I feel like it.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"        while (true) {","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"            System.out.println(line);","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"            System.out.print(line);","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"            if (\"bye\".equals(input)) {","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"                break;","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"            // list all Tasks","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"bryanyee33"},"content":"            if (\"list\".equals(input)) {","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"bryanyee33"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"bryanyee33"},"content":"                for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"bryanyee33"},"content":"                    System.out.println((i + 1) + \".\" + list.get(i));","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"bryanyee33"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"bryanyee33"},"content":"            // mark Task as done","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"bryanyee33"},"content":"            } else if (startsWith(\"mark\", input)) {","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"bryanyee33"},"content":"                Task task \u003d getTaskFromIndex(\"mark\", input, list);","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"bryanyee33"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"bryanyee33"},"content":"                    task.markAsDone();","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"bryanyee33"},"content":"                    System.out.println(\"Did you actually finish this? \\uD83E\\uDD14:\\n\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"bryanyee33"},"content":"                                       \"  \" + task);","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"bryanyee33"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"bryanyee33"},"content":"            // mark Task as undone","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"bryanyee33"},"content":"            } else if (startsWith(\"unmark\", input)) {","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"bryanyee33"},"content":"                Task task \u003d getTaskFromIndex(\"unmark\", input, list);","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"bryanyee33"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"bryanyee33"},"content":"                    task.markAsUndone();","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"bryanyee33"},"content":"                    System.out.println(\"I knew you didn\u0027t finish it! \\uD83D\\uDE0F:\\n\" +","lastModifiedDate":"2024-01-23"},{"lineNumber":73,"author":{"gitId":"bryanyee33"},"content":"                                       \"  \" + task);","lastModifiedDate":"2024-01-23"},{"lineNumber":74,"author":{"gitId":"bryanyee33"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":75,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":76,"author":{"gitId":"bryanyee33"},"content":"            } else if (startsWith(\"delete\", input)) {","lastModifiedDate":"2024-01-23"},{"lineNumber":77,"author":{"gitId":"bryanyee33"},"content":"                Task task \u003d getTaskFromIndex(\"delete\", input, list);","lastModifiedDate":"2024-01-23"},{"lineNumber":78,"author":{"gitId":"bryanyee33"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-01-23"},{"lineNumber":79,"author":{"gitId":"bryanyee33"},"content":"                    list.remove(task);","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"bryanyee33"},"content":"                    System.out.println(\"This task has been removed:\\n  \" + task +","lastModifiedDate":"2024-01-23"},{"lineNumber":81,"author":{"gitId":"bryanyee33"},"content":"                                       \"\\n\" + \"Now you have \" + list.size() +","lastModifiedDate":"2024-01-23"},{"lineNumber":82,"author":{"gitId":"bryanyee33"},"content":"                                       \" task(s) in total.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":83,"author":{"gitId":"bryanyee33"},"content":"                }","lastModifiedDate":"2024-01-23"},{"lineNumber":84,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":85,"author":{"gitId":"bryanyee33"},"content":"            } else if (startsWith(Todo.keyword, input)) {","lastModifiedDate":"2024-01-23"},{"lineNumber":86,"author":{"gitId":"bryanyee33"},"content":"                addTask(list, Todo.of(input));","lastModifiedDate":"2024-01-23"},{"lineNumber":87,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":88,"author":{"gitId":"bryanyee33"},"content":"            } else if (startsWith(Deadline.keyword, input)) {","lastModifiedDate":"2024-01-23"},{"lineNumber":89,"author":{"gitId":"bryanyee33"},"content":"                addTask(list, Deadline.of(input));","lastModifiedDate":"2024-01-23"},{"lineNumber":90,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":91,"author":{"gitId":"bryanyee33"},"content":"            } else if (startsWith(Event.keyword, input)) {","lastModifiedDate":"2024-01-23"},{"lineNumber":92,"author":{"gitId":"bryanyee33"},"content":"                addTask(list, Event.of(input));","lastModifiedDate":"2024-01-23"},{"lineNumber":93,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":94,"author":{"gitId":"bryanyee33"},"content":"            } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":95,"author":{"gitId":"bryanyee33"},"content":"                System.out.println(\"OH NOSE! Wakaranai... :(\");","lastModifiedDate":"2024-01-23"},{"lineNumber":96,"author":{"gitId":"bryanyee33"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":97,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":98,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":99,"author":{"gitId":"bryanyee33"},"content":"        System.out.println(\"Bye! You\u0027ll be back ;)\\n\" + line);","lastModifiedDate":"2024-01-23"},{"lineNumber":100,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":101,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"bryanyee33":101}},{"path":"src/main/java/BobException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"public class BobException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"    public BobException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"        super(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"bryanyee33":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"    protected static String keyword \u003d \"deadline\";","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"    protected static String byKeyword \u003d \" /by \";","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"    protected String by;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"    private Deadline(String description, String by) {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"    public static Deadline of(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"            if (!startsWith(keyword, input)) {","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"                throw new BobException(\"OH NOSE! This input is not deadline..\");","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"            int byIdx \u003d input.indexOf(byKeyword);","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"            if (byIdx \u003d\u003d -1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"                throw new BobException(\"OH NOSE! \\\"\" + byKeyword + \"\\\" not found..\");","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"            if (keyword.length() + 1 \u003e byIdx) {","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"                throw new BobException(\"OH NOSE! The description of deadline cannot be empty..\");","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"            if (byIdx + byKeyword.length() \u003d\u003d input.length()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"                throw new BobException(\"OH NOSE! The by-date cannot be empty..\");","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"            String description \u003d input.substring(keyword.length() + 1, byIdx);","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"            String by \u003d input.substring(byIdx + byKeyword.length());","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"            return new Deadline(description, by);","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"        return null;","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"bryanyee33":40}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"    protected static String keyword \u003d \"event\";","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"    protected static String fromKeyword \u003d \" /from \";","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"    protected static String toKeyword \u003d \" /to \";","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"    protected String from;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"    protected String to;","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"    private Event(String description, String from, String to) {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"    public static Event of(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"            if (!startsWith(keyword, input)) {","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"                throw new BobException(\"OH NOSE! This input is not event..\");","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"            int fromIdx \u003d input.indexOf(fromKeyword);","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"            if (fromIdx \u003d\u003d -1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"                throw new BobException(\"OH NOSE! \\\"\" + fromKeyword + \"\\\" not found..\");","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"            if (keyword.length() + 1 \u003e fromIdx) {","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"                throw new BobException(\"OH NOSE! The description of event cannot be empty..\");","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"            int toIdx \u003d input.indexOf(toKeyword);","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"            if (toIdx \u003d\u003d -1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"                throw new BobException(\"OH NOSE! \\\"\" + toKeyword + \"\\\" not found..\");","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"            if (fromIdx \u003e toIdx) {","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"                throw new BobException(\"OH NOSE! The from-date must be before the to-date..\");","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"            if (fromIdx + fromKeyword.length() \u003e toIdx) {","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"                throw new BobException(\"OH NOSE! The from-date cannot be empty..\");","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"            if (toIdx + toKeyword.length() \u003d\u003d input.length()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"                throw new BobException(\"OH NOSE! The to-date cannot be empty..\");","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"            String description \u003d input.substring(keyword.length() + 1, fromIdx);","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"            String from \u003d input.substring(fromIdx + fromKeyword.length(), toIdx);","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"            String to \u003d input.substring(toIdx + toKeyword.length());","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"            return new Event(description, from, to);","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"        return null;","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"bryanyee33"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"bryanyee33"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"bryanyee33":55}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"    protected String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"    public static boolean startsWith(String keyword, String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"        return input.length() \u003e\u003d keyword.length() \u0026\u0026","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"               keyword.equals(input.substring(0, keyword.length()));","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"        return \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + this.description;","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"bryanyee33":27}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"    protected static String keyword \u003d \"todo\";","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"    private Todo(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"    public static Todo of(String input) {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"            if (!startsWith(keyword, input)) {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"                throw new BobException(\"OH NOSE! This input is not todo..\");","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"            if (keyword.length() + 1 \u003e\u003d input.length()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"                throw new BobException(\"OH NOSE! The description of todo cannot be empty..\");","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"            }","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"            return new Todo(input.substring(keyword.length() + 1));","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"        } catch (BobException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"        return null;","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"bryanyee33":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"todo a","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"event 1 /from 2 /to 3","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"todo","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"todo ","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"deadline return book by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"deadline return book/by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"deadline return book /bySunday","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"event project meeting /fromMon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"event project meeting /from Mon 2pm/to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"event project meeting/fromMon 2pm/to4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"event project meeting /to 4pm /from Mon 2pm","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"listing","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"mark","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"mark abc","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"mark 0","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"mark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"mark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"mark 4","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"mark 50","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"unmark","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"unmark abc","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"unmark 0","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"unmark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"unmark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"unmark 21","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"delete","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"delete def","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"delete 0","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"delete 5","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"delete 5","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"delete 1","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"delete 2","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"bryanyee33":39}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"java -classpath ..\\bin Bob \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bryanyee33":1,"-":20}}]
