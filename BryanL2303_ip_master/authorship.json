[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"    mainClass.set(\"Klee.Klee\")","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"    archiveBaseName \u003d \"klee\"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"BryanL2303":2,"-":40}},{"path":"src/main/java/Klee/Klee.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package Klee;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import Klee.command.Bye;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"import Klee.command.Command;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"import Klee.task.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"public class Klee {","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"    enum Instruction {","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"        todo,","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"        deadline,","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"        event,","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"        mark,","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"        unmark,","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"        delete","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"    public static String checkToDo(String input) throws KleeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"        String[] description \u003d input.split(\"todo \");","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"        if (description.length \u003d\u003d 2) return description[1];","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"        else throw new KleeException(\"We should think of a name for the Klee.task!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"    public static String[] checkDeadline(String input) throws KleeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"        String[] command \u003d input.split(\"deadline \");","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"        String[] output \u003d new String[2];","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"        if (command.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"            command \u003d command[1].split(\" /by \");","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"BryanL2303"},"content":"            if (command.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"BryanL2303"},"content":"                output[0] \u003d command[0];","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"BryanL2303"},"content":"                output[1] \u003d command[1];","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"BryanL2303"},"content":"                return output;","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"BryanL2303"},"content":"            } else throw new KleeException(\"We should indicate when this Klee.task is due with `/by`\");","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"BryanL2303"},"content":"        else throw new KleeException(\"We should think of a name for the Klee.task!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"BryanL2303"},"content":"    public static String[] checkEvent(String input) throws KleeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"BryanL2303"},"content":"        String[] command \u003d input.split(\"event \");","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"BryanL2303"},"content":"        String[] output \u003d new String[3];","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"BryanL2303"},"content":"        if (command.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"BryanL2303"},"content":"            command \u003d command[1].split(\" /from \");","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"BryanL2303"},"content":"            if (command.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"BryanL2303"},"content":"                output[0] \u003d command[0];","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"BryanL2303"},"content":"                command \u003d command[1].split(\" /to \");","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"BryanL2303"},"content":"                if (command.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"BryanL2303"},"content":"                    output[1] \u003d command[0];","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"BryanL2303"},"content":"                    output[2] \u003d command[1];","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"BryanL2303"},"content":"                    return output;","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"BryanL2303"},"content":"                } else throw new KleeException(\"We should indicate when this event ends with `/to`\");","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"BryanL2303"},"content":"            } else throw new KleeException(\"We should indicate when this event starts with `/from`\");","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"BryanL2303"},"content":"        } else throw new KleeException(\"We should think of a name for the Klee.task!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"BryanL2303"},"content":"    public static void saveData(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"BryanL2303"},"content":"            FileWriter data \u003d new FileWriter(\"data/Klee.Klee.txt\");","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"BryanL2303"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"BryanL2303"},"content":"                Task currentTask \u003d tasks.get(i);","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"BryanL2303"},"content":"                String line \u003d currentTask.toText();","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"BryanL2303"},"content":"                data.write(line + \"\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"BryanL2303"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"BryanL2303"},"content":"            data.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"BryanL2303"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"BryanL2303"},"content":"            System.out.println(\"Klee.Klee has run out of ink! I cannot write this down!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"BryanL2303"},"content":"    public static LocalDateTime parseDateTime(String dateTime) throws KleeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"BryanL2303"},"content":"        String[] splitDateTime \u003d dateTime.split(\" \");","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"BryanL2303"},"content":"        int year \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"BryanL2303"},"content":"        int month \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"BryanL2303"},"content":"        int day \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"BryanL2303"},"content":"        int hour \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"BryanL2303"},"content":"        int minute \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"BryanL2303"},"content":"        boolean hasTime \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"BryanL2303"},"content":"        if (splitDateTime.length \u003e 2) {","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"BryanL2303"},"content":"            // The input does not fit the syntax","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"BryanL2303"},"content":"            throw new KleeException(\"Time and date should be written with only 1 space between them.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"BryanL2303"},"content":"        } else if (splitDateTime.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"BryanL2303"},"content":"            //There is a space which indicates that time is given","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"BryanL2303"},"content":"            hour \u003d Integer.parseInt(splitDateTime[1].substring(0, 2));","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"BryanL2303"},"content":"            minute \u003d Integer.parseInt(splitDateTime[1].substring(2, 4));","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"BryanL2303"},"content":"            hasTime \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"BryanL2303"},"content":"        // Test which syntax of date was used","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"BryanL2303"},"content":"        String[] splitDate \u003d splitDateTime[0].split(\"-\");","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"BryanL2303"},"content":"        if (splitDate.length \u003d\u003d 3) {","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"BryanL2303"},"content":"            year \u003d Integer.parseInt(splitDate[0]);","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"BryanL2303"},"content":"            month \u003d Integer.parseInt(splitDate[1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"BryanL2303"},"content":"            day \u003d Integer.parseInt(splitDate[2]);","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"BryanL2303"},"content":"        } else if (splitDate.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"BryanL2303"},"content":"            splitDate \u003d splitDateTime[0].split(\"/\");","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"BryanL2303"},"content":"            if (splitDate.length \u003d\u003d 3) {","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"BryanL2303"},"content":"                year \u003d Integer.parseInt(splitDate[2]);","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"BryanL2303"},"content":"                month \u003d Integer.parseInt(splitDate[1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"BryanL2303"},"content":"                day \u003d Integer.parseInt(splitDate[0]);","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"BryanL2303"},"content":"            } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"BryanL2303"},"content":"                throw new KleeException(\"Dates should only be written like 27/1/2024 or 2024-1-27\");","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"BryanL2303"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"BryanL2303"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"BryanL2303"},"content":"            throw new KleeException(\"Dates should only be written like 27/1/2024 or 2024-1-27\");","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"BryanL2303"},"content":"        LocalDateTime returnVariable \u003d LocalDateTime.of(year, month, day, hour, minute);","lastModifiedDate":"2024-01-28"},{"lineNumber":116,"author":{"gitId":"BryanL2303"},"content":"        return returnVariable;","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":119,"author":{"gitId":"BryanL2303"},"content":"    public static LocalDateTime parseDateTimeTxt (String txt) {","lastModifiedDate":"2024-01-28"},{"lineNumber":120,"author":{"gitId":"BryanL2303"},"content":"        String[] dateTime \u003d txt.split(\" \");","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"BryanL2303"},"content":"        int year \u003d Integer.parseInt(dateTime[0]);","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"BryanL2303"},"content":"        int month \u003d Integer.parseInt(dateTime[1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"BryanL2303"},"content":"        int day \u003d Integer.parseInt(dateTime[2]);","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"BryanL2303"},"content":"        int hour \u003d Integer.parseInt(dateTime[3]);","lastModifiedDate":"2024-01-28"},{"lineNumber":125,"author":{"gitId":"BryanL2303"},"content":"        int minute \u003d Integer.parseInt(dateTime[4]);","lastModifiedDate":"2024-01-28"},{"lineNumber":126,"author":{"gitId":"BryanL2303"},"content":"        LocalDateTime returnVariable \u003d LocalDateTime.of(year, month, day, hour, minute);","lastModifiedDate":"2024-01-28"},{"lineNumber":127,"author":{"gitId":"BryanL2303"},"content":"        return returnVariable;","lastModifiedDate":"2024-01-28"},{"lineNumber":128,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":129,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":130,"author":{"gitId":"BryanL2303"},"content":"    public static String parseTxtDateTime (LocalDateTime dateTime) {","lastModifiedDate":"2024-01-28"},{"lineNumber":131,"author":{"gitId":"BryanL2303"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"yyyy MM dd H m\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":132,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":133,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":134,"author":{"gitId":"BryanL2303"},"content":"    public static String dateTimeString (LocalDateTime dateTime) {","lastModifiedDate":"2024-01-28"},{"lineNumber":135,"author":{"gitId":"BryanL2303"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy h:ma\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":136,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":137,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":138,"author":{"gitId":"BryanL2303"},"content":"    public static void run (Ui ui, Parser parser, Storage storage, TaskList tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":139,"author":{"gitId":"BryanL2303"},"content":"        Scanner getInput \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-28"},{"lineNumber":140,"author":{"gitId":"BryanL2303"},"content":"        while (true) {","lastModifiedDate":"2024-01-28"},{"lineNumber":141,"author":{"gitId":"BryanL2303"},"content":"            String input \u003d getInput.nextLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":142,"author":{"gitId":"BryanL2303"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":143,"author":{"gitId":"BryanL2303"},"content":"                Command command \u003d parser.parseInput(input);","lastModifiedDate":"2024-01-28"},{"lineNumber":144,"author":{"gitId":"BryanL2303"},"content":"                command.runCommand(ui, storage, tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":145,"author":{"gitId":"BryanL2303"},"content":"                if (command.getClass() \u003d\u003d Bye.class) {","lastModifiedDate":"2024-01-28"},{"lineNumber":146,"author":{"gitId":"BryanL2303"},"content":"                    break;","lastModifiedDate":"2024-01-28"},{"lineNumber":147,"author":{"gitId":"BryanL2303"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":148,"author":{"gitId":"BryanL2303"},"content":"            } catch (KleeException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":149,"author":{"gitId":"BryanL2303"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":150,"author":{"gitId":"BryanL2303"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":151,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":152,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":153,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":154,"author":{"gitId":"BryanL2303"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-28"},{"lineNumber":155,"author":{"gitId":"BryanL2303"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2024-01-28"},{"lineNumber":156,"author":{"gitId":"BryanL2303"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-01-28"},{"lineNumber":157,"author":{"gitId":"BryanL2303"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2024-01-28"},{"lineNumber":158,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":159,"author":{"gitId":"BryanL2303"},"content":"        TaskList tasks \u003d storage.retrieveTasks(ui);","lastModifiedDate":"2024-01-28"},{"lineNumber":160,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":161,"author":{"gitId":"BryanL2303"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-01-28"},{"lineNumber":162,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":163,"author":{"gitId":"BryanL2303"},"content":"        run(ui, parser, storage, tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":164,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":165,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":165}},{"path":"src/main/java/Klee/KleeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package Klee;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"public class KleeException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"    public KleeException(String errorMessage) {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"    public String NoDescriptionError() {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"        return \"\";","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"        if (obj.getClass() \u003d\u003d KleeException.class) return this.getMessage().equals(((KleeException) obj).getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"        else return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"BryanL2303":17}},{"path":"src/main/java/Klee/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package Klee;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import Klee.command.*;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"public class Parser {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"    public Parser () {}","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"    public static LocalDateTime parseDateTime(String dateTime) throws KleeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"        String[] splitDateTime \u003d dateTime.split(\" \");","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"        int year \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"        int month \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"        int day \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"        int hour \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"        int minute \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"        boolean hasTime \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"        if (splitDateTime.length \u003e 2) {","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"            // The input does not fit the syntax","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"            throw new KleeException(\"Time and date should be written with only 1 space between them.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"        } else if (splitDateTime.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"            //There is a space which indicates that time is given","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"            hour \u003d Integer.parseInt(splitDateTime[1].substring(0, 2));","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"            minute \u003d Integer.parseInt(splitDateTime[1].substring(2, 4));","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"            hasTime \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"        // Test which syntax of date was used","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"        String[] splitDate \u003d splitDateTime[0].split(\"-\");","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"        if (splitDate.length \u003d\u003d 3) {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"            year \u003d Integer.parseInt(splitDate[0]);","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"            month \u003d Integer.parseInt(splitDate[1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"            day \u003d Integer.parseInt(splitDate[2]);","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"        } else if (splitDate.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"            splitDate \u003d splitDateTime[0].split(\"/\");","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"            if (splitDate.length \u003d\u003d 3) {","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"                year \u003d Integer.parseInt(splitDate[2]);","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"BryanL2303"},"content":"                month \u003d Integer.parseInt(splitDate[1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"BryanL2303"},"content":"                day \u003d Integer.parseInt(splitDate[0]);","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"BryanL2303"},"content":"            } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"BryanL2303"},"content":"                throw new KleeException(\"Dates should only be written like 27/1/2024 or 2024-1-27\");","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"BryanL2303"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"BryanL2303"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"BryanL2303"},"content":"            throw new KleeException(\"Dates should only be written like 27/1/2024 or 2024-1-27\");","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"BryanL2303"},"content":"        LocalDateTime returnVariable \u003d LocalDateTime.of(year, month, day, hour, minute);","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"BryanL2303"},"content":"        return returnVariable;","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"BryanL2303"},"content":"    public Command parseInput (String input) throws KleeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"BryanL2303"},"content":"        switch (input) {","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"BryanL2303"},"content":"        case \"bye\":","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"BryanL2303"},"content":"            return new Bye();","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"BryanL2303"},"content":"        case \"list\":","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"BryanL2303"},"content":"            return new List();","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"BryanL2303"},"content":"        default:","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"BryanL2303"},"content":"            String[] command \u003d input.split(\" \");","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"BryanL2303"},"content":"            switch (command[0]) {","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"BryanL2303"},"content":"            case \"mark\":","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"BryanL2303"},"content":"                if (command.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"BryanL2303"},"content":"                    try {","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"BryanL2303"},"content":"                        Integer index \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"BryanL2303"},"content":"                        if (index \u003e\u003d 0) return new Mark(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"BryanL2303"},"content":"                        else throw new KleeException(\"Is that a negative number? I usually start counting from number 1...\");","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"BryanL2303"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"BryanL2303"},"content":"                        throw new KleeException(\"There should be an integer after mark to indicate which task to mark!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"BryanL2303"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"BryanL2303"},"content":"                } else throw new KleeException(\"There should be an integer after mark to indicate which task to mark!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"BryanL2303"},"content":"            case \"unmark\":","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"BryanL2303"},"content":"                if (command.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"BryanL2303"},"content":"                    try {","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"BryanL2303"},"content":"                        Integer index \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"BryanL2303"},"content":"                        if (index \u003e\u003d 0) return new Unmark(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"BryanL2303"},"content":"                        else throw new KleeException(\"Is that a negative number? I usually start counting from number 1...\");","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"BryanL2303"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"BryanL2303"},"content":"                        throw new KleeException(\"There should be an integer after unmark to indicate which task to unmark!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"BryanL2303"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"BryanL2303"},"content":"                } else throw new KleeException(\"There should be an integer after unmark to indicate which task to unmark!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"BryanL2303"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"BryanL2303"},"content":"                try {","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"BryanL2303"},"content":"                    String description \u003d input.split(\"todo \")[1];","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"BryanL2303"},"content":"                    return new ToDo(description);","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"BryanL2303"},"content":"                } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"BryanL2303"},"content":"                    throw new KleeException(\"The correct way to indicate a todo is `todo [description]`\");","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"BryanL2303"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"BryanL2303"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"BryanL2303"},"content":"                String[] splitDeadline \u003d input.split(\"deadline \");","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"BryanL2303"},"content":"                try {","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"BryanL2303"},"content":"                    String[] deadlineProps \u003d splitDeadline[1].split(\" /by \");","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"BryanL2303"},"content":"                    return new Deadline(deadlineProps[0], parseDateTime(deadlineProps[1]));","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"BryanL2303"},"content":"                } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"BryanL2303"},"content":"                    throw new KleeException(\"The correct way to indicate a deadline is `deadline [description] /by [date and time]`\");","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"BryanL2303"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"BryanL2303"},"content":"            case \"event\":","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"BryanL2303"},"content":"                String[] splitEvent \u003d input.split(\"event \");","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"BryanL2303"},"content":"                try {","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"BryanL2303"},"content":"                    String[] eventProps \u003d splitEvent[1].split(\" /from \");","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"BryanL2303"},"content":"                    String description \u003d eventProps[0];","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"BryanL2303"},"content":"                    eventProps \u003d eventProps[1].split(\" /to \");","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"BryanL2303"},"content":"                    return new Event(description, parseDateTime(eventProps[0]), parseDateTime(eventProps[1]));","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"BryanL2303"},"content":"                } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"BryanL2303"},"content":"                    throw new KleeException(\"The correct way to indicate a event is `event [description] /from [date and time] /to [date and time]`\");","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"BryanL2303"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"BryanL2303"},"content":"            case \"delete\":","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"BryanL2303"},"content":"                if (command.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"BryanL2303"},"content":"                    try {","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"BryanL2303"},"content":"                        Integer index \u003d Integer.parseInt(command[1]) - 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"BryanL2303"},"content":"                        if (index \u003e\u003d 0) return new Delete(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"BryanL2303"},"content":"                        else throw new KleeException(\"Is that a negative number? I usually start counting from number 1...\");","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"BryanL2303"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"BryanL2303"},"content":"                        throw new KleeException(\"There should be an integer after delete to indicate which task to delete!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"BryanL2303"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"BryanL2303"},"content":"                } else throw new KleeException(\"There should be an integer after delete to indicate which task to delete!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"BryanL2303"},"content":"            default:","lastModifiedDate":"2024-01-28"},{"lineNumber":116,"author":{"gitId":"BryanL2303"},"content":"                throw new KleeException(\"Klee doesn\u0027t understand, what are you talking about?\");","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"BryanL2303"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":119,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":120,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":120}},{"path":"src/main/java/Klee/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package Klee;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import Klee.task.Deadline;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"import Klee.task.Event;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import Klee.task.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"import Klee.task.ToDo;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"public class Storage {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"    private static String path \u003d \"data\";","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"    private static String fileName \u003d \"data/Klee.txt\";","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"    public Storage () {}","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"    public static LocalDateTime parseDateTime(String dateTime) throws KleeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"        String[] splitDateTime \u003d dateTime.split(\" \");","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"        int year \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"        int month \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"        int day \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"        int hour \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"        int minute \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"        boolean hasTime \u003d false;","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"        if (splitDateTime.length \u003e 2) {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"            // The input does not fit the syntax","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"            throw new KleeException(\"Time and date should be written with only 1 space between them.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"        } else if (splitDateTime.length \u003d\u003d 2) {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"            //There is a space which indicates that time is given","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"            hour \u003d Integer.parseInt(splitDateTime[1].substring(0, 2));","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"            minute \u003d Integer.parseInt(splitDateTime[1].substring(2, 4));","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"            hasTime \u003d true;","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"BryanL2303"},"content":"        // Test which syntax of date was used","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"BryanL2303"},"content":"        String[] splitDate \u003d splitDateTime[0].split(\"-\");","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"BryanL2303"},"content":"        if (splitDate.length \u003d\u003d 3) {","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"BryanL2303"},"content":"            year \u003d Integer.parseInt(splitDate[0]);","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"BryanL2303"},"content":"            month \u003d Integer.parseInt(splitDate[1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"BryanL2303"},"content":"            day \u003d Integer.parseInt(splitDate[2]);","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"BryanL2303"},"content":"        } else if (splitDate.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"BryanL2303"},"content":"            splitDate \u003d splitDateTime[0].split(\"/\");","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"BryanL2303"},"content":"            if (splitDate.length \u003d\u003d 3) {","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"BryanL2303"},"content":"                year \u003d Integer.parseInt(splitDate[2]);","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"BryanL2303"},"content":"                month \u003d Integer.parseInt(splitDate[1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"BryanL2303"},"content":"                day \u003d Integer.parseInt(splitDate[0]);","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"BryanL2303"},"content":"            } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"BryanL2303"},"content":"                throw new KleeException(\"Dates should only be written like 27/1/2024 or 2024-1-27\");","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"BryanL2303"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"BryanL2303"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"BryanL2303"},"content":"            throw new KleeException(\"Dates should only be written like 27/1/2024 or 2024-1-27\");","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"BryanL2303"},"content":"        LocalDateTime returnVariable \u003d LocalDateTime.of(year, month, day, hour, minute);","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"BryanL2303"},"content":"        return returnVariable;","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"BryanL2303"},"content":"    public static LocalDateTime parseDateTimeTxt (String txt) {","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"BryanL2303"},"content":"        String[] dateTime \u003d txt.split(\" \");","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"BryanL2303"},"content":"        int year \u003d Integer.parseInt(dateTime[0]);","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"BryanL2303"},"content":"        int month \u003d Integer.parseInt(dateTime[1]);","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"BryanL2303"},"content":"        int day \u003d Integer.parseInt(dateTime[2]);","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"BryanL2303"},"content":"        int hour \u003d Integer.parseInt(dateTime[3]);","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"BryanL2303"},"content":"        int minute \u003d Integer.parseInt(dateTime[4]);","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"BryanL2303"},"content":"        LocalDateTime returnVariable \u003d LocalDateTime.of(year, month, day, hour, minute);","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"BryanL2303"},"content":"        return returnVariable;","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"BryanL2303"},"content":"    public void saveTasks (TaskList tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"BryanL2303"},"content":"            FileWriter file \u003d new FileWriter(\"data/Klee.txt\");","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"BryanL2303"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"BryanL2303"},"content":"                Task currentTask \u003d tasks.get(i);","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"BryanL2303"},"content":"                String line \u003d currentTask.toText();","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"BryanL2303"},"content":"                file.write(line + \"\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"BryanL2303"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"BryanL2303"},"content":"            file.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"BryanL2303"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"BryanL2303"},"content":"            System.out.println(\"Klee has run out of ink! I cannot write this down!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"BryanL2303"},"content":"    public TaskList retrieveTasks (Ui ui) {","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"BryanL2303"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"BryanL2303"},"content":"        //Create /data directory only if it does not exist","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"BryanL2303"},"content":"        new File(path).mkdirs();","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"BryanL2303"},"content":"            File data \u003d new File(fileName);","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"BryanL2303"},"content":"            if (!data.exists()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"BryanL2303"},"content":"                data.createNewFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"BryanL2303"},"content":"            } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"BryanL2303"},"content":"                Scanner readFile \u003d new Scanner(data);","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"BryanL2303"},"content":"                while (readFile.hasNext()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"BryanL2303"},"content":"                    String read \u003d readFile.nextLine();","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"BryanL2303"},"content":"                    String[] line \u003d read.split(\" / \");","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"BryanL2303"},"content":"                    switch (line[0]) {","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"BryanL2303"},"content":"                    case \"T\":","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"BryanL2303"},"content":"                        tasks.add(ToDo.fromText(line[2], line[1]));","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"BryanL2303"},"content":"                        break;","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"BryanL2303"},"content":"                    case \"D\":","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"BryanL2303"},"content":"                        tasks.add(Deadline.fromText(line[2], line[1], parseDateTimeTxt(line[3])));","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"BryanL2303"},"content":"                        break;","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"BryanL2303"},"content":"                    case \"E\":","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"BryanL2303"},"content":"                        tasks.add(Event.fromText(line[2], line[1], parseDateTimeTxt(line[3]), parseDateTimeTxt(line[4])));","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"BryanL2303"},"content":"                        break;","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"BryanL2303"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"BryanL2303"},"content":"                }","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"BryanL2303"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"BryanL2303"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"BryanL2303"},"content":"            ui.showError(\"Klee could not find the book we wrote on last time... I\u0027m sorry...\");","lastModifiedDate":"2024-01-28"},{"lineNumber":116,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"BryanL2303"},"content":"        return tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":119,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":119}},{"path":"src/main/java/Klee/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package Klee;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import Klee.task.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"public class TaskList {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"    public TaskList () {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"    public void remove(int i) {","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"        tasks.remove(i);","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"    public Task get(int i) {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"        return tasks.get(i);","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"    public int size() {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"        return tasks.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"        if (obj.getClass() \u003d\u003d TaskList.class) {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"                if (this.size() \u003d\u003d ((TaskList) obj).size()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"                    for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"                        if (this.get(i) \u003d\u003d ((TaskList) obj).get(i)) return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"BryanL2303"},"content":"                    return true;","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"BryanL2303"},"content":"                } else return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"BryanL2303"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"BryanL2303"},"content":"                return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"BryanL2303"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"BryanL2303"},"content":"        } else return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":45}},{"path":"src/main/java/Klee/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package Klee;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import Klee.task.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"public class Ui {","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"    protected static String divider \u003d \"____________________________________________________________________________\";","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"    public Ui () {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"    public void showWelcome () {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"        //Greet user","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(\"Hello! My name is Klee.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(\"Are you here to break Klee out of solitary confinement?\");","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"    public void showError (String errorMessage) {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"    public void showTasks (TaskList tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(\"These are all the things that we have to do today:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"            System.out.println((i+1) + \". \" + tasks.get(i).getStatus());","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"    public void showCreation (Task task, int size) {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(\"Klee will help you write that down! : \");","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(task.getStatus());","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"BryanL2303"},"content":"    public void showMarked (Task task) {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(\"Great! Klee will put a big cross on this box:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(task.getStatus());","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"BryanL2303"},"content":"    public void showUnMarked(Task task) {","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(\"Oh no! Klee will burn the cross away...:\");","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(task.getStatus());","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"BryanL2303"},"content":"    public void showDeletion (Task task, int size) {","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(\"Okay, Klee will wipe this task away!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(task.getStatus());","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"BryanL2303"},"content":"    public void showBye () {","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(\"Goodbye. Klee will go back to solitary confinement now...\");","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":69}},{"path":"src/main/java/Klee/command/Bye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package Klee.command;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import Klee.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"import Klee.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import Klee.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"public class Bye extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"    public Bye () {}","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"    public void runCommand(Ui ui, Storage storage, TaskList tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"        ui.showBye();","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"        return obj.getClass() \u003d\u003d Bye.class;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":19}},{"path":"src/main/java/Klee/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package Klee.command;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import Klee.KleeException;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import Klee.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"import Klee.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"import Klee.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"    public abstract void runCommand(Ui ui, Storage storage, TaskList tasks) throws KleeException;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":11}},{"path":"src/main/java/Klee/command/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package Klee.command;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import Klee.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"import Klee.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import Klee.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"import Klee.task.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"public class Deadline extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"    protected String description;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"    public Deadline (String description, LocalDateTime deadline) {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"    public void runCommand(Ui ui, Storage storage, TaskList tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"        Task task \u003d new Klee.task.Deadline(description, deadline);","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"        ui.showCreation(task, tasks.size());","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"        if (obj.getClass() \u003d\u003d Deadline.class) return (this.description.equals(((Deadline) obj).description) \u0026\u0026 this.deadline.equals((((Deadline) obj).deadline)));","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"        else return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":31}},{"path":"src/main/java/Klee/command/Delete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package Klee.command;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import Klee.KleeException;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"import Klee.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import Klee.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"import Klee.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"import Klee.task.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"public class Delete extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"    protected int index;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"    public Delete (int index) {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"    public void runCommand(Ui ui, Storage storage, TaskList tasks) throws KleeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"        if (index \u003c tasks.size()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"            tasks.remove(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"            ui.showDeletion(task, tasks.size());","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"            throw new KleeException(\"But we only have \" + tasks.size() + \" tasks in the list...\");","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"        if (obj.getClass() \u003d\u003d Delete.class) return this.index \u003d\u003d ((Delete) obj).index;","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"        else return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":33}},{"path":"src/main/java/Klee/command/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package Klee.command;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import Klee.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"import Klee.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import Klee.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"import Klee.task.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"public class Event extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"    protected String description;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"    public Event (String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"    public void runCommand(Ui ui, Storage storage, TaskList tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"        Task task \u003d new Klee.task.Event(description, from, to);","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"        ui.showCreation(task, tasks.size());","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"        if (obj.getClass() \u003d\u003d Event.class) return (this.description.equals(((Event) obj).description) \u0026\u0026 this.from.equals((((Event) obj).from)) \u0026\u0026 this.to.equals((((Event) obj).to)));","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"        else return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":33}},{"path":"src/main/java/Klee/command/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package Klee.command;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import Klee.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"import Klee.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import Klee.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"public class List extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"    public void runCommand(Ui ui, Storage storage, TaskList tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"        ui.showTasks(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"        return obj.getClass() \u003d\u003d List.class;","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":16}},{"path":"src/main/java/Klee/command/Mark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package Klee.command;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import Klee.KleeException;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"import Klee.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import Klee.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"import Klee.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"import Klee.task.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"public class Mark extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"    protected int index;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"    public Mark (int index) {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"    public void runCommand(Ui ui, Storage storage, TaskList tasks) throws KleeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"        if (index \u003c tasks.size()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"            task.mark();","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"            ui.showMarked(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"        } else throw new KleeException(\"We do not have that many tasks on the list!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"        if (obj.getClass() \u003d\u003d Mark.class) return this.index \u003d\u003d ((Mark) obj).index;","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"        else return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":31}},{"path":"src/main/java/Klee/command/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package Klee.command;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import Klee.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"import Klee.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import Klee.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"import Klee.task.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"public class ToDo extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"    protected String description;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"    public ToDo (String description) {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"    public void runCommand(Ui ui, Storage storage, TaskList tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"        Task task \u003d new Klee.task.ToDo(description);","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"        ui.showCreation(task, tasks.size());","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"        if (obj.getClass() \u003d\u003d ToDo.class) return this.description.equals(((ToDo) obj).description);","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"        else return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":27}},{"path":"src/main/java/Klee/command/Unmark.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package Klee.command;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import Klee.KleeException;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"import Klee.Storage;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import Klee.TaskList;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"import Klee.Ui;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"import Klee.task.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"public class Unmark extends Command {","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"    protected int index;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"    public Unmark (int index) {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"    public void runCommand(Ui ui, Storage storage, TaskList tasks) throws KleeException {","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"        if (index \u003c tasks.size()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"            task.unMark();","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"            ui.showMarked(task);","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"        } else throw new KleeException(\"We do not have that many tasks on the list!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"        if (obj.getClass() \u003d\u003d Unmark.class) return this.index \u003d\u003d ((Unmark) obj).index;","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"        else return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":31}},{"path":"src/main/java/Klee/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package Klee.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"        this.type \u003d \"D\";","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"    public String getStatus() {","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"        String statusIcon \u003d (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"        return \"[\" + type + \"][\" + statusIcon + \"] \" + description + \" (by: \" + deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy h:ma\")) + \")\";","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"    public String toText() {","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"        return super.toText() + \" / \" + deadline.format(DateTimeFormatter.ofPattern(\"yyyy MM dd H m\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"    static public Task fromText(String description, String done, LocalDateTime by) {","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"        Task task \u003d new Deadline(description, by);","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"        task.isDone \u003d done.equals(\"1\");","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"        return task;","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"        if (Task.class.isAssignableFrom(obj.getClass())) return super.equals(obj) \u0026\u0026 this.deadline \u003d\u003d ((Deadline) obj).deadline;","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"        else return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"BryanL2303":35}},{"path":"src/main/java/Klee/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package Klee.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"    public String getStatus() {","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"        String statusIcon \u003d (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"        return \"[\" + type + \"][\" + statusIcon + \"] \" + description + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy h:ma\")) + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy h:ma\")) + \")\";","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"    public String toText() {","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"        return super.toText() + \" / \" + from.format(DateTimeFormatter.ofPattern(\"yyyy MM dd H m\")) + \" / \" + to.format(DateTimeFormatter.ofPattern(\"yyyy MM dd H m\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"    static public Task fromText(String description, String done, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"        Task task \u003d new Event(description, from, to);","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"        task.isDone \u003d done.equals(\"1\");","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"        return task;","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"        if (Task.class.isAssignableFrom(obj.getClass())) return super.equals(obj) \u0026\u0026 this.from \u003d\u003d ((Event) obj).from \u0026\u0026 this.to \u003d\u003d ((Event) obj).to;","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"        else return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"BryanL2303":37}},{"path":"src/main/java/Klee/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package Klee.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"public class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"    protected String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"    protected String type;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"    public String getStatus() {","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"        String statusIcon \u003d (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"        return \"[\" + statusIcon + \"] \" + description;","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"    public boolean done() {","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"        return isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"    public String type() { return type; }","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"    public String toText() {","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"        return type + \" / \" + (isDone ? \"1\" : \"0\") + \" / \" + description;","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"    public void mark() {","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"    public void unMark() {","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"BryanL2303"},"content":"        System.out.println(\"Gets called\");","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"BryanL2303"},"content":"        if (Task.class.isAssignableFrom(obj.getClass())) {","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"BryanL2303"},"content":"            return this.isDone \u003d\u003d ((Task) obj).isDone \u0026\u0026 this.description \u003d\u003d ((Task) obj).description \u0026\u0026 this.type \u003d\u003d ((Task) obj).type;","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"BryanL2303"},"content":"        } else return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"BryanL2303":43}},{"path":"src/main/java/Klee/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package Klee.task;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"    public String getStatus() {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"        String statusIcon \u003d (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"        return \"[\" + type + \"][\" + statusIcon + \"] \" + description;","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"    static public Task fromText(String description, String done) {","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"        Task task \u003d new ToDo(description);","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"        task.isDone \u003d done.equals(\"1\");","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"        return task;","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"        if (Task.class.isAssignableFrom(obj.getClass())) return super.equals(obj);","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"        else return false;","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"BryanL2303":25}},{"path":"src/test/java/Klee/KleeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package Klee;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"public class KleeTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"    public void dummyTest(){","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":16}},{"path":"src/test/java/Klee/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package Klee;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import Klee.command.*;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"    Parser parserTest \u003d new Parser();","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"    public void testGeneralInputs() {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"\");","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"Klee doesn\u0027t understand, what are you talking about?\");","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"blah\");","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"Klee doesn\u0027t understand, what are you talking about?\");","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"            Command expected \u003d new Bye();","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"bye\");","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {}","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"            Command expected \u003d new List();","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"list\");","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {}","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"BryanL2303"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"BryanL2303"},"content":"    public void testToDoInputs() {","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"BryanL2303"},"content":"            Command expected \u003d new ToDo(\"test\");","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"todo test\");","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException e) {}","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"todo \");","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a todo is `todo [description]`\");","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"todo\");","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a todo is `todo [description]`\");","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"BryanL2303"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"BryanL2303"},"content":"    public void testDeadlineInputs() {","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"BryanL2303"},"content":"            Command expected \u003d new Deadline(\"test\", LocalDateTime.of(2024, 1, 1, 18, 30));","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"deadline test /by 2024-1-1 1830\");","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException e) {}","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"BryanL2303"},"content":"            Command expected \u003d new Deadline(\"test\", LocalDateTime.of(2024, 1, 1, 18, 30));","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"deadline test /by 1/1/2024 1830\");","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException e) {}","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"deadline \");","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a deadline is `deadline [description] /by [date and time]`\");","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"deadline\");","lastModifiedDate":"2024-01-28"},{"lineNumber":89,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a deadline is `deadline [description] /by [date and time]`\");","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"deadline test\");","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a deadline is `deadline [description] /by [date and time]`\");","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"deadline test /by\");","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a deadline is `deadline [description] /by [date and time]`\");","lastModifiedDate":"2024-01-28"},{"lineNumber":105,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":106,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"deadline test/by 2024-1-1 1830\");","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a deadline is `deadline [description] /by [date and time]`\");","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":116,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"deadline test /by \");","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a deadline is `deadline [description] /by [date and time]`\");","lastModifiedDate":"2024-01-28"},{"lineNumber":119,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":120,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"BryanL2303"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"BryanL2303"},"content":"    public void testEventInputs() {","lastModifiedDate":"2024-01-28"},{"lineNumber":125,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":126,"author":{"gitId":"BryanL2303"},"content":"            Command expected \u003d new Event(\"test\", LocalDateTime.of(2024, 1, 1, 18, 30), LocalDateTime.of(2024, 1, 31, 18, 30));","lastModifiedDate":"2024-01-28"},{"lineNumber":127,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"event test /from 2024-1-1 1830 /to 2024-1-31 1830\");","lastModifiedDate":"2024-01-28"},{"lineNumber":128,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":129,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException e) {}","lastModifiedDate":"2024-01-28"},{"lineNumber":130,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":131,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":132,"author":{"gitId":"BryanL2303"},"content":"            Command expected \u003d new Event(\"test\", LocalDateTime.of(2024, 1, 1, 18, 30), LocalDateTime.of(2024, 1, 31, 18, 30));","lastModifiedDate":"2024-01-28"},{"lineNumber":133,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"event test /from 2024-1-1 1830 /to 31/1/2024 1830\");","lastModifiedDate":"2024-01-28"},{"lineNumber":134,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":135,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException e) {}","lastModifiedDate":"2024-01-28"},{"lineNumber":136,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":137,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":138,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"event \");","lastModifiedDate":"2024-01-28"},{"lineNumber":139,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":140,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a event is `event [description] /from [date and time] /to [date and time]`\");","lastModifiedDate":"2024-01-28"},{"lineNumber":141,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":142,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":143,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":144,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":145,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"event\");","lastModifiedDate":"2024-01-28"},{"lineNumber":146,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":147,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a event is `event [description] /from [date and time] /to [date and time]`\");","lastModifiedDate":"2024-01-28"},{"lineNumber":148,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":149,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":150,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":151,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":152,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"event test\");","lastModifiedDate":"2024-01-28"},{"lineNumber":153,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":154,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a event is `event [description] /from [date and time] /to [date and time]`\");","lastModifiedDate":"2024-01-28"},{"lineNumber":155,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":156,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":157,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":158,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":159,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"event test /from\");","lastModifiedDate":"2024-01-28"},{"lineNumber":160,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":161,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a event is `event [description] /from [date and time] /to [date and time]`\");","lastModifiedDate":"2024-01-28"},{"lineNumber":162,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":163,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":164,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":165,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":166,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"event test /from 1/1/2024\");","lastModifiedDate":"2024-01-28"},{"lineNumber":167,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":168,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a event is `event [description] /from [date and time] /to [date and time]`\");","lastModifiedDate":"2024-01-28"},{"lineNumber":169,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":170,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":171,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":172,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":173,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"event test /from 1/1/2024 /to\");","lastModifiedDate":"2024-01-28"},{"lineNumber":174,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":175,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"The correct way to indicate a event is `event [description] /from [date and time] /to [date and time]`\");","lastModifiedDate":"2024-01-28"},{"lineNumber":176,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":177,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":178,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":179,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":180,"author":{"gitId":"BryanL2303"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":181,"author":{"gitId":"BryanL2303"},"content":"    public void testMarkInputs() {","lastModifiedDate":"2024-01-28"},{"lineNumber":182,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":183,"author":{"gitId":"BryanL2303"},"content":"            Command expected \u003d new Mark(0);","lastModifiedDate":"2024-01-28"},{"lineNumber":184,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"mark 1\");","lastModifiedDate":"2024-01-28"},{"lineNumber":185,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":186,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException e) {}","lastModifiedDate":"2024-01-28"},{"lineNumber":187,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":188,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":189,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"mark\");","lastModifiedDate":"2024-01-28"},{"lineNumber":190,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":191,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"There should be an integer after mark to indicate which task to mark!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":192,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":193,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":194,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":195,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":196,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"mark tasks\");","lastModifiedDate":"2024-01-28"},{"lineNumber":197,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":198,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"There should be an integer after mark to indicate which task to mark!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":199,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":200,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":201,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":202,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":203,"author":{"gitId":"BryanL2303"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":204,"author":{"gitId":"BryanL2303"},"content":"    public void testUnMarkInputs() {","lastModifiedDate":"2024-01-28"},{"lineNumber":205,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":206,"author":{"gitId":"BryanL2303"},"content":"            Command expected \u003d new Unmark(0);","lastModifiedDate":"2024-01-28"},{"lineNumber":207,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"unmark 1\");","lastModifiedDate":"2024-01-28"},{"lineNumber":208,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":209,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException e) {}","lastModifiedDate":"2024-01-28"},{"lineNumber":210,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":211,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":212,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"unmark\");","lastModifiedDate":"2024-01-28"},{"lineNumber":213,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":214,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"There should be an integer after unmark to indicate which task to unmark!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":215,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":216,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":217,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":218,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":219,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"unmark tasks\");","lastModifiedDate":"2024-01-28"},{"lineNumber":220,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":221,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"There should be an integer after unmark to indicate which task to unmark!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":222,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":223,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":224,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":225,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":226,"author":{"gitId":"BryanL2303"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":227,"author":{"gitId":"BryanL2303"},"content":"    public void testDeleteInputs() {","lastModifiedDate":"2024-01-28"},{"lineNumber":228,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":229,"author":{"gitId":"BryanL2303"},"content":"            Command expected \u003d new Delete(0);","lastModifiedDate":"2024-01-28"},{"lineNumber":230,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"delete 1\");","lastModifiedDate":"2024-01-28"},{"lineNumber":231,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":232,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException e) {}","lastModifiedDate":"2024-01-28"},{"lineNumber":233,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":234,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":235,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"delete\");","lastModifiedDate":"2024-01-28"},{"lineNumber":236,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":237,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"There should be an integer after delete to indicate which task to delete!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":238,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":239,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":240,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":241,"author":{"gitId":"BryanL2303"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":242,"author":{"gitId":"BryanL2303"},"content":"            Command actual \u003d parserTest.parseInput(\"delete tasks\");","lastModifiedDate":"2024-01-28"},{"lineNumber":243,"author":{"gitId":"BryanL2303"},"content":"        } catch (KleeException actual) {","lastModifiedDate":"2024-01-28"},{"lineNumber":244,"author":{"gitId":"BryanL2303"},"content":"            KleeException expected \u003d new KleeException(\"There should be an integer after delete to indicate which task to delete!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":245,"author":{"gitId":"BryanL2303"},"content":"            assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":246,"author":{"gitId":"BryanL2303"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":247,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":248,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":248}},{"path":"src/test/java/Klee/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package Klee;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"import Klee.task.Task;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"import Klee.task.ToDo;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"public class TaskListTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"BryanL2303"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"BryanL2303"},"content":"    public void testAddTask() {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"BryanL2303"},"content":"        int expected \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"BryanL2303"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"BryanL2303"},"content":"        int actual \u003d tasks.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"BryanL2303"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"BryanL2303"},"content":"        tasks.add(new ToDo(\"test\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"BryanL2303"},"content":"        expected \u003d 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"BryanL2303"},"content":"        actual \u003d tasks.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"BryanL2303"},"content":"        tasks.add(new ToDo(\"test\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"BryanL2303"},"content":"        expected \u003d 2;","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"BryanL2303"},"content":"        actual \u003d tasks.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"BryanL2303"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"BryanL2303"},"content":"        tasks.add(new ToDo(\"test\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"BryanL2303"},"content":"        expected \u003d 3;","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"BryanL2303"},"content":"        actual \u003d tasks.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"BryanL2303"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"BryanL2303"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"BryanL2303"},"content":"    public void testRemoveTask() {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"BryanL2303"},"content":"        int expected \u003d 3;","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"BryanL2303"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"BryanL2303"},"content":"        tasks.add(new ToDo(\"test\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"BryanL2303"},"content":"        tasks.add(new ToDo(\"test\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"BryanL2303"},"content":"        tasks.add(new ToDo(\"test\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"BryanL2303"},"content":"        int actual \u003d tasks.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"BryanL2303"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"BryanL2303"},"content":"        tasks.remove(0);","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"BryanL2303"},"content":"        expected \u003d 2;","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"BryanL2303"},"content":"        actual \u003d tasks.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"BryanL2303"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"BryanL2303"},"content":"        tasks.remove(0);","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"BryanL2303"},"content":"        expected \u003d 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"BryanL2303"},"content":"        actual \u003d tasks.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"BryanL2303"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"BryanL2303"},"content":"        tasks.remove(0);","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"BryanL2303"},"content":"        expected \u003d 0;","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"BryanL2303"},"content":"        actual \u003d tasks.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"BryanL2303"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"BryanL2303"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"BryanL2303"},"content":"    public void testGetSize() {","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"BryanL2303"},"content":"        int expected \u003d 1;","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"BryanL2303"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"BryanL2303"},"content":"        tasks.add(new ToDo(\"test\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"BryanL2303"},"content":"        int actual \u003d tasks.size();","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"BryanL2303"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"BryanL2303"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"BryanL2303"},"content":"    public void testGetTask() {","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"BryanL2303"},"content":"        ToDo expected \u003d new ToDo(\"test\");","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"BryanL2303"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"BryanL2303"},"content":"        tasks.add(new ToDo(\"test\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"BryanL2303"},"content":"        Task actual \u003d tasks.get(0);","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"BryanL2303"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"BryanL2303"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":69}},{"path":"src/test/java/Klee/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"package Klee;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"public class UiTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"BryanL2303":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BryanL2303"},"content":"todo Make bomb","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"BryanL2303"},"content":"deadline Blast lake /by 30/1/2024","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"BryanL2303"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"BryanL2303"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"BryanL2303"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"BryanL2303"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"BryanL2303"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"BryanL2303"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"BryanL2303":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"BryanL2303"},"content":"java -classpath ..\\bin Klee.Klee \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"BryanL2303":1,"-":20}}]
