[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"TarinPairor"},"content":"# Tartar Chatbot","lastModifiedDate":"2024-02-10"},{"lineNumber":2,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":3,"author":{"gitId":"TarinPairor"},"content":"Tartar is a simple chatbot designed to help you manage your tasks efficiently. With Tartar, you can easily add tasks to a list, mark or unmark them as completed, and even search for specific tasks.","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":5,"author":{"gitId":"TarinPairor"},"content":"\u003e \"Simplicity is the ultimate sophistication.\" - Leonardo da Vinci","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"TarinPairor"},"content":"## Tools Used","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":9,"author":{"gitId":"TarinPairor"},"content":"- [Java](https://www.java.com/en/)","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"TarinPairor"},"content":"## Features","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":13,"author":{"gitId":"TarinPairor"},"content":"- [ ] Add tasks to the list","lastModifiedDate":"2024-02-10"},{"lineNumber":14,"author":{"gitId":"TarinPairor"},"content":"- [ ] Mark tasks as completed","lastModifiedDate":"2024-02-10"},{"lineNumber":15,"author":{"gitId":"TarinPairor"},"content":"- [ ] Unmark tasks as completed","lastModifiedDate":"2024-02-10"},{"lineNumber":16,"author":{"gitId":"TarinPairor"},"content":"- [ ] List all tasks","lastModifiedDate":"2024-02-10"},{"lineNumber":17,"author":{"gitId":"TarinPairor"},"content":"- [ ] Search for specific tasks","lastModifiedDate":"2024-02-10"},{"lineNumber":18,"author":{"gitId":"TarinPairor"},"content":"- [ ] Delete tasks","lastModifiedDate":"2024-02-10"},{"lineNumber":19,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":20,"author":{"gitId":"TarinPairor"},"content":"## Usage","lastModifiedDate":"2024-02-10"},{"lineNumber":21,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":22,"author":{"gitId":"TarinPairor"},"content":"1. **Adding a Task**: To add a task, simply type `add \u003ctask\u003e` in the chat window.","lastModifiedDate":"2024-02-10"},{"lineNumber":23,"author":{"gitId":"TarinPairor"},"content":"2. **Marking a Task**: To mark a task as completed, type `mark \u003ctask\u003e` in the chat window.","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"TarinPairor"},"content":"3. **Unmarking a Task**: To unmark a completed task, type `unmark \u003ctask\u003e` in the chat window.","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"TarinPairor"},"content":"4. **Listing Tasks**: To see all tasks, type `list` in the chat window.","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"TarinPairor"},"content":"5. **Searching for Tasks**: To find a specific task, type `find \u003ckeyword\u003e` in the chat window.","lastModifiedDate":"2024-02-10"},{"lineNumber":27,"author":{"gitId":"TarinPairor"},"content":"6. **Deleting a Task**: To delete a task, type `delete \u003ctask\u003e` in the chat window.","lastModifiedDate":"2024-02-10"}],"authorContributionMap":{"TarinPairor":27}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"TarinPairor"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"TarinPairor"},"content":"}","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"TarinPairor"},"content":"checkstyle {","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"TarinPairor"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"TarinPairor"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"TarinPairor":6,"-":41}},{"path":"src/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TarinPairor"},"content":"[T][ ] a","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"TarinPairor":1}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TarinPairor"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"TarinPairor"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"TarinPairor"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"TarinPairor"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"TarinPairor"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"TarinPairor"},"content":"public class Launcher {","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"TarinPairor"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"TarinPairor"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"TarinPairor"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"TarinPairor":12}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TarinPairor"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"TarinPairor"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"TarinPairor"},"content":"import parser.Parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"TarinPairor"},"content":"import processor.Processor;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"TarinPairor"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"TarinPairor"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"TarinPairor"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"TarinPairor"},"content":" * The Duke class is responsible for running the chatbot.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"TarinPairor"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"TarinPairor"},"content":"public class Duke {","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"TarinPairor"},"content":"    private final Ui chatbotUi;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"TarinPairor"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"TarinPairor"},"content":"    private final Processor processor;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"TarinPairor"},"content":"    private final Parser parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"TarinPairor"},"content":"     * Constructs a Duke object with the specified Ui, TaskList, Processor, and Parser.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"TarinPairor"},"content":"    public Duke() {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"TarinPairor"},"content":"        chatbotUi \u003d new Ui();","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"TarinPairor"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"TarinPairor"},"content":"        processor \u003d new Processor(taskList, chatbotUi);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"TarinPairor"},"content":"        parser \u003d new Parser(processor);","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"TarinPairor"},"content":"     * Executes the chatbot.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"TarinPairor"},"content":"     * @throws IOException if an I/O error occurs while running the chatbot","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"TarinPairor"},"content":"    public void run() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"TarinPairor"},"content":"        // Greet User","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"TarinPairor"},"content":"        System.out.print(chatbotUi.greetingBox());","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"TarinPairor"},"content":"        String userInput;","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"TarinPairor"},"content":"        do {","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"TarinPairor"},"content":"            userInput \u003d chatbotUi.getCommand();","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"TarinPairor"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"TarinPairor"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"TarinPairor"},"content":"            } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"TarinPairor"},"content":"                parser.processCommand(userInput);","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"TarinPairor"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"TarinPairor"},"content":"        } while (true);","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"TarinPairor"},"content":"        System.out.println(chatbotUi.dividerWrapper(Ui.bye()));","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"TarinPairor"},"content":"    //    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"TarinPairor"},"content":"    //     * Starts the chatbot.","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"TarinPairor"},"content":"    //     * @param stage the stage to be used for the chatbot","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"TarinPairor"},"content":"    //     * @throws IOException if an I/O error occurs while starting the chatbot","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"TarinPairor"},"content":"    //     * @see Application#start(Stage)","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"TarinPairor"},"content":"    //     */","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"TarinPairor"},"content":"    //    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"TarinPairor"},"content":"    //    public void start(Stage stage) {","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"TarinPairor"},"content":"    //        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"TarinPairor"},"content":"    //        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"TarinPairor"},"content":"    //","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"TarinPairor"},"content":"    //        stage.setScene(scene); // Setting the stage to show our screen","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"TarinPairor"},"content":"    //        stage.show(); // Render the stage.","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"TarinPairor"},"content":"    //    }","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"TarinPairor"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"TarinPairor"},"content":"        Duke d \u003d new Duke();","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"TarinPairor"},"content":"        d.run();","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"TarinPairor":75,"-":1}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TarinPairor"},"content":"package parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"TarinPairor"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"TarinPairor"},"content":"import processor.Processor;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"TarinPairor"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"TarinPairor"},"content":" * The Parser class is responsible for processing user commands and delegating them","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"TarinPairor"},"content":" * to the appropriate methods in the Processor class.","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"TarinPairor"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"TarinPairor"},"content":"public class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"TarinPairor"},"content":"    private final Processor processor;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"TarinPairor"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"TarinPairor"},"content":"     * * Constructs a Parser object with the specified Processor.","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"TarinPairor"},"content":"     * @param processor the Processor object to be used for processing user commands","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"TarinPairor"},"content":"    public Parser(Processor processor) {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"TarinPairor"},"content":"        this.processor \u003d processor;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"TarinPairor"},"content":"     * Processes the given user command by delegating it to the appropriate method in the Processor class.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"TarinPairor"},"content":"     * @param userInput the user command to be processed","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"TarinPairor"},"content":"     * @throws IOException if an I/O error occurs while processing the command","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"TarinPairor"},"content":"    public void processCommand(String userInput) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"TarinPairor"},"content":"        if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"TarinPairor"},"content":"            processor.userInputFindTask(userInput);","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"TarinPairor"},"content":"        } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"TarinPairor"},"content":"            processor.userInputDeleteTask(userInput);","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"TarinPairor"},"content":"        } else if (userInput.startsWith(\"mark\") || userInput.startsWith(\"unmark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"TarinPairor"},"content":"            processor.userInputProcessMarkUnmark(userInput);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"TarinPairor"},"content":"        } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"TarinPairor"},"content":"            processor.userInputListTasks();","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"TarinPairor"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"TarinPairor"},"content":"            processor.userInputAddTask(userInput);","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"TarinPairor"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"TarinPairor":42}},{"path":"src/main/java/processor/Processor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TarinPairor"},"content":"package processor;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"TarinPairor"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"TarinPairor"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"TarinPairor"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"TarinPairor"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"TarinPairor"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"TarinPairor"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"TarinPairor"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"TarinPairor"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"TarinPairor"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"TarinPairor"},"content":" * The Processor class is responsible for processing user input and performing operations on the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"TarinPairor"},"content":" * It interacts with the TaskList, Ui, and Storage classes to handle user commands and manage tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"TarinPairor"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"TarinPairor"},"content":"public class Processor {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"TarinPairor"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"TarinPairor"},"content":"    private Ui chatbotUi;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"TarinPairor"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"TarinPairor"},"content":"     * Constructor for Processor element","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"TarinPairor"},"content":"     * @param taskList","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"TarinPairor"},"content":"     * @param chatbotUi","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"TarinPairor"},"content":"    public Processor(TaskList taskList, Ui chatbotUi) {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"TarinPairor"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"TarinPairor"},"content":"        this.chatbotUi \u003d chatbotUi;","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"TarinPairor"},"content":"        this.storage \u003d new Storage(\"src/data/tasks.txt\", taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"TarinPairor"},"content":"     * Processes the given user command by delegating it to the appropriate method in the Processor class.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"TarinPairor"},"content":"     * Specifically, this method processes the user command to mark or unmark a task in the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"TarinPairor"},"content":"     * @param userInput the user command to be processed","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"TarinPairor"},"content":"     * @throws IOException if an I/O error occurs while processing the command","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"TarinPairor"},"content":"    public void userInputProcessMarkUnmark(String userInput) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"TarinPairor"},"content":"        String[] array \u003d userInput.split(\" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"TarinPairor"},"content":"        String command \u003d array[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"TarinPairor"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"TarinPairor"},"content":"            int number \u003d Integer.parseInt(array[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"TarinPairor"},"content":"            if (command.equals(\"mark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"TarinPairor"},"content":"                taskList.markTask(number - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"TarinPairor"},"content":"                System.out.println(chatbotUi.dividerWrapper(","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"TarinPairor"},"content":"                        chatbotUi.mark() + \"\\n\" + taskList.getTaskAtIndex(number - 1)));","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"TarinPairor"},"content":"            } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"TarinPairor"},"content":"                taskList.unmarkTask(number - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"TarinPairor"},"content":"                System.out.println(chatbotUi.dividerWrapper(","lastModifiedDate":"2024-02-09"},{"lineNumber":53,"author":{"gitId":"TarinPairor"},"content":"                        chatbotUi.unmark() + \"\\n\" + taskList.getTaskAtIndex(number - 1)));","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"TarinPairor"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"TarinPairor"},"content":"            storage.writeToFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"TarinPairor"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(\"You must use a number to mark.\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"TarinPairor"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(\"You must select a number within the size of the Task List.\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"TarinPairor"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(\"Error writing to file in storage.\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"TarinPairor"},"content":"     * Processes the given user command by delegating it to the appropriate method in the Processor class.","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"TarinPairor"},"content":"     * Specifically, this method processes the user command to add a task to the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"TarinPairor"},"content":"     * @param userInput the user command to be processed","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"TarinPairor"},"content":"     * @throws IOException if an I/O error occurs while processing the command","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"TarinPairor"},"content":"    public void userInputAddTask(String userInput) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"TarinPairor"},"content":"        String[] tokens \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"TarinPairor"},"content":"        if (tokens.length \u003d\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(\"Can not type a blank input!\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"TarinPairor"},"content":"            return;","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"TarinPairor"},"content":"        String command \u003d tokens[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"TarinPairor"},"content":"        if (!(command.equals(\"todo\") || command.equals(\"deadline\") || command.equals(\"event\"))) {","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(\"I do not know what type of task that is!\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"TarinPairor"},"content":"            return;","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"TarinPairor"},"content":"        if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(\"Description of todo can\u0027t be blank!\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"TarinPairor"},"content":"            return;","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"TarinPairor"},"content":"        String description \u003d tokens[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"TarinPairor"},"content":"        String[] times \u003d userInput.split(\"//\");","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"TarinPairor"},"content":"        String desc \u003d times[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"TarinPairor"},"content":"        int firstSpaceIndex \u003d desc.indexOf(\u0027 \u0027);","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"TarinPairor"},"content":"        String substringAfterSpace \u003d desc.substring(","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"TarinPairor"},"content":"                firstSpaceIndex + 1);","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"TarinPairor"},"content":"        switch (command) {","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"TarinPairor"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"TarinPairor"},"content":"            taskList.addTask(new Task(description, false));","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(","lastModifiedDate":"2024-02-09"},{"lineNumber":105,"author":{"gitId":"TarinPairor"},"content":"                    \"Got it. I\u0027ve added this task:\\n\" + taskList.getTaskAtIndex(taskList.size() - 1)","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"TarinPairor"},"content":"                    + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"TarinPairor"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"TarinPairor"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"TarinPairor"},"content":"            if (times.length \u003c 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"TarinPairor"},"content":"                System.out.println(chatbotUi.dividerWrapper(\"Wrong syntax! Must be `deadline \u003ctask\u003e //by \u003cdeadline\u003e`\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"TarinPairor"},"content":"                return;","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"TarinPairor"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"TarinPairor"},"content":"            String deadline \u003d times[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"TarinPairor"},"content":"            if (!deadline.startsWith(\"by \")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"TarinPairor"},"content":"                System.out.println(chatbotUi.dividerWrapper(\"You must start the statement with the word `//by`.\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"TarinPairor"},"content":"                return;","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"TarinPairor"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"TarinPairor"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"TarinPairor"},"content":"                //System.out.println(deadline + \" test\");","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"TarinPairor"},"content":"                LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(","lastModifiedDate":"2024-02-09"},{"lineNumber":123,"author":{"gitId":"TarinPairor"},"content":"                        deadline.substring(3), DateTimeFormatter.ofPattern(\"M/d/yyyy HHmm\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":124,"author":{"gitId":"TarinPairor"},"content":"                String formattedDeadline \u003d deadlineDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, ha\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"TarinPairor"},"content":"                taskList.addDeadlineTask(substringAfterSpace, formattedDeadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"TarinPairor"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"TarinPairor"},"content":"                System.out.println(chatbotUi.recommenderWrapper(","lastModifiedDate":"2024-02-09"},{"lineNumber":128,"author":{"gitId":"TarinPairor"},"content":"                        \"Added the task, but recommend using\"","lastModifiedDate":"2024-02-09"},{"lineNumber":129,"author":{"gitId":"TarinPairor"},"content":"                                + \" the date/time format `M/d/yyyy HHmm` for better experience.\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":130,"author":{"gitId":"TarinPairor"},"content":"                taskList.addDeadlineTask(substringAfterSpace, deadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":131,"author":{"gitId":"TarinPairor"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(","lastModifiedDate":"2024-02-09"},{"lineNumber":134,"author":{"gitId":"TarinPairor"},"content":"                    \"Got it. I\u0027ve added this task:\\n\" + taskList.getTaskAtIndex(taskList.size() - 1)","lastModifiedDate":"2024-02-09"},{"lineNumber":135,"author":{"gitId":"TarinPairor"},"content":"                    + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"TarinPairor"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":137,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"TarinPairor"},"content":"        case \"event\":","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"TarinPairor"},"content":"            if (times.length \u003c 3) {","lastModifiedDate":"2024-02-01"},{"lineNumber":141,"author":{"gitId":"TarinPairor"},"content":"                System.out.println(chatbotUi.dividerWrapper(","lastModifiedDate":"2024-02-09"},{"lineNumber":142,"author":{"gitId":"TarinPairor"},"content":"                        \"Wrong syntax! Must be `event \u003ctask\u003e //from \u003cstart date\u003e //to \u003cend date\u003e`\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":143,"author":{"gitId":"TarinPairor"},"content":"                return;","lastModifiedDate":"2024-02-01"},{"lineNumber":144,"author":{"gitId":"TarinPairor"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"TarinPairor"},"content":"            String start \u003d times[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"TarinPairor"},"content":"            String end \u003d times[2].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":147,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"TarinPairor"},"content":"            if (!start.startsWith(\"from \") || !end.startsWith(\"to \")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"TarinPairor"},"content":"                System.out.println(chatbotUi.dividerWrapper(","lastModifiedDate":"2024-02-09"},{"lineNumber":150,"author":{"gitId":"TarinPairor"},"content":"                        \"You must start the statements with the words `//from` and `//to`.\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":151,"author":{"gitId":"TarinPairor"},"content":"                return;","lastModifiedDate":"2024-02-01"},{"lineNumber":152,"author":{"gitId":"TarinPairor"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":154,"author":{"gitId":"TarinPairor"},"content":"            try {","lastModifiedDate":"2024-02-01"},{"lineNumber":155,"author":{"gitId":"TarinPairor"},"content":"                LocalDateTime startDateTime \u003d LocalDateTime.parse(","lastModifiedDate":"2024-02-09"},{"lineNumber":156,"author":{"gitId":"TarinPairor"},"content":"                        start.substring(5), DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":157,"author":{"gitId":"TarinPairor"},"content":"                LocalDateTime endDateTime \u003d LocalDateTime.parse(","lastModifiedDate":"2024-02-09"},{"lineNumber":158,"author":{"gitId":"TarinPairor"},"content":"                        end.substring(3), DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":159,"author":{"gitId":"TarinPairor"},"content":"                String formattedStart \u003d startDateTime.format(","lastModifiedDate":"2024-02-09"},{"lineNumber":160,"author":{"gitId":"TarinPairor"},"content":"                        DateTimeFormatter.ofPattern(\"MMM dd yyyy, ha\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":161,"author":{"gitId":"TarinPairor"},"content":"                String formattedEnd \u003d endDateTime.format(","lastModifiedDate":"2024-02-09"},{"lineNumber":162,"author":{"gitId":"TarinPairor"},"content":"                        DateTimeFormatter.ofPattern(\"MMM dd yyyy, ha\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":163,"author":{"gitId":"TarinPairor"},"content":"                taskList.addEventTask(substringAfterSpace, formattedStart, formattedEnd);","lastModifiedDate":"2024-02-01"},{"lineNumber":164,"author":{"gitId":"TarinPairor"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":165,"author":{"gitId":"TarinPairor"},"content":"                System.out.println(chatbotUi.recommenderWrapper(","lastModifiedDate":"2024-02-09"},{"lineNumber":166,"author":{"gitId":"TarinPairor"},"content":"                        \"Added the task, but recommend using\"","lastModifiedDate":"2024-02-09"},{"lineNumber":167,"author":{"gitId":"TarinPairor"},"content":"                                + \" the date/time format `M/d/yyyy HHmm` \"","lastModifiedDate":"2024-02-09"},{"lineNumber":168,"author":{"gitId":"TarinPairor"},"content":"                                + \"on both start and end dates for better experience.\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":169,"author":{"gitId":"TarinPairor"},"content":"                taskList.addEventTask(substringAfterSpace, start, end.substring(3)); //substring(3) to remove \"to \"","lastModifiedDate":"2024-02-01"},{"lineNumber":170,"author":{"gitId":"TarinPairor"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":171,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":172,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(","lastModifiedDate":"2024-02-09"},{"lineNumber":173,"author":{"gitId":"TarinPairor"},"content":"                    \"Got it. I\u0027ve added this task:\\n\" + taskList.getTaskAtIndex(taskList.size() - 1)","lastModifiedDate":"2024-02-09"},{"lineNumber":174,"author":{"gitId":"TarinPairor"},"content":"                    + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":175,"author":{"gitId":"TarinPairor"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":176,"author":{"gitId":"TarinPairor"},"content":"        default:","lastModifiedDate":"2024-02-01"},{"lineNumber":177,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(\"Invalid command. Please enter a valid command.\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":178,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":179,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":180,"author":{"gitId":"TarinPairor"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":181,"author":{"gitId":"TarinPairor"},"content":"            storage.writeToFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":182,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":183,"author":{"gitId":"TarinPairor"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":184,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(\"Error writing to file in storage.\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":185,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":186,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":187,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":188,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":189,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":190,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":191,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":192,"author":{"gitId":"TarinPairor"},"content":"     * Processes the given user command by delegating it to the appropriate method in the Processor class.","lastModifiedDate":"2024-02-01"},{"lineNumber":193,"author":{"gitId":"TarinPairor"},"content":"     * Specifically, this method processes the user command to list all tasks in the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":194,"author":{"gitId":"TarinPairor"},"content":"     * @throws IOException if an I/O error occurs while processing the command","lastModifiedDate":"2024-02-01"},{"lineNumber":195,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":196,"author":{"gitId":"TarinPairor"},"content":"    public void userInputListTasks() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":197,"author":{"gitId":"TarinPairor"},"content":"        // if array empty","lastModifiedDate":"2024-02-01"},{"lineNumber":198,"author":{"gitId":"TarinPairor"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":199,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(\"Your list is empty\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":200,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":201,"author":{"gitId":"TarinPairor"},"content":"        else {","lastModifiedDate":"2024-02-01"},{"lineNumber":202,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(","lastModifiedDate":"2024-02-09"},{"lineNumber":203,"author":{"gitId":"TarinPairor"},"content":"                    \"Here are the tasks in your list: \\n\" + storage.generateTasks()));","lastModifiedDate":"2024-02-09"},{"lineNumber":204,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":205,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":206,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":207,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":208,"author":{"gitId":"TarinPairor"},"content":"     * Processes the given user command by delegating it to the appropriate method in the Processor class.","lastModifiedDate":"2024-02-01"},{"lineNumber":209,"author":{"gitId":"TarinPairor"},"content":"     * Specifically, this method processes the user command to delete a task from the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":210,"author":{"gitId":"TarinPairor"},"content":"     * @param userInput the user command to be processed","lastModifiedDate":"2024-02-01"},{"lineNumber":211,"author":{"gitId":"TarinPairor"},"content":"     * @throws IOException if an I/O error occurs while processing the command","lastModifiedDate":"2024-02-01"},{"lineNumber":212,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":213,"author":{"gitId":"TarinPairor"},"content":"    public void userInputDeleteTask(String userInput) {","lastModifiedDate":"2024-02-01"},{"lineNumber":214,"author":{"gitId":"TarinPairor"},"content":"        String[] array \u003d userInput.split(\" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":215,"author":{"gitId":"TarinPairor"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":216,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":217,"author":{"gitId":"TarinPairor"},"content":"            int number \u003d Integer.parseInt(array[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":218,"author":{"gitId":"TarinPairor"},"content":"            Task temp \u003d taskList.getTaskAtIndex(number - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":219,"author":{"gitId":"TarinPairor"},"content":"            taskList.deleteAtIndex(number - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":220,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(","lastModifiedDate":"2024-02-09"},{"lineNumber":221,"author":{"gitId":"TarinPairor"},"content":"                    \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-02-09"},{"lineNumber":222,"author":{"gitId":"TarinPairor"},"content":"                            + temp + \"\\nNow you have \"","lastModifiedDate":"2024-02-09"},{"lineNumber":223,"author":{"gitId":"TarinPairor"},"content":"                            + taskList.size() + \" tasks in the list\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":224,"author":{"gitId":"TarinPairor"},"content":"            storage.writeToFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":225,"author":{"gitId":"TarinPairor"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":226,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(\"You must use a number to delete successfully.\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":227,"author":{"gitId":"TarinPairor"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":228,"author":{"gitId":"TarinPairor"},"content":"            // System.out.println(e)","lastModifiedDate":"2024-02-01"},{"lineNumber":229,"author":{"gitId":"TarinPairor"},"content":"            if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-01"},{"lineNumber":230,"author":{"gitId":"TarinPairor"},"content":"                System.out.println(chatbotUi.dividerWrapper(\"Can not delete, task list is empty!\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":231,"author":{"gitId":"TarinPairor"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":232,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(\"You must select a number within the scope of the task list\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":233,"author":{"gitId":"TarinPairor"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":234,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(\"Error writing to file in storage.\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":235,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":236,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":237,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":238,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":239,"author":{"gitId":"TarinPairor"},"content":"     * Processes the given user command by delegating it to the appropriate method in the Processor class.","lastModifiedDate":"2024-02-02"},{"lineNumber":240,"author":{"gitId":"TarinPairor"},"content":"     * Specifically, this method processes the user command to find a task in the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":241,"author":{"gitId":"TarinPairor"},"content":"     * @param userInput the user command to be processed","lastModifiedDate":"2024-02-02"},{"lineNumber":242,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":243,"author":{"gitId":"TarinPairor"},"content":"    public void userInputFindTask(String userInput) {","lastModifiedDate":"2024-02-02"},{"lineNumber":244,"author":{"gitId":"TarinPairor"},"content":"        String[] array \u003d userInput.split(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":245,"author":{"gitId":"TarinPairor"},"content":"        String keyword \u003d array[1];","lastModifiedDate":"2024-02-02"},{"lineNumber":246,"author":{"gitId":"TarinPairor"},"content":"        if (taskList.findTask(keyword).equals(\"\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":247,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(chatbotUi.dividerWrapper(","lastModifiedDate":"2024-02-09"},{"lineNumber":248,"author":{"gitId":"TarinPairor"},"content":"                    \"No matching tasks in your list.\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":249,"author":{"gitId":"TarinPairor"},"content":"            return;","lastModifiedDate":"2024-02-02"},{"lineNumber":250,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":251,"author":{"gitId":"TarinPairor"},"content":"        System.out.println(chatbotUi.dividerWrapper(","lastModifiedDate":"2024-02-09"},{"lineNumber":252,"author":{"gitId":"TarinPairor"},"content":"                \"Here are the matching tasks in your list: \\n\" + taskList.findTask(keyword)));","lastModifiedDate":"2024-02-09"},{"lineNumber":253,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":254,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":255,"author":{"gitId":"TarinPairor"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"TarinPairor":255}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TarinPairor"},"content":"package storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"TarinPairor"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"TarinPairor"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"TarinPairor"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"TarinPairor"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"TarinPairor"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"TarinPairor"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"TarinPairor"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"TarinPairor"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"TarinPairor"},"content":" * The Storage class is responsible for reading and writing tasks to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"TarinPairor"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"TarinPairor"},"content":"public class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"TarinPairor"},"content":"    private final String filePath;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"TarinPairor"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"TarinPairor"},"content":"     * Constructs a Storage object with the specified file path and TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"TarinPairor"},"content":"     * @param filePath the file path of the file to be used for storing tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"TarinPairor"},"content":"     * @param taskList the TaskList object to be used for storing tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"TarinPairor"},"content":"    public Storage(String filePath, TaskList taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"TarinPairor"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"TarinPairor"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"TarinPairor"},"content":"     * Writes the tasks to the file and adds them to the TaskList representation.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"TarinPairor"},"content":"     * @throws IOException if an I/O error occurs while reading the file","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"TarinPairor"},"content":"    public void writeToFile() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"TarinPairor"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"TarinPairor"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"TarinPairor"},"content":"            for (Task task : taskList.getTaskList()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"TarinPairor"},"content":"                writer.write(task.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"TarinPairor"},"content":"                writer.newLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"TarinPairor"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"TarinPairor"},"content":"            writer.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"TarinPairor"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(\"Error writing list to file.\");","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"TarinPairor"},"content":"            System.out.println(\"Error writing to file.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"TarinPairor"},"content":"     * Generates a String representation of the tasks in the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"TarinPairor"},"content":"     * @return a String representation of the tasks in the TaskList","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"TarinPairor"},"content":"     * @throws IOException if an I/O error occurs while generating the String representation","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"TarinPairor"},"content":"    public String generateTasks() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"TarinPairor"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"TarinPairor"},"content":"        String line;","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"TarinPairor"},"content":"        StringBuilder tasks \u003d new StringBuilder();","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"TarinPairor"},"content":"        int i \u003d 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"TarinPairor"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"TarinPairor"},"content":"            tasks.append(i++ + \". \").append(line).append(\"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"TarinPairor"},"content":"        reader.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"TarinPairor"},"content":"        return tasks.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"TarinPairor"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"TarinPairor":65}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TarinPairor"},"content":"package tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"TarinPairor"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"TarinPairor"},"content":" * The Task class represents a task in the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"TarinPairor"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"TarinPairor"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"TarinPairor"},"content":"    private String desc;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"TarinPairor"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"TarinPairor"},"content":"    private TaskType type;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"TarinPairor"},"content":"    private String start;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"TarinPairor"},"content":"    private String end;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"TarinPairor"},"content":"     * The TaskType enum represents the type of task.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"TarinPairor"},"content":"    public enum TaskType {","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"TarinPairor"},"content":"        TODO(\u0027T\u0027), DEADLINE(\u0027D\u0027), EVENT(\u0027E\u0027);","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"TarinPairor"},"content":"        private char code;","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"TarinPairor"},"content":"        TaskType(char code) {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"TarinPairor"},"content":"            this.code \u003d code;","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"TarinPairor"},"content":"        public char getCode() {","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"TarinPairor"},"content":"            return code;","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"TarinPairor"},"content":"     * Constructor for the todo Task.","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"TarinPairor"},"content":"     * @param desc","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"TarinPairor"},"content":"     * @param isDone","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"TarinPairor"},"content":"    public Task(String desc, boolean isDone) {","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"TarinPairor"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"TarinPairor"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"TarinPairor"},"content":"        this.type \u003d TaskType.TODO;","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"TarinPairor"},"content":"     * Constructor for the deadline task.","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"TarinPairor"},"content":"     * @param desc","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"TarinPairor"},"content":"     * @param isDone","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"TarinPairor"},"content":"     * @param start","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"TarinPairor"},"content":"    public Task(String desc, boolean isDone, String start) {","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"TarinPairor"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"TarinPairor"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"TarinPairor"},"content":"        this.type \u003d TaskType.DEADLINE;","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"TarinPairor"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"TarinPairor"},"content":"     * Constructor for the event Task","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"TarinPairor"},"content":"     * @param desc","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"TarinPairor"},"content":"     * @param isDone","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"TarinPairor"},"content":"     * @param start","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"TarinPairor"},"content":"     * @param end","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"TarinPairor"},"content":"    public Task(String desc, boolean isDone, String start, String end) {","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"TarinPairor"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"TarinPairor"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"TarinPairor"},"content":"        this.type \u003d TaskType.EVENT;","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"TarinPairor"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"TarinPairor"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"TarinPairor"},"content":"    * Returns the task description.","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"TarinPairor"},"content":"    * @return the task description","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"TarinPairor"},"content":"    */","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"TarinPairor"},"content":"    public String getDesc() {","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"TarinPairor"},"content":"        return desc;","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"TarinPairor"},"content":"     * Returns true if the task is done, false otherwise.","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"TarinPairor"},"content":"     * @return true if the task is done, false otherwise","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"TarinPairor"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"TarinPairor"},"content":"        return isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"TarinPairor"},"content":"     * Returns the type of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"TarinPairor"},"content":"     * @return the type of the task","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"TarinPairor"},"content":"    public TaskType getType() {","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"TarinPairor"},"content":"        return type;","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"TarinPairor"},"content":"     * Returns the start date/time of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"TarinPairor"},"content":"     * @return the start date/time of the task","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"TarinPairor"},"content":"    public String getStart() {","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"TarinPairor"},"content":"        return start;","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"TarinPairor"},"content":"     * Returns the end date/time of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"TarinPairor"},"content":"     * @return the end date/time of the task","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"TarinPairor"},"content":"    public String getEnd() {","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"TarinPairor"},"content":"        return end;","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"TarinPairor"},"content":"    /*","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"TarinPairor"},"content":"     * used to mark a task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"TarinPairor"},"content":"    public void mark() {","lastModifiedDate":"2024-01-25"},{"lineNumber":115,"author":{"gitId":"TarinPairor"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":116,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":117,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":118,"author":{"gitId":"TarinPairor"},"content":"    /*","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"TarinPairor"},"content":"     * used to unmark a task as not done.","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"TarinPairor"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-25"},{"lineNumber":122,"author":{"gitId":"TarinPairor"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":123,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":124,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":125,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"TarinPairor"},"content":"     * Returns a String representation of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"TarinPairor"},"content":"     * @return a String representation of the task","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"TarinPairor"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":130,"author":{"gitId":"TarinPairor"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":131,"author":{"gitId":"TarinPairor"},"content":"        StringBuilder taskString \u003d new StringBuilder();","lastModifiedDate":"2024-01-25"},{"lineNumber":132,"author":{"gitId":"TarinPairor"},"content":"        taskString.append(\"[\").append(type.getCode()).append(\"]\");","lastModifiedDate":"2024-01-25"},{"lineNumber":133,"author":{"gitId":"TarinPairor"},"content":"        taskString.append(isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-01-25"},{"lineNumber":134,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":135,"author":{"gitId":"TarinPairor"},"content":"        // Append task description","lastModifiedDate":"2024-01-25"},{"lineNumber":136,"author":{"gitId":"TarinPairor"},"content":"        taskString.append(\" \").append(desc);","lastModifiedDate":"2024-01-25"},{"lineNumber":137,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":138,"author":{"gitId":"TarinPairor"},"content":"        // Append date/time information if available","lastModifiedDate":"2024-01-25"},{"lineNumber":139,"author":{"gitId":"TarinPairor"},"content":"        if (type \u003d\u003d TaskType.DEADLINE) {","lastModifiedDate":"2024-01-25"},{"lineNumber":140,"author":{"gitId":"TarinPairor"},"content":"            taskString.append(\" (\").append(start).append(\")\");","lastModifiedDate":"2024-01-25"},{"lineNumber":141,"author":{"gitId":"TarinPairor"},"content":"        } else if (type \u003d\u003d TaskType.EVENT) {","lastModifiedDate":"2024-01-25"},{"lineNumber":142,"author":{"gitId":"TarinPairor"},"content":"            taskString.append(\" (\").append(start).append(\" to \").append(end).append(\")\");","lastModifiedDate":"2024-01-25"},{"lineNumber":143,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":144,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":145,"author":{"gitId":"TarinPairor"},"content":"        return taskString.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":146,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":147,"author":{"gitId":"TarinPairor"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"TarinPairor":147}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TarinPairor"},"content":"package tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"TarinPairor"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"TarinPairor"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"TarinPairor"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"TarinPairor"},"content":" * The TaskList class represents a list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"TarinPairor"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"TarinPairor"},"content":"public class TaskList {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"TarinPairor"},"content":"    private static List\u003cTask\u003e taskList;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"TarinPairor"},"content":"     * Constructs a TaskList object with an empty list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"TarinPairor"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"TarinPairor"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"TarinPairor"},"content":"     * Obtain List object with the specified list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"TarinPairor"},"content":"     * @return the list of tasks in the TaskList","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"TarinPairor"},"content":"    public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"TarinPairor"},"content":"        return taskList;","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"TarinPairor"},"content":"     * Adds a task to the list of tasks..","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"TarinPairor"},"content":"     * @param task the task to be added to the TaskList","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"TarinPairor"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"TarinPairor"},"content":"        taskList.add(task);","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"TarinPairor"},"content":"     * Constructs a TaskList object with the specified list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"TarinPairor"},"content":"     * @return the number of tasks in the TaskList","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"TarinPairor"},"content":"    public int size() {","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"TarinPairor"},"content":"        return taskList.size();","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"TarinPairor"},"content":"     * Constructs a representation of the TaskList.","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"TarinPairor"},"content":"     * @return a String representation of the tasks in the TaskList","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"TarinPairor"},"content":"    public String showList() {","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"TarinPairor"},"content":"        int i \u003d 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"TarinPairor"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"TarinPairor"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"TarinPairor"},"content":"            sb.append(i++).append(\". \").append(task).append(\"\\n\");","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"TarinPairor"},"content":"        return sb.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"TarinPairor"},"content":"     * Gets a task at a specific index","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"TarinPairor"},"content":"     * @param index the index of the task to be retrieved","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"TarinPairor"},"content":"     * @return the task at the specified index","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"TarinPairor"},"content":"    public Task getTaskAtIndex(int index) {","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"TarinPairor"},"content":"        return taskList.get(index);","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"TarinPairor"},"content":"     * Deletes a task at a specific index","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"TarinPairor"},"content":"     * @param index the index of the task to be deleted","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"TarinPairor"},"content":"    public void deleteAtIndex(int index) {","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"TarinPairor"},"content":"        taskList.remove(index);","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"TarinPairor"},"content":"     * Marks a task at a specific index as done","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"TarinPairor"},"content":"     * @param index the index of the task to be marked as done","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"TarinPairor"},"content":"    public void markTask(int index) {","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"TarinPairor"},"content":"        taskList.get(index).mark();","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"TarinPairor"},"content":"     * Unmarks a task at a specific index","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"TarinPairor"},"content":"     * @param index the index of the task to be unmarked","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"TarinPairor"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"TarinPairor"},"content":"        taskList.get(index).unmark();","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"TarinPairor"},"content":"     * Adds a deadline task to the TaskList","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"TarinPairor"},"content":"     * @param desc description of the task","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"TarinPairor"},"content":"     * @param start start time of the task","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"TarinPairor"},"content":"    public void addDeadlineTask(String desc, String start) {","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"TarinPairor"},"content":"        Task deadlineTask \u003d new Task(desc, false, start);","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"TarinPairor"},"content":"        taskList.add(deadlineTask);","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"TarinPairor"},"content":"     * Adds an event task to the TaskList","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"TarinPairor"},"content":"     * @param desc description of the task","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"TarinPairor"},"content":"     * @param start start time of the task","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"TarinPairor"},"content":"     * @param end end time of the task","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"TarinPairor"},"content":"    public void addEventTask(String desc, String start, String end) {","lastModifiedDate":"2024-01-25"},{"lineNumber":110,"author":{"gitId":"TarinPairor"},"content":"        Task eventTask \u003d new Task(desc, false, start, end);","lastModifiedDate":"2024-01-25"},{"lineNumber":111,"author":{"gitId":"TarinPairor"},"content":"        taskList.add(eventTask);","lastModifiedDate":"2024-01-25"},{"lineNumber":112,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":113,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":115,"author":{"gitId":"TarinPairor"},"content":"     * Finds a list of tasks through the keyword.","lastModifiedDate":"2024-02-09"},{"lineNumber":116,"author":{"gitId":"TarinPairor"},"content":"     * @param keyword keyword to compare","lastModifiedDate":"2024-02-09"},{"lineNumber":117,"author":{"gitId":"TarinPairor"},"content":"     * @return the tasks that contain the keyword","lastModifiedDate":"2024-02-09"},{"lineNumber":118,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":119,"author":{"gitId":"TarinPairor"},"content":"    public String findTask(String keyword) {","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"TarinPairor"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"TarinPairor"},"content":"        int i \u003d 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"TarinPairor"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"TarinPairor"},"content":"            if (task.getDesc().contains(keyword)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"TarinPairor"},"content":"                sb.append(i++).append(\". \").append(task).append(\"\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"TarinPairor"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"TarinPairor"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"TarinPairor"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"TarinPairor":129}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TarinPairor"},"content":"package ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"TarinPairor"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"TarinPairor"},"content":"public class Ui {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"TarinPairor"},"content":"    private static final String NAME \u003d \"Tartar\";","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"TarinPairor"},"content":"    private static final String GREETING \u003d String.format(\"Hello! I\u0027m %s\\n\", NAME);","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"TarinPairor"},"content":"    private static final String DIVIDER \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"TarinPairor"},"content":"    private static final String QUESTION \u003d \"What can I do for you?\";","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"TarinPairor"},"content":"    private static final String BYE \u003d \" Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"TarinPairor"},"content":"    private static final String MARKED \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"TarinPairor"},"content":"    private static final String UNMARKED \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"TarinPairor"},"content":"    private static final String RECOMMENDER \u003d \"RECCOMENDATION\";","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"TarinPairor"},"content":"    private static final String QUOTE_STRING \u003d \"\u003e  You must do the things you think you cannot do.\\n\u003e  - Eleanor Roosevelt\";","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"TarinPairor"},"content":"    private Scanner sc;","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"TarinPairor"},"content":"     * Constructs a Ui object.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"TarinPairor"},"content":"    public Ui() {","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"TarinPairor"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"TarinPairor"},"content":"     * Returns a string containing the greeting string.","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"TarinPairor"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"TarinPairor"},"content":"     * @return a string containing the greeting string.","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"TarinPairor"},"content":"    public String greeting() {return QUOTE_STRING + \"\\n\" + GREETING;}","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"TarinPairor"},"content":"     * Returns a string containing the divider string.","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"TarinPairor"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"TarinPairor"},"content":"     * @return a string containing the divider string.","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"TarinPairor"},"content":"    public String divider() {return DIVIDER;}","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"TarinPairor"},"content":"     * Returns a string containing the question string.","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"TarinPairor"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"TarinPairor"},"content":"     * @return a string containing the question string.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"TarinPairor"},"content":"     /**","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"TarinPairor"},"content":"      * Returns a string containing the question string.","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"TarinPairor"},"content":"      *      ","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"TarinPairor"},"content":"      * @return a string containing the question string.","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"TarinPairor"},"content":"      */","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"TarinPairor"},"content":"    public String question() {return QUESTION;}","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"TarinPairor"},"content":"     * Returns a string containing the marked string.","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"TarinPairor"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"TarinPairor"},"content":"     * @return a string containing the marked string.","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"TarinPairor"},"content":"    public String mark() {return MARKED;}","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"TarinPairor"},"content":"     * Returns a string containing the unmarked string.","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"TarinPairor"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"TarinPairor"},"content":"     * @return a string containing the unmarked string.","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"TarinPairor"},"content":"    public String unmark() {return UNMARKED;}","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"TarinPairor"},"content":"     * Returns the user\u0027s input as a string.","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"TarinPairor"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"TarinPairor"},"content":"     * @return the user\u0027s input as a string.","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"TarinPairor"},"content":"    public String getCommand() {","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"TarinPairor"},"content":"        return sc.nextLine().trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"TarinPairor"},"content":"     * Returns a string containing the bye string.","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"TarinPairor"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"TarinPairor"},"content":"     * @return a string containing the bye string.","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"TarinPairor"},"content":"    public static String bye() {","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"TarinPairor"},"content":"        return BYE;","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"TarinPairor"},"content":"     * Returns a string containing the given text wrapped in a divider.","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"TarinPairor"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"TarinPairor"},"content":"     * @param text the text to be wrapped in a divider","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"TarinPairor"},"content":"     * @return a string containing the given text wrapped in a divider","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"TarinPairor"},"content":"    public String dividerWrapper(String text) {","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"TarinPairor"},"content":"        return divider() + text + \"\\n\" + divider();","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":104,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"TarinPairor"},"content":"     * Returns a string containing the given text wrapped in a recommender.","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"TarinPairor"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"TarinPairor"},"content":"     * @param text the text to be wrapped in a recommender","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"TarinPairor"},"content":"     * @return a string containing the given text wrapped in a recommender","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"TarinPairor"},"content":"    public String recommenderWrapper(String text) {","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"TarinPairor"},"content":"        return RECOMMENDER + \"\\n\" + text + \"\\n\" + RECOMMENDER;","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"TarinPairor"},"content":"     * Returns a string containing the greeting and question wrapped in a divider.","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"TarinPairor"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"TarinPairor"},"content":"     * @return a string containing the greeting and question wrapped in a divider","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"TarinPairor"},"content":"    public String greetingBox() {","lastModifiedDate":"2024-01-25"},{"lineNumber":120,"author":{"gitId":"TarinPairor"},"content":"        return dividerWrapper(greeting() + question());","lastModifiedDate":"2024-01-25"},{"lineNumber":121,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":122,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":123,"author":{"gitId":"TarinPairor"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":124,"author":{"gitId":"TarinPairor"},"content":"     * Returns a string containing the quote string.","lastModifiedDate":"2024-02-09"},{"lineNumber":125,"author":{"gitId":"TarinPairor"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":126,"author":{"gitId":"TarinPairor"},"content":"     * @return a string containing the quote string.","lastModifiedDate":"2024-02-09"},{"lineNumber":127,"author":{"gitId":"TarinPairor"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":128,"author":{"gitId":"TarinPairor"},"content":"    public String quote() {","lastModifiedDate":"2024-02-09"},{"lineNumber":129,"author":{"gitId":"TarinPairor"},"content":"        return QUOTE_STRING;","lastModifiedDate":"2024-02-09"},{"lineNumber":130,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":131,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":132,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":133,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":134,"author":{"gitId":"TarinPairor"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"TarinPairor":134}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TarinPairor"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"TarinPairor"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"TarinPairor"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"TarinPairor"},"content":"public class DukeTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"TarinPairor"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"TarinPairor"},"content":"    public void test_dummy() {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"TarinPairor"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"TarinPairor"},"content":"    // @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"TarinPairor"},"content":"    // public void test_run_throws_exception() {","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"TarinPairor"},"content":"    //     Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"TarinPairor"},"content":"    //     try {","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"TarinPairor"},"content":"    //         duke.run();","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"TarinPairor"},"content":"    //     } catch (Exception e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"TarinPairor"},"content":"    //         assertEquals(\"java.io.IOException\", e.toString());","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"TarinPairor"},"content":"    //     }","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"TarinPairor"},"content":"    // }","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"TarinPairor"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"TarinPairor":23}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TarinPairor"},"content":"package parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"TarinPairor"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"TarinPairor"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"TarinPairor"},"content":"import processor.Processor;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"TarinPairor"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"TarinPairor"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"TarinPairor"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"TarinPairor"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"TarinPairor"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"TarinPairor"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"TarinPairor"},"content":"    private Processor processor;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"TarinPairor"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"TarinPairor"},"content":"    // Stub class for Processor","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"TarinPairor"},"content":"    private class ProcessorStub extends Processor {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"TarinPairor"},"content":"        public ProcessorStub(TaskList taskList, Ui chatbotUi) {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"TarinPairor"},"content":"            super(taskList, chatbotUi);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"TarinPairor"},"content":"        List\u003cString\u003e methodsCalled \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"TarinPairor"},"content":"        @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"TarinPairor"},"content":"        public void userInputDeleteTask(String userInput) {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"TarinPairor"},"content":"            methodsCalled.add(\"userInputDeleteTask\");","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"TarinPairor"},"content":"        @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"TarinPairor"},"content":"        public void userInputProcessMarkUnmark(String userInput) {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"TarinPairor"},"content":"            methodsCalled.add(\"userInputProcessMarkUnmark\");","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"TarinPairor"},"content":"        @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"TarinPairor"},"content":"        public void userInputListTasks() {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"TarinPairor"},"content":"            methodsCalled.add(\"userInputListTasks\");","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"TarinPairor"},"content":"        @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"TarinPairor"},"content":"        public void userInputAddTask(String userInput) {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"TarinPairor"},"content":"            methodsCalled.add(\"userInputAddTask\");","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"TarinPairor"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"TarinPairor"},"content":"    public void setUp() {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"TarinPairor"},"content":"        processor \u003d new ProcessorStub(new TaskList(), new Ui());","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"TarinPairor"},"content":"        parser \u003d new Parser(processor);","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"TarinPairor"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"TarinPairor"},"content":"    public void test_process_command_delete() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"TarinPairor"},"content":"        String userInput \u003d \"delete 1\";","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"TarinPairor"},"content":"        parser.processCommand(userInput);","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"TarinPairor"},"content":"        assert(((ProcessorStub) processor).methodsCalled.contains(\"userInputDeleteTask\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"TarinPairor"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"TarinPairor"},"content":"    public void test_process_command_mark() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"TarinPairor"},"content":"        String userInput \u003d \"mark 1\";","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"TarinPairor"},"content":"        parser.processCommand(userInput);","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"TarinPairor"},"content":"        assert(((ProcessorStub) processor).methodsCalled.contains(\"userInputProcessMarkUnmark\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"TarinPairor"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"TarinPairor"},"content":"    public void test_process_command_unmark() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"TarinPairor"},"content":"        String userInput \u003d \"unmark 1\";","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"TarinPairor"},"content":"        parser.processCommand(userInput);","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"TarinPairor"},"content":"        assert(((ProcessorStub) processor).methodsCalled.contains(\"userInputProcessMarkUnmark\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"TarinPairor"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"TarinPairor"},"content":"    public void test_process_command_list() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"TarinPairor"},"content":"        String userInput \u003d \"list\";","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"TarinPairor"},"content":"        parser.processCommand(userInput);","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"TarinPairor"},"content":"        assert(((ProcessorStub) processor).methodsCalled.contains(\"userInputListTasks\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"TarinPairor"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"TarinPairor"},"content":"    public void test_process_command_add() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"TarinPairor"},"content":"        String userInput \u003d \"todo buy groceries\";","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"TarinPairor"},"content":"        parser.processCommand(userInput);","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"TarinPairor"},"content":"        assert(((ProcessorStub) processor).methodsCalled.contains(\"userInputAddTask\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"TarinPairor"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"TarinPairor"},"content":"    public void test_process_command_invalid() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"TarinPairor"},"content":"        String userInput \u003d \"invalid command\";","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"TarinPairor"},"content":"        parser.processCommand(userInput);","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"TarinPairor"},"content":"        assert(((ProcessorStub) processor).methodsCalled.contains(\"userInputAddTask\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"TarinPairor"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"TarinPairor":95}},{"path":"src/test/java/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TarinPairor"},"content":"package storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"TarinPairor"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"TarinPairor"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"TarinPairor"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"TarinPairor"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"TarinPairor"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"TarinPairor"},"content":"import tasks.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"TarinPairor"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"TarinPairor"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"TarinPairor"},"content":"@Test","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"TarinPairor"},"content":"public void test_write_to_file() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"TarinPairor"},"content":"        // Create a temporary file for testing","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"TarinPairor"},"content":"        Path tempFile\u003dFiles.createTempFile(\"test\",\".txt\");","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"TarinPairor"},"content":"        // Create a TaskList with some tasks","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"TarinPairor"},"content":"        TaskList taskList\u003dnew TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"TarinPairor"},"content":"        taskList.addTask(new Task(\"Task 1\",false));","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"TarinPairor"},"content":"        taskList.addTask(new Task(\"Task 2\",true));","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"TarinPairor"},"content":"        taskList.addTask(new Task(\"Task 3\",false));","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"TarinPairor"},"content":"        // Create a Storage object with the temporary file and the TaskList","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"TarinPairor"},"content":"        Storage storage\u003dnew Storage(tempFile.toString(),taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"TarinPairor"},"content":"        // Write the tasks to the file","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"TarinPairor"},"content":"        storage.writeToFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"TarinPairor"},"content":"        // Read the contents of the file","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"TarinPairor"},"content":"        String fileContents\u003dFiles.readString(tempFile);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"TarinPairor"},"content":"        // Verify that the file contents match the expected format","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"TarinPairor"},"content":"        assertEquals(\"[T][ ] Task 1\\n[T][X] Task 2\\n[T][ ] Task 3\\n\",fileContents);","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"TarinPairor"},"content":"        // Delete the temporary file","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"TarinPairor"},"content":"        Files.delete(tempFile);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"TarinPairor"},"content":"@Test","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"TarinPairor"},"content":"public void test_generate_tasks()throws IOException{","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"TarinPairor"},"content":"        // Create a temporary file for testing","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"TarinPairor"},"content":"        Path tempFile\u003dFiles.createTempFile(\"test\",\".txt\");","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"TarinPairor"},"content":"        // Write some tasks to the file","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"TarinPairor"},"content":"        Files.writeString(tempFile,\"[T][ ] Task 1\\n[D][X] Task 2\\n[T][ ] Task 3\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"TarinPairor"},"content":"        // Create a TaskList","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"TarinPairor"},"content":"        TaskList taskList\u003dnew TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"TarinPairor"},"content":"        // Create a Storage object with the temporary file and the TaskList","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"TarinPairor"},"content":"        Storage storage\u003dnew Storage(tempFile.toString(),taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"TarinPairor"},"content":"        // Generate the tasks from the file","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"TarinPairor"},"content":"        String generatedTasks\u003dstorage.generateTasks();","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"TarinPairor"},"content":"        // Verify that the generated tasks match the expected format","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"TarinPairor"},"content":"        assertEquals(\"1. [T][ ] Task 1\\n2. [D][X] Task 2\\n3. [T][ ] Task 3\\n\",generatedTasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"TarinPairor"},"content":"        // Delete the temporary file","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"TarinPairor"},"content":"        Files.delete(tempFile);","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"TarinPairor"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"TarinPairor"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"TarinPairor":67}},{"path":"src/test/java/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TarinPairor"},"content":"package tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"TarinPairor"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"TarinPairor"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"TarinPairor"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"TarinPairor"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"TarinPairor"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"TarinPairor"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"TarinPairor"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"TarinPairor"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"TarinPairor"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"TarinPairor"},"content":"    public void setUp() {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"TarinPairor"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"TarinPairor"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"TarinPairor"},"content":"    public void test_add_task() {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"TarinPairor"},"content":"        Task task \u003d new Task(\"Buy groceries\", false);","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"TarinPairor"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"TarinPairor"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"TarinPairor"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"TarinPairor"},"content":"        assertEquals(task, tasks.get(0));","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"TarinPairor"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"TarinPairor"},"content":"    public void test_size() {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"TarinPairor"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"TarinPairor"},"content":"        Task task1 \u003d new Task(\"Buy groceries\", false);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"TarinPairor"},"content":"        Task task2 \u003d new Task(\"Submit report\", true, \"2022-10-31\");","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"TarinPairor"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"TarinPairor"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"TarinPairor"},"content":"        assertEquals(2, taskList.size());","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"TarinPairor"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"TarinPairor"},"content":"    public void test_show_list() {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"TarinPairor"},"content":"        Task task1 \u003d new Task(\"Buy groceries\", false);","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"TarinPairor"},"content":"        Task task2 \u003d new Task(\"Submit report\", true, \"2022-10-31\");","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"TarinPairor"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"TarinPairor"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"TarinPairor"},"content":"        String expected \u003d \"1. [T][ ] Buy groceries\\n2. [D][X] Submit report (2022-10-31)\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"TarinPairor"},"content":"        assertEquals(expected, taskList.showList());","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"TarinPairor"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"TarinPairor"},"content":"    public void test_get_task_at_index() {","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"TarinPairor"},"content":"        Task task1 \u003d new Task(\"Buy groceries\", false);","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"TarinPairor"},"content":"        Task task2 \u003d new Task(\"Submit report\", true, \"2022-10-31\");","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"TarinPairor"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"TarinPairor"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"TarinPairor"},"content":"        assertEquals(task1, taskList.getTaskAtIndex(0));","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"TarinPairor"},"content":"        assertEquals(task2, taskList.getTaskAtIndex(1));","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"TarinPairor"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"TarinPairor"},"content":"    public void test_delete_at_index() {","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"TarinPairor"},"content":"        Task task1 \u003d new Task(\"Buy groceries\", false);","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"TarinPairor"},"content":"        Task task2 \u003d new Task(\"Submit report\", true, \"2022-10-31\");","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"TarinPairor"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"TarinPairor"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"TarinPairor"},"content":"        taskList.deleteAtIndex(0);","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"TarinPairor"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"TarinPairor"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"TarinPairor"},"content":"        assertEquals(task2, tasks.get(0));","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"TarinPairor"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"TarinPairor"},"content":"    public void test_mark_task() {","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"TarinPairor"},"content":"        Task task \u003d new Task(\"Buy groceries\", false);","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"TarinPairor"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"TarinPairor"},"content":"        taskList.markTask(0);","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"TarinPairor"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"TarinPairor"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"TarinPairor"},"content":"    public void test_unmark_task() {","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"TarinPairor"},"content":"        Task task \u003d new Task(\"Buy groceries\", true);","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"TarinPairor"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"TarinPairor"},"content":"        taskList.unmarkTask(0);","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"TarinPairor"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"TarinPairor"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"TarinPairor"},"content":"    public void test_add_deadline_task() {","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"TarinPairor"},"content":"        taskList.addDeadlineTask(\"Submit report\", \"2022-10-31\");","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"TarinPairor"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"TarinPairor"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"TarinPairor"},"content":"        Task task \u003d tasks.get(0);","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"TarinPairor"},"content":"        assertEquals(\"[D][ ] Submit report (2022-10-31)\", task.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"TarinPairor"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"TarinPairor"},"content":"    public void test_add_event_task() {","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"TarinPairor"},"content":"        taskList.addEventTask(\"Birthday party\", \"2022-12-25\", \"2022-12-26\");","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"TarinPairor"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"TarinPairor"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"TarinPairor"},"content":"        Task task \u003d tasks.get(0);","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"TarinPairor"},"content":"        assertEquals(\"[E][ ] Birthday party (2022-12-25 to 2022-12-26)\", task.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"TarinPairor"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"TarinPairor":106}},{"path":"src/test/java/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TarinPairor"},"content":"package tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"TarinPairor"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"TarinPairor"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"TarinPairor"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"TarinPairor"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"TarinPairor"},"content":"public class TaskTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"TarinPairor"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"TarinPairor"},"content":"    public void test_todo_task_to_string() {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"TarinPairor"},"content":"        Task task \u003d new Task(\"Buy groceries\", false);","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"TarinPairor"},"content":"        assertEquals(\"[T][ ] Buy groceries\", task.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"TarinPairor"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"TarinPairor"},"content":"    public void test_deadline_task_to_string() {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"TarinPairor"},"content":"        Task task \u003d new Task(\"Submit report\", true, \"2022-10-31\");","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"TarinPairor"},"content":"        assertEquals(\"[D][X] Submit report (2022-10-31)\", task.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"TarinPairor"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"TarinPairor"},"content":"    public void test_event_task_to_string() {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"TarinPairor"},"content":"        Task task \u003d new Task(\"Birthday party\", false, \"2022-12-25\", \"2022-12-26\");","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"TarinPairor"},"content":"        assertEquals(\"[E][ ] Birthday party (2022-12-25 to 2022-12-26)\", task.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"TarinPairor"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"TarinPairor"},"content":"    public void test_mark_task_as_done() {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"TarinPairor"},"content":"        Task task \u003d new Task(\"Read book\", false);","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"TarinPairor"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"TarinPairor"},"content":"        task.mark();","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"TarinPairor"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"TarinPairor"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"TarinPairor"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"TarinPairor"},"content":"    public void test_unmark_task() {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"TarinPairor"},"content":"        Task task \u003d new Task(\"Clean room\", true);","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"TarinPairor"},"content":"        assertTrue(task.isDone());","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"TarinPairor"},"content":"        task.unmark();","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"TarinPairor"},"content":"        assertFalse(task.isDone());","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"TarinPairor"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"TarinPairor"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"TarinPairor":45}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TarinPairor"},"content":"todo something","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"TarinPairor"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"TarinPairor":2}}]
