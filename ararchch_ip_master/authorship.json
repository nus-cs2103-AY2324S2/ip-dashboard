[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"# yapchit.yapchit project template","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"3. After that, locate the `src/main/java/yapchit.yapchit.java` file, right-click it, and choose `Run yapchit.yapchit.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"ararchch":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"    mainClass.set(\"yapchit.Launcher\")","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"    archiveBaseName \u003d \"yapchit\"","lastModifiedDate":"2024-02-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"checkstyle {","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"-":40,"ararchch":22}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"# Yapchit User Guide","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"![Yapchit UI](Ui.png)","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"Introducing Yapchit","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"Your favourite task management chatbot.","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"Yapchit is a chatbot that helps you manage your tasks using simple commands. This offers a faster alternative to your typical task managers if you can type fast!","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"## Types of Tasks That Can Be Managed","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"### 1. ToDos:","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"A Todo is simply a task you have to complete, with no completion time. ","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"Todos are listed as `[T] [task done?] [task name]`","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"### 2. Deadlines","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"A Deadline is a task that you have to complete by a stipulated date. ","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"Deadlines are listed as:","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"`[D] [task done?] [task name] (by: [Date in MMM-DD-YYYY format])`","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"### 3. Events","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"An event is a task that has a start and end time. ","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"Times/dates do not have a specific format (unlike deadlines). ","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"Events are listed as:","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"`[E] [task done?] [event name] (from: [event from time] to: [event to time])`","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"## Performing Operations with Tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"### 1. Adding a Task","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"A task can be added to the list using its specified format (customised to the type of task). ","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"Below are task add formats:","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"- `todo say hello` -\u003e creates task `[T][] say hello`","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"- `deadline read book /by 2024-02-15` -\u003e creates task `[D][ ] read book (by: Feb 15 2024)`","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"- `event exams /from today /to tomorrow` -\u003e creates task `[E][ ] exams (from: today to: tomorrow)`","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"Sample output for first example:","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"----------------------------------------------","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"Got it! I\u0027ve added this task:","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"    [T][] say hello","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"Now you have 1 task in the list","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"----------------------------------------------","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"### 2. Seeing Current Tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"Current tasks can be seen by typing the command `list`. Tasks are listed in the following format:","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"`[Task number]. [Task Type][Task done?] [Task Name] [Task Details - if any]`","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"Example output:","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"---------------------------------------------","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"1. [T][] say hello","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"---------------------------------------------","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"### 3. Marking a Task as Done/Not Done","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"A task can be marked as done by entering `mark` followed by the task number. A task can be marked as not done by entering `unmark` followed by the task number. Examples:","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"- `mark 1`","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"- `unmark 1`","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"Example output:","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"---------------------------------------------","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"  [T][X] say hello","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"---------------------------------------------","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"or ","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"---------------------------------------------","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"Ok, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"  [T][] say hello","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"---------------------------------------------","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"### 4. Updating a Task","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"A task can be updated by typing the command `update` followed by the task number, followed by the new task details. If there is any detail that you don\u0027t want to update, you may enter the `*` character. The system will maintain the existing detail. Examples:","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"- `update 1 say bye`","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"- `update 2 * /by 2024-04-07`","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"- `update 3 no exams /from may /to june`","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"- `update 3 * /from now /to *`","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"  Note that you cannot update a task\u0027s type i.e. go from a todo to a deadline because that is essentially creating a new task. You may delete the current task and create a new deadline if that is your goal.","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"Example output:","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"---------------------------------------------","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"Ok, I\u0027ve updated this task:","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"  [T][] say bye","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"---------------------------------------------","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"ararchch"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"### 5. Deleting a Task","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"ararchch"},"content":"A task can be deleted by typing `delete` followed by the task number. Example:","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"ararchch"},"content":"- `delete 1`","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"ararchch"},"content":"  Example output:","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"ararchch"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"ararchch"},"content":"---------------------------------------------","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"  [T][] say bye","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"Now you have 0 tasks in the list.","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"ararchch"},"content":"---------------------------------------------","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"ararchch"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"ararchch"},"content":"### 6. Finding a task","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"ararchch"},"content":"Finds tasks which contain the search term in their names. ","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"ararchch"},"content":"Type `find` followed by the search term.","lastModifiedDate":"2024-02-23"},{"lineNumber":109,"author":{"gitId":"ararchch"},"content":"- `find say`","lastModifiedDate":"2024-02-23"},{"lineNumber":110,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"ararchch"},"content":"Example output:","lastModifiedDate":"2024-02-23"},{"lineNumber":112,"author":{"gitId":"ararchch"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":113,"author":{"gitId":"ararchch"},"content":"---------------------------------------------","lastModifiedDate":"2024-02-23"},{"lineNumber":114,"author":{"gitId":"ararchch"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-02-23"},{"lineNumber":115,"author":{"gitId":"ararchch"},"content":"1. [T][] say hello","lastModifiedDate":"2024-02-23"},{"lineNumber":116,"author":{"gitId":"ararchch"},"content":"---------------------------------------------","lastModifiedDate":"2024-02-23"},{"lineNumber":117,"author":{"gitId":"ararchch"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":118,"author":{"gitId":"ararchch"},"content":"## Bot Commands","lastModifiedDate":"2024-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":120,"author":{"gitId":"ararchch"},"content":"### 1. Ending the Chat with the Bot","lastModifiedDate":"2024-02-23"},{"lineNumber":121,"author":{"gitId":"ararchch"},"content":"You can end the chat with the bot by typing `bye`. The bot will no longer respond to any queries. You can exit the window by pressing enter or closing it.","lastModifiedDate":"2024-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":123,"author":{"gitId":"ararchch"},"content":"## General Notes","lastModifiedDate":"2024-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":125,"author":{"gitId":"ararchch"},"content":"1. Enter one command at a time.","lastModifiedDate":"2024-02-23"},{"lineNumber":126,"author":{"gitId":"ararchch"},"content":"2. Closing the bot without typing `bye` will still save your tasks, but if you are halfway through a command, the text you have typed will be lost.","lastModifiedDate":"2024-02-23"},{"lineNumber":127,"author":{"gitId":"ararchch"},"content":"3. Entering commands not listed here will result in an error.","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"-":19,"ararchch":108}},{"path":"src/main/data/dataStore.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"todo aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"event aaaaaaaaaaaaaaaaaaa /from aaaaaaaaaaaaaaaaaaaa /to aaaaaaaaaaaaaaaaaaa0","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ararchch":2}},{"path":"src/main/java/yapchit/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitui.Main;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"public class Launcher {","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"     * Entry point into the program.","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"     * @param args command line arguments.","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"ararchch":19}},{"path":"src/main/java/yapchit/yapchitbackend/Handler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.yapchitbackend;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitbackend.tasks.Deadline;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitbackend.tasks.Event;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitbackend.tasks.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitbackend.tasks.ToDo;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.InvalidDetailException;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.InvalidKeywordException;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.YapchitException;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":" * Class that acts as the \u0027brains\u0027 of the Yapchit program and handles all operations.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"public class Handler {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"     * Creates new handler instance.","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"    public Handler() {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"     * Accepts an input and operation and redirects it to appropriate handler function.","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"     * @param input user input.","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"     * @param op parsed operation from parser.","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"     * @param tasks the full tasklist.","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"     * @param ui the ui to interact with user.","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"     * @param parser the parser to perform additional parsing.","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"     * @param isNewTask determines whether task is created for the first time or imported from file.","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"     * @return String containing handled response.","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"     * @throws YapchitException if there is conflict in terms of user input and operation to perform.","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"    public String handleOperation(String input, YapchitBackend.Operations op, TaskList tasks,","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"                                  Ui ui, Parser parser, boolean isNewTask) throws YapchitException {","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"        String[] parts \u003d parser.parseInputParts(input);","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"        switch (op) {","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"        case LIST:","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"            output \u003d handleList(parts, tasks, ui);","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"        case MARK:","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"            output \u003d handleMark(parts, tasks, ui, true);","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"        case UNMARK:","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"            output \u003d handleMark(parts, tasks, ui, false);","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"        case DELETE:","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"            output \u003d handleDelete(parts, tasks, ui);","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"        case FIND:","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"            output \u003d handleFind(parts, tasks, ui);","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"        case DEADLINE:","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"            output \u003d handleDeadline(input, isNewTask, tasks, ui, parser);","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"        case EVENT:","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"            output \u003d handleEvent(input, isNewTask, tasks, ui);","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"        case TODO:","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"            output \u003d handleTodo(input, isNewTask, tasks, ui);","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"        case UPDATE:","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"            output \u003d handleUpdate(parts, tasks, ui, parser);","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"            break;","lastModifiedDate":"2024-02-16"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"        default:","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"            throw new InvalidKeywordException(\"You have entered an invalid keyword.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"        return output;","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"     * Creates a new event object based on details in provided input.","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"     * @param inputParam containing details of the event.","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"     * @param isNewTask boolean which identifies if this is a task being added to list for the first time.","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"     * @param ui ui object to interact with the user.","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"     * @return String containing handled response.","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"     * @throws InvalidDetailException in case of mismatch in input and task detail requirements.","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"    public String handleEvent(","lastModifiedDate":"2024-02-14"},{"lineNumber":95,"author":{"gitId":"ararchch"},"content":"            String inputParam, boolean isNewTask, TaskList tasks, Ui ui) throws InvalidDetailException {","lastModifiedDate":"2024-02-14"},{"lineNumber":96,"author":{"gitId":"ararchch"},"content":"        String input \u003d inputParam;","lastModifiedDate":"2024-02-14"},{"lineNumber":97,"author":{"gitId":"ararchch"},"content":"        char isDone \u003d getIsDone(input,isNewTask);","lastModifiedDate":"2024-02-14"},{"lineNumber":98,"author":{"gitId":"ararchch"},"content":"        input \u003d getUpdatedInput(input, isNewTask);","lastModifiedDate":"2024-02-14"},{"lineNumber":99,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"        Event newEventObj \u003d new Event(\"*\", null, null);","lastModifiedDate":"2024-02-16"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"        Task t \u003d interpretAndUpdateEvent(newEventObj, input);","lastModifiedDate":"2024-02-16"},{"lineNumber":103,"author":{"gitId":"ararchch"},"content":"        tasks.addTask(t);","lastModifiedDate":"2024-02-16"},{"lineNumber":104,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":105,"author":{"gitId":"ararchch"},"content":"        String output \u003d getTaskOutput(t, tasks, ui, isDone, isNewTask);","lastModifiedDate":"2024-02-16"},{"lineNumber":106,"author":{"gitId":"ararchch"},"content":"        return output;","lastModifiedDate":"2024-02-16"},{"lineNumber":107,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":108,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":109,"author":{"gitId":"ararchch"},"content":"    private Event interpretAndUpdateEvent(Event t, String input) throws InvalidDetailException {","lastModifiedDate":"2024-02-16"},{"lineNumber":110,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":111,"author":{"gitId":"ararchch"},"content":"        int fromStart \u003d input.indexOf(\"/from\");","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"ararchch"},"content":"        int toStart \u003d input.indexOf(\"/to\");","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"ararchch"},"content":"        if (fromStart \u003d\u003d -1 || toStart \u003d\u003d -1 || fromStart \u003e\u003d toStart) {","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"ararchch"},"content":"            throw new InvalidDetailException(\"invalid /from and /to parameters.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":115,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":116,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":117,"author":{"gitId":"ararchch"},"content":"        if (6 \u003d\u003d fromStart || fromStart + 6 \u003d\u003d toStart || toStart + 4 \u003e\u003d input.length()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"ararchch"},"content":"            throw new InvalidDetailException(\"Event description/parameters error\");","lastModifiedDate":"2024-02-23"},{"lineNumber":119,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":121,"author":{"gitId":"ararchch"},"content":"        String desc \u003d input.substring(6, fromStart).strip();","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"ararchch"},"content":"        if (!desc.equals(\"*\")) {","lastModifiedDate":"2024-02-16"},{"lineNumber":123,"author":{"gitId":"ararchch"},"content":"            t.setName(desc);","lastModifiedDate":"2024-02-16"},{"lineNumber":124,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":125,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":126,"author":{"gitId":"ararchch"},"content":"        String from \u003d input.substring(fromStart + 6, toStart).strip();","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"ararchch"},"content":"        if (!from.equals(\"*\")) {","lastModifiedDate":"2024-02-16"},{"lineNumber":128,"author":{"gitId":"ararchch"},"content":"            t.setFrom(from);","lastModifiedDate":"2024-02-16"},{"lineNumber":129,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":130,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":131,"author":{"gitId":"ararchch"},"content":"        String to \u003d input.substring(toStart + 4).strip();","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"ararchch"},"content":"        if (!to.equals(\"*\")) {","lastModifiedDate":"2024-02-16"},{"lineNumber":133,"author":{"gitId":"ararchch"},"content":"            t.setTo(to);","lastModifiedDate":"2024-02-16"},{"lineNumber":134,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":135,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":136,"author":{"gitId":"ararchch"},"content":"        if (desc.length() \u003d\u003d 0 || from.length() \u003d\u003d 0 || to.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-30"},{"lineNumber":137,"author":{"gitId":"ararchch"},"content":"            throw new InvalidDetailException(\"Event description or parameters cannot be empty\");","lastModifiedDate":"2024-02-23"},{"lineNumber":138,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":139,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":140,"author":{"gitId":"ararchch"},"content":"        return t;","lastModifiedDate":"2024-02-16"},{"lineNumber":141,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":142,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":143,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"ararchch"},"content":"     * Creates a new deadline object based on details in provided input.","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"ararchch"},"content":"     * @param inputParam containing details of the deadline.","lastModifiedDate":"2024-02-23"},{"lineNumber":147,"author":{"gitId":"ararchch"},"content":"     * @param isNewTask boolean which identifies if this is a task being added to list for the first time.","lastModifiedDate":"2024-02-23"},{"lineNumber":148,"author":{"gitId":"ararchch"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":149,"author":{"gitId":"ararchch"},"content":"     * @param ui ui object to interact with the user.","lastModifiedDate":"2024-02-23"},{"lineNumber":150,"author":{"gitId":"ararchch"},"content":"     * @param parser parser object to parse input.","lastModifiedDate":"2024-02-23"},{"lineNumber":151,"author":{"gitId":"ararchch"},"content":"     * @return String containing handled response.","lastModifiedDate":"2024-02-23"},{"lineNumber":152,"author":{"gitId":"ararchch"},"content":"     * @throws InvalidDetailException in case of mismatch in input and task detail requirements.","lastModifiedDate":"2024-02-02"},{"lineNumber":153,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":154,"author":{"gitId":"ararchch"},"content":"    public String handleDeadline(","lastModifiedDate":"2024-02-08"},{"lineNumber":155,"author":{"gitId":"ararchch"},"content":"            String inputParam, boolean isNewTask, TaskList tasks, Ui ui, Parser parser) throws InvalidDetailException {","lastModifiedDate":"2024-02-14"},{"lineNumber":156,"author":{"gitId":"ararchch"},"content":"        String input \u003d inputParam;","lastModifiedDate":"2024-02-14"},{"lineNumber":157,"author":{"gitId":"ararchch"},"content":"        char isDone \u003d getIsDone(input,isNewTask);","lastModifiedDate":"2024-02-14"},{"lineNumber":158,"author":{"gitId":"ararchch"},"content":"        input \u003d getUpdatedInput(input, isNewTask);","lastModifiedDate":"2024-02-14"},{"lineNumber":159,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":160,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":161,"author":{"gitId":"ararchch"},"content":"        Deadline newDeadlineObj \u003d new Deadline(\"*\", null);","lastModifiedDate":"2024-02-16"},{"lineNumber":162,"author":{"gitId":"ararchch"},"content":"        Task t \u003d interpretAndUpdateDeadline(newDeadlineObj, input, parser);","lastModifiedDate":"2024-02-16"},{"lineNumber":163,"author":{"gitId":"ararchch"},"content":"        tasks.addTask(t);","lastModifiedDate":"2024-02-16"},{"lineNumber":164,"author":{"gitId":"ararchch"},"content":"        String output \u003d getTaskOutput(t, tasks, ui, isDone, isNewTask);","lastModifiedDate":"2024-02-16"},{"lineNumber":165,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":166,"author":{"gitId":"ararchch"},"content":"        return output;","lastModifiedDate":"2024-02-16"},{"lineNumber":167,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":168,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":169,"author":{"gitId":"ararchch"},"content":"    private Deadline interpretAndUpdateDeadline(","lastModifiedDate":"2024-02-23"},{"lineNumber":170,"author":{"gitId":"ararchch"},"content":"            Deadline t, String input, Parser parser) throws InvalidDetailException {","lastModifiedDate":"2024-02-23"},{"lineNumber":171,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":172,"author":{"gitId":"ararchch"},"content":"        int byStart \u003d input.indexOf(\"/by\");","lastModifiedDate":"2024-01-30"},{"lineNumber":173,"author":{"gitId":"ararchch"},"content":"        if (byStart \u003d\u003d -1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":174,"author":{"gitId":"ararchch"},"content":"            throw new InvalidDetailException(\"Missing \u0027by\u0027 parameter in deadline detail\");","lastModifiedDate":"2024-01-30"},{"lineNumber":175,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":176,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":177,"author":{"gitId":"ararchch"},"content":"        if (9 \u003d\u003d byStart || byStart + 4 \u003e\u003d input.length()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":178,"author":{"gitId":"ararchch"},"content":"            throw new InvalidDetailException(\"Deadline description/parameter issue\");","lastModifiedDate":"2024-02-23"},{"lineNumber":179,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":180,"author":{"gitId":"ararchch"},"content":"        String desc \u003d input.substring(9, byStart).strip();","lastModifiedDate":"2024-01-30"},{"lineNumber":181,"author":{"gitId":"ararchch"},"content":"        if (!desc.equals(\"*\")) {","lastModifiedDate":"2024-02-16"},{"lineNumber":182,"author":{"gitId":"ararchch"},"content":"            t.setName(desc);","lastModifiedDate":"2024-02-16"},{"lineNumber":183,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":184,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":185,"author":{"gitId":"ararchch"},"content":"        String dateString \u003d input.substring(byStart + 4).strip();","lastModifiedDate":"2024-02-16"},{"lineNumber":186,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":187,"author":{"gitId":"ararchch"},"content":"        LocalDate by \u003d t.getBy();","lastModifiedDate":"2024-02-16"},{"lineNumber":188,"author":{"gitId":"ararchch"},"content":"        if (!dateString.equals(\"*\")) {","lastModifiedDate":"2024-02-16"},{"lineNumber":189,"author":{"gitId":"ararchch"},"content":"            by \u003d parser.parseTimestamp(dateString);","lastModifiedDate":"2024-02-16"},{"lineNumber":190,"author":{"gitId":"ararchch"},"content":"            t.setBy(by);","lastModifiedDate":"2024-02-16"},{"lineNumber":191,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":192,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":193,"author":{"gitId":"ararchch"},"content":"        if (desc.length() \u003d\u003d 0 || by \u003d\u003d null) {","lastModifiedDate":"2024-01-30"},{"lineNumber":194,"author":{"gitId":"ararchch"},"content":"            throw new InvalidDetailException(\"Invalid or empty deadline description or parameter\");","lastModifiedDate":"2024-02-23"},{"lineNumber":195,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":196,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":197,"author":{"gitId":"ararchch"},"content":"        return t;","lastModifiedDate":"2024-02-16"},{"lineNumber":198,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":199,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":200,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":201,"author":{"gitId":"ararchch"},"content":"     * Creates a new todo object based on details in provided input.","lastModifiedDate":"2024-02-02"},{"lineNumber":202,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":203,"author":{"gitId":"ararchch"},"content":"     * @param inputParam containing details of the todo.","lastModifiedDate":"2024-02-23"},{"lineNumber":204,"author":{"gitId":"ararchch"},"content":"     * @param isNewTask boolean which identifies if this is a task being added to list for the first time.","lastModifiedDate":"2024-02-23"},{"lineNumber":205,"author":{"gitId":"ararchch"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":206,"author":{"gitId":"ararchch"},"content":"     * @param ui ui object to interact with the user.","lastModifiedDate":"2024-02-23"},{"lineNumber":207,"author":{"gitId":"ararchch"},"content":"     * @return String containing handled response.","lastModifiedDate":"2024-02-23"},{"lineNumber":208,"author":{"gitId":"ararchch"},"content":"     * @throws InvalidDetailException in case of mismatch in input and task detail requirements.","lastModifiedDate":"2024-02-02"},{"lineNumber":209,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":210,"author":{"gitId":"ararchch"},"content":"    public String handleTodo(","lastModifiedDate":"2024-02-23"},{"lineNumber":211,"author":{"gitId":"ararchch"},"content":"            String inputParam, boolean isNewTask, TaskList tasks, Ui ui) throws InvalidDetailException {","lastModifiedDate":"2024-02-23"},{"lineNumber":212,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":213,"author":{"gitId":"ararchch"},"content":"        String input \u003d inputParam;","lastModifiedDate":"2024-02-14"},{"lineNumber":214,"author":{"gitId":"ararchch"},"content":"        char isDone \u003d getIsDone(input,isNewTask);","lastModifiedDate":"2024-02-14"},{"lineNumber":215,"author":{"gitId":"ararchch"},"content":"        input \u003d getUpdatedInput(input, isNewTask);","lastModifiedDate":"2024-02-14"},{"lineNumber":216,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":217,"author":{"gitId":"ararchch"},"content":"        Task t \u003d interpretAndUpdateTodo(new ToDo(\"*\"), input);","lastModifiedDate":"2024-02-16"},{"lineNumber":218,"author":{"gitId":"ararchch"},"content":"        tasks.addTask(t);","lastModifiedDate":"2024-02-16"},{"lineNumber":219,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":220,"author":{"gitId":"ararchch"},"content":"        String output \u003d getTaskOutput(t, tasks, ui, isDone, isNewTask);","lastModifiedDate":"2024-02-16"},{"lineNumber":221,"author":{"gitId":"ararchch"},"content":"        return output;","lastModifiedDate":"2024-02-16"},{"lineNumber":222,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":223,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":224,"author":{"gitId":"ararchch"},"content":"    private ToDo interpretAndUpdateTodo(ToDo task, String input) throws InvalidDetailException {","lastModifiedDate":"2024-02-16"},{"lineNumber":225,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":226,"author":{"gitId":"ararchch"},"content":"        if (5 \u003e\u003d input.length()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":227,"author":{"gitId":"ararchch"},"content":"            throw new InvalidDetailException(\"todo description cannot be empty. Please retry\");","lastModifiedDate":"2024-02-23"},{"lineNumber":228,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":229,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":230,"author":{"gitId":"ararchch"},"content":"        String desc \u003d input.substring(5).strip();","lastModifiedDate":"2024-02-16"},{"lineNumber":231,"author":{"gitId":"ararchch"},"content":"        if (desc.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-30"},{"lineNumber":232,"author":{"gitId":"ararchch"},"content":"            throw new InvalidDetailException(\"todo description cannot be empty. Please retry\");","lastModifiedDate":"2024-02-23"},{"lineNumber":233,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":234,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":235,"author":{"gitId":"ararchch"},"content":"        if (!desc.equals(\"*\")) {","lastModifiedDate":"2024-02-16"},{"lineNumber":236,"author":{"gitId":"ararchch"},"content":"            task.setName(desc);","lastModifiedDate":"2024-02-16"},{"lineNumber":237,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":238,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":239,"author":{"gitId":"ararchch"},"content":"        return task;","lastModifiedDate":"2024-02-16"},{"lineNumber":240,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":241,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":242,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":243,"author":{"gitId":"ararchch"},"content":"     * Handles finding of objects in list by calling the findSublist function of list instance.","lastModifiedDate":"2024-02-23"},{"lineNumber":244,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":245,"author":{"gitId":"ararchch"},"content":"     * @param parts String array of parts of the input.","lastModifiedDate":"2024-02-23"},{"lineNumber":246,"author":{"gitId":"ararchch"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":247,"author":{"gitId":"ararchch"},"content":"     * @param ui ui instance.","lastModifiedDate":"2024-02-23"},{"lineNumber":248,"author":{"gitId":"ararchch"},"content":"     * @return String with handled response.","lastModifiedDate":"2024-02-23"},{"lineNumber":249,"author":{"gitId":"ararchch"},"content":"     * @throws InvalidDetailException if detail after command is invalid.","lastModifiedDate":"2024-02-23"},{"lineNumber":250,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":251,"author":{"gitId":"ararchch"},"content":"    public String handleFind(String[] parts, TaskList tasks, Ui ui) throws  InvalidDetailException {","lastModifiedDate":"2024-02-08"},{"lineNumber":252,"author":{"gitId":"ararchch"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":253,"author":{"gitId":"ararchch"},"content":"            throw new InvalidDetailException(\"Invalid detail after keyword. Please retry\");","lastModifiedDate":"2024-02-01"},{"lineNumber":254,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":255,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":256,"author":{"gitId":"ararchch"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-14"},{"lineNumber":257,"author":{"gitId":"ararchch"},"content":"        assert parts[1] !\u003d null : \"search term cannot be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":258,"author":{"gitId":"ararchch"},"content":"        output \u003d ui.printList(tasks.findSublist(parts[1]), \"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-08"},{"lineNumber":259,"author":{"gitId":"ararchch"},"content":"        return output;","lastModifiedDate":"2024-02-08"},{"lineNumber":260,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":261,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":262,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":263,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":264,"author":{"gitId":"ararchch"},"content":"     * Handles the printing of all the tasks in the tasks list.","lastModifiedDate":"2024-02-02"},{"lineNumber":265,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":266,"author":{"gitId":"ararchch"},"content":"     * @param parts The user input split into parts.","lastModifiedDate":"2024-02-23"},{"lineNumber":267,"author":{"gitId":"ararchch"},"content":"     * @param tasks the list of tasks to print.","lastModifiedDate":"2024-02-23"},{"lineNumber":268,"author":{"gitId":"ararchch"},"content":"     * @param ui the ui object to interact with the user.","lastModifiedDate":"2024-02-23"},{"lineNumber":269,"author":{"gitId":"ararchch"},"content":"     * @return String containing handled response.","lastModifiedDate":"2024-02-23"},{"lineNumber":270,"author":{"gitId":"ararchch"},"content":"     * @throws InvalidDetailException if the input does not provide the necessary details.","lastModifiedDate":"2024-02-23"},{"lineNumber":271,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":272,"author":{"gitId":"ararchch"},"content":"    public String handleList(String[] parts, TaskList tasks, Ui ui) throws InvalidDetailException {","lastModifiedDate":"2024-02-08"},{"lineNumber":273,"author":{"gitId":"ararchch"},"content":"        if (parts.length !\u003d 1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":274,"author":{"gitId":"ararchch"},"content":"            throw new InvalidDetailException(\"Invalid detail after keyword. Please retry\");","lastModifiedDate":"2024-01-30"},{"lineNumber":275,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":276,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":277,"author":{"gitId":"ararchch"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-14"},{"lineNumber":278,"author":{"gitId":"ararchch"},"content":"        output \u003d ui.printList(tasks, \"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-14"},{"lineNumber":279,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":280,"author":{"gitId":"ararchch"},"content":"        return output;","lastModifiedDate":"2024-02-08"},{"lineNumber":281,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":282,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":283,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":284,"author":{"gitId":"ararchch"},"content":"     * Handles the deleting of the tasks in the tasks list.","lastModifiedDate":"2024-02-02"},{"lineNumber":285,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":286,"author":{"gitId":"ararchch"},"content":"     * @param parts The user input split into parts.","lastModifiedDate":"2024-02-23"},{"lineNumber":287,"author":{"gitId":"ararchch"},"content":"     * @param tasks the list of tasks to delete from.","lastModifiedDate":"2024-02-23"},{"lineNumber":288,"author":{"gitId":"ararchch"},"content":"     * @param ui the ui object to interact with the user.","lastModifiedDate":"2024-02-23"},{"lineNumber":289,"author":{"gitId":"ararchch"},"content":"     * @return String containing handled response.","lastModifiedDate":"2024-02-23"},{"lineNumber":290,"author":{"gitId":"ararchch"},"content":"     * @throws InvalidDetailException if the input does not provide the necessary details.","lastModifiedDate":"2024-02-23"},{"lineNumber":291,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":292,"author":{"gitId":"ararchch"},"content":"    public String handleDelete(String[] parts, TaskList tasks, Ui ui) throws InvalidDetailException {","lastModifiedDate":"2024-02-08"},{"lineNumber":293,"author":{"gitId":"ararchch"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-08"},{"lineNumber":294,"author":{"gitId":"ararchch"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":295,"author":{"gitId":"ararchch"},"content":"            throw new InvalidDetailException(\"Invalid detail after delete. Please retry\");","lastModifiedDate":"2024-01-30"},{"lineNumber":296,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":297,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":298,"author":{"gitId":"ararchch"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":299,"author":{"gitId":"ararchch"},"content":"            assert parts[1] !\u003d null : \"delete index cannot be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":300,"author":{"gitId":"ararchch"},"content":"            int num \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":301,"author":{"gitId":"ararchch"},"content":"            Task t \u003d tasks.getItem(num - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":302,"author":{"gitId":"ararchch"},"content":"            tasks.delete(num - 1);","lastModifiedDate":"2024-01-30"},{"lineNumber":303,"author":{"gitId":"ararchch"},"content":"            output \u003d ui.printTaskDelete(t, tasks.getListSize());","lastModifiedDate":"2024-02-08"},{"lineNumber":304,"author":{"gitId":"ararchch"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":305,"author":{"gitId":"ararchch"},"content":"            throw new InvalidDetailException(\"Invalid detail after delete. Please retry\");","lastModifiedDate":"2024-01-30"},{"lineNumber":306,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":307,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":308,"author":{"gitId":"ararchch"},"content":"        return output;","lastModifiedDate":"2024-02-08"},{"lineNumber":309,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":310,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":311,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":312,"author":{"gitId":"ararchch"},"content":"     * Handles the marking of the tasks in the tasks list.","lastModifiedDate":"2024-02-02"},{"lineNumber":313,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":314,"author":{"gitId":"ararchch"},"content":"     * @param parts The user input split into parts.","lastModifiedDate":"2024-02-23"},{"lineNumber":315,"author":{"gitId":"ararchch"},"content":"     * @param tasks the list of tasks to mark from.","lastModifiedDate":"2024-02-23"},{"lineNumber":316,"author":{"gitId":"ararchch"},"content":"     * @param ui the ui object to interact with the user.","lastModifiedDate":"2024-02-23"},{"lineNumber":317,"author":{"gitId":"ararchch"},"content":"     * @return String containing handled response.","lastModifiedDate":"2024-02-23"},{"lineNumber":318,"author":{"gitId":"ararchch"},"content":"     * @throws InvalidDetailException if the input does not provide the necessary details.","lastModifiedDate":"2024-02-23"},{"lineNumber":319,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":320,"author":{"gitId":"ararchch"},"content":"    public String handleMark(String[] parts, TaskList tasks, Ui ui, boolean isDone) throws InvalidDetailException {","lastModifiedDate":"2024-02-14"},{"lineNumber":321,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":322,"author":{"gitId":"ararchch"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":323,"author":{"gitId":"ararchch"},"content":"            throw new InvalidDetailException(\"Invalid detail after mark. Please retry\");","lastModifiedDate":"2024-01-30"},{"lineNumber":324,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":325,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":326,"author":{"gitId":"ararchch"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-08"},{"lineNumber":327,"author":{"gitId":"ararchch"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":328,"author":{"gitId":"ararchch"},"content":"            assert parts[1] !\u003d null : \"mark index cannot be null\";","lastModifiedDate":"2024-02-14"},{"lineNumber":329,"author":{"gitId":"ararchch"},"content":"            int idx \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":330,"author":{"gitId":"ararchch"},"content":"            tasks.mark(idx - 1, isDone);","lastModifiedDate":"2024-02-14"},{"lineNumber":331,"author":{"gitId":"ararchch"},"content":"            output \u003d ui.printTaskMark(tasks.getItem(idx - 1), isDone);","lastModifiedDate":"2024-02-14"},{"lineNumber":332,"author":{"gitId":"ararchch"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":333,"author":{"gitId":"ararchch"},"content":"            throw new InvalidDetailException(\"Invalid detail after mark. Please retry\");","lastModifiedDate":"2024-01-30"},{"lineNumber":334,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":335,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":336,"author":{"gitId":"ararchch"},"content":"        return output;","lastModifiedDate":"2024-02-08"},{"lineNumber":337,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":338,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":339,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":340,"author":{"gitId":"ararchch"},"content":"     * Handles update of tasks. Update format is in readme. \u0027*\u0027 is reserved keyword.","lastModifiedDate":"2024-02-23"},{"lineNumber":341,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":342,"author":{"gitId":"ararchch"},"content":"     * @param parts String[] of parts of the input.","lastModifiedDate":"2024-02-23"},{"lineNumber":343,"author":{"gitId":"ararchch"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":344,"author":{"gitId":"ararchch"},"content":"     * @param ui ui instance.","lastModifiedDate":"2024-02-23"},{"lineNumber":345,"author":{"gitId":"ararchch"},"content":"     * @return String containing handled response.","lastModifiedDate":"2024-02-23"},{"lineNumber":346,"author":{"gitId":"ararchch"},"content":"     * @throws InvalidDetailException if detail after keyword is invalid.","lastModifiedDate":"2024-02-23"},{"lineNumber":347,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":348,"author":{"gitId":"ararchch"},"content":"    public String handleUpdate(String[] parts, TaskList tasks, Ui ui, Parser parser) throws InvalidDetailException {","lastModifiedDate":"2024-02-16"},{"lineNumber":349,"author":{"gitId":"ararchch"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-02-16"},{"lineNumber":350,"author":{"gitId":"ararchch"},"content":"            throw new InvalidDetailException(\"Invalid detail after update. Please retry\");","lastModifiedDate":"2024-02-16"},{"lineNumber":351,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":352,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":353,"author":{"gitId":"ararchch"},"content":"        int taskIdx \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-02-16"},{"lineNumber":354,"author":{"gitId":"ararchch"},"content":"        Task task \u003d tasks.getItem(taskIdx - 1);","lastModifiedDate":"2024-02-16"},{"lineNumber":355,"author":{"gitId":"ararchch"},"content":"        String input \u003d partsToString(parts, 2, parts.length);","lastModifiedDate":"2024-02-16"},{"lineNumber":356,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":357,"author":{"gitId":"ararchch"},"content":"        if (task instanceof ToDo) {","lastModifiedDate":"2024-02-16"},{"lineNumber":358,"author":{"gitId":"ararchch"},"content":"            ToDo temp \u003d (ToDo) task;","lastModifiedDate":"2024-02-16"},{"lineNumber":359,"author":{"gitId":"ararchch"},"content":"            interpretAndUpdateTodo(temp, \"todo \" + input);","lastModifiedDate":"2024-02-16"},{"lineNumber":360,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":361,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":362,"author":{"gitId":"ararchch"},"content":"        if (task instanceof Event) {","lastModifiedDate":"2024-02-16"},{"lineNumber":363,"author":{"gitId":"ararchch"},"content":"            Event temp \u003d (Event) task;","lastModifiedDate":"2024-02-16"},{"lineNumber":364,"author":{"gitId":"ararchch"},"content":"            interpretAndUpdateEvent(temp, \"event \" + input);","lastModifiedDate":"2024-02-16"},{"lineNumber":365,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":366,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":367,"author":{"gitId":"ararchch"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2024-02-16"},{"lineNumber":368,"author":{"gitId":"ararchch"},"content":"            Deadline temp \u003d (Deadline) task;","lastModifiedDate":"2024-02-16"},{"lineNumber":369,"author":{"gitId":"ararchch"},"content":"            interpretAndUpdateDeadline(temp, \"deadline \" + input, parser);","lastModifiedDate":"2024-02-16"},{"lineNumber":370,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":371,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":372,"author":{"gitId":"ararchch"},"content":"        String output \u003d ui.printTaskUpdate(task);","lastModifiedDate":"2024-02-16"},{"lineNumber":373,"author":{"gitId":"ararchch"},"content":"        return output;","lastModifiedDate":"2024-02-16"},{"lineNumber":374,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":375,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":376,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":377,"author":{"gitId":"ararchch"},"content":"     * Checks if the user input is equivalent to \u0027bye\u0027.","lastModifiedDate":"2024-02-23"},{"lineNumber":378,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":379,"author":{"gitId":"ararchch"},"content":"     * @param input user input.","lastModifiedDate":"2024-02-23"},{"lineNumber":380,"author":{"gitId":"ararchch"},"content":"     * @return boolean indicating if input is \u0027bye\u0027 or not.","lastModifiedDate":"2024-02-23"},{"lineNumber":381,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":382,"author":{"gitId":"ararchch"},"content":"    public boolean checkIsBye(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":383,"author":{"gitId":"ararchch"},"content":"        String testStr \u003d input.strip();","lastModifiedDate":"2024-02-23"},{"lineNumber":384,"author":{"gitId":"ararchch"},"content":"        return testStr.toLowerCase().equals(\"bye\");","lastModifiedDate":"2024-02-23"},{"lineNumber":385,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":386,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":387,"author":{"gitId":"ararchch"},"content":"    private String getTaskOutput(Task t, TaskList tasks, Ui ui, char isDone, boolean isNewTask) {","lastModifiedDate":"2024-02-14"},{"lineNumber":388,"author":{"gitId":"ararchch"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-14"},{"lineNumber":389,"author":{"gitId":"ararchch"},"content":"        if (isNewTask) {","lastModifiedDate":"2024-02-14"},{"lineNumber":390,"author":{"gitId":"ararchch"},"content":"            output \u003d ui.printTaskAdd(t, tasks.getListSize());","lastModifiedDate":"2024-02-14"},{"lineNumber":391,"author":{"gitId":"ararchch"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":392,"author":{"gitId":"ararchch"},"content":"            t.setDone(isDone \u003d\u003d \u00271\u0027 ? true : false);","lastModifiedDate":"2024-02-14"},{"lineNumber":393,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":394,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":395,"author":{"gitId":"ararchch"},"content":"        return output;","lastModifiedDate":"2024-02-08"},{"lineNumber":396,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":397,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":398,"author":{"gitId":"ararchch"},"content":"    private char getIsDone(String input, boolean isNewTask) {","lastModifiedDate":"2024-02-14"},{"lineNumber":399,"author":{"gitId":"ararchch"},"content":"        char isDone \u003d \u00270\u0027;","lastModifiedDate":"2024-02-14"},{"lineNumber":400,"author":{"gitId":"ararchch"},"content":"        if (!isNewTask) {","lastModifiedDate":"2024-02-14"},{"lineNumber":401,"author":{"gitId":"ararchch"},"content":"            isDone \u003d input.charAt(input.length() - 1);","lastModifiedDate":"2024-02-14"},{"lineNumber":402,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":403,"author":{"gitId":"ararchch"},"content":"        assert isDone \u003d\u003d \u00270\u0027 || isDone \u003d\u003d \u00271\u0027 : \"isDone must be \u00270\u0027 or \u00271\u0027\";","lastModifiedDate":"2024-02-14"},{"lineNumber":404,"author":{"gitId":"ararchch"},"content":"        return isDone;","lastModifiedDate":"2024-02-14"},{"lineNumber":405,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":406,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":407,"author":{"gitId":"ararchch"},"content":"    private String getUpdatedInput(String input, boolean isNewTask) {","lastModifiedDate":"2024-02-14"},{"lineNumber":408,"author":{"gitId":"ararchch"},"content":"        assert input !\u003d \"\" : \"input cannot be empty\";","lastModifiedDate":"2024-02-14"},{"lineNumber":409,"author":{"gitId":"ararchch"},"content":"        return isNewTask ? input : input.substring(0, input.length() - 1);","lastModifiedDate":"2024-02-14"},{"lineNumber":410,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":411,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":412,"author":{"gitId":"ararchch"},"content":"    private String partsToString(String[] parts, int start, int end) {","lastModifiedDate":"2024-02-16"},{"lineNumber":413,"author":{"gitId":"ararchch"},"content":"        String temp \u003d \"\";","lastModifiedDate":"2024-02-16"},{"lineNumber":414,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":415,"author":{"gitId":"ararchch"},"content":"        for (int i \u003d start; i \u003c end; i++) {","lastModifiedDate":"2024-02-16"},{"lineNumber":416,"author":{"gitId":"ararchch"},"content":"            temp \u003d temp + \" \" + parts[i];","lastModifiedDate":"2024-02-16"},{"lineNumber":417,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":418,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":419,"author":{"gitId":"ararchch"},"content":"        return temp;","lastModifiedDate":"2024-02-16"},{"lineNumber":420,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":421,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"ararchch":421}},{"path":"src/main/java/yapchit/yapchitbackend/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.yapchitbackend;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.InvalidDetailException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.InvalidKeywordException;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.YapchitException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":" * Parser class is responsible for parsing input from the user.","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":" * Parses it into formats that are easier for the program to work with.","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"public class Parser {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"     * Constructs new Parser object.","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"    public Parser(){","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"     * Accepts input and converts it into one of the existing, handled operations.","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"     * Operations are listed in the Operations enum.","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"     * @param input user input to be parsed.","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"     * @return YapchitBackend.Operations object representing the operation to be performed.","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"     * @throws YapchitException if the user input cannot be parsed into one of the existing operations.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"    public YapchitBackend.Operations parseInputOperation(String input) throws YapchitException {","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"        String[] parts \u003d this.parseInputParts(input);","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"        YapchitBackend.Operations k;","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"            k \u003d YapchitBackend.Operations.valueOf(parts[0].toUpperCase());","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"            throw new InvalidKeywordException(\"You have entered an invalid keyword\");","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"        return k;","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"     * Wraps over input.split() method to split string input.","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"     * @param input to be parsed into parts.","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"     * @return String[] of parsed input.","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"    public String[] parseInputParts(String input) {","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"        return input.split(\" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"     * Parses time from yyyy-mm-dd format into Java date object.","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"     * @param timestamp date to parse.","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"     * @return LocalDate object representing the date.","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"     * @throws InvalidDetailException if timestamp is invalid or unable to be parsed.","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"    public LocalDate parseTimestamp(String timestamp) throws InvalidDetailException {","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"            LocalDate d \u003d LocalDate.parse(timestamp);","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"            throw new InvalidDetailException(\"Please enter date in yyyy-mm-dd format\");","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"        return LocalDate.parse(timestamp);","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"ararchch":68}},{"path":"src/main/java/yapchit/yapchitbackend/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.yapchitbackend;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitbackend.tasks.Deadline;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitbackend.tasks.Event;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitbackend.tasks.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitbackend.tasks.ToDo;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.FileListParseException;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.YapchitException;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"import java.io.File;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":" * Class that handles interactions with the external storage file.","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":" * File maintains the tasks outside the Yapchit program.","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"public class Storage {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"     * Creates new storage object.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"    public Storage() {","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"     * Imports existing tasks from file at specified filepath and returns list as a TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"     * @param filePath Path where data is stored.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"     * @param ui User interface object to handle outputs","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"     * @param handler Handler object to handle tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"     * @param parser Parser object to parse input.","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"     * @return TaskList containing all tasks in file.","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"     * @throws YapchitException if file is not found or corrupted.","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"    public TaskList importFromFile(","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"            String filePath, Ui ui, Handler handler, Parser parser) throws YapchitException {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"        assert filePath !\u003d \"\" : \"FilePath cannot be empty\";","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"        Scanner s;","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"            s \u003d new Scanner(f);","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"            throw new FileListParseException(\"Could not locate existing file list\");","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"            String input \u003d s.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"            String[] parts \u003d parser.parseInputParts(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"                YapchitBackend.Operations k \u003d YapchitBackend.Operations.valueOf(parts[0].toUpperCase());","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"                handler.handleOperation(input, k, tasks, ui, parser, false);","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"                throw new FileListParseException(\"Error in parsing file. \"","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"                        + \"Some of the contents may be corrupted\");","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"        return tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"     * Updates file at specified path with list of tasks for permanent storage.","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"     * @param filePath Path of file to update.","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"     * @param tasks List of tasks to update the file with.","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"    public void updateFile(String filePath, TaskList tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"        String toWrite \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"        for (int i \u003d 0; i \u003c tasks.getListSize(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"            Task t \u003d tasks.getItem(i);","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"            toWrite \u003d toWrite + getTaskWriteString(t);","lastModifiedDate":"2024-02-14"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"        assert toWrite !\u003d \"\";","lastModifiedDate":"2024-02-14"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"        File dirCheck \u003d f.getParentFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"        if (!dirCheck.exists()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"            dirCheck.mkdirs();","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"            if (!f.exists()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"                f.createNewFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"ararchch"},"content":"            Ui.print(\"Error in creating file. \" + e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"ararchch"},"content":"        try{","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"ararchch"},"content":"            this.writeToFile(filePath, toWrite);","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"ararchch"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"ararchch"},"content":"            Ui.print(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"ararchch"},"content":"    private String getTaskWriteString(Task t) {","lastModifiedDate":"2024-02-14"},{"lineNumber":105,"author":{"gitId":"ararchch"},"content":"        String toWrite \u003d \"\";","lastModifiedDate":"2024-02-14"},{"lineNumber":106,"author":{"gitId":"ararchch"},"content":"        if (t instanceof ToDo) {","lastModifiedDate":"2024-02-14"},{"lineNumber":107,"author":{"gitId":"ararchch"},"content":"            toWrite \u003d \"todo \"+ t.getName() + (t.getDone() ? \"1\" : \"0\") + \"\\n\";","lastModifiedDate":"2024-02-14"},{"lineNumber":108,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":109,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":110,"author":{"gitId":"ararchch"},"content":"        if (t instanceof Event) {","lastModifiedDate":"2024-02-14"},{"lineNumber":111,"author":{"gitId":"ararchch"},"content":"            toWrite \u003d \"event \"+ t.getName()","lastModifiedDate":"2024-02-14"},{"lineNumber":112,"author":{"gitId":"ararchch"},"content":"                    + \" /from \" + ((Event) t).getFrom()","lastModifiedDate":"2024-02-14"},{"lineNumber":113,"author":{"gitId":"ararchch"},"content":"                    + \" /to \" + ((Event) t).getTo()","lastModifiedDate":"2024-02-14"},{"lineNumber":114,"author":{"gitId":"ararchch"},"content":"                    +(t.getDone() ? \"1\" : \"0\") + \"\\n\";","lastModifiedDate":"2024-02-14"},{"lineNumber":115,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":116,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":117,"author":{"gitId":"ararchch"},"content":"        if (t instanceof Deadline) {","lastModifiedDate":"2024-02-14"},{"lineNumber":118,"author":{"gitId":"ararchch"},"content":"            toWrite \u003d \"deadline \"+ t.getName()","lastModifiedDate":"2024-02-14"},{"lineNumber":119,"author":{"gitId":"ararchch"},"content":"                    + \" /by \" + ((Deadline) t).getBy()","lastModifiedDate":"2024-02-14"},{"lineNumber":120,"author":{"gitId":"ararchch"},"content":"                    +(t.getDone() ? \"1\" : \"0\") + \"\\n\";","lastModifiedDate":"2024-02-14"},{"lineNumber":121,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":122,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":123,"author":{"gitId":"ararchch"},"content":"        return toWrite;","lastModifiedDate":"2024-02-14"},{"lineNumber":124,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":125,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":126,"author":{"gitId":"ararchch"},"content":"    private void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2024-02-14"},{"lineNumber":127,"author":{"gitId":"ararchch"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"ararchch"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"ararchch"},"content":"        fw.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"ararchch":131}},{"path":"src/main/java/yapchit/yapchitbackend/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.yapchitbackend;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitbackend.tasks.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.InvalidDetailException;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":" * Encapsulates an arraylist of tasks and performs necessary operations to manipulate it.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"public class TaskList {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"     * Initates new TaskList instance.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"     * Deletes item from list.","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"     * @param idx index of item to delete.","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"    public void delete(int idx) {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"        this.tasks.remove(idx);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"     * Marks item as completed or incomplete.","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"     * @param idx item to be marked.","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"     * @param isDone boolean.","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"     * @throws InvalidDetailException if the mark detail is invalid.","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"    public void mark(int idx, boolean isDone) throws InvalidDetailException {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"        if (idx \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"            throw new InvalidDetailException(\"Invalid item index, please try again.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"            tasks.get(idx).setDone(isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"     * Adds task to list.","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"     * @param t task to add.","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"        tasks.add(t);","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"     * Returns size of list.","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"     * @return int: the size of list.","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"    public int getListSize() {","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"     * Returns item at specified index in list.","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"     * @param i index of task to locate.","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"     * @return Task that is at the specified index.","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"    public Task getItem(int i) {","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"        return this.tasks.get(i);","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"     * Finds list of tasks that have a specific search term.","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"     * @param term search term.","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"     * @return TaskList with names that have search term.","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"    public TaskList findSublist(String term) {","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"        TaskList sublist \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"            if(task.getName().contains(term)){","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"                sublist.addTask(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"        return sublist;","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"ararchch":92}},{"path":"src/main/java/yapchit/yapchitbackend/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.yapchitbackend;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitbackend.tasks.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":" * Ui class is responsible for providing an interface to interact with users.","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"public class Ui {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"     * Constructs a new Ui instance.","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"    public Ui() {","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"     * Returns Yapchit intro message.","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"    public String printIntro() {","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"        String intro \u003d Ui.printLine() + \"\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"                + \"\\tHello! I\u0027m Yapchit\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"                + \"\\tWhat can I do for you?\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"                + Ui.printLine();","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"        return intro;","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"     * Returns Yapchit outro message.","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"    public String printOutro() {","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"        String outro \u003d Ui.printLine() + \"\\n\"","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"                + \"\\tBye. Hope to see you again soon!\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"                + Ui.printLine() + \"\\n\"","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"                + \"\\t Press enter to close window.\";","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"        return outro;","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"     * Returns error message if there is an issue in loading tasks from existing file.","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"    public String printTasklistLoadError() {","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"        return \"\\tUnable to load existing list from file.\"","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"                + \"\\n\\tThis could be due to missing file.\";","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"     * Returns message to signal that task has been added to a list.","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"     * @param t The added task.","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"     * @param size Size of task list to be printed.","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"    public String printTaskAdd(Task t, int size) {","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"        String temp \u003d size \u003d\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"        String output \u003d  Ui.printLine() + \"\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"        + \"\\tGot it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"        + \"\\t\\t\"+ t.toString() + \"\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"        + \"\\tNow you have \" + size +\" \" + temp + \" in the list\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"        + Ui.printLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"        return output;","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"     * Returns message to signal that task has been deleted from a list.","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"     * @param t    The deleted task.","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"     * @param size Size of task list to be printed.","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"    public String printTaskDelete(Task t, int size) {","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"        String temp \u003d size \u003d\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"        String output \u003d Ui.printLine() + \"\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"        + \"\\tNoted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"        + \"\\t\\t\" + t.toString() + \"\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"        + \"\\tNow you have \" + size +\" \" + temp + \" in the list\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"        + Ui.printLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"        return output;","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"     * Returns message to signal that task has been marked or unmarked.","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"     * @param t    The task in question","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"     * @param isDone Boolean that indicates whether the task is completed or not.","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"    public String printTaskMark(Task t, boolean isDone) {","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"        String output \u003d Ui.printLine() + \"\\n\";","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"            output \u003d output + \"\\t\" + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"ararchch"},"content":"            + \"\\t\\t\" + t.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"ararchch"},"content":"            output \u003d output + \"\\t\" + \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":96,"author":{"gitId":"ararchch"},"content":"            + \"\\t\\t\" + t.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"ararchch"},"content":"        output \u003d output + \"\\n\" + Ui.printLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"        return output;","lastModifiedDate":"2024-02-16"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":103,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":104,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"ararchch"},"content":"     * Prints message that task has been updated.","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"ararchch"},"content":"     * @param t the task that is updated.","lastModifiedDate":"2024-02-23"},{"lineNumber":108,"author":{"gitId":"ararchch"},"content":"     * @return String the returned message.","lastModifiedDate":"2024-02-23"},{"lineNumber":109,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":110,"author":{"gitId":"ararchch"},"content":"    public String printTaskUpdate(Task t) {","lastModifiedDate":"2024-02-16"},{"lineNumber":111,"author":{"gitId":"ararchch"},"content":"        String output \u003d Ui.printLine() + \"\\n\";","lastModifiedDate":"2024-02-16"},{"lineNumber":112,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":113,"author":{"gitId":"ararchch"},"content":"        output \u003d output + \"\\t\" + \"Ok! I\u0027ve updated this task:\\n\"","lastModifiedDate":"2024-02-16"},{"lineNumber":114,"author":{"gitId":"ararchch"},"content":"                + \"\\t\\t\" + t.toString();","lastModifiedDate":"2024-02-16"},{"lineNumber":115,"author":{"gitId":"ararchch"},"content":"        output \u003d output + \"\\n\" + Ui.printLine();","lastModifiedDate":"2024-02-16"},{"lineNumber":116,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":117,"author":{"gitId":"ararchch"},"content":"        return output;","lastModifiedDate":"2024-02-08"},{"lineNumber":118,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"ararchch"},"content":"     * Returns the list of tasks currently stored in the TaskList (both completed or incomplete).","lastModifiedDate":"2024-02-23"},{"lineNumber":122,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"ararchch"},"content":"     * @param tasks The TaskList in question.","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"ararchch"},"content":"     * @param message the message to print above the list.","lastModifiedDate":"2024-02-23"},{"lineNumber":125,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"ararchch"},"content":"    public String printList(TaskList tasks, String message) {","lastModifiedDate":"2024-02-08"},{"lineNumber":127,"author":{"gitId":"ararchch"},"content":"        String output \u003d Ui.printLine() + \"\\n\"","lastModifiedDate":"2024-02-08"},{"lineNumber":128,"author":{"gitId":"ararchch"},"content":"        + \"\\t\" + message +\"\\n\";","lastModifiedDate":"2024-02-08"},{"lineNumber":129,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":130,"author":{"gitId":"ararchch"},"content":"        for (int i \u003d 0; i \u003c tasks.getListSize(); i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"ararchch"},"content":"            int idx \u003d i + 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"ararchch"},"content":"            Task item \u003d tasks.getItem(i);","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"ararchch"},"content":"            output \u003d output + \"\\t\" + idx + \".\" + item.toString() + \"\\n\";","lastModifiedDate":"2024-02-08"},{"lineNumber":134,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":135,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"ararchch"},"content":"        output \u003d output + Ui.printLine();","lastModifiedDate":"2024-02-08"},{"lineNumber":137,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":138,"author":{"gitId":"ararchch"},"content":"        return output;","lastModifiedDate":"2024-02-08"},{"lineNumber":139,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":141,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":142,"author":{"gitId":"ararchch"},"content":"     * Returns a line of dashes.","lastModifiedDate":"2024-02-23"},{"lineNumber":143,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":144,"author":{"gitId":"ararchch"},"content":"     * @return line of dashes.","lastModifiedDate":"2024-02-23"},{"lineNumber":145,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":146,"author":{"gitId":"ararchch"},"content":"    public static String printLine() {","lastModifiedDate":"2024-02-08"},{"lineNumber":147,"author":{"gitId":"ararchch"},"content":"        return \"\\t--------------------------------------------------\";","lastModifiedDate":"2024-02-08"},{"lineNumber":148,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":149,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"ararchch"},"content":"     * Wraps over System print functionality for ease of use.","lastModifiedDate":"2024-02-23"},{"lineNumber":152,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":153,"author":{"gitId":"ararchch"},"content":"     * @param o Object to be printed.","lastModifiedDate":"2024-02-02"},{"lineNumber":154,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":155,"author":{"gitId":"ararchch"},"content":"    public static void print(Object o) {","lastModifiedDate":"2024-01-30"},{"lineNumber":156,"author":{"gitId":"ararchch"},"content":"        System.out.println(o);","lastModifiedDate":"2024-01-30"},{"lineNumber":157,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":158,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"ararchch":158}},{"path":"src/main/java/yapchit/yapchitbackend/YapchitBackend.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.yapchitbackend;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.YapchitException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"public class YapchitBackend {","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"     * List of operations that the Yapchit functionality can handle.","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"     * Operations are keywords that the user can enter as Yapchit input.","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"     * Yapchit additionally stores tasks across restarts.","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"    public enum Operations {","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"        LIST,","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"        MARK,","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"        UNMARK,","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"        DEADLINE,","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"        EVENT,","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"        TODO,","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"        DELETE,","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"        FIND,","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"        UPDATE;","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"    private Handler handler;","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"    private boolean isBye;","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"    private String filePath;","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"     * Constructs a YapchitBackend object.","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"     * Initiates instance of components of YapchitBackend and loads tasks from existing file (if any).","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"     * @param filePath The file path to the storage file used to keep track of tasks.","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"    public YapchitBackend(String filePath) {","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"        this.isBye \u003d false;","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"        this.handler \u003d new Handler();","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"     * Initiates core functionality of the bot.","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"     * Harnesses relevant components to accept, handle inputs and output a response.","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"     * @param input the input to the method.","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"     * @return String the response.","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"    public String run(String input) {","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"        assert this.ui !\u003d null;","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"        assert this.parser !\u003d null;","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"        assert this.handler !\u003d null;","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"        assert this.tasks !\u003d null;","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"        String retVal;","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"        try{","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"            YapchitBackend.Operations k \u003d parser.parseInputOperation(input);","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"            retVal \u003d handler.handleOperation(input, k, tasks, ui, parser, true);","lastModifiedDate":"2024-02-14"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"            storage.updateFile(filePath, this.tasks);","lastModifiedDate":"2024-02-14"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"        } catch (YapchitException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"            retVal \u003d e.getMessage();","lastModifiedDate":"2024-02-08"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"        return retVal;","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"     * Returns intro message of yapchit.","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"     * @return String intro message.","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"    public String getIntro() {","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"        String errorMsg \u003d \"\";","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"        try{","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"            this.tasks \u003d storage.importFromFile(filePath, ui, handler, parser);","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"        } catch (YapchitException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"            errorMsg \u003d ui.printTasklistLoadError();","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"        String errorAndIntro \u003d errorMsg + \"\\n\" + ui.printIntro();","lastModifiedDate":"2024-02-14"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"        return errorMsg \u003d\u003d \"\" ? ui.printIntro() : errorAndIntro;","lastModifiedDate":"2024-02-14"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"     * Returns outro message of yapchit.","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"     * @return String outro message.","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"ararchch"},"content":"    public String getOutro(){","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"ararchch"},"content":"        storage.updateFile(filePath, this.tasks);","lastModifiedDate":"2024-02-08"},{"lineNumber":98,"author":{"gitId":"ararchch"},"content":"        return ui.printOutro();","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"     * Checks if input is the command \u0027bye\u0027.","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"ararchch"},"content":"     * @param input text to check.","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"ararchch"},"content":"     * @return Boolean indicating if it\u0027s a \u0027bye\u0027 or not.","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"ararchch"},"content":"    public boolean checkIsBye(String input) {","lastModifiedDate":"2024-02-08"},{"lineNumber":108,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"ararchch"},"content":"        assert input instanceof String : \"input should be a String instance\";","lastModifiedDate":"2024-02-14"},{"lineNumber":110,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"ararchch"},"content":"        return handler.checkIsBye(input);","lastModifiedDate":"2024-02-08"},{"lineNumber":112,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":113,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"ararchch":113}},{"path":"src/main/java/yapchit/yapchitbackend/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.yapchitbackend.tasks;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":" * Deadline class representing a Deadline object.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":" * Extends Task class","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"    private LocalDate by;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"     * Constructor of new Deadline object","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"     * @param name name of Deadline","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    public Deadline(String name, LocalDate by) {","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"        super(name);","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"     * Prints the Deadline details onto the screen.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"     * @return","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"        String tag \u003d super.getDone() ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"        String ret \u003d  \"[D]\"","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"                + tag","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"                + \" \" + super.getName().strip()","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"                + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"                + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"        return super.wrapToString(ret);","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"     * Getter method which returns the \u0027by\u0027 date of the deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"     * @return LocalDate representing the due date of the deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"        return this.by;","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"    public void setBy(LocalDate by) {","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ararchch":54}},{"path":"src/main/java/yapchit/yapchitbackend/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.yapchitbackend.tasks;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":" * Event class representing a Event object.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":" * Extends Task class","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"    private String from;","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"    private String to;","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"     * Constructor of new Event object","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"     * @param name name of Event","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"    public Event(String name, String from, String to) {","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"        super(name);","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"     * Prints the Event details onto the screen.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"     * @return","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"        String tag \u003d super.getDone() ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"        return super.wrapToString(","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"                \"[E]\" + tag + \" \" + super.getName().strip() + \" (from: \" + this.from + \" to: \" + this.to + \")\");","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"     * Getter method which returns the \u0027from\u0027 detail of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"     * @return String representing the \u0027from\u0027 detail of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"    public String getFrom() {","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"        return this.from;","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"     * Getter method which returns the \u0027to\u0027 detail of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"     * @return String representing the \u0027to\u0027 detail of the deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"    public String getTo() {","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"        return this.to;","lastModifiedDate":"2024-01-29"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"    public void setFrom(String from) {","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"    public void setTo(String to) {","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ararchch":62}},{"path":"src/main/java/yapchit/yapchitbackend/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.yapchitbackend.tasks;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":" * Task class representing a general task in Yapchit/","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"public class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"    private String name;","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"     * Constructor of task class.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"     * @param name name of task to perform","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"    public Task(String name){","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"     * setter function to set the tag of the class based on input.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"     * @param isDone the boolean value to update the tag to","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"    public void setDone(boolean isDone){","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"     * Getter function that returns name of tag","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"     * @return String with name of task","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"    public String getName(){","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"        return this.name;","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"    public void setName(String name) {","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"    public boolean getDone(){","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"    protected String wrapToString(String input) {","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"        String result \u003d \"\";","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"        for (int i \u003d 0; i \u003c input.length(); i++) {","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"            result \u003d result + (input.charAt(i));","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"            count++;","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"            if (count \u003d\u003d 38) {","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"                result \u003d result + \"\\n\\t\\t\";","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"                count \u003d 0; // Reset the count after inserting","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"        return result;","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ararchch":62}},{"path":"src/main/java/yapchit/yapchitbackend/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.yapchitbackend.tasks;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":" * ToDo class representing a ToDo object.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":" * Extends Task class","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"public class ToDo extends Task{","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"     * Constructor of new ToDo object","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"     * @param name name of ToDo","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"    public ToDo(String name){","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"        super(name);","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"     * Prints the ToDo details onto the screen.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"     * @return","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"    public String toString(){","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"        String tag \u003d super.getDone() ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"        return super.wrapToString(\"[T]\" + tag + \" \" + super.getName());","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ararchch":28}},{"path":"src/main/java/yapchit/yapchitexceptions/FileListParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.yapchitexceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"public class FileListParseException extends YapchitException {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"    public FileListParseException(String errorMsg) {","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"        super(errorMsg);","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"    ","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ararchch":10}},{"path":"src/main/java/yapchit/yapchitexceptions/InvalidDetailException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.yapchitexceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"public class InvalidDetailException extends YapchitException {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"    public InvalidDetailException(String errorMsg) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"        super(errorMsg);","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"    ","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ararchch":10}},{"path":"src/main/java/yapchit/yapchitexceptions/InvalidKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.yapchitexceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"public class InvalidKeywordException extends YapchitException {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"    public InvalidKeywordException(String errorMsg) {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"        super(errorMsg);","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"    ","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ararchch":11}},{"path":"src/main/java/yapchit/yapchitexceptions/YapchitException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.yapchitexceptions;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":" * Special exception class for Yapchit.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"public class YapchitException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"     * Constucts a special yapchit excption instance.","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"     * Calls constructor of overall exception class.","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"     * @param errorMsg error message of the exception.","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"    public YapchitException(String errorMsg) {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"        super(errorMsg);","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ararchch":19}},{"path":"src/main/java/yapchit/yapchitui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.yapchitui;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"    private void flip() {","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"     * Creates and returns a new instance of a user dialog.","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"     * @param text Text to be included in the dialog.","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"     * @param img Image to be included in the dialog.","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"     * @return DialogBox with text and image.","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"     * Creates and returns a new instance of a yapchit dialog.","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"     * @param text text Text to be included in the dialog.","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"     * @param img Image to be included in the dialog.","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"     * @return DialogBox with text and image.","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"    public static DialogBox getYapchitDialog(String text, Image img) {","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"        db.flip();","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"        return db;","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"ararchch":75}},{"path":"src/main/java/yapchit/yapchitui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.yapchitui;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":" * A GUI for Yapchit using FXML.","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"    private Yapchit yapchit \u003d new Yapchit();","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"     * Starts the application by adding parts to the stage and then showing the stage.","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"     * @param stage the primary stage for this application.","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"            stage.setTitle(\"Yapchit\");","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setYapchit(yapchit);","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setStage(stage);","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"            stage.show();","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ararchch":39}},{"path":"src/main/java/yapchit/yapchitui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.yapchitui;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitbackend.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"    private Yapchit yapchit;","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"    private Stage stage;","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"    private Image yaphitImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaYapchit.png\"));","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"     * Initialises main window by binding the dialog container.","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"     * Sets yapchit attribute of MainWindow instance.","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"     * @param d yapchit instance.","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"    public void setYapchit(Yapchit d) {","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"        yapchit \u003d d;","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"        DialogBox yapchitIntro \u003d DialogBox.getYapchitDialog(yapchit.getIntro(), yaphitImage);","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"        dialogContainer.getChildren().add(yapchitIntro);","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Yapchits\u0027s reply","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"     * and then appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"     * Checks if the stage should be closed before executing the command.","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"    @FXML","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"        checkAndCloseStage();","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"        String response \u003d yapchit.getResponse(input);","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"                DialogBox.getUserDialog(wrapToString(input), userImage),","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"                DialogBox.getYapchitDialog(response, yaphitImage)","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"        );","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"    private String wrapToString(String input) {","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"        String result \u003d \"\";","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"        for (int i \u003d 0; i \u003c input.length(); i++) {","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"            result \u003d result + (input.charAt(i));","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"            count++;","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"            if (count \u003d\u003d 38) {","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"                result \u003d result + \"\\n\";","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"                count \u003d 0; // Reset the count after inserting","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"        return result;","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"    private void checkAndCloseStage() {","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"        if (!yapchit.getHasNext()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"            stage.close();","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"ararchch"},"content":"     * Sets stage attribute of class.","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"ararchch"},"content":"     * @param s stage instance.","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"    protected void setStage(Stage s) {","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"        this.stage \u003d s;","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ararchch":105}},{"path":"src/main/java/yapchit/yapchitui/Yapchit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.yapchitui;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitbackend.Ui;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitbackend.YapchitBackend;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":" * Yapchit is a bot that allows users to create and manage their tasks.","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":" * The Yapchit class is the entry point into the program and encapsulates","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":" * another class that enables the functionality of Yapchit.","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":" * @author Archit Goswami","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":" * @version 1.0","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":" * @since 2024-02-01","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"public class Yapchit {","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    private YapchitBackend yapchitBackend;","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"    private boolean hasNext \u003d true;","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"     * Constructs a new instance of the Yapchit class.","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"     * Yapchit is a chatbot that responds to user input","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"     * based off of a fixed set of criteria. Yapchit encapsulates the yapchit backend instance","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"     * which handles the core functionality of the bot.","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"    public Yapchit() {","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"        this.yapchitBackend\u003d new YapchitBackend(\"./src/main/data/dataStore.txt\");","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"        assert yapchitBackend !\u003d null : \"backend must be initialised\";","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"     * Returns reponse based on input text. Calls backend to handle response.","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"     * @param inputText input text to get response for.","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"     * @return String response.","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"    protected String getResponse(String inputText) {","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"        String yapchitText;","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"        if (yapchitBackend.checkIsBye(inputText)){","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"            yapchitText \u003d yapchitBackend.getOutro();","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"            this.hasNext \u003d false;","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"        } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"            yapchitText \u003d yapchitBackend.run(inputText);","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"        return yapchitText;","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"     * Gets hasNext boolean.","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"     * @return Boolean value of hasNext.","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"    protected boolean getHasNext() {","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"        return this.hasNext;","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"     * Gets intro from backend.","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"     * @return String intro.","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"    protected String getIntro() {","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"        return yapchitBackend.getIntro();","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"ararchch":68}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"        \u003cTextFlow\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"            \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"        \u003c/TextFlow\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ararchch":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"yapchit.yapchitui.MainWindow\"\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"ararchch":19}},{"path":"src/test/java/yapchit/HandlerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitbackend.Handler;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitbackend.Parser;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitbackend.TaskList;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitbackend.Ui;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitbackend.tasks.Deadline;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.InvalidDetailException;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.YapchitException;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":" * Class to test Handler class","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"public class HandlerTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"    private Handler handler;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"    private Parser parser;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"     * Creates a new HandlerTest instance.","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"    public HandlerTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"        handler \u003d new Handler();","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"     * Tests success condition of handleDeadline method of the Handler class.","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"     * @throws YapchitException if test fails.","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"    public void testHandleDeadlineSuccess() throws YapchitException {","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"        String input \u003d \"deadline assignment /by 2023-02-01\";","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"        handler.handleDeadline(input, true, tasks, ui, parser);","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"        Deadline t \u003d new Deadline(\"assignment\", parser.parseTimestamp(\"2023-02-01\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"        assertEquals(t.getName(), tasks.getItem(tasks.getListSize() - 1).getName());","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"        assertEquals(t.getBy(), ((Deadline) tasks.getItem(tasks.getListSize() - 1)).getBy());","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"        input \u003d \"deadline test                          /by 2023-02-28\";","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"        handler.handleDeadline(input, true, tasks, ui, parser);","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"        t \u003d new Deadline(\"test\", parser.parseTimestamp(\"2023-02-28\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"        assertEquals(t.getName(), tasks.getItem(tasks.getListSize() - 1).getName());","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"        assertEquals(t.getBy(), ((Deadline) tasks.getItem(tasks.getListSize() - 1)).getBy());","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"        input \u003d \"deadline test/by 2023-02-28\";","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"        handler.handleDeadline(input, true, tasks, ui, parser);","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"        t \u003d new Deadline(\"test\", parser.parseTimestamp(\"2023-02-28\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"        assertEquals(t.getName(), tasks.getItem(tasks.getListSize() - 1).getName());","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"        assertEquals(t.getBy(), ((Deadline) tasks.getItem(tasks.getListSize() - 1)).getBy());","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"     * Tests missing description fail condition of handleDeadline method of the Handler class.","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"     * @throws YapchitException if test fails.","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"    public void testHandleDeadlineMissingDescription() {","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"        String input \u003d \"deadline /by 2023-02-28\";","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"        assertThrows(InvalidDetailException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"            handler.handleDeadline(input, true, tasks, ui, parser);","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"     * Tests invalid date format fail condition of handleDeadline method of the Handler class.","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"     * @throws YapchitException if test fails.","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"    public void testHandleDeadlineInvalidDateFormat() {","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"        String input \u003d \"deadline test /by 2023-2-28\";","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"        assertThrows(InvalidDetailException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"            handler.handleDeadline(input, true, tasks, ui, parser);","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"     * Tests missing by param fail condition of handleDeadline method of the Handler class.","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"     * @throws YapchitException if test fails.","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"    public void testHandleDeadlineIMissingByParam() {","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"ararchch"},"content":"        String input \u003d \"deadline test /by\";","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"        assertThrows(InvalidDetailException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"ararchch"},"content":"            handler.handleDeadline(input, true, tasks, ui, parser);","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"ararchch"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"     * Tests missing desc and by param fail condition of handleDeadline method of the Handler class.","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"     * @throws YapchitException if test fails.","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"ararchch"},"content":"    public void testHandleDeadlineIMissingDescAndByParam() {","lastModifiedDate":"2024-02-23"},{"lineNumber":106,"author":{"gitId":"ararchch"},"content":"        String input \u003d \"deadline /by\";","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"ararchch"},"content":"        assertThrows(InvalidDetailException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"ararchch"},"content":"            handler.handleDeadline(input, true, tasks, ui, parser);","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"ararchch"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ararchch":114}},{"path":"src/test/java/yapchit/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitbackend.Parser;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitbackend.YapchitBackend;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.InvalidKeywordException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.YapchitException;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":" * Class to test parser class.","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"     * Creates new parser test instance.","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"    public ParserTest() {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"     * Tests success condition of parseInputOperation method of the parser class.","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"     * @throws YapchitException if test fails.","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"    public void testParseInputOperationSuccess() throws YapchitException {","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"        String input \u003d \"deadline\";","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"        YapchitBackend.Operations op \u003d YapchitBackend.Operations.DEADLINE;","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"        assertEquals(op, parser.parseInputOperation(input));","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"        input \u003d \"todo\";","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"        op \u003d YapchitBackend.Operations.TODO;","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"        assertEquals(op, parser.parseInputOperation(input));","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"        input \u003d \"event\";","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"        op \u003d YapchitBackend.Operations.EVENT;","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"        assertEquals(op, parser.parseInputOperation(input));","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"        input \u003d \"mark\";","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"        op \u003d YapchitBackend.Operations.MARK;","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"        assertEquals(op, parser.parseInputOperation(input));","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"        input \u003d \"unmark\";","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"        op \u003d YapchitBackend.Operations.UNMARK;","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"        assertEquals(op, parser.parseInputOperation(input));","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"        input \u003d \"list\";","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"        op \u003d YapchitBackend.Operations.LIST;","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"        assertEquals(op, parser.parseInputOperation(input));","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"        input \u003d \"delete\";","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"        op \u003d YapchitBackend.Operations.DELETE;","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"        assertEquals(op, parser.parseInputOperation(input));","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"        input \u003d \"Delete\";","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"        op \u003d YapchitBackend.Operations.DELETE;","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"        assertEquals(op, parser.parseInputOperation(input));","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"        input \u003d \"toDo\";","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"        op \u003d YapchitBackend.Operations.TODO;","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"        assertEquals(op, parser.parseInputOperation(input));","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"        input \u003d \"MARK\";","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"        op \u003d YapchitBackend.Operations.MARK;","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"        assertEquals(op, parser.parseInputOperation(input));","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"     * Tests missing input fail condition of parseInputOperation method of the parser class.","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"     * @throws YapchitException if test fails.","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"    public void testParseInputMissingInput() {","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"        String input \u003d \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"        assertThrows(InvalidKeywordException.class, () -\u003e {","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"            parser.parseInputOperation(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"        });","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"     * Tests wrong keyword fail condition of parseInputOperation method of the parser class.","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"     * @throws YapchitException if test fails.","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"ararchch"},"content":"    public void testParseInputWrongKeyword() {","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"        String input \u003d \"blah\";","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"ararchch"},"content":"        assertThrows(InvalidKeywordException.class, () -\u003e {","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"ararchch"},"content":"            parser.parseInputOperation(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"ararchch"},"content":"        });","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"     * Tests space in keyword fail condition of parseInputOperation method of the parser class.","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"ararchch"},"content":"     * @throws YapchitException if test fails.","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"ararchch"},"content":"    public void testParseInputSpaceInKeyword() {","lastModifiedDate":"2024-02-23"},{"lineNumber":107,"author":{"gitId":"ararchch"},"content":"        String input \u003d \"dele te\";","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"ararchch"},"content":"        assertThrows(InvalidKeywordException.class, () -\u003e {","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"ararchch"},"content":"            parser.parseInputOperation(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"ararchch"},"content":"        });","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":114,"author":{"gitId":"ararchch"},"content":"     * Tests invalid character after keyword fail condition of parseInputOperation method of the parser class.","lastModifiedDate":"2024-02-23"},{"lineNumber":115,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":116,"author":{"gitId":"ararchch"},"content":"     * @throws YapchitException if test fails.","lastModifiedDate":"2024-02-23"},{"lineNumber":117,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":118,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"ararchch"},"content":"    public void testParseInputInvalidCharacterAfterKeyword() {","lastModifiedDate":"2024-02-23"},{"lineNumber":120,"author":{"gitId":"ararchch"},"content":"        String input \u003d \"mark6\";","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"ararchch"},"content":"        assertThrows(InvalidKeywordException.class, () -\u003e {","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"ararchch"},"content":"            parser.parseInputOperation(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"ararchch"},"content":"        });","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":126,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":127,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ararchch":128}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ararchch":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"del ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"java -classpath ..\\bin yapchit \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"ararchch":2}}]
