[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":"public class Deadline extends Task implements Serializable {","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"    protected DayOfWeek dayOfWeek;","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"        parseDeadline(by.trim());","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"    private void parseDeadline(String by) {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"            this.by \u003d LocalDateTime.parse(by, dateTimeFormatter);","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"            try {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"                // If parsing as specific date/time format fails, try parsing as day of the week","lastModifiedDate":"2024-01-29"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"                DateTimeFormatter dayOfWeekFormatter \u003d DateTimeFormatter.ofPattern(\"EEEE\");","lastModifiedDate":"2024-01-29"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"                this.dayOfWeek \u003d DayOfWeek.from(dayOfWeekFormatter.parse(by));","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"            } catch (DateTimeParseException error) {","lastModifiedDate":"2024-01-29"},{"lineNumber":30,"author":{"gitId":"kailinteoo"},"content":"                System.err.println(\"Error: Invalid date/time input. Please delete the task and provide a valid date/time or day of the week again.\");","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"kailinteoo"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"kailinteoo"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"kailinteoo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"kailinteoo"},"content":"        if (by !\u003d null) {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"kailinteoo"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\")) + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"kailinteoo"},"content":"        } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + dayOfWeek + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"kailinteoo":44}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"/*","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":" * The Duke class represent a simple task management program.","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":" * Users can add, mark as done, unmark, list, delete and exit tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":" * Supports three types of tasks: Todo, Deadline, and Event","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":" * Provides a command-line interface for user interaction","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":" * ","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":" * @author Kailin Teo","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":" * ","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"        // Displaying Duke logo and initial message","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"        String logo \u003d \" KASSIM \";","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"        System.out.println(\"YOO I AM \" + logo);","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"kailinteoo"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"kailinteoo"},"content":"        // Create an ArrayList to store tasks","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"        //ArrayList\u003cTask\u003e myList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"        ArrayList\u003cTask\u003e myList \u003d SaveTask.loadTasks();","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"        ","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"        if (myList \u003d\u003d null) {","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"            myList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"kailinteoo"},"content":"        // Initialize Scanner for user input","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"kailinteoo"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"        System.out.print(\" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"kailinteoo"},"content":"        // Processing loop based on the Command","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"kailinteoo"},"content":"        while (true) {","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"kailinteoo"},"content":"            // Read user input","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"kailinteoo"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"kailinteoo"},"content":"            // Split input into \"command\" and \"parameters\"","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"            String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"            String command \u003d parts[0];","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"kailinteoo"},"content":"            String restOfInputs \u003d parts.length \u003e 1 ? parts[1] : \"\";","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"kailinteoo"},"content":"            // Processing different commands","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"kailinteoo"},"content":"            if (command.equals(\"mark\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"kailinteoo"},"content":"                /*","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"kailinteoo"},"content":"                * Marks a specified task as done","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"kailinteoo"},"content":"                * ","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"kailinteoo"},"content":"                * @param taskNUmver the index of the task to be marked as done","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"kailinteoo"},"content":"                * @throws INdexOutOfBoundsException if the task numr is out of bounds","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"kailinteoo"},"content":"                */","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"kailinteoo"},"content":"                System.out.println(\"\");","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"kailinteoo"},"content":"                int num \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"kailinteoo"},"content":"                if (num \u003e\u003d 0 \u0026\u0026 num \u003c myList.size()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"kailinteoo"},"content":"                    Task task \u003d myList.get(num);","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"kailinteoo"},"content":"                    task.markAsDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"kailinteoo"},"content":"                    System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-26"},{"lineNumber":62,"author":{"gitId":"kailinteoo"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"kailinteoo"},"content":"                    System.out.println(task);","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"kailinteoo"},"content":"                    System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-26"},{"lineNumber":65,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"kailinteoo"},"content":"                } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"kailinteoo"},"content":"                    System.out.println(\"Invalid task number.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"kailinteoo"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"kailinteoo"},"content":"            } else if (command.equals(\"unmark\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"kailinteoo"},"content":"                /*","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"kailinteoo"},"content":"                 * Marks a specified task as not done","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"kailinteoo"},"content":"                 * ","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"kailinteoo"},"content":"                 * @param task number the index of the task to be marked as not done","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"kailinteoo"},"content":"                 * @throws IndexOutOfBoundsException if the task number is out of bounds","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"kailinteoo"},"content":"                 */","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"kailinteoo"},"content":"                System.out.println(\"\");","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"kailinteoo"},"content":"                int num \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"kailinteoo"},"content":"                if (num \u003e\u003d 0 \u0026\u0026 num \u003c myList.size()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"kailinteoo"},"content":"                    Task task \u003d myList.get(num);","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"kailinteoo"},"content":"                    task.markAsNotDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"kailinteoo"},"content":"                    System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-26"},{"lineNumber":86,"author":{"gitId":"kailinteoo"},"content":"                    System.out.println(\"Ok, I\u0027ve marked this task as not done yet: \");","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"kailinteoo"},"content":"                    System.out.println(task);","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"kailinteoo"},"content":"                    System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-26"},{"lineNumber":89,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"kailinteoo"},"content":"                } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"kailinteoo"},"content":"                    System.out.println(\"Invalid task number.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"kailinteoo"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"kailinteoo"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"kailinteoo"},"content":"                /*","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"kailinteoo"},"content":"                 * Displays the list of tasks in the MyList","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"kailinteoo"},"content":"                 */","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"kailinteoo"},"content":"                System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-26"},{"lineNumber":100,"author":{"gitId":"kailinteoo"},"content":"                System.out.println(\"Here are the tasks in your list: \");","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":102,"author":{"gitId":"kailinteoo"},"content":"                for (Task task : myList) {","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"kailinteoo"},"content":"                    System.out.println((myList.indexOf(task) + 1) + \".\" + task);","lastModifiedDate":"2024-01-25"},{"lineNumber":104,"author":{"gitId":"kailinteoo"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":105,"author":{"gitId":"kailinteoo"},"content":"                System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-26"},{"lineNumber":106,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":107,"author":{"gitId":"kailinteoo"},"content":"            } else if (command.equals(\"bye\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":108,"author":{"gitId":"kailinteoo"},"content":"                /*","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"kailinteoo"},"content":"                 * Save the new task in MyList before exitting the Duke Program","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"kailinteoo"},"content":"                 */","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"kailinteoo"},"content":"                ","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"kailinteoo"},"content":"                SaveTask.saveTasks(myList);","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"kailinteoo"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":114,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":115,"author":{"gitId":"kailinteoo"},"content":"            } else if (command.equals(\"delete\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":116,"author":{"gitId":"kailinteoo"},"content":"                /*","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"kailinteoo"},"content":"                 * Deletes a specified task from the list","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"kailinteoo"},"content":"                 * ","lastModifiedDate":"2024-01-28"},{"lineNumber":119,"author":{"gitId":"kailinteoo"},"content":"                 * @param task numer the index of the task to be deleted","lastModifiedDate":"2024-01-28"},{"lineNumber":120,"author":{"gitId":"kailinteoo"},"content":"                 * @throws INdexOutOfBoundsException if the task number is out of bounds","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"kailinteoo"},"content":"                 */","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"kailinteoo"},"content":"                int removed_item \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2024-01-26"},{"lineNumber":124,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":125,"author":{"gitId":"kailinteoo"},"content":"                System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-26"},{"lineNumber":126,"author":{"gitId":"kailinteoo"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2024-01-26"},{"lineNumber":127,"author":{"gitId":"kailinteoo"},"content":"                System.out.println(myList.get(removed_item));","lastModifiedDate":"2024-01-26"},{"lineNumber":128,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":129,"author":{"gitId":"kailinteoo"},"content":"                myList.remove(removed_item);","lastModifiedDate":"2024-01-26"},{"lineNumber":130,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":131,"author":{"gitId":"kailinteoo"},"content":"                System.out.println(\"Now you have \" + myList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-26"},{"lineNumber":132,"author":{"gitId":"kailinteoo"},"content":"                System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-26"},{"lineNumber":133,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":134,"author":{"gitId":"kailinteoo"},"content":"            } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":135,"author":{"gitId":"kailinteoo"},"content":"                ","lastModifiedDate":"2024-01-25"},{"lineNumber":136,"author":{"gitId":"kailinteoo"},"content":"                try {","lastModifiedDate":"2024-01-26"},{"lineNumber":137,"author":{"gitId":"kailinteoo"},"content":"                    // Todo is called","lastModifiedDate":"2024-01-25"},{"lineNumber":138,"author":{"gitId":"kailinteoo"},"content":"                    if (command.equals(\"todo\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":139,"author":{"gitId":"kailinteoo"},"content":"                        /*","lastModifiedDate":"2024-01-28"},{"lineNumber":140,"author":{"gitId":"kailinteoo"},"content":"                         * Adds a Todo task to the list.","lastModifiedDate":"2024-01-28"},{"lineNumber":141,"author":{"gitId":"kailinteoo"},"content":"                         * ","lastModifiedDate":"2024-01-28"},{"lineNumber":142,"author":{"gitId":"kailinteoo"},"content":"                         * @param item The description of the Todo task","lastModifiedDate":"2024-01-28"},{"lineNumber":143,"author":{"gitId":"kailinteoo"},"content":"                         * @throws DukeException if the description is empty","lastModifiedDate":"2024-01-28"},{"lineNumber":144,"author":{"gitId":"kailinteoo"},"content":"                         */","lastModifiedDate":"2024-01-28"},{"lineNumber":145,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":146,"author":{"gitId":"kailinteoo"},"content":"                        String item \u003d restOfInputs;","lastModifiedDate":"2024-01-25"},{"lineNumber":147,"author":{"gitId":"kailinteoo"},"content":"                        try {","lastModifiedDate":"2024-01-26"},{"lineNumber":148,"author":{"gitId":"kailinteoo"},"content":"                            if (item.isEmpty()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":149,"author":{"gitId":"kailinteoo"},"content":"                                ","lastModifiedDate":"2024-01-26"},{"lineNumber":150,"author":{"gitId":"kailinteoo"},"content":"                                throw new DukeException(\"Todo cannot be empty, please indicate what you plan to do.\");","lastModifiedDate":"2024-01-26"},{"lineNumber":151,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":152,"author":{"gitId":"kailinteoo"},"content":"                            } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":153,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":154,"author":{"gitId":"kailinteoo"},"content":"                                Todo newTodo \u003d new Todo(item);","lastModifiedDate":"2024-01-25"},{"lineNumber":155,"author":{"gitId":"kailinteoo"},"content":"                                myList.add(newTodo);","lastModifiedDate":"2024-01-25"},{"lineNumber":156,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":157,"author":{"gitId":"kailinteoo"},"content":"                                System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-26"},{"lineNumber":158,"author":{"gitId":"kailinteoo"},"content":"                                System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2024-01-25"},{"lineNumber":159,"author":{"gitId":"kailinteoo"},"content":"                                System.out.println(newTodo);","lastModifiedDate":"2024-01-25"},{"lineNumber":160,"author":{"gitId":"kailinteoo"},"content":"                                System.out.println(\"Now you have \" + myList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":161,"author":{"gitId":"kailinteoo"},"content":"                                System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-26"},{"lineNumber":162,"author":{"gitId":"kailinteoo"},"content":"                            }","lastModifiedDate":"2024-01-26"},{"lineNumber":163,"author":{"gitId":"kailinteoo"},"content":"                        } catch (DukeException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":164,"author":{"gitId":"kailinteoo"},"content":"                            System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-26"},{"lineNumber":165,"author":{"gitId":"kailinteoo"},"content":"                            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-26"},{"lineNumber":166,"author":{"gitId":"kailinteoo"},"content":"                            System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-26"},{"lineNumber":167,"author":{"gitId":"kailinteoo"},"content":"                        }","lastModifiedDate":"2024-01-26"},{"lineNumber":168,"author":{"gitId":"kailinteoo"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":169,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":170,"author":{"gitId":"kailinteoo"},"content":"                    // Deadline is called","lastModifiedDate":"2024-01-25"},{"lineNumber":171,"author":{"gitId":"kailinteoo"},"content":"                    else if (command.equals(\"deadline\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":172,"author":{"gitId":"kailinteoo"},"content":"                        /*","lastModifiedDate":"2024-01-28"},{"lineNumber":173,"author":{"gitId":"kailinteoo"},"content":"                         * Adds a Deadline task to the list","lastModifiedDate":"2024-01-28"},{"lineNumber":174,"author":{"gitId":"kailinteoo"},"content":"                         * ","lastModifiedDate":"2024-01-28"},{"lineNumber":175,"author":{"gitId":"kailinteoo"},"content":"                         * @param item The description of the deadline task","lastModifiedDate":"2024-01-28"},{"lineNumber":176,"author":{"gitId":"kailinteoo"},"content":"                         * @param time The due date and time of the deadline task","lastModifiedDate":"2024-01-28"},{"lineNumber":177,"author":{"gitId":"kailinteoo"},"content":"                         */","lastModifiedDate":"2024-01-28"},{"lineNumber":178,"author":{"gitId":"kailinteoo"},"content":"                        String item \u003d restOfInputs;","lastModifiedDate":"2024-01-28"},{"lineNumber":179,"author":{"gitId":"kailinteoo"},"content":"                        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":180,"author":{"gitId":"kailinteoo"},"content":"                            if (item.isEmpty()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":181,"author":{"gitId":"kailinteoo"},"content":"                                ","lastModifiedDate":"2024-01-28"},{"lineNumber":182,"author":{"gitId":"kailinteoo"},"content":"                                throw new DukeException(\"Deadline cannot be empty, please indicate the deadline of the plan\");","lastModifiedDate":"2024-01-28"},{"lineNumber":183,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":184,"author":{"gitId":"kailinteoo"},"content":"                            } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":185,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":186,"author":{"gitId":"kailinteoo"},"content":"                                String[] item_time \u003d restOfInputs.split(\"/by\");","lastModifiedDate":"2024-01-25"},{"lineNumber":187,"author":{"gitId":"kailinteoo"},"content":"                                String items \u003d item_time[0];","lastModifiedDate":"2024-01-28"},{"lineNumber":188,"author":{"gitId":"kailinteoo"},"content":"                                String time \u003d item_time[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":189,"author":{"gitId":"kailinteoo"},"content":"        ","lastModifiedDate":"2024-01-25"},{"lineNumber":190,"author":{"gitId":"kailinteoo"},"content":"                                Deadline newDeadline \u003d new Deadline(items, time);","lastModifiedDate":"2024-01-28"},{"lineNumber":191,"author":{"gitId":"kailinteoo"},"content":"                                myList.add(newDeadline);","lastModifiedDate":"2024-01-25"},{"lineNumber":192,"author":{"gitId":"kailinteoo"},"content":"                                System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-26"},{"lineNumber":193,"author":{"gitId":"kailinteoo"},"content":"                                System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2024-01-25"},{"lineNumber":194,"author":{"gitId":"kailinteoo"},"content":"                                System.out.println(newDeadline);","lastModifiedDate":"2024-01-25"},{"lineNumber":195,"author":{"gitId":"kailinteoo"},"content":"                                System.out.println(\"Now you have \" + myList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":196,"author":{"gitId":"kailinteoo"},"content":"                                System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-26"},{"lineNumber":197,"author":{"gitId":"kailinteoo"},"content":"                            }","lastModifiedDate":"2024-01-25"},{"lineNumber":198,"author":{"gitId":"kailinteoo"},"content":"                        } catch (DukeException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":199,"author":{"gitId":"kailinteoo"},"content":"                            System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-28"},{"lineNumber":200,"author":{"gitId":"kailinteoo"},"content":"                            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":201,"author":{"gitId":"kailinteoo"},"content":"                            System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-28"},{"lineNumber":202,"author":{"gitId":"kailinteoo"},"content":"                        }","lastModifiedDate":"2024-01-28"},{"lineNumber":203,"author":{"gitId":"kailinteoo"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":204,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":205,"author":{"gitId":"kailinteoo"},"content":"                    // Event is called","lastModifiedDate":"2024-01-25"},{"lineNumber":206,"author":{"gitId":"kailinteoo"},"content":"                    else if (command.equals(\"event\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":207,"author":{"gitId":"kailinteoo"},"content":"                        /*","lastModifiedDate":"2024-01-28"},{"lineNumber":208,"author":{"gitId":"kailinteoo"},"content":"                         * Adds an Event task to the list","lastModifiedDate":"2024-01-28"},{"lineNumber":209,"author":{"gitId":"kailinteoo"},"content":"                         * ","lastModifiedDate":"2024-01-28"},{"lineNumber":210,"author":{"gitId":"kailinteoo"},"content":"                         * @param item The description of the Event task","lastModifiedDate":"2024-01-28"},{"lineNumber":211,"author":{"gitId":"kailinteoo"},"content":"                         * @param from The start time of the Event task","lastModifiedDate":"2024-01-28"},{"lineNumber":212,"author":{"gitId":"kailinteoo"},"content":"                         * @para to The end time of the Event task","lastModifiedDate":"2024-01-28"},{"lineNumber":213,"author":{"gitId":"kailinteoo"},"content":"                         */","lastModifiedDate":"2024-01-28"},{"lineNumber":214,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":215,"author":{"gitId":"kailinteoo"},"content":"                        String item \u003d restOfInputs;","lastModifiedDate":"2024-01-28"},{"lineNumber":216,"author":{"gitId":"kailinteoo"},"content":"                        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":217,"author":{"gitId":"kailinteoo"},"content":"                            if (item.isEmpty()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":218,"author":{"gitId":"kailinteoo"},"content":"                                ","lastModifiedDate":"2024-01-28"},{"lineNumber":219,"author":{"gitId":"kailinteoo"},"content":"                                throw new DukeException(\"Event cannot be empty, please indicate the plan, start and end time!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":220,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":221,"author":{"gitId":"kailinteoo"},"content":"                            } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":222,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":223,"author":{"gitId":"kailinteoo"},"content":"                                String[] item_time \u003d restOfInputs.split(\"/from\");","lastModifiedDate":"2024-01-25"},{"lineNumber":224,"author":{"gitId":"kailinteoo"},"content":"                                String items \u003d item_time[0];","lastModifiedDate":"2024-01-28"},{"lineNumber":225,"author":{"gitId":"kailinteoo"},"content":"                                String time \u003d item_time[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":226,"author":{"gitId":"kailinteoo"},"content":"        ","lastModifiedDate":"2024-01-25"},{"lineNumber":227,"author":{"gitId":"kailinteoo"},"content":"                                String[] from_to \u003d time.split(\"/to\");","lastModifiedDate":"2024-01-25"},{"lineNumber":228,"author":{"gitId":"kailinteoo"},"content":"                                String from \u003d from_to[0];","lastModifiedDate":"2024-01-25"},{"lineNumber":229,"author":{"gitId":"kailinteoo"},"content":"                                String to \u003d from_to[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":230,"author":{"gitId":"kailinteoo"},"content":"        ","lastModifiedDate":"2024-01-25"},{"lineNumber":231,"author":{"gitId":"kailinteoo"},"content":"                                Event newEvent \u003d new Event(items, from, to);","lastModifiedDate":"2024-01-28"},{"lineNumber":232,"author":{"gitId":"kailinteoo"},"content":"                                myList.add(newEvent);","lastModifiedDate":"2024-01-25"},{"lineNumber":233,"author":{"gitId":"kailinteoo"},"content":"        ","lastModifiedDate":"2024-01-25"},{"lineNumber":234,"author":{"gitId":"kailinteoo"},"content":"                                System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-26"},{"lineNumber":235,"author":{"gitId":"kailinteoo"},"content":"                                System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2024-01-25"},{"lineNumber":236,"author":{"gitId":"kailinteoo"},"content":"                                System.out.println(newEvent);","lastModifiedDate":"2024-01-25"},{"lineNumber":237,"author":{"gitId":"kailinteoo"},"content":"                                System.out.println(\"Now you have \" + myList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":238,"author":{"gitId":"kailinteoo"},"content":"                                System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-26"},{"lineNumber":239,"author":{"gitId":"kailinteoo"},"content":"                            }","lastModifiedDate":"2024-01-26"},{"lineNumber":240,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":241,"author":{"gitId":"kailinteoo"},"content":"                        } catch (DukeException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":242,"author":{"gitId":"kailinteoo"},"content":"                            System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-28"},{"lineNumber":243,"author":{"gitId":"kailinteoo"},"content":"                            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":244,"author":{"gitId":"kailinteoo"},"content":"                            System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-28"},{"lineNumber":245,"author":{"gitId":"kailinteoo"},"content":"                        }","lastModifiedDate":"2024-01-28"},{"lineNumber":246,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":247,"author":{"gitId":"kailinteoo"},"content":"                    }","lastModifiedDate":"2024-01-28"},{"lineNumber":248,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":249,"author":{"gitId":"kailinteoo"},"content":"                    else {","lastModifiedDate":"2024-01-26"},{"lineNumber":250,"author":{"gitId":"kailinteoo"},"content":"                        /*","lastModifiedDate":"2024-01-28"},{"lineNumber":251,"author":{"gitId":"kailinteoo"},"content":"                         * Handle unknow commands and throws an exception","lastModifiedDate":"2024-01-28"},{"lineNumber":252,"author":{"gitId":"kailinteoo"},"content":"                         * ","lastModifiedDate":"2024-01-28"},{"lineNumber":253,"author":{"gitId":"kailinteoo"},"content":"                         * @throws DukeException if the command is not recognized","lastModifiedDate":"2024-01-28"},{"lineNumber":254,"author":{"gitId":"kailinteoo"},"content":"                         */","lastModifiedDate":"2024-01-28"},{"lineNumber":255,"author":{"gitId":"kailinteoo"},"content":"                        throw new DukeException(\"SORRY! but are you sure you enter the correct command? please check!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":256,"author":{"gitId":"kailinteoo"},"content":"                    }","lastModifiedDate":"2024-01-26"},{"lineNumber":257,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":258,"author":{"gitId":"kailinteoo"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-01-26"},{"lineNumber":259,"author":{"gitId":"kailinteoo"},"content":"                    /*","lastModifiedDate":"2024-01-28"},{"lineNumber":260,"author":{"gitId":"kailinteoo"},"content":"                     * Handles Duke-specific exceptions and prints an error message","lastModifiedDate":"2024-01-28"},{"lineNumber":261,"author":{"gitId":"kailinteoo"},"content":"                     * ","lastModifiedDate":"2024-01-28"},{"lineNumber":262,"author":{"gitId":"kailinteoo"},"content":"                     * @param e The DukeException object","lastModifiedDate":"2024-01-28"},{"lineNumber":263,"author":{"gitId":"kailinteoo"},"content":"                     */","lastModifiedDate":"2024-01-28"},{"lineNumber":264,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":265,"author":{"gitId":"kailinteoo"},"content":"                    System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-26"},{"lineNumber":266,"author":{"gitId":"kailinteoo"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-01-26"},{"lineNumber":267,"author":{"gitId":"kailinteoo"},"content":"                    System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-26"},{"lineNumber":268,"author":{"gitId":"kailinteoo"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":269,"author":{"gitId":"kailinteoo"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":270,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":271,"author":{"gitId":"kailinteoo"},"content":"            System.out.print(\" \");","lastModifiedDate":"2024-01-25"},{"lineNumber":272,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":273,"author":{"gitId":"kailinteoo"},"content":"        /*","lastModifiedDate":"2024-01-28"},{"lineNumber":274,"author":{"gitId":"kailinteoo"},"content":"         * Final message before exiting","lastModifiedDate":"2024-01-28"},{"lineNumber":275,"author":{"gitId":"kailinteoo"},"content":"         */","lastModifiedDate":"2024-01-28"},{"lineNumber":276,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":277,"author":{"gitId":"kailinteoo"},"content":"        System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2024-01-26"},{"lineNumber":278,"author":{"gitId":"kailinteoo"},"content":"        System.out.println(\"Bye! Hope to see you again!!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":281,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"kailinteoo":277,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"    ","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"        super(message);","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"        ","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"kailinteoo":7}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"public class Event extends Task implements Serializable {","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"    protected String from;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":"    protected String to;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \" )\" ;","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"kailinteoo":19}},{"path":"src/main/java/SaveTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"import java.util.List;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"public class SaveTask {","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"    private static final String FILE_PATH \u003d \"src/main/java/duke.txt\";","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"    private static void ensureFolderAndFileExists() {","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"        File folder \u003d new File(\"src/main/java\");","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"        File file \u003d new File(folder, \"duke.txt\");","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"        if(!folder.exists()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"            // Creates the directory named by this abstract pathname, ","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"kailinteoo"},"content":"            // including any necessary but nonexistent parent directories","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"            folder.mkdirs();","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"                file.createNewFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"kailinteoo"},"content":"                System.err.println(\"Error creating new file; \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"kailinteoo"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"kailinteoo"},"content":"    ","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"kailinteoo"},"content":"    public static void saveTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"kailinteoo"},"content":"        ensureFolderAndFileExists();","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"kailinteoo"},"content":"        // OOS writes primitive data types and graphs of Java objects to an OutputStream","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"kailinteoo"},"content":"        // Both FileInputStream and FileOutputStream create byte streams linked to files","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"kailinteoo"},"content":"        try(ObjectOutputStream oos \u003d new ObjectOutputStream(new FileOutputStream(FILE_PATH))) {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"            // Open an OOS for writing to the files","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"            oos.writeObject(tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"kailinteoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"kailinteoo"},"content":"            // Catch any IOException that might occur during the file writing process","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"kailinteoo"},"content":"            System.err.println(\"Error saving tasks:\" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"kailinteoo"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"kailinteoo"},"content":"    public static ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"kailinteoo"},"content":"        ArrayList\u003cTask\u003e tasks \u003d null;","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"kailinteoo"},"content":"        try(ObjectInputStream ois \u003d new ObjectInputStream(new FileInputStream(FILE_PATH))) {","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"kailinteoo"},"content":"            tasks \u003d (ArrayList\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"kailinteoo"},"content":"            ","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"kailinteoo"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"kailinteoo"},"content":"            System.out.println(\"No existing data file found. Starting with an empty task list\");","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"kailinteoo"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"kailinteoo"},"content":"            System.err.println(\"Error loading tasks: Corrupted data file. Starting with an empty task list.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"kailinteoo"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"kailinteoo"},"content":"        return tasks;","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"kailinteoo":67}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":"public class Task implements Serializable {","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":"    private String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"    // Constructor with deadline","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"kailinteoo"},"content":"    public Task(String description, LocalDateTime deadline) {","lastModifiedDate":"2024-01-29"},{"lineNumber":18,"author":{"gitId":"kailinteoo"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-29"},{"lineNumber":19,"author":{"gitId":"kailinteoo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-29"},{"lineNumber":20,"author":{"gitId":"kailinteoo"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":22,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":23,"author":{"gitId":"kailinteoo"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"kailinteoo"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"kailinteoo"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"kailinteoo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"kailinteoo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"kailinteoo"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"kailinteoo"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"kailinteoo"},"content":"        return description;","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"kailinteoo"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"kailinteoo"},"content":"        return deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"kailinteoo"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"kailinteoo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"kailinteoo"},"content":"        String status \u003d getStatusIcon();","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"kailinteoo"},"content":"        String deadlineString \u003d (deadline !\u003d null) ? \" (by: \" + deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mm a\")) + \")\" : \"\";","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"kailinteoo"},"content":"        return status + \" \" + getDescription() + deadlineString;","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"kailinteoo":49}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":3,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"kailinteoo"},"content":"public class Todo extends Task implements Serializable {","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"kailinteoo"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"kailinteoo"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"kailinteoo"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"kailinteoo"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"kailinteoo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"kailinteoo"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"kailinteoo"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"kailinteoo"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"kailinteoo":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kailinteoo"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"kailinteoo"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"kailinteoo":2}}]
