[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"taniatsq":2,"-":41}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"import java.io.File;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":" * Main class of the program.","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":" *","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":" * @author Tania Tan Shu Qi","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"     * Calls to Ui ui to start and end the program.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"     * Calls to TaskList tasklist to write current tasks to File f.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"     * @param args Command-line arguments passed to the program.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"     * @throws FileNotFoundException When File f does not exist.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"     * @throws IOException When File f cannot be found.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"    public static void main(String[] args) throws FileNotFoundException, IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"        File f \u003d new File(\"data/EUEU.txt\");","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"        Scanner user \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"        Storage storage \u003d new Storage(f);","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"        TaskList tasklist \u003d new TaskList(storage);","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"        Ui ui \u003d new Ui(user, tasklist);","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"        System.out.println(ui.showWelcome());","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"        ui.readCommand();","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"        tasklist.write();","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"        System.out.println(ui.exit());","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"taniatsq":35,"-":3}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import duke.task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":" * Represents a parser that parses user\u0027s String input","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":" * to a command for TaskList to execute.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"public class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"private TaskList tasklist;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"    public Parser(TaskList tasklist) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"        this.tasklist \u003d tasklist;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"     * Parses user\u0027s String input to commands that TaskList executes","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"     * (i.e. mark, unmark, delete, find, todo, deadline, event)","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"     * @param command String input from user","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"     * @throws StringIndexOutOfBoundsException When user does not specify the task to do after a command (e.g. todo)","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"     * @throws NumberFormatException When user does not leave a space between command and number (e.g. mark1)","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"     * @throws ArrayIndexOutOfBoundsException When user does not specify dates of deadline/event","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"     * @throws FileNotFoundException When File f does not exist.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"    public void parsing(String command) throws StringIndexOutOfBoundsException, NumberFormatException,","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"            ArrayIndexOutOfBoundsException, FileNotFoundException {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"            tasklist.list();","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"        } else if (command.startsWith(\"mark\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"                String str \u003d command.substring(5);","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"                int number \u003d Integer.parseInt(str) - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"                tasklist.mark(number);","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"taniatsq"},"content":"                System.out.println(\"Enter task to mark done: e.g. mark 1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"taniatsq"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"taniatsq"},"content":"            catch (NumberFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"taniatsq"},"content":"                System.out.println(\"Enter task to mark done: e.g. mark 1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"taniatsq"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"taniatsq"},"content":"        } else if (command.startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"taniatsq"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"taniatsq"},"content":"                String str \u003d command.substring(7);","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"taniatsq"},"content":"                int number \u003d Integer.parseInt(str) - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"taniatsq"},"content":"                tasklist.unmark(number);","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"taniatsq"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"taniatsq"},"content":"                System.out.println(\"Enter task to unmark: e.g. unmark 1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"taniatsq"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"taniatsq"},"content":"                System.out.println(\"Enter task to unmark: e.g. unmark 1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"taniatsq"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"taniatsq"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"taniatsq"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"taniatsq"},"content":"                String str \u003d command.substring(7);","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"taniatsq"},"content":"                int number \u003d Integer.parseInt(str) - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"taniatsq"},"content":"                tasklist.delete(number);","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"taniatsq"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"taniatsq"},"content":"                System.out.println(\"Enter task to delete: e.g. delete 1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"taniatsq"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"taniatsq"},"content":"                System.out.println(\"Enter task to delete: e.g. delete 1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"taniatsq"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"taniatsq"},"content":"        } else if(command.startsWith(\"find\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"taniatsq"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"taniatsq"},"content":"                String str \u003d command.substring(5);","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"taniatsq"},"content":"                tasklist.find(str);","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"taniatsq"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"taniatsq"},"content":"                System.out.println(\"What are you finding babe?\");","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"taniatsq"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"taniatsq"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"taniatsq"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"taniatsq"},"content":"                if (command.startsWith(\"todo\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"taniatsq"},"content":"                    String str \u003d command.substring(5);","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"taniatsq"},"content":"                    Todo todo \u003d new Todo(str);","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"taniatsq"},"content":"                    tasklist.addTask(todo);","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"taniatsq"},"content":"                } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"taniatsq"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"taniatsq"},"content":"                        String str \u003d command.substring(9);","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"taniatsq"},"content":"                        String[] arr \u003d str.split(\"/\");","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"taniatsq"},"content":"                        String c \u003d arr[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"taniatsq"},"content":"                        String ddl \u003d arr[1].substring(3);","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"taniatsq"},"content":"                        Deadline deadline \u003d new Deadline(ddl, c);","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"taniatsq"},"content":"                        tasklist.addTask(deadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"taniatsq"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"taniatsq"},"content":"                        System.out.println(\"Let me know your deadlines babe: e.g. deadline \u003cdeadline\u003e /by \u003cddl\u003e\");","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"taniatsq"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"taniatsq"},"content":"                } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"taniatsq"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"taniatsq"},"content":"                        String str \u003d command.substring(6);","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"taniatsq"},"content":"                        String[] arr \u003d str.split(\"/\");","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"taniatsq"},"content":"                        String c \u003d arr[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"taniatsq"},"content":"                        String start \u003d arr[1].substring(5);","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"taniatsq"},"content":"                        String end \u003d arr[2].substring(3);","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"taniatsq"},"content":"                        Event event \u003d new Event(start, end, c);","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"taniatsq"},"content":"                        tasklist.addTask(event);","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"taniatsq"},"content":"                    } catch(ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"taniatsq"},"content":"                        System.out.println(\"Let me know when this event is bb: \" +","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"taniatsq"},"content":"                                \"e.g. event \u003cevent\u003e /from \u003cwhen\u003e/to \u003cwhen\u003e\");","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"taniatsq"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"taniatsq"},"content":"                } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"taniatsq"},"content":"                    System.out.println(\"Baby, what are you saying? Tell me what your TODOs, DEADLINEs and EVENTs are!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"taniatsq"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"taniatsq"},"content":"            } catch (StringIndexOutOfBoundsException e){","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"taniatsq"},"content":"                System.out.println(\"ENTER INSTRUCTION\");","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"taniatsq"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"taniatsq":114}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import java.io.File;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":" * Represents a Storage system which saves and loads tasks in a File f.","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"public class Storage {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"    private File f;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"    public Storage (File f) {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"        this.f \u003d f;","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"     * Gets the File content of f.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"     * @throws FileNotFoundException When data file doesn\u0027t exist.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"    public void getFileContent() throws FileNotFoundException {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"                System.out.println(\"    \" + s.nextLine());","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"            System.out.println(\"file not found! try again xx\");","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"     * Getter function that returns the File f.","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"     * @return File f.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"    public File getFile() {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"        return f;","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"taniatsq":43}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"import duke.task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":" * Represents the tasklist and executes the tasks given","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":" * (i.e. list, write, addTask, mark, unmark, delete).","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":" * Contains an ArrayList\u003cTask\u003e tasklist and Storage s.","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"public class TaskList {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"    private ArrayList\u003cTask\u003e tasklist \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"    private Storage s;","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"    public TaskList(Storage s) {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"        this.s \u003d s;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"     * Writes current task to the file which is stored in Storage s.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"     * @throws IOException When File f cannot be found.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"    public void write() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"        for (int i \u003d 0; i \u003c tasklist.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"            tasklist.get(i).writeToFile(s.getFile());","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"     * Lists all tasks from previous iterations of Duke.run() which are stored in","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"     * Storage s as well as current tasks in current iterations of Duke.run().","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"    public void list() throws FileNotFoundException {","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"taniatsq"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"taniatsq"},"content":"            System.out.println(\"All tasks:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"taniatsq"},"content":"            s.getFileContent();","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"taniatsq"},"content":"            System.out.println();","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"taniatsq"},"content":"            System.out.println(\"Current tasks: \");","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"taniatsq"},"content":"            for (int i \u003d 0; i \u003c tasklist.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"taniatsq"},"content":"                int j \u003d i + 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"taniatsq"},"content":"                System.out.println(\"    \" + j + \". \" + tasklist.get(i).getCat()","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"taniatsq"},"content":"                        + tasklist.get(i).marked() + \" \"","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"taniatsq"},"content":"                        + tasklist.get(i).getTask() + tasklist.get(i).getDetails());","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"taniatsq"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"taniatsq"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"taniatsq"},"content":"            System.out.println(\"file not found! try again xx\");","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"taniatsq"},"content":"     * Adds Todo task to tasklist.","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"taniatsq"},"content":"     * @param task Todo task to be added to tasklist.","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"taniatsq"},"content":"     * @throws StringIndexOutOfBoundsException When user does not specify task and leaves blank (e.g. todo).","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"taniatsq"},"content":"    public void addTask(Todo task) throws StringIndexOutOfBoundsException {","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"taniatsq"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"taniatsq"},"content":"            tasklist.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"taniatsq"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"taniatsq"},"content":"            System.out.println(task.add());","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"taniatsq"},"content":"            System.out.println(\"Now you have \" + tasklist.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"taniatsq"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"taniatsq"},"content":"            System.out.println(\"ENTER INSTRUCTION\");","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"taniatsq"},"content":"     * Adds Deadline task to tasklist.","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"taniatsq"},"content":"     * @param task Deadline task to be added to tasklist.","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"taniatsq"},"content":"     * @throws StringIndexOutOfBoundsException When user does not specify task and leaves blank (e.g. deadline).","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"taniatsq"},"content":"    public void addTask(Deadline task) throws StringIndexOutOfBoundsException {","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"taniatsq"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"taniatsq"},"content":"            tasklist.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"taniatsq"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"taniatsq"},"content":"            System.out.println(task.add());","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"taniatsq"},"content":"            System.out.println(\"Now you have \" + tasklist.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"taniatsq"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"taniatsq"},"content":"            System.out.println(\"ENTER INSTRUCTION\");","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"taniatsq"},"content":"     * Adds Event task to tasklist.","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"taniatsq"},"content":"     * @param task Event task to be added to tasklist.","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"taniatsq"},"content":"     * @throws StringIndexOutOfBoundsException When user does not specify task and leaves blank (e.g. event).","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"taniatsq"},"content":"    public void addTask(Event task) throws StringIndexOutOfBoundsException {","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"taniatsq"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"taniatsq"},"content":"            tasklist.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"taniatsq"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"taniatsq"},"content":"            System.out.println(task.add());","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"taniatsq"},"content":"            System.out.println(\"Now you have \" + tasklist.size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"taniatsq"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"taniatsq"},"content":"            System.out.println(\"ENTER INSTRUCTION\");","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"taniatsq"},"content":"     * Marks task in tasklist as done.","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"taniatsq"},"content":"     * @param number Task number in current list to be marked.","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"taniatsq"},"content":"     * @throws IndexOutOfBoundsException When user inputs task number that does not exist in the list.","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"taniatsq"},"content":"    public void mark(int number) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"taniatsq"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"taniatsq"},"content":"            Task task \u003d tasklist.get(number);","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"taniatsq"},"content":"            task.setDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"taniatsq"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"taniatsq"},"content":"            System.out.println(task.mark(number));","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"taniatsq"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"taniatsq"},"content":"            System.out.println(\"No such task to mark.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"taniatsq"},"content":"     * Unmarks task in tasklist.","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"taniatsq"},"content":"     * @param number Task number in current list to be unmarked.","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"taniatsq"},"content":"     * @throws IndexOutOfBoundsException When user inputs task number that does not exist in the list.","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"taniatsq"},"content":"    public void unmark(int number) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"taniatsq"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"taniatsq"},"content":"            Task task \u003d tasklist.get(number);","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"taniatsq"},"content":"            task.setNotDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":139,"author":{"gitId":"taniatsq"},"content":"            System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"taniatsq"},"content":"            System.out.println(task.unmark(number));","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"taniatsq"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"taniatsq"},"content":"            System.out.println(\"No such task to unmark.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"taniatsq"},"content":"     * Deletes task in tasklist.","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"taniatsq"},"content":"     * @param number Task number in current list to be deleted.","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"taniatsq"},"content":"     * @throws IndexOutOfBoundsException When user inputs task number that does not exist in the list.","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"taniatsq"},"content":"    public void delete(int number) throws IndexOutOfBoundsException {","lastModifiedDate":"2024-02-01"},{"lineNumber":153,"author":{"gitId":"taniatsq"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"taniatsq"},"content":"            Task task \u003d tasklist.get(number);","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"taniatsq"},"content":"            tasklist.remove(number);","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"taniatsq"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"taniatsq"},"content":"            System.out.println(task.delete());","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"taniatsq"},"content":"            System.out.println(\"Now you have \" + tasklist.size() + \" tasks in the current list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":159,"author":{"gitId":"taniatsq"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":160,"author":{"gitId":"taniatsq"},"content":"            System.out.println(\"No such task to delete.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":161,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":162,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":163,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":164,"author":{"gitId":"taniatsq"},"content":"    public void find(String str) throws StringIndexOutOfBoundsException {","lastModifiedDate":"2024-02-01"},{"lineNumber":165,"author":{"gitId":"taniatsq"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":166,"author":{"gitId":"taniatsq"},"content":"            int j \u003d 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":167,"author":{"gitId":"taniatsq"},"content":"            for (int i \u003d 0; i \u003c tasklist.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":168,"author":{"gitId":"taniatsq"},"content":"                if (tasklist.get(i).isFound(str)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":169,"author":{"gitId":"taniatsq"},"content":"                    if (j \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":170,"author":{"gitId":"taniatsq"},"content":"                        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":171,"author":{"gitId":"taniatsq"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":172,"author":{"gitId":"taniatsq"},"content":"                    System.out.println(\"    \" + j + \". \" + tasklist.get(i).getCat()","lastModifiedDate":"2024-01-31"},{"lineNumber":173,"author":{"gitId":"taniatsq"},"content":"                                        + tasklist.get(i).marked() + \" \"","lastModifiedDate":"2024-01-31"},{"lineNumber":174,"author":{"gitId":"taniatsq"},"content":"                                        + tasklist.get(i).getTask()","lastModifiedDate":"2024-01-31"},{"lineNumber":175,"author":{"gitId":"taniatsq"},"content":"                                        + tasklist.get(i).getDetails());","lastModifiedDate":"2024-01-31"},{"lineNumber":176,"author":{"gitId":"taniatsq"},"content":"                    j++;","lastModifiedDate":"2024-01-31"},{"lineNumber":177,"author":{"gitId":"taniatsq"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":178,"author":{"gitId":"taniatsq"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":179,"author":{"gitId":"taniatsq"},"content":"            if (j \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":180,"author":{"gitId":"taniatsq"},"content":"                System.out.println(\"No matching tasks!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":181,"author":{"gitId":"taniatsq"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":182,"author":{"gitId":"taniatsq"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":183,"author":{"gitId":"taniatsq"},"content":"            System.out.println(\"ENTER INSTRUCTION\");","lastModifiedDate":"2024-01-31"},{"lineNumber":184,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":185,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":186,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":187,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"taniatsq":187}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":" * Represents the User Interaction that deals with interactions with the user.","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":" * Contains Scanner user to read user input, Task task to create new Tasks","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":" * with user\u0027s String input, and TaskList tasklist to pass to Parser.","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"public class Ui {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"    private Scanner user;","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"    private Task task;","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"    private TaskList tasklist;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"    public Ui(Scanner user, TaskList tasklist) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"        this.user \u003d user;","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"        this.tasklist \u003d tasklist;","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"    * Returns welcome message at the start of the program.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"    *","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"    * @return Welcome message.","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"    */","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"    public String showWelcome() {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"        return \"Hi babyyy! It\u0027s your EUEU!! \\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"                + \"What are you doing today??\";","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"     * Returns exit message at the end of the program.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"     * @return Exit message.","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"    public String exit() {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"taniatsq"},"content":"        return \"byeee love uu ttyl ok!\";","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"taniatsq"},"content":"     * Reads command of user\u0027s next line and passes String command to Parser.","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"taniatsq"},"content":"     * @throws FileNotFoundException When File f does not exist.","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"taniatsq"},"content":"    public void readCommand() throws FileNotFoundException {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"taniatsq"},"content":"        Parser parse \u003d new Parser(tasklist);","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"taniatsq"},"content":"        Task task \u003d new Task(user.nextLine());","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"taniatsq"},"content":"        while (!task.getTask().equals(\"bye\")) {","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"taniatsq"},"content":"            parse.parsing(task.getTask());","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"taniatsq"},"content":"            task \u003d new Task(user.nextLine());","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"taniatsq"},"content":"//            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"taniatsq"},"content":"//                task \u003d new Task(user.nextLine());","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"taniatsq"},"content":"//            } catch (NoSuchElementException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"taniatsq"},"content":"//                System.out.println(\"Say something I\u0027m giving up on you \");","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"taniatsq"},"content":"//            }","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"taniatsq":66}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"import java.io.File;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":" * Represents a Deadline task that inherits from Task","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"    private String deadline;","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"    public Deadline(String deadline, String task) {","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"        super(task);","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"     * Returns the deadline specified by user.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"     * @return Deadline of Deadline task.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"     * @throws DateTimeParseException When user does not specify date of deadline in \"MMM d yyyy\" format.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"    public String getDeadline() throws DateTimeParseException {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"            LocalDate ddl \u003d LocalDate.parse(deadline);","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"            return \"(by: \" + ddl.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"            return \"(by: \" + deadline + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"     * Returns the String that specifies the Deadline task","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"     * @return Deadline category.","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"taniatsq"},"content":"    public String isDeadline() {","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"taniatsq"},"content":"        return \"[D]\";","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"taniatsq"},"content":"     * Overrides Task.add() to specify the Deadline task to be added.","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"taniatsq"},"content":"     * @return String representation of Deadline task to be added.","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"taniatsq"},"content":"    public String add() {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"taniatsq"},"content":"            return \"    \" + this.isDeadline() + this.marked() + \" \"","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"taniatsq"},"content":"                    + this.getTask()","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"taniatsq"},"content":"                    + this.getDeadline();","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"taniatsq"},"content":"     * Overrides Task.writeToFile() to specify the Deadline task to be added to the File.","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"taniatsq"},"content":"     * @param filePath Filepath to the file to be written to.","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"taniatsq"},"content":"     * @throws IOException When file does not exist.","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"taniatsq"},"content":"    public void writeToFile(File filePath) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"taniatsq"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"taniatsq"},"content":"            FileWriter fw \u003d new FileWriter(filePath.getPath(), true);","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"taniatsq"},"content":"            fw.write(this.isDeadline() + this.marked() + \" \"","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"taniatsq"},"content":"                    + this.getTask() + this.getDeadline() + \"\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"taniatsq"},"content":"            fw.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"taniatsq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"taniatsq"},"content":"            System.out.println(\"file not found! try again xx\");","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"taniatsq":77}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"import java.io.File;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":" * Represents an Event task that inherits from Task","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"    private String start;","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"    private String end;","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"    public Event(String start, String end, String task) {","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"        super(task);","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"     * Returns the String that specifies the Event task","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"     * @return Event category.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"    public String isEvent() {","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"        return \"[E]\";","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"     * Returns the time of the Event task specified by user.","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"     * @return Time/Date Event task is happening.","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"     * @throws DateTimeParseException When user does not specify date of event in \"MMM d yyyy\" format.","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"    public String getEvent() throws DateTimeParseException {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"         try {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"             LocalDate startDate \u003d LocalDate.parse(start);","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"             LocalDate endDate \u003d LocalDate.parse(end);","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"             return (\"from: \" + startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"taniatsq"},"content":"                        + \" to: \" + endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"taniatsq"},"content":"                        + \")\");","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"taniatsq"},"content":"         } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"taniatsq"},"content":"            return \"(from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"taniatsq"},"content":"     * Overrides Task.add() to specify the Event task to be added.","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"taniatsq"},"content":"     * @return String representation of Event task to be added.","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"taniatsq"},"content":"    public String add() {","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"taniatsq"},"content":"            return \"    \" + this.isEvent() + this.marked() + \" \"","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"taniatsq"},"content":"                    + this.getTask() + this.getEvent();","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"taniatsq"},"content":"     * Overrides Task.writeToFile() to specify the Event task to be added to the File.","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"taniatsq"},"content":"     * @param filePath Filepath to the file to be written to.","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"taniatsq"},"content":"     * @throws IOException When file does not exist.","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"taniatsq"},"content":"    public void writeToFile(File filePath) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"taniatsq"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"taniatsq"},"content":"            FileWriter fw \u003d new FileWriter(filePath.getPath(), true);","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"taniatsq"},"content":"            fw.write (this.isEvent() + this.marked() + \" \"","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"taniatsq"},"content":"                    + this.getTask() + this.getEvent() + \"\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"taniatsq"},"content":"            fw.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"taniatsq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"taniatsq"},"content":"            System.out.println(\"file not found! try again xx\");","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"taniatsq":78}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import java.io.File;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":" * Represents the Task specified by users.","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"    private String task;","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"    public Task(String task) {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"     * Marks current task as done by changing the status of isDone to true.","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"    public void setDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"     * Marks the task number as done and returns String representation of this command.","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"     * @param number Task number to be marked as done.","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"     * @return String representation of marking task as done.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"    public String mark(int number) {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"        return \"    \" + this.getCat() + this.marked() + \" \"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"                + this.getTask();","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"     * Returns String representation of the status of current task.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"     * @return String representation this task.","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"    public String delete() {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"        return \"     \" + this.getCat() + this.marked() + \" \"","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"taniatsq"},"content":"                + this.getTask();","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"taniatsq"},"content":"     * Unmarks current task by changing the status of isDone to false.","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"taniatsq"},"content":"    public void setNotDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"taniatsq"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"taniatsq"},"content":"     * Unmarks the task number and returns String representation of this command.","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"taniatsq"},"content":"     * @param number Task number to be unmarked.","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"taniatsq"},"content":"     * @return String representation of unmarking task.","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"taniatsq"},"content":"    public String unmark(int number) {","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"taniatsq"},"content":"        return \"    \" + this.getCat() + marked() + \" \"","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"taniatsq"},"content":"                        + this.getTask();","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"taniatsq"},"content":"     * Checks if current task has been marked.","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"taniatsq"},"content":"     * @return String representation of task marked or unmarked.","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"taniatsq"},"content":"    public String marked() {","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"taniatsq"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"taniatsq"},"content":"            return \"[X]\";","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"taniatsq"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"taniatsq"},"content":"            return \"[ ]\";","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"taniatsq"},"content":"     * Getter that returns the description of current task.","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"taniatsq"},"content":"     * @return String representation of task description.","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"taniatsq"},"content":"    public String getTask() {","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"taniatsq"},"content":"        return task;","lastModifiedDate":"2024-01-24"},{"lineNumber":84,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":85,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":86,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"taniatsq"},"content":"     * Finds current category of task.","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"taniatsq"},"content":"     * @return String representation of current task category.","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"taniatsq"},"content":"        public String getCat() {","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"taniatsq"},"content":"            if (this instanceof Todo) {","lastModifiedDate":"2024-01-24"},{"lineNumber":93,"author":{"gitId":"taniatsq"},"content":"                return \"[T]\";","lastModifiedDate":"2024-01-24"},{"lineNumber":94,"author":{"gitId":"taniatsq"},"content":"            } else if (this instanceof Deadline) {","lastModifiedDate":"2024-01-24"},{"lineNumber":95,"author":{"gitId":"taniatsq"},"content":"                return \"[D]\";","lastModifiedDate":"2024-01-24"},{"lineNumber":96,"author":{"gitId":"taniatsq"},"content":"            } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":97,"author":{"gitId":"taniatsq"},"content":"                return \"[E]\";","lastModifiedDate":"2024-01-24"},{"lineNumber":98,"author":{"gitId":"taniatsq"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":99,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":100,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":101,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"taniatsq"},"content":"     * Returns deadlines/timing of Deadlines and Events.","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"taniatsq"},"content":"     * Returns nothing if task is Todo.","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"taniatsq"},"content":"     * @return Deadlines/timings of Deadline and Event tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"taniatsq"},"content":"    public String getDetails() {","lastModifiedDate":"2024-01-24"},{"lineNumber":108,"author":{"gitId":"taniatsq"},"content":"        if (this instanceof Deadline) {","lastModifiedDate":"2024-01-24"},{"lineNumber":109,"author":{"gitId":"taniatsq"},"content":"            return ((Deadline) this).getDeadline();","lastModifiedDate":"2024-01-24"},{"lineNumber":110,"author":{"gitId":"taniatsq"},"content":"        } else if (this instanceof Event) {","lastModifiedDate":"2024-01-24"},{"lineNumber":111,"author":{"gitId":"taniatsq"},"content":"            return ((Event) this).getEvent();","lastModifiedDate":"2024-01-24"},{"lineNumber":112,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":113,"author":{"gitId":"taniatsq"},"content":"        return \"\";","lastModifiedDate":"2024-01-24"},{"lineNumber":114,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":115,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":116,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"taniatsq"},"content":"     * Writes added tasks to File.","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"taniatsq"},"content":"     * @param filePath Filepath to File to be written to.","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"taniatsq"},"content":"    public void writeToFile(File filePath) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"taniatsq"},"content":"        if (this instanceof Todo) {","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"taniatsq"},"content":"            ((Todo) this).writeToFile(filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"taniatsq"},"content":"        } else if (this instanceof Deadline) {","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"taniatsq"},"content":"            ((Deadline) this).writeToFile(filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"taniatsq"},"content":"        } else if (this instanceof Event) {","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"taniatsq"},"content":"            ((Event) this).writeToFile(filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":131,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"taniatsq"},"content":"     * Returns tasks to be added.","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"taniatsq"},"content":"     * @return String representation of added tasks.","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"taniatsq"},"content":"    public String add() {","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"taniatsq"},"content":"        if (this instanceof Todo) {","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"taniatsq"},"content":"            return ((Todo) this).add();","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"taniatsq"},"content":"        } else if (this instanceof Deadline) {","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"taniatsq"},"content":"            return ((Deadline) this).add();","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"taniatsq"},"content":"        } else if (this instanceof Event) {","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"taniatsq"},"content":"            return ((Event) this).add();","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"taniatsq"},"content":"        return \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"taniatsq"},"content":"        public boolean isFound(String str) {","lastModifiedDate":"2024-02-01"},{"lineNumber":148,"author":{"gitId":"taniatsq"},"content":"            return task.contains(str);","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":152,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"taniatsq":152}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"import java.io.File;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":" * Represents an Todo task that inherits from Task","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"    public Todo(String task) {","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"        super(task);","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"     * Returns the String that specifies the Todo task","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"     * @return Todo category.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"    public String isTodo() {","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"        return \"[T]\";","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"     * Overrides Task.add() to specify the Todo task to be added.","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"     * @return String representation of Todo task to be added.","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"    public String add() {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"        return \"    \" + this.isTodo() + this.marked() + \" \" + this.getTask();","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"     * Overrides Task.writeToFile() to specify the Todo task to be added to the File.","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"     * @param filePath Filepath to the file to be written to.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"     * @throws IOException When file does not exist.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"    public void writeToFile(File filePath) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"      try {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"taniatsq"},"content":"          FileWriter fw \u003d new FileWriter(filePath.getPath(), true);","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"taniatsq"},"content":"          fw.write(this.isTodo() + this.marked() + \" \" + this.getTask() + \"\\n\");","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"taniatsq"},"content":"          fw.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"taniatsq"},"content":"      } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"taniatsq"},"content":"          System.out.println(\"file not found! try again bb\");","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"taniatsq"},"content":"      }","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"taniatsq":51}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import duke.task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"public class TaskTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"    public void addTodo() {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"        Task task \u003d new Todo(\"taskName\");","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"        assertEquals(\"    [T][ ] taskName\",","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"                task.add());","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"    public void addDeadline() {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"        Task task \u003d new Deadline(\"sun\", \"taskname\");","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"        assertEquals(\"    [D][ ] taskname(by: sun)\",","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"                task.add());","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"    public void addEvent() {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"        Task task \u003d new Event(\"mon\", \"tues\", \"taskname\");","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"        assertEquals(\"    [E][ ] taskname(from: mon to: tues)\",","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"                task.add());","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"taniatsq":31}},{"path":"src/test/java/duke/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"public class UiTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"    public void welcomeMessage() {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"        File f \u003d new File(\"\");","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"        Storage s \u003d new Storage(f);","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"        TaskList tasklist \u003d new TaskList(s);","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"        assertEquals(\"Hi babyyy! It\u0027s your EUEU!! \\n\" + \"What are you doing today??\",","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"                new Ui(scanner, tasklist).showWelcome());","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"    public void exitMessage() {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"        File f \u003d new File(\"\");","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"        Storage s \u003d new Storage(f);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"        TaskList tasklist \u003d new TaskList(s);","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"        assertEquals(\"byeee love uu ttyl ok!\",","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"                new Ui(scanner, tasklist).exit());","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"taniatsq":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"taniatsq":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"diff -w ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"taniatsq":2,"-":37}}]
