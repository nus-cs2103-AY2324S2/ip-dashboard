[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"c-wenlong"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"c-wenlong"},"content":" * A class that encapsulates the Deadlines tasks, a type of Task.","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"c-wenlong"},"content":" * ","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"c-wenlong"},"content":" * @author: CHEN WENLONG","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"c-wenlong"},"content":" * @version: CS2103T AY23/24 Semester 2","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"c-wenlong"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"c-wenlong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"c-wenlong"},"content":"    /** A String value that represent the type of Task, D for Deadline. */","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"c-wenlong"},"content":"    private static final String TYPE \u003d \"D\";","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"c-wenlong"},"content":"    /** A String value that represents the time of deadline. */","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"c-wenlong"},"content":"    private String endTime;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"c-wenlong"},"content":"     * Constructor for the ToDo.","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"c-wenlong"},"content":"     * ","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"c-wenlong"},"content":"     * @param name A String value that states the name of the Task.","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"c-wenlong"},"content":"     * @param time A String to state the time of deadline.","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"c-wenlong"},"content":"    public Deadline(String name, String endTime) {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"c-wenlong"},"content":"        super(name, TYPE);","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"c-wenlong"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"c-wenlong"},"content":"     * Converts the data (Deadline) here into a format to be stored in the file.","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"c-wenlong"},"content":"     * ","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"c-wenlong"},"content":"     * @return String representation of the Deadline to be store in local disk.","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"c-wenlong"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"c-wenlong"},"content":"    public String convertToFormat() {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"c-wenlong"},"content":"        return super.convertToFormat() + \" | \" + this.endTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"c-wenlong"},"content":"     * String representation of a Deadline.","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"c-wenlong"},"content":"     * ","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"c-wenlong"},"content":"     * @return Returns the String representation of a Deadline.","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"c-wenlong"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"c-wenlong"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"c-wenlong"},"content":"        return super.toString() + \" (by: \" + this.endTime + \")\"; // [T][X] name (by: time)","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"c-wenlong"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"c-wenlong":44}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"c-wenlong"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"c-wenlong"},"content":" * A class that encapsulates the ToDo tasks, a type of Task.","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"c-wenlong"},"content":" * ","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"c-wenlong"},"content":" * @author: CHEN WENLONG","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"c-wenlong"},"content":" * @version: CS2103T AY23/24 Semester 2","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"c-wenlong"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"c-wenlong"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"c-wenlong"},"content":"    /** A String value that represent the type of Task, Efor Event. */","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"c-wenlong"},"content":"    private static final String TYPE \u003d \"E\";","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"c-wenlong"},"content":"    /** A String value that represents the time of the start of event. */","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"c-wenlong"},"content":"    private String startTime;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"c-wenlong"},"content":"    /** A String value that represents the time of the end of event. */","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"c-wenlong"},"content":"    private String endTime;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"c-wenlong"},"content":"     * Constructor for the ToDo.","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"c-wenlong"},"content":"     * ","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"c-wenlong"},"content":"     * @param name A String value that states the name of the Task.","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"c-wenlong"},"content":"     * @param startTime A String representation of the start of the event.","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"c-wenlong"},"content":"     * @param endTime A String representation of the end of the event.","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"c-wenlong"},"content":"    public Event(String name, String startTime, String endTime) {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"c-wenlong"},"content":"        super(name, TYPE);","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"c-wenlong"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"c-wenlong"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"c-wenlong"},"content":"     * Converts the data (Event) here into a format to be stored in the file.","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"c-wenlong"},"content":"     * ","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"c-wenlong"},"content":"     * @return String representation of the Event to be store in local disk.","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"c-wenlong"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"c-wenlong"},"content":"    public String convertToFormat() {","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"c-wenlong"},"content":"        return super.convertToFormat() + \" | \" + this.startTime + \" | \" + this.endTime;","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"c-wenlong"},"content":"     * String representation of an Event.","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"c-wenlong"},"content":"     * ","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"c-wenlong"},"content":"     * @return Returns the String representation of an Event.","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"c-wenlong"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"c-wenlong"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"c-wenlong"},"content":"        return super.toString() + \" (from: \" + this.startTime + \" to: \" + this.endTime + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"c-wenlong"},"content":"        // [T][X] name (from: startTime to: endTime)","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"c-wenlong"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"c-wenlong":50}},{"path":"src/main/java/KBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"c-wenlong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"c-wenlong"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"c-wenlong"},"content":" * Encapsulate a chatbot names kaipybara that takes in input from the user and","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"c-wenlong"},"content":" * perform tasks such as creating a todo list.","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"c-wenlong"},"content":" *","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"c-wenlong"},"content":" * @author: CHEN WENLONG","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"c-wenlong"},"content":" * @version: CS2103T AY23/24 Semester 2","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"c-wenlong"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"c-wenlong"},"content":"public class KBot {","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"c-wenlong"},"content":"    /** A TaskManager to manage interactions between user and Tasks database */","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"c-wenlong"},"content":"    private static TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"c-wenlong"},"content":"     * Stores the information in String into a Task and adds into the ArrayList","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"c-wenlong"},"content":"     * ","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"c-wenlong"},"content":"     * @param userInput The information about the Task to store.","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"c-wenlong"},"content":"     * @param ins       The type of Task that we want to store.","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"c-wenlong"},"content":"    private static void addTask(String userInput, String ins) {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"c-wenlong"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"c-wenlong"},"content":"            taskManager.addTask(userInput, ins);","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"c-wenlong"},"content":"        } catch (KException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"c-wenlong"},"content":"            System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"c-wenlong"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"c-wenlong"},"content":"     * Marks a Task as completed.","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"c-wenlong"},"content":"     * ","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"c-wenlong"},"content":"     * @param index Index of Task to be marked in the TASKS ArrayList.","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"c-wenlong"},"content":"    private static void mark(int index) {","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"c-wenlong"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"c-wenlong"},"content":"            taskManager.markTask(index);","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"c-wenlong"},"content":"        } catch (KException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"c-wenlong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"c-wenlong"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"c-wenlong"},"content":"     * Marks Task as not completed.","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"c-wenlong"},"content":"     * ","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"c-wenlong"},"content":"     * @param index Index of Task to be marked in the TASKS ArrayList.","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"c-wenlong"},"content":"    private static void unmark(int index) {","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"c-wenlong"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"c-wenlong"},"content":"            taskManager.unmarkTask(index);","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"c-wenlong"},"content":"        } catch (KException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"c-wenlong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"c-wenlong"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"c-wenlong"},"content":"     * Deletes an entry at index given.","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"c-wenlong"},"content":"     * ","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"c-wenlong"},"content":"     * @param index Index at which the Task will be removed from the List.","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"c-wenlong"},"content":"    private static void delete(int index) {","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"c-wenlong"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"c-wenlong"},"content":"            taskManager.delete(index);","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"c-wenlong"},"content":"        } catch (KException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"c-wenlong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"c-wenlong"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"c-wenlong"},"content":"     * Execute whatever command thrown at the bot by the user","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"c-wenlong"},"content":"     * ","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"c-wenlong"},"content":"     * @param userInput String representing command to the bot.","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"c-wenlong"},"content":"     * @throws KException Exceptions thrown when the command is not valid.","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"c-wenlong"},"content":"    private static void executeCommand(String userInput) throws KException {","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"c-wenlong"},"content":"        String[] input \u003d userInput.trim().split(\" \", 2);","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"c-wenlong"},"content":"        String ins \u003d input[0];","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"c-wenlong"},"content":"        if (input.length \u003e 1) { // for ins with parameter","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"c-wenlong"},"content":"            switch (ins) { // correct ins but wrong params handled by each method call","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"c-wenlong"},"content":"                case \"mark\":","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"c-wenlong"},"content":"                    int indexToMark \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"c-wenlong"},"content":"                    mark(indexToMark - 1);","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"c-wenlong"},"content":"                    break;","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"c-wenlong"},"content":"                case \"unmark\":","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"c-wenlong"},"content":"                    int indexToUnmark \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"c-wenlong"},"content":"                    unmark(indexToUnmark - 1);","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"c-wenlong"},"content":"                    break;","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"c-wenlong"},"content":"                case \"delete\":","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"c-wenlong"},"content":"                    int indexToDelete \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"c-wenlong"},"content":"                    delete(indexToDelete - 1);","lastModifiedDate":"2024-01-25"},{"lineNumber":89,"author":{"gitId":"c-wenlong"},"content":"                    break;","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"c-wenlong"},"content":"                case \"todo\":","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"c-wenlong"},"content":"                case \"deadline\":","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"c-wenlong"},"content":"                case \"event\":","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"c-wenlong"},"content":"                    String info \u003d input[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"c-wenlong"},"content":"                    addTask(info, ins);","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"c-wenlong"},"content":"                    break;","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"c-wenlong"},"content":"                default: // incorrect ins with incorrect params handled here","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"c-wenlong"},"content":"                    throw new KException(\"Invalid command: \" + ins","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"c-wenlong"},"content":"                            + \"\\nPlease input the correct commands. Input help to see list of commands.\");","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"c-wenlong"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"c-wenlong"},"content":"        } else { // for ins with no parameter","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"c-wenlong"},"content":"            switch (ins) {","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"c-wenlong"},"content":"                case \"list\":","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"c-wenlong"},"content":"                    taskManager.listTasks();","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"c-wenlong"},"content":"                    break;","lastModifiedDate":"2024-01-25"},{"lineNumber":105,"author":{"gitId":"c-wenlong"},"content":"                case \"help\":","lastModifiedDate":"2024-01-25"},{"lineNumber":106,"author":{"gitId":"c-wenlong"},"content":"                    System.out.println(","lastModifiedDate":"2024-01-28"},{"lineNumber":107,"author":{"gitId":"c-wenlong"},"content":"                            \"list\\n\" + \"mark\\n\" + \"unmark\\n\" + \"delete\\n\" + \"todo\\n\" + \"deadline\\n\" + \"event\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":108,"author":{"gitId":"c-wenlong"},"content":"                    break;","lastModifiedDate":"2024-01-28"},{"lineNumber":109,"author":{"gitId":"c-wenlong"},"content":"                case \"mark\":","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"c-wenlong"},"content":"                case \"unmark\":","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"c-wenlong"},"content":"                case \"delete\":","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"c-wenlong"},"content":"                case \"todo\":","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"c-wenlong"},"content":"                case \"deadline\":","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"c-wenlong"},"content":"                case \"event\": // correct ins but no param handled","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"c-wenlong"},"content":"                    throw new KException(\"Error: \" + \"Invalid parameters for \" + ins);","lastModifiedDate":"2024-01-28"},{"lineNumber":116,"author":{"gitId":"c-wenlong"},"content":"                default: // incorrect ins and no param handled here","lastModifiedDate":"2024-01-28"},{"lineNumber":117,"author":{"gitId":"c-wenlong"},"content":"                    throw new KException(\"Invalid command: \" + ins","lastModifiedDate":"2024-01-25"},{"lineNumber":118,"author":{"gitId":"c-wenlong"},"content":"                            + \"\\nPlease input the correct commands. Input help to see list of commands.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":119,"author":{"gitId":"c-wenlong"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":120,"author":{"gitId":"c-wenlong"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":121,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":123,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":124,"author":{"gitId":"c-wenlong"},"content":"     * Simulate what goes on in the chatbot.","lastModifiedDate":"2024-01-25"},{"lineNumber":125,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":126,"author":{"gitId":"c-wenlong"},"content":"    private static void simulate() {","lastModifiedDate":"2024-01-25"},{"lineNumber":127,"author":{"gitId":"c-wenlong"},"content":"        Scanner sc \u003d new Scanner(System.in); // read inputs from user","lastModifiedDate":"2024-01-25"},{"lineNumber":128,"author":{"gitId":"c-wenlong"},"content":"        while (true) {","lastModifiedDate":"2024-01-25"},{"lineNumber":129,"author":{"gitId":"c-wenlong"},"content":"            String userInput \u003d sc.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":130,"author":{"gitId":"c-wenlong"},"content":"            System.out.println(Messages.getLine());","lastModifiedDate":"2024-01-25"},{"lineNumber":131,"author":{"gitId":"c-wenlong"},"content":"            if (userInput.equals(\"bye\")) { // stops the program","lastModifiedDate":"2024-01-28"},{"lineNumber":132,"author":{"gitId":"c-wenlong"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":133,"author":{"gitId":"c-wenlong"},"content":"            } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":134,"author":{"gitId":"c-wenlong"},"content":"                try {","lastModifiedDate":"2024-01-25"},{"lineNumber":135,"author":{"gitId":"c-wenlong"},"content":"                    executeCommand(userInput);","lastModifiedDate":"2024-01-25"},{"lineNumber":136,"author":{"gitId":"c-wenlong"},"content":"                } catch (KException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":137,"author":{"gitId":"c-wenlong"},"content":"                    System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":138,"author":{"gitId":"c-wenlong"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":139,"author":{"gitId":"c-wenlong"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":140,"author":{"gitId":"c-wenlong"},"content":"            System.out.print(Messages.getLine());","lastModifiedDate":"2024-01-25"},{"lineNumber":141,"author":{"gitId":"c-wenlong"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":142,"author":{"gitId":"c-wenlong"},"content":"        sc.close();","lastModifiedDate":"2024-01-25"},{"lineNumber":143,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":144,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":145,"author":{"gitId":"c-wenlong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-25"},{"lineNumber":146,"author":{"gitId":"c-wenlong"},"content":"        System.out.println(Messages.getStartMessage()); // opening statement","lastModifiedDate":"2024-01-25"},{"lineNumber":147,"author":{"gitId":"c-wenlong"},"content":"        taskManager.loadLocal(); // checking if there are local files to load","lastModifiedDate":"2024-01-28"},{"lineNumber":148,"author":{"gitId":"c-wenlong"},"content":"        simulate(); // simulate kaipybara chatbot","lastModifiedDate":"2024-01-25"},{"lineNumber":149,"author":{"gitId":"c-wenlong"},"content":"        System.out.println(Messages.getEndMessage() + Messages.getLine()); // closing statement","lastModifiedDate":"2024-01-25"},{"lineNumber":150,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":151,"author":{"gitId":"c-wenlong"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"c-wenlong":151}},{"path":"src/main/java/KException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"c-wenlong"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"c-wenlong"},"content":" * Exception class for all errors or warning generated within the KBot program.","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"c-wenlong"},"content":" *","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"c-wenlong"},"content":" * @author: CHEN WENLONG","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"c-wenlong"},"content":" * @version: CS2103T AY23/24 Semester 2","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"c-wenlong"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"c-wenlong"},"content":"public class KException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"c-wenlong"},"content":"     * Constructor for KException.","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"c-wenlong"},"content":"     * @param message The String message to be printed when an error is thrown.","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"c-wenlong"},"content":"    public KException(String message){","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"c-wenlong"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"c-wenlong"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"c-wenlong"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"c-wenlong"},"content":" * Exceptions to handle","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"c-wenlong"},"content":" * 1. Invalid parameters for todo, deadline, event.","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"c-wenlong"},"content":" * 2. Invalid command","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"c-wenlong"},"content":" * 3. mark/unmark index out of range","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"c-wenlong"},"content":" */","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"c-wenlong":23}},{"path":"src/main/java/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"c-wenlong"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"c-wenlong"},"content":" * Manages all messages that should be printed as the UI component.","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"c-wenlong"},"content":" * ","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"c-wenlong"},"content":" * @author: CHEN WENLONG","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"c-wenlong"},"content":" * @version: CS2103T AY23/24 Semester 2","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"c-wenlong"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"c-wenlong"},"content":"public class Messages {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"c-wenlong"},"content":"    /** A String to separate user input and system output. */","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"c-wenlong"},"content":"    private static final String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"c-wenlong"},"content":"    /** A String to print when program starts running. */","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"c-wenlong"},"content":"    private static final String START \u003d \"Hey, nice to meet you! I am your personal chatbot:\\n\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"c-wenlong"},"content":"            + \"          /\u0027  _/                                /\u0027                           \\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"c-wenlong"},"content":"            + \"        /\u0027 _/~                                /\u0027                             \\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"c-wenlong"},"content":"            + \"     ,/\u0027_/~  ____     O   ____              /\u0027__     ____      ____     ____ \\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"c-wenlong"},"content":"            + \"    /\\\\/~   /\u0027    )  /\u0027  /\u0027    )--/\u0027    /  /\u0027    )  /\u0027    )   )\u0027    )--/\u0027    )\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"c-wenlong"},"content":"            + \"  /\u0027  \\\\  /\u0027    /\u0027 /\u0027  /\u0027    /\u0027 /\u0027    /\u0027 /\u0027    /\u0027 /\u0027    /\u0027  /\u0027       /\u0027    /\u0027 \\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"c-wenlong"},"content":"            + \"/\u0027     \\\\(___,/(__(__/(___,/\u0027  (___,/(__(___,/(__(___,/(__/\u0027        (___,/(__ \\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"c-wenlong"},"content":"            + \"                  /\u0027             /\u0027                                          \\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"c-wenlong"},"content":"            + \"                /\u0027       /     /\u0027                                            \\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"c-wenlong"},"content":"            + \"              /\u0027        (___,/\u0027                                              \\n\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"c-wenlong"},"content":"            + \"What can I do for you today? :)\\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"c-wenlong"},"content":"    /** A String to print when program stops running. */","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"c-wenlong"},"content":"    private static final String END \u003d \"See you later alligator!\\n\";","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"c-wenlong"},"content":"     * Constructor for messages","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"c-wenlong"},"content":"    private Messages(){}","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"c-wenlong"},"content":"    ","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"c-wenlong"},"content":"     * Get welcome message.","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"c-wenlong"},"content":"     * @return Welcome message.","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"c-wenlong"},"content":"    public static String getStartMessage() {","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"c-wenlong"},"content":"        return START;","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"c-wenlong"},"content":"     * Get end of program message.","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"c-wenlong"},"content":"     * @return End of program message.","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"c-wenlong"},"content":"    public static String getEndMessage() {","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"c-wenlong"},"content":"        return END;","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"c-wenlong"},"content":"     * A line to separate user inputs and system outputs.","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"c-wenlong"},"content":"     * @return A line.","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"c-wenlong"},"content":"    public static String getLine() {","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"c-wenlong"},"content":"        return LINE;","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"c-wenlong"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"c-wenlong":56}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"c-wenlong"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"c-wenlong"},"content":" * Encapsulate a Task with a name and status of boolean to represent whether it","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"c-wenlong"},"content":" * has been completed.","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"c-wenlong"},"content":" *","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"c-wenlong"},"content":" * @author: CHEN WENLONG","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"c-wenlong"},"content":" * @version: CS2103T AY23/24 Semester 2","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"c-wenlong"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"c-wenlong"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"c-wenlong"},"content":"    /** A String value that states the name of the Task. */","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"c-wenlong"},"content":"    private String name;","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"c-wenlong"},"content":"    /** A String value that represent the type of Task. */","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"c-wenlong"},"content":"    private String type;","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"c-wenlong"},"content":"    /** A boolean value that states whether the Task has been completed or not. */","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"c-wenlong"},"content":"    private boolean completed \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"c-wenlong"},"content":"     * Constructor for the Task.","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"c-wenlong"},"content":"     * ","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"c-wenlong"},"content":"     * @param name A String value that states the name of the Task.","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"c-wenlong"},"content":"    public Task(String name, String type) {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"c-wenlong"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"c-wenlong"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"c-wenlong"},"content":"     * Sets the status of completed to true.","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"c-wenlong"},"content":"    public void setCompleted() {","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"c-wenlong"},"content":"        this.completed \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"c-wenlong"},"content":"     * Sets the status of completed to false.","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"c-wenlong"},"content":"    public void setNotCompleted() {","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"c-wenlong"},"content":"        this.completed \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"c-wenlong"},"content":"     * Converts the data here into a format to be stored in the file.","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"c-wenlong"},"content":"     * ","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"c-wenlong"},"content":"     * @return String representation of the Task to be store in local disk.","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"c-wenlong"},"content":"    public String convertToFormat() {","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"c-wenlong"},"content":"        String mark \u003d completed ? \"X\" : \" \";","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"c-wenlong"},"content":"        return this.type + \" | \" + mark + \" | \" + this.name;","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"c-wenlong"},"content":"     * String representation of a Task.","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"c-wenlong"},"content":"     * ","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"c-wenlong"},"content":"     * @return Returns the String representation of a Task.","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"c-wenlong"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"c-wenlong"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"c-wenlong"},"content":"        String mark \u003d completed ? \"X\" : \" \";","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"c-wenlong"},"content":"        return \"[\" + this.type + \"]\" + \"[\" + mark + \"]\" + \" \" + this.name;","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"c-wenlong"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"c-wenlong":63}},{"path":"src/main/java/TaskFileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"c-wenlong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"c-wenlong"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"c-wenlong"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"c-wenlong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"c-wenlong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"c-wenlong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"c-wenlong"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"c-wenlong"},"content":" * TaskFileManager class that encapsulates the saving of data onto the local","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"c-wenlong"},"content":" * hard drive.","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"c-wenlong"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"c-wenlong"},"content":"public class TaskFileManager {","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"c-wenlong"},"content":"    /** Filepath of where to save to local disk for TASKS */","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"c-wenlong"},"content":"    private static final String FILEPATH \u003d \"src/main/java/temp/output.txt\";","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"c-wenlong"},"content":"     * Constructor for TaskFileManager.","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"c-wenlong"},"content":"    public TaskFileManager() {","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"c-wenlong"},"content":"     * Implementation to save tasks to file","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"c-wenlong"},"content":"     * ","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"c-wenlong"},"content":"     * @param tasks Tasks to be saved to the local drive.","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"c-wenlong"},"content":"    public static void saveTasksToFile(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"c-wenlong"},"content":"        FileWriter fw \u003d new FileWriter(FILEPATH);","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"c-wenlong"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"c-wenlong"},"content":"            String taskToStore \u003d t.convertToFormat();","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"c-wenlong"},"content":"            fw.write(taskToStore + \"\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"c-wenlong"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"c-wenlong"},"content":"        fw.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"c-wenlong"},"content":"     * Implementation to load tasks from local drive.","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"c-wenlong"},"content":"     * ","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"c-wenlong"},"content":"     * @return Tasks which are saved in the local drive as an ArrayList\u003cTask\u003e.","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"c-wenlong"},"content":"    public static ArrayList\u003cTask\u003e loadTasksFromFile() throws FileNotFoundException, IOException {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"c-wenlong"},"content":"        File f \u003d new File(FILEPATH); // create a File for the given file path","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"c-wenlong"},"content":"        if (!f.exists()) { // Check if the file exists. If not, create a new file.","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"c-wenlong"},"content":"            f.createNewFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"c-wenlong"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"c-wenlong"},"content":"        Scanner sc \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"c-wenlong"},"content":"        ArrayList\u003cTask\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"c-wenlong"},"content":"        while (sc.hasNext()) { // TYPE | MARK | NAME \\ BY \\ FROM | TO","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"c-wenlong"},"content":"            String[] taskSegments \u003d sc.nextLine().split(\" | \", 2);","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"c-wenlong"},"content":"            String ins \u003d taskSegments[0];","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"c-wenlong"},"content":"            String info \u003d taskSegments[1];","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"c-wenlong"},"content":"            data.add(loadIns(ins, info));","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"c-wenlong"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"c-wenlong"},"content":"        sc.close();","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"c-wenlong"},"content":"        return data;","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"c-wenlong"},"content":"     * Load the individual Task in the correct format using the instruction String","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"c-wenlong"},"content":"     * and the information stored in the instruction. Helper function for","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"c-wenlong"},"content":"     * loadTasksFromFile().","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"c-wenlong"},"content":"     * ","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"c-wenlong"},"content":"     * @param ins  String representing the different instructions.","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"c-wenlong"},"content":"     * @param info String representing the information stored in the Task.","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"c-wenlong"},"content":"     * @return Returns the Task that is loaded from the given instruction and info.","lastModifiedDate":"2024-01-28"},{"lineNumber":67,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"c-wenlong"},"content":"    public static Task loadIns(String ins, String info) {","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"c-wenlong"},"content":"        Task t \u003d null;","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"c-wenlong"},"content":"        switch (ins) {","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"c-wenlong"},"content":"            case \"T\":","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"c-wenlong"},"content":"                t \u003d new ToDo(info);","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"c-wenlong"},"content":"                break;","lastModifiedDate":"2024-01-28"},{"lineNumber":74,"author":{"gitId":"c-wenlong"},"content":"            case \"D\":","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"c-wenlong"},"content":"                String[] d \u003d info.split(\" | \", 2);","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"c-wenlong"},"content":"                String dName \u003d d[0];","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"c-wenlong"},"content":"                String dDate \u003d d[1];","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"c-wenlong"},"content":"                t \u003d new Deadline(dName, dDate);","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"c-wenlong"},"content":"            case \"E\":","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"c-wenlong"},"content":"                String[] e \u003d info.split(\" | \", 3);","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"c-wenlong"},"content":"                String eName \u003d e[0];","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"c-wenlong"},"content":"                String eFrom \u003d e[1];","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"c-wenlong"},"content":"                String eTo \u003d e[2];","lastModifiedDate":"2024-01-28"},{"lineNumber":84,"author":{"gitId":"c-wenlong"},"content":"                t \u003d new Event(eName, eFrom, eTo);","lastModifiedDate":"2024-01-28"},{"lineNumber":85,"author":{"gitId":"c-wenlong"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"c-wenlong"},"content":"        return t;","lastModifiedDate":"2024-01-28"},{"lineNumber":87,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"c-wenlong"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"c-wenlong":88}},{"path":"src/main/java/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"c-wenlong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"c-wenlong"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"c-wenlong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"c-wenlong"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"c-wenlong"},"content":" * Manages all communications between the bot simulation and the database of","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"c-wenlong"},"content":" * Tasks. Inspired by ChatGPT, but I simply just created this class and","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"c-wenlong"},"content":" * transferred all my original code over from KBot.java","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"c-wenlong"},"content":" * ","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"c-wenlong"},"content":" * @author: CHEN WENLONG","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"c-wenlong"},"content":" * @version: CS2103T AY23/24 Semester 2","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"c-wenlong"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"c-wenlong"},"content":"public class TaskManager {","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"c-wenlong"},"content":"    /** ArrayList\u003cTask\u003e to store all the Tasks the user has created. */","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"c-wenlong"},"content":"    private ArrayList\u003cTask\u003e Tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"c-wenlong"},"content":"     * Constructor for TaskManager","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"c-wenlong"},"content":"    public TaskManager() {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"c-wenlong"},"content":"     * Checks if there is local save and load it into system if there exist.","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"c-wenlong"},"content":"    public void loadLocal() {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"c-wenlong"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"c-wenlong"},"content":"            this.Tasks \u003d TaskFileManager.loadTasksFromFile();","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"c-wenlong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"c-wenlong"},"content":"            System.err.println(\"File not found: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"c-wenlong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"c-wenlong"},"content":"            System.out.println(\"Error while accessing the file: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"c-wenlong"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"c-wenlong"},"content":"     * Saves the data in the Tasks ArrayList onto a local file.","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"c-wenlong"},"content":"    public void saveLocal() {","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"c-wenlong"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"c-wenlong"},"content":"            TaskFileManager.saveTasksToFile(this.Tasks);","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"c-wenlong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"c-wenlong"},"content":"            System.out.println(\"Error while accessing the file: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"c-wenlong"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"c-wenlong"},"content":"     * Stores the information in String into a Task and adds into the ArrayList","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"c-wenlong"},"content":"     * ","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"c-wenlong"},"content":"     * @param info The information from userInput","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"c-wenlong"},"content":"     * @param ins  The type of Task","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"c-wenlong"},"content":"    public void addTask(String info, String ins) throws KException {","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"c-wenlong"},"content":"        Task t \u003d null;","lastModifiedDate":"2024-01-25"},{"lineNumber":55,"author":{"gitId":"c-wenlong"},"content":"        switch (ins) {","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"c-wenlong"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"c-wenlong"},"content":"                t \u003d new ToDo(info);","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"c-wenlong"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"c-wenlong"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"c-wenlong"},"content":"                String[] deadlineParts \u003d info.split(\" /by \", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"c-wenlong"},"content":"                if (deadlineParts.length \u003d\u003d 1) { // if there is command but no input","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"c-wenlong"},"content":"                    throw new KException(\"Invalid parameters for \" + ins);","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"c-wenlong"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"c-wenlong"},"content":"                String dName \u003d deadlineParts[0];","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"c-wenlong"},"content":"                String dEndTime \u003d deadlineParts[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"c-wenlong"},"content":"                t \u003d new Deadline(dName, dEndTime);","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"c-wenlong"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"c-wenlong"},"content":"            case \"event\":","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"c-wenlong"},"content":"                String[] eventParts \u003d info.split(\" /from \", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"c-wenlong"},"content":"                if (eventParts.length \u003d\u003d 1) { // if there is command but no input","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"c-wenlong"},"content":"                    throw new KException(\"Invalid parameters for \" + ins);","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"c-wenlong"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"c-wenlong"},"content":"                String eName \u003d eventParts[0];","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"c-wenlong"},"content":"                String time \u003d eventParts[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"c-wenlong"},"content":"                String[] timeParts \u003d time.split(\" /to \", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":76,"author":{"gitId":"c-wenlong"},"content":"                if (timeParts.length \u003d\u003d 1) { // if there is command but no input","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"c-wenlong"},"content":"                    throw new KException(\"Invalid parameters for \" + ins);","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"c-wenlong"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"c-wenlong"},"content":"                String startTime \u003d timeParts[0];","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"c-wenlong"},"content":"                String endTime \u003d timeParts[1];","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"c-wenlong"},"content":"                t \u003d new Event(eName, startTime, endTime);","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"c-wenlong"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"c-wenlong"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"c-wenlong"},"content":"        if (t !\u003d null) {","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"c-wenlong"},"content":"            this.Tasks.add(t);","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"c-wenlong"},"content":"            String response \u003d \"Got it. I\u0027ve added this task:\\n\" + t + \"\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"c-wenlong"},"content":"                    \"Now you have \" + this.Tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"c-wenlong"},"content":"            System.out.println(response);","lastModifiedDate":"2024-01-25"},{"lineNumber":89,"author":{"gitId":"c-wenlong"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"c-wenlong"},"content":"        saveLocal();","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":94,"author":{"gitId":"c-wenlong"},"content":"     * Prints the Task List, labels them with numbers","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"c-wenlong"},"content":"    protected void listTasks() {","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"c-wenlong"},"content":"        if (this.Tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-28"},{"lineNumber":98,"author":{"gitId":"c-wenlong"},"content":"            System.out.println(\"There are no tasks here. Please add a task!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":99,"author":{"gitId":"c-wenlong"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":100,"author":{"gitId":"c-wenlong"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"c-wenlong"},"content":"            for (int i \u003d 0; i \u003c this.Tasks.size(); i++) {","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"c-wenlong"},"content":"                System.out.print((i + 1) + \".\");","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"c-wenlong"},"content":"                System.out.println(this.Tasks.get(i));","lastModifiedDate":"2024-01-28"},{"lineNumber":104,"author":{"gitId":"c-wenlong"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":105,"author":{"gitId":"c-wenlong"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":106,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":107,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":108,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":109,"author":{"gitId":"c-wenlong"},"content":"     * Marks a Task as completed.","lastModifiedDate":"2024-01-25"},{"lineNumber":110,"author":{"gitId":"c-wenlong"},"content":"     * ","lastModifiedDate":"2024-01-25"},{"lineNumber":111,"author":{"gitId":"c-wenlong"},"content":"     * @param index Index of Task to be marked in the Tasks ArrayList.","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":113,"author":{"gitId":"c-wenlong"},"content":"    protected void markTask(int index) throws KException {","lastModifiedDate":"2024-01-25"},{"lineNumber":114,"author":{"gitId":"c-wenlong"},"content":"        if (index + 1 \u003e this.Tasks.size() || index \u003c 0) {","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"c-wenlong"},"content":"            throw new KException(\"Error: \" + \"Index out of range!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":116,"author":{"gitId":"c-wenlong"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":117,"author":{"gitId":"c-wenlong"},"content":"        Task t \u003d this.Tasks.get(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"c-wenlong"},"content":"        t.setCompleted();","lastModifiedDate":"2024-01-25"},{"lineNumber":119,"author":{"gitId":"c-wenlong"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + t);","lastModifiedDate":"2024-01-25"},{"lineNumber":120,"author":{"gitId":"c-wenlong"},"content":"        saveLocal();","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":122,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":123,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":124,"author":{"gitId":"c-wenlong"},"content":"     * Marks Task as not completed.","lastModifiedDate":"2024-01-25"},{"lineNumber":125,"author":{"gitId":"c-wenlong"},"content":"     * ","lastModifiedDate":"2024-01-25"},{"lineNumber":126,"author":{"gitId":"c-wenlong"},"content":"     * @param index Index of Task to be marked in the Tasks ArrayList.","lastModifiedDate":"2024-01-28"},{"lineNumber":127,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":128,"author":{"gitId":"c-wenlong"},"content":"    protected void unmarkTask(int index) throws KException {","lastModifiedDate":"2024-01-25"},{"lineNumber":129,"author":{"gitId":"c-wenlong"},"content":"        if (index + 1 \u003e this.Tasks.size() || index \u003c 0) {","lastModifiedDate":"2024-01-28"},{"lineNumber":130,"author":{"gitId":"c-wenlong"},"content":"            throw new KException(\"Error: \" + \"Index out of range!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":131,"author":{"gitId":"c-wenlong"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":132,"author":{"gitId":"c-wenlong"},"content":"        Task t \u003d this.Tasks.get(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":133,"author":{"gitId":"c-wenlong"},"content":"        t.setNotCompleted();","lastModifiedDate":"2024-01-25"},{"lineNumber":134,"author":{"gitId":"c-wenlong"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" + t);","lastModifiedDate":"2024-01-25"},{"lineNumber":135,"author":{"gitId":"c-wenlong"},"content":"        saveLocal();","lastModifiedDate":"2024-01-28"},{"lineNumber":136,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":137,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":138,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":139,"author":{"gitId":"c-wenlong"},"content":"     * Deletes an entry at index given.","lastModifiedDate":"2024-01-28"},{"lineNumber":140,"author":{"gitId":"c-wenlong"},"content":"     * ","lastModifiedDate":"2024-01-28"},{"lineNumber":141,"author":{"gitId":"c-wenlong"},"content":"     * @param index Index at which the Task will be removed from the List.","lastModifiedDate":"2024-01-28"},{"lineNumber":142,"author":{"gitId":"c-wenlong"},"content":"     * @throws KException Exception called when index is out of range.","lastModifiedDate":"2024-01-28"},{"lineNumber":143,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":144,"author":{"gitId":"c-wenlong"},"content":"    protected void delete(int index) throws KException {","lastModifiedDate":"2024-01-25"},{"lineNumber":145,"author":{"gitId":"c-wenlong"},"content":"        if (index + 1 \u003e this.Tasks.size() || index \u003c 0) {","lastModifiedDate":"2024-01-28"},{"lineNumber":146,"author":{"gitId":"c-wenlong"},"content":"            throw new KException(\"Error: \" + \"Index out of range!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":147,"author":{"gitId":"c-wenlong"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":148,"author":{"gitId":"c-wenlong"},"content":"        Task t \u003d this.Tasks.remove(index);","lastModifiedDate":"2024-01-28"},{"lineNumber":149,"author":{"gitId":"c-wenlong"},"content":"        System.out.println(\"OK, I\u0027ve deleted this task:\\n\" + t","lastModifiedDate":"2024-01-25"},{"lineNumber":150,"author":{"gitId":"c-wenlong"},"content":"                + \"\\nNow you have \" + this.Tasks.size() + \" tasks in this list!\");","lastModifiedDate":"2024-01-28"},{"lineNumber":151,"author":{"gitId":"c-wenlong"},"content":"        saveLocal();","lastModifiedDate":"2024-01-28"},{"lineNumber":152,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":153,"author":{"gitId":"c-wenlong"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"c-wenlong":153}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"c-wenlong"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"c-wenlong"},"content":" * A class that encapsulates the ToDo tasks, a type of Task.","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"c-wenlong"},"content":" * ","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"c-wenlong"},"content":" * @author: CHEN WENLONG","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"c-wenlong"},"content":" * @version: CS2103T AY23/24 Semester 2","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"c-wenlong"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"c-wenlong"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"c-wenlong"},"content":"    /** A String value that represent the type of Task, in this case T for ToDo */","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"c-wenlong"},"content":"    private static final String TYPE \u003d \"T\";","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"c-wenlong"},"content":"     * Constructor for the ToDo.","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"c-wenlong"},"content":"     * ","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"c-wenlong"},"content":"     * @param name A String value that states the name of the Task.","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"c-wenlong"},"content":"    public ToDo(String name) {","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"c-wenlong"},"content":"        super(name, TYPE);","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"c-wenlong"},"content":"     * Converts the data (ToDo) here into a format to be stored in the file.","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"c-wenlong"},"content":"     * ","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"c-wenlong"},"content":"     * @return String representation of the ToDo to be store in local disk.","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"c-wenlong"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"c-wenlong"},"content":"    public String convertToFormat() {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"c-wenlong"},"content":"        return super.convertToFormat();","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"c-wenlong"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"c-wenlong"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"c-wenlong"},"content":"     * String representation of a ToDo.","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"c-wenlong"},"content":"     * ","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"c-wenlong"},"content":"     * @return Returns the String representation of a ToDo.","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"c-wenlong"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"c-wenlong"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"c-wenlong"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"c-wenlong"},"content":"        return super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"c-wenlong"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"c-wenlong"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"c-wenlong":39}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"c-wenlong"},"content":"todo homework","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"c-wenlong"},"content":"deadline more homework /by tomorrow","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"c-wenlong"},"content":"event hackathon /from today /to tomorrow","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"c-wenlong"},"content":"todo finish coding for hackathon","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"c-wenlong"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"c-wenlong"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"c-wenlong"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"c-wenlong"},"content":"mark 3","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"c-wenlong"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"c-wenlong"},"content":"unmark 3","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"c-wenlong"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"c-wenlong"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"c-wenlong":12}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"c-wenlong"},"content":"# run this file at its working directory such that the relative path is sustained.","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"c-wenlong"},"content":"    echo \"/bin created!\"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"c-wenlong"},"content":"    echo \"Text generated!\"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"c-wenlong"},"content":"java -classpath ../bin KBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"c-wenlong":4,"-":37}}]
