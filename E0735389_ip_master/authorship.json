[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"# Duke project","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"This is a project for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE).","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":3,"-":13}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"E0735389"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"E0735389"},"content":"checkstyle {","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"E0735389"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"E0735389":21,"-":41}},{"path":"src/main/java/duke/AddTaskResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"/**","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":" * Represents the result of adding a task to the task list.","lastModifiedDate":"2024-02-23"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":" */","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"public class AddTaskResult {","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"    private boolean isSuccessful;","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"    private Task clashingTask;","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"     * Constructs a new AddTaskResult object.","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"     * @param isSuccessful Whether the task was successfully added.","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"     * @param clashingTask The task that the new task clashes with, if any.","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"    private AddTaskResult(boolean isSuccessful, Task clashingTask) {","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"        this.isSuccessful \u003d isSuccessful;","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"        this.clashingTask \u003d clashingTask;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"     * Returns a new AddTaskResult object representing a successful addition of a task.","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"    public static AddTaskResult buildSuccessfulResult() {","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"        return new AddTaskResult(true, null);","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"     * Returns a new AddTaskResult object representing a failed addition of a task.","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"     * @param clashingTask The task that the new task clashes with.","lastModifiedDate":"2024-02-23"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"    public static AddTaskResult buildClashingResult(Task clashingTask) {","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"        return new AddTaskResult(false, clashingTask);","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"     * Returns whether the task was successfully added.","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"    public boolean isSuccessful() {","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"E0735389"},"content":"        return isSuccessful;","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":43,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"E0735389"},"content":"     * Returns the task that the new task clashes with, if any.","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"E0735389"},"content":"    public Task getClashingTask() {","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"E0735389"},"content":"        assert !isSuccessful : \"There is no clashing task if the addition was successful\";","lastModifiedDate":"2024-02-23"},{"lineNumber":49,"author":{"gitId":"E0735389"},"content":"        return clashingTask;","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"E0735389":51}},{"path":"src/main/java/duke/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"class ByeCommand extends Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"        System.exit(0);","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"        return \"\";  // this is not reachable","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":9}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"/**","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":" * Represents a command.","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":" * Subclasses of this class must register itself with {@link Parser}","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":" * in {@link Commands#registerCommands}.","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":" */","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"    public abstract String execute(TaskList tasks) throws DukeException;","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":11}},{"path":"src/main/java/duke/CommandBuilder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"public interface CommandBuilder {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"    public Command build(String argument) throws InvalidCommandException;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":5}},{"path":"src/main/java/duke/CommandExecutionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"/**","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":" * Represents an exception that occurs during the execution of a command.","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":" */","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"public class CommandExecutionException extends DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"    public CommandExecutionException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"        super(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":10}},{"path":"src/main/java/duke/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-23"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"class ClearCommand extends Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"    public ClearCommand() {}","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"        tasks.clear();","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"        assert tasks.getTaskCount() \u003d\u003d 0;","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"        return \"Cleared all tasks!\";","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"abstract class AddTaskCommand extends Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"    private Task task;","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"    public abstract Task parseTask(String argument) throws InvalidCommandException;","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"    public AddTaskCommand(String argument) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"        argument \u003d argument.trim();","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"        this.task \u003d parseTask(argument);","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"        assert task !\u003d null : \"execute() can only be called once\";","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"        int oldTaskCount \u003d tasks.getTaskCount();","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"        AddTaskResult additionResult \u003d tasks.addTask(task);","lastModifiedDate":"2024-02-23"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"        if (!additionResult.isSuccessful()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"            throw new DukeException(\"Failed to add task: \" + task + \"\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"                    \"It is clashing with the existing task: \" + additionResult.getClashingTask());","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"        assert oldTaskCount + 1 \u003d\u003d tasks.getTaskCount();","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"        String result \u003d \"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"E0735389"},"content":"            task + \"\\n\" +","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"E0735389"},"content":"            tasks.getDisplayTaskCount();","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"E0735389"},"content":"        task \u003d null;","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"E0735389"},"content":"        return result;","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"E0735389"},"content":"class AddTodoCommand extends AddTaskCommand {","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"E0735389"},"content":"    public AddTodoCommand(String argument) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"E0735389"},"content":"        super(argument);","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"E0735389"},"content":"    public Task parseTask(String argument) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"E0735389"},"content":"        if (argument.isEmpty()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"E0735389"},"content":"            throw new InvalidCommandException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"E0735389"},"content":"        return new Todo(argument);","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"},{"lineNumber":61,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":62,"author":{"gitId":"E0735389"},"content":"class AddDeadlineCommand extends AddTaskCommand {","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"E0735389"},"content":"    public AddDeadlineCommand(String argument) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"E0735389"},"content":"        super(argument);","lastModifiedDate":"2024-01-23"},{"lineNumber":65,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":66,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"E0735389"},"content":"    public Task parseTask(String argument) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"E0735389"},"content":"        String[] parts \u003d argument.split(\" /by \", 2);","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"E0735389"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"E0735389"},"content":"            throw new InvalidCommandException(\"The deadline command should be in the format: deadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":73,"author":{"gitId":"E0735389"},"content":"        if (parts[0].isEmpty()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":74,"author":{"gitId":"E0735389"},"content":"            throw new InvalidCommandException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":75,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":76,"author":{"gitId":"E0735389"},"content":"        if (parts[1].isEmpty()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":77,"author":{"gitId":"E0735389"},"content":"            throw new InvalidCommandException(\"The date of a deadline cannot be empty.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":78,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":79,"author":{"gitId":"E0735389"},"content":"        return new Deadline(parts[0], parts[1]);","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":81,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"},{"lineNumber":82,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":83,"author":{"gitId":"E0735389"},"content":"class AddEventCommand extends AddTaskCommand {","lastModifiedDate":"2024-01-23"},{"lineNumber":84,"author":{"gitId":"E0735389"},"content":"    public AddEventCommand(String argument) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":85,"author":{"gitId":"E0735389"},"content":"        super(argument);","lastModifiedDate":"2024-01-23"},{"lineNumber":86,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":87,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":88,"author":{"gitId":"E0735389"},"content":"    private static final Pattern EVENT_PATTERN \u003d Pattern.compile(\"(.*) /from (.*) /to (.*)\");","lastModifiedDate":"2024-01-23"},{"lineNumber":89,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":90,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"E0735389"},"content":"    public Task parseTask(String argument) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":92,"author":{"gitId":"E0735389"},"content":"        Matcher matcher \u003d EVENT_PATTERN.matcher(argument);","lastModifiedDate":"2024-01-23"},{"lineNumber":93,"author":{"gitId":"E0735389"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":94,"author":{"gitId":"E0735389"},"content":"            LocalDateTime today \u003d LocalDateTime.now();","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"E0735389"},"content":"            LocalDateTime oneHourLater \u003d today.plusHours(1);","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"E0735389"},"content":"            LocalDateTime twoHoursLater \u003d today.plusHours(2);","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"E0735389"},"content":"            throw new InvalidCommandException(\"The event command should be in the format: \" +","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"E0735389"},"content":"                    \"event \u003cdescription\u003e /from \u003cstarting time\u003e /to \u003cending time\u003e.\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"E0735389"},"content":"                    \"Example: event meeting /from \" + oneHourLater.format(Constants.INPUT_FORMATTER) +","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"E0735389"},"content":"                    \" /to \" + twoHoursLater.format(Constants.INPUT_FORMATTER));","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":102,"author":{"gitId":"E0735389"},"content":"        String description \u003d matcher.group(1);","lastModifiedDate":"2024-01-23"},{"lineNumber":103,"author":{"gitId":"E0735389"},"content":"        String startingTimeStringRepr \u003d matcher.group(2);","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"E0735389"},"content":"        String endingTimeStringRepr \u003d matcher.group(3);","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"E0735389"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-01-23"},{"lineNumber":106,"author":{"gitId":"E0735389"},"content":"            throw new InvalidCommandException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":107,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":108,"author":{"gitId":"E0735389"},"content":"        if (startingTimeStringRepr.isEmpty()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":109,"author":{"gitId":"E0735389"},"content":"            throw new InvalidCommandException(\"The starting time of an event cannot be empty.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":110,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":111,"author":{"gitId":"E0735389"},"content":"        if (endingTimeStringRepr.isEmpty()) {","lastModifiedDate":"2024-02-23"},{"lineNumber":112,"author":{"gitId":"E0735389"},"content":"            throw new InvalidCommandException(\"The ending time of an event cannot be empty.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":113,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":114,"author":{"gitId":"E0735389"},"content":"        LocalDateTime startingTime, endingTime;","lastModifiedDate":"2024-02-23"},{"lineNumber":115,"author":{"gitId":"E0735389"},"content":"        try {","lastModifiedDate":"2024-02-23"},{"lineNumber":116,"author":{"gitId":"E0735389"},"content":"            startingTime \u003d LocalDateTime.parse(startingTimeStringRepr, Constants.INPUT_FORMATTER);","lastModifiedDate":"2024-02-23"},{"lineNumber":117,"author":{"gitId":"E0735389"},"content":"            endingTime \u003d LocalDateTime.parse(endingTimeStringRepr, Constants.INPUT_FORMATTER);","lastModifiedDate":"2024-02-23"},{"lineNumber":118,"author":{"gitId":"E0735389"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-23"},{"lineNumber":119,"author":{"gitId":"E0735389"},"content":"            throw new InvalidCommandException(","lastModifiedDate":"2024-02-23"},{"lineNumber":120,"author":{"gitId":"E0735389"},"content":"                    \"Invalid date format!\\n\" +","lastModifiedDate":"2024-02-23"},{"lineNumber":121,"author":{"gitId":"E0735389"},"content":"                    e.getMessage());","lastModifiedDate":"2024-02-23"},{"lineNumber":122,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":123,"author":{"gitId":"E0735389"},"content":"        if (!startingTime.isBefore(endingTime)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":124,"author":{"gitId":"E0735389"},"content":"            throw new InvalidCommandException(\"The starting time of an event must be before the ending time.\");","lastModifiedDate":"2024-02-23"},{"lineNumber":125,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":126,"author":{"gitId":"E0735389"},"content":"        return new Event(description, startingTime, endingTime);","lastModifiedDate":"2024-02-23"},{"lineNumber":127,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":128,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"},{"lineNumber":129,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":130,"author":{"gitId":"E0735389"},"content":"class ListCommand extends Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":131,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":132,"author":{"gitId":"E0735389"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-02-22"},{"lineNumber":133,"author":{"gitId":"E0735389"},"content":"        return tasks.getDisplayListTasks();","lastModifiedDate":"2024-02-22"},{"lineNumber":134,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":135,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"},{"lineNumber":136,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":137,"author":{"gitId":"E0735389"},"content":"abstract class CommandTakingTaskIndex extends Command {","lastModifiedDate":"2024-01-23"},{"lineNumber":138,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":139,"author":{"gitId":"E0735389"},"content":"     * The 0-indexed index of the task to be operated on.","lastModifiedDate":"2024-01-23"},{"lineNumber":140,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":141,"author":{"gitId":"E0735389"},"content":"    protected int index;","lastModifiedDate":"2024-01-23"},{"lineNumber":142,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":143,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":144,"author":{"gitId":"E0735389"},"content":"     * @param index 1-based index of the task.","lastModifiedDate":"2024-01-23"},{"lineNumber":145,"author":{"gitId":"E0735389"},"content":"     * @throws InvalidCommandException if the index is invalid.","lastModifiedDate":"2024-01-23"},{"lineNumber":146,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":147,"author":{"gitId":"E0735389"},"content":"    public CommandTakingTaskIndex(String index) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":148,"author":{"gitId":"E0735389"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":149,"author":{"gitId":"E0735389"},"content":"            this.index \u003d Integer.parseInt(index);","lastModifiedDate":"2024-01-23"},{"lineNumber":150,"author":{"gitId":"E0735389"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":151,"author":{"gitId":"E0735389"},"content":"            throw new InvalidCommandException(\"The task number must be an integer.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":152,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":153,"author":{"gitId":"E0735389"},"content":"        if (this.index \u003c\u003d 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":154,"author":{"gitId":"E0735389"},"content":"            throw new InvalidCommandException(\"The task number must be positive.\");","lastModifiedDate":"2024-01-23"},{"lineNumber":155,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":156,"author":{"gitId":"E0735389"},"content":"        this.index--;","lastModifiedDate":"2024-01-23"},{"lineNumber":157,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":158,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"},{"lineNumber":159,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":160,"author":{"gitId":"E0735389"},"content":"class MarkDoneCommand extends CommandTakingTaskIndex {","lastModifiedDate":"2024-01-23"},{"lineNumber":161,"author":{"gitId":"E0735389"},"content":"    public MarkDoneCommand(String index) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":162,"author":{"gitId":"E0735389"},"content":"        super(index);","lastModifiedDate":"2024-01-23"},{"lineNumber":163,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":164,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":165,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":166,"author":{"gitId":"E0735389"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-02-22"},{"lineNumber":167,"author":{"gitId":"E0735389"},"content":"        tasks.markTaskAsDone(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":168,"author":{"gitId":"E0735389"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2024-02-22"},{"lineNumber":169,"author":{"gitId":"E0735389"},"content":"            tasks.getTaskDescription(index);","lastModifiedDate":"2024-02-22"},{"lineNumber":170,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":171,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":172,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":173,"author":{"gitId":"E0735389"},"content":"class UnmarkDoneCommand extends CommandTakingTaskIndex {","lastModifiedDate":"2024-01-23"},{"lineNumber":174,"author":{"gitId":"E0735389"},"content":"    public UnmarkDoneCommand(String index) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":175,"author":{"gitId":"E0735389"},"content":"        super(index);","lastModifiedDate":"2024-01-23"},{"lineNumber":176,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":177,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":178,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":179,"author":{"gitId":"E0735389"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-02-22"},{"lineNumber":180,"author":{"gitId":"E0735389"},"content":"        tasks.unmarkTaskAsDone(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":181,"author":{"gitId":"E0735389"},"content":"        return \"OK, I\u0027ve unmarked this task as not done yet:\\n\" +","lastModifiedDate":"2024-02-22"},{"lineNumber":182,"author":{"gitId":"E0735389"},"content":"            tasks.getTaskDescription(index);","lastModifiedDate":"2024-02-22"},{"lineNumber":183,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":184,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":185,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":186,"author":{"gitId":"E0735389"},"content":"class DeleteCommand extends CommandTakingTaskIndex {","lastModifiedDate":"2024-01-23"},{"lineNumber":187,"author":{"gitId":"E0735389"},"content":"    public DeleteCommand(String index) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":188,"author":{"gitId":"E0735389"},"content":"        super(index);","lastModifiedDate":"2024-01-23"},{"lineNumber":189,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":190,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":191,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":192,"author":{"gitId":"E0735389"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2024-02-22"},{"lineNumber":193,"author":{"gitId":"E0735389"},"content":"        String taskToDelete \u003d tasks.getTaskDescription(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":194,"author":{"gitId":"E0735389"},"content":"        int oldTaskCount \u003d tasks.getTaskCount();","lastModifiedDate":"2024-02-23"},{"lineNumber":195,"author":{"gitId":"E0735389"},"content":"        tasks.deleteTask(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":196,"author":{"gitId":"E0735389"},"content":"        assert oldTaskCount - 1 \u003d\u003d tasks.getTaskCount();","lastModifiedDate":"2024-02-23"},{"lineNumber":197,"author":{"gitId":"E0735389"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2024-02-22"},{"lineNumber":198,"author":{"gitId":"E0735389"},"content":"            taskToDelete + \"\\n\" +","lastModifiedDate":"2024-02-22"},{"lineNumber":199,"author":{"gitId":"E0735389"},"content":"            tasks.getDisplayTaskCount();","lastModifiedDate":"2024-02-22"},{"lineNumber":200,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":201,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-28"},{"lineNumber":202,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":203,"author":{"gitId":"E0735389"},"content":"class FindCommand extends Command {","lastModifiedDate":"2024-02-19"},{"lineNumber":204,"author":{"gitId":"E0735389"},"content":"    private String query;","lastModifiedDate":"2024-02-19"},{"lineNumber":205,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":206,"author":{"gitId":"E0735389"},"content":"    public FindCommand(String query) {","lastModifiedDate":"2024-02-19"},{"lineNumber":207,"author":{"gitId":"E0735389"},"content":"        this.query \u003d query;","lastModifiedDate":"2024-02-19"},{"lineNumber":208,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":209,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":210,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":211,"author":{"gitId":"E0735389"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2024-02-22"},{"lineNumber":212,"author":{"gitId":"E0735389"},"content":"        return tasks.findTasks(query).getDisplayListTasks();","lastModifiedDate":"2024-02-22"},{"lineNumber":213,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":214,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-02-19"},{"lineNumber":215,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":216,"author":{"gitId":"E0735389"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":217,"author":{"gitId":"E0735389"},"content":" * A helper class that registers commands with {@link Parser}.","lastModifiedDate":"2024-02-16"},{"lineNumber":218,"author":{"gitId":"E0735389"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":219,"author":{"gitId":"E0735389"},"content":"public class Commands {","lastModifiedDate":"2024-01-23"},{"lineNumber":220,"author":{"gitId":"E0735389"},"content":"    public static void registerCommands() {","lastModifiedDate":"2024-01-23"},{"lineNumber":221,"author":{"gitId":"E0735389"},"content":"        Parser.registerCommand(\"clear\", s -\u003e new ClearCommand());","lastModifiedDate":"2024-02-04"},{"lineNumber":222,"author":{"gitId":"E0735389"},"content":"        Parser.registerCommand(\"todo\", s -\u003e new AddTodoCommand(s));","lastModifiedDate":"2024-01-23"},{"lineNumber":223,"author":{"gitId":"E0735389"},"content":"        Parser.registerCommand(\"deadline\", s -\u003e new AddDeadlineCommand(s));","lastModifiedDate":"2024-01-23"},{"lineNumber":224,"author":{"gitId":"E0735389"},"content":"        Parser.registerCommand(\"event\", s -\u003e new AddEventCommand(s));","lastModifiedDate":"2024-01-23"},{"lineNumber":225,"author":{"gitId":"E0735389"},"content":"        Parser.registerCommand(\"list\", s -\u003e new ListCommand());","lastModifiedDate":"2024-01-23"},{"lineNumber":226,"author":{"gitId":"E0735389"},"content":"        Parser.registerCommand(\"bye\", s -\u003e new ByeCommand());","lastModifiedDate":"2024-01-23"},{"lineNumber":227,"author":{"gitId":"E0735389"},"content":"        Parser.registerCommand(\"mark\", s -\u003e new MarkDoneCommand(s));","lastModifiedDate":"2024-01-23"},{"lineNumber":228,"author":{"gitId":"E0735389"},"content":"        Parser.registerCommand(\"unmark\", s -\u003e new UnmarkDoneCommand(s));","lastModifiedDate":"2024-01-23"},{"lineNumber":229,"author":{"gitId":"E0735389"},"content":"        Parser.registerCommand(\"delete\", s -\u003e new DeleteCommand(s));","lastModifiedDate":"2024-01-23"},{"lineNumber":230,"author":{"gitId":"E0735389"},"content":"        Parser.registerCommand(\"find\", s -\u003e new FindCommand(s));","lastModifiedDate":"2024-02-19"},{"lineNumber":231,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":232,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":232}},{"path":"src/main/java/duke/Constants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":" * A class to group all the constants used together.","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":" * This class should not be instantiated.","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"public class Constants {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"    public static final DateTimeFormatter INPUT_FORMATTER \u003d","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"        DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"    public static final DateTimeFormatter OUTPUT_FORMATTER \u003d","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"        DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"E0735389":14}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":" * Represents a deadline.","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"        this.by \u003d LocalDateTime.parse(by, Constants.INPUT_FORMATTER);","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"    public boolean isClashingWith(Task otherTask) {","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"        return false;","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(Constants.OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"    public String serializeToCommand(int taskIndex) {","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"        return \"deadline \" + description + \" /by \" + by.format(Constants.INPUT_FORMATTER) + \"\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"            + serializeDoneMark(taskIndex);","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":31}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"E0735389"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"E0735389"},"content":"    private void flip() {","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"E0735389"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"E0735389"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"E0735389"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"E0735389"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"E0735389"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"E0735389"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"E0735389"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"E0735389"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"E0735389"},"content":"        db.flip();","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"E0735389"},"content":"        return db;","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"E0735389":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"public class Duke extends Application {","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"    Parser parser \u003d new Parser();","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"    TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"    Storage storage \u003d new Storage();","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"        Commands.registerCommands();","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"            tasks.loadFromSavedData(storage.loadFromFile(), parser);","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"            storage.deleteFile();","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"            //ui.printCorruptedFileMessage(e);","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(this);","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"            stage.show();","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"        Command command;","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"        try {","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"E0735389"},"content":"            command \u003d parser.parse(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"E0735389"},"content":"            String result \u003d command.execute(tasks);","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"E0735389"},"content":"            storage.saveToFile(tasks.getSaveData());","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"E0735389"},"content":"            return result;","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"E0735389"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"E0735389"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"E0735389":48,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":" * Represents an exception.","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"        super(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":10}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":" * Represents an event task.","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"    protected LocalDateTime startingTime, endingTime;","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"    public Event(String description, LocalDateTime startingTime, LocalDateTime endingTime) {","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"        this.startingTime \u003d startingTime;","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"        this.endingTime \u003d endingTime;","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"    public boolean isClashingWith(Task otherTask) {","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"        if (otherTask instanceof Event) {","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"            Event otherEvent \u003d (Event) otherTask;","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"            return this.startingTime.isBefore(otherEvent.endingTime) \u0026\u0026 this.endingTime.isAfter(otherEvent.startingTime);","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"        } else {","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"            return false;","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startingTime.format(Constants.OUTPUT_FORMATTER)","lastModifiedDate":"2024-02-23"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"            + \" to: \" + endingTime.format(Constants.OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"    public String serializeToCommand(int taskIndex) {","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"        return \"event \" + description + \" /from \" + startingTime.format(Constants.INPUT_FORMATTER)","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"            + \" /to \" + endingTime.format(Constants.INPUT_FORMATTER) + \"\\n\" + serializeDoneMark(taskIndex);","lastModifiedDate":"2024-02-23"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":38}},{"path":"src/main/java/duke/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"/**","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":" * Represents an exception where the command format is invalid.","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":" */","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"        super(message);","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":10}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"public class Launcher {","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"E0735389":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"        try {","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"            stage.show();","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"E0735389":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"/**","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":" */","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-22"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-22"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-22"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-22"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"    private static String getDisplayBanner() {","lastModifiedDate":"2024-02-22"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"        String chatbotName \u003d \"Echo\";","lastModifiedDate":"2024-02-22"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"        return chatbotName + \", the chatbot. Version 0.0.0.\\n\" +","lastModifiedDate":"2024-02-22"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"            \"Using Java \" + System.getProperty(\"java.version\") + \".\";","lastModifiedDate":"2024-02-22"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-22"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"                DialogBox.getDukeDialog(getDisplayBanner(), dukeImage)","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"        );","lastModifiedDate":"2024-02-22"},{"lineNumber":41,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":43,"author":{"gitId":"E0735389"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"E0735389"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-22"},{"lineNumber":45,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":46,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":47,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":48,"author":{"gitId":"E0735389"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-22"},{"lineNumber":49,"author":{"gitId":"E0735389"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-22"},{"lineNumber":50,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":51,"author":{"gitId":"E0735389"},"content":"    @FXML","lastModifiedDate":"2024-02-22"},{"lineNumber":52,"author":{"gitId":"E0735389"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-22"},{"lineNumber":53,"author":{"gitId":"E0735389"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"E0735389"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"E0735389"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"E0735389"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"E0735389"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-22"},{"lineNumber":58,"author":{"gitId":"E0735389"},"content":"        );","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"E0735389"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-22"},{"lineNumber":60,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-22"},{"lineNumber":61,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"E0735389":61}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"public class Parser {","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"    private static HashMap\u003cString, CommandBuilder\u003e registeredCommands \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"     * Registers a command with the parser.","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"     * It must be called exactly once at program start, which is done by","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"     * {@link Commands#registerCommands}.","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"     * @param commandName the name of the command","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"     * @param commandBuilder the {@link CommandBuilder} object","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"    public static void registerCommand(String commandName, CommandBuilder commandBuilder) {","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"        registeredCommands.put(commandName, commandBuilder);","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"    public Parser() {","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"     * Parses a command.","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"     * @param command The command to parse.","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"     * @throws InvalidCommandException if the command is invalid.","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"     * @return the parsed command.","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"    public Command parse(String command) throws InvalidCommandException {","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"        command \u003d command.trim();","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"        String[] parts \u003d command.split(\" \", 2);","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"        if (parts.length \u003d\u003d 0) {","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"            throw new InvalidCommandException(\"Empty command\");","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"        String commandName \u003d parts[0];","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"        CommandBuilder commandBuilder \u003d registeredCommands.get(commandName);","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"        if (commandBuilder \u003d\u003d null) {","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"            throw new InvalidCommandException(\"Unknown command: \" + commandName);","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"E0735389"},"content":"        return commandBuilder.build(parts.length \u003d\u003d 1 ? \"\" : parts[1]);","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":43}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"import java.util.List;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"import java.io.File;","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"import java.nio.file.StandardCopyOption;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":" * {@code Storage} class is used to read and write data to the file.","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"public class Storage {","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"    private static Path PATH_TO_TASKS_FILE \u003d Paths.get(\"echo_bot_tasks.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"     * Deletes the file if it exists.","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"    public void deleteFile() {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"            Files.delete(PATH_TO_TASKS_FILE);","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"     * Loads a list of strings, representing the tasks, from the file.","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"     * @return the list of strings","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"    public List\u003cString\u003e loadFromFile() {","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"E0735389"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"E0735389"},"content":"            return Files.readAllLines(PATH_TO_TASKS_FILE);","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"E0735389"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"E0735389"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"E0735389"},"content":"            System.err.println(\"Error reading from file: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"E0735389"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"E0735389"},"content":"     * Saves the current list of tasks to the file.","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"E0735389"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"E0735389"},"content":"     * @param s the list of tasks in string format, after being serialized by","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"E0735389"},"content":"     * {@link Task#serializeToCommand}","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"E0735389"},"content":"    public void saveToFile(List\u003cString\u003e s) {","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"E0735389"},"content":"        // We write to a temporary file first, then rename it to the actual file.","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"E0735389"},"content":"        // This is to prevent the file from being corrupted if the program crashes.","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"E0735389"},"content":"        final Path PATH_TO_TMP_FILE \u003d Paths.get(PATH_TO_TASKS_FILE.toString() + \".tmp\");","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"E0735389"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"E0735389"},"content":"            try (PrintWriter out \u003d new PrintWriter(PATH_TO_TMP_FILE.toFile())) {","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"E0735389"},"content":"                for (String line : s) {","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"E0735389"},"content":"                    out.print(line);","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"E0735389"},"content":"                }","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"E0735389"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"E0735389"},"content":"            Files.move(PATH_TO_TMP_FILE, PATH_TO_TASKS_FILE, StandardCopyOption.REPLACE_EXISTING);","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"E0735389"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":68,"author":{"gitId":"E0735389"},"content":"            System.err.println(\"Error writing to file: \" + e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":69,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":70,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"E0735389"},"content":"};","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":71}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"abstract public class Task {","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"    protected String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"        return this.description;","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"     * Returns the string representation of the task to be saved in the file.","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"     *","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"     * The string representation should be a sequence of valid commands for the program,","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"     * separated by newlines,","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"E0735389"},"content":"     * such that if there was originally taskIndex tasks in the list,","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"E0735389"},"content":"     * then after executing the string representation,","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"E0735389"},"content":"     * there will be taskIndex + 1 tasks in the list.","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"E0735389"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"E0735389"},"content":"     * @param taskIndex the 0-indexed index of this task.","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"E0735389"},"content":"     * @return the serialized string.","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"E0735389"},"content":"    public abstract String serializeToCommand(int taskIndex);","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"E0735389"},"content":"     * Determines if the current task clashes with the other given task.","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"E0735389"},"content":"     *","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"E0735389"},"content":"     * @param otherTask the other task.","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"E0735389"},"content":"    public abstract boolean isClashingWith(Task otherTask);","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"E0735389"},"content":"    protected String serializeDoneMark(int taskIndex) {","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"E0735389"},"content":"        if (this.isDone) {","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"E0735389"},"content":"            return \"mark \" + (taskIndex + 1) + \"\\n\";","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"E0735389"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"E0735389"},"content":"            return \"\";","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":64}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"import java.util.List;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"public class TaskList {","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"     * @param task Task to be added.","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"     * @return the status of the task addition.","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"    public AddTaskResult addTask(Task task) {","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"        // check if it doesn\u0027t clash first","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"            if (t.isClashingWith(task)) {","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"                return AddTaskResult.buildClashingResult(t);","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"            }","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"E0735389"},"content":"        return AddTaskResult.buildSuccessfulResult();","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"E0735389"},"content":"     * Deletes the task at the given index.","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"E0735389"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"E0735389"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"E0735389"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"E0735389"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"E0735389"},"content":"     * Returns a string representation of all the tasks in the list.","lastModifiedDate":"2024-02-22"},{"lineNumber":37,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"E0735389"},"content":"    public String getDisplayListTasks() {","lastModifiedDate":"2024-02-22"},{"lineNumber":39,"author":{"gitId":"E0735389"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-22"},{"lineNumber":40,"author":{"gitId":"E0735389"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"E0735389"},"content":"            sb.append((i + 1) + \". \" + tasks.get(i) + \"\\n\");","lastModifiedDate":"2024-02-22"},{"lineNumber":42,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"E0735389"},"content":"        return sb.toString();","lastModifiedDate":"2024-02-22"},{"lineNumber":44,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"E0735389"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"E0735389"},"content":"    public int getTaskCount() {","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"E0735389"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-02-22"},{"lineNumber":54,"author":{"gitId":"E0735389"},"content":"     * Returns a string representation of the task count suitable to be displayed to the user.","lastModifiedDate":"2024-02-22"},{"lineNumber":55,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-02-22"},{"lineNumber":56,"author":{"gitId":"E0735389"},"content":"    public String getDisplayTaskCount() {","lastModifiedDate":"2024-02-22"},{"lineNumber":57,"author":{"gitId":"E0735389"},"content":"        int count \u003d getTaskCount();","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"E0735389"},"content":"        return \"Now you have \" + count + \" \" + (count \u003d\u003d 1 ? \"task\" : \"tasks\") + \" in the list.\";","lastModifiedDate":"2024-02-22"},{"lineNumber":59,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"E0735389"},"content":"    public TaskList findTasks(String query) {","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"E0735389"},"content":"        TaskList foundTasks \u003d new TaskList();","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"E0735389"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"E0735389"},"content":"            if (task.getDescription().contains(query)) {","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"E0735389"},"content":"                AddTaskResult additionResult \u003d foundTasks.addTask(task);","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"E0735389"},"content":"                assert additionResult.isSuccessful() : \"This task list should not have clashing tasks.\";","lastModifiedDate":"2024-02-23"},{"lineNumber":67,"author":{"gitId":"E0735389"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"E0735389"},"content":"        return foundTasks;","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"E0735389"},"content":"     * Returns the description of the task at the specified index.","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"E0735389"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"E0735389"},"content":"     * @param index The index of the task in the list.","lastModifiedDate":"2024-02-16"},{"lineNumber":76,"author":{"gitId":"E0735389"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-16"},{"lineNumber":77,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":78,"author":{"gitId":"E0735389"},"content":"    public String getTaskDescription(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"E0735389"},"content":"        return tasks.get(index).toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":83,"author":{"gitId":"E0735389"},"content":"     * Marks the task at the given index as done.","lastModifiedDate":"2024-02-16"},{"lineNumber":84,"author":{"gitId":"E0735389"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":85,"author":{"gitId":"E0735389"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2024-02-16"},{"lineNumber":86,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":87,"author":{"gitId":"E0735389"},"content":"    public void markTaskAsDone(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":88,"author":{"gitId":"E0735389"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":89,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":92,"author":{"gitId":"E0735389"},"content":"     * Unmarks the task at the given index as done.","lastModifiedDate":"2024-02-16"},{"lineNumber":93,"author":{"gitId":"E0735389"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":94,"author":{"gitId":"E0735389"},"content":"     * @param index The index of the task to be unmarked as done.","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":96,"author":{"gitId":"E0735389"},"content":"    public void unmarkTaskAsDone(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"E0735389"},"content":"        tasks.get(index).unmarkAsDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":101,"author":{"gitId":"E0735389"},"content":"     * Clears all tasks in the list.","lastModifiedDate":"2024-02-16"},{"lineNumber":102,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":103,"author":{"gitId":"E0735389"},"content":"    public void clear() {","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"E0735389"},"content":"        tasks.clear();","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"E0735389"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":108,"author":{"gitId":"E0735389"},"content":"     * Loads the from saved data.","lastModifiedDate":"2024-02-16"},{"lineNumber":109,"author":{"gitId":"E0735389"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":110,"author":{"gitId":"E0735389"},"content":"     * @param lines The list of commands representing the stored data.","lastModifiedDate":"2024-02-16"},{"lineNumber":111,"author":{"gitId":"E0735389"},"content":"     * @param parser {@link Parser} object.","lastModifiedDate":"2024-02-16"},{"lineNumber":112,"author":{"gitId":"E0735389"},"content":"     * @throws DukeException if the storage file is corrupted.","lastModifiedDate":"2024-02-16"},{"lineNumber":113,"author":{"gitId":"E0735389"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":114,"author":{"gitId":"E0735389"},"content":"    public void loadFromSavedData(List\u003cString\u003e lines, Parser parser) throws DukeException {","lastModifiedDate":"2024-02-16"},{"lineNumber":115,"author":{"gitId":"E0735389"},"content":"        clear();","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"E0735389"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"E0735389"},"content":"            for (String command : lines) {","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"E0735389"},"content":"                parser.parse(command).execute(this);","lastModifiedDate":"2024-02-22"},{"lineNumber":119,"author":{"gitId":"E0735389"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"E0735389"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":121,"author":{"gitId":"E0735389"},"content":"            clear();","lastModifiedDate":"2024-02-04"},{"lineNumber":122,"author":{"gitId":"E0735389"},"content":"            throw e;","lastModifiedDate":"2024-02-16"},{"lineNumber":123,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":124,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"E0735389"},"content":"    public List\u003cString\u003e getSaveData() {","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"E0735389"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":128,"author":{"gitId":"E0735389"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":129,"author":{"gitId":"E0735389"},"content":"            lines.add(tasks.get(i).serializeToCommand(i));","lastModifiedDate":"2024-02-04"},{"lineNumber":130,"author":{"gitId":"E0735389"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":131,"author":{"gitId":"E0735389"},"content":"        return lines;","lastModifiedDate":"2024-02-04"},{"lineNumber":132,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":133,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"E0735389":133}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"    public boolean isClashingWith(Task otherTask) {","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"        return false;","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"    @Override","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"    public String serializeToCommand(int taskIndex) {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"E0735389"},"content":"        return \"todo \" + description + \"\\n\" + serializeDoneMark(taskIndex);","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"E0735389":22}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"E0735389":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-22"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":15,"author":{"gitId":"E0735389"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":16,"author":{"gitId":"E0735389"},"content":"      \u003c/content\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":17,"author":{"gitId":"E0735389"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":18,"author":{"gitId":"E0735389"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-22"},{"lineNumber":19,"author":{"gitId":"E0735389"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-22"}],"authorContributionMap":{"E0735389":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"    public void toStringTest(){","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"        assertEquals(new Deadline(\"return book\", \"2021-08-25T18:00\").toString(),","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"            \"[D][ ] return book (by: Aug 25 2021 18:00:00)\");","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"E0735389":13}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"E0735389"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"E0735389"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"E0735389"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"E0735389"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"E0735389"},"content":"    @Test","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"E0735389"},"content":"    public void toStringTest(){","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"E0735389"},"content":"        assertEquals(new Todo(\"return book\").toString(),","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"E0735389"},"content":"            \"[T][ ] return book\");","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"E0735389"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"E0735389"},"content":"}","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"E0735389"},"content":"","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"E0735389":14}}]
