[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"jinhanfromNUS"},"content":"/*","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jinhanfromNUS"},"content":" * This file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jinhanfromNUS"},"content":" *","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jinhanfromNUS"},"content":" * This is a general purpose Gradle build.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jinhanfromNUS"},"content":" * To learn more about Gradle by exploring our Samples at https://docs.gradle.org/8.5/samples","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jinhanfromNUS"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jinhanfromNUS"},"content":"plugins {","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jinhanfromNUS"},"content":"    id \u0027java\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jinhanfromNUS"},"content":"}","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jinhanfromNUS"},"content":"repositories {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jinhanfromNUS"},"content":"    mavenCentral()","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jinhanfromNUS"},"content":"}","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jinhanfromNUS"},"content":"dependencies {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jinhanfromNUS"},"content":"    // Main dependencies","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jinhanfromNUS"},"content":"    // Include dependencies for your main application code here","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jinhanfromNUS"},"content":"    // Test dependencies","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jinhanfromNUS"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.10.0\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jinhanfromNUS"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.10.0\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jinhanfromNUS"},"content":"}","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jinhanfromNUS"},"content":"test {","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jinhanfromNUS"},"content":"    useJUnitPlatform()","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jinhanfromNUS"},"content":"}","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jinhanfromNUS"},"content":"//plugins {","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jinhanfromNUS"},"content":"//    id \u0027java\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jinhanfromNUS"},"content":"//    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jinhanfromNUS"},"content":"//    // other plugins","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jinhanfromNUS"},"content":"//}","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jinhanfromNUS"},"content":"//","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jinhanfromNUS"},"content":"//mainClassName \u003d \u0027duke.Duke\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jinhanfromNUS"},"content":"//","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jinhanfromNUS"},"content":"//shadowJar {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jinhanfromNUS"},"content":"//    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jinhanfromNUS"},"content":"//}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jinhanfromNUS":38}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jinhanfromNUS"},"content":"[D][X]  (by: Jan 1 2023)","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"jinhanfromNUS"},"content":"[E][ ] test (from: Jan 1 2023 to: Jan 1 2024)","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"jinhanfromNUS"},"content":"[T][X] try","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jinhanfromNUS"},"content":"[E][ ] tester1 (from: Jan 1 2022 to: Jan 1 2023)","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jinhanfromNUS"},"content":"[E][X] tester2 (from: Jan 1 2022 to: Jan 1 2023)","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jinhanfromNUS"},"content":"[T][ ] 100 hours of effort","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jinhanfromNUS"},"content":"[T][ ] try now","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jinhanfromNUS"},"content":"[T][ ] Buy groceries","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jinhanfromNUS"},"content":"[D][ ] Submit report (by: Dec 31 2022)","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jinhanfromNUS":9}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"jinhanfromNUS"},"content":"/*","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jinhanfromNUS"},"content":" * This file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jinhanfromNUS"},"content":" *","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jinhanfromNUS"},"content":" * The settings file is used to specify which projects to include in your build.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jinhanfromNUS"},"content":" * For more detailed information on multi-project builds, please refer to https://docs.gradle.org/8.5/userguide/building_swift_projects.html in the Gradle documentation.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jinhanfromNUS"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jinhanfromNUS"},"content":"rootProject.name \u003d \u0027ip\u0027","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jinhanfromNUS":8}},{"path":"src/main/java/Backup/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanfromNUS"},"content":"//package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"jinhanfromNUS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"jinhanfromNUS"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"jinhanfromNUS"},"content":"import java.io.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jinhanfromNUS"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jinhanfromNUS"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jinhanfromNUS"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jinhanfromNUS"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"jinhanfromNUS"},"content":"class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"jinhanfromNUS"},"content":"    private String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"jinhanfromNUS"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"jinhanfromNUS"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"jinhanfromNUS"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"jinhanfromNUS"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"jinhanfromNUS"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"jinhanfromNUS"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"jinhanfromNUS"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"jinhanfromNUS"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"jinhanfromNUS"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"jinhanfromNUS"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"jinhanfromNUS"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"jinhanfromNUS"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"jinhanfromNUS"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"jinhanfromNUS"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"jinhanfromNUS"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"jinhanfromNUS"},"content":"class TodoTask extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"jinhanfromNUS"},"content":"    public TodoTask(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"jinhanfromNUS"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"jinhanfromNUS"},"content":"    public TodoTask(String description, boolean isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"jinhanfromNUS"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"jinhanfromNUS"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"jinhanfromNUS"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"jinhanfromNUS"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"jinhanfromNUS"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"jinhanfromNUS"},"content":"class DeadlineTask extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"jinhanfromNUS"},"content":"    private LocalDate deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"jinhanfromNUS"},"content":"    public DeadlineTask(String description, LocalDate deadline) {","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"jinhanfromNUS"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"jinhanfromNUS"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":60,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"jinhanfromNUS"},"content":"    public DeadlineTask(String description, LocalDate deadline, boolean isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"jinhanfromNUS"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"jinhanfromNUS"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"jinhanfromNUS"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"jinhanfromNUS"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"jinhanfromNUS"},"content":"        LocalDate tempDeadline \u003d deadline.plusDays(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"jinhanfromNUS"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + tempDeadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"jinhanfromNUS"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":72,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":73,"author":{"gitId":"jinhanfromNUS"},"content":"class EventTask extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":74,"author":{"gitId":"jinhanfromNUS"},"content":"    private LocalDate startTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"jinhanfromNUS"},"content":"    private LocalDate endTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":77,"author":{"gitId":"jinhanfromNUS"},"content":"    public EventTask(String description, LocalDate startTime, LocalDate endTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"jinhanfromNUS"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"jinhanfromNUS"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"jinhanfromNUS"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-01-25"},{"lineNumber":81,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"jinhanfromNUS"},"content":"    public EventTask(String description, LocalDate startTime, LocalDate endTime, boolean isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"jinhanfromNUS"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"jinhanfromNUS"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"jinhanfromNUS"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":89,"author":{"gitId":"jinhanfromNUS"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"jinhanfromNUS"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"jinhanfromNUS"},"content":"        LocalDate tempStartTime \u003d startTime.plusDays(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"jinhanfromNUS"},"content":"        LocalDate tempEndTime \u003d endTime.plusDays(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"jinhanfromNUS"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + tempStartTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" to: \" + tempEndTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"jinhanfromNUS"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"jinhanfromNUS"},"content":"class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"jinhanfromNUS"},"content":"    ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"jinhanfromNUS"},"content":"    Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"jinhanfromNUS"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks, Ui ui) {","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"jinhanfromNUS"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"jinhanfromNUS"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"jinhanfromNUS"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"jinhanfromNUS"},"content":"        return tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"jinhanfromNUS"},"content":"    public int getTaskListSize() {","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"jinhanfromNUS"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"jinhanfromNUS"},"content":"    private boolean isValidTaskIndex(int taskIndex) {","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"jinhanfromNUS"},"content":"        return taskIndex \u003e\u003d 1 \u0026\u0026 taskIndex \u003c\u003d this.tasks.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"jinhanfromNUS"},"content":"    public void addTask(Task newTask){","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"jinhanfromNUS"},"content":"        tasks.add(newTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"jinhanfromNUS"},"content":"        ui.addNewTask(newTask, getTaskListSize());","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"jinhanfromNUS"},"content":"    public void addTaskSilent(Task newTask){","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"jinhanfromNUS"},"content":"        tasks.add(newTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"jinhanfromNUS"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"jinhanfromNUS"},"content":"        if (!isValidTaskIndex(taskIndex)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"jinhanfromNUS"},"content":"            ui.invalidTaskIndex();","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"jinhanfromNUS"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"jinhanfromNUS"},"content":"        Task removedTask \u003d this.tasks.remove(taskIndex - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"jinhanfromNUS"},"content":"        ui.deleteTask(removedTask, getTaskListSize());","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"jinhanfromNUS"},"content":"    public void markTaskAsDone(int taskIndex) {","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"jinhanfromNUS"},"content":"        if (!isValidTaskIndex(taskIndex)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"jinhanfromNUS"},"content":"            ui.invalidTaskIndex();","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"jinhanfromNUS"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"jinhanfromNUS"},"content":"        Task doneTask \u003d this.tasks.get(taskIndex - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"jinhanfromNUS"},"content":"        doneTask.markAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"jinhanfromNUS"},"content":"        ui.markAsDone(doneTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"jinhanfromNUS"},"content":"    public void markTaskAsUndone(int taskIndex) {","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"jinhanfromNUS"},"content":"        if (!isValidTaskIndex(taskIndex)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"jinhanfromNUS"},"content":"            ui.invalidTaskIndex();","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"jinhanfromNUS"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"jinhanfromNUS"},"content":"        Task undoneTask \u003d this.tasks.get(taskIndex - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"jinhanfromNUS"},"content":"        undoneTask.markAsUndone();","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"jinhanfromNUS"},"content":"        ui.markAsUndone(undoneTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"jinhanfromNUS"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"jinhanfromNUS"},"content":"class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"jinhanfromNUS"},"content":"    String filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"jinhanfromNUS"},"content":"    ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"jinhanfromNUS"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"jinhanfromNUS"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":159,"author":{"gitId":"jinhanfromNUS"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":160,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":161,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":162,"author":{"gitId":"jinhanfromNUS"},"content":"    private static boolean isValidDates(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2024-01-31"},{"lineNumber":163,"author":{"gitId":"jinhanfromNUS"},"content":"        return startDate.isBefore(endDate);","lastModifiedDate":"2024-01-31"},{"lineNumber":164,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":165,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":166,"author":{"gitId":"jinhanfromNUS"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromFile() {","lastModifiedDate":"2024-01-31"},{"lineNumber":167,"author":{"gitId":"jinhanfromNUS"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":168,"author":{"gitId":"jinhanfromNUS"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":169,"author":{"gitId":"jinhanfromNUS"},"content":"            System.out.println(\"File path is incorrect... Quitting...\");","lastModifiedDate":"2024-01-31"},{"lineNumber":170,"author":{"gitId":"jinhanfromNUS"},"content":"            return null; // Handle the case where the file doesn\u0027t exist","lastModifiedDate":"2024-01-31"},{"lineNumber":171,"author":{"gitId":"jinhanfromNUS"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":172,"author":{"gitId":"jinhanfromNUS"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2024-01-31"},{"lineNumber":173,"author":{"gitId":"jinhanfromNUS"},"content":"            String line;","lastModifiedDate":"2024-01-31"},{"lineNumber":174,"author":{"gitId":"jinhanfromNUS"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":175,"author":{"gitId":"jinhanfromNUS"},"content":"                if (line.length() \u003c 7) {","lastModifiedDate":"2024-01-31"},{"lineNumber":176,"author":{"gitId":"jinhanfromNUS"},"content":"                    System.out.println(\"Error found: Bad input\");","lastModifiedDate":"2024-01-31"},{"lineNumber":177,"author":{"gitId":"jinhanfromNUS"},"content":"                    System.out.println(line);","lastModifiedDate":"2024-01-31"},{"lineNumber":178,"author":{"gitId":"jinhanfromNUS"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":179,"author":{"gitId":"jinhanfromNUS"},"content":"                char taskType \u003d line.charAt(1);","lastModifiedDate":"2024-01-31"},{"lineNumber":180,"author":{"gitId":"jinhanfromNUS"},"content":"                char isDoneX \u003d line.charAt(4);","lastModifiedDate":"2024-01-31"},{"lineNumber":181,"author":{"gitId":"jinhanfromNUS"},"content":"                if (taskType \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2024-01-31"},{"lineNumber":182,"author":{"gitId":"jinhanfromNUS"},"content":"                    String todoDescription \u003d line.substring(7);","lastModifiedDate":"2024-01-31"},{"lineNumber":183,"author":{"gitId":"jinhanfromNUS"},"content":"                    if (isDoneX \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2024-01-31"},{"lineNumber":184,"author":{"gitId":"jinhanfromNUS"},"content":"                        Task newTodo \u003d new TodoTask(todoDescription, true);","lastModifiedDate":"2024-01-31"},{"lineNumber":185,"author":{"gitId":"jinhanfromNUS"},"content":"                        this.tasks.add(newTodo);","lastModifiedDate":"2024-01-31"},{"lineNumber":186,"author":{"gitId":"jinhanfromNUS"},"content":"                    } else if (isDoneX \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2024-01-31"},{"lineNumber":187,"author":{"gitId":"jinhanfromNUS"},"content":"                        Task newTodo \u003d new TodoTask(todoDescription);","lastModifiedDate":"2024-01-31"},{"lineNumber":188,"author":{"gitId":"jinhanfromNUS"},"content":"                        this.tasks.add(newTodo);","lastModifiedDate":"2024-01-31"},{"lineNumber":189,"author":{"gitId":"jinhanfromNUS"},"content":"                    } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":190,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":191,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Error found: Unrecognized todo\u0027s Done.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":192,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"--\u003e \" + line);","lastModifiedDate":"2024-01-31"},{"lineNumber":193,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Removed from list\");","lastModifiedDate":"2024-01-31"},{"lineNumber":194,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":195,"author":{"gitId":"jinhanfromNUS"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":196,"author":{"gitId":"jinhanfromNUS"},"content":"                } else if (taskType \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2024-01-31"},{"lineNumber":197,"author":{"gitId":"jinhanfromNUS"},"content":"                    if (!line.contains(\" (by: \")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":198,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":199,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Error found: Deadline task without a deadline.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":200,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"--\u003e \" + line);","lastModifiedDate":"2024-01-31"},{"lineNumber":201,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Removed from list\");","lastModifiedDate":"2024-01-31"},{"lineNumber":202,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":203,"author":{"gitId":"jinhanfromNUS"},"content":"                        continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":204,"author":{"gitId":"jinhanfromNUS"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":205,"author":{"gitId":"jinhanfromNUS"},"content":"                    String deadlineDescription \u003d line.substring(7, line.indexOf(\" (by: \"));","lastModifiedDate":"2024-01-31"},{"lineNumber":206,"author":{"gitId":"jinhanfromNUS"},"content":"                    Pattern pattern \u003d Pattern.compile(\"\\\\(by: (.*?)\\\\)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":207,"author":{"gitId":"jinhanfromNUS"},"content":"                    Matcher matcher \u003d pattern.matcher(line);","lastModifiedDate":"2024-01-31"},{"lineNumber":208,"author":{"gitId":"jinhanfromNUS"},"content":"                    String deadlineString \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":209,"author":{"gitId":"jinhanfromNUS"},"content":"                    if (matcher.find()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":210,"author":{"gitId":"jinhanfromNUS"},"content":"                        deadlineString \u003d matcher.group(1);","lastModifiedDate":"2024-01-31"},{"lineNumber":211,"author":{"gitId":"jinhanfromNUS"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":212,"author":{"gitId":"jinhanfromNUS"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2024-01-31"},{"lineNumber":213,"author":{"gitId":"jinhanfromNUS"},"content":"                    LocalDate deadline \u003d LocalDate.parse(deadlineString, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":214,"author":{"gitId":"jinhanfromNUS"},"content":"                    if (isDoneX \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2024-01-31"},{"lineNumber":215,"author":{"gitId":"jinhanfromNUS"},"content":"                        Task newDeadline \u003d new DeadlineTask(deadlineDescription, deadline, true);","lastModifiedDate":"2024-01-31"},{"lineNumber":216,"author":{"gitId":"jinhanfromNUS"},"content":"                        this.tasks.add(newDeadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":217,"author":{"gitId":"jinhanfromNUS"},"content":"                    } else if (isDoneX \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2024-01-31"},{"lineNumber":218,"author":{"gitId":"jinhanfromNUS"},"content":"                        Task newDeadline \u003d new DeadlineTask(deadlineDescription, deadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":219,"author":{"gitId":"jinhanfromNUS"},"content":"                        this.tasks.add(newDeadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":220,"author":{"gitId":"jinhanfromNUS"},"content":"                    } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":221,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":222,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Error found: Unrecognized deadline\u0027s Done.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":223,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"--\u003e \" + line);","lastModifiedDate":"2024-01-31"},{"lineNumber":224,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Removed from list\");","lastModifiedDate":"2024-01-31"},{"lineNumber":225,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":226,"author":{"gitId":"jinhanfromNUS"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":227,"author":{"gitId":"jinhanfromNUS"},"content":"                } else if (taskType \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2024-01-31"},{"lineNumber":228,"author":{"gitId":"jinhanfromNUS"},"content":"                    if (!line.contains(\" (from: \") \u0026\u0026 !line.contains(\" to: \")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":229,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":230,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Error found: Event task without a starting time and an ending time.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":231,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"--\u003e \" + line);","lastModifiedDate":"2024-01-31"},{"lineNumber":232,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Removed from list\");","lastModifiedDate":"2024-01-31"},{"lineNumber":233,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":234,"author":{"gitId":"jinhanfromNUS"},"content":"                        continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":235,"author":{"gitId":"jinhanfromNUS"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":236,"author":{"gitId":"jinhanfromNUS"},"content":"                    if (!line.contains(\" (from: \")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":237,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":238,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Error found: Event task without a starting time.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":239,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"--\u003e \" + line);","lastModifiedDate":"2024-01-31"},{"lineNumber":240,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Removed from list\");","lastModifiedDate":"2024-01-31"},{"lineNumber":241,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":242,"author":{"gitId":"jinhanfromNUS"},"content":"                        continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":243,"author":{"gitId":"jinhanfromNUS"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":244,"author":{"gitId":"jinhanfromNUS"},"content":"                    if (!line.contains(\" to: \")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":245,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":246,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Error found: Deadline task without an ending time.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":247,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"--\u003e \" + line);","lastModifiedDate":"2024-01-31"},{"lineNumber":248,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Removed from list\");","lastModifiedDate":"2024-01-31"},{"lineNumber":249,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":250,"author":{"gitId":"jinhanfromNUS"},"content":"                        continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":251,"author":{"gitId":"jinhanfromNUS"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":252,"author":{"gitId":"jinhanfromNUS"},"content":"                    String eventDescription \u003d line.substring(7, line.indexOf(\" (from: \"));","lastModifiedDate":"2024-01-31"},{"lineNumber":253,"author":{"gitId":"jinhanfromNUS"},"content":"                    Pattern pattern \u003d Pattern.compile(\"\\\\(from: (.*?) to: (.*?)\\\\)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":254,"author":{"gitId":"jinhanfromNUS"},"content":"                    Matcher matcher \u003d pattern.matcher(line);","lastModifiedDate":"2024-01-31"},{"lineNumber":255,"author":{"gitId":"jinhanfromNUS"},"content":"                    String startTimeString \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":256,"author":{"gitId":"jinhanfromNUS"},"content":"                    String endTimeString \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":257,"author":{"gitId":"jinhanfromNUS"},"content":"                    if (matcher.find()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":258,"author":{"gitId":"jinhanfromNUS"},"content":"                        startTimeString \u003d matcher.group(1);","lastModifiedDate":"2024-01-31"},{"lineNumber":259,"author":{"gitId":"jinhanfromNUS"},"content":"                        endTimeString \u003d matcher.group(2);","lastModifiedDate":"2024-01-31"},{"lineNumber":260,"author":{"gitId":"jinhanfromNUS"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":261,"author":{"gitId":"jinhanfromNUS"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2024-01-31"},{"lineNumber":262,"author":{"gitId":"jinhanfromNUS"},"content":"                    LocalDate startTime \u003d LocalDate.parse(startTimeString, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":263,"author":{"gitId":"jinhanfromNUS"},"content":"                    LocalDate endTime \u003d LocalDate.parse(endTimeString, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":264,"author":{"gitId":"jinhanfromNUS"},"content":"                    if (!isValidDates(startTime, endTime)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":265,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":266,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Error found: Start time should be earlier than end time.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":267,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(line);","lastModifiedDate":"2024-01-31"},{"lineNumber":268,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Removed from list\");","lastModifiedDate":"2024-01-31"},{"lineNumber":269,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":270,"author":{"gitId":"jinhanfromNUS"},"content":"                        continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":271,"author":{"gitId":"jinhanfromNUS"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":272,"author":{"gitId":"jinhanfromNUS"},"content":"                    if (isDoneX \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2024-01-31"},{"lineNumber":273,"author":{"gitId":"jinhanfromNUS"},"content":"                        Task newEvent \u003d new EventTask(eventDescription, startTime, endTime, true);","lastModifiedDate":"2024-01-31"},{"lineNumber":274,"author":{"gitId":"jinhanfromNUS"},"content":"                        this.tasks.add(newEvent);","lastModifiedDate":"2024-01-31"},{"lineNumber":275,"author":{"gitId":"jinhanfromNUS"},"content":"                    } else if (isDoneX \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2024-01-31"},{"lineNumber":276,"author":{"gitId":"jinhanfromNUS"},"content":"                        Task newEvent \u003d new EventTask(eventDescription, startTime, endTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":277,"author":{"gitId":"jinhanfromNUS"},"content":"                        this.tasks.add(newEvent);","lastModifiedDate":"2024-01-31"},{"lineNumber":278,"author":{"gitId":"jinhanfromNUS"},"content":"                    } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":279,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":280,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Error found: Unrecognized event\u0027s Done.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":281,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"--\u003e \" + line);","lastModifiedDate":"2024-01-31"},{"lineNumber":282,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Removed from list\");","lastModifiedDate":"2024-01-31"},{"lineNumber":283,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":284,"author":{"gitId":"jinhanfromNUS"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":285,"author":{"gitId":"jinhanfromNUS"},"content":"                } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":286,"author":{"gitId":"jinhanfromNUS"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":287,"author":{"gitId":"jinhanfromNUS"},"content":"                    System.out.println(\"Error found: Unrecognized task type (task type should be one of T, D, E).\");","lastModifiedDate":"2024-01-31"},{"lineNumber":288,"author":{"gitId":"jinhanfromNUS"},"content":"                    System.out.println(\"--\u003e \" + line);","lastModifiedDate":"2024-01-31"},{"lineNumber":289,"author":{"gitId":"jinhanfromNUS"},"content":"                    System.out.println(\"Removed from list\");","lastModifiedDate":"2024-01-31"},{"lineNumber":290,"author":{"gitId":"jinhanfromNUS"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":291,"author":{"gitId":"jinhanfromNUS"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":292,"author":{"gitId":"jinhanfromNUS"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":293,"author":{"gitId":"jinhanfromNUS"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":294,"author":{"gitId":"jinhanfromNUS"},"content":"            System.err.println(\"Error loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":295,"author":{"gitId":"jinhanfromNUS"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":296,"author":{"gitId":"jinhanfromNUS"},"content":"        return tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":297,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":298,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":299,"author":{"gitId":"jinhanfromNUS"},"content":"    public void saveTasksToFile(ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":300,"author":{"gitId":"jinhanfromNUS"},"content":"        try (PrintWriter writer \u003d new PrintWriter(new FileWriter(filePath))) {","lastModifiedDate":"2024-01-31"},{"lineNumber":301,"author":{"gitId":"jinhanfromNUS"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":302,"author":{"gitId":"jinhanfromNUS"},"content":"                writer.println(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":303,"author":{"gitId":"jinhanfromNUS"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":304,"author":{"gitId":"jinhanfromNUS"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":305,"author":{"gitId":"jinhanfromNUS"},"content":"            System.err.println(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":306,"author":{"gitId":"jinhanfromNUS"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":307,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":308,"author":{"gitId":"jinhanfromNUS"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":309,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":310,"author":{"gitId":"jinhanfromNUS"},"content":"class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":311,"author":{"gitId":"jinhanfromNUS"},"content":"    String botName;","lastModifiedDate":"2024-01-31"},{"lineNumber":312,"author":{"gitId":"jinhanfromNUS"},"content":"    public Ui(String botName) {","lastModifiedDate":"2024-01-31"},{"lineNumber":313,"author":{"gitId":"jinhanfromNUS"},"content":"        this.botName \u003d botName;","lastModifiedDate":"2024-01-31"},{"lineNumber":314,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":315,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":316,"author":{"gitId":"jinhanfromNUS"},"content":"    public static void messageWithHorizontalLines(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":317,"author":{"gitId":"jinhanfromNUS"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":318,"author":{"gitId":"jinhanfromNUS"},"content":"                message + \"\\n\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":319,"author":{"gitId":"jinhanfromNUS"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2024-01-25"},{"lineNumber":320,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":321,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":322,"author":{"gitId":"jinhanfromNUS"},"content":"    public void sendWelcome() {","lastModifiedDate":"2024-01-31"},{"lineNumber":323,"author":{"gitId":"jinhanfromNUS"},"content":"        String welcomeStr \u003d \" Hello! I\u0027m \" + botName + \"\\n What can I do for you?\";","lastModifiedDate":"2024-01-31"},{"lineNumber":324,"author":{"gitId":"jinhanfromNUS"},"content":"        messageWithHorizontalLines(welcomeStr);","lastModifiedDate":"2024-01-31"},{"lineNumber":325,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":326,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":327,"author":{"gitId":"jinhanfromNUS"},"content":"    public void sendGoodbye() {","lastModifiedDate":"2024-01-31"},{"lineNumber":328,"author":{"gitId":"jinhanfromNUS"},"content":"        String byeStr \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-01-31"},{"lineNumber":329,"author":{"gitId":"jinhanfromNUS"},"content":"        messageWithHorizontalLines(byeStr);","lastModifiedDate":"2024-01-31"},{"lineNumber":330,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":331,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":332,"author":{"gitId":"jinhanfromNUS"},"content":"    public void badUserInput() {","lastModifiedDate":"2024-01-31"},{"lineNumber":333,"author":{"gitId":"jinhanfromNUS"},"content":"        messageWithHorizontalLines(botName + \" does not understand you :((\");","lastModifiedDate":"2024-01-31"},{"lineNumber":334,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":335,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":336,"author":{"gitId":"jinhanfromNUS"},"content":"    public void showTaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":337,"author":{"gitId":"jinhanfromNUS"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":338,"author":{"gitId":"jinhanfromNUS"},"content":"            messageWithHorizontalLines(\"There are no tasks!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":339,"author":{"gitId":"jinhanfromNUS"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":340,"author":{"gitId":"jinhanfromNUS"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-25"},{"lineNumber":341,"author":{"gitId":"jinhanfromNUS"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":342,"author":{"gitId":"jinhanfromNUS"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":343,"author":{"gitId":"jinhanfromNUS"},"content":"                Task task \u003d taskList.get(i);","lastModifiedDate":"2024-01-31"},{"lineNumber":344,"author":{"gitId":"jinhanfromNUS"},"content":"                System.out.println(\" \" + (i + 1) + \".\" + task);","lastModifiedDate":"2024-01-25"},{"lineNumber":345,"author":{"gitId":"jinhanfromNUS"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":346,"author":{"gitId":"jinhanfromNUS"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-25"},{"lineNumber":347,"author":{"gitId":"jinhanfromNUS"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":348,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":349,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":350,"author":{"gitId":"jinhanfromNUS"},"content":"    public void addNewTask(Task addedTask, int taskListSize) {","lastModifiedDate":"2024-01-31"},{"lineNumber":351,"author":{"gitId":"jinhanfromNUS"},"content":"        messageWithHorizontalLines(\"Got it. I have added \" + addedTask + \" into Task List.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":352,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":353,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":354,"author":{"gitId":"jinhanfromNUS"},"content":"    public void deleteTask(Task deletedTask, int taskListSize) {","lastModifiedDate":"2024-01-31"},{"lineNumber":355,"author":{"gitId":"jinhanfromNUS"},"content":"        messageWithHorizontalLines(\"Task has been successfully removed:\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":356,"author":{"gitId":"jinhanfromNUS"},"content":"                                    + \" \" + deletedTask + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":357,"author":{"gitId":"jinhanfromNUS"},"content":"                                    + \"There are \" + taskListSize + \" in the task list currently.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":358,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":359,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":360,"author":{"gitId":"jinhanfromNUS"},"content":"    public void invalidTaskIndex() {","lastModifiedDate":"2024-01-31"},{"lineNumber":361,"author":{"gitId":"jinhanfromNUS"},"content":"        messageWithHorizontalLines(\"Invalid Task Index!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":362,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":363,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":364,"author":{"gitId":"jinhanfromNUS"},"content":"    public void markAsDone(Task doneTask) {","lastModifiedDate":"2024-01-31"},{"lineNumber":365,"author":{"gitId":"jinhanfromNUS"},"content":"        messageWithHorizontalLines(\"Nice! I\u0027ve marked this task as done:\\n\" + \"  \" + doneTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":366,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":367,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":368,"author":{"gitId":"jinhanfromNUS"},"content":"    public void markAsUndone(Task undoneTask) {","lastModifiedDate":"2024-01-31"},{"lineNumber":369,"author":{"gitId":"jinhanfromNUS"},"content":"        messageWithHorizontalLines(\"OK, I\u0027ve marked this task as not done:\\n\" + \"  \" + undoneTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":370,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":371,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":372,"author":{"gitId":"jinhanfromNUS"},"content":"    public void noIndexDeleteTask() {","lastModifiedDate":"2024-01-31"},{"lineNumber":373,"author":{"gitId":"jinhanfromNUS"},"content":"        System.out.println(\"Please provide the task index you want to delete.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":374,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":375,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":376,"author":{"gitId":"jinhanfromNUS"},"content":"    public void noIndexMarkAsDone() {","lastModifiedDate":"2024-01-31"},{"lineNumber":377,"author":{"gitId":"jinhanfromNUS"},"content":"        System.out.println(\"Please provide the task index to mark as done.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":378,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":379,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":380,"author":{"gitId":"jinhanfromNUS"},"content":"    public void noIndexMarkAsUndone() {","lastModifiedDate":"2024-01-31"},{"lineNumber":381,"author":{"gitId":"jinhanfromNUS"},"content":"        System.out.println(\"Please provide the task index to mark as not done.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":382,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":383,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":384,"author":{"gitId":"jinhanfromNUS"},"content":"    public void invalidDateInput() {","lastModifiedDate":"2024-01-31"},{"lineNumber":385,"author":{"gitId":"jinhanfromNUS"},"content":"        System.out.println(\"Error input: Date format is invalid (Date format: YYYY-MM-DD)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":386,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":387,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":388,"author":{"gitId":"jinhanfromNUS"},"content":"    public void insufficientTodoDescription() {","lastModifiedDate":"2024-01-31"},{"lineNumber":389,"author":{"gitId":"jinhanfromNUS"},"content":"        System.out.println(\"Please provide a description for your Todo task.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":390,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":391,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":392,"author":{"gitId":"jinhanfromNUS"},"content":"    public void insufficientDeadline() {","lastModifiedDate":"2024-01-31"},{"lineNumber":393,"author":{"gitId":"jinhanfromNUS"},"content":"        System.out.println(\"Please provide a deadline for your Deadline task.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":394,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":395,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":396,"author":{"gitId":"jinhanfromNUS"},"content":"    public void insufficientEventStartTimeEndTime() {","lastModifiedDate":"2024-01-31"},{"lineNumber":397,"author":{"gitId":"jinhanfromNUS"},"content":"        System.out.println(\"Please provide both starting time and ending time for your event task.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":398,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":399,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":400,"author":{"gitId":"jinhanfromNUS"},"content":"    public void insufficientEventStartTime() {","lastModifiedDate":"2024-01-31"},{"lineNumber":401,"author":{"gitId":"jinhanfromNUS"},"content":"        System.out.println(\"Please provide a starting time for your event task.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":402,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":403,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":404,"author":{"gitId":"jinhanfromNUS"},"content":"    public void insufficientEventEndTime() {","lastModifiedDate":"2024-01-31"},{"lineNumber":405,"author":{"gitId":"jinhanfromNUS"},"content":"        System.out.println(\"Please provide a ending time for your event task.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":406,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":407,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":408,"author":{"gitId":"jinhanfromNUS"},"content":"    public void invalidEventStartingTimeAndEndingTime() {","lastModifiedDate":"2024-01-31"},{"lineNumber":409,"author":{"gitId":"jinhanfromNUS"},"content":"        System.out.println(\"Error input: Start time should be earlier than end time.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":410,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":411,"author":{"gitId":"jinhanfromNUS"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":412,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":413,"author":{"gitId":"jinhanfromNUS"},"content":"class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":414,"author":{"gitId":"jinhanfromNUS"},"content":"    Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":415,"author":{"gitId":"jinhanfromNUS"},"content":"    Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":416,"author":{"gitId":"jinhanfromNUS"},"content":"    TaskList taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":417,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":418,"author":{"gitId":"jinhanfromNUS"},"content":"    public Parser(Ui ui, Storage storage, TaskList taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":419,"author":{"gitId":"jinhanfromNUS"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":420,"author":{"gitId":"jinhanfromNUS"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":421,"author":{"gitId":"jinhanfromNUS"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":422,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":423,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":424,"author":{"gitId":"jinhanfromNUS"},"content":"    private static boolean isValidDate(String dateString) {","lastModifiedDate":"2024-01-31"},{"lineNumber":425,"author":{"gitId":"jinhanfromNUS"},"content":"        String parsedInPattern \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}\";","lastModifiedDate":"2024-01-31"},{"lineNumber":426,"author":{"gitId":"jinhanfromNUS"},"content":"        return Pattern.matches(parsedInPattern, dateString);","lastModifiedDate":"2024-01-31"},{"lineNumber":427,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":428,"author":{"gitId":"jinhanfromNUS"},"content":"    private static boolean isValidDates(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2024-01-31"},{"lineNumber":429,"author":{"gitId":"jinhanfromNUS"},"content":"        return startDate.isBefore(endDate);","lastModifiedDate":"2024-01-31"},{"lineNumber":430,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":431,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":432,"author":{"gitId":"jinhanfromNUS"},"content":"    public void execute(String userInput) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":433,"author":{"gitId":"jinhanfromNUS"},"content":"        String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-25"},{"lineNumber":434,"author":{"gitId":"jinhanfromNUS"},"content":"        String command \u003d words[0].toLowerCase();","lastModifiedDate":"2024-01-25"},{"lineNumber":435,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":436,"author":{"gitId":"jinhanfromNUS"},"content":"        switch (command) {","lastModifiedDate":"2024-01-25"},{"lineNumber":437,"author":{"gitId":"jinhanfromNUS"},"content":"            case \"bye\":","lastModifiedDate":"2024-01-25"},{"lineNumber":438,"author":{"gitId":"jinhanfromNUS"},"content":"                this.storage.saveTasksToFile(taskList.getTasks());","lastModifiedDate":"2024-01-31"},{"lineNumber":439,"author":{"gitId":"jinhanfromNUS"},"content":"                this.ui.sendGoodbye();","lastModifiedDate":"2024-01-31"},{"lineNumber":440,"author":{"gitId":"jinhanfromNUS"},"content":"                return;","lastModifiedDate":"2024-01-25"},{"lineNumber":441,"author":{"gitId":"jinhanfromNUS"},"content":"            case \"list\":","lastModifiedDate":"2024-01-25"},{"lineNumber":442,"author":{"gitId":"jinhanfromNUS"},"content":"                this.ui.showTaskList(taskList.getTasks());","lastModifiedDate":"2024-01-31"},{"lineNumber":443,"author":{"gitId":"jinhanfromNUS"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":444,"author":{"gitId":"jinhanfromNUS"},"content":"            case \"done\":","lastModifiedDate":"2024-01-25"},{"lineNumber":445,"author":{"gitId":"jinhanfromNUS"},"content":"                if (words.length \u003e 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":446,"author":{"gitId":"jinhanfromNUS"},"content":"                    int taskIndex \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2024-01-25"},{"lineNumber":447,"author":{"gitId":"jinhanfromNUS"},"content":"                    this.taskList.markTaskAsDone(taskIndex);","lastModifiedDate":"2024-01-31"},{"lineNumber":448,"author":{"gitId":"jinhanfromNUS"},"content":"                } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":449,"author":{"gitId":"jinhanfromNUS"},"content":"                    this.ui.noIndexMarkAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":450,"author":{"gitId":"jinhanfromNUS"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":451,"author":{"gitId":"jinhanfromNUS"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":452,"author":{"gitId":"jinhanfromNUS"},"content":"            case \"undone\":","lastModifiedDate":"2024-01-25"},{"lineNumber":453,"author":{"gitId":"jinhanfromNUS"},"content":"                if (words.length \u003e 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":454,"author":{"gitId":"jinhanfromNUS"},"content":"                    int taskIndex \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2024-01-25"},{"lineNumber":455,"author":{"gitId":"jinhanfromNUS"},"content":"                    this.taskList.markTaskAsUndone(taskIndex);","lastModifiedDate":"2024-01-31"},{"lineNumber":456,"author":{"gitId":"jinhanfromNUS"},"content":"                } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":457,"author":{"gitId":"jinhanfromNUS"},"content":"                    this.ui.noIndexMarkAsUndone();","lastModifiedDate":"2024-01-31"},{"lineNumber":458,"author":{"gitId":"jinhanfromNUS"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":459,"author":{"gitId":"jinhanfromNUS"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":460,"author":{"gitId":"jinhanfromNUS"},"content":"            case \"delete\":","lastModifiedDate":"2024-01-25"},{"lineNumber":461,"author":{"gitId":"jinhanfromNUS"},"content":"                if (words.length \u003e 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":462,"author":{"gitId":"jinhanfromNUS"},"content":"                    int taskIndex \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2024-01-25"},{"lineNumber":463,"author":{"gitId":"jinhanfromNUS"},"content":"                    this.taskList.deleteTask(taskIndex);","lastModifiedDate":"2024-01-31"},{"lineNumber":464,"author":{"gitId":"jinhanfromNUS"},"content":"                } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":465,"author":{"gitId":"jinhanfromNUS"},"content":"                    this.ui.noIndexDeleteTask();","lastModifiedDate":"2024-01-31"},{"lineNumber":466,"author":{"gitId":"jinhanfromNUS"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":467,"author":{"gitId":"jinhanfromNUS"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":468,"author":{"gitId":"jinhanfromNUS"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-25"},{"lineNumber":469,"author":{"gitId":"jinhanfromNUS"},"content":"                if (words.length \u003e 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":470,"author":{"gitId":"jinhanfromNUS"},"content":"                    String todoDescription \u003d userInput.substring(command.length()).trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":471,"author":{"gitId":"jinhanfromNUS"},"content":"                    Task newTodo \u003d new TodoTask(todoDescription);","lastModifiedDate":"2024-01-25"},{"lineNumber":472,"author":{"gitId":"jinhanfromNUS"},"content":"                    this.taskList.addTask(newTodo);","lastModifiedDate":"2024-01-31"},{"lineNumber":473,"author":{"gitId":"jinhanfromNUS"},"content":"                } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":474,"author":{"gitId":"jinhanfromNUS"},"content":"                    this.ui.insufficientTodoDescription();","lastModifiedDate":"2024-01-31"},{"lineNumber":475,"author":{"gitId":"jinhanfromNUS"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":476,"author":{"gitId":"jinhanfromNUS"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":477,"author":{"gitId":"jinhanfromNUS"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-25"},{"lineNumber":478,"author":{"gitId":"jinhanfromNUS"},"content":"                if (words.length \u003e 1 \u0026\u0026 userInput.contains(\"/by\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":479,"author":{"gitId":"jinhanfromNUS"},"content":"                    String deadlineDescription \u003d userInput.substring(command.length() + 1, userInput.indexOf(\"/by\")).trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":480,"author":{"gitId":"jinhanfromNUS"},"content":"                    String byString \u003d userInput.substring(userInput.indexOf(\"/by\") + 3).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":481,"author":{"gitId":"jinhanfromNUS"},"content":"                    if (!isValidDate(byString)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":482,"author":{"gitId":"jinhanfromNUS"},"content":"                        this.ui.invalidDateInput();","lastModifiedDate":"2024-01-31"},{"lineNumber":483,"author":{"gitId":"jinhanfromNUS"},"content":"                        return;","lastModifiedDate":"2024-01-31"},{"lineNumber":484,"author":{"gitId":"jinhanfromNUS"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":485,"author":{"gitId":"jinhanfromNUS"},"content":"                    LocalDate by \u003d LocalDate.parse(byString);","lastModifiedDate":"2024-01-31"},{"lineNumber":486,"author":{"gitId":"jinhanfromNUS"},"content":"                    Task newDeadline \u003d new DeadlineTask(deadlineDescription, by);","lastModifiedDate":"2024-01-25"},{"lineNumber":487,"author":{"gitId":"jinhanfromNUS"},"content":"                    this.taskList.addTask(newDeadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":488,"author":{"gitId":"jinhanfromNUS"},"content":"                } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":489,"author":{"gitId":"jinhanfromNUS"},"content":"                    this.ui.insufficientDeadline();","lastModifiedDate":"2024-01-31"},{"lineNumber":490,"author":{"gitId":"jinhanfromNUS"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":491,"author":{"gitId":"jinhanfromNUS"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":492,"author":{"gitId":"jinhanfromNUS"},"content":"            case \"event\":","lastModifiedDate":"2024-01-25"},{"lineNumber":493,"author":{"gitId":"jinhanfromNUS"},"content":"                if (words.length \u003e 1 \u0026\u0026 userInput.contains(\"/from\") \u0026\u0026 userInput.contains(\"/to\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":494,"author":{"gitId":"jinhanfromNUS"},"content":"                    String eventDescription \u003d userInput.substring(command.length() + 1, userInput.indexOf(\"/from\")).trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":495,"author":{"gitId":"jinhanfromNUS"},"content":"                    String fromString \u003d userInput.substring(userInput.indexOf(\"/from\") + 5, userInput.indexOf(\"/to\")).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":496,"author":{"gitId":"jinhanfromNUS"},"content":"                    String toString \u003d userInput.substring(userInput.indexOf(\"/to\") + 3).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":497,"author":{"gitId":"jinhanfromNUS"},"content":"                    LocalDate from \u003d LocalDate.parse(fromString);","lastModifiedDate":"2024-01-31"},{"lineNumber":498,"author":{"gitId":"jinhanfromNUS"},"content":"                    LocalDate to \u003d LocalDate.parse(toString);","lastModifiedDate":"2024-01-31"},{"lineNumber":499,"author":{"gitId":"jinhanfromNUS"},"content":"                    if (!isValidDates(from, to)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":500,"author":{"gitId":"jinhanfromNUS"},"content":"                        this.ui.invalidEventStartingTimeAndEndingTime();","lastModifiedDate":"2024-01-31"},{"lineNumber":501,"author":{"gitId":"jinhanfromNUS"},"content":"                        return;","lastModifiedDate":"2024-01-31"},{"lineNumber":502,"author":{"gitId":"jinhanfromNUS"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":503,"author":{"gitId":"jinhanfromNUS"},"content":"                    Task newEvent \u003d new EventTask(eventDescription, from, to);","lastModifiedDate":"2024-01-25"},{"lineNumber":504,"author":{"gitId":"jinhanfromNUS"},"content":"                    this.taskList.addTask(newEvent);","lastModifiedDate":"2024-01-31"},{"lineNumber":505,"author":{"gitId":"jinhanfromNUS"},"content":"                } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":506,"author":{"gitId":"jinhanfromNUS"},"content":"                    this.ui.insufficientEventStartTimeEndTime();","lastModifiedDate":"2024-01-31"},{"lineNumber":507,"author":{"gitId":"jinhanfromNUS"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":508,"author":{"gitId":"jinhanfromNUS"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":509,"author":{"gitId":"jinhanfromNUS"},"content":"            default:","lastModifiedDate":"2024-01-25"},{"lineNumber":510,"author":{"gitId":"jinhanfromNUS"},"content":"                ui.badUserInput();","lastModifiedDate":"2024-01-31"},{"lineNumber":511,"author":{"gitId":"jinhanfromNUS"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":512,"author":{"gitId":"jinhanfromNUS"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":513,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":514,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":515,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":516,"author":{"gitId":"jinhanfromNUS"},"content":"public class Duke {","lastModifiedDate":"2024-01-31"},{"lineNumber":517,"author":{"gitId":"jinhanfromNUS"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":518,"author":{"gitId":"jinhanfromNUS"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":519,"author":{"gitId":"jinhanfromNUS"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":520,"author":{"gitId":"jinhanfromNUS"},"content":"    private Parser parser;","lastModifiedDate":"2024-01-31"},{"lineNumber":521,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":522,"author":{"gitId":"jinhanfromNUS"},"content":"    public Duke(String filePath, String botName) {","lastModifiedDate":"2024-01-31"},{"lineNumber":523,"author":{"gitId":"jinhanfromNUS"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":524,"author":{"gitId":"jinhanfromNUS"},"content":"        this.ui \u003d new Ui(botName);","lastModifiedDate":"2024-01-31"},{"lineNumber":525,"author":{"gitId":"jinhanfromNUS"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d storage.loadTasksFromFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":526,"author":{"gitId":"jinhanfromNUS"},"content":"        this.taskList \u003d new TaskList(loadedTasks, this.ui);","lastModifiedDate":"2024-01-31"},{"lineNumber":527,"author":{"gitId":"jinhanfromNUS"},"content":"        this.parser \u003d new Parser(this.ui, this.storage, this.taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":528,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":529,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":530,"author":{"gitId":"jinhanfromNUS"},"content":"    public void run() throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":531,"author":{"gitId":"jinhanfromNUS"},"content":"        ui.sendWelcome();","lastModifiedDate":"2024-01-31"},{"lineNumber":532,"author":{"gitId":"jinhanfromNUS"},"content":"        boolean isBye \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":533,"author":{"gitId":"jinhanfromNUS"},"content":"        while (true) {","lastModifiedDate":"2024-01-31"},{"lineNumber":534,"author":{"gitId":"jinhanfromNUS"},"content":"            Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":535,"author":{"gitId":"jinhanfromNUS"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":536,"author":{"gitId":"jinhanfromNUS"},"content":"            parser.execute(userInput);","lastModifiedDate":"2024-01-31"},{"lineNumber":537,"author":{"gitId":"jinhanfromNUS"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":538,"author":{"gitId":"jinhanfromNUS"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":539,"author":{"gitId":"jinhanfromNUS"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":540,"author":{"gitId":"jinhanfromNUS"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":541,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":542,"author":{"gitId":"jinhanfromNUS"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":543,"author":{"gitId":"jinhanfromNUS"},"content":"        new Duke(\"./data/duke.txt\", \"Hammy\").run();","lastModifiedDate":"2024-01-31"},{"lineNumber":544,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":545,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jinhanfromNUS":543,"-":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanfromNUS"},"content":"package duke;//package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"jinhanfromNUS"},"content":"import duke.task.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jinhanfromNUS"},"content":"import duke.storage.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jinhanfromNUS"},"content":"import duke.ui.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jinhanfromNUS"},"content":"import duke.parser.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jinhanfromNUS"},"content":"import java.io.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jinhanfromNUS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jinhanfromNUS"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jinhanfromNUS"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jinhanfromNUS"},"content":" * The Duke class serves as the main class for the chatbot.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jinhanfromNUS"},"content":" * It manages the initialization of components and runs the main loop for user interaction.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jinhanfromNUS"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jinhanfromNUS"},"content":"public class Duke {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jinhanfromNUS"},"content":"    /** The storage handler for managing tasks. */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jinhanfromNUS"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jinhanfromNUS"},"content":"    /** The task list containing tasks managed by Duke. */","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jinhanfromNUS"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jinhanfromNUS"},"content":"    /** The user interface for displaying messages to the user. */","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jinhanfromNUS"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jinhanfromNUS"},"content":"    /** The parser for interpreting user commands and executing corresponding actions. */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jinhanfromNUS"},"content":"    private Parser parser;","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jinhanfromNUS"},"content":"     * Constructs a Duke object with the specified file path and bot name.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jinhanfromNUS"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param filePath the file path where tasks are stored","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param botName  the name of the Duke bot","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jinhanfromNUS"},"content":"    public Duke(String filePath, String botName) {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"jinhanfromNUS"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"jinhanfromNUS"},"content":"        this.ui \u003d new Ui(botName);","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"jinhanfromNUS"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d storage.loadTasksFromFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"jinhanfromNUS"},"content":"        this.taskList \u003d new TaskList(loadedTasks, this.ui);","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"jinhanfromNUS"},"content":"        this.parser \u003d new Parser(this.ui, this.storage, this.taskList);","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"jinhanfromNUS"},"content":"     * Runs the program.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"jinhanfromNUS"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"jinhanfromNUS"},"content":"     * @throws IOException if an I/O error occurs during application execution","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"jinhanfromNUS"},"content":"    public void run() throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"jinhanfromNUS"},"content":"        ui.sendWelcome();","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"jinhanfromNUS"},"content":"        boolean isBye \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"jinhanfromNUS"},"content":"        while (true) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"jinhanfromNUS"},"content":"            Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"jinhanfromNUS"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"jinhanfromNUS"},"content":"            parser.execute(userInput);","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"jinhanfromNUS"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"jinhanfromNUS"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"jinhanfromNUS"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"jinhanfromNUS"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"jinhanfromNUS"},"content":"     * The main method for starting the Duke chatbot application.","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"jinhanfromNUS"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param args the command-line arguments (not used)","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"jinhanfromNUS"},"content":"     * @throws IOException if an I/O error occurs during application execution","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"jinhanfromNUS"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"jinhanfromNUS"},"content":"        new Duke(\"./data/duke.txt\", \"Hammy\").run();","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"jinhanfromNUS"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jinhanfromNUS":70}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanfromNUS"},"content":"package duke.parser;//package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"jinhanfromNUS"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jinhanfromNUS"},"content":"import duke.task.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jinhanfromNUS"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jinhanfromNUS"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jinhanfromNUS"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jinhanfromNUS"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jinhanfromNUS"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jinhanfromNUS"},"content":" * The Parser class parses user input and executes corresponding commands.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jinhanfromNUS"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jinhanfromNUS"},"content":"public class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"jinhanfromNUS"},"content":"    Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"jinhanfromNUS"},"content":"    Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"jinhanfromNUS"},"content":"    TaskList taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jinhanfromNUS"},"content":"     * Constructs a Parser object with the specified Ui, Storage, and TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jinhanfromNUS"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param ui        the user interface","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param storage   the storage handler","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param taskList  the task list","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jinhanfromNUS"},"content":"    public Parser(Ui ui, Storage storage, TaskList taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"jinhanfromNUS"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"jinhanfromNUS"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"jinhanfromNUS"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jinhanfromNUS"},"content":"     * Validates if a given string represents a valid date in the format \"yyyy-MM-dd\".","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jinhanfromNUS"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param dateString the string representation of the date","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jinhanfromNUS"},"content":"     * @return true if the string is a valid date, false otherwise","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jinhanfromNUS"},"content":"    private static boolean isValidDate(String dateString) {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"jinhanfromNUS"},"content":"        String parsedInPattern \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}\";","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"jinhanfromNUS"},"content":"        return Pattern.matches(parsedInPattern, dateString);","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"jinhanfromNUS"},"content":"     * Validates if the start date is before the end date.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"jinhanfromNUS"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param startDate the start date","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param endDate   the end date","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"jinhanfromNUS"},"content":"     * @return true if the start date is before the end date, false otherwise","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"jinhanfromNUS"},"content":"    private static boolean isValidDates(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"jinhanfromNUS"},"content":"        return startDate.isBefore(endDate);","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"jinhanfromNUS"},"content":"     * Executes a user command based on the provided input.","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"jinhanfromNUS"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param userInput the user input command","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"jinhanfromNUS"},"content":"     * @throws IOException if an I/O error occurs","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"jinhanfromNUS"},"content":"    public void execute(String userInput) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"jinhanfromNUS"},"content":"        String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"jinhanfromNUS"},"content":"        String command \u003d words[0].toLowerCase();","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"jinhanfromNUS"},"content":"        switch (command) {","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"jinhanfromNUS"},"content":"            case \"bye\":","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"jinhanfromNUS"},"content":"                this.storage.saveTasksToFile(taskList.getTasks());","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"jinhanfromNUS"},"content":"                this.ui.sendGoodbye();","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"jinhanfromNUS"},"content":"                return;","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"jinhanfromNUS"},"content":"            case \"list\":","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"jinhanfromNUS"},"content":"                this.ui.showTaskList(taskList.getTasks());","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"jinhanfromNUS"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"jinhanfromNUS"},"content":"            case \"done\":","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"jinhanfromNUS"},"content":"                if (words.length \u003e 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"jinhanfromNUS"},"content":"                    int taskIndex \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"jinhanfromNUS"},"content":"                    this.taskList.markTaskAsDone(taskIndex);","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"jinhanfromNUS"},"content":"                } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"jinhanfromNUS"},"content":"                    this.ui.noIndexMarkAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"jinhanfromNUS"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"jinhanfromNUS"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"jinhanfromNUS"},"content":"            case \"undone\":","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"jinhanfromNUS"},"content":"                if (words.length \u003e 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"jinhanfromNUS"},"content":"                    int taskIndex \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"jinhanfromNUS"},"content":"                    this.taskList.markTaskAsUndone(taskIndex);","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"jinhanfromNUS"},"content":"                } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"jinhanfromNUS"},"content":"                    this.ui.noIndexMarkAsUndone();","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"jinhanfromNUS"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"jinhanfromNUS"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"jinhanfromNUS"},"content":"            case \"delete\":","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"jinhanfromNUS"},"content":"                if (words.length \u003e 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"jinhanfromNUS"},"content":"                    int taskIndex \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"jinhanfromNUS"},"content":"                    this.taskList.deleteTask(taskIndex);","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"jinhanfromNUS"},"content":"                } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"jinhanfromNUS"},"content":"                    this.ui.noIndexDeleteTask();","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"jinhanfromNUS"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"jinhanfromNUS"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"jinhanfromNUS"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"jinhanfromNUS"},"content":"                if (words.length \u003e 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"jinhanfromNUS"},"content":"                    String todoDescription \u003d userInput.substring(command.length()).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"jinhanfromNUS"},"content":"                    Task newTodo \u003d new TodoTask(todoDescription);","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"jinhanfromNUS"},"content":"                    this.taskList.addTask(newTodo);","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"jinhanfromNUS"},"content":"                } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"jinhanfromNUS"},"content":"                    this.ui.insufficientTodoDescription();","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"jinhanfromNUS"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"jinhanfromNUS"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"jinhanfromNUS"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"jinhanfromNUS"},"content":"                if (words.length \u003e 1 \u0026\u0026 userInput.contains(\"/by\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"jinhanfromNUS"},"content":"                    String deadlineDescription \u003d userInput.substring(command.length() + 1, userInput.indexOf(\"/by\")).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"jinhanfromNUS"},"content":"                    String byString \u003d userInput.substring(userInput.indexOf(\"/by\") + 3).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"jinhanfromNUS"},"content":"                    if (!isValidDate(byString)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"jinhanfromNUS"},"content":"                        this.ui.invalidDateInput();","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"jinhanfromNUS"},"content":"                        return;","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"jinhanfromNUS"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"jinhanfromNUS"},"content":"                    LocalDate by \u003d LocalDate.parse(byString);","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"jinhanfromNUS"},"content":"                    Task newDeadline \u003d new DeadlineTask(deadlineDescription, by);","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"jinhanfromNUS"},"content":"                    this.taskList.addTask(newDeadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"jinhanfromNUS"},"content":"                } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"jinhanfromNUS"},"content":"                    this.ui.insufficientDeadline();","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"jinhanfromNUS"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"jinhanfromNUS"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"jinhanfromNUS"},"content":"            case \"event\":","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"jinhanfromNUS"},"content":"                if (words.length \u003e 1 \u0026\u0026 userInput.contains(\"/from\") \u0026\u0026 userInput.contains(\"/to\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"jinhanfromNUS"},"content":"                    String eventDescription \u003d userInput.substring(command.length() + 1, userInput.indexOf(\"/from\")).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"jinhanfromNUS"},"content":"                    String fromString \u003d userInput.substring(userInput.indexOf(\"/from\") + 5, userInput.indexOf(\"/to\")).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"jinhanfromNUS"},"content":"                    String toString \u003d userInput.substring(userInput.indexOf(\"/to\") + 3).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"jinhanfromNUS"},"content":"                    LocalDate from \u003d LocalDate.parse(fromString);","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"jinhanfromNUS"},"content":"                    LocalDate to \u003d LocalDate.parse(toString);","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"jinhanfromNUS"},"content":"                    if (!isValidDates(from, to)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"jinhanfromNUS"},"content":"                        this.ui.invalidEventStartingTimeAndEndingTime();","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"jinhanfromNUS"},"content":"                        return;","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"jinhanfromNUS"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"jinhanfromNUS"},"content":"                    Task newEvent \u003d new EventTask(eventDescription, from, to);","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"jinhanfromNUS"},"content":"                    this.taskList.addTask(newEvent);","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"jinhanfromNUS"},"content":"                } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"jinhanfromNUS"},"content":"                    this.ui.insufficientEventStartTimeEndTime();","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"jinhanfromNUS"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"jinhanfromNUS"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"jinhanfromNUS"},"content":"            case \"search\":","lastModifiedDate":"2024-02-03"},{"lineNumber":138,"author":{"gitId":"jinhanfromNUS"},"content":"                if (words.length \u003e 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"jinhanfromNUS"},"content":"                    String keyword \u003d userInput.substring(command.length()).trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":140,"author":{"gitId":"jinhanfromNUS"},"content":"                    this.taskList.searchTasks(keyword);","lastModifiedDate":"2024-02-03"},{"lineNumber":141,"author":{"gitId":"jinhanfromNUS"},"content":"                } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":142,"author":{"gitId":"jinhanfromNUS"},"content":"                    this.ui.noKeywordsForSearching();","lastModifiedDate":"2024-02-03"},{"lineNumber":143,"author":{"gitId":"jinhanfromNUS"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"jinhanfromNUS"},"content":"                break;","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"jinhanfromNUS"},"content":"            default:","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"jinhanfromNUS"},"content":"                ui.badUserInput();","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"jinhanfromNUS"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"jinhanfromNUS"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"jinhanfromNUS"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jinhanfromNUS":151}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanfromNUS"},"content":"package duke.storage;//package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"jinhanfromNUS"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jinhanfromNUS"},"content":"import duke.task.EventTask;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jinhanfromNUS"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jinhanfromNUS"},"content":"import duke.task.TodoTask;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jinhanfromNUS"},"content":"import java.io.*;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jinhanfromNUS"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"jinhanfromNUS"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jinhanfromNUS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"jinhanfromNUS"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"jinhanfromNUS"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"jinhanfromNUS"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jinhanfromNUS"},"content":" * The Storage class manages the loading and saving of tasks to a file.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jinhanfromNUS"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jinhanfromNUS"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"jinhanfromNUS"},"content":"    String filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"jinhanfromNUS"},"content":"    ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jinhanfromNUS"},"content":"     * Constructs a Storage object with the given file path.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jinhanfromNUS"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param filePath the file path where tasks are stored","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jinhanfromNUS"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"jinhanfromNUS"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"jinhanfromNUS"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jinhanfromNUS"},"content":"     * Validates if the start date is before the end date.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jinhanfromNUS"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param startDate the start date","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param endDate   the end date","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jinhanfromNUS"},"content":"     * @return true if the start date is before the end date, false otherwise","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"jinhanfromNUS"},"content":"    private static boolean isValidDates(LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"jinhanfromNUS"},"content":"        return startDate.isBefore(endDate);","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"jinhanfromNUS"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"jinhanfromNUS"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"jinhanfromNUS"},"content":"     * @return the list of tasks loaded from the file","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"jinhanfromNUS"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromFile() {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"jinhanfromNUS"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"jinhanfromNUS"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"jinhanfromNUS"},"content":"            System.out.println(\"File path is incorrect... Quitting...\");","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"jinhanfromNUS"},"content":"            return null; // Handle the case where the file doesn\u0027t exist","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"jinhanfromNUS"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"jinhanfromNUS"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"jinhanfromNUS"},"content":"            String line;","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"jinhanfromNUS"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"jinhanfromNUS"},"content":"                if (line.length() \u003c 7) {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"jinhanfromNUS"},"content":"                    System.out.println(\"Error found: Bad input\");","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"jinhanfromNUS"},"content":"                    System.out.println(line);","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"jinhanfromNUS"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"jinhanfromNUS"},"content":"                char taskType \u003d line.charAt(1);","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"jinhanfromNUS"},"content":"                char isDoneX \u003d line.charAt(4);","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"jinhanfromNUS"},"content":"                if (taskType \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"jinhanfromNUS"},"content":"                    String todoDescription \u003d line.substring(7);","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"jinhanfromNUS"},"content":"                    if (isDoneX \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"jinhanfromNUS"},"content":"                        Task newTodo \u003d new TodoTask(todoDescription, true);","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"jinhanfromNUS"},"content":"                        this.tasks.add(newTodo);","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"jinhanfromNUS"},"content":"                    } else if (isDoneX \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"jinhanfromNUS"},"content":"                        Task newTodo \u003d new TodoTask(todoDescription);","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"jinhanfromNUS"},"content":"                        this.tasks.add(newTodo);","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"jinhanfromNUS"},"content":"                    } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Error found: Unrecognized todo\u0027s Done.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"--\u003e \" + line);","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Removed from list\");","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"jinhanfromNUS"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"jinhanfromNUS"},"content":"                } else if (taskType \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"jinhanfromNUS"},"content":"                    if (!line.contains(\" (by: \")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Error found: Deadline task without a deadline.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"--\u003e \" + line);","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Removed from list\");","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"jinhanfromNUS"},"content":"                        continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"jinhanfromNUS"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"jinhanfromNUS"},"content":"                    String deadlineDescription \u003d line.substring(7, line.indexOf(\" (by: \"));","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"jinhanfromNUS"},"content":"                    Pattern pattern \u003d Pattern.compile(\"\\\\(by: (.*?)\\\\)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"jinhanfromNUS"},"content":"                    Matcher matcher \u003d pattern.matcher(line);","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"jinhanfromNUS"},"content":"                    String deadlineString \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"jinhanfromNUS"},"content":"                    if (matcher.find()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"jinhanfromNUS"},"content":"                        deadlineString \u003d matcher.group(1);","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"jinhanfromNUS"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"jinhanfromNUS"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"jinhanfromNUS"},"content":"                    LocalDate deadline \u003d LocalDate.parse(deadlineString, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"jinhanfromNUS"},"content":"                    if (isDoneX \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"jinhanfromNUS"},"content":"                        Task newDeadline \u003d new DeadlineTask(deadlineDescription, deadline, true);","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"jinhanfromNUS"},"content":"                        this.tasks.add(newDeadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"jinhanfromNUS"},"content":"                    } else if (isDoneX \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"jinhanfromNUS"},"content":"                        Task newDeadline \u003d new DeadlineTask(deadlineDescription, deadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"jinhanfromNUS"},"content":"                        this.tasks.add(newDeadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"jinhanfromNUS"},"content":"                    } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Error found: Unrecognized deadline\u0027s Done.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"--\u003e \" + line);","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Removed from list\");","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"jinhanfromNUS"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"jinhanfromNUS"},"content":"                } else if (taskType \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"jinhanfromNUS"},"content":"                    if (!line.contains(\" (from: \") \u0026\u0026 !line.contains(\" to: \")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Error found: Event task without a starting time and an ending time.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"--\u003e \" + line);","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Removed from list\");","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"jinhanfromNUS"},"content":"                        continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"jinhanfromNUS"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"jinhanfromNUS"},"content":"                    if (!line.contains(\" (from: \")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Error found: Event task without a starting time.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"--\u003e \" + line);","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Removed from list\");","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"jinhanfromNUS"},"content":"                        continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"jinhanfromNUS"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"jinhanfromNUS"},"content":"                    if (!line.contains(\" to: \")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Error found: Deadline task without an ending time.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"--\u003e \" + line);","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Removed from list\");","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"jinhanfromNUS"},"content":"                        continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"jinhanfromNUS"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"jinhanfromNUS"},"content":"                    String eventDescription \u003d line.substring(7, line.indexOf(\" (from: \"));","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"jinhanfromNUS"},"content":"                    Pattern pattern \u003d Pattern.compile(\"\\\\(from: (.*?) to: (.*?)\\\\)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"jinhanfromNUS"},"content":"                    Matcher matcher \u003d pattern.matcher(line);","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"jinhanfromNUS"},"content":"                    String startTimeString \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"jinhanfromNUS"},"content":"                    String endTimeString \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"jinhanfromNUS"},"content":"                    if (matcher.find()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"jinhanfromNUS"},"content":"                        startTimeString \u003d matcher.group(1);","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"jinhanfromNUS"},"content":"                        endTimeString \u003d matcher.group(2);","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"jinhanfromNUS"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"jinhanfromNUS"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"jinhanfromNUS"},"content":"                    LocalDate startTime \u003d LocalDate.parse(startTimeString, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"jinhanfromNUS"},"content":"                    LocalDate endTime \u003d LocalDate.parse(endTimeString, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"jinhanfromNUS"},"content":"                    if (!isValidDates(startTime, endTime)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Error found: Start time should be earlier than end time.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(line);","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Removed from list\");","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"jinhanfromNUS"},"content":"                        continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"jinhanfromNUS"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"jinhanfromNUS"},"content":"                    if (isDoneX \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"jinhanfromNUS"},"content":"                        Task newEvent \u003d new EventTask(eventDescription, startTime, endTime, true);","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"jinhanfromNUS"},"content":"                        this.tasks.add(newEvent);","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"jinhanfromNUS"},"content":"                    } else if (isDoneX \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"jinhanfromNUS"},"content":"                        Task newEvent \u003d new EventTask(eventDescription, startTime, endTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":159,"author":{"gitId":"jinhanfromNUS"},"content":"                        this.tasks.add(newEvent);","lastModifiedDate":"2024-01-31"},{"lineNumber":160,"author":{"gitId":"jinhanfromNUS"},"content":"                    } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":161,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":162,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Error found: Unrecognized event\u0027s Done.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":163,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"--\u003e \" + line);","lastModifiedDate":"2024-01-31"},{"lineNumber":164,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"Removed from list\");","lastModifiedDate":"2024-01-31"},{"lineNumber":165,"author":{"gitId":"jinhanfromNUS"},"content":"                        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":166,"author":{"gitId":"jinhanfromNUS"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":167,"author":{"gitId":"jinhanfromNUS"},"content":"                } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":168,"author":{"gitId":"jinhanfromNUS"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":169,"author":{"gitId":"jinhanfromNUS"},"content":"                    System.out.println(\"Error found: Unrecognized task type (task type should be one of T, D, E).\");","lastModifiedDate":"2024-01-31"},{"lineNumber":170,"author":{"gitId":"jinhanfromNUS"},"content":"                    System.out.println(\"--\u003e \" + line);","lastModifiedDate":"2024-01-31"},{"lineNumber":171,"author":{"gitId":"jinhanfromNUS"},"content":"                    System.out.println(\"Removed from list\");","lastModifiedDate":"2024-01-31"},{"lineNumber":172,"author":{"gitId":"jinhanfromNUS"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":173,"author":{"gitId":"jinhanfromNUS"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":174,"author":{"gitId":"jinhanfromNUS"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":175,"author":{"gitId":"jinhanfromNUS"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":176,"author":{"gitId":"jinhanfromNUS"},"content":"            System.err.println(\"Error loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":177,"author":{"gitId":"jinhanfromNUS"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":178,"author":{"gitId":"jinhanfromNUS"},"content":"        return tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":179,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":180,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":181,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":182,"author":{"gitId":"jinhanfromNUS"},"content":"     * Saves tasks to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":183,"author":{"gitId":"jinhanfromNUS"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":184,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param taskList the list of tasks to be saved","lastModifiedDate":"2024-02-03"},{"lineNumber":185,"author":{"gitId":"jinhanfromNUS"},"content":"     * @throws IOException if an I/O error occurs while saving the tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":186,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":187,"author":{"gitId":"jinhanfromNUS"},"content":"    public void saveTasksToFile(ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":188,"author":{"gitId":"jinhanfromNUS"},"content":"        try (PrintWriter writer \u003d new PrintWriter(new FileWriter(filePath))) {","lastModifiedDate":"2024-01-31"},{"lineNumber":189,"author":{"gitId":"jinhanfromNUS"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":190,"author":{"gitId":"jinhanfromNUS"},"content":"                writer.println(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":191,"author":{"gitId":"jinhanfromNUS"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":192,"author":{"gitId":"jinhanfromNUS"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":193,"author":{"gitId":"jinhanfromNUS"},"content":"            System.err.println(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":194,"author":{"gitId":"jinhanfromNUS"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":195,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":196,"author":{"gitId":"jinhanfromNUS"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jinhanfromNUS":196}},{"path":"src/main/java/duke/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanfromNUS"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"jinhanfromNUS"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jinhanfromNUS"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jinhanfromNUS"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jinhanfromNUS"},"content":" * The DeadlineTask class represents a task with a deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jinhanfromNUS"},"content":" * It is a subclass of the Task class.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jinhanfromNUS"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jinhanfromNUS"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jinhanfromNUS"},"content":"    /** The deadline of the task. */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jinhanfromNUS"},"content":"    private LocalDate deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jinhanfromNUS"},"content":"     * Constructs a DeadlineTask object with the given description and deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jinhanfromNUS"},"content":"     * The task is initialized as not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jinhanfromNUS"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param deadline    the deadline of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jinhanfromNUS"},"content":"    public DeadlineTask(String description, LocalDate deadline) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"jinhanfromNUS"},"content":"        super(description);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"jinhanfromNUS"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jinhanfromNUS"},"content":"     * Constructs a DeadlineTask object with the given description, deadline, and status.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jinhanfromNUS"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param deadline    the deadline of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param isDone      the status of the task, true if it is done, false otherwise","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jinhanfromNUS"},"content":"    public DeadlineTask(String description, LocalDate deadline, boolean isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"jinhanfromNUS"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"jinhanfromNUS"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jinhanfromNUS"},"content":"     * Returns a string representation of the DeadlineTask.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"jinhanfromNUS"},"content":"     * The string contains the status (done or not done), description, and deadline of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"jinhanfromNUS"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"jinhanfromNUS"},"content":"     * @return a string representation of the DeadlineTask","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"jinhanfromNUS"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"jinhanfromNUS"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"jinhanfromNUS"},"content":"        LocalDate tempDeadline \u003d deadline.plusDays(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"jinhanfromNUS"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + tempDeadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"jinhanfromNUS"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jinhanfromNUS":50}},{"path":"src/main/java/duke/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanfromNUS"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"jinhanfromNUS"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jinhanfromNUS"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jinhanfromNUS"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jinhanfromNUS"},"content":" * The EventTask class represents a task with a start and end time.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jinhanfromNUS"},"content":" * It is a subclass of the Task class.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jinhanfromNUS"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jinhanfromNUS"},"content":"public class EventTask extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jinhanfromNUS"},"content":"    private LocalDate startTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"jinhanfromNUS"},"content":"    private LocalDate endTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jinhanfromNUS"},"content":"     * Constructs an EventTask object with the given description, start time, and end time.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jinhanfromNUS"},"content":"     * The task is initialized as not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jinhanfromNUS"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param startTime   the start time of the event","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param endTime     the end time of the event","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jinhanfromNUS"},"content":"    public EventTask(String description, LocalDate startTime, LocalDate endTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"jinhanfromNUS"},"content":"        super(description);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"jinhanfromNUS"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"jinhanfromNUS"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jinhanfromNUS"},"content":"     * Constructs an EventTask object with the given description, start time, end time, and status.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jinhanfromNUS"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param startTime   the start time of the event","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param endTime     the end time of the event","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param isDone      the status of the task, true if it is done, false otherwise","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jinhanfromNUS"},"content":"    public EventTask(String description, LocalDate startTime, LocalDate endTime, boolean isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"jinhanfromNUS"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"jinhanfromNUS"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"jinhanfromNUS"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"jinhanfromNUS"},"content":"     * Returns a string representation of the EventTask.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"jinhanfromNUS"},"content":"     * The string contains the status (done or not done), description, start time, and end time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"jinhanfromNUS"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"jinhanfromNUS"},"content":"     * @return a string representation of the EventTask","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"jinhanfromNUS"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"jinhanfromNUS"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"jinhanfromNUS"},"content":"        LocalDate tempStartTime \u003d startTime.plusDays(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"jinhanfromNUS"},"content":"        LocalDate tempEndTime \u003d endTime.plusDays(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"jinhanfromNUS"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + tempStartTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" to: \" + tempEndTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"jinhanfromNUS"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jinhanfromNUS":54}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanfromNUS"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"jinhanfromNUS"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jinhanfromNUS"},"content":" * The Task class represents a task with a description and a boolean indicating whether it is done.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jinhanfromNUS"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jinhanfromNUS"},"content":"public class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jinhanfromNUS"},"content":"    private String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jinhanfromNUS"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jinhanfromNUS"},"content":"     * Constructs a Task object with the given description.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jinhanfromNUS"},"content":"     * The task is initialized as not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jinhanfromNUS"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jinhanfromNUS"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"jinhanfromNUS"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"jinhanfromNUS"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jinhanfromNUS"},"content":"     * Constructs a Task object with the given description and status.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jinhanfromNUS"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param isDone      the status of the task, true if it is done, false otherwise","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jinhanfromNUS"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"jinhanfromNUS"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"jinhanfromNUS"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jinhanfromNUS"},"content":"     * Marks the task as done by setting isDone to true.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jinhanfromNUS"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"jinhanfromNUS"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jinhanfromNUS"},"content":"     * Marks the task as undone by setting isDone to false.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"jinhanfromNUS"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"jinhanfromNUS"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"jinhanfromNUS"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"jinhanfromNUS"},"content":"     * The string contains the isDone and the description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"jinhanfromNUS"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"jinhanfromNUS"},"content":"     * @return a string representation of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"jinhanfromNUS"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"jinhanfromNUS"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"jinhanfromNUS"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"jinhanfromNUS"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jinhanfromNUS":57}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanfromNUS"},"content":"package duke.task;//package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"jinhanfromNUS"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jinhanfromNUS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jinhanfromNUS"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jinhanfromNUS"},"content":"    ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"jinhanfromNUS"},"content":"    Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jinhanfromNUS"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks, Ui ui) {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"jinhanfromNUS"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"jinhanfromNUS"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"jinhanfromNUS"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"jinhanfromNUS"},"content":"        return tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"jinhanfromNUS"},"content":"    public int getTaskListSize() {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"jinhanfromNUS"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"jinhanfromNUS"},"content":"    private boolean isValidTaskIndex(int taskIndex) {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"jinhanfromNUS"},"content":"        return taskIndex \u003e\u003d 1 \u0026\u0026 taskIndex \u003c\u003d this.tasks.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"jinhanfromNUS"},"content":"    public void addTask(Task newTask){","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"jinhanfromNUS"},"content":"        tasks.add(newTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"jinhanfromNUS"},"content":"        ui.addNewTask(newTask, getTaskListSize());","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"jinhanfromNUS"},"content":"    public void addTaskSilent(Task newTask){","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"jinhanfromNUS"},"content":"        tasks.add(newTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"jinhanfromNUS"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"jinhanfromNUS"},"content":"        if (!isValidTaskIndex(taskIndex)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"jinhanfromNUS"},"content":"            ui.invalidTaskIndex();","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"jinhanfromNUS"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"jinhanfromNUS"},"content":"        Task removedTask \u003d this.tasks.remove(taskIndex - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"jinhanfromNUS"},"content":"        ui.deleteTask(removedTask, getTaskListSize());","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"jinhanfromNUS"},"content":"    public void markTaskAsDone(int taskIndex) {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"jinhanfromNUS"},"content":"        if (!isValidTaskIndex(taskIndex)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"jinhanfromNUS"},"content":"            ui.invalidTaskIndex();","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"jinhanfromNUS"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"jinhanfromNUS"},"content":"        Task doneTask \u003d this.tasks.get(taskIndex - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"jinhanfromNUS"},"content":"        doneTask.markAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"jinhanfromNUS"},"content":"        ui.markAsDone(doneTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"jinhanfromNUS"},"content":"    public void markTaskAsUndone(int taskIndex) {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"jinhanfromNUS"},"content":"        if (!isValidTaskIndex(taskIndex)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"jinhanfromNUS"},"content":"            ui.invalidTaskIndex();","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"jinhanfromNUS"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"jinhanfromNUS"},"content":"        Task undoneTask \u003d this.tasks.get(taskIndex - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"jinhanfromNUS"},"content":"        undoneTask.markAsUndone();","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"jinhanfromNUS"},"content":"        ui.markAsUndone(undoneTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"jinhanfromNUS"},"content":"    public void searchTasks(String keyword) {","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"jinhanfromNUS"},"content":"        // Search for tasks containing the specified keyword","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"jinhanfromNUS"},"content":"        int currentIndex \u003d 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"jinhanfromNUS"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"jinhanfromNUS"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"jinhanfromNUS"},"content":"            String lowerCasedTasks \u003d task.toString().toLowerCase();","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"jinhanfromNUS"},"content":"            if (lowerCasedTasks.contains(keyword.toLowerCase())) {","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"jinhanfromNUS"},"content":"                System.out.println(currentIndex + \". \" + task.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"jinhanfromNUS"},"content":"                currentIndex +\u003d 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"jinhanfromNUS"},"content":"                isFound \u003d true;","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"jinhanfromNUS"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"jinhanfromNUS"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"jinhanfromNUS"},"content":"        if (!isFound) {","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"jinhanfromNUS"},"content":"            this.ui.noMatchingTasks(keyword);","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"jinhanfromNUS"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"jinhanfromNUS"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jinhanfromNUS":79}},{"path":"src/main/java/duke/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanfromNUS"},"content":"package duke.task;//package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"jinhanfromNUS"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jinhanfromNUS"},"content":" * The TodoTask class represents a simple to-do task.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jinhanfromNUS"},"content":" * It is a subclass of the Task class.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jinhanfromNUS"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jinhanfromNUS"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jinhanfromNUS"},"content":"     * Constructs a TodoTask object with the given description.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jinhanfromNUS"},"content":"     * The task is initialized as not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jinhanfromNUS"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jinhanfromNUS"},"content":"    public TodoTask(String description) {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"jinhanfromNUS"},"content":"        super(description);","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jinhanfromNUS"},"content":"     * Constructs a TodoTask object with the given description and status.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jinhanfromNUS"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param isDone      the status of the task, true if it is done, false otherwise","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jinhanfromNUS"},"content":"    public TodoTask(String description, boolean isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"jinhanfromNUS"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jinhanfromNUS"},"content":"     * Returns a string representation of the TodoTask.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jinhanfromNUS"},"content":"     * The string contains the status (done or not done) and the description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jinhanfromNUS"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jinhanfromNUS"},"content":"     * @return a string representation of the TodoTask","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jinhanfromNUS"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"jinhanfromNUS"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"jinhanfromNUS"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"jinhanfromNUS"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jinhanfromNUS":39}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanfromNUS"},"content":"package duke.ui;//package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"jinhanfromNUS"},"content":"import duke.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"jinhanfromNUS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"jinhanfromNUS"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jinhanfromNUS"},"content":" * The Ui class manages user interface interactions and displays messages to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jinhanfromNUS"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jinhanfromNUS"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"jinhanfromNUS"},"content":"    /** The name of the chat bot. */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jinhanfromNUS"},"content":"    String botName;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jinhanfromNUS"},"content":"     * Constructs a Ui object with the specified bot name.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jinhanfromNUS"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param botName the name of the bot","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jinhanfromNUS"},"content":"    public Ui(String botName) {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"jinhanfromNUS"},"content":"        this.botName \u003d botName;","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jinhanfromNUS"},"content":"     * Displays a message with horizontal lines above and below it.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jinhanfromNUS"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param message the message to be displayed","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jinhanfromNUS"},"content":"    public static void messageWithHorizontalLines(String message) {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"jinhanfromNUS"},"content":"        System.out.println(\"____________________________________________________________\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"jinhanfromNUS"},"content":"                message + \"\\n\" +","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"jinhanfromNUS"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jinhanfromNUS"},"content":"     * Sends a welcome message to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jinhanfromNUS"},"content":"     * Can alter welcomeStr","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jinhanfromNUS"},"content":"    public void sendWelcome() {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"jinhanfromNUS"},"content":"        String welcomeStr \u003d \" Hello! I\u0027m \" + botName + \"\\n What can I do for you?\";","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"jinhanfromNUS"},"content":"        messageWithHorizontalLines(welcomeStr);","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"jinhanfromNUS"},"content":"     * Sends a goodbye message to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"jinhanfromNUS"},"content":"     * Can alter byeStr","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"jinhanfromNUS"},"content":"    public void sendGoodbye() {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"jinhanfromNUS"},"content":"        String byeStr \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"jinhanfromNUS"},"content":"        messageWithHorizontalLines(byeStr);","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"jinhanfromNUS"},"content":"     * Sends this when user input is not unrecognized.","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"jinhanfromNUS"},"content":"    public void badUserInput() {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"jinhanfromNUS"},"content":"        messageWithHorizontalLines(botName + \" does not understand you :((\");","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"jinhanfromNUS"},"content":"     * Sends the list of current tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"jinhanfromNUS"},"content":"     * Also sends the amount of tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"jinhanfromNUS"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"jinhanfromNUS"},"content":"     * @param taskList the task lists","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"jinhanfromNUS"},"content":"    public void showTaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"jinhanfromNUS"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"jinhanfromNUS"},"content":"            messageWithHorizontalLines(\"There are no tasks!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"jinhanfromNUS"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"jinhanfromNUS"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"jinhanfromNUS"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"jinhanfromNUS"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"jinhanfromNUS"},"content":"                Task task \u003d taskList.get(i);","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"jinhanfromNUS"},"content":"                System.out.println(\" \" + (i + 1) + \".\" + task);","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"jinhanfromNUS"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"jinhanfromNUS"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"jinhanfromNUS"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"jinhanfromNUS"},"content":"    public void addNewTask(Task addedTask, int taskListSize) {","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"jinhanfromNUS"},"content":"        messageWithHorizontalLines(\"Got it. I have added \" + addedTask + \" into Task List.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"jinhanfromNUS"},"content":"    public void deleteTask(Task deletedTask, int taskListSize) {","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"jinhanfromNUS"},"content":"        messageWithHorizontalLines(\"Task has been successfully removed:\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"jinhanfromNUS"},"content":"                                    + \" \" + deletedTask + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"jinhanfromNUS"},"content":"                                    + \"There are \" + taskListSize + \" in the task list currently.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"jinhanfromNUS"},"content":"    public void invalidTaskIndex() {","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"jinhanfromNUS"},"content":"        messageWithHorizontalLines(\"Invalid Task Index!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"jinhanfromNUS"},"content":"    public void markAsDone(Task doneTask) {","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"jinhanfromNUS"},"content":"        messageWithHorizontalLines(\"Nice! I\u0027ve marked this task as done:\\n\" + \"  \" + doneTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"jinhanfromNUS"},"content":"    public void markAsUndone(Task undoneTask) {","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"jinhanfromNUS"},"content":"        messageWithHorizontalLines(\"OK, I\u0027ve marked this task as not done:\\n\" + \"  \" + undoneTask);","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"jinhanfromNUS"},"content":"     * Sends when user enter invalid index","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"jinhanfromNUS"},"content":"    public void noIndexDeleteTask() {","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"jinhanfromNUS"},"content":"        System.out.println(\"Please provide the task index you want to delete.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"jinhanfromNUS"},"content":"     * Sends when user enter invalid index","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"jinhanfromNUS"},"content":"    public void noIndexMarkAsDone() {","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"jinhanfromNUS"},"content":"        System.out.println(\"Please provide the task index to mark as done.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":114,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"jinhanfromNUS"},"content":"     * Sends when user enter invalid index","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":118,"author":{"gitId":"jinhanfromNUS"},"content":"    public void noIndexMarkAsUndone() {","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"jinhanfromNUS"},"content":"        System.out.println(\"Please provide the task index to mark as not done.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"jinhanfromNUS"},"content":"     * Sends when user enter invalid date format","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"jinhanfromNUS"},"content":"    public void invalidDateInput() {","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"jinhanfromNUS"},"content":"        System.out.println(\"Error input: Date format is invalid (Date format: YYYY-MM-DD)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"jinhanfromNUS"},"content":"    public void insufficientTodoDescription() {","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"jinhanfromNUS"},"content":"        System.out.println(\"Please provide a description for your Todo task.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"jinhanfromNUS"},"content":"    public void insufficientDeadline() {","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"jinhanfromNUS"},"content":"        System.out.println(\"Please provide a deadline for your Deadline task.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"jinhanfromNUS"},"content":"    public void insufficientEventStartTimeEndTime() {","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"jinhanfromNUS"},"content":"        System.out.println(\"Please provide both starting time and ending time for your event task.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"jinhanfromNUS"},"content":"    public void insufficientEventStartTime() {","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"jinhanfromNUS"},"content":"        System.out.println(\"Please provide a starting time for your event task.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"jinhanfromNUS"},"content":"    public void insufficientEventEndTime() {","lastModifiedDate":"2024-01-31"},{"lineNumber":146,"author":{"gitId":"jinhanfromNUS"},"content":"        System.out.println(\"Please provide a ending time for your event task.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"jinhanfromNUS"},"content":"    public void invalidEventStartingTimeAndEndingTime() {","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"jinhanfromNUS"},"content":"        System.out.println(\"Error input: Start time should be earlier than end time.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":153,"author":{"gitId":"jinhanfromNUS"},"content":"    public void noMatchingTasks(String keyword) {","lastModifiedDate":"2024-02-03"},{"lineNumber":154,"author":{"gitId":"jinhanfromNUS"},"content":"        System.out.println(\"There are no tasks matching with \u0027\" + keyword + \"\u0027.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":155,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":156,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":157,"author":{"gitId":"jinhanfromNUS"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":158,"author":{"gitId":"jinhanfromNUS"},"content":"     * Sends when user forgot to enter a keyword when using searching feature.","lastModifiedDate":"2024-02-03"},{"lineNumber":159,"author":{"gitId":"jinhanfromNUS"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":160,"author":{"gitId":"jinhanfromNUS"},"content":"    public void noKeywordsForSearching() {","lastModifiedDate":"2024-02-03"},{"lineNumber":161,"author":{"gitId":"jinhanfromNUS"},"content":"        System.out.println(\"Please provide a keyword to search.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":162,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":163,"author":{"gitId":"jinhanfromNUS"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":164,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"jinhanfromNUS":164}},{"path":"src/test/java/duke/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanfromNUS"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jinhanfromNUS"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jinhanfromNUS"},"content":"import duke.task.*;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jinhanfromNUS"},"content":"import duke.ui.*;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jinhanfromNUS"},"content":"import duke.parser.*;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jinhanfromNUS"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jinhanfromNUS"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jinhanfromNUS"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jinhanfromNUS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jinhanfromNUS"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jinhanfromNUS"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jinhanfromNUS"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jinhanfromNUS"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jinhanfromNUS"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jinhanfromNUS"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jinhanfromNUS"},"content":"    public void setUp() {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jinhanfromNUS"},"content":"        // Create a sample task list and initialize necessary objects","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jinhanfromNUS"},"content":"        ui \u003d new Ui(\"Hammy\");","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jinhanfromNUS"},"content":"        taskList \u003d new TaskList(new ArrayList\u003c\u003e(), ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jinhanfromNUS"},"content":"        parser \u003d new Parser(ui, new Storage(\"./data/duke.txt\"), taskList);","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jinhanfromNUS"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jinhanfromNUS"},"content":"    public void testDeadlineTaskToString1() {","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jinhanfromNUS"},"content":"        // Test the toString() method of DeadlineTask","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jinhanfromNUS"},"content":"        LocalDate deadline \u003d LocalDate.of(2022, 12, 31);","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jinhanfromNUS"},"content":"        Task deadlineTask \u003d new DeadlineTask(\"Submit report\", deadline);","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jinhanfromNUS"},"content":"        String expected \u003d \"[D][ ] Submit report (by: Dec 31 2022)\";","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jinhanfromNUS"},"content":"        assertEquals(expected, deadlineTask.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jinhanfromNUS"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jinhanfromNUS"},"content":"    public void testDeadlineTaskToString2() {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jinhanfromNUS"},"content":"        // Test the toString() method of DeadlineTask","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"jinhanfromNUS"},"content":"        LocalDate deadline \u003d LocalDate.of(2023, 3, 2);","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jinhanfromNUS"},"content":"        Task deadlineTask \u003d new DeadlineTask(\"Finish A-JUnit\", deadline);","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"jinhanfromNUS"},"content":"        String expected \u003d \"[D][ ] Finish A-JUnit (by: Mar 2 2023)\";","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"jinhanfromNUS"},"content":"        assertEquals(expected, deadlineTask.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"jinhanfromNUS"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jinhanfromNUS":44}},{"path":"src/test/java/duke/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanfromNUS"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jinhanfromNUS"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jinhanfromNUS"},"content":"import duke.task.*;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jinhanfromNUS"},"content":"import duke.ui.*;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jinhanfromNUS"},"content":"import duke.parser.*;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jinhanfromNUS"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jinhanfromNUS"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jinhanfromNUS"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jinhanfromNUS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jinhanfromNUS"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jinhanfromNUS"},"content":"public class EventTaskTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jinhanfromNUS"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jinhanfromNUS"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jinhanfromNUS"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jinhanfromNUS"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jinhanfromNUS"},"content":"    public void setUp() {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jinhanfromNUS"},"content":"        // Create a sample task list and initialize necessary objects","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jinhanfromNUS"},"content":"        ui \u003d new Ui(\"Hammy\");","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jinhanfromNUS"},"content":"        taskList \u003d new TaskList(new ArrayList\u003c\u003e(), ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jinhanfromNUS"},"content":"        parser \u003d new Parser(ui, new Storage(\"./data/duke.txt\"), taskList);","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jinhanfromNUS"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jinhanfromNUS"},"content":"    public void testEventTaskToString1() {","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jinhanfromNUS"},"content":"        // Test the toString() method of EventTask","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jinhanfromNUS"},"content":"        LocalDate start \u003d LocalDate.of(2021, 12, 31);","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jinhanfromNUS"},"content":"        LocalDate end \u003d LocalDate.of(2022, 1, 31);","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jinhanfromNUS"},"content":"        Task eventTaskTest1 \u003d new EventTask(\"Submit report\", start, end);","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jinhanfromNUS"},"content":"        String expected \u003d \"[E][ ] Submit report (from: Dec 31 2021 to: Jan 31 2022)\";","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jinhanfromNUS"},"content":"        assertEquals(expected, eventTaskTest1.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jinhanfromNUS"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jinhanfromNUS"},"content":"    public void testEventTaskToString2() {","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"jinhanfromNUS"},"content":"        // Test the toString() method of EventTask","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jinhanfromNUS"},"content":"        LocalDate start \u003d LocalDate.of(2023, 8, 18);","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"jinhanfromNUS"},"content":"        LocalDate end \u003d LocalDate.of(2023, 8, 19);","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"jinhanfromNUS"},"content":"        Task eventTaskTest1 \u003d new EventTask(\"Supernova\", start, end);","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"jinhanfromNUS"},"content":"        String expected \u003d \"[E][ ] Supernova (from: Aug 18 2023 to: Aug 19 2023)\";","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"jinhanfromNUS"},"content":"        assertEquals(expected, eventTaskTest1.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"jinhanfromNUS"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jinhanfromNUS":46}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanfromNUS"},"content":"//package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jinhanfromNUS"},"content":"//","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jinhanfromNUS"},"content":"//import duke.task.*;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jinhanfromNUS"},"content":"//import duke.parser.Parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jinhanfromNUS"},"content":"//import duke.ui.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jinhanfromNUS"},"content":"//import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jinhanfromNUS"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jinhanfromNUS"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jinhanfromNUS"},"content":"//","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jinhanfromNUS"},"content":"//import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jinhanfromNUS"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jinhanfromNUS"},"content":"//","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jinhanfromNUS"},"content":"//import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jinhanfromNUS"},"content":"//","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jinhanfromNUS"},"content":"//public class ParserTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jinhanfromNUS"},"content":"//    private Parser parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jinhanfromNUS"},"content":"//    private Ui mockUi;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jinhanfromNUS"},"content":"//    private Storage mockStorage;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jinhanfromNUS"},"content":"//    private TaskList mockTaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jinhanfromNUS"},"content":"//    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jinhanfromNUS"},"content":"//","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jinhanfromNUS"},"content":"////    taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jinhanfromNUS"},"content":"//","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jinhanfromNUS"},"content":"//    @BeforeEach","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jinhanfromNUS"},"content":"//    public void setUp() {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jinhanfromNUS"},"content":"//        // Initialize mock dependencies","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jinhanfromNUS"},"content":"//        mockUi \u003d new Ui(\"TestUser\");","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jinhanfromNUS"},"content":"//        mockStorage \u003d new Storage(\"./data/test.txt\");","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jinhanfromNUS"},"content":"//        mockTaskList \u003d new TaskList(taskList, mockUi);","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jinhanfromNUS"},"content":"//","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jinhanfromNUS"},"content":"//        // Create the Parser object with mock dependencies","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jinhanfromNUS"},"content":"//        parser \u003d new Parser(mockUi, mockStorage, mockTaskList);","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jinhanfromNUS"},"content":"//    }","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jinhanfromNUS"},"content":"//","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jinhanfromNUS"},"content":"//    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jinhanfromNUS"},"content":"//    public void testExecute_ByeCommand() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jinhanfromNUS"},"content":"//        // Test the execute method for handling the \"bye\" command","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jinhanfromNUS"},"content":"//        String userInput \u003d \"bye\";","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"jinhanfromNUS"},"content":"//        parser.execute(userInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jinhanfromNUS"},"content":"//","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"jinhanfromNUS"},"content":"//        // Ensure that tasks are saved and goodbye message is sent","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"jinhanfromNUS"},"content":"//        assertTrue(mockStorage.isTasksSaved());","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"jinhanfromNUS"},"content":"//        assertTrue(mockUi.isGoodbyeMessageSent());","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"jinhanfromNUS"},"content":"//    }","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"jinhanfromNUS"},"content":"//","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"jinhanfromNUS"},"content":"//    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"jinhanfromNUS"},"content":"//    public void testExecute_ListCommand() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"jinhanfromNUS"},"content":"//        // Test the execute method for handling the \"list\" command","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"jinhanfromNUS"},"content":"//        String userInput \u003d \"list\";","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"jinhanfromNUS"},"content":"//        parser.execute(userInput);","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"jinhanfromNUS"},"content":"//","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"jinhanfromNUS"},"content":"//        // Ensure that the task list is shown","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"jinhanfromNUS"},"content":"//        assertTrue(mockUi.isTaskListShown());","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"jinhanfromNUS"},"content":"//    }","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"jinhanfromNUS"},"content":"//","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"jinhanfromNUS"},"content":"//    // Add more test methods to cover other functionalities of the Parser class","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"jinhanfromNUS"},"content":"//}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jinhanfromNUS":57}},{"path":"src/test/java/duke/TodoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jinhanfromNUS"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"jinhanfromNUS"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"jinhanfromNUS"},"content":"import duke.task.*;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"jinhanfromNUS"},"content":"import duke.ui.*;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"jinhanfromNUS"},"content":"import duke.parser.*;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"jinhanfromNUS"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"jinhanfromNUS"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"jinhanfromNUS"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"jinhanfromNUS"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"jinhanfromNUS"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"jinhanfromNUS"},"content":"public class TodoTaskTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"jinhanfromNUS"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"jinhanfromNUS"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"jinhanfromNUS"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"jinhanfromNUS"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"jinhanfromNUS"},"content":"    public void setUp() {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"jinhanfromNUS"},"content":"        // Create a sample task list and initialize necessary objects","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"jinhanfromNUS"},"content":"        ui \u003d new Ui(\"Hammy\");","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"jinhanfromNUS"},"content":"        taskList \u003d new TaskList(new ArrayList\u003c\u003e(), ui);","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"jinhanfromNUS"},"content":"        parser \u003d new Parser(ui, new Storage(\"./data/duke.txt\"), taskList);","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"jinhanfromNUS"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"jinhanfromNUS"},"content":"    public void testTodoTaskToString1() {","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"jinhanfromNUS"},"content":"        // Test the toString() method of TodoTask","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"jinhanfromNUS"},"content":"        Task todoTask \u003d new TodoTask(\"Buy groceries\");","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"jinhanfromNUS"},"content":"        String expected \u003d \"[T][ ] Buy groceries\";","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"jinhanfromNUS"},"content":"        assertEquals(expected, todoTask.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"jinhanfromNUS"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"jinhanfromNUS"},"content":"    public void testTodoTaskToString2() {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"jinhanfromNUS"},"content":"        // Test the toString() method of TodoTask","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"jinhanfromNUS"},"content":"        Task todoTask \u003d new TodoTask(\"Cook dinner\");","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"jinhanfromNUS"},"content":"        String expected \u003d \"[T][ ] Cook dinner\";","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"jinhanfromNUS"},"content":"        assertEquals(expected, todoTask.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"jinhanfromNUS"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"jinhanfromNUS"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"jinhanfromNUS"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"jinhanfromNUS":43}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jinhanfromNUS"},"content":"hello there","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"jinhanfromNUS":1}}]
