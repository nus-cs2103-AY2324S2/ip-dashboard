[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"# duke.Duke project template","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kinjalagarwal1810":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"repositories {","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"    mavenCentral()","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"dependencies {","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"kinjalagarwal1810":21,"-":42}},{"path":"data/jamie.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"T | 0 | Write JUnit tests","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"kinjalagarwal1810":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":" * The Duke program implements an application that","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":" * manages a list of tasks. It allows adding, deleting,","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":" * and completing tasks, as well as listing all the current tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"public class Duke extends Application {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs a new Duke object.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Initializes the user interface, storage, and task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param filePath The file path to load and save tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"        } catch (IOException ie) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"            System.exit(0);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"        } catch (JamieException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Runs the main loop of the application.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Reads user input and executes commands until the user exits.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void run() throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"                Command command \u003d Parser.parse(userInput);","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"                command.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"            } catch (JamieException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"        ui.showExitMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"        scanner.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"kinjalagarwal1810"},"content":"        stage.setScene(scene); // Setting the stage to show our screen","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"        stage.show(); // Render the stage.","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"     * The entry point of the application.","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param args The command-line arguments.","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws IOException If an I/O error occurs during the run.","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"kinjalagarwal1810"},"content":"        new Duke(\"data/Jamie.txt\").run();","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"kinjalagarwal1810":83}},{"path":"src/main/java/duke/JamieException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":" * Represents an exception specific to the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":" * This exception is thrown to indicate that an application-specific","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":" * error has occurred, typically due to incorrect user input or invalid","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":" * operations in the context of the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"public class JamieException extends Exception {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs a new JamieException with the specified detail message.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"     * The detail message is saved for later retrieval by the Throwable.getMessage() method.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param message The detail message which provides specific information about the exception.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"    public JamieException(String message) {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"        super(message);","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":20}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.command.*;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.*;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":" * Parser class responsible for interpreting user input and translating it","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":" * into commands that can be executed by the Duke application.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"public class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"    private String userInput;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs a Parser instance with a given user input string.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param userInput The string input by the user to be parsed.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Parser(String userInput) {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Parses the user input and returns the corresponding Command object.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"     * This method interprets the user input and translates it into specific","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"     * commands understood by the Duke application, such as adding or deleting tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param userInput The user input string to be parsed.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return Command object representing the action to be taken.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws JamieException If the user input cannot be understood or is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"    public static Command parse(String userInput) throws JamieException {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"        String[] words \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (words.length \u003c 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new JamieException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"        String command \u003d words[0].toLowerCase();","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"        String details \u003d words.length \u003e 1 ? words[1] : \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"        switch (command) {","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"            return new ExitTaskCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"        case \"list\":","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"            return new ListTasksCommand();","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"        case \"done\":","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"            return new CompleteTaskCommand(Integer.parseInt(details));","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"            return new DeleteTaskCommand(Integer.parseInt(details));","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"            if (details.trim().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"                throw new JamieException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"            return new AddTaskCommand(new ToDo(details));","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"            String[] deadlineDetails \u003d details.split(\" /by \");","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"            if (deadlineDetails.length !\u003d 2","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"                    || deadlineDetails[0].trim().isEmpty() || deadlineDetails[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"                throw new JamieException(\"OOPS!!! Invalid format for deadline. \"","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"                        + \"Please use: deadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"            return new AddTaskCommand(new Deadline(deadlineDetails[0], deadlineDetails[1]));","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"        case \"event\":","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"kinjalagarwal1810"},"content":"            String[] eventDetails \u003d details.split(\" /from \");","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"            if (eventDetails.length !\u003d 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"                throw new JamieException(\"OOPS!!! Invalid format for event. \"","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"                        + \"Please use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"            String[] eventTiming \u003d eventDetails[1].split(\" /to \");","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"            if (eventTiming.length !\u003d 2 || eventTiming[0].trim().isEmpty() || eventTiming[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"                throw new JamieException(\"OOPS!!! Invalid format for event timing. \"","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"kinjalagarwal1810"},"content":"                        + \"Please use: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"            return new AddTaskCommand(new Event(eventDetails[0], eventTiming[0], eventTiming[1]));","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"kinjalagarwal1810"},"content":"        case \"find\":","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"kinjalagarwal1810"},"content":"            return new FindTaskCommand(details);","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"kinjalagarwal1810"},"content":"        default:","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new JamieException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":89}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.File;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":" * Handles the storage of task data to and from a file.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":" * This includes loading tasks from a file when the program starts","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":" * and saving tasks to the file when they are added, deleted, or modified.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"public class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final String file;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"    private static final String FILE_PATH \u003d \"./data/jamie.txt\";","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs a new Storage object.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param file The path of the file where tasks are stored.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Storage(String file) {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.file \u003d file;","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Loads tasks from the specified file into an ArrayList.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"     * If the file does not exist, an empty list is returned.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return An ArrayList containing the loaded Task objects.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws FileNotFoundException If the specified file does not exist.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws JamieException If an error occurs while parsing the file data.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException, JamieException {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"        File file \u003d new File(this.file);","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"            return loadedTasks; // Return an empty list if the file doesn\u0027t exist","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"            String taskString \u003d scanner.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"            String[] splits \u003d taskString.split(\" \\\\| \"); // Splitting each part of the task","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"            switch (splits[0]) {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"            case \"T\": {","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"                Task toAdd \u003d new ToDo(splits[2], splits[1].equals(\"1\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"                loadedTasks.add(toAdd);","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"            case \"E\": {","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"                Task toAdd \u003d new Event(splits[2], splits[3], splits[4], splits[1].equals(\"1\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"                loadedTasks.add(toAdd);","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"            case \"D\": {","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"                Task toAdd \u003d new Deadline(splits[2], splits[3], splits[1].equals(\"1\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"                loadedTasks.add(toAdd);","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"kinjalagarwal1810"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"            default: {","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"                throw new JamieException(\"Error occurred when reading data from storage file.\\n\"","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"                        + \"Therefore, creating a new task list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"kinjalagarwal1810"},"content":"        scanner.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"        return loadedTasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Saves the current list of tasks to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"kinjalagarwal1810"},"content":"     * The tasks are converted into a specific string format before being written to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param tasks The TaskList containing the tasks to be saved.","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws IOException If an I/O error occurs while writing to the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void save(TaskList tasks) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"kinjalagarwal1810"},"content":"        FileWriter writer \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"kinjalagarwal1810"},"content":"        String textToAdd \u003d convertToString((tasks.getTasks()));","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"kinjalagarwal1810"},"content":"        writer.write(textToAdd);","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"kinjalagarwal1810"},"content":"        writer.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Converts a list of tasks into a string format suitable for file storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param taskList The list of Task objects to be converted.","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A string representation of the task list for file storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String convertToString(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"kinjalagarwal1810"},"content":"        StringBuilder textToAdd \u003d new StringBuilder();","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"kinjalagarwal1810"},"content":"        for (Task curr : taskList) {","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"kinjalagarwal1810"},"content":"            if (curr instanceof ToDo) {","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"kinjalagarwal1810"},"content":"                textToAdd.append(curr.toFileString()).append(\"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"kinjalagarwal1810"},"content":"        return textToAdd.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":112}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":" * Represents a list of tasks. This class is responsible for managing tasks,","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":" * including adding, deleting, and completing tasks, as well as retrieving","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":" * information about the tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"public class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Creates an empty TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Creates a TaskList with a pre-existing list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param tasks The initial list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Deletes a task from the task list at the specified index.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param taskIndex The index of the task to be removed.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Marks a task at the specified index as completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param taskIndex The index of the task to be marked as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void completeTask(int taskIndex) {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"            Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"            task.markAsDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"            System.out.println(\"Invalid task index.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Prints all the tasks in the list to the console.","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void listTasks() {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"            System.out.println(\"No tasks to display.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"kinjalagarwal1810"},"content":"            System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"                System.out.println(\" \" + (i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return The size of the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"kinjalagarwal1810"},"content":"    public int getTasksSize() {","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"kinjalagarwal1810"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return The ArrayList of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"kinjalagarwal1810"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"kinjalagarwal1810"},"content":"        return this.tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Loads a list of tasks into the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param loadedTasks The list of tasks to be loaded.","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void loadTasks(List\u003cTask\u003e loadedTasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"kinjalagarwal1810"},"content":"        tasks.addAll(loadedTasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Retrieves a task by its index in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param index The index of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return The task at the specified index, or null if the index is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"kinjalagarwal1810"},"content":"            return tasks.get(index);","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"kinjalagarwal1810"},"content":"        return null;","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":118,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Finds and returns a list of tasks that contain the given keyword in their description.","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A list of tasks that contain the keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"kinjalagarwal1810"},"content":"    public List\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"kinjalagarwal1810"},"content":"        List\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"kinjalagarwal1810"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"kinjalagarwal1810"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"kinjalagarwal1810"},"content":"                matchedTasks.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"kinjalagarwal1810"},"content":"        return matchedTasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":132}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"public class Ui {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"        System.out.println(\"Hello! I\u0027m duke.Duke\\nWhat can I do for you?\");","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"        System.out.println(\"Error: \" + errorMessage);","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"        System.out.println(\"Error loading tasks from file. Starting with an empty task list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void showExitMessage() {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void showTaskList(TaskList tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d tasks.getTasks();","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (taskArrayList.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"            System.out.println(\"The task list is empty.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"            System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"            for (int i \u003d 0; i \u003c taskArrayList.size(); i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"                System.out.println(\" \" + (i + 1) + \". \" + tasks.getTask(i).toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Displays a list of tasks to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void showTaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"            System.out.println(\"No matching tasks found.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"                System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void showNumTasks(TaskList tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"        System.out.println(\"Now you have \" + tasks.getTasksSize() + \" tasks in the list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void showMarkAsDoneMessage(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + task.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String showMarkAsUndoneMessage(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"Ok, I\u0027ve marked this task as not done yet:\\n\" + task.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void showDeleteMessage(Task removedTask, TaskList tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + removedTask.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"        showNumTasks(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void showAddTaskMessage(Task newTask, TaskList tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n \" + newTask.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"        showNumTasks(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":75}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final Task taskToAdd;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs an AddTaskCommand with the specified task to add.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param taskToAdd The task to add.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"    public AddTaskCommand(Task taskToAdd) {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.taskToAdd \u003d taskToAdd;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Executes the command by adding the task to the task list, saving it to storage,","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"     * and displaying a message to indicate the task has been added.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param tasks   The task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param storage The storage for saving the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws IOException If there is an error while saving the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"        tasks.addTask(taskToAdd);","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"        ui.showAddTaskMessage(taskToAdd, tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":40}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":" * An abstract class representing a command to be executed.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"public abstract class Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Executes the command.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param tasks   The task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param storage The storage for saving the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws IOException If there is an error while executing the command.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Marks the command as an exit command.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void exit() {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.isExit \u003d !this.isExit;","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return True if the command is an exit command, false otherwise.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"        return false; // Default implementation, can be overridden by subclasses","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"kinjalagarwal1810":41}},{"path":"src/main/java/duke/command/CompleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":" * Represents a command to mark a task as complete.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"public class CompleteTaskCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final int taskIndex;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs a CompleteTaskCommand with the specified task index.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param taskIndex The index of the task to mark as complete.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"    public CompleteTaskCommand(int taskIndex) {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Executes the command by marking the specified task as complete in the task list,","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"     * saving it to storage, and displaying a message indicating the task has been marked as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param tasks   The task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param storage The storage for saving the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws IOException If there is an error while saving the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"        tasks.completeTask(this.taskIndex - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"        ui.showMarkAsDoneMessage(tasks.getTask(this.taskIndex - 1));","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":38}},{"path":"src/main/java/duke/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final int taskNum;","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs a DeleteTaskCommand with the specified task number.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param taskNum The number of the task to delete.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"    public DeleteTaskCommand(int taskNum) {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Executes the command by deleting the specified task from the task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"     * It also saves the updated task list to storage, and displaying a message","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"     * indicating the task has been deleted.","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param tasks   The task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param ui      The user interface for displaying messages.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param storage The storage for saving the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws IOException If there is an error while saving the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"        assert this.taskNum \u003e 0 : \"Input task number cannot be less than 1\";","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"        assert this.taskNum \u003c\u003d tasks.getTasksSize()","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"                : \"Input task number cannot be more than total number of tasks.\";","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"        Task toDelete \u003d tasks.getTask(this.taskNum - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"        tasks.deleteTask(this.taskNum - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"        ui.showDeleteMessage(toDelete, tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"kinjalagarwal1810":45}},{"path":"src/main/java/duke/command/ExitTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":" * Represents a command to exit the application.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"public class ExitTaskCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Executes the command by marking it as an exit command.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param taskList The task list (not used in this command).","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param ui       The user interface (not used in this command).","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param storage  The storage (not used in this command).","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"        super.exit();","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return True to signal that it\u0027s time to exit the application.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"        return true;","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":31}},{"path":"src/main/java/duke/command/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.command;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.util.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"    private String keyword;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Creates a FindTaskCommand with the specified keyword.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param keyword The keyword to use for finding tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"    public FindTaskCommand(String keyword) {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Executes the find task command. Searches for tasks containing the keyword","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"     * and displays them to the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param tasks   The task list containing the tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param ui      The UI component of the application.","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param storage The storage component of the application.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"        List\u003cTask\u003e foundTasks \u003d tasks.findTasks(keyword);","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"        ui.showTaskList(foundTasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"        return false;","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"kinjalagarwal1810":39}},{"path":"src/main/java/duke/command/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"public class ListTasksCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Executes the command by displaying the list of tasks using the user interface.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param tasks   The task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param ui      The user interface for displaying the list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param storage The storage (not used in this command).","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"        ui.showTaskList(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":23}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.JamieException;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":" * Represents a task with a deadline, which is a subclass of Task.","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"    protected LocalDateTime byDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs a Deadline task with the specified description and deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param by          The deadline in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws JamieException If the date format is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Deadline(String description, String by) throws JamieException {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.byDateTime \u003d parseDateTime(by);","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs a Deadline task with the specified description, deadline, and completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param by          The deadline in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param isDone      True if the task is completed, false otherwise.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws JamieException If the date format is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Deadline(String description, String by, boolean isDone) throws JamieException {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.byDateTime \u003d parseDateTime(by);","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Parses the deadline date and time from the given string.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param by The deadline in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return The parsed LocalDateTime.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @throws JamieException If the date format is invalid.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"    private LocalDateTime parseDateTime(String by) throws JamieException {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"            return LocalDateTime.parse(by, formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"            throw new JamieException(\"Invalid date format. Please use \u0027dd/MM/yyyy HHmm\u0027.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns the deadline date and time.","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return The deadline date and time.","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"        return this.byDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns a string representation of the Deadline task.","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A string in the format \"[D][Status] Description (by: Deadline)\".","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"                + \" (by: \" + byDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns a string representation of the Deadline task for saving to a file.","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A string in the format \"D | Status | Description | Deadline\".","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"D | \" + (getIsDone() ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \"","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"kinjalagarwal1810"},"content":"                + byDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":86}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":" * Represents an event task with a start and end time, which is a subclass of Task.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"    protected LocalDateTime fromDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"    protected LocalDateTime toDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs an Event task with the specified description, start time, and end time.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param from        The start time in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param to          The end time in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"        super(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.fromDateTime \u003d parseDateTime(from);","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.toDateTime \u003d parseDateTime(to);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs an Event task with the specified description, start time, end time, and completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param from        The start time in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param to          The end time in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param isDone      True if the event is completed, false otherwise.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Event(String description, String from, String to, boolean isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.fromDateTime \u003d parseDateTime(from);","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.toDateTime \u003d parseDateTime(to);","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Parses the date and time from the given string.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param dateTime The date and time in the format \"dd/MM/yyyy HHmm\".","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return The parsed LocalDateTime.","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"    private LocalDateTime parseDateTime(String dateTime) {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"        return LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns the start time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return The start time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"        return this.fromDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns the end time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return The end time of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"        return this.toDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns a string representation of the Event task.","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A string in the format \"[E][Status] Description (from: Start Time to: End Time)\".","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"kinjalagarwal1810"},"content":"                + \" (from: \" + fromDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"))","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"                + \" to: \" + toDateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns a string representation of the Event task for saving to a file.","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A string in the format \"E | Status | Description | Start Time | End Time\".","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"E | \" + (getIsDone() ? \"1\" : \"0\") + \" | \" + getDescription() + \" | \"","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"kinjalagarwal1810"},"content":"                + fromDateTime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\")) + \" | \"","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"kinjalagarwal1810"},"content":"                + toDateTime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":94}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":" * An abstract class representing a task.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"    private final String description;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs a Task with the specified description.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs a Task with the specified description and completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"        return this.description;","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return True if the task is completed, false otherwise.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns a status icon for the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return \"X\" if the task is done, \" \" (a space) if the task is not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"kinjalagarwal1810"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"kinjalagarwal1810"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"kinjalagarwal1810"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A string containing the task type, status, and description.","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns a string representation of the task for saving to a file (to be overridden by subclasses).","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A formatted string for saving the task to a file.","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"filestring\";","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":92}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke.task;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":" * Represents a to-do task that can be added to the task list.","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs a ToDo task with the specified description.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"        super(description.isBlank() ? \"Default Description\" : description);","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Constructs a ToDo task with the specified description and completion status.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param description The description of the to-do task.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @param isDone      The completion status of the to-do task.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"        super(description, isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns a string representation of the ToDo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A string containing the task type, status, and description.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String toString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"kinjalagarwal1810"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"kinjalagarwal1810"},"content":"     * Returns a string representation of the ToDo task for saving to a file.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"kinjalagarwal1810"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"kinjalagarwal1810"},"content":"     * @return A formatted string for saving the ToDo task to a file.","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"kinjalagarwal1810"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"kinjalagarwal1810"},"content":"    public String toFileString() {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"kinjalagarwal1810"},"content":"        return \"T | \" + (getIsDone() ? \"1\" : \"0\") + \" | \" + getDescription();","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"kinjalagarwal1810":47}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"//import duke.task.*;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"import duke.task.ToDo;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"class StorageTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"    @TempDir","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"    Path tempDir;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"    void save() {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"        Path tempFile \u003d tempDir.resolve(\"temp.txt\");","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"kinjalagarwal1810"},"content":"        Storage storage \u003d new Storage(tempFile.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"kinjalagarwal1810"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"kinjalagarwal1810"},"content":"        taskList.addTask(new ToDo(\"Write JUnit tests\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Handle or declare the potential IOException","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"kinjalagarwal1810"},"content":"            try {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"kinjalagarwal1810"},"content":"                storage.save(taskList);","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"kinjalagarwal1810"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"kinjalagarwal1810"},"content":"                // Handle the IOException","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"kinjalagarwal1810"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"kinjalagarwal1810"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"kinjalagarwal1810"},"content":"            // Remove the catch block for JamieException if it\u0027s not thrown by storage.save","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"kinjalagarwal1810"},"content":"        });","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"kinjalagarwal1810"},"content":"        // Additional code to check the file\u0027s contents can be added here","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"kinjalagarwal1810":36}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"        import duke.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"        import duke.task.ToDo;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"        import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"        import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"class TaskListTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"kinjalagarwal1810"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"kinjalagarwal1810"},"content":"    void addTask() {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"kinjalagarwal1810"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"kinjalagarwal1810"},"content":"        Task task \u003d new ToDo(\"Read book\");","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"kinjalagarwal1810"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"kinjalagarwal1810"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertEquals(1, taskList.getTasksSize()); // Assuming getTasksSize() returns the number of tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"kinjalagarwal1810"},"content":"        assertEquals(task, taskList.getTask(0)); // Assuming getTask(0) returns the first task","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"kinjalagarwal1810"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"kinjalagarwal1810":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kinjalagarwal1810"},"content":"todo borrow book","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"kinjalagarwal1810"},"content":"todo buy groceries","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"kinjalagarwal1810"},"content":"event project meeting /from 7pm /to 8pm","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"kinjalagarwal1810"},"content":"deadline assignment /by sun 5pm","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"kinjalagarwal1810"},"content":"event dinner /from 6pm /to 10pm","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"kinjalagarwal1810"},"content":"mark 2","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"kinjalagarwal1810"},"content":"mark 3","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"kinjalagarwal1810"},"content":"list","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"kinjalagarwal1810":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"kinjalagarwal1810"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kinjalagarwal1810":1,"-":20}}]
