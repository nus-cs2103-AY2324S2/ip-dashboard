[{"path":"data/chronos.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"E | 1 | concert | 16 Feb 2024 18:00 | 16 Feb 2024 20:00","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"D | 1 | return library book | 22 Sep 2024 15:00","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"triciiaaa":2}},{"path":"src/main/java/Chronos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"import exception.ChronosException;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"import tool.Parser;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"import tool.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"import tool.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"import tool.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":" * Represents the main class of the Chronos Task Management System.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"public class Chronos {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"    private static final String FILE_PATH \u003d \"./data/chronos.txt\";","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"    private static Ui ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"    private static Storage storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"    private static TaskList tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a Chronos object with the given file path.","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"     * @param filePath File path of the saved tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"    public Chronos(String filePath) {","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"            tasks \u003d new TaskList(storage.loadTasksFromFile());","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"     * Initialises program and processes user input.","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"     * @throws IOException If there is an exception when processing input/output.","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"     * @throws ChronosException If there are invalid commands provided.","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"    public void run() throws IOException, ChronosException {","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"        ui.greetUser();","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"            String fullCommand \u003d ui.readCommand(sc);","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"            int statusCode \u003d Parser.processCommand(fullCommand, ui, storage, tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"            if (statusCode \u003d\u003d 0) {","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"                break;","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"        sc.close();","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"     * Represents the main function to run the Chronos Task Management System.","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"triciiaaa"},"content":"     * @throws IOException If there is an exception when processing input/output.","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"     * @throws ChronosException If there are invalid commands provided.","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"    public static void main(String[] args) throws IOException, ChronosException {","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"        new Chronos(FILE_PATH).run();","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"triciiaaa":63}},{"path":"src/main/java/ChronosException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":" * Represents the custom exceptions thrown in Chronos Task Management System.","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"public abstract class ChronosException extends Exception {","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"    private static final String DIVIDER \u003d \"        ------------------------------------------------------------\";","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a ChronosException with the specified error message.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"     * @param message Error message shown as exception is thrown.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"    public ChronosException(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"        super(message);","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a InvalidListException with the specified error message.","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"     * @return InvalidListException","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"    public static ChronosException createInvalidListException() {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"        return new InvalidListException(DIVIDER + \"\\n\" + \"        Invalid command. To print the list of tasks, please key in list.\\n\" + DIVIDER);","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a InvalidHelpException with the specified error message.","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"     * @return InvalidHelpException","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"    public static ChronosException createInvalidHelpException() {","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"        return new InvalidHelpException(DIVIDER + \"\\n\" + \"        Invalid command. To view the list of commands, please key in help.\\n\" + DIVIDER);","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a InvalidCommandException with the specified error message.","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"     * @return InvalidCommandException","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"    public static ChronosException createInvalidCommandException() {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"        return new InvalidCommandException(DIVIDER + \"\\n\" + \"        Invalid command. Please try again.\\n\" + DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a MissingTaskNumberException with the specified error message.","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"     * @return MissingTaskNumberException","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"    public static ChronosException createMissingTaskNumberException() {","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"        return new MissingTaskNumberException(DIVIDER + \"\\n\" + \"        Missing task number. Please specify the task number.\\n\" + DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a MissingDescriptionException with the specified error message.","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"triciiaaa"},"content":"     * @return MissingDescriptionException","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"    public static ChronosException createMissingDescriptionException() {","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"        return new MissingDescriptionException (DIVIDER + \"\\n\" + \"        Missing description. Please specify the description of your task.\\n\" + DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a InvalidDeadlineException with the specified error message.","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"     * @return InvalidDeadlineException","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"triciiaaa"},"content":"    public static ChronosException createInvalidDeadlineException() {","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"triciiaaa"},"content":"        return new InvalidDeadlineException (DIVIDER + \"\\n\" + \"        Invalid command. Please include a task name and a valid due date following the syntax of the example below:\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"triciiaaa"},"content":"                \"        e.g. deadline return library book /by 2024-09-22 15:00\\n\" + DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a InvalidEventException with the specified error message.","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"triciiaaa"},"content":"     * @return InvalidEventException","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"triciiaaa"},"content":"    public static ChronosException createInvalidEventException() {","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"triciiaaa"},"content":"        return new InvalidEventException (DIVIDER + \"\\n\" + \"        Invalid command. Please include a task name and a valid due date following the syntax of the example below:\\n\" +","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"triciiaaa"},"content":"                \"        e.g. event concert /from 2024-02-16 18:00 /to 2024-02-16 20:00\\n\" + DIVIDER);","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"triciiaaa":82}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":" * Represents a task with a specified deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"    private static final String TASK_CODE \u003d \"D\";","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"    protected String by;","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a Deadline object with the given description and deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"     * @param description Description of the deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"     * @param by Deadline date and time.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"        super(TASK_CODE, description);","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"     * Returns a string representation of the due date of the Deadline object.","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"     * @return String representation of the due date.","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"    public String getDate() {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"        return this.by;","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"     * Returns a string representation of the Deadline object.","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"     * @return String representation of the deadline.","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"        return \"[\" + TASK_CODE + \"]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"triciiaaa":42}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":" * Represents an event with a start and end date.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"    private static final String TASK_CODE \u003d \"E\";","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"    protected String from;","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"    protected String to;","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"     * Constructs an Event object with the given description, start and end date and time.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"     * @param description Description of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"     * @param from Start date and time.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"     * @param to End date and time.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"        super(TASK_CODE, description);","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"     * Returns a string representation of the start and end date of the Event object.","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"     * @return String representation of the start and end date.","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"    public String getDate() {","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"        return this.from + \" | \" + this.to;","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"     * Returns a string representation of the Event object.","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"     * @return String representation of the event.","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"        return \"[\" + TASK_CODE + \"]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"triciiaaa":45}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import exception.ChronosException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":" * Represents the exception thrown when the command is invalid.","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"public class InvalidCommandException extends ChronosException {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a InvalidCommandException object with the given error message.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"     * @param message Error message of the exception.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"    InvalidCommandException(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"        super(message);","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"triciiaaa":17}},{"path":"src/main/java/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import exception.ChronosException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":" * Represents the exception thrown when the deadline task is invalid.","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"public class InvalidDeadlineException extends ChronosException {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a InvalidDeadlineException object with the given error message.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"     * @param message Error message of the exception.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"    InvalidDeadlineException(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"        super(message);","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"triciiaaa":17}},{"path":"src/main/java/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import exception.ChronosException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":" * Represents the exception thrown when the event details provided are invalid.","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"public class InvalidEventException extends ChronosException {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a InvalidEventException object with the given error message.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"     * @param message Error message of the exception.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"    InvalidEventException(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"        super(message);","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"triciiaaa":17}},{"path":"src/main/java/InvalidHelpException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package exception;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import exception.ChronosException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":" * Represents the exception thrown when the help command is invalid.","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"public class InvalidHelpException extends ChronosException {","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a InvalidHelpException object with the given error message.","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"     * @param message Error message of the exception.","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"    InvalidHelpException(String message) {","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"        super(message);","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"triciiaaa":17}},{"path":"src/main/java/InvalidListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import exception.ChronosException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":" * Represents the exception thrown when the list command is invalid.","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"public class InvalidListException extends ChronosException {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a InvalidListException object with the given error message.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"     * @param message Error message of the exception.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"    InvalidListException(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"        super(message);","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"triciiaaa":17}},{"path":"src/main/java/MissingDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import exception.ChronosException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":" * Represents the exception thrown when the task description is missing.","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"public class MissingDescriptionException extends ChronosException {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a MissingDescriptionException object with the given error message.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"     * @param message Error message of the exception.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"    MissingDescriptionException(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"        super(message);","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"triciiaaa":17}},{"path":"src/main/java/MissingTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package exception;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import exception.ChronosException;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":" * Represents the exception thrown when the task number is missing.","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"public class MissingTaskNumberException extends ChronosException {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a MissingTaskNumberException object with the given error message.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"     * @param message Error message of the exception.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"    MissingTaskNumberException(String message) {","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"        super(message);","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"triciiaaa":17}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package tool;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"import exception.ChronosException;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"import task.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"import tool.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"import tool.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"import tool.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":" * Represents the tool to process user commands.","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"public class Parser {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a Parser object.","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"    private Parser() {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"     * Changes the format the date specified for a deadline or an event.","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"     * @param dateTime Date and time of a deadline or an event in the format yyyy-mm-dd HH:MM.","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"     * @return Formatted date and time.","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"    public static String formatDateTime(String dateTime) {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"        String[] dateTimeArray \u003d dateTime.split(\" \");","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"        String date \u003d dateTimeArray[0];","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"        String time \u003d dateTimeArray[1];","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"        String combinedDateTime \u003d date + \"T\" + time;","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"        return LocalDateTime.parse(combinedDateTime).format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"     * Processes the command provided by the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"     * @param command Command provided by the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"     * @param ui Ui object that deals with the interactions with the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"     * @param storage Storage object that deals with loading tasks from file and saving tasks to file.","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"     * @param tasks TaskList object that contains the task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"     * @return Integer to indicate whether program should terminate.","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"     * @throws IOException If there is an exception when processing input/output.","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"     * @throws ChronosException If there are invalid commands provided.","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"    public static int processCommand(String command, Ui ui, Storage storage, TaskList tasks) throws IOException, ChronosException {","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"        String[] token \u003d command.split(\" \", 2);","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"        if (token[0].equals(\"bye\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"            Ui.bidGoodbye();","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"            return 0;","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"            switch(token[0]) {","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"triciiaaa"},"content":"            case \"help\":","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"triciiaaa"},"content":"                try {","lastModifiedDate":"2024-02-08"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"                    if (token.length !\u003d 1) {","lastModifiedDate":"2024-02-08"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"                        throw ChronosException.createInvalidHelpException();","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"                    } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"                        ui.printHelp();","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"                    }","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"                } catch (exception.InvalidHelpException e){","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"                }","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"                return 1;","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"            case \"list\":","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"triciiaaa"},"content":"                try {","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"triciiaaa"},"content":"                    if (token.length !\u003d 1) {","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"triciiaaa"},"content":"                        throw ChronosException.createInvalidListException();","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"triciiaaa"},"content":"                    } else if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"triciiaaa"},"content":"                        ui.printNoOutstandingTasks();","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"triciiaaa"},"content":"                    } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"triciiaaa"},"content":"                        ui.printTasks(tasks);","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"triciiaaa"},"content":"                    }","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"triciiaaa"},"content":"                } catch (exception.InvalidListException e){","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"triciiaaa"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"triciiaaa"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"triciiaaa"},"content":"                return 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"triciiaaa"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"triciiaaa"},"content":"                try {","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"triciiaaa"},"content":"                    if (token.length !\u003d 2 || token[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"triciiaaa"},"content":"                        throw ChronosException.createMissingTaskNumberException();","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"triciiaaa"},"content":"                    } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"triciiaaa"},"content":"                        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"triciiaaa"},"content":"                            int i \u003d Integer.parseInt(token[1]);","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"triciiaaa"},"content":"                            tasks.markTask(i, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"triciiaaa"},"content":"                            storage.saveTasksToFile(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"triciiaaa"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"triciiaaa"},"content":"                            ui.printNumberFormatException();","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"triciiaaa"},"content":"                        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"triciiaaa"},"content":"                            ui.printIndexOutOfBoundsException();","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"triciiaaa"},"content":"                        }","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"triciiaaa"},"content":"                    }","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"triciiaaa"},"content":"                } catch (exception.MissingTaskNumberException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"triciiaaa"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"triciiaaa"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"triciiaaa"},"content":"                return 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"triciiaaa"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"triciiaaa"},"content":"                try {","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"triciiaaa"},"content":"                    if (token.length !\u003d 2 || token[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"triciiaaa"},"content":"                        throw ChronosException.createMissingTaskNumberException();","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"triciiaaa"},"content":"                    } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"triciiaaa"},"content":"                        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"triciiaaa"},"content":"                            int i \u003d Integer.parseInt(token[1]);","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"triciiaaa"},"content":"                            tasks.unMarkTask(i, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"triciiaaa"},"content":"                            storage.saveTasksToFile(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":108,"author":{"gitId":"triciiaaa"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"triciiaaa"},"content":"                            ui.printNumberFormatException();","lastModifiedDate":"2024-02-07"},{"lineNumber":110,"author":{"gitId":"triciiaaa"},"content":"                        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"triciiaaa"},"content":"                            ui.printIndexOutOfBoundsException();","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"triciiaaa"},"content":"                        }","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"triciiaaa"},"content":"                    }","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"triciiaaa"},"content":"                } catch (exception.MissingTaskNumberException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":115,"author":{"gitId":"triciiaaa"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":116,"author":{"gitId":"triciiaaa"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":117,"author":{"gitId":"triciiaaa"},"content":"                return 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":118,"author":{"gitId":"triciiaaa"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-07"},{"lineNumber":119,"author":{"gitId":"triciiaaa"},"content":"                try {","lastModifiedDate":"2024-02-07"},{"lineNumber":120,"author":{"gitId":"triciiaaa"},"content":"                    if (token.length !\u003d 2 || token[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":121,"author":{"gitId":"triciiaaa"},"content":"                        throw ChronosException.createMissingDescriptionException();","lastModifiedDate":"2024-02-07"},{"lineNumber":122,"author":{"gitId":"triciiaaa"},"content":"                    } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":123,"author":{"gitId":"triciiaaa"},"content":"                        String description \u003d token[1];","lastModifiedDate":"2024-02-07"},{"lineNumber":124,"author":{"gitId":"triciiaaa"},"content":"                        tasks.addToDo(description, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":125,"author":{"gitId":"triciiaaa"},"content":"                        storage.saveTasksToFile(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":126,"author":{"gitId":"triciiaaa"},"content":"                    }","lastModifiedDate":"2024-02-07"},{"lineNumber":127,"author":{"gitId":"triciiaaa"},"content":"                } catch (exception.MissingDescriptionException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":128,"author":{"gitId":"triciiaaa"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":129,"author":{"gitId":"triciiaaa"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":130,"author":{"gitId":"triciiaaa"},"content":"                return 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":131,"author":{"gitId":"triciiaaa"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-07"},{"lineNumber":132,"author":{"gitId":"triciiaaa"},"content":"                try {","lastModifiedDate":"2024-02-07"},{"lineNumber":133,"author":{"gitId":"triciiaaa"},"content":"                    if (!token[1].contains(\"/by\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":134,"author":{"gitId":"triciiaaa"},"content":"                        throw ChronosException.createInvalidDeadlineException();","lastModifiedDate":"2024-02-07"},{"lineNumber":135,"author":{"gitId":"triciiaaa"},"content":"                    }","lastModifiedDate":"2024-02-07"},{"lineNumber":136,"author":{"gitId":"triciiaaa"},"content":"                    String[] descriptionAndBy \u003d token[1].split(\"/by\");","lastModifiedDate":"2024-02-07"},{"lineNumber":137,"author":{"gitId":"triciiaaa"},"content":"                    String description \u003d descriptionAndBy[0].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":138,"author":{"gitId":"triciiaaa"},"content":"                    String dueDate \u003d Parser.formatDateTime(descriptionAndBy[1].trim());","lastModifiedDate":"2024-02-07"},{"lineNumber":139,"author":{"gitId":"triciiaaa"},"content":"                    tasks.addDeadline(description, dueDate, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":140,"author":{"gitId":"triciiaaa"},"content":"                    storage.saveTasksToFile(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":141,"author":{"gitId":"triciiaaa"},"content":"                } catch (exception.InvalidDeadlineException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":142,"author":{"gitId":"triciiaaa"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":143,"author":{"gitId":"triciiaaa"},"content":"                } catch (Exception e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":144,"author":{"gitId":"triciiaaa"},"content":"                    ui.showDivider();","lastModifiedDate":"2024-02-07"},{"lineNumber":145,"author":{"gitId":"triciiaaa"},"content":"                    System.out.println(\"        Invalid command. Please include a task name and a valid due date following the syntax of the example below:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":146,"author":{"gitId":"triciiaaa"},"content":"                    System.out.println(\"        e.g. deadline return library book /by 2024-09-22 15:00\");","lastModifiedDate":"2024-02-07"},{"lineNumber":147,"author":{"gitId":"triciiaaa"},"content":"                    ui.showDivider();","lastModifiedDate":"2024-02-07"},{"lineNumber":148,"author":{"gitId":"triciiaaa"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":149,"author":{"gitId":"triciiaaa"},"content":"                return 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":150,"author":{"gitId":"triciiaaa"},"content":"            case \"event\":","lastModifiedDate":"2024-02-07"},{"lineNumber":151,"author":{"gitId":"triciiaaa"},"content":"                try {","lastModifiedDate":"2024-02-07"},{"lineNumber":152,"author":{"gitId":"triciiaaa"},"content":"                    if (!token[1].contains(\"/from\") \u0026\u0026 !token[1].contains(\"/to\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":153,"author":{"gitId":"triciiaaa"},"content":"                        throw ChronosException.createInvalidEventException();","lastModifiedDate":"2024-02-07"},{"lineNumber":154,"author":{"gitId":"triciiaaa"},"content":"                    }","lastModifiedDate":"2024-02-07"},{"lineNumber":155,"author":{"gitId":"triciiaaa"},"content":"                    String[] descriptionAndDate \u003d token[1].split(\"/from\");","lastModifiedDate":"2024-02-07"},{"lineNumber":156,"author":{"gitId":"triciiaaa"},"content":"                    String description \u003d descriptionAndDate[0].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":157,"author":{"gitId":"triciiaaa"},"content":"                    String[] fromAndTo \u003d descriptionAndDate[1].split(\"/to\");","lastModifiedDate":"2024-02-07"},{"lineNumber":158,"author":{"gitId":"triciiaaa"},"content":"                    String fromDateAndTime \u003d Parser.formatDateTime(fromAndTo[0].trim());","lastModifiedDate":"2024-02-07"},{"lineNumber":159,"author":{"gitId":"triciiaaa"},"content":"                    String toDateAndTime \u003d Parser.formatDateTime(fromAndTo[1].trim());","lastModifiedDate":"2024-02-07"},{"lineNumber":160,"author":{"gitId":"triciiaaa"},"content":"                    tasks.addEvent(description, fromDateAndTime, toDateAndTime, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":161,"author":{"gitId":"triciiaaa"},"content":"                    storage.saveTasksToFile(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":162,"author":{"gitId":"triciiaaa"},"content":"                } catch (exception.InvalidEventException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":163,"author":{"gitId":"triciiaaa"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":164,"author":{"gitId":"triciiaaa"},"content":"                } catch (Exception e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":165,"author":{"gitId":"triciiaaa"},"content":"                    ui.showDivider();","lastModifiedDate":"2024-02-07"},{"lineNumber":166,"author":{"gitId":"triciiaaa"},"content":"                    System.out.println(\"        Invalid command. Please include a task name and a valid due date following the syntax of the example below:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":167,"author":{"gitId":"triciiaaa"},"content":"                    System.out.println(\"        e.g. event concert /from 2024-02-16 18:00 /to 2024-02-16 20:00\");","lastModifiedDate":"2024-02-07"},{"lineNumber":168,"author":{"gitId":"triciiaaa"},"content":"                    ui.showDivider();","lastModifiedDate":"2024-02-07"},{"lineNumber":169,"author":{"gitId":"triciiaaa"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":170,"author":{"gitId":"triciiaaa"},"content":"                return 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":171,"author":{"gitId":"triciiaaa"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-07"},{"lineNumber":172,"author":{"gitId":"triciiaaa"},"content":"                try {","lastModifiedDate":"2024-02-07"},{"lineNumber":173,"author":{"gitId":"triciiaaa"},"content":"                    if (token.length !\u003d 2 || token[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":174,"author":{"gitId":"triciiaaa"},"content":"                        throw ChronosException.createMissingTaskNumberException();","lastModifiedDate":"2024-02-07"},{"lineNumber":175,"author":{"gitId":"triciiaaa"},"content":"                    } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":176,"author":{"gitId":"triciiaaa"},"content":"                        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":177,"author":{"gitId":"triciiaaa"},"content":"                            int i \u003d Integer.parseInt(token[1]);","lastModifiedDate":"2024-02-07"},{"lineNumber":178,"author":{"gitId":"triciiaaa"},"content":"                            tasks.deleteTask(i, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":179,"author":{"gitId":"triciiaaa"},"content":"                            storage.saveTasksToFile(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":180,"author":{"gitId":"triciiaaa"},"content":"                        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":181,"author":{"gitId":"triciiaaa"},"content":"                            ui.printNumberFormatException();","lastModifiedDate":"2024-02-07"},{"lineNumber":182,"author":{"gitId":"triciiaaa"},"content":"                        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":183,"author":{"gitId":"triciiaaa"},"content":"                            ui.printIndexOutOfBoundsException();","lastModifiedDate":"2024-02-07"},{"lineNumber":184,"author":{"gitId":"triciiaaa"},"content":"                        }","lastModifiedDate":"2024-02-07"},{"lineNumber":185,"author":{"gitId":"triciiaaa"},"content":"                    }","lastModifiedDate":"2024-02-07"},{"lineNumber":186,"author":{"gitId":"triciiaaa"},"content":"                } catch (exception.MissingTaskNumberException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":187,"author":{"gitId":"triciiaaa"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":188,"author":{"gitId":"triciiaaa"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":189,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":190,"author":{"gitId":"triciiaaa"},"content":"                return 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":191,"author":{"gitId":"triciiaaa"},"content":"            default:","lastModifiedDate":"2024-02-07"},{"lineNumber":192,"author":{"gitId":"triciiaaa"},"content":"                try {","lastModifiedDate":"2024-02-07"},{"lineNumber":193,"author":{"gitId":"triciiaaa"},"content":"                    throw ChronosException.createInvalidCommandException();","lastModifiedDate":"2024-02-07"},{"lineNumber":194,"author":{"gitId":"triciiaaa"},"content":"                } catch (exception.InvalidCommandException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":195,"author":{"gitId":"triciiaaa"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":196,"author":{"gitId":"triciiaaa"},"content":"                }","lastModifiedDate":"2024-02-07"},{"lineNumber":197,"author":{"gitId":"triciiaaa"},"content":"                return 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":198,"author":{"gitId":"triciiaaa"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":199,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":200,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":201,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"triciiaaa":201}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package tool;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import java.io.File;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"import task.Deadline;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"import task.Event;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"import task.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"import task.Todo;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"import tool.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":" * Represents the hard drive storage for tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"public class Storage {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"    protected String filePath;","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a Storage object with the given file path.","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"     * @param filePath File path of the saved tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"     * Converts the saved tasks to Task objects.","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"     * @param taskDetails Task details stored in String format.","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"     * @return Task object converted from task details stored.","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"    public Task convertSaveToTask(String taskDetails) {","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"        String[] taskDetailsSplit \u003d taskDetails.split(\"\\\\|\");","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"        String taskCode \u003d taskDetailsSplit[0].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"        String taskStatus \u003d taskDetailsSplit[1].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"        String taskDescription \u003d taskDetailsSplit[2].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"        Task convertedTask \u003d new Todo(taskDescription);","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"        if (taskCode.equals(\"D\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"            String taskByDate \u003d taskDetailsSplit[3].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"            convertedTask \u003d new Deadline(taskDescription, taskByDate);","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"        } else if (taskCode.equals(\"E\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"            String taskFromDate \u003d taskDetailsSplit[3].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"            String taskToDate \u003d taskDetailsSplit[4].trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"            convertedTask \u003d new Event(taskDescription, taskFromDate, taskToDate);","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"        if (taskStatus.equals(\"1\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"triciiaaa"},"content":"            convertedTask.setMarked();","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"        return convertedTask;","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"     * Loads the saved tasks from the text file.","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"     * @return ArrayList of Task objects converted from task details stored.","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"     * @throws IOException If there is an exception when processing input/output.","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"triciiaaa"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromFile() throws IOException {","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"triciiaaa"},"content":"        Path retrievedFilePath \u003d Paths.get(filePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"triciiaaa"},"content":"        Files.createDirectories(retrievedFilePath.getParent());","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"triciiaaa"},"content":"        if (!Files.exists(retrievedFilePath)) {","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"triciiaaa"},"content":"            Files.createFile(retrievedFilePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"triciiaaa"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"triciiaaa"},"content":"            Scanner sc \u003d new Scanner(new File(filePath));","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"triciiaaa"},"content":"            ArrayList\u003cTask\u003e retrievedTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"triciiaaa"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"triciiaaa"},"content":"                String taskDetails \u003d sc.nextLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"triciiaaa"},"content":"                Task retrievedTask \u003d convertSaveToTask(taskDetails);","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"triciiaaa"},"content":"                retrievedTaskList.add(retrievedTask);","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"triciiaaa"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"triciiaaa"},"content":"            return retrievedTaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"triciiaaa"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"triciiaaa"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"triciiaaa"},"content":"            return null;","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"triciiaaa"},"content":"     * Saves task list to text file upon each change.","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"triciiaaa"},"content":"     * @param tasks List of tasks to be stored.","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"triciiaaa"},"content":"     * @throws IOException If there is an exception when processing input/output.","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"triciiaaa"},"content":"    public void saveTasksToFile(TaskList tasks) throws IOException {","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"triciiaaa"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"triciiaaa"},"content":"        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"triciiaaa"},"content":"            Task currentTask \u003d tasks.getTask(i - 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"triciiaaa"},"content":"            String taskCode \u003d currentTask.getTaskCode();","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"triciiaaa"},"content":"            String taskStatus \u003d Integer.toString(currentTask.getStatusInt());","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"triciiaaa"},"content":"            String taskDescription \u003d currentTask.getDescription();","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"triciiaaa"},"content":"            String date \u003d \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"triciiaaa"},"content":"            if (!taskCode.equals(\"T\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":108,"author":{"gitId":"triciiaaa"},"content":"                date \u003d currentTask.getDate();","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"triciiaaa"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":110,"author":{"gitId":"triciiaaa"},"content":"            fw.write(taskCode + \" | \" + taskStatus + \" | \" + taskDescription + \" | \" + date + \"\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"triciiaaa"},"content":"        fw.close();","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"triciiaaa":114}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":" * Represents a task.","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"    protected String taskCode;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"    protected String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a Task object with the given description.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"    public Task(String taskCode, String description) {","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"        this.taskCode \u003d taskCode;","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"     * Returns the status icon in String type based on isDone.","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"     * @return Status icon of isDone.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"     * Returns the status icon in Integer type based on isDone.","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"     * @return Status integer of isDone.","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"    public int getStatusInt() {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"        return (isDone ? 1 : 0);","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"     * Returns the task code of the specified task.","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"     * @return Task code.","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"    public String getTaskCode() {","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"        return this.taskCode;","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"     * Returns the description of the specified task.","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"     * @return Task description.","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"        return this.description;","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"     * Returns the due date / start date / end date of the specified task.","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"     * By default, date is an empty string.","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"     * @return Task due date / start date / end date.","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"    public String getDate() {","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"        return \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"triciiaaa"},"content":"     * Sets the task to be marked as completed.","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"triciiaaa"},"content":"    public void setMarked() {","lastModifiedDate":"2024-01-24"},{"lineNumber":72,"author":{"gitId":"triciiaaa"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"triciiaaa"},"content":"     * Sets the task to be unmarked as incomplete.","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"triciiaaa"},"content":"    public void setUnmarked() {","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"triciiaaa"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":82,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"triciiaaa"},"content":"     * Returns a string representation of the Task object.","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"triciiaaa"},"content":"     * @return String representation of the task.","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"triciiaaa"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"triciiaaa"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-24"},{"lineNumber":89,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":90,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"triciiaaa":90}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package tool;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"import task.Deadline;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"import task.Event;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"import task.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"import task.Todo;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"import tool.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":" * Represents the list of tasks specified by the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"public class TaskList {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a TaskList object.","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a TaskList object with the list of saved tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"     * Adds and prints a todo task.","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"    public void addToDo(String description, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"        tasks.add(todo);","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"        ui.printAddTodoSuccessful(todo, tasks.size());","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"     * Adds and prints a task with a deadline.","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"     * @param description Description of the task with deadline.","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"     * @param dueDate Deadline of the task.","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"    public void addDeadline(String description, String dueDate, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"        Deadline deadline \u003d new Deadline(description, dueDate);","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"        tasks.add(deadline);","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"        ui.printAddDeadlineSuccessful(deadline, tasks.size());","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"     * Adds and prints an event.","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"triciiaaa"},"content":"     * @param description Description of the event.","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"     * @param from Start date and time of the event.","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"     * @param to End date and time of the event.","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"    public void addEvent(String description, String from, String to, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"        Event event \u003d new Event(description, from, to);","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"        tasks.add(event);","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"        ui.printAddEventSuccessful(event, tasks.size());","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"triciiaaa"},"content":"     * Marks a task as completed.","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"triciiaaa"},"content":"     * @param selectedTaskNumberToBeMarked Task number to be marked as completed.","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"triciiaaa"},"content":"    public void markTask(int selectedTaskNumberToBeMarked, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"triciiaaa"},"content":"        Task selectedTaskToBeMarked \u003d tasks.get(selectedTaskNumberToBeMarked - 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"triciiaaa"},"content":"        selectedTaskToBeMarked.setMarked();","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"triciiaaa"},"content":"        tasks.set(selectedTaskNumberToBeMarked - 1, selectedTaskToBeMarked);","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"triciiaaa"},"content":"        ui.printMarkTaskSuccessful(selectedTaskToBeMarked);","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"triciiaaa"},"content":"     * Unmarks a task as incomplete.","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"triciiaaa"},"content":"     * @param selectedTaskNumberToBeUnmarked Task number to be unmarked as incomplete.","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"triciiaaa"},"content":"    public void unMarkTask(int selectedTaskNumberToBeUnmarked, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"triciiaaa"},"content":"        Task selectedTaskToBeUnmarked \u003d tasks.get(selectedTaskNumberToBeUnmarked - 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"triciiaaa"},"content":"        selectedTaskToBeUnmarked.setUnmarked();","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"triciiaaa"},"content":"        tasks.set(selectedTaskNumberToBeUnmarked - 1, selectedTaskToBeUnmarked);","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"triciiaaa"},"content":"        ui.printUnmarkTaskSuccessful(selectedTaskToBeUnmarked);","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"triciiaaa"},"content":"     * Deletes a task from task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"triciiaaa"},"content":"     * @param selectedTaskNumberToBeDeleted Task number to be deleted.","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"triciiaaa"},"content":"    public void deleteTask(int selectedTaskNumberToBeDeleted, Ui ui) {","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"triciiaaa"},"content":"        Task deletedTask \u003d tasks.get(selectedTaskNumberToBeDeleted - 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"triciiaaa"},"content":"        ui.printDeleteTaskSuccessful(deletedTask, tasks.size());","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"triciiaaa"},"content":"        tasks.remove(selectedTaskNumberToBeDeleted - 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"triciiaaa"},"content":"     * Retrieves a task from task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"triciiaaa"},"content":"     * @param taskNumber Task number to be retrieved.","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"triciiaaa"},"content":"     * @return Retrieved task.","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":108,"author":{"gitId":"triciiaaa"},"content":"    public Task getTask(int taskNumber) {","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"triciiaaa"},"content":"        return tasks.get(taskNumber);","lastModifiedDate":"2024-02-07"},{"lineNumber":110,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":112,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"triciiaaa"},"content":"     * Checks if the list of tasks is empty.","lastModifiedDate":"2024-02-07"},{"lineNumber":114,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":115,"author":{"gitId":"triciiaaa"},"content":"     * @return True if list of tasks is empty, else False.","lastModifiedDate":"2024-02-07"},{"lineNumber":116,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":117,"author":{"gitId":"triciiaaa"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-02-07"},{"lineNumber":118,"author":{"gitId":"triciiaaa"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2024-02-07"},{"lineNumber":119,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":120,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":121,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":122,"author":{"gitId":"triciiaaa"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":123,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":124,"author":{"gitId":"triciiaaa"},"content":"     * @return Number of tasks in the list.","lastModifiedDate":"2024-02-07"},{"lineNumber":125,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":126,"author":{"gitId":"triciiaaa"},"content":"    public int size() {","lastModifiedDate":"2024-02-07"},{"lineNumber":127,"author":{"gitId":"triciiaaa"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-07"},{"lineNumber":128,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":129,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"triciiaaa":129}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package task;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import task.Task;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":" * Represents a todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"    private static final String TASK_CODE \u003d \"T\";","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a Todo object with the given description.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"        super(TASK_CODE, description);","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"     * Returns a string representation of the Todo object.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"     * @return String representation of the todo task.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"        return \"[\" + taskCode + \"]\" + super.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"triciiaaa":29}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"package tool;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"import task.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"import tool.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":" * Represents the tool to deal with user interactions.","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"public class Ui {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"    private static final String DIVIDER \u003d \"        ------------------------------------------------------------\";","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"triciiaaa"},"content":"    private static final String POSSIBLE_COMMANDS \u003d \"        TODO     --- todo [task name]\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"triciiaaa"},"content":"                                                    \"        DEADLINE --- deadline [task name] /by [yyyy-mm-dd HH:MM]\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"triciiaaa"},"content":"                                                    \"        EVENT    --- event [task name] /from [yyyy-mm-dd HH:MM] /to [yyyy-mm-dd HH:MM]\" ;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"triciiaaa"},"content":"     * Constructs a Ui object.","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"triciiaaa"},"content":"    public Ui() {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"triciiaaa"},"content":"     * Prints greetings to user.","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"triciiaaa"},"content":"    public void greetUser() {","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        Hello! I\u0027m Chronos.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        What can I do for you?\");","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"triciiaaa"},"content":"     * Prints goodbye to user.","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"triciiaaa"},"content":"    public static void bidGoodbye() {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"triciiaaa"},"content":"     * Prints task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"triciiaaa"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"triciiaaa"},"content":"    public void printTasks(TaskList tasks) {","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        Here are the tasks in your list:\");","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"triciiaaa"},"content":"        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {","lastModifiedDate":"2024-02-08"},{"lineNumber":52,"author":{"gitId":"triciiaaa"},"content":"            task.Task currentTask \u003d tasks.getTask(i - 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"triciiaaa"},"content":"            System.out.println(\"        \" + i + \". \" + currentTask.toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"triciiaaa"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"triciiaaa"},"content":"     * Prints no outstanding tasks and list of commands.","lastModifiedDate":"2024-02-08"},{"lineNumber":60,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"triciiaaa"},"content":"    public void printNoOutstandingTasks() {","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        There are no outstanding tasks in your list.\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        You may add various tasks with the commands below:\\n\" + POSSIBLE_COMMANDS);","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":69,"author":{"gitId":"triciiaaa"},"content":"     * Prints list of commands.","lastModifiedDate":"2024-02-08"},{"lineNumber":70,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"triciiaaa"},"content":"    public void printHelp() {","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        Here are the possible commands:\\n\" + POSSIBLE_COMMANDS);","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":76,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":78,"author":{"gitId":"triciiaaa"},"content":"     * Prints success message of adding a todo task.","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"triciiaaa"},"content":"     * @param todo Todo object added.","lastModifiedDate":"2024-02-08"},{"lineNumber":81,"author":{"gitId":"triciiaaa"},"content":"     * @param noOfTasks Number of tasks in the list.","lastModifiedDate":"2024-02-08"},{"lineNumber":82,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":83,"author":{"gitId":"triciiaaa"},"content":"    public void printAddTodoSuccessful(Task todo, int noOfTasks) {","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"          \" + todo);","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        Now you have \" + noOfTasks + \" tasks in the list.\");","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":92,"author":{"gitId":"triciiaaa"},"content":"     * Prints success message of adding a deadline.","lastModifiedDate":"2024-02-08"},{"lineNumber":93,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":94,"author":{"gitId":"triciiaaa"},"content":"     * @param deadline Deadline object added.","lastModifiedDate":"2024-02-08"},{"lineNumber":95,"author":{"gitId":"triciiaaa"},"content":"     * @param noOfTasks Number of tasks in the list.","lastModifiedDate":"2024-02-08"},{"lineNumber":96,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"triciiaaa"},"content":"    public void printAddDeadlineSuccessful(Task deadline, int noOfTasks) {","lastModifiedDate":"2024-02-08"},{"lineNumber":98,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-08"},{"lineNumber":100,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"          \" + deadline);","lastModifiedDate":"2024-02-08"},{"lineNumber":101,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        Now you have \" + noOfTasks + \" tasks in the list.\");","lastModifiedDate":"2024-02-08"},{"lineNumber":102,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-08"},{"lineNumber":103,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":104,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":105,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":106,"author":{"gitId":"triciiaaa"},"content":"     * Prints success message of adding an event.","lastModifiedDate":"2024-02-08"},{"lineNumber":107,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":108,"author":{"gitId":"triciiaaa"},"content":"     * @param event Event object added.","lastModifiedDate":"2024-02-08"},{"lineNumber":109,"author":{"gitId":"triciiaaa"},"content":"     * @param noOfTasks Number of tasks in the list.","lastModifiedDate":"2024-02-08"},{"lineNumber":110,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":111,"author":{"gitId":"triciiaaa"},"content":"    public void printAddEventSuccessful(Task event, int noOfTasks) {","lastModifiedDate":"2024-02-08"},{"lineNumber":112,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-08"},{"lineNumber":113,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-08"},{"lineNumber":114,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"          \" + event);","lastModifiedDate":"2024-02-08"},{"lineNumber":115,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        Now you have \" + noOfTasks + \" tasks in the list.\");","lastModifiedDate":"2024-02-08"},{"lineNumber":116,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-08"},{"lineNumber":117,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":118,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":119,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":120,"author":{"gitId":"triciiaaa"},"content":"     * Prints success message of marking a task as completed.","lastModifiedDate":"2024-02-08"},{"lineNumber":121,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":122,"author":{"gitId":"triciiaaa"},"content":"     * @param selectedTaskToBeMarked Selected task to be marked as completed.","lastModifiedDate":"2024-02-08"},{"lineNumber":123,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":124,"author":{"gitId":"triciiaaa"},"content":"    public void printMarkTaskSuccessful(Task selectedTaskToBeMarked) {","lastModifiedDate":"2024-02-08"},{"lineNumber":125,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-08"},{"lineNumber":126,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-08"},{"lineNumber":127,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"          \" + selectedTaskToBeMarked);","lastModifiedDate":"2024-02-08"},{"lineNumber":128,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-08"},{"lineNumber":129,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":130,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":131,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":132,"author":{"gitId":"triciiaaa"},"content":"     * Prints success message of unmarking a task as incomplete.","lastModifiedDate":"2024-02-08"},{"lineNumber":133,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":134,"author":{"gitId":"triciiaaa"},"content":"     * @param selectedTaskToBeUnmarked Selected task to be marked as completed.","lastModifiedDate":"2024-02-08"},{"lineNumber":135,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":136,"author":{"gitId":"triciiaaa"},"content":"    public void printUnmarkTaskSuccessful(Task selectedTaskToBeUnmarked) {","lastModifiedDate":"2024-02-08"},{"lineNumber":137,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-08"},{"lineNumber":138,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-08"},{"lineNumber":139,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"          \" + selectedTaskToBeUnmarked);","lastModifiedDate":"2024-02-08"},{"lineNumber":140,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-08"},{"lineNumber":141,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":142,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":143,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":144,"author":{"gitId":"triciiaaa"},"content":"     * Prints success message of deleting a task.","lastModifiedDate":"2024-02-08"},{"lineNumber":145,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":146,"author":{"gitId":"triciiaaa"},"content":"     * @param deletedTask Selected task to be deleted.","lastModifiedDate":"2024-02-08"},{"lineNumber":147,"author":{"gitId":"triciiaaa"},"content":"     * @param noOfTasks Number of tasks in the list.","lastModifiedDate":"2024-02-08"},{"lineNumber":148,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":149,"author":{"gitId":"triciiaaa"},"content":"    public void printDeleteTaskSuccessful(Task deletedTask, int noOfTasks) {","lastModifiedDate":"2024-02-08"},{"lineNumber":150,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-08"},{"lineNumber":151,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-08"},{"lineNumber":152,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"          \" + deletedTask);","lastModifiedDate":"2024-02-08"},{"lineNumber":153,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        Now you have \" + (noOfTasks - 1) + \" tasks in the list.\");","lastModifiedDate":"2024-02-08"},{"lineNumber":154,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-08"},{"lineNumber":155,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":156,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":157,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":158,"author":{"gitId":"triciiaaa"},"content":"     * Prints divider.","lastModifiedDate":"2024-02-07"},{"lineNumber":159,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":160,"author":{"gitId":"triciiaaa"},"content":"    public void showDivider() {","lastModifiedDate":"2024-02-07"},{"lineNumber":161,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-07"},{"lineNumber":162,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":163,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":164,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":165,"author":{"gitId":"triciiaaa"},"content":"     * Reads the next line received by the Scanner object.","lastModifiedDate":"2024-02-07"},{"lineNumber":166,"author":{"gitId":"triciiaaa"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":167,"author":{"gitId":"triciiaaa"},"content":"     * @return String representation of the next line.","lastModifiedDate":"2024-02-07"},{"lineNumber":168,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":169,"author":{"gitId":"triciiaaa"},"content":"    public String readCommand(Scanner sc) {","lastModifiedDate":"2024-02-07"},{"lineNumber":170,"author":{"gitId":"triciiaaa"},"content":"        return sc.nextLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":171,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":172,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":173,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":174,"author":{"gitId":"triciiaaa"},"content":"     * Prints custom error message for NumberFormatException.","lastModifiedDate":"2024-02-07"},{"lineNumber":175,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":176,"author":{"gitId":"triciiaaa"},"content":"    public void printNumberFormatException() {","lastModifiedDate":"2024-02-07"},{"lineNumber":177,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-07"},{"lineNumber":178,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        Task number is not an integer. Please include a valid task number.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":179,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-07"},{"lineNumber":180,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":181,"author":{"gitId":"triciiaaa"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":182,"author":{"gitId":"triciiaaa"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":183,"author":{"gitId":"triciiaaa"},"content":"     * Prints custom error message for IndexOutOfBoundsException.","lastModifiedDate":"2024-02-07"},{"lineNumber":184,"author":{"gitId":"triciiaaa"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":185,"author":{"gitId":"triciiaaa"},"content":"    public void printIndexOutOfBoundsException() {","lastModifiedDate":"2024-02-07"},{"lineNumber":186,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-07"},{"lineNumber":187,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(\"        Task number out of range. Please include a valid task number.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":188,"author":{"gitId":"triciiaaa"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2024-02-07"},{"lineNumber":189,"author":{"gitId":"triciiaaa"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":190,"author":{"gitId":"triciiaaa"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"triciiaaa":190}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"triciiaaa"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"triciiaaa"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"triciiaaa"},"content":"deadline return book /by 1st Mar","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"triciiaaa"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"triciiaaa"},"content":"event project meeting /from 29th Mar 8pm /to 29th Mar 10pm","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"triciiaaa"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"triciiaaa"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"triciiaaa"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"triciiaaa"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"triciiaaa"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"triciiaaa"},"content":"unmark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"triciiaaa"},"content":"list","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"triciiaaa":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"triciiaaa"},"content":"java -classpath ..\\bin Chronos \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"triciiaaa":1,"-":20}}]
