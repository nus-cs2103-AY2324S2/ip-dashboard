[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JerryO3"},"content":"# duke.Duke project template","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"JerryO3"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JerryO3":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"JerryO3"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"JerryO3"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"JerryO3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"JerryO3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"JerryO3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"JerryO3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"JerryO3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"JerryO3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"JerryO3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"JerryO3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"JerryO3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"JerryO3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"JerryO3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"JerryO3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"JerryO3"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"JerryO3"},"content":"checkstyle {","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"JerryO3"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"JerryO3"},"content":"}","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"JerryO3":22,"-":41}},{"path":"src/main/java/duke/CustomExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryO3"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"JerryO3"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"JerryO3"},"content":" * The CustomExceptions class provides a convenient class","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"JerryO3"},"content":" * from which all exceptions unique to the project can","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"JerryO3"},"content":" * extend from.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"JerryO3"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"JerryO3"},"content":"public class CustomExceptions extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"JerryO3"},"content":"    public CustomExceptions(String errorMessage) {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"JerryO3"},"content":"        super(errorMessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"JerryO3"},"content":"     * ZeroIndexException is deprecated, and used to be","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"JerryO3"},"content":"     * thrown when a mark, unmark or delete command was","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"JerryO3"},"content":"     * followed by a 0 index. This throws an error as","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"JerryO3"},"content":"     * ItemList is 1-indexed.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"JerryO3"},"content":"    public static class ZeroIndexException extends CustomExceptions {","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"JerryO3"},"content":"        public ZeroIndexException(String errorMessage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"JerryO3"},"content":"            super(errorMessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"JerryO3"},"content":"     * InvalidTaskException is thrown when a command with a valid","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"JerryO3"},"content":"     * identifier (e.g. list, event, deadline etc.) is not followed","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"JerryO3"},"content":"     * by other required information, leading to error in parsing the","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"JerryO3"},"content":"     * command.","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"JerryO3"},"content":"    public static class InvalidTaskException extends CustomExceptions {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"JerryO3"},"content":"        public InvalidTaskException(String errorMessage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"JerryO3"},"content":"            super(errorMessage);","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"JerryO3"},"content":"     * UnrecognizedCommandException is thrown in 2 cases. First,","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"JerryO3"},"content":"     * when there is no recognized command identifier in the given","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"JerryO3"},"content":"     * command. Second, when a recognized command to modify the ItemList","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"JerryO3"},"content":"     * using index access contains a negative index.","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"JerryO3"},"content":"    public static class UnrecognizedCommandException extends CustomExceptions {","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"JerryO3"},"content":"        public UnrecognizedCommandException(String errorMessage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"JerryO3"},"content":"            super(errorMessage);","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"JerryO3"},"content":"     * ToBeforeFromException is thrown when the /to command is detected","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"JerryO3"},"content":"     * before the /from command. This can occur if the /from command is","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"JerryO3"},"content":"     * after the /to command, and also when the /from command is missing.","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"JerryO3"},"content":"    public static class ToBeforeFromException extends CustomExceptions {","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"JerryO3"},"content":"        public ToBeforeFromException(String errorMessage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"JerryO3"},"content":"            super(errorMessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"JerryO3"},"content":"     * EventExceptionForFromTo is thrown when the /to and /from keywords","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"JerryO3"},"content":"     * result in the start and end DateTimes of an event to fail to parse.","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"JerryO3"},"content":"    public static class EventExceptionForFromTo extends CustomExceptions {","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"JerryO3"},"content":"        public EventExceptionForFromTo(String errorMessage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"JerryO3"},"content":"            super(errorMessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":68,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":69,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"JerryO3"},"content":"     * NamelessTaskException is thrown when an Item name failed to parse.","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"JerryO3"},"content":"    public static class NamelessTaskException extends CustomExceptions {","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"JerryO3"},"content":"        public NamelessTaskException(String errorMessage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"JerryO3"},"content":"            super(errorMessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"JerryO3"},"content":"     * NamelessTaskException is thrown when an index out of bounds is passed.","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"JerryO3"},"content":"    public static class NoSuchIndexException extends CustomExceptions {","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"JerryO3"},"content":"        public NoSuchIndexException(String errorMessage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"JerryO3"},"content":"            super(errorMessage);","lastModifiedDate":"2024-01-24"},{"lineNumber":86,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"JerryO3"},"content":"     * NamelessTaskException is thrown when the LocalDateTime parse() method","lastModifiedDate":"2024-02-05"},{"lineNumber":91,"author":{"gitId":"JerryO3"},"content":"     * fails to parse a string intended to be read as a DateTime. This wrapper","lastModifiedDate":"2024-02-05"},{"lineNumber":92,"author":{"gitId":"JerryO3"},"content":"     * exception allows it to be considered a CustomException.","lastModifiedDate":"2024-02-05"},{"lineNumber":93,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":94,"author":{"gitId":"JerryO3"},"content":"    public static class UnrecognizableDateException extends CustomExceptions {","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"JerryO3"},"content":"        public UnrecognizableDateException(String errorMessage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"JerryO3"},"content":"            super(errorMessage);","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":101,"author":{"gitId":"JerryO3"},"content":"     * DeadlineExceptionBy is thrown when the /by keyword","lastModifiedDate":"2024-02-05"},{"lineNumber":102,"author":{"gitId":"JerryO3"},"content":"     * results in the doneBy DateTime of a deadline to fail to parse.","lastModifiedDate":"2024-02-05"},{"lineNumber":103,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":104,"author":{"gitId":"JerryO3"},"content":"    public static class DeadlineExceptionBy extends CustomExceptions {","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"JerryO3"},"content":"        public DeadlineExceptionBy(String errorMessage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"JerryO3"},"content":"            super(errorMessage);","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":111,"author":{"gitId":"JerryO3"},"content":"     * MarkException is thrown when there is no following information after","lastModifiedDate":"2024-02-05"},{"lineNumber":112,"author":{"gitId":"JerryO3"},"content":"     * the commands: mark, unmark or delete are recognized and parsed.","lastModifiedDate":"2024-02-05"},{"lineNumber":113,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":114,"author":{"gitId":"JerryO3"},"content":"    public static class MarkException extends CustomExceptions {","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"JerryO3"},"content":"        public MarkException(String errorMessage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"JerryO3"},"content":"            super(errorMessage);","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":121,"author":{"gitId":"JerryO3"},"content":"     * FindException is thrown when no search string is given after the find","lastModifiedDate":"2024-02-05"},{"lineNumber":122,"author":{"gitId":"JerryO3"},"content":"     * command is recognized.","lastModifiedDate":"2024-02-05"},{"lineNumber":123,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":124,"author":{"gitId":"JerryO3"},"content":"    public static class FindException extends CustomExceptions {","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"JerryO3"},"content":"        public FindException(String errorMessage) {","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"JerryO3"},"content":"            super(errorMessage);","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":128,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":129,"author":{"gitId":"JerryO3"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"JerryO3":129}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryO3"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"JerryO3"},"content":"import duke.control.DialogBox;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"JerryO3"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"JerryO3"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"JerryO3"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"JerryO3"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"JerryO3"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"JerryO3"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"JerryO3"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"JerryO3"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"JerryO3"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"JerryO3"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"JerryO3"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"JerryO3"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"JerryO3"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"JerryO3"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"JerryO3"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"JerryO3"},"content":" * Represents an instance of the chatbot Elias, which is","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"JerryO3"},"content":" * this project\u0027s rendition of project Duke. Elias is able","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"JerryO3"},"content":" * to take in commands to add, modify or delete items in a","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"JerryO3"},"content":" * ItemList. On exit, Items in the ItemList are serialized","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"JerryO3"},"content":" * and stored in the duke.txt file. The duke.txt file is created","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"JerryO3"},"content":" * when no such file exists, and is created in the ./data directory","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"JerryO3"},"content":" * unless no such directory exists, where it is added to the root.","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"JerryO3"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"JerryO3"},"content":"public class Duke extends Application {","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"JerryO3"},"content":"    public static Duke instance;","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"JerryO3"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"JerryO3"},"content":"    private final ItemList itemList;","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"JerryO3"},"content":"    public final UI ui;","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"JerryO3"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"JerryO3"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"JerryO3"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/elias.png\"));","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"JerryO3"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"JerryO3"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"JerryO3"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"JerryO3"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"JerryO3"},"content":"    private Scene scene;","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"JerryO3"},"content":"     * Creates a new instance of Duke as Elias.","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"JerryO3"},"content":"    public Duke() {","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"JerryO3"},"content":"        this.storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"JerryO3"},"content":"        this.itemList \u003d storage.readFromFile();","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"JerryO3"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"JerryO3"},"content":"        this.parser \u003d new Parser(itemList);","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"JerryO3"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"JerryO3"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"JerryO3"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"JerryO3"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"JerryO3"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"JerryO3"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"JerryO3"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"JerryO3"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"JerryO3"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"JerryO3"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":70,"author":{"gitId":"JerryO3"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"JerryO3"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-09"},{"lineNumber":73,"author":{"gitId":"JerryO3"},"content":"        stage.show();","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":75,"author":{"gitId":"JerryO3"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"JerryO3"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"JerryO3"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-02-09"},{"lineNumber":78,"author":{"gitId":"JerryO3"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"JerryO3"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2024-02-09"},{"lineNumber":80,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"JerryO3"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"JerryO3"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"JerryO3"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-02-09"},{"lineNumber":85,"author":{"gitId":"JerryO3"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-02-09"},{"lineNumber":86,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":87,"author":{"gitId":"JerryO3"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-02-09"},{"lineNumber":88,"author":{"gitId":"JerryO3"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-02-09"},{"lineNumber":89,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":90,"author":{"gitId":"JerryO3"},"content":"        //You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2024-02-09"},{"lineNumber":91,"author":{"gitId":"JerryO3"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-09"},{"lineNumber":92,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":93,"author":{"gitId":"JerryO3"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2024-02-09"},{"lineNumber":94,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":95,"author":{"gitId":"JerryO3"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-02-09"},{"lineNumber":96,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":97,"author":{"gitId":"JerryO3"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-02-09"},{"lineNumber":98,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"JerryO3"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"JerryO3"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-09"},{"lineNumber":101,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"JerryO3"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"JerryO3"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":105,"author":{"gitId":"JerryO3"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"JerryO3"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(this.ui.getLogo(), duke));","lastModifiedDate":"2024-02-21"},{"lineNumber":107,"author":{"gitId":"JerryO3"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(this.ui.getGreet(), duke));","lastModifiedDate":"2024-02-21"},{"lineNumber":108,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":109,"author":{"gitId":"JerryO3"},"content":"        sendButton.setOnMouseClicked((event) -\u003e handleUserInput());","lastModifiedDate":"2024-02-09"},{"lineNumber":110,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":111,"author":{"gitId":"JerryO3"},"content":"        userInput.setOnAction((event) -\u003e handleUserInput());","lastModifiedDate":"2024-02-09"},{"lineNumber":112,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":113,"author":{"gitId":"JerryO3"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2024-02-09"},{"lineNumber":114,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":115,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":116,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":117,"author":{"gitId":"JerryO3"},"content":"     * Iteration 2:","lastModifiedDate":"2024-02-09"},{"lineNumber":118,"author":{"gitId":"JerryO3"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-09"},{"lineNumber":119,"author":{"gitId":"JerryO3"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-09"},{"lineNumber":120,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":121,"author":{"gitId":"JerryO3"},"content":"    public void handleUserInput() {","lastModifiedDate":"2024-02-21"},{"lineNumber":122,"author":{"gitId":"JerryO3"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2024-02-21"},{"lineNumber":123,"author":{"gitId":"JerryO3"},"content":"        String dukeText \u003d getResponse(userInput.getText());","lastModifiedDate":"2024-02-21"},{"lineNumber":124,"author":{"gitId":"JerryO3"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-09"},{"lineNumber":125,"author":{"gitId":"JerryO3"},"content":"                DialogBox.getUserDialog(userText, user),","lastModifiedDate":"2024-02-21"},{"lineNumber":126,"author":{"gitId":"JerryO3"},"content":"                DialogBox.getDukeDialog(dukeText, duke)","lastModifiedDate":"2024-02-21"},{"lineNumber":127,"author":{"gitId":"JerryO3"},"content":"        );","lastModifiedDate":"2024-02-09"},{"lineNumber":128,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":129,"author":{"gitId":"JerryO3"},"content":"        if (userInput.getText().equals(\"bye\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":130,"author":{"gitId":"JerryO3"},"content":"            Platform.exit();","lastModifiedDate":"2024-02-21"},{"lineNumber":131,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":132,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":133,"author":{"gitId":"JerryO3"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-09"},{"lineNumber":134,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":135,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":136,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":137,"author":{"gitId":"JerryO3"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2024-02-09"},{"lineNumber":138,"author":{"gitId":"JerryO3"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2024-02-09"},{"lineNumber":139,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":140,"author":{"gitId":"JerryO3"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-21"},{"lineNumber":141,"author":{"gitId":"JerryO3"},"content":"        // to abstract out UI stuff using fxml","lastModifiedDate":"2024-02-09"},{"lineNumber":142,"author":{"gitId":"JerryO3"},"content":"        String out \u003d \"\";","lastModifiedDate":"2024-02-09"},{"lineNumber":143,"author":{"gitId":"JerryO3"},"content":"        if (!input.equals(\"bye\")) {","lastModifiedDate":"2024-02-09"},{"lineNumber":144,"author":{"gitId":"JerryO3"},"content":"            try {","lastModifiedDate":"2024-02-09"},{"lineNumber":145,"author":{"gitId":"JerryO3"},"content":"                out \u003d this.parser.parse(input);","lastModifiedDate":"2024-02-21"},{"lineNumber":146,"author":{"gitId":"JerryO3"},"content":"                return out;","lastModifiedDate":"2024-02-09"},{"lineNumber":147,"author":{"gitId":"JerryO3"},"content":"            } catch (CustomExceptions.UnrecognizedCommandException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":148,"author":{"gitId":"JerryO3"},"content":"                return \"Sorry I do not recognize this command: \" + input;","lastModifiedDate":"2024-02-09"},{"lineNumber":149,"author":{"gitId":"JerryO3"},"content":"            } catch (CustomExceptions e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":150,"author":{"gitId":"JerryO3"},"content":"                return e.getMessage();","lastModifiedDate":"2024-02-09"},{"lineNumber":151,"author":{"gitId":"JerryO3"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":152,"author":{"gitId":"JerryO3"},"content":"        } else {","lastModifiedDate":"2024-02-09"},{"lineNumber":153,"author":{"gitId":"JerryO3"},"content":"            this.storage.writeToFile(this.itemList);","lastModifiedDate":"2024-02-21"},{"lineNumber":154,"author":{"gitId":"JerryO3"},"content":"            return this.ui.getBye();","lastModifiedDate":"2024-02-21"},{"lineNumber":155,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":156,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":157,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"JerryO3":157,"-":1}},{"path":"src/main/java/duke/ItemList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryO3"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"JerryO3"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"JerryO3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"JerryO3"},"content":"import duke.item.Deadline;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"JerryO3"},"content":"import duke.item.Event;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"JerryO3"},"content":"import duke.item.Item;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"JerryO3"},"content":"import duke.item.ToDo;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"JerryO3"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"JerryO3"},"content":" * ItemList is the class whose instance represents the","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"JerryO3"},"content":" * arrangement of Item objects. It can be manipulated by commands","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"JerryO3"},"content":" * to add, delete, mark done or mark undone Items in the list. The","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"JerryO3"},"content":" * working instance of Itemlist is instantiated when the main method","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"JerryO3"},"content":" * of Duke is run.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"JerryO3"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"JerryO3"},"content":"public class ItemList implements Serializable {","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"JerryO3"},"content":"    private ArrayList\u003cItem\u003e listOfItems \u003d new ArrayList\u003cItem\u003e();","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"JerryO3"},"content":"    private int itemCount \u003d 0;","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"JerryO3"},"content":"    public int getItemCount() {","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"JerryO3"},"content":"        return itemCount;","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"JerryO3"},"content":"    public ArrayList\u003cItem\u003e getList() {","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"JerryO3"},"content":"        return this.listOfItems;","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"JerryO3"},"content":"     * Adds a To-do object to the ItemList","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"JerryO3"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"JerryO3"},"content":"     * @param name is a string array containing information needed","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"JerryO3"},"content":"     *             to construct the new To-do instance.","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"JerryO3"},"content":"     * @return a string that confirms that a To-do has been added.","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"JerryO3"},"content":"    public String addToDo(String[] name) {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"JerryO3"},"content":"        listOfItems.add(itemCount, new ToDo(name));","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"JerryO3"},"content":"        itemCount++;","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"JerryO3"},"content":"        return listOfItems.get(itemCount - 1).addMessage(itemCount);","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"JerryO3"},"content":"     * Adds an Event object to the ItemList","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"JerryO3"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"JerryO3"},"content":"     * @param info is a string array containing information needed","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"JerryO3"},"content":"     *             to construct the new event instance.","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"JerryO3"},"content":"     * @return a string that confirms that an event has been added.","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"JerryO3"},"content":"     * @throws CustomExceptions from nested method calls to be passed","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"JerryO3"},"content":"     *                          to the AddCommand class for handling.","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"JerryO3"},"content":"    public String addEvent(String[] info) throws CustomExceptions {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"JerryO3"},"content":"        listOfItems.add(itemCount, new Event(info));","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"JerryO3"},"content":"        itemCount++;","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"JerryO3"},"content":"        return listOfItems.get(itemCount - 1).addMessage(itemCount);","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"JerryO3"},"content":"     * Adds a Deadline object to the ItemList","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"JerryO3"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"JerryO3"},"content":"     * @param info is a string array containing information needed","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"JerryO3"},"content":"     *             to construct the new deadline instance.","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"JerryO3"},"content":"     * @return a string that confirms that a deadline has been added.","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"JerryO3"},"content":"     * @throws CustomExceptions from nested method calls to be passed","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"JerryO3"},"content":"     *                          to the AddCommand class for handling.","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"JerryO3"},"content":"    public String addDeadline(String[] info) throws CustomExceptions {","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"JerryO3"},"content":"        listOfItems.add(itemCount, new Deadline(info));","lastModifiedDate":"2024-01-24"},{"lineNumber":69,"author":{"gitId":"JerryO3"},"content":"        itemCount++;","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"JerryO3"},"content":"        return listOfItems.get(itemCount - 1).addMessage(itemCount);","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":72,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"JerryO3"},"content":"     * Removes an Item object at a given index from the ItemList.","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"JerryO3"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"JerryO3"},"content":"     * @param index is an integer greater than 0 that refers","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"JerryO3"},"content":"     *              to the Item object to be removed.","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"JerryO3"},"content":"     * @return a String containing the string representation of","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"JerryO3"},"content":"     *     the item that has been removed.","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"JerryO3"},"content":"     * @throws CustomExceptions.NoSuchIndexException when no such index","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"JerryO3"},"content":"     *                                               exists in the ItemList","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"JerryO3"},"content":"    public String removeItem(int index) throws CustomExceptions {","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"JerryO3"},"content":"        String s \u003d \"\";","lastModifiedDate":"2024-01-24"},{"lineNumber":85,"author":{"gitId":"JerryO3"},"content":"        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":86,"author":{"gitId":"JerryO3"},"content":"            itemCount--;","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"JerryO3"},"content":"            s \u003d listOfItems.get(index - 1).removeMessage(itemCount);","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"JerryO3"},"content":"            listOfItems.remove(index - 1);","lastModifiedDate":"2024-01-24"},{"lineNumber":89,"author":{"gitId":"JerryO3"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":90,"author":{"gitId":"JerryO3"},"content":"            itemCount++; // reverse decrement in the event of error","lastModifiedDate":"2024-01-24"},{"lineNumber":91,"author":{"gitId":"JerryO3"},"content":"            throw new CustomExceptions.NoSuchIndexException(","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"JerryO3"},"content":"                    \"Index out of bounds, there is no event with such an index\");","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":94,"author":{"gitId":"JerryO3"},"content":"        return s;","lastModifiedDate":"2024-01-24"},{"lineNumber":95,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":96,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":97,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":98,"author":{"gitId":"JerryO3"},"content":"     * Finds all Item objects in the ItemList instance that contain","lastModifiedDate":"2024-02-05"},{"lineNumber":99,"author":{"gitId":"JerryO3"},"content":"     * the search string in full.","lastModifiedDate":"2024-02-05"},{"lineNumber":100,"author":{"gitId":"JerryO3"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":101,"author":{"gitId":"JerryO3"},"content":"     * @param s is the search string used to search for relevant items.","lastModifiedDate":"2024-02-05"},{"lineNumber":102,"author":{"gitId":"JerryO3"},"content":"     * @return a string of items separated by newlines that contain","lastModifiedDate":"2024-02-05"},{"lineNumber":103,"author":{"gitId":"JerryO3"},"content":"     *     the given search string s.","lastModifiedDate":"2024-02-05"},{"lineNumber":104,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":105,"author":{"gitId":"JerryO3"},"content":"    public String find(String s) {","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"JerryO3"},"content":"        StringBuilder out \u003d new StringBuilder();","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"JerryO3"},"content":"        int index \u003d 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"JerryO3"},"content":"        for (Item i : listOfItems) {","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"JerryO3"},"content":"            if (i.getName().contains(s)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"JerryO3"},"content":"                out.append(index).append(\".\").append(i.toString()).append(\"\\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"JerryO3"},"content":"                index++;","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"JerryO3"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"JerryO3"},"content":"        if (out.toString().equals(\"\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"JerryO3"},"content":"            return \"No tasks contain the search string: \" + s;","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"JerryO3"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":117,"author":{"gitId":"JerryO3"},"content":"            return out.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":118,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":121,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":122,"author":{"gitId":"JerryO3"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":123,"author":{"gitId":"JerryO3"},"content":"        int c \u003d 0;","lastModifiedDate":"2024-01-24"},{"lineNumber":124,"author":{"gitId":"JerryO3"},"content":"        StringBuilder out \u003d new StringBuilder();","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"JerryO3"},"content":"        while (c \u003c listOfItems.size()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":126,"author":{"gitId":"JerryO3"},"content":"            out.append(c + 1).append(\".\").append(listOfItems.get(c).toString()).append(\"\\n\");","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"JerryO3"},"content":"            c++;","lastModifiedDate":"2024-01-24"},{"lineNumber":128,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":129,"author":{"gitId":"JerryO3"},"content":"        return out.toString().trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":130,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":131,"author":{"gitId":"JerryO3"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"JerryO3":131}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryO3"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"JerryO3"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"JerryO3"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"JerryO3"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"JerryO3"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"JerryO3"},"content":"public class Launcher {","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"JerryO3"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"JerryO3"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"JerryO3"},"content":"}","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"JerryO3":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryO3"},"content":"package duke;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"JerryO3"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"JerryO3"},"content":"import duke.control.DialogBox;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"JerryO3"},"content":"import duke.control.MainWindow;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"JerryO3"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"JerryO3"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"JerryO3"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"JerryO3"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"JerryO3"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"JerryO3"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"JerryO3"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"JerryO3"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"JerryO3"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"JerryO3"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"JerryO3"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"JerryO3"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"JerryO3"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"JerryO3"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"JerryO3"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"JerryO3"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"JerryO3"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"JerryO3"},"content":"            stage.show();","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"JerryO3"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().greet();","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"JerryO3"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"JerryO3"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"JerryO3"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"JerryO3":34}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryO3"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"JerryO3"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"JerryO3"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"JerryO3"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"JerryO3"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"JerryO3"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"JerryO3"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"JerryO3"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"JerryO3"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"JerryO3"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"JerryO3"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"JerryO3"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"JerryO3"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"JerryO3"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"JerryO3"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"JerryO3"},"content":" * The Parser class helps to parse string inputs into both","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"JerryO3"},"content":" * DateTime objects and Command objects. It also handles exceptions","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"JerryO3"},"content":" * that are not CustomExceptions, and throw the equivalent CustomExceptions","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"JerryO3"},"content":" * to be caught by Duke.","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"JerryO3"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"JerryO3"},"content":"public class Parser {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"JerryO3"},"content":"    private static DateTimeFormatterBuilder[] dtFormats \u003d {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"JerryO3"},"content":"            new DateTimeFormatterBuilder().append(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.SHORT)),","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"JerryO3"},"content":"            new DateTimeFormatterBuilder().appendPattern(\"dd/MM/yy-HHmm\"),","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"JerryO3"},"content":"            new DateTimeFormatterBuilder().appendPattern(\"dd/MM/yy HHmm\"),","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"JerryO3"},"content":"            new DateTimeFormatterBuilder().appendPattern(\"dd-MM-yy-HHmm\"),","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"JerryO3"},"content":"            new DateTimeFormatterBuilder().appendPattern(\"dd-MM-yy HHmm\"),","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"JerryO3"},"content":"            new DateTimeFormatterBuilder().appendPattern(\"dd/MM/yy-hh:mma\"),","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"JerryO3"},"content":"            new DateTimeFormatterBuilder().appendPattern(\"dd/MM/yy hh:mma\"),","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"JerryO3"},"content":"            new DateTimeFormatterBuilder().appendPattern(\"dd-MM-yy-hh:mma\"),","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"JerryO3"},"content":"            new DateTimeFormatterBuilder().appendPattern(\"dd-MM-yy hh:mma\"),","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"JerryO3"},"content":"            new DateTimeFormatterBuilder().appendPattern(\"d/M/y HHmm\")","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"JerryO3"},"content":"    };","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"JerryO3"},"content":"    private HashMap\u003cString, Command\u003e commands \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"JerryO3"},"content":"    private ItemList itemList;","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"JerryO3"},"content":"     * Creates a parser object, and populates the commands hashmap","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"JerryO3"},"content":"     * with recognized commands. This makes the command range more","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"JerryO3"},"content":"     * easily extensible.","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"JerryO3"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"JerryO3"},"content":"     * @param itemlist is the current instance of the ItemList that is","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"JerryO3"},"content":"     *                 being modified by the current Duke instance Elias.","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"JerryO3"},"content":"    public Parser(ItemList itemlist) {","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"JerryO3"},"content":"        this.itemList \u003d itemlist;","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"JerryO3"},"content":"        commands.put(\"event\", new AddCommand());","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"JerryO3"},"content":"        commands.put(\"todo\", new AddCommand());","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"JerryO3"},"content":"        commands.put(\"deadline\", new AddCommand());","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"JerryO3"},"content":"        commands.put(\"mark\", new MarkCommand());","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"JerryO3"},"content":"        commands.put(\"unmark\", new UnmarkCommand());","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"JerryO3"},"content":"        commands.put(\"delete\", new DeleteCommand());","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"JerryO3"},"content":"        commands.put(\"list\", new ListCommand());","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"JerryO3"},"content":"        commands.put(\"find\", new FindCommand());","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"JerryO3"},"content":"     * Parses a string input into a LocalDateTime object. If the input","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"JerryO3"},"content":"     * cannot be parsed according to any format in dtFormats,","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"JerryO3"},"content":"     * it throws a DateTimeParse Exception.","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"JerryO3"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"JerryO3"},"content":"     * @param s is the input string to be parsed as a LocalDateTime object.","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"JerryO3"},"content":"     * @return a LocalDateTime object.","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"JerryO3"},"content":"     * @throws DateTimeParseException when the input fails to parse, based on","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"JerryO3"},"content":"     *                                the above list of patterns in dtFormats.","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"JerryO3"},"content":"    public static LocalDateTime parseDtString(String s) throws DateTimeParseException {","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"JerryO3"},"content":"        DateTimeParseException thrown \u003d null;","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"JerryO3"},"content":"        for (DateTimeFormatterBuilder f : dtFormats) {","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"JerryO3"},"content":"            try {","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"JerryO3"},"content":"                LocalDateTime dt \u003d LocalDateTime.parse(s.trim(), f.toFormatter());","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"JerryO3"},"content":"                return dt;","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"JerryO3"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"JerryO3"},"content":"                thrown \u003d e;","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"JerryO3"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"JerryO3"},"content":"        throw thrown;","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"JerryO3"},"content":"     * Parses a string input into a LocalDateTime object. If the input","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"JerryO3"},"content":"     * cannot be parsed, it throws a DateTimeParse Exception.","lastModifiedDate":"2024-02-05"},{"lineNumber":87,"author":{"gitId":"JerryO3"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":88,"author":{"gitId":"JerryO3"},"content":"     * @param command is the input string to be parsed as a command object.","lastModifiedDate":"2024-02-05"},{"lineNumber":89,"author":{"gitId":"JerryO3"},"content":"     * @return a string that confirms that the command has been executed correctly.","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"JerryO3"},"content":"     * @throws CustomExceptions.UnrecognizedCommandException when the input fails","lastModifiedDate":"2024-02-05"},{"lineNumber":91,"author":{"gitId":"JerryO3"},"content":"     *                                                       to parse, based on the","lastModifiedDate":"2024-02-05"},{"lineNumber":92,"author":{"gitId":"JerryO3"},"content":"     *                                                       map containing commands.","lastModifiedDate":"2024-02-05"},{"lineNumber":93,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":94,"author":{"gitId":"JerryO3"},"content":"    public String parse(String command) throws CustomExceptions {","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"JerryO3"},"content":"        String[] arr \u003d command.split(\" \");","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"JerryO3"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"JerryO3"},"content":"            return commands.get(arr[0]).execute(command, arr, itemList);","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"JerryO3"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"JerryO3"},"content":"            throw new CustomExceptions.UnrecognizedCommandException(\"\");","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"JerryO3"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"JerryO3":102}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryO3"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"JerryO3"},"content":"import java.io.EOFException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"JerryO3"},"content":"import java.io.File;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"JerryO3"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"JerryO3"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"JerryO3"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"JerryO3"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"JerryO3"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"JerryO3"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"JerryO3"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"JerryO3"},"content":" * The Storage Class represents an instance containing","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"JerryO3"},"content":" * information of where to store and retrieve ItemList data","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"JerryO3"},"content":" * stored on disk. It also provides methods to read from and write","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"JerryO3"},"content":" * to disk by serializing and deserializing the current ItemList.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"JerryO3"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"JerryO3"},"content":"public class Storage {","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"JerryO3"},"content":"    private String path \u003d \"./duke.txt\";","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"JerryO3"},"content":"     * Creates a Storage instance containing the filepath","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"JerryO3"},"content":"     * to the date storage location on the disk. The Storage","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"JerryO3"},"content":"     * object is instantiated when the main method in Duke is run.","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"JerryO3"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"JerryO3"},"content":"     * @param filepath is a string that determines where the saved","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"JerryO3"},"content":"     *                 ItemLists are read from and written to on the","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"JerryO3"},"content":"     *                 disk.","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"JerryO3"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"JerryO3"},"content":"        if (new File(filepath).exists()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"JerryO3"},"content":"            this.path \u003d filepath;","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"JerryO3"},"content":"     * Takes a ItemList Object and stores it on disk in duke.txt in","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"JerryO3"},"content":"     * its serialized form.","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"JerryO3"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"JerryO3"},"content":"     * @param il is the Itemlist object to be serialized and stored.","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"JerryO3"},"content":"    public void writeToFile(ItemList il) {","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"JerryO3"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"JerryO3"},"content":"            final FileOutputStream fout \u003d new FileOutputStream(this.path);","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"JerryO3"},"content":"            final ObjectOutputStream out \u003d new ObjectOutputStream(fout);","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"JerryO3"},"content":"            out.writeObject(il);","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"JerryO3"},"content":"            out.flush();","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"JerryO3"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"JerryO3"},"content":"            System.out.println(\"Unable to create file: \" + e);","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"JerryO3"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"JerryO3"},"content":"            System.out.println(\"Something went wrong when saving file: \" + e);","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"JerryO3"},"content":"     * Takes a serialized ItemList Object stored on disk in duke.txt and","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"JerryO3"},"content":"     * returns its deserialized form for use.","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"JerryO3"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"JerryO3"},"content":"     * @return an ItemList object that has been deserialized from duke.txt","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"JerryO3"},"content":"    public ItemList readFromFile() {","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"JerryO3"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"JerryO3"},"content":"            ObjectInputStream in \u003d new ObjectInputStream(new FileInputStream(this.path));","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"JerryO3"},"content":"            final ItemList il \u003d (ItemList) in.readObject();","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"JerryO3"},"content":"            return il;","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"JerryO3"},"content":"        } catch (FileNotFoundException | EOFException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"JerryO3"},"content":"            return new ItemList();","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"JerryO3"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"JerryO3"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"JerryO3"},"content":"            System.out.println(\"Something went wrong when loading save file: \" + e);","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"JerryO3"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"JerryO3"},"content":"            System.out.println(\"Something went wrong parsing save file: \" + e);","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"JerryO3"},"content":"        return new ItemList();","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"JerryO3"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"JerryO3":77}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryO3"},"content":"package duke;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"JerryO3"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"JerryO3"},"content":" * The UI class contains formatting styles for outputs,","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"JerryO3"},"content":" * as well as the logo and greeting text Strings. A UI object","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"JerryO3"},"content":" * is instantiated within the main method of Duke.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"JerryO3"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"JerryO3"},"content":"public class UI {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"JerryO3"},"content":"    private String greet \u003d \"Hello! I\u0027m ELIAS\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"JerryO3"},"content":"            + \"What can I do for you?\";","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"JerryO3"},"content":"    private String logo \u003d \"______ _ _\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"JerryO3"},"content":"            + \"|  ____| (_)\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"JerryO3"},"content":"            + \"| |__  | |_  __ _ ___\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"JerryO3"},"content":"            + \"|  __| | | |/ _` / __|\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"JerryO3"},"content":"            + \"| |____| | | (_| \\\\__ \\\\\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"JerryO3"},"content":"            + \"|______|_|_|\\\\__,_|___/\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"JerryO3"},"content":"    private String bye \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"JerryO3"},"content":"    public String getGreet() {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"JerryO3"},"content":"        return greet;","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"JerryO3"},"content":"    public String getLogo() {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"JerryO3"},"content":"        return logo;","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"JerryO3"},"content":"    public String getBye() {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"JerryO3"},"content":"        return bye;","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"JerryO3"},"content":"     * Takes in a string and returns a string that is","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"JerryO3"},"content":"     * formatted with horizontal rules above and below","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"JerryO3"},"content":"     * for aesthetic purposes.","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"JerryO3"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"JerryO3"},"content":"     * @param s string input for formatting.","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"JerryO3"},"content":"     * @return a string that is formatted.","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"JerryO3"},"content":"    public String format(String s) {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"JerryO3"},"content":"        return \"    ____________________________________________________________\\n     \"","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"JerryO3"},"content":"                + s","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"JerryO3"},"content":"                + \"\\n    ____________________________________________________________\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"JerryO3"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"JerryO3":47}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryO3"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"JerryO3"},"content":"import duke.CustomExceptions;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"JerryO3"},"content":"import duke.ItemList;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"JerryO3"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"JerryO3"},"content":" * Represents a command to add either a To-do, Deadline, Event, or","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"JerryO3"},"content":" * any other instance of a class that implements the Item interface","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"JerryO3"},"content":" * to an ItemList Object.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"JerryO3"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"JerryO3"},"content":"public class AddCommand implements Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"JerryO3"},"content":"     * Returns a String that confirms the add command has been executed.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"JerryO3"},"content":"     * The confirmation string is obtained from methods of the classes","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"JerryO3"},"content":"     * that implement Item directly.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"JerryO3"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"JerryO3"},"content":"     * @param command the string input received by scanner.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"JerryO3"},"content":"     * @param info a string array obtained from splitting command with","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"JerryO3"},"content":"     *             the whitespace regex.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"JerryO3"},"content":"     * @param itemList the ItemList object used in the current Elias instance.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"JerryO3"},"content":"     * @return a string that confirms that the command was executed correctly.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"JerryO3"},"content":"     * @throws CustomExceptions.InvalidTaskException if there is no following","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"JerryO3"},"content":"     *                                               information after the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"JerryO3"},"content":"     * @throws CustomExceptions.NamelessTaskException if the name in the command","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"JerryO3"},"content":"     *                                                cannot be parsed.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"JerryO3"},"content":"     * @throws CustomExceptions.ToBeforeFromException if the /to command comes","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"JerryO3"},"content":"     *                                                before the /from command.","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"JerryO3"},"content":"     * @throws CustomExceptions.EventExceptionForFromTo if the start and end time","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"JerryO3"},"content":"     *                                                  of the event fails to parse.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"JerryO3"},"content":"    public String execute(String command, String[] info, ItemList itemList)","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"JerryO3"},"content":"            throws CustomExceptions {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"JerryO3"},"content":"        if (info[0].equals(\"todo\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"JerryO3"},"content":"            if (info.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"JerryO3"},"content":"                throw new CustomExceptions.InvalidTaskException(","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"JerryO3"},"content":"                        \"Please re-enter Todo with a valid name\");","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"JerryO3"},"content":"            } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"JerryO3"},"content":"                return itemList.addToDo(info);","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"JerryO3"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"JerryO3"},"content":"        } else if (info[0].equals(\"deadline\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"JerryO3"},"content":"            if (info.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"JerryO3"},"content":"                throw new CustomExceptions.InvalidTaskException(","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"JerryO3"},"content":"                        \"Please re-enter duke.item.Deadline with a valid name\");","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"JerryO3"},"content":"            } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"JerryO3"},"content":"                try {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"JerryO3"},"content":"                    return itemList.addDeadline(info);","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"JerryO3"},"content":"                } catch (CustomExceptions.NamelessTaskException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"JerryO3"},"content":"                    throw new CustomExceptions.NamelessTaskException(","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"JerryO3"},"content":"                            \"Please re-enter duke.item.Deadline with a valid name\");","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"JerryO3"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"JerryO3"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"JerryO3"},"content":"        } else if (info[0].equals(\"event\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"JerryO3"},"content":"            if (info.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"JerryO3"},"content":"                throw new CustomExceptions.InvalidTaskException(","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"JerryO3"},"content":"                        \"Please re-enter duke.item.Event with a valid name\");","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"JerryO3"},"content":"            } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"JerryO3"},"content":"                try {","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"JerryO3"},"content":"                    return itemList.addEvent(info);","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"JerryO3"},"content":"                } catch (CustomExceptions.ToBeforeFromException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"JerryO3"},"content":"                    throw new CustomExceptions.ToBeforeFromException(","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"JerryO3"},"content":"                            \"Please re-enter duke.item.Event /from BEFORE /to: \" + command);","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"JerryO3"},"content":"                } catch (CustomExceptions.EventExceptionForFromTo e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"JerryO3"},"content":"                    throw new CustomExceptions.EventExceptionForFromTo(","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"JerryO3"},"content":"                            \"Could not parse /from and /to strings: \" + command);","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"JerryO3"},"content":"                } catch (CustomExceptions.NamelessTaskException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"JerryO3"},"content":"                    throw new CustomExceptions.NamelessTaskException(","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"JerryO3"},"content":"                            \"Please re-enter duke.item.Event with a valid name\");","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"JerryO3"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"JerryO3"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"JerryO3"},"content":"        return null;","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"JerryO3"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"JerryO3":73}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryO3"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"JerryO3"},"content":"import duke.CustomExceptions;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"JerryO3"},"content":"import duke.ItemList;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"JerryO3"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"JerryO3"},"content":" * The Command interface ensures that all its implementing","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"JerryO3"},"content":" * classes contain the execute method.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"JerryO3"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"JerryO3"},"content":"public interface Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"JerryO3"},"content":"     * Returns a String that confirms the command has been executed.","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"JerryO3"},"content":"     * @param command the string input received by scanner.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"JerryO3"},"content":"     * @param info a string array obtained from splitting command with","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"JerryO3"},"content":"     *             the whitespace regex.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"JerryO3"},"content":"     * @param itemList the ItemList object used in the current Elias instance.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"JerryO3"},"content":"     * @return a string that confirms that the command was executed correctly.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"JerryO3"},"content":"     * @throws CustomExceptions which encompasses all custom exceptions in this","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"JerryO3"},"content":"     *                          project","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"JerryO3"},"content":"    String execute(String command, String[] info, ItemList itemList) throws CustomExceptions;","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"JerryO3"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"JerryO3":23}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryO3"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"JerryO3"},"content":"import duke.CustomExceptions;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"JerryO3"},"content":"import duke.ItemList;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"JerryO3"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"JerryO3"},"content":" * Represents a command to delete either a To-do, Deadline, Event, or","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"JerryO3"},"content":" * any other instance of a class that implements the Item interface","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"JerryO3"},"content":" * to an ItemList Object.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"JerryO3"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"JerryO3"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"JerryO3"},"content":"     * Returns a String that confirms the delete command has been executed.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"JerryO3"},"content":"     * The confirmation string is obtained from methods of the classes","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"JerryO3"},"content":"     * that implement Item directly.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"JerryO3"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"JerryO3"},"content":"     * @param command the string input received by scanner.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"JerryO3"},"content":"     * @param info a string array obtained from splitting command with","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"JerryO3"},"content":"     *             the whitespace regex.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"JerryO3"},"content":"     * @param itemList the ItemList object used in the current Elias instance.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"JerryO3"},"content":"     * @return a string that confirms that the command was executed correctly.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"JerryO3"},"content":"     * @throws CustomExceptions.MarkException if there is no following information","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"JerryO3"},"content":"     *                                        after the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"JerryO3"},"content":"     * @throws CustomExceptions.UnrecognizedCommandException if a negative integer","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"JerryO3"},"content":"     *                                                       index was passed.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"JerryO3"},"content":"     * @throws CustomExceptions.NoSuchIndexException if an index out of bounds was","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"JerryO3"},"content":"     *                                               passed.","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"JerryO3"},"content":"    public String execute(String command, String[] info, ItemList itemList) throws CustomExceptions {","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"JerryO3"},"content":"        if (info.length !\u003d 2) {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"JerryO3"},"content":"            throw new CustomExceptions.MarkException(","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"JerryO3"},"content":"                    \"Please enter delete command in the following format: delete \u003cindex\u003e\");","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"JerryO3"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"JerryO3"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"JerryO3"},"content":"                int index \u003d Integer.parseUnsignedInt(info[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"JerryO3"},"content":"                return itemList.removeItem(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"JerryO3"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"JerryO3"},"content":"                throw new CustomExceptions.UnrecognizedCommandException(\"\");","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"JerryO3"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"JerryO3"},"content":"                throw new CustomExceptions.NoSuchIndexException(","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"JerryO3"},"content":"                        \"Index out of bounds, there is no event with such an index\");","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"JerryO3"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"JerryO3"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"JerryO3":46}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryO3"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"JerryO3"},"content":"import duke.CustomExceptions;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"JerryO3"},"content":"import duke.ItemList;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"JerryO3"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"JerryO3"},"content":" * Represents a command to find any Item object within the","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"JerryO3"},"content":" * current ItemList that contains a given search string, parsed","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"JerryO3"},"content":" * from command.","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"JerryO3"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"JerryO3"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"JerryO3"},"content":"     * @param command the string input received by scanner.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"JerryO3"},"content":"     * @param info a string array obtained from splitting command with","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"JerryO3"},"content":"     *             the whitespace regex.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"JerryO3"},"content":"     * @param itemList the ItemList object used in the current Elias instance.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"JerryO3"},"content":"     * @returna string that confirms that the command was executed correctly.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"JerryO3"},"content":"     * @throws CustomExceptions.FindException when no search string is given.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"JerryO3"},"content":"    public String execute(String command, String[] info, ItemList itemList) throws CustomExceptions {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"JerryO3"},"content":"        String searchString;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"JerryO3"},"content":"        if (info.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"JerryO3"},"content":"            throw new CustomExceptions.FindException(","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"JerryO3"},"content":"                    \"Please enter valid search string\");","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"JerryO3"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"JerryO3"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"JerryO3"},"content":"            for (int i \u003d 1; i \u003c info.length; i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"JerryO3"},"content":"                sb.append(info[i]).append(\" \");","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"JerryO3"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"JerryO3"},"content":"            searchString \u003d sb.toString().trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"JerryO3"},"content":"        return itemList.find(searchString);","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"JerryO3"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"JerryO3":35}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryO3"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"JerryO3"},"content":"import duke.CustomExceptions;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"JerryO3"},"content":"import duke.ItemList;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"JerryO3"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"JerryO3"},"content":" * Represents a command to list all To-do, Deadline, Event, or","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"JerryO3"},"content":" * any other instances of a class that implements the Item interface","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"JerryO3"},"content":" * to an ItemList Object, using the itemList toString() method","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"JerryO3"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"JerryO3"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"JerryO3"},"content":"     * Returns a String that confirms the list command has been executed.","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"JerryO3"},"content":"     * The confirmation string is obtained from methods of the classes","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"JerryO3"},"content":"     * that implement Item directly.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"JerryO3"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"JerryO3"},"content":"     * @param command the string input received by scanner.","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"JerryO3"},"content":"     * @param info a string array obtained from splitting command with","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"JerryO3"},"content":"     *             the whitespace regex.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"JerryO3"},"content":"     * @param itemList the ItemList object used in the current Elias instance.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"JerryO3"},"content":"     * @return a string that confirms that the command was executed correctly.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"JerryO3"},"content":"    public String execute(String command, String[] info, ItemList itemList) throws CustomExceptions {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"JerryO3"},"content":"        if (info.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"JerryO3"},"content":"            return itemList.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"JerryO3"},"content":"        return null;","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"JerryO3"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"JerryO3":29}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryO3"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"JerryO3"},"content":"import duke.CustomExceptions;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"JerryO3"},"content":"import duke.ItemList;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"JerryO3"},"content":"import duke.item.Item;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"JerryO3"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"JerryO3"},"content":" * Represents a command to mark either a To-do, Deadline, Event, or","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"JerryO3"},"content":" * any other instance of a class that implements the Item interface","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"JerryO3"},"content":" * to an ItemList Object as completed.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"JerryO3"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"JerryO3"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"JerryO3"},"content":"     * Returns a String that confirms the mark command has been executed.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"JerryO3"},"content":"     * The confirmation string is obtained from methods of the classes","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"JerryO3"},"content":"     * that implement Item directly.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"JerryO3"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"JerryO3"},"content":"     * @param command the string input received by scanner.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"JerryO3"},"content":"     * @param info a string array obtained from splitting command with","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"JerryO3"},"content":"     *             the whitespace regex.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"JerryO3"},"content":"     * @param itemList the ItemList object used in the current Elias instance.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"JerryO3"},"content":"     * @return a string that confirms that the command was executed correctly.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"JerryO3"},"content":"     * @throws CustomExceptions.MarkException if there is no following information","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"JerryO3"},"content":"     *                                        after the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"JerryO3"},"content":"     * @throws CustomExceptions.UnrecognizedCommandException if a negative integer","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"JerryO3"},"content":"     *                                                       index was passed.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"JerryO3"},"content":"     * @throws CustomExceptions.NoSuchIndexException if an index out of bounds was","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"JerryO3"},"content":"     *                                               passed.","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"JerryO3"},"content":"    public String execute(String command, String[] info, ItemList itemList) throws CustomExceptions {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"JerryO3"},"content":"        if (info.length !\u003d 2) {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"JerryO3"},"content":"            throw new CustomExceptions.MarkException(\"Please enter mark command in the following format: mark \u003cindex\u003e\");","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"JerryO3"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"JerryO3"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"JerryO3"},"content":"                int index \u003d Integer.parseUnsignedInt(info[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"JerryO3"},"content":"                Item item \u003d itemList.getList().get(index - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"JerryO3"},"content":"                item.markDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"JerryO3"},"content":"                return item.doneMessage();","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"JerryO3"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"JerryO3"},"content":"                throw new CustomExceptions.UnrecognizedCommandException(\"\");","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"JerryO3"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"JerryO3"},"content":"                throw new CustomExceptions.NoSuchIndexException(","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"JerryO3"},"content":"                        \"Index out of bounds, there is no event with such an index\");","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"JerryO3"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"JerryO3"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"JerryO3":48}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryO3"},"content":"package duke.command;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"JerryO3"},"content":"import duke.CustomExceptions;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"JerryO3"},"content":"import duke.ItemList;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"JerryO3"},"content":"import duke.item.Item;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"JerryO3"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"JerryO3"},"content":" * Represents a command to mark either a To-do, Deadline, Event, or","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"JerryO3"},"content":" * any other instance of a class that implements the Item interface","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"JerryO3"},"content":" * to an ItemList Object as incomplete.","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"JerryO3"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"JerryO3"},"content":"public class UnmarkCommand implements Command {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"JerryO3"},"content":"     * Returns a String that confirms the unmark command has been executed.","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"JerryO3"},"content":"     * The confirmation string is obtained from methods of the classes","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"JerryO3"},"content":"     * that implement Item directly.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"JerryO3"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"JerryO3"},"content":"     * @param command the string input received by scanner.","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"JerryO3"},"content":"     * @param info a string array obtained from splitting command with","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"JerryO3"},"content":"     *             the whitespace regex.","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"JerryO3"},"content":"     * @param itemList the ItemList object used in the current Elias instance.","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"JerryO3"},"content":"     * @return a string that confirms that the command was executed correctly.","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"JerryO3"},"content":"     * @throws CustomExceptions.MarkException if there is no following information","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"JerryO3"},"content":"     *                                        after the command.","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"JerryO3"},"content":"     * @throws CustomExceptions.UnrecognizedCommandException if a negative integer","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"JerryO3"},"content":"     *                                                       index was passed.","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"JerryO3"},"content":"     * @throws CustomExceptions.NoSuchIndexException if an index out of bounds was","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"JerryO3"},"content":"     *                                               passed.","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"JerryO3"},"content":"    public String execute(String command, String[] info, ItemList itemList) throws CustomExceptions {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"JerryO3"},"content":"        if (info.length !\u003d 2) {","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"JerryO3"},"content":"            throw new CustomExceptions.MarkException(","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"JerryO3"},"content":"                    \"Please enter unmark command in the following format: unmark \u003cindex\u003e\");","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"JerryO3"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"JerryO3"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"JerryO3"},"content":"                int index \u003d Integer.parseUnsignedInt(info[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"JerryO3"},"content":"                Item item \u003d itemList.getList().get(index - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"JerryO3"},"content":"                item.markUndone();","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"JerryO3"},"content":"                return item.undoneMessage();","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"JerryO3"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"JerryO3"},"content":"                throw new CustomExceptions.UnrecognizedCommandException(\"\");","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"JerryO3"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"JerryO3"},"content":"                throw new CustomExceptions.NoSuchIndexException(","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"JerryO3"},"content":"                        \"Index out of bounds, there is no event with such an index\");","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"JerryO3"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"JerryO3"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"JerryO3":49}},{"path":"src/main/java/duke/control/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryO3"},"content":"package duke.control;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"JerryO3"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"JerryO3"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"JerryO3"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"JerryO3"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"JerryO3"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"JerryO3"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"JerryO3"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"JerryO3"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"JerryO3"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"JerryO3"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"JerryO3"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"JerryO3"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"JerryO3"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"JerryO3"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"JerryO3"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"JerryO3"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"JerryO3"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"JerryO3"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"JerryO3"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"JerryO3"},"content":"    @FXML","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"JerryO3"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"JerryO3"},"content":"    @FXML","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"JerryO3"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"JerryO3"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"JerryO3"},"content":"        try {","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"JerryO3"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"JerryO3"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"JerryO3"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"JerryO3"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"JerryO3"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"JerryO3"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"JerryO3"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"JerryO3"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"JerryO3"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"JerryO3"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"JerryO3"},"content":"    private void flip() {","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"JerryO3"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"JerryO3"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"JerryO3"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"JerryO3"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"JerryO3"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"JerryO3"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"JerryO3"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"JerryO3"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"JerryO3"},"content":"        db.flip();","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"JerryO3"},"content":"        return db;","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"JerryO3"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"JerryO3":61}},{"path":"src/main/java/duke/control/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryO3"},"content":"package duke.control;","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"JerryO3"},"content":"import duke.Duke;","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"JerryO3"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"JerryO3"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"JerryO3"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"JerryO3"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"JerryO3"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"JerryO3"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"JerryO3"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"JerryO3"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"JerryO3"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"JerryO3"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"JerryO3"},"content":"/**","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"JerryO3"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"JerryO3"},"content":" */","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"JerryO3"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"JerryO3"},"content":"    @FXML","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"JerryO3"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"JerryO3"},"content":"    @FXML","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"JerryO3"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-21"},{"lineNumber":22,"author":{"gitId":"JerryO3"},"content":"    @FXML","lastModifiedDate":"2024-02-21"},{"lineNumber":23,"author":{"gitId":"JerryO3"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-21"},{"lineNumber":24,"author":{"gitId":"JerryO3"},"content":"    @FXML","lastModifiedDate":"2024-02-21"},{"lineNumber":25,"author":{"gitId":"JerryO3"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-21"},{"lineNumber":26,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":27,"author":{"gitId":"JerryO3"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-21"},{"lineNumber":28,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":29,"author":{"gitId":"JerryO3"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2024-02-21"},{"lineNumber":30,"author":{"gitId":"JerryO3"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/elias.png\"));","lastModifiedDate":"2024-02-21"},{"lineNumber":31,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":32,"author":{"gitId":"JerryO3"},"content":"    @FXML","lastModifiedDate":"2024-02-21"},{"lineNumber":33,"author":{"gitId":"JerryO3"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-21"},{"lineNumber":34,"author":{"gitId":"JerryO3"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-21"},{"lineNumber":35,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":36,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":37,"author":{"gitId":"JerryO3"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-21"},{"lineNumber":38,"author":{"gitId":"JerryO3"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-21"},{"lineNumber":39,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":40,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":41,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-21"},{"lineNumber":42,"author":{"gitId":"JerryO3"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-21"},{"lineNumber":43,"author":{"gitId":"JerryO3"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-21"},{"lineNumber":44,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-21"},{"lineNumber":45,"author":{"gitId":"JerryO3"},"content":"    @FXML","lastModifiedDate":"2024-02-21"},{"lineNumber":46,"author":{"gitId":"JerryO3"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-21"},{"lineNumber":47,"author":{"gitId":"JerryO3"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-21"},{"lineNumber":48,"author":{"gitId":"JerryO3"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-21"},{"lineNumber":49,"author":{"gitId":"JerryO3"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-21"},{"lineNumber":50,"author":{"gitId":"JerryO3"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-21"},{"lineNumber":51,"author":{"gitId":"JerryO3"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-21"},{"lineNumber":52,"author":{"gitId":"JerryO3"},"content":"        );","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"JerryO3"},"content":"        if (userInput.getText().equals(\"bye\")) {","lastModifiedDate":"2024-02-21"},{"lineNumber":54,"author":{"gitId":"JerryO3"},"content":"            Platform.exit();","lastModifiedDate":"2024-02-21"},{"lineNumber":55,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-02-21"},{"lineNumber":56,"author":{"gitId":"JerryO3"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-21"},{"lineNumber":57,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":58,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":59,"author":{"gitId":"JerryO3"},"content":"    public void greet() {","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"JerryO3"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.ui.getLogo(), dukeImage));","lastModifiedDate":"2024-02-21"},{"lineNumber":61,"author":{"gitId":"JerryO3"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.ui.getGreet(), dukeImage));","lastModifiedDate":"2024-02-21"},{"lineNumber":62,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-21"},{"lineNumber":63,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":64,"author":{"gitId":"JerryO3"},"content":"}","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"JerryO3":64}},{"path":"src/main/java/duke/item/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryO3"},"content":"package duke.item;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"JerryO3"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"JerryO3"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"JerryO3"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"JerryO3"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"JerryO3"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"JerryO3"},"content":"import duke.CustomExceptions;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"JerryO3"},"content":"import duke.Parser;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"JerryO3"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"JerryO3"},"content":" * Represents a Deadline, which differs from a To-do and an Event","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"JerryO3"},"content":" * in that it contains 1 DateTime member representing when the","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"JerryO3"},"content":" * doneBy time which the task with the deadline must be completed.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"JerryO3"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"JerryO3"},"content":"public class Deadline implements Item, Serializable {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"JerryO3"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"JerryO3"},"content":"    private String name \u003d \"\";","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"JerryO3"},"content":"    private LocalDateTime doneBy;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"JerryO3"},"content":"     * Creates a new deadline object. The name, isDone and doneBy","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"JerryO3"},"content":"     * field values are obtained from parsing the info argument.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"JerryO3"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"JerryO3"},"content":"     * @param info a string array obtained from splitting command with","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"JerryO3"},"content":"     *             the whitespace regex.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"JerryO3"},"content":"     * @throws CustomExceptions.DeadlineExceptionBy if no /by command was found.","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"JerryO3"},"content":"     * @throws CustomExceptions.NamelessTaskException if the name in the command","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"JerryO3"},"content":"     *                                                cannot be parsed.","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"JerryO3"},"content":"     * @throws CustomExceptions.UnrecognizableDateException if the parser throws","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"JerryO3"},"content":"     *                                                      a DateTimeParseException.","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"JerryO3"},"content":"    public Deadline(String[] info) throws CustomExceptions {","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"JerryO3"},"content":"        int index \u003d 1;","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"JerryO3"},"content":"        String s \u003d \"\";","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"JerryO3"},"content":"        String doneByString \u003d \"\";","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"JerryO3"},"content":"        while (!info[index].equals(\"/by\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"JerryO3"},"content":"            if (index \u003e\u003d info.length - 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"JerryO3"},"content":"                throw new CustomExceptions.DeadlineExceptionBy(\"Please use /by command after deadline name\");","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"JerryO3"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"JerryO3"},"content":"            this.name +\u003d info[index] + \" \";","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"JerryO3"},"content":"            index++;","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"JerryO3"},"content":"        for (int i \u003d index + 1; i \u003c info.length; i++) {","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"JerryO3"},"content":"            doneByString +\u003d info[i] + \" \";","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"JerryO3"},"content":"        this.name \u003d this.name.trim();","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"JerryO3"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"JerryO3"},"content":"            if (doneByString.trim().equals(\"\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"JerryO3"},"content":"                this.doneBy \u003d LocalDateTime.now();","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"JerryO3"},"content":"            } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"JerryO3"},"content":"                this.doneBy \u003d Parser.parseDtString(doneByString.trim());","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"JerryO3"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"JerryO3"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"JerryO3"},"content":"            throw new CustomExceptions.UnrecognizableDateException(\"Date format is unrecognizable, try dd/mm/yy hhmm\");","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"JerryO3"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"JerryO3"},"content":"        if (this.name.equals(\"\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"JerryO3"},"content":"            throw new CustomExceptions.NamelessTaskException(\"Missing duke.item.Event Name\");","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"JerryO3"},"content":"    public String getName() {","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"JerryO3"},"content":"        return this.name;","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"JerryO3"},"content":"    public String doneMessage() {","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"JerryO3"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"JerryO3"},"content":"                + this.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"JerryO3"},"content":"    public String undoneMessage() {","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"JerryO3"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"JerryO3"},"content":"                + this.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"JerryO3"},"content":"    public String printChecked(boolean b) {","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"JerryO3"},"content":"        return b ? \"X\" : \" \";","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"JerryO3"},"content":"    public String addMessage(int num) {","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"JerryO3"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"JerryO3"},"content":"                + \"       \" + this.toString()","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"JerryO3"},"content":"                + \"\\n     Now you have \" + num + \" tasks in the list.\";","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"JerryO3"},"content":"    public String removeMessage(int num) {","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"JerryO3"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"JerryO3"},"content":"                + this.toString()","lastModifiedDate":"2024-02-21"},{"lineNumber":99,"author":{"gitId":"JerryO3"},"content":"                + \"\\nNow you have \" + num + \" tasks in the list.\";","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":103,"author":{"gitId":"JerryO3"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":104,"author":{"gitId":"JerryO3"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":105,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":106,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":107,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":108,"author":{"gitId":"JerryO3"},"content":"    public void markUndone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":109,"author":{"gitId":"JerryO3"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":110,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":111,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":112,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":113,"author":{"gitId":"JerryO3"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":114,"author":{"gitId":"JerryO3"},"content":"        return \"[D][\" + printChecked(this.isDone) + \"] \" + this.name + \" \" + \"(by: \"","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"JerryO3"},"content":"                + this.doneBy.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.SHORT)) + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":116,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":117,"author":{"gitId":"JerryO3"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"JerryO3":117}},{"path":"src/main/java/duke/item/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryO3"},"content":"package duke.item;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"JerryO3"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"JerryO3"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"JerryO3"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"JerryO3"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"JerryO3"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"JerryO3"},"content":"import duke.CustomExceptions;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"JerryO3"},"content":"import duke.Parser;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"JerryO3"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"JerryO3"},"content":" * Represents an Event, which differs from a To-do and a Deadline","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"JerryO3"},"content":" * in that it contains 2 DateTime members representing when the","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"JerryO3"},"content":" * event starts and ends respectively.","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"JerryO3"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"JerryO3"},"content":"public class Event implements Item, Serializable {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"JerryO3"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"JerryO3"},"content":"    private String name \u003d \"\";","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"JerryO3"},"content":"    private LocalDateTime start \u003d LocalDateTime.now();","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"JerryO3"},"content":"    private LocalDateTime end \u003d LocalDateTime.now();","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"JerryO3"},"content":"     * Creates a new deadline object. The name, isDone, start and end","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"JerryO3"},"content":"     * field values are obtained from parsing the info argument.","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"JerryO3"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"JerryO3"},"content":"     * @param info a string array obtained from splitting command with","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"JerryO3"},"content":"     *             the whitespace regex.","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"JerryO3"},"content":"     * @throws CustomExceptions.ToBeforeFromException if the /to command comes","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"JerryO3"},"content":"     *                                                before the /from command.","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"JerryO3"},"content":"     * @throws CustomExceptions.EventExceptionForFromTo if the start and end time","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"JerryO3"},"content":"     *                                                  of the event fails to parse.","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"JerryO3"},"content":"     * @throws CustomExceptions.NamelessTaskException if the name in the command","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"JerryO3"},"content":"     *                                                cannot be parsed.","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"JerryO3"},"content":"     * @throws CustomExceptions.UnrecognizableDateException if the parser throws","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"JerryO3"},"content":"     *                                                      a DateTimeParseException.","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"JerryO3"},"content":"    public Event(String[] info) throws CustomExceptions {","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"JerryO3"},"content":"        int index \u003d 1;","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"JerryO3"},"content":"        String s \u003d \"\";","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"JerryO3"},"content":"        while ((index \u003c info.length) \u0026\u0026 !info[index].equals(\"/from\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"JerryO3"},"content":"            if (info[index].equals(\"/to\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"JerryO3"},"content":"                throw new CustomExceptions.ToBeforeFromException(\"Wrong input, /to should be after /from\");","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"JerryO3"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"JerryO3"},"content":"            this.name +\u003d info[index] + \" \";","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"JerryO3"},"content":"            index++;","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"JerryO3"},"content":"        if (index \u003c info.length) {","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"JerryO3"},"content":"            for (int i \u003d index; i \u003c info.length; i++) {","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"JerryO3"},"content":"                s +\u003d info[i] + \" \";","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"JerryO3"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"JerryO3"},"content":"            try {","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"JerryO3"},"content":"                this.start \u003d Parser.parseDtString(s.split(\"/from|/to\")[1].trim());","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"JerryO3"},"content":"                this.end \u003d Parser.parseDtString(s.split(\"/from|/to\")[2].trim());","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"JerryO3"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"JerryO3"},"content":"                throw new CustomExceptions.EventExceptionForFromTo(\"\");","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"JerryO3"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"JerryO3"},"content":"                throw new CustomExceptions.UnrecognizableDateException(","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"JerryO3"},"content":"                        \"Date format is unrecognizable, try dd/mm/yy hhmm\");","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"JerryO3"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"JerryO3"},"content":"        this.name \u003d this.name.trim();","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"JerryO3"},"content":"        if (this.name.equals(\"\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"JerryO3"},"content":"            throw new CustomExceptions.NamelessTaskException(\"Missing duke.item.Event Name\");","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":68,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":69,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"JerryO3"},"content":"    public String getName() {","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"JerryO3"},"content":"        return this.name;","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"JerryO3"},"content":"    public String doneMessage() {","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"JerryO3"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"JerryO3"},"content":"                + this.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"JerryO3"},"content":"    public String undoneMessage() {","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"JerryO3"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"JerryO3"},"content":"                + this.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"JerryO3"},"content":"    public String printChecked(boolean b) {","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"JerryO3"},"content":"        return b ? \"X\" : \" \";","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"JerryO3"},"content":"    public String addMessage(int num) {","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"JerryO3"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"JerryO3"},"content":"                + \"       \" + this.toString()","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"JerryO3"},"content":"                + \"\\n     Now you have \" + num + \" tasks in the list.\";","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"JerryO3"},"content":"    public String removeMessage(int num) {","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"JerryO3"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"JerryO3"},"content":"                + this.toString()","lastModifiedDate":"2024-02-21"},{"lineNumber":102,"author":{"gitId":"JerryO3"},"content":"                + \"\\nNow you have \" + num + \" tasks in the list.\";","lastModifiedDate":"2024-02-04"},{"lineNumber":103,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":106,"author":{"gitId":"JerryO3"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":107,"author":{"gitId":"JerryO3"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":108,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":109,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":110,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":111,"author":{"gitId":"JerryO3"},"content":"    public void markUndone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":112,"author":{"gitId":"JerryO3"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":113,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":114,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":116,"author":{"gitId":"JerryO3"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":117,"author":{"gitId":"JerryO3"},"content":"        return \"[E][\"","lastModifiedDate":"2024-01-24"},{"lineNumber":118,"author":{"gitId":"JerryO3"},"content":"                + printChecked(this.isDone) + \"] \" + this.name + \" \" + \"(from: \"","lastModifiedDate":"2024-02-04"},{"lineNumber":119,"author":{"gitId":"JerryO3"},"content":"                + this.start.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.SHORT)) + \" to: \"","lastModifiedDate":"2024-02-04"},{"lineNumber":120,"author":{"gitId":"JerryO3"},"content":"                + this.end.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.SHORT)) + \")\";","lastModifiedDate":"2024-02-04"},{"lineNumber":121,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":122,"author":{"gitId":"JerryO3"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"JerryO3":122}},{"path":"src/main/java/duke/item/Item.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryO3"},"content":"package duke.item;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"JerryO3"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"JerryO3"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"JerryO3"},"content":" * The Item interface ensures that ItemList is able to","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"JerryO3"},"content":" * contain all implementing classes of the Item interface.","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"JerryO3"},"content":" * All Items must implement the following methods to be","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"JerryO3"},"content":" * compatible with ItemList methods.","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"JerryO3"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"JerryO3"},"content":"public interface Item extends Serializable {","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"JerryO3"},"content":"    void markDone();","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"JerryO3"},"content":"    void markUndone();","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"JerryO3"},"content":"    String getName();","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"JerryO3"},"content":"    String doneMessage();","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"JerryO3"},"content":"    String undoneMessage();","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"JerryO3"},"content":"    String printChecked(boolean b);","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"JerryO3"},"content":"    String addMessage(int num);","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"JerryO3"},"content":"    String removeMessage(int num);","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"JerryO3"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"JerryO3":29}},{"path":"src/main/java/duke/item/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryO3"},"content":"package duke.item;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"JerryO3"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"JerryO3"},"content":"/**","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"JerryO3"},"content":" * Represents a To-do, which differs from an Event and a Deadline","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"JerryO3"},"content":" * in that it contains no DateTime members. A To-do represents a","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"JerryO3"},"content":" * task that is not tied to any period or moment in time.","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"JerryO3"},"content":" */","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"JerryO3"},"content":"public class ToDo implements Item, Serializable {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"JerryO3"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"JerryO3"},"content":"    private String name \u003d \"\";","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"JerryO3"},"content":"    /**","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"JerryO3"},"content":"     * Creates a new deadline object. The name and isDone","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"JerryO3"},"content":"     * field values are obtained from parsing the name argument.","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"JerryO3"},"content":"     *","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"JerryO3"},"content":"     * @param name a string array obtained from splitting command with","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"JerryO3"},"content":"     *             the whitespace regex.","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"JerryO3"},"content":"     */","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"JerryO3"},"content":"    public ToDo(String[] name) {","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"JerryO3"},"content":"        for (int i \u003d 1; i \u003c name.length; i++) {","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"JerryO3"},"content":"            this.name +\u003d name[i] + \" \";","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"JerryO3"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"JerryO3"},"content":"        this.name \u003d this.name.trim();","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"JerryO3"},"content":"    public String getName() {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"JerryO3"},"content":"        return this.name;","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"JerryO3"},"content":"    public String doneMessage() {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"JerryO3"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"JerryO3"},"content":"                + this.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"JerryO3"},"content":"    public String undoneMessage() {","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"JerryO3"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"JerryO3"},"content":"                + this.toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"JerryO3"},"content":"    public String printChecked(boolean b) {","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"JerryO3"},"content":"        return b ? \"X\" : \" \";","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"JerryO3"},"content":"    public String addMessage(int num) {","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"JerryO3"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"JerryO3"},"content":"                + this.toString()","lastModifiedDate":"2024-02-21"},{"lineNumber":53,"author":{"gitId":"JerryO3"},"content":"                + \"\\nNow you have \" + num + \" tasks in the list.\";","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"JerryO3"},"content":"    public String removeMessage(int num) {","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"JerryO3"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"JerryO3"},"content":"                + this.toString()","lastModifiedDate":"2024-02-21"},{"lineNumber":60,"author":{"gitId":"JerryO3"},"content":"                + \"\\nNow you have \" + num + \" tasks in the list.\";","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"JerryO3"},"content":"    public void markDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"JerryO3"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":68,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":69,"author":{"gitId":"JerryO3"},"content":"    public void markUndone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"JerryO3"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":72,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"JerryO3"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"JerryO3"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"JerryO3"},"content":"        return \"[T][\" + printChecked(this.isDone) + \"] \" + this.name;","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"JerryO3"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"JerryO3":77}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"JerryO3"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"JerryO3"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"JerryO3"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"JerryO3"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"JerryO3"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"JerryO3"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"143.0\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"JerryO3"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"JerryO3"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"JerryO3"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"JerryO3"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"JerryO3"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"JerryO3"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"JerryO3"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"JerryO3"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"JerryO3":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"JerryO3"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":2,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":3,"author":{"gitId":"JerryO3"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":4,"author":{"gitId":"JerryO3"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":5,"author":{"gitId":"JerryO3"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":6,"author":{"gitId":"JerryO3"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":7,"author":{"gitId":"JerryO3"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-21"},{"lineNumber":9,"author":{"gitId":"JerryO3"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2024-02-21"},{"lineNumber":10,"author":{"gitId":"JerryO3"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-02-21"},{"lineNumber":11,"author":{"gitId":"JerryO3"},"content":"            fx:controller\u003d\"duke.control.MainWindow\" \u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":12,"author":{"gitId":"JerryO3"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":13,"author":{"gitId":"JerryO3"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":14,"author":{"gitId":"JerryO3"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":15,"author":{"gitId":"JerryO3"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":16,"author":{"gitId":"JerryO3"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":17,"author":{"gitId":"JerryO3"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":18,"author":{"gitId":"JerryO3"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":19,"author":{"gitId":"JerryO3"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":20,"author":{"gitId":"JerryO3"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":21,"author":{"gitId":"JerryO3"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-21"}],"authorContributionMap":{"JerryO3":21}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryO3"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"JerryO3"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"JerryO3"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"JerryO3"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"JerryO3"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"JerryO3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"JerryO3"},"content":"import duke.Parser;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"JerryO3"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"JerryO3"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"JerryO3"},"content":"    void parseDtString_validInput_returnsNewDateTime() throws Exception {","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"JerryO3"},"content":"        String s \u003d \"10/10/10 1100\";","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"JerryO3"},"content":"        Assertions.assertEquals(LocalDateTime.parse(\"10/10/10, 11:00 AM\",","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"JerryO3"},"content":"                DateTimeFormatter.ofLocalizedDateTime(FormatStyle.SHORT)), Parser.parseDtString(s));","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"JerryO3"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"JerryO3"},"content":"    void parseDtString_invalidInput_throwsDateTimeParseException() {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"JerryO3"},"content":"        String s \u003d \"10/10/10 10\";","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"JerryO3"},"content":"        Assertions.assertThrows(DateTimeParseException.class, () -\u003e Parser.parseDtString(s));","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"JerryO3"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"JerryO3":25}},{"path":"src/test/java/duke/item/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JerryO3"},"content":"package duke.item;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"JerryO3"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"JerryO3"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"JerryO3"},"content":"import duke.CustomExceptions;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"JerryO3"},"content":"public class EventTest {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"JerryO3"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"JerryO3"},"content":"    void constructor_validInput_returnsNewEvent() throws Exception {","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"JerryO3"},"content":"        String s \u003d \"event A /from 10/10/10 1000 /to 10/10/10 1100\";","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"JerryO3"},"content":"        String[] info \u003d s.split(\" \");","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"JerryO3"},"content":"        Event e \u003d new Event(info);","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"JerryO3"},"content":"        Assertions.assertEquals(e.toString(), \"[E][ ] A (from: 10/10/10, 10:00 AM to: 10/10/10, 11:00 AM)\");","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"JerryO3"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"JerryO3"},"content":"    void constructor_missingName_throwsNamelessTaskException() {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"JerryO3"},"content":"        String s \u003d \"event /from 10/10/10 1000 /to 10/10/10 1100\";","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"JerryO3"},"content":"        String[] info \u003d s.split(\" \");","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"JerryO3"},"content":"        Assertions.assertThrows(CustomExceptions.NamelessTaskException.class, () -\u003e new Event(info));","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"JerryO3"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"JerryO3"},"content":"    void constructor_missingFrom_throwsToBeforeFromException() {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"JerryO3"},"content":"        String s \u003d \"event A /to 10/10/10 1100\";","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"JerryO3"},"content":"        String[] info \u003d s.split(\" \");","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"JerryO3"},"content":"        Assertions.assertThrows(CustomExceptions.ToBeforeFromException.class, () -\u003e new Event(info));","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"JerryO3"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"JerryO3"},"content":"    void constructor_missingTo_throwsEventExceptionForFromTo() {","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"JerryO3"},"content":"        String s \u003d \"event A /from 10/10/10 1000\";","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"JerryO3"},"content":"        String[] info \u003d s.split(\" \");","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"JerryO3"},"content":"        Assertions.assertThrows(CustomExceptions.EventExceptionForFromTo.class, () -\u003e new Event(info));","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"JerryO3"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"JerryO3"},"content":"    void constructor_unparseableDateTime_throwsUnrecognizableDateException() {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"JerryO3"},"content":"        Assertions.assertThrows(CustomExceptions.UnrecognizableDateException.class, (","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"JerryO3"},"content":"            ) -\u003e {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"JerryO3"},"content":"            throw new CustomExceptions.UnrecognizableDateException(\"\"); });","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"JerryO3"},"content":"    @Test","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"JerryO3"},"content":"    void constructor_swappedFromTo_throwsToBeforeFromException() {","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"JerryO3"},"content":"        String s \u003d \"event A /to 10/10/10 1100 /from 10/10/10 1000\";","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"JerryO3"},"content":"        String[] info \u003d s.split(\" \");","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"JerryO3"},"content":"        Assertions.assertThrows(CustomExceptions.ToBeforeFromException.class, () -\u003e new Event(info));","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"JerryO3"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"JerryO3"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"JerryO3"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"JerryO3":53}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JerryO3"},"content":"todo 2103 week 2","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"JerryO3"},"content":"todo 2101 presentation prep","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"JerryO3"},"content":"deadline 2101 presentation /by Friday Morning","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"JerryO3"},"content":"deadline 2103 presentation /by Thurs Morning","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"JerryO3"},"content":"event internship talk /from 2 Feb /to 2 Feb","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"JerryO3"},"content":"unknown","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"JerryO3"},"content":"help","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"JerryO3"},"content":"deadline","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"JerryO3"},"content":"todo","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"JerryO3"},"content":"event","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"JerryO3"},"content":"todo event","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"JerryO3"},"content":"deadline 123","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"JerryO3"},"content":"event no idea","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"JerryO3"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"JerryO3"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"JerryO3"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"JerryO3"},"content":"mark 3","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"JerryO3"},"content":"unmark 4","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"JerryO3"},"content":"unmark 6","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"JerryO3"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"JerryO3"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"JerryO3"},"content":"deadline /by","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"JerryO3"},"content":"event /from","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"JerryO3"},"content":"event /to","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"JerryO3"},"content":"event /from /to","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"JerryO3"},"content":"event /from /te","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"JerryO3"},"content":"deadline /be","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"JerryO3"},"content":"event /from /from 123 /to","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"JerryO3"},"content":"delete 1","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"JerryO3"},"content":"delete 2","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"JerryO3"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"JerryO3"},"content":"delete 1","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"JerryO3"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"JerryO3"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"JerryO3":34}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"JerryO3"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JerryO3":1,"-":20}},{"path":"data/duke.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"JerryO3":0}}]
