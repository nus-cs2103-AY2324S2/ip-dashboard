[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"# **Joseph Joshtur!!!**","lastModifiedDate":"2024-02-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"\u003e \"Yare yare daze...\" - Joseph Joestar","lastModifiedDate":"2024-02-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":"JJ frees your mind of having to remember things you need to do. It\u0027s,","lastModifiedDate":"2024-02-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":"- text-based","lastModifiedDate":"2024-02-15"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":"- easy to learn","lastModifiedDate":"2024-02-15"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":"- ~~fast~~ _SUPER_ FAST to use","lastModifiedDate":"2024-02-15"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"All you need to do is, ","lastModifiedDate":"2024-02-15"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"1. download it from [here](https://www.google.com/)","lastModifiedDate":"2024-02-15"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"2. double-click it.","lastModifiedDate":"2024-02-15"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"3. add your tasks.","lastModifiedDate":"2024-02-15"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":"4. let it manage your tasks for you ðŸ˜‰","lastModifiedDate":"2024-02-15"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":"And it is **FREE**!","lastModifiedDate":"2024-02-15"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"Features:","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"- [X] Managing tasks","lastModifiedDate":"2024-02-15"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"- [ ] Managing deadlines (coming soon)","lastModifiedDate":"2024-02-15"},{"lineNumber":24,"author":{"gitId":"iamtr"},"content":"- [ ] Reminders (coming soon)","lastModifiedDate":"2024-02-15"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"***","lastModifiedDate":"2024-02-15"},{"lineNumber":27,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":28,"author":{"gitId":"iamtr"},"content":"If you are a Java programmer, you can use it to practice Java too. Here\u0027s the `main` method:","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"iamtr"},"content":"```java","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"iamtr"},"content":"public class Main {","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"iamtr"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"iamtr"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"iamtr"},"content":"}","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-15"}],"authorContributionMap":{"iamtr":32,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"iamtr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"iamtr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"iamtr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"iamtr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"iamtr"},"content":"    mainClass.set(\"Duke\")","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"iamtr":17,"-":41}},{"path":"data/joseph.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"T | 0 | [ ]  ","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"T | 0 | [ ]  ","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"T | 0 | [ ]  ","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"T | 0 | [ ] hi","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"iamtr":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"# Joseph Joshtur User Guide","lastModifiedDate":"2024-02-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"![overview screenshot](./images/productss.png)","lastModifiedDate":"2024-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":"**Joseph, your handy tool for managing tasks.**","lastModifiedDate":"2024-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":"# Features","lastModifiedDate":"2024-02-23"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":"## Viewing your tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"Command: list","lastModifiedDate":"2024-02-23"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"Shows all the tasks you have added","lastModifiedDate":"2024-02-23"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"![list](./images/list.png)   ","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":"## Adding todo","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":"Command: todo [description]","lastModifiedDate":"2024-02-23"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"Adds a todo with a description","lastModifiedDate":"2024-02-23"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"Example of usage:","lastModifiedDate":"2024-02-23"},{"lineNumber":24,"author":{"gitId":"iamtr"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"todo read book","lastModifiedDate":"2024-02-23"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":30,"author":{"gitId":"iamtr"},"content":"Command: deadline [description] /by [date]","lastModifiedDate":"2024-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"iamtr"},"content":"Adds a deadline at specified date with a description ","lastModifiedDate":"2024-02-23"},{"lineNumber":33,"author":{"gitId":"iamtr"},"content":"Date must follow YYYY-MM-DD format","lastModifiedDate":"2024-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"iamtr"},"content":"Example of usage: ","lastModifiedDate":"2024-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"iamtr"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":38,"author":{"gitId":"iamtr"},"content":"deadline return book /by 2020-12-12","lastModifiedDate":"2024-02-23"},{"lineNumber":39,"author":{"gitId":"iamtr"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":40,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":41,"author":{"gitId":"iamtr"},"content":"## Adding events","lastModifiedDate":"2024-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"iamtr"},"content":"Command: event [description] /from [date] /to [date]","lastModifiedDate":"2024-02-23"},{"lineNumber":44,"author":{"gitId":"iamtr"},"content":"Adds an event with \u0027from\u0027 date and \u0027to\u0027 date","lastModifiedDate":"2024-02-23"},{"lineNumber":45,"author":{"gitId":"iamtr"},"content":"Date must follow YYYY-MM-DD format","lastModifiedDate":"2024-02-23"},{"lineNumber":46,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":47,"author":{"gitId":"iamtr"},"content":"Example of usage:","lastModifiedDate":"2024-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":49,"author":{"gitId":"iamtr"},"content":"event project meeting /from 2020-12-12 /to 2020-12-13","lastModifiedDate":"2024-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"iamtr"},"content":"## Marking tasks as done","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"iamtr"},"content":"Command: mark [task number]","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"iamtr"},"content":"Marks the task at the specified task number as done","lastModifiedDate":"2024-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"iamtr"},"content":"Example of usage:","lastModifiedDate":"2024-02-23"},{"lineNumber":59,"author":{"gitId":"iamtr"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"iamtr"},"content":"mark 1","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"iamtr"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"iamtr"},"content":"## Marking tasks as undone","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":65,"author":{"gitId":"iamtr"},"content":"Command: unmark [task number]","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":67,"author":{"gitId":"iamtr"},"content":"Marks the task at the specified task number as undone","lastModifiedDate":"2024-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":69,"author":{"gitId":"iamtr"},"content":"Example of usage:","lastModifiedDate":"2024-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":71,"author":{"gitId":"iamtr"},"content":"unmark 1","lastModifiedDate":"2024-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":74,"author":{"gitId":"iamtr"},"content":"## Deleting tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":75,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":76,"author":{"gitId":"iamtr"},"content":"Command: delete [task number]","lastModifiedDate":"2024-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":78,"author":{"gitId":"iamtr"},"content":"Deletes the task at the specified task number","lastModifiedDate":"2024-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":80,"author":{"gitId":"iamtr"},"content":"Example of usage:","lastModifiedDate":"2024-02-23"},{"lineNumber":81,"author":{"gitId":"iamtr"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":82,"author":{"gitId":"iamtr"},"content":"delete 1","lastModifiedDate":"2024-02-23"},{"lineNumber":83,"author":{"gitId":"iamtr"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":85,"author":{"gitId":"iamtr"},"content":"## Finding tasks","lastModifiedDate":"2024-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":87,"author":{"gitId":"iamtr"},"content":"Command: find [keyword]","lastModifiedDate":"2024-02-23"},{"lineNumber":88,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"iamtr"},"content":"Finds tasks with the specified keyword","lastModifiedDate":"2024-02-23"},{"lineNumber":90,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":91,"author":{"gitId":"iamtr"},"content":"Example of usage:","lastModifiedDate":"2024-02-23"},{"lineNumber":92,"author":{"gitId":"iamtr"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":93,"author":{"gitId":"iamtr"},"content":"find book","lastModifiedDate":"2024-02-23"},{"lineNumber":94,"author":{"gitId":"iamtr"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":95,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":96,"author":{"gitId":"iamtr"},"content":"## Exiting","lastModifiedDate":"2024-02-23"},{"lineNumber":97,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":98,"author":{"gitId":"iamtr"},"content":"Command: bye","lastModifiedDate":"2024-02-23"},{"lineNumber":99,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":100,"author":{"gitId":"iamtr"},"content":"Exits the application","lastModifiedDate":"2024-02-23"},{"lineNumber":101,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":102,"author":{"gitId":"iamtr"},"content":"Example of usage:","lastModifiedDate":"2024-02-23"},{"lineNumber":103,"author":{"gitId":"iamtr"},"content":"```","lastModifiedDate":"2024-02-23"},{"lineNumber":104,"author":{"gitId":"iamtr"},"content":"bye","lastModifiedDate":"2024-02-23"},{"lineNumber":105,"author":{"gitId":"iamtr"},"content":"```","lastModifiedDate":"2024-02-23"}],"authorContributionMap":{"iamtr":79,"-":26}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"iamtr"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"iamtr"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"iamtr"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"iamtr"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"iamtr"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"iamtr"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"iamtr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"iamtr"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"iamtr"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"iamtr"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"iamtr"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"iamtr"},"content":"    private void flip() {","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"iamtr"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"iamtr"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-14"},{"lineNumber":46,"author":{"gitId":"iamtr"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"iamtr"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":51,"author":{"gitId":"iamtr"},"content":"     * Returns a DialogBox with the user\u0027s face and the specified text.","lastModifiedDate":"2024-02-23"},{"lineNumber":52,"author":{"gitId":"iamtr"},"content":"     * @param text The text to be displayed.","lastModifiedDate":"2024-02-23"},{"lineNumber":53,"author":{"gitId":"iamtr"},"content":"     * @param img The user\u0027s face.","lastModifiedDate":"2024-02-23"},{"lineNumber":54,"author":{"gitId":"iamtr"},"content":"     * @return A DialogBox with the user\u0027s face and the specified text.","lastModifiedDate":"2024-02-23"},{"lineNumber":55,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":56,"author":{"gitId":"iamtr"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"iamtr"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-14"},{"lineNumber":58,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":60,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":61,"author":{"gitId":"iamtr"},"content":"     * Returns a DialogBox with Joseph\u0027s face and the specified text.","lastModifiedDate":"2024-02-23"},{"lineNumber":62,"author":{"gitId":"iamtr"},"content":"     * @param text The text to be displayed.","lastModifiedDate":"2024-02-23"},{"lineNumber":63,"author":{"gitId":"iamtr"},"content":"     * @param img Joseph\u0027s face.","lastModifiedDate":"2024-02-23"},{"lineNumber":64,"author":{"gitId":"iamtr"},"content":"     * @return A DialogBox with Joseph\u0027s face and the specified text.","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"iamtr"},"content":"    public static DialogBox getJosephDialog(String text, Image img) {","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"iamtr"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-14"},{"lineNumber":68,"author":{"gitId":"iamtr"},"content":"        db.flip();","lastModifiedDate":"2024-02-14"},{"lineNumber":69,"author":{"gitId":"iamtr"},"content":"        return db;","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":71,"author":{"gitId":"iamtr"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"iamtr":71}},{"path":"src/main/java/Joseph.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"import duke.exception.JosephException;","lastModifiedDate":"2024-02-20"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"import duke.task.Tasklist;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":" * The main class of the Duke application.","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":" * Runs the application.","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"public class Joseph {","lastModifiedDate":"2024-02-20"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"    private Tasklist todolist;","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":"     * Constructor for the Duke class.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"    public Joseph() {","lastModifiedDate":"2024-02-20"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"            todolist \u003d new Tasklist();","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"            ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"iamtr"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"            parser \u003d new Parser();","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"        } catch (JosephException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"iamtr"},"content":"            ui.printMessage(e.getMessage());","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"iamtr"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"iamtr"},"content":"        Joseph duke \u003d new Joseph();","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"iamtr"},"content":"        duke.run();","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"iamtr"},"content":"     * Runs the Duke application.","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"iamtr"},"content":"     * Keeps receiving commands from the user and executing them until the user types \"bye\".","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"iamtr"},"content":"    public void run() {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"iamtr"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"iamtr"},"content":"        boolean commandIsBye \u003d false;","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"iamtr"},"content":"        while (!commandIsBye) {","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"iamtr"},"content":"            String command \u003d ui.getCommand();","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"iamtr"},"content":"            try {","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"iamtr"},"content":"                commandIsBye \u003d parser.commandIsBye(command);","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"iamtr"},"content":"                parser.parseCommand(command, ui, storage, todolist);","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"iamtr"},"content":"            } catch (JosephException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"iamtr"},"content":"                ui.printMessage(e.getMessage());","lastModifiedDate":"2024-02-13"},{"lineNumber":50,"author":{"gitId":"iamtr"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":51,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"iamtr"},"content":"        ui.printByeMessage();","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"iamtr"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-14"},{"lineNumber":55,"author":{"gitId":"iamtr"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":56,"author":{"gitId":"iamtr"},"content":"            return parser.parseCommand(input, ui, storage, todolist);","lastModifiedDate":"2024-02-14"},{"lineNumber":57,"author":{"gitId":"iamtr"},"content":"        } catch (JosephException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"iamtr"},"content":"            ui.printMessage(e.getMessage());","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"iamtr"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-23"},{"lineNumber":60,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"iamtr":61,"-":1}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":" * A launcher class to launch the GUI application.","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":"public class Launcher {","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"iamtr":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"    private Joseph joseph \u003d new Joseph();","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-23"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":"     * Starts the application.","lastModifiedDate":"2024-02-23"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":"     * @param stage The stage to start the application on.","lastModifiedDate":"2024-02-23"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-23"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":"    @Override","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"iamtr"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-14"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setJoseph(joseph);","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"iamtr"},"content":"            stage.show();","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"iamtr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"iamtr"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"iamtr"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"iamtr":32}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-14"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"    private Joseph joseph;","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":24,"author":{"gitId":"iamtr"},"content":"    private Image josephImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-20"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":27,"author":{"gitId":"iamtr"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"iamtr"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-14"},{"lineNumber":29,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":30,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":31,"author":{"gitId":"iamtr"},"content":"    public void setJoseph(Joseph d) {","lastModifiedDate":"2024-02-20"},{"lineNumber":32,"author":{"gitId":"iamtr"},"content":"        joseph \u003d d;","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":35,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-14"},{"lineNumber":36,"author":{"gitId":"iamtr"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"iamtr"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-14"},{"lineNumber":38,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"iamtr"},"content":"    @FXML","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"iamtr"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-14"},{"lineNumber":41,"author":{"gitId":"iamtr"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-14"},{"lineNumber":42,"author":{"gitId":"iamtr"},"content":"        String response \u003d joseph.getResponse(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"iamtr"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-14"},{"lineNumber":44,"author":{"gitId":"iamtr"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"iamtr"},"content":"                DialogBox.getJosephDialog(response, josephImage)","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"iamtr"},"content":"        );","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"iamtr"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-14"},{"lineNumber":48,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"iamtr"},"content":"}","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"iamtr":49}},{"path":"src/main/java/duke/exception/JosephException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"package duke.exception;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":" * Represents an exception specific to the Duke application.","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":"public class JosephException extends Exception {","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"     * @param message The message to be displayed when the exception is thrown.","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"    public JosephException(String message) {","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"        super(message);","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"iamtr":15}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"package duke.parser;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":"import duke.exception.JosephException;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"import duke.task.Tasklist;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-20"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":" * Represents a parser that parses user input and executes the corresponding commands.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":"public class Parser {","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"    protected String outputMessage;","lastModifiedDate":"2024-02-14"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"iamtr"},"content":"     * Parses the user input and executes the corresponding commands.","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"iamtr"},"content":"     * @param ui The user interface.","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"iamtr"},"content":"     * @param storage The storage for the tasklist.","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"iamtr"},"content":"     * @param todolist The task list to operate on.","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"iamtr"},"content":"    public String parseCommand(String input, Ui ui,","lastModifiedDate":"2024-02-14"},{"lineNumber":32,"author":{"gitId":"iamtr"},"content":"                                Storage storage, Tasklist todolist) throws JosephException {","lastModifiedDate":"2024-02-20"},{"lineNumber":33,"author":{"gitId":"iamtr"},"content":"        assert(input !\u003d null);","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"iamtr"},"content":"        String[] parts \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"iamtr"},"content":"        String command \u003d parts[0];","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"iamtr"},"content":"        String details \u003d parts.length \u003e 1 ? parts[1].trim() : \"\"; // contains the details after command is issued","lastModifiedDate":"2024-02-14"},{"lineNumber":37,"author":{"gitId":"iamtr"},"content":"        switch (command) {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"iamtr"},"content":"        case \"list\":","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"iamtr"},"content":"            return handleList(ui, todolist, storage);","lastModifiedDate":"2024-02-14"},{"lineNumber":40,"author":{"gitId":"iamtr"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"iamtr"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"iamtr"},"content":"            return handleMarkUnmark(ui, details, command.equals(\"mark\"), todolist);","lastModifiedDate":"2024-02-14"},{"lineNumber":43,"author":{"gitId":"iamtr"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"iamtr"},"content":"            return handleAddTask(ui, new Todo(details, false), todolist);","lastModifiedDate":"2024-02-14"},{"lineNumber":45,"author":{"gitId":"iamtr"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"iamtr"},"content":"            return handleAddTask(ui, createDeadline(details), todolist);","lastModifiedDate":"2024-02-14"},{"lineNumber":47,"author":{"gitId":"iamtr"},"content":"        case \"event\":","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"iamtr"},"content":"            return handleAddTask(ui, createEvent(details), todolist);","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"iamtr"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"iamtr"},"content":"            return handleDelete(ui, details, todolist);","lastModifiedDate":"2024-02-14"},{"lineNumber":51,"author":{"gitId":"iamtr"},"content":"        case \"find\":","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"iamtr"},"content":"            return findTask(ui, details, todolist);","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"iamtr"},"content":"        case \"sort\":","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"iamtr"},"content":"            sortTodolist(todolist, storage);","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"iamtr"},"content":"            return \"Sorted\";","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"iamtr"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"iamtr"},"content":"            Platform.exit();","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"iamtr"},"content":"            return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"iamtr"},"content":"        default:","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"iamtr"},"content":"            outputMessage \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2024-02-14"},{"lineNumber":61,"author":{"gitId":"iamtr"},"content":"            return outputMessage;","lastModifiedDate":"2024-02-14"},{"lineNumber":62,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"iamtr"},"content":"    public boolean commandIsBye(String input) {","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"iamtr"},"content":"        return input.trim().equals(\"bye\");","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"iamtr"},"content":"    private String handleList(Ui ui, Tasklist todolist, Storage storage) throws JosephException {","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"iamtr"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"iamtr"},"content":"            storage.saveData(todolist.getTodolist());","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"iamtr"},"content":"            outputMessage \u003d todolist.printTodolist();","lastModifiedDate":"2024-02-14"},{"lineNumber":72,"author":{"gitId":"iamtr"},"content":"            ui.printMessage(outputMessage);","lastModifiedDate":"2024-02-14"},{"lineNumber":73,"author":{"gitId":"iamtr"},"content":"            return outputMessage;","lastModifiedDate":"2024-02-14"},{"lineNumber":74,"author":{"gitId":"iamtr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"iamtr"},"content":"            throw new JosephException(\"An error occurred while writing to the file.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"iamtr"},"content":"    private String handleMarkUnmark(Ui ui, String details,","lastModifiedDate":"2024-02-14"},{"lineNumber":80,"author":{"gitId":"iamtr"},"content":"                                  boolean isMark, Tasklist todolist) throws JosephException {","lastModifiedDate":"2024-02-20"},{"lineNumber":81,"author":{"gitId":"iamtr"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":82,"author":{"gitId":"iamtr"},"content":"            int taskNumber \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"iamtr"},"content":"            todolist.markTaskAsDone(taskNumber, isMark);","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"iamtr"},"content":"            String statusMessage \u003d isMark ? \"Nice! I\u0027ve marked this task as done:\"","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"iamtr"},"content":"                    : \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2024-02-13"},{"lineNumber":86,"author":{"gitId":"iamtr"},"content":"            outputMessage \u003d statusMessage + \"\\n\\t\" + todolist.getTaskString(taskNumber);","lastModifiedDate":"2024-02-14"},{"lineNumber":87,"author":{"gitId":"iamtr"},"content":"            ui.printMessage(outputMessage);","lastModifiedDate":"2024-02-14"},{"lineNumber":88,"author":{"gitId":"iamtr"},"content":"            return outputMessage;","lastModifiedDate":"2024-02-14"},{"lineNumber":89,"author":{"gitId":"iamtr"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":90,"author":{"gitId":"iamtr"},"content":"            throw new JosephException(\"Please provide a valid task number to mark or unmark.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":91,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":92,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":93,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":94,"author":{"gitId":"iamtr"},"content":"    private String handleAddTask(Ui ui, Task task, Tasklist todolist) {","lastModifiedDate":"2024-02-14"},{"lineNumber":95,"author":{"gitId":"iamtr"},"content":"        todolist.addItem(task);","lastModifiedDate":"2024-02-13"},{"lineNumber":96,"author":{"gitId":"iamtr"},"content":"        outputMessage \u003d \"Added: \" + task;","lastModifiedDate":"2024-02-14"},{"lineNumber":97,"author":{"gitId":"iamtr"},"content":"        ui.printMessage(outputMessage);","lastModifiedDate":"2024-02-14"},{"lineNumber":98,"author":{"gitId":"iamtr"},"content":"        return outputMessage;","lastModifiedDate":"2024-02-14"},{"lineNumber":99,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":100,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":101,"author":{"gitId":"iamtr"},"content":"    private Task createDeadline(String details) throws JosephException {","lastModifiedDate":"2024-02-20"},{"lineNumber":102,"author":{"gitId":"iamtr"},"content":"        assert(details !\u003d null);","lastModifiedDate":"2024-02-20"},{"lineNumber":103,"author":{"gitId":"iamtr"},"content":"        String[] parts \u003d details.split(\"/by\", 2);","lastModifiedDate":"2024-02-13"},{"lineNumber":104,"author":{"gitId":"iamtr"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2024-02-13"},{"lineNumber":105,"author":{"gitId":"iamtr"},"content":"            throw new JosephException(\"Invalid deadline format. Use \u0027deadline [name] /by yyyy-mm-dd\u0027\");","lastModifiedDate":"2024-02-20"},{"lineNumber":106,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":107,"author":{"gitId":"iamtr"},"content":"        LocalDate by \u003d LocalDate.parse(parts[1].trim());","lastModifiedDate":"2024-02-13"},{"lineNumber":108,"author":{"gitId":"iamtr"},"content":"        return new Deadline(parts[0].trim(), by, false);","lastModifiedDate":"2024-02-13"},{"lineNumber":109,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":110,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":111,"author":{"gitId":"iamtr"},"content":"    private Task createEvent(String details) throws JosephException {","lastModifiedDate":"2024-02-20"},{"lineNumber":112,"author":{"gitId":"iamtr"},"content":"        assert(details !\u003d null);","lastModifiedDate":"2024-02-20"},{"lineNumber":113,"author":{"gitId":"iamtr"},"content":"        String[] parts \u003d details.split(\"/from | /to \", 3);","lastModifiedDate":"2024-02-13"},{"lineNumber":114,"author":{"gitId":"iamtr"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-02-13"},{"lineNumber":115,"author":{"gitId":"iamtr"},"content":"            throw new JosephException(\"Invalid event format. Use \u0027event [name] /from yyyy-mm-dd /to yyyy-mm-dd\u0027\");","lastModifiedDate":"2024-02-20"},{"lineNumber":116,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":117,"author":{"gitId":"iamtr"},"content":"        LocalDate from \u003d LocalDate.parse(parts[1].trim());","lastModifiedDate":"2024-02-13"},{"lineNumber":118,"author":{"gitId":"iamtr"},"content":"        LocalDate to \u003d LocalDate.parse(parts[2].trim());","lastModifiedDate":"2024-02-13"},{"lineNumber":119,"author":{"gitId":"iamtr"},"content":"        return new Event(parts[0].trim(), from, to, false);","lastModifiedDate":"2024-02-13"},{"lineNumber":120,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":121,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":122,"author":{"gitId":"iamtr"},"content":"    private String handleDelete(Ui ui, String details, Tasklist todolist) throws JosephException {","lastModifiedDate":"2024-02-20"},{"lineNumber":123,"author":{"gitId":"iamtr"},"content":"        try {","lastModifiedDate":"2024-02-14"},{"lineNumber":124,"author":{"gitId":"iamtr"},"content":"            int taskNumber \u003d Integer.parseInt(details) - 1;","lastModifiedDate":"2024-02-13"},{"lineNumber":125,"author":{"gitId":"iamtr"},"content":"            Task removed \u003d todolist.removeItem(taskNumber);","lastModifiedDate":"2024-02-13"},{"lineNumber":126,"author":{"gitId":"iamtr"},"content":"            outputMessage \u003d \"Noted. I\u0027ve removed this task: \" + removed;","lastModifiedDate":"2024-02-14"},{"lineNumber":127,"author":{"gitId":"iamtr"},"content":"            ui.printMessage(outputMessage);","lastModifiedDate":"2024-02-14"},{"lineNumber":128,"author":{"gitId":"iamtr"},"content":"            return outputMessage;","lastModifiedDate":"2024-02-14"},{"lineNumber":129,"author":{"gitId":"iamtr"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-14"},{"lineNumber":130,"author":{"gitId":"iamtr"},"content":"            throw new JosephException(\"Please provide a valid task number to delete.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":131,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":132,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":133,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":134,"author":{"gitId":"iamtr"},"content":"    private String findTask(Ui ui, String details, Tasklist todolist) throws JosephException {","lastModifiedDate":"2024-02-20"},{"lineNumber":135,"author":{"gitId":"iamtr"},"content":"        if (details.isEmpty()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":136,"author":{"gitId":"iamtr"},"content":"            throw new JosephException(\"Please provide a keyword to search for.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":137,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":138,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":139,"author":{"gitId":"iamtr"},"content":"        StringBuilder tasksWithKeyword \u003d new StringBuilder();","lastModifiedDate":"2024-02-14"},{"lineNumber":140,"author":{"gitId":"iamtr"},"content":"        int i \u003d 1;","lastModifiedDate":"2024-02-14"},{"lineNumber":141,"author":{"gitId":"iamtr"},"content":"        for (Task task : todolist.getTodolist()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":142,"author":{"gitId":"iamtr"},"content":"            if (task.getDescription().contains(details)) {","lastModifiedDate":"2024-02-14"},{"lineNumber":143,"author":{"gitId":"iamtr"},"content":"                tasksWithKeyword.append(i).append(\". \").append(task).append(\"\\n\\t\");","lastModifiedDate":"2024-02-14"},{"lineNumber":144,"author":{"gitId":"iamtr"},"content":"                i++;","lastModifiedDate":"2024-02-14"},{"lineNumber":145,"author":{"gitId":"iamtr"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":146,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":147,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":148,"author":{"gitId":"iamtr"},"content":"        if (tasksWithKeyword.length() \u003d\u003d 0) {","lastModifiedDate":"2024-02-14"},{"lineNumber":149,"author":{"gitId":"iamtr"},"content":"            outputMessage \u003d \"No matching tasks found.\";","lastModifiedDate":"2024-02-14"},{"lineNumber":150,"author":{"gitId":"iamtr"},"content":"            ui.printMessage(outputMessage);","lastModifiedDate":"2024-02-14"},{"lineNumber":151,"author":{"gitId":"iamtr"},"content":"            return outputMessage;","lastModifiedDate":"2024-02-14"},{"lineNumber":152,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-14"},{"lineNumber":153,"author":{"gitId":"iamtr"},"content":"        outputMessage \u003d tasksWithKeyword.toString().trim();","lastModifiedDate":"2024-02-14"},{"lineNumber":154,"author":{"gitId":"iamtr"},"content":"        ui.printMessage(outputMessage);","lastModifiedDate":"2024-02-14"},{"lineNumber":155,"author":{"gitId":"iamtr"},"content":"        return outputMessage;","lastModifiedDate":"2024-02-14"},{"lineNumber":156,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-14"},{"lineNumber":157,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":158,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":159,"author":{"gitId":"iamtr"},"content":"     * Sorts the task list by description.","lastModifiedDate":"2024-02-20"},{"lineNumber":160,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":161,"author":{"gitId":"iamtr"},"content":"    public void sortTodolist(Tasklist todolist, Storage storage) throws JosephException {","lastModifiedDate":"2024-02-20"},{"lineNumber":162,"author":{"gitId":"iamtr"},"content":"        try {","lastModifiedDate":"2024-02-20"},{"lineNumber":163,"author":{"gitId":"iamtr"},"content":"            todolist.sortTodolist();","lastModifiedDate":"2024-02-20"},{"lineNumber":164,"author":{"gitId":"iamtr"},"content":"            storage.saveData(todolist.getTodolist());","lastModifiedDate":"2024-02-20"},{"lineNumber":165,"author":{"gitId":"iamtr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":166,"author":{"gitId":"iamtr"},"content":"            throw new JosephException(\"An error occurred while writing to the file.\");","lastModifiedDate":"2024-02-20"},{"lineNumber":167,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":168,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":169,"author":{"gitId":"iamtr"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"iamtr":169}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"package duke.storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":"import java.util.List;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":" * Represents the storage for the tasklist.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"public class Storage {","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":"    private static final Path path \u003d Paths.get(\"data\", \"duke.txt\");","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":"     * Loads the data from the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":"     * If the file does not exist, a new file will be created.","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"     * @return The data from the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"     * @throws IOException If an error occurs while reading from the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"iamtr"},"content":"    public static List\u003cString\u003e loadData() throws IOException {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"        Path dirPath \u003d path.getParent();","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"        assert dirPath !\u003d null;","lastModifiedDate":"2024-02-20"},{"lineNumber":27,"author":{"gitId":"iamtr"},"content":"        Files.createDirectories(dirPath);","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"iamtr"},"content":"        if (!Files.exists(path)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"iamtr"},"content":"            Files.createFile(path);","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"iamtr"},"content":"        return Files.readAllLines(path);","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"iamtr"},"content":"     * Saves the data to the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"iamtr"},"content":"     * @param todolist The data to be saved.","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"iamtr"},"content":"     * @throws IOException If an error occurs while writing to the file.","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"iamtr"},"content":"    public void saveData(List\u003cTask\u003e todolist) throws IOException {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"iamtr"},"content":"        Path dirPath \u003d java.nio.file.Paths.get(\"data\");","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"iamtr"},"content":"        Path fullPath \u003d dirPath.resolve(\"duke.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"iamtr"},"content":"        Files.createDirectories(dirPath);","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"iamtr"},"content":"        try (FileWriter fw \u003d new FileWriter(fullPath.toString(), false)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"iamtr"},"content":"            String entry;","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"iamtr"},"content":"            for (Task t : todolist) {","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"iamtr"},"content":"                entry \u003d t.getDataString() + \"\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"iamtr"},"content":"                fw.write(entry);","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"iamtr"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"iamtr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"iamtr"},"content":"            System.out.println(\"An error occurred while writing to the file.\");","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"iamtr"},"content":"            throw e;","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"iamtr"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"iamtr":56}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":"import duke.exception.JosephException;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":" * Represents a deadline task.","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":"     * @param by The deadline of the deadline task.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":"    public Deadline(String description, LocalDate by, boolean isDone) throws JosephException {","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"        super(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"iamtr"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"iamtr"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"iamtr"},"content":"    public String getDataString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"iamtr"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + super.getDescription() + \" | \" + by;","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"iamtr"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"iamtr":34}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":"import duke.exception.JosephException;","lastModifiedDate":"2024-02-20"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":" * Represents an event task.","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"     * Constructor for Event.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":"     * @param from The start date of the event task.","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":"     * @param to The end date of the event task.","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"    public Event(String description, LocalDate from, LocalDate to, boolean isDone) throws JosephException {","lastModifiedDate":"2024-02-20"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"        super(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"iamtr"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"iamtr"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"iamtr"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"iamtr"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"iamtr"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"iamtr"},"content":"    public String getDataString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"iamtr"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + super.getDescription() + \" | \" + from + \" | \" + to;","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"iamtr"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"iamtr":37}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"import duke.exception.JosephException;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":" * Represents a task, which is a base class for other tasks.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"     * Constructor for Task.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":"    public Task(String description) throws JosephException {","lastModifiedDate":"2024-02-20"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":"            throw new JosephException(\"The description of a task cannot be empty!\");","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"     * Returns the status icon of the task, either \"X\" or \"\"","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"iamtr"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"iamtr"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"iamtr"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"iamtr"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"iamtr"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"iamtr"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"iamtr"},"content":"     * Marks the task as done or not done.","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"iamtr"},"content":"     * @param isDone The status of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"iamtr"},"content":"    public void markAsDone(boolean isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"iamtr"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"iamtr"},"content":"     * Gets the full state of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"iamtr"},"content":"     * E.g. \"T | 0 | read book\"","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"iamtr"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"iamtr"},"content":"    public String getDataString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"iamtr"},"content":"        return \"\";","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"iamtr"},"content":"     * Gets the description of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"iamtr"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"iamtr"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"iamtr"},"content":"        return this.description;","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"iamtr"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"iamtr":66}},{"path":"src/main/java/duke/task/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-02-20"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":"import java.util.List;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"import duke.exception.JosephException;","lastModifiedDate":"2024-02-20"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":" * Represents a list of tasks, with methods for operations on task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":"public class Tasklist {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":"    private List\u003cTask\u003e todolist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":"    public Tasklist() throws JosephException {","lastModifiedDate":"2024-02-20"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"        restoreData();","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"    public void addItem(Task item) {","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"iamtr"},"content":"        todolist.add(item);","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"iamtr"},"content":"    public Task removeItem(int index) {","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"iamtr"},"content":"        return todolist.remove(index);","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"iamtr"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"iamtr"},"content":"        return todolist.isEmpty();","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"iamtr"},"content":"     * Prints the list of tasks in the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"iamtr"},"content":"     * @return The list of tasks in the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"iamtr"},"content":"    public String printTodolist() {","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"iamtr"},"content":"        if (isEmpty()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"iamtr"},"content":"            return \"Todolist is empty!\";","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"iamtr"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"iamtr"},"content":"        int i \u003d 1;","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"iamtr"},"content":"        for (Task t : todolist) {","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"iamtr"},"content":"            s.append(i++).append(\". \").append(t).append(\"\\n\\t\");","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"iamtr"},"content":"        return s.toString().trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"iamtr"},"content":"     * Marks a task as done or undone in the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"iamtr"},"content":"     * @param taskNumber The index of the task to be marked as done.","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"iamtr"},"content":"     * @param isDone The status of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"iamtr"},"content":"    public void markTaskAsDone(int taskNumber, boolean isDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"iamtr"},"content":"        todolist.get(taskNumber).markAsDone(isDone);","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"iamtr"},"content":"     * Gets the list of tasks in the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"iamtr"},"content":"     * @return The list of tasks in the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"iamtr"},"content":"    public List\u003cTask\u003e getTodolist() {","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"iamtr"},"content":"        return todolist;","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"iamtr"},"content":"     * Gets the string representation of a task in the task list.","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"iamtr"},"content":"     * @param taskNumber The index of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"iamtr"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"iamtr"},"content":"    public String getTaskString(int taskNumber) {","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"iamtr"},"content":"        return todolist.get(taskNumber).toString();","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"iamtr"},"content":"     * Restores the data from existing file, if any.","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"iamtr"},"content":"    public void restoreData() throws JosephException {","lastModifiedDate":"2024-02-20"},{"lineNumber":85,"author":{"gitId":"iamtr"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":86,"author":{"gitId":"iamtr"},"content":"            List\u003cString\u003e tasks \u003d Storage.loadData();","lastModifiedDate":"2024-02-04"},{"lineNumber":87,"author":{"gitId":"iamtr"},"content":"            processDataFromString(tasks);","lastModifiedDate":"2024-02-13"},{"lineNumber":88,"author":{"gitId":"iamtr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":89,"author":{"gitId":"iamtr"},"content":"            System.out.println(\"An error has occurred while executing loadData()\");","lastModifiedDate":"2024-02-13"},{"lineNumber":90,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":91,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":92,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":93,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":94,"author":{"gitId":"iamtr"},"content":"     * Processes the data from the list of strings provided from the file.","lastModifiedDate":"2024-02-13"},{"lineNumber":95,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":96,"author":{"gitId":"iamtr"},"content":"     * @param tasks The data from the file.","lastModifiedDate":"2024-02-13"},{"lineNumber":97,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":98,"author":{"gitId":"iamtr"},"content":"    public void processDataFromString(List\u003cString\u003e tasks) throws JosephException {","lastModifiedDate":"2024-02-20"},{"lineNumber":99,"author":{"gitId":"iamtr"},"content":"        boolean isDone;","lastModifiedDate":"2024-02-13"},{"lineNumber":100,"author":{"gitId":"iamtr"},"content":"        for (String task : tasks) {","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"iamtr"},"content":"            String[] details \u003d task.split(\"\\\\|\");","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"iamtr"},"content":"            isDone \u003d !Objects.equals(details[1], \"0\");","lastModifiedDate":"2024-02-05"},{"lineNumber":103,"author":{"gitId":"iamtr"},"content":"            for (int i \u003d 0; i \u003c details.length; i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":104,"author":{"gitId":"iamtr"},"content":"                details[i] \u003d details[i].trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":105,"author":{"gitId":"iamtr"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"iamtr"},"content":"            if (details[0].equals(\"T\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"iamtr"},"content":"                addItem(new Todo(details[2], isDone));","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"iamtr"},"content":"            } else if (details[0].equals(\"D\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"iamtr"},"content":"                addItem(new Deadline(details[2], LocalDate.parse(details[3]), isDone));","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"iamtr"},"content":"            } else if (details[0].equals(\"E\")) {","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"iamtr"},"content":"                addItem(new Event(details[2], LocalDate.parse(details[3]), LocalDate.parse(details[4]), isDone));","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"iamtr"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":113,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":114,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":115,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":116,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-20"},{"lineNumber":117,"author":{"gitId":"iamtr"},"content":"     * Sorts the task list by description.","lastModifiedDate":"2024-02-20"},{"lineNumber":118,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-20"},{"lineNumber":119,"author":{"gitId":"iamtr"},"content":"    public void sortTodolist() {","lastModifiedDate":"2024-02-20"},{"lineNumber":120,"author":{"gitId":"iamtr"},"content":"        todolist.sort(Comparator.comparing(Task::getDescription));","lastModifiedDate":"2024-02-20"},{"lineNumber":121,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-20"},{"lineNumber":122,"author":{"gitId":"iamtr"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"iamtr":122}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"package duke.task;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"import duke.exception.JosephException;","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":" * Represents a todo task.","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"     * Constructor for Todo.","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"     * @param isDone The status of the todo task.","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":"    public Todo(String description, boolean isDone) throws JosephException {","lastModifiedDate":"2024-02-20"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":"        super(description);","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"iamtr"},"content":"    public String getDataString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"iamtr"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + super.getDescription();","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"iamtr"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"iamtr":30}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"package duke.ui;","lastModifiedDate":"2024-02-04"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"import java.io.InputStream;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":" * Represents the user interface of the application.","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"public class Ui {","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"    private static final String SEP \u003d \"\\t__________________________________________\";","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"    private final Scanner in;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"    private final PrintStream out;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"     * Constructor for Ui.","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":"    public Ui() {","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":"        this(System.in, System.out);","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"     * Constructor for Ui.","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"     * @param in The input stream of the application.","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"iamtr"},"content":"     * @param out The output stream of the application.","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"    public Ui(InputStream in, PrintStream out) {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"iamtr"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"iamtr"},"content":"        this.out \u003d out;","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"iamtr"},"content":"     * Prints a message to the user with dividers.","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"iamtr"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"iamtr"},"content":"    public void printMessage(String... message) {","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"iamtr"},"content":"        out.println(SEP);","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"iamtr"},"content":"        for (String m : message) {","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"iamtr"},"content":"            System.out.println(\"\\t\" + m);","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"iamtr"},"content":"        out.println(SEP);","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"iamtr"},"content":"     * Prints a welcome message to the user.","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"iamtr"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"iamtr"},"content":"        String[] s \u003d {\"Hello! I\u0027m JOSEPH JOSHTUR!!!\", \"What can I do for you?\"};","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"iamtr"},"content":"        printMessage(s);","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"iamtr"},"content":"     * Prints a goodbye message to the user.","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"iamtr"},"content":"    public void printByeMessage() {","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"iamtr"},"content":"        String[] s \u003d {\"Bye. Hope to see you again soon!\"};","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"iamtr"},"content":"        printMessage(s);","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"iamtr"},"content":"    /**","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"iamtr"},"content":"     * Gets the command from the user\u0027s input on the console.","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"iamtr"},"content":"     *","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"iamtr"},"content":"     * @return The command from the user.","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"iamtr"},"content":"     */","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"iamtr"},"content":"    public String getCommand() {","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"iamtr"},"content":"        String input \u003d in.nextLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"iamtr"},"content":"        while (input.isEmpty()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":68,"author":{"gitId":"iamtr"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"iamtr"},"content":"        return input.trim();","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"iamtr"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"iamtr":72}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"iamtr":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-14"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-14"}],"authorContributionMap":{"iamtr":19}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"package duke.parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"import duke.exception.JosephException;","lastModifiedDate":"2024-02-20"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"import duke.task.Tasklist;","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":" * Represents a test class for Parser","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"iamtr"},"content":"    private Tasklist todolist;","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"iamtr"},"content":"    public void setUp() {","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"iamtr"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"iamtr"},"content":"            parser \u003d new Parser();","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"iamtr"},"content":"            ui \u003d new Ui();","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"iamtr"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"iamtr"},"content":"            todolist \u003d new Tasklist();","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"iamtr"},"content":"            System.setOut(new PrintStream(outContent)); // Redirect System.out to capture the output for testing","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"iamtr"},"content":"        } catch (JosephException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"iamtr"},"content":"            fail();","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"iamtr"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"iamtr"},"content":"    public void testMarkTaskAsDone() {","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"iamtr"},"content":"        // Assuming there\u0027s already a task in the list","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"iamtr"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":43,"author":{"gitId":"iamtr"},"content":"            parser.parseCommand(\"todo read book\", ui, storage, todolist); // Add a task first","lastModifiedDate":"2024-02-13"},{"lineNumber":44,"author":{"gitId":"iamtr"},"content":"            String markInput \u003d \"mark 1\";","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"iamtr"},"content":"            parser.parseCommand(markInput, ui, storage, todolist);","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"iamtr"},"content":"        } catch (JosephException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"iamtr"},"content":"            fail();","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"iamtr"},"content":"        assertTrue(outContent.toString().contains(\"Nice! I\u0027ve marked this task as done\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"iamtr"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"iamtr"},"content":"    public void testAddTodo() {","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"iamtr"},"content":"        String input \u003d \"todo read book\";","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"iamtr"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"iamtr"},"content":"            parser.parseCommand(input, ui, storage, todolist);","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"iamtr"},"content":"        } catch (JosephException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"iamtr"},"content":"            fail();","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"iamtr"},"content":"        assertTrue(outContent.toString().contains(\"Added: [T][ ] read book\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"iamtr"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"iamtr"},"content":"    public void testInvalidCommand() {","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"iamtr"},"content":"        String input \u003d \"dance\";","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"iamtr"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"iamtr"},"content":"            parser.parseCommand(input, ui, storage, todolist);","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"iamtr"},"content":"        } catch (JosephException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"iamtr"},"content":"            assertTrue(e.getMessage().contains(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"iamtr"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"iamtr"},"content":"    public void testEmptyTodo() {","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"iamtr"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":76,"author":{"gitId":"iamtr"},"content":"            parser.parseCommand(\"todo\", ui, storage, todolist);","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"iamtr"},"content":"            fail(); // No exception thrown","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"iamtr"},"content":"        } catch (JosephException e) {","lastModifiedDate":"2024-02-20"},{"lineNumber":79,"author":{"gitId":"iamtr"},"content":"            assertTrue(e.getMessage().contains(\"The description of a task cannot be empty\"));","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"iamtr"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"iamtr"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"iamtr":82}},{"path":"src/test/java/duke/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"package duke.ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"iamtr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"iamtr"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"iamtr"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"iamtr"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"iamtr"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"iamtr"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"iamtr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"iamtr"},"content":"/**","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"iamtr"},"content":" * Represents a test class for Ui","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"iamtr"},"content":" */","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"iamtr"},"content":"public class UiTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"iamtr"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"iamtr"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"iamtr"},"content":"    @BeforeEach","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"iamtr"},"content":"    public void setUp() {","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"iamtr"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"iamtr"},"content":"        ui \u003d new Ui(new ByteArrayInputStream(\"\".getBytes()), System.out);","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"iamtr"},"content":"    @AfterEach","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"iamtr"},"content":"    public void tearDown() {","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"iamtr"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"iamtr"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"iamtr"},"content":"    public void testPrintMessage() {","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"iamtr"},"content":"        String message \u003d \"This is a test message.\";","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"iamtr"},"content":"        ui.printMessage(message);","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"iamtr"},"content":"        String expectedOutput \u003d \"\\t__________________________________________\\r\\n\\t\"","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"iamtr"},"content":"                + message + \"\\r\\n\\t__________________________________________\\r\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"iamtr"},"content":"        assertTrue(outContent.toString().contains(expectedOutput));","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"iamtr"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"iamtr"},"content":"    public void testPrintWelcomeMessage() {","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"iamtr"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"iamtr"},"content":"        String welcomeMessage1 \u003d \"Hello! I\u0027m JOSEPH JOSHTUR!!!\";","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"iamtr"},"content":"        String welcomeMessage2 \u003d \"What can I do for you?\";","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"iamtr"},"content":"        assertTrue(outContent.toString().contains(welcomeMessage1));","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"iamtr"},"content":"        assertTrue(outContent.toString().contains(welcomeMessage2));","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"iamtr"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"iamtr"},"content":"    public void testPrintByeMessage() {","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"iamtr"},"content":"        ui.printByeMessage();","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"iamtr"},"content":"        String byeMessage \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"iamtr"},"content":"        assertTrue(outContent.toString().contains(byeMessage));","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"iamtr"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"iamtr"},"content":"    public void testGetCommand() {","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"iamtr"},"content":"        String simulatedUserInput \u003d \"test command\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"iamtr"},"content":"        System.setIn(new ByteArrayInputStream(simulatedUserInput.getBytes()));","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"iamtr"},"content":"        ui \u003d new Ui(System.in, System.out);","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"iamtr"},"content":"        String command \u003d ui.getCommand();","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"iamtr"},"content":"        assertEquals(\"test command\", command, \"getCommand should return the input trimmed and normalized.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":67,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":68,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":69,"author":{"gitId":"iamtr"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":70,"author":{"gitId":"iamtr"},"content":"    public void testGetCommandWithLeadingAndTrailingSpaces() {","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"iamtr"},"content":"        String simulatedUserInput \u003d \"   test command   \\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"iamtr"},"content":"        System.setIn(new ByteArrayInputStream(simulatedUserInput.getBytes()));","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"iamtr"},"content":"        ui \u003d new Ui(System.in, System.out);","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"iamtr"},"content":"        String command \u003d ui.getCommand();","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"iamtr"},"content":"        assertEquals(\"test command\", command, \"getCommand should trim leading and trailing spaces.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":79,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"iamtr"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"iamtr"},"content":"    public void testGetCommandWithEmptyInput() {","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"iamtr"},"content":"        // Providing multiple lines of input where the first one is empty","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"iamtr"},"content":"        // to simulate pressing enter without typing anything and then providing valid input","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"iamtr"},"content":"        String simulatedUserInput \u003d \"\\nvalid command\\n\";","lastModifiedDate":"2024-02-05"},{"lineNumber":85,"author":{"gitId":"iamtr"},"content":"        System.setIn(new ByteArrayInputStream(simulatedUserInput.getBytes()));","lastModifiedDate":"2024-02-05"},{"lineNumber":86,"author":{"gitId":"iamtr"},"content":"        ui \u003d new Ui(System.in, System.out);","lastModifiedDate":"2024-02-05"},{"lineNumber":87,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":88,"author":{"gitId":"iamtr"},"content":"        String command \u003d ui.getCommand();","lastModifiedDate":"2024-02-05"},{"lineNumber":89,"author":{"gitId":"iamtr"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":90,"author":{"gitId":"iamtr"},"content":"        assertEquals(\"valid command\", command, \"getCommand should ignore empty lines and wait for valid input.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":91,"author":{"gitId":"iamtr"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":92,"author":{"gitId":"iamtr"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"iamtr":92}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"iamtr"},"content":"todo t1","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"iamtr"},"content":"list","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"iamtr"},"content":"bye","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"iamtr":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"iamtr"},"content":"java -classpath ..\\bin Joseph \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"iamtr":1,"-":20}}]
