[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"# andelu.andelu project template","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"3. After that, locate the `src/main/java/andelu.andelu.java` file, right-click it, and choose `Run andelu.andelu.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"AndrewOng2066":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"checkstyle {","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"//    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"//    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"    mainClass.set(\"gui.Launcher\")","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"    archiveBaseName \u003d \"Andrew\"","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"    archiveFileName \u003d \u0027ip.jar\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"AndrewOng2066":23,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"T | 1 | read book | DEFAULT","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"T | 0 | summarise book | MEDIUM","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"D | 0 | return book | 2024-02-13T23:59 | DEFAULT","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"D | 1 | return item | 2024-02-14T23:59 | HIGH","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"E | 0 | meeting | 2024-02-13T14:00 | 2024-02-13T16:00 | HIGH","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"E | 0 | lunch | 2024-02-13T14:00 | 2024-02-13T16:00 | DEFAULT","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"AndrewOng2066":6}},{"path":"src/main/java/andelu/Action.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package andelu;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":" * An Enum class to list down the list of features in this program.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"public enum Action {","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"    LIST,","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"    TODO,","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"    DEADLINE,","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"    EVENT,","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"    MARK,","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"    UNMARK,","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"    DELETE,","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"    DATE,","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"    FIND,","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"    BYE","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":17}},{"path":"src/main/java/andelu/Andelu.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package andelu;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":" * The Main class of this program.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"public class Andelu {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"    /** The Storage Manager to load and store the data to a file. */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"    /** The TaskList Object to store the list of tasks. */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"    /** The Ui Manager to handle the interaction with the user. */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"     * Creates a default constructor.","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"    public Andelu() {}","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"     * Creates a constructor and performs all the necessary work.","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"     * @param filePath the name of the text file to be stored.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"    public Andelu(String filePath) {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"            tasks \u003d new TaskList(storage.loadTasksFromFile());","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (AndeluException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"            ui.printLoadingError();","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"    /*","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"     * Runs the program.","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"    public void run() {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printWelcome();","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"        while (!isExit) {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"                String command \u003d ui.readCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"                ui.printOpeningDottedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"                Command c \u003d Parser.parse(command);","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"                c.executeCommand(tasks, ui, storage);","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"                isExit \u003d c.getIsExit();","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"            } catch (AndeluException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"                ui.printError(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"            } finally {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"                ui.printClosingDottedLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"    */","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"     * Returns the ui.","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"     * @return Ui.","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"    public Ui getUi() {","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"        return ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"AndrewOng2066"},"content":"     * Returns the TaskList.","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"AndrewOng2066"},"content":"     * @return TaskList.","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"AndrewOng2066"},"content":"    public TaskList getTasks() {","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"AndrewOng2066"},"content":"        return tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"AndrewOng2066"},"content":"     * Return the Storage.","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"AndrewOng2066"},"content":"     * @return Storage.","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"AndrewOng2066"},"content":"    public Storage getStorage() {","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"AndrewOng2066"},"content":"        return storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":100}},{"path":"src/main/java/andelu/AndeluException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package andelu;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":" * A DukeException class to handle exception messages.","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"public class AndeluException extends Exception {","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"     * A constructor to create new DukeException.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"     * @param message The message of the DukeException.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"    public AndeluException(String message) {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"        super(message);","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"AndrewOng2066":15}},{"path":"src/main/java/andelu/DateTimeManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package andelu;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":" * A DateTimeManager to convert between String and LocalDateTime.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"public class DateTimeManager {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"    private static List\u003cDateTimeFormatter\u003e formatters \u003d Arrays.asList(","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"),","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"     * Coverts the String to LocalDateTime type.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"     * @param timeString The time in String.","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"     * @return LocalDateTime.","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"     * @throws AndeluException If none of the timeString matches the formatter.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"    public static LocalDateTime convertStringToLocalDateTime(String timeString) throws AndeluException {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"                return LocalDateTime.parse(timeString, formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"                // Continue next format","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"        throw new AndeluException(\"Invalid format for Date-Time. The format is \\\"yyyy-MM-dd HH:mm\\\".\");","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"     * Converts LocalDateTime to String.","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"     * @param dt LocalDateTime.","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"     * @return the String version of DateTime.","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"     * @throws AndeluException If none of the formatter matches the LocalDateTime.","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"    public static String convertLocalDateTimeToString(LocalDateTime dt) throws AndeluException {","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"                return dt.format(formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"                // Continue next format","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"        throw new AndeluException(\"There is an error of converting LocalDateTime to String.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":56}},{"path":"src/main/java/andelu/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package andelu;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import command.AddDeadlineCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import command.AddEventCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import command.AddToDoCommand;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import command.Command;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import command.DeleteCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import command.ExitCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import command.FindCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"import command.ListCommand;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"import command.MarkCommand;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"import command.OtherCommand;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"import command.SearchCommand;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":" * A Parser class to decide the instruction made by the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"public class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"     * Parses the instruction to the correct command.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"     * @param userInput The information made by the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"     * @return The actual command class to execute the user instruction.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"    public static Command parse(String userInput) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"        String[] splitInput \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"        if (splitInput[0].equalsIgnoreCase(Action.LIST.toString())) {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"            return new ListCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"        } else if (splitInput[0].equalsIgnoreCase(Action.MARK.toString())) {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"            return new MarkCommand(userInput);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"        } else if (splitInput[0].equalsIgnoreCase(Action.UNMARK.toString())) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"            return new UnmarkCommand(userInput);","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"        } else if (splitInput[0].equalsIgnoreCase(Action.TODO.toString())) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"            return new AddToDoCommand(userInput);","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"        } else if (splitInput[0].equalsIgnoreCase(Action.DEADLINE.toString())) {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"            return new AddDeadlineCommand(userInput);","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"        } else if (splitInput[0].equalsIgnoreCase(Action.EVENT.toString())) {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"            return new AddEventCommand(userInput);","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"        } else if (splitInput[0].equalsIgnoreCase(Action.DELETE.toString())) {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"            return new DeleteCommand(userInput);","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"        } else if (splitInput[0].equalsIgnoreCase(Action.DATE.toString())) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"            return new SearchCommand(userInput);","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"        } else if (splitInput[0].equalsIgnoreCase(Action.FIND.toString())) {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"            return new FindCommand(userInput);","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"        } else if (splitInput[0].equalsIgnoreCase(Action.BYE.toString())) {","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"            return new OtherCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":65}},{"path":"src/main/java/andelu/PriorityLevel.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package andelu;","lastModifiedDate":"2024-02-13"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"public enum PriorityLevel {","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"    LOW,","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"    MEDIUM,","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"    HIGH,","lastModifiedDate":"2024-02-13"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"    DEFAULT","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-02-13"}],"authorContributionMap":{"AndrewOng2066":8}},{"path":"src/main/java/andelu/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package andelu;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-01-29"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2024-01-29"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-29"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.List;","lastModifiedDate":"2024-01-29"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"import task.Deadline;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"import task.Event;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"import task.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"import task.ToDo;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":" * A Storage class that acts as a File Manager to handle all file\u0027s read and write method.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"    /** A fixed directory for text files. */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"    static final Path DIRECTORY_PATH \u003d Paths.get(\"./data\");","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"    /** The name of the file. */","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"    private String fileName;","lastModifiedDate":"2024-01-29"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"    /** The path for the file. */","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"    private Path filePath;","lastModifiedDate":"2024-01-29"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"     * A constructor to create new Storage Object.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"     * @param fileName The file name to be loaded or stored.","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"    public Storage(String fileName) {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"        filePath \u003d DIRECTORY_PATH.resolve(fileName + \".txt\");","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"        createFile();","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"     * Creates directory and file if it doesn\u0027t exist.","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"    private void createFile() {","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"            if (!Files.exists(DIRECTORY_PATH)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"                Files.createDirectories(DIRECTORY_PATH);","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"            assert Files.exists(DIRECTORY_PATH) : \"Error: Directory not found.\";","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"            if (!Files.exists(filePath)) {","lastModifiedDate":"2024-01-29"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"            assert Files.exists(filePath) : \"Error: file not found.\";","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (IOException io) {","lastModifiedDate":"2024-01-29"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"            ui.printAnyStatement(\"There is an error when creating file. The error is \" + io.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"     * Writes tasks to the file.","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"     * @param tasks the tasks that need to be written.","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"     * @param isOverwrite True for overwrite the previous data. False for appending the data.","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"    public void writeArrayListToFile(ArrayList\u003cTask\u003e tasks, boolean isOverwrite) {","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":72,"author":{"gitId":"AndrewOng2066"},"content":"            assert Files.exists(filePath) : \"Error: file not found when writing.\";","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"AndrewOng2066"},"content":"            if (isOverwrite) {","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"AndrewOng2066"},"content":"                Files.write(filePath,","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"AndrewOng2066"},"content":"                        convertTasksToString(tasks).getBytes(),","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"AndrewOng2066"},"content":"                        StandardOpenOption.CREATE,","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"AndrewOng2066"},"content":"                        StandardOpenOption.WRITE,","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"AndrewOng2066"},"content":"                        StandardOpenOption.TRUNCATE_EXISTING);","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"AndrewOng2066"},"content":"            } else {","lastModifiedDate":"2024-01-29"},{"lineNumber":80,"author":{"gitId":"AndrewOng2066"},"content":"                Files.write(filePath,","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"AndrewOng2066"},"content":"                        convertTasksToString(tasks).getBytes(),","lastModifiedDate":"2024-02-06"},{"lineNumber":82,"author":{"gitId":"AndrewOng2066"},"content":"                        StandardOpenOption.CREATE,","lastModifiedDate":"2024-02-06"},{"lineNumber":83,"author":{"gitId":"AndrewOng2066"},"content":"                        StandardOpenOption.APPEND);","lastModifiedDate":"2024-02-06"},{"lineNumber":84,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":85,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (IOException io) {","lastModifiedDate":"2024-01-29"},{"lineNumber":86,"author":{"gitId":"AndrewOng2066"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"AndrewOng2066"},"content":"            ui.printAnyStatement(\"There is an error when writing to file. The error is \" + io.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":89,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":90,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"AndrewOng2066"},"content":"     * Loads Tasks from the file.","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"AndrewOng2066"},"content":"     * @return an ArrayList of Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"AndrewOng2066"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromFile() throws AndeluException {","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"AndrewOng2066"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":98,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"AndrewOng2066"},"content":"            List\u003cString\u003e fileContentLines \u003d Files.readAllLines(filePath);","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"AndrewOng2066"},"content":"            result \u003d convertStringListToTasks(fileContentLines);","lastModifiedDate":"2024-01-29"},{"lineNumber":102,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (IOException io) {","lastModifiedDate":"2024-01-29"},{"lineNumber":103,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AndeluException(\"There is an error when reading the file.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":105,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"AndrewOng2066"},"content":"        return result;","lastModifiedDate":"2024-01-29"},{"lineNumber":107,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":108,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":109,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"AndrewOng2066"},"content":"     * Converts an ArrayList of Tasks to String.","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"AndrewOng2066"},"content":"     * @param tasks An arrayList of Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"AndrewOng2066"},"content":"     * @return String format of the list of Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"AndrewOng2066"},"content":"    private String convertTasksToString(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":116,"author":{"gitId":"AndrewOng2066"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-01-29"},{"lineNumber":117,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"AndrewOng2066"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2024-01-29"},{"lineNumber":119,"author":{"gitId":"AndrewOng2066"},"content":"            if (task instanceof ToDo) {","lastModifiedDate":"2024-01-29"},{"lineNumber":120,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(\"T | \");","lastModifiedDate":"2024-01-29"},{"lineNumber":121,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(task.getStatusIcon().equals(\"X\") ? \"1 | \" : \"0 | \");","lastModifiedDate":"2024-01-29"},{"lineNumber":122,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(task.getDescription() + \" | \");","lastModifiedDate":"2024-02-13"},{"lineNumber":123,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(task.getPriorityLevel());","lastModifiedDate":"2024-02-13"},{"lineNumber":124,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(System.getProperty(\"line.separator\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":125,"author":{"gitId":"AndrewOng2066"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2024-01-29"},{"lineNumber":126,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(\"D | \");","lastModifiedDate":"2024-01-29"},{"lineNumber":127,"author":{"gitId":"AndrewOng2066"},"content":"                Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2024-02-12"},{"lineNumber":128,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(deadlineTask.getStatusIcon().equals(\"X\") ? \"1 | \" : \"0 | \");","lastModifiedDate":"2024-02-12"},{"lineNumber":129,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(deadlineTask.getDescription() + \" | \");","lastModifiedDate":"2024-02-12"},{"lineNumber":130,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(deadlineTask.getBy() + \" | \");","lastModifiedDate":"2024-02-13"},{"lineNumber":131,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(task.getPriorityLevel());","lastModifiedDate":"2024-02-13"},{"lineNumber":132,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(System.getProperty(\"line.separator\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":133,"author":{"gitId":"AndrewOng2066"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2024-02-12"},{"lineNumber":134,"author":{"gitId":"AndrewOng2066"},"content":"                Event eventTask \u003d (Event) task;","lastModifiedDate":"2024-02-12"},{"lineNumber":135,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(\"E | \");","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(eventTask.getStatusIcon().equals(\"X\") ? \"1 | \" : \"0 | \");","lastModifiedDate":"2024-02-12"},{"lineNumber":137,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(eventTask.getDescription() + \" | \");","lastModifiedDate":"2024-02-12"},{"lineNumber":138,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(eventTask.getStart() + \" | \");","lastModifiedDate":"2024-02-12"},{"lineNumber":139,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(eventTask.getEnd() + \" | \");","lastModifiedDate":"2024-02-13"},{"lineNumber":140,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(task.getPriorityLevel());","lastModifiedDate":"2024-02-13"},{"lineNumber":141,"author":{"gitId":"AndrewOng2066"},"content":"                result.append(System.getProperty(\"line.separator\"));","lastModifiedDate":"2024-01-29"},{"lineNumber":142,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":143,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":144,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":145,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":146,"author":{"gitId":"AndrewOng2066"},"content":"        return result.toString();","lastModifiedDate":"2024-01-29"},{"lineNumber":147,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":148,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":149,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":150,"author":{"gitId":"AndrewOng2066"},"content":"     * Converts the List of String to an ArrayList of Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":151,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":152,"author":{"gitId":"AndrewOng2066"},"content":"     * @param content the List of String to be converted.","lastModifiedDate":"2024-01-30"},{"lineNumber":153,"author":{"gitId":"AndrewOng2066"},"content":"     * @return an ArrayList of Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":154,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":155,"author":{"gitId":"AndrewOng2066"},"content":"    private ArrayList\u003cTask\u003e convertStringListToTasks(List\u003cString\u003e content) throws AndeluException {","lastModifiedDate":"2024-02-02"},{"lineNumber":156,"author":{"gitId":"AndrewOng2066"},"content":"        ArrayList\u003cTask\u003e fileTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":157,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":158,"author":{"gitId":"AndrewOng2066"},"content":"        for (String i : content) {","lastModifiedDate":"2024-01-29"},{"lineNumber":159,"author":{"gitId":"AndrewOng2066"},"content":"            String[] stringAttributes \u003d i.split(\"\\\\|\");","lastModifiedDate":"2024-01-29"},{"lineNumber":160,"author":{"gitId":"AndrewOng2066"},"content":"            if (stringAttributes[0].trim().equals(\"T\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":161,"author":{"gitId":"AndrewOng2066"},"content":"                fileTasks.add(new ToDo(","lastModifiedDate":"2024-02-01"},{"lineNumber":162,"author":{"gitId":"AndrewOng2066"},"content":"                        stringAttributes[2].trim(),","lastModifiedDate":"2024-02-01"},{"lineNumber":163,"author":{"gitId":"AndrewOng2066"},"content":"                        stringAttributes[1].trim().equals(\"1\") ? true : false,","lastModifiedDate":"2024-02-13"},{"lineNumber":164,"author":{"gitId":"AndrewOng2066"},"content":"                        PriorityLevel.valueOf(stringAttributes[3].trim())));","lastModifiedDate":"2024-02-13"},{"lineNumber":165,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":166,"author":{"gitId":"AndrewOng2066"},"content":"            } else if (stringAttributes[0].trim().equals(\"D\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":167,"author":{"gitId":"AndrewOng2066"},"content":"                fileTasks.add(new Deadline(","lastModifiedDate":"2024-02-01"},{"lineNumber":168,"author":{"gitId":"AndrewOng2066"},"content":"                        stringAttributes[2].trim(),","lastModifiedDate":"2024-02-01"},{"lineNumber":169,"author":{"gitId":"AndrewOng2066"},"content":"                        stringAttributes[1].trim().equals(\"1\") ? true : false,","lastModifiedDate":"2024-02-01"},{"lineNumber":170,"author":{"gitId":"AndrewOng2066"},"content":"                        PriorityLevel.valueOf(stringAttributes[3].trim()),","lastModifiedDate":"2024-02-13"},{"lineNumber":171,"author":{"gitId":"AndrewOng2066"},"content":"                        DateTimeManager.convertStringToLocalDateTime(stringAttributes[3].trim())));","lastModifiedDate":"2024-02-01"},{"lineNumber":172,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":173,"author":{"gitId":"AndrewOng2066"},"content":"            } else if (stringAttributes[0].trim().equals(\"E\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":174,"author":{"gitId":"AndrewOng2066"},"content":"                fileTasks.add(new Event(","lastModifiedDate":"2024-02-01"},{"lineNumber":175,"author":{"gitId":"AndrewOng2066"},"content":"                        stringAttributes[2].trim(),","lastModifiedDate":"2024-02-01"},{"lineNumber":176,"author":{"gitId":"AndrewOng2066"},"content":"                        stringAttributes[1].trim().equals(\"1\") ? true : false,","lastModifiedDate":"2024-02-01"},{"lineNumber":177,"author":{"gitId":"AndrewOng2066"},"content":"                        PriorityLevel.valueOf(stringAttributes[3].trim()),","lastModifiedDate":"2024-02-13"},{"lineNumber":178,"author":{"gitId":"AndrewOng2066"},"content":"                        DateTimeManager.convertStringToLocalDateTime(stringAttributes[3].trim()),","lastModifiedDate":"2024-02-01"},{"lineNumber":179,"author":{"gitId":"AndrewOng2066"},"content":"                        DateTimeManager.convertStringToLocalDateTime(stringAttributes[4].trim())));","lastModifiedDate":"2024-02-01"},{"lineNumber":180,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":181,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":182,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":183,"author":{"gitId":"AndrewOng2066"},"content":"        return fileTasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":184,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":185,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":186,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-01-30"},{"lineNumber":187,"author":{"gitId":"AndrewOng2066"},"content":"     * Converts the String content to an ArrayList of Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":188,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-01-30"},{"lineNumber":189,"author":{"gitId":"AndrewOng2066"},"content":"     * @param content the String content to be converted.","lastModifiedDate":"2024-01-30"},{"lineNumber":190,"author":{"gitId":"AndrewOng2066"},"content":"     * @return an ArrayList of Tasks.","lastModifiedDate":"2024-01-30"},{"lineNumber":191,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-01-30"},{"lineNumber":192,"author":{"gitId":"AndrewOng2066"},"content":"    private ArrayList\u003cTask\u003e convertStringToTasks(String content) throws AndeluException {","lastModifiedDate":"2024-02-02"},{"lineNumber":193,"author":{"gitId":"AndrewOng2066"},"content":"        String[] individualStringTask \u003d content.trim().split(System.lineSeparator());","lastModifiedDate":"2024-01-29"},{"lineNumber":194,"author":{"gitId":"AndrewOng2066"},"content":"        ArrayList\u003cTask\u003e fileTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-29"},{"lineNumber":195,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":196,"author":{"gitId":"AndrewOng2066"},"content":"        for (String i : individualStringTask) {","lastModifiedDate":"2024-01-29"},{"lineNumber":197,"author":{"gitId":"AndrewOng2066"},"content":"            String[] stringAttributes \u003d i.split(\"|\");","lastModifiedDate":"2024-01-29"},{"lineNumber":198,"author":{"gitId":"AndrewOng2066"},"content":"            if (stringAttributes[0].equals(\"T\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":199,"author":{"gitId":"AndrewOng2066"},"content":"                fileTasks.add(new ToDo(","lastModifiedDate":"2024-02-01"},{"lineNumber":200,"author":{"gitId":"AndrewOng2066"},"content":"                        stringAttributes[2].trim(),","lastModifiedDate":"2024-02-01"},{"lineNumber":201,"author":{"gitId":"AndrewOng2066"},"content":"                        stringAttributes[1].equals(\"1\") ? true : false,","lastModifiedDate":"2024-02-13"},{"lineNumber":202,"author":{"gitId":"AndrewOng2066"},"content":"                        PriorityLevel.valueOf(stringAttributes[3].trim())));","lastModifiedDate":"2024-02-13"},{"lineNumber":203,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":204,"author":{"gitId":"AndrewOng2066"},"content":"            } else if (stringAttributes[0].equals(\"D\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":205,"author":{"gitId":"AndrewOng2066"},"content":"                fileTasks.add(new Deadline(","lastModifiedDate":"2024-02-01"},{"lineNumber":206,"author":{"gitId":"AndrewOng2066"},"content":"                        stringAttributes[2].trim(),","lastModifiedDate":"2024-02-01"},{"lineNumber":207,"author":{"gitId":"AndrewOng2066"},"content":"                        stringAttributes[1].equals(\"1\") ? true : false,","lastModifiedDate":"2024-02-01"},{"lineNumber":208,"author":{"gitId":"AndrewOng2066"},"content":"                        PriorityLevel.valueOf(stringAttributes[3].trim()),","lastModifiedDate":"2024-02-13"},{"lineNumber":209,"author":{"gitId":"AndrewOng2066"},"content":"                        DateTimeManager.convertStringToLocalDateTime(stringAttributes[3].trim())));","lastModifiedDate":"2024-02-01"},{"lineNumber":210,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":211,"author":{"gitId":"AndrewOng2066"},"content":"            } else if (stringAttributes[0].equals(\"E\")) {","lastModifiedDate":"2024-01-29"},{"lineNumber":212,"author":{"gitId":"AndrewOng2066"},"content":"                fileTasks.add(new Event(","lastModifiedDate":"2024-02-01"},{"lineNumber":213,"author":{"gitId":"AndrewOng2066"},"content":"                        stringAttributes[2].trim(),","lastModifiedDate":"2024-02-01"},{"lineNumber":214,"author":{"gitId":"AndrewOng2066"},"content":"                        stringAttributes[1].equals(\"1\") ? true : false,","lastModifiedDate":"2024-02-01"},{"lineNumber":215,"author":{"gitId":"AndrewOng2066"},"content":"                        PriorityLevel.valueOf(stringAttributes[3].trim()),","lastModifiedDate":"2024-02-13"},{"lineNumber":216,"author":{"gitId":"AndrewOng2066"},"content":"                        DateTimeManager.convertStringToLocalDateTime(stringAttributes[3].trim()),","lastModifiedDate":"2024-02-01"},{"lineNumber":217,"author":{"gitId":"AndrewOng2066"},"content":"                        DateTimeManager.convertStringToLocalDateTime(stringAttributes[4].trim())));","lastModifiedDate":"2024-02-01"},{"lineNumber":218,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-29"},{"lineNumber":219,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":220,"author":{"gitId":"AndrewOng2066"},"content":"        return fileTasks;","lastModifiedDate":"2024-01-29"},{"lineNumber":221,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":222,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":223,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":224,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":225,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-29"}],"authorContributionMap":{"AndrewOng2066":225}},{"path":"src/main/java/andelu/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package andelu;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import task.Task;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":" * A class that contains all the tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":" * Performs the task job.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"    /** The list of tasks. */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"     * Creates an empty list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"     * Creates a list of tasks from the argument.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"     * Retrieves the list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"        return tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"     * Changes the list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"     * @param tasks the list of tasks to replace.","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"    public void setTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"     * Adds a new Task to the list of Tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"     * @param task new Task.","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"        tasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"     * Retrieves an individual task based on the index.","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"     * @param index the selection.","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"     * @return the selected task.","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"    public Task getIndividualTask(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"     * Removes the task from the list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"     * @param index the selection.","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"AndrewOng2066"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"AndrewOng2066"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"AndrewOng2066"},"content":"     * Marks the task as completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"AndrewOng2066"},"content":"     * @param index the selection.","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"AndrewOng2066"},"content":"    public void markTask(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"AndrewOng2066"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"AndrewOng2066"},"content":"     * Unmarks the task as not complete.","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"AndrewOng2066"},"content":"     * @param index the selection.","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"AndrewOng2066"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"AndrewOng2066"},"content":"        tasks.get(index).markAsUndone();","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":94}},{"path":"src/main/java/andelu/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package andelu;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":" * A class for user interaction.","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"    private String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"    //System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"     * A constructor to create new Ui Object.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"    public Ui() {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"     * Prints the welcome statements.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"    public void printWelcome() {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"      Hello! I\u0027m AndrewOng2066\");","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"      What can I do for you?\");","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"    public String getWelcomeStatement() {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"        return \"Hello! I\u0027m AndrewOng2066.\\nWhat can I do for you?\";","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"     * Prints the exit statement.","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"    public void printByeStatement() {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"      Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"     * Prints any statement.","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"     * @param input","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"    public void printAnyStatement(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"    \" + input);","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"     * Reads the user input.","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"     * @return the user input.","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"    public String readCommand() {","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"        return sc.nextLine().trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"     * Prints a row of dotted lines.","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"    public void printOpeningDottedLine() {","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"AndrewOng2066"},"content":"     * Prints a row of dotted lines with line separator at the back.","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"AndrewOng2066"},"content":"    public void printClosingDottedLine() {","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"AndrewOng2066"},"content":"    public void printInvalidFeature() {","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"      I\u0027m sorry, I do not understand that.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"AndrewOng2066"},"content":"    public void printLoadingError() {","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"    Unable to load the data from the file.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"AndrewOng2066"},"content":"    public void printError(String e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"    \" + e);","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":98}},{"path":"src/main/java/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.AndeluException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.DateTimeManager;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.PriorityLevel;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"import task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":" * A AddDeadlineCommand class to add new Deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":" * A subclass of Command class.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"    /** The information from the user to create new Deadline. */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"    private String input;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"     * Creates a constructor with userInput as argument.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"     * @param userInput The information when creating new Deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"    public AddDeadlineCommand(String userInput) {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"        input \u003d userInput;","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"     * Adds new Deadline task.","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"     * Performs some prior checks to ensure the validity of the new Deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"     * If invalid input occurs, error message is returned.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"     * Returns the response from Andelu.","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"     * @param tasks The TaskList Object that contains a List of Task.","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"     * @param ui The Ui Object that interact with the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"     * @param storage Storage Manager to writing to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"     * @return The response from Andelu.","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"     * @throws AndeluException If there is missing description or invalid date and time for \u0027by\u0027.","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"    public String executeCommand(TaskList tasks, Ui ui, Storage storage) throws AndeluException {","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"        assert input !\u003d null : \"input should not be null\";","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"        if (splitInput.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AndeluException(\"Missing the description!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"        String[] deadlineSplit \u003d input.split(\"/\");","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"        if (deadlineSplit.length \u003c 2) {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AndeluException(\"Invalid format for new Deadline!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"        String[] priorityStringSplit \u003d input.split(\"/priority\");","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"        PriorityLevel priorityLevel \u003d PriorityLevel.DEFAULT;","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"        if (priorityStringSplit.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"            String priorityInput \u003d priorityStringSplit[1].trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"            if (priorityInput.equalsIgnoreCase(\"Low\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"                priorityLevel \u003d PriorityLevel.LOW;","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"            } else if (priorityInput.equalsIgnoreCase(\"Medium\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"                priorityLevel \u003d PriorityLevel.MEDIUM;","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"            } else if (priorityInput.equalsIgnoreCase(\"High\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"                priorityLevel \u003d PriorityLevel.HIGH;","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"            } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"                throw new AndeluException(\"Please select the priority level: Low, Medium or High, if any.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"AndrewOng2066"},"content":"        String name \u003d deadlineSplit[0].substring(9).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"AndrewOng2066"},"content":"        String by \u003d deadlineSplit[1].substring(3).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"AndrewOng2066"},"content":"        LocalDateTime byDt \u003d DateTimeManager.convertStringToLocalDateTime(by);","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"AndrewOng2066"},"content":"        Deadline newDeadline \u003d new Deadline(name, false, priorityLevel, byDt);","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"AndrewOng2066"},"content":"        tasks.addTask(newDeadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"AndrewOng2066"},"content":"        ArrayList\u003cTask\u003e newDeadlineList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"AndrewOng2066"},"content":"        newDeadlineList.add(newDeadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"AndrewOng2066"},"content":"        storage.writeArrayListToFile(newDeadlineList, false);","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"AndrewOng2066"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"AndrewOng2066"},"content":"        stringBuilder.append(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"AndrewOng2066"},"content":"        stringBuilder.append(newDeadline.toString() + \"\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"AndrewOng2066"},"content":"        stringBuilder.append(\"Now you have \" + tasks.getTasks().size() + \" tasks in the list.\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printAnyStatement(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printAnyStatement(newDeadline.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printAnyStatement(\"Now you have \" + tasks.getTasks().size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"AndrewOng2066"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":93}},{"path":"src/main/java/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.AndeluException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.DateTimeManager;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.PriorityLevel;","lastModifiedDate":"2024-02-13"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"import task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":" * A AddEventCommand class to add new Event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":" * A subclass of Command class.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"    /** The information from the user to create new Event. */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"    private String input;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"     * Creates a constructor with userInput as argument.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"     * @param userInput The information when creating new Event.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"    public AddEventCommand(String userInput) {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"        this.input \u003d userInput;","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"     * Adds new Event task.","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"     * Performs some prior checks to ensure the validity of the new Event.","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"     * If invalid input occurs, error message is returned.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"     * Returns the response from Andelu.","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"     * @param tasks The TaskList Object that contains a List of Task.","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"     * @param ui The Ui Object that interact with the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"     * @param storage Storage Manager to writing to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"     * @return The response from Andelu.","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"     * @throws AndeluException If there is missing description or invalid date and time for \u0027start\u0027 and \u0027end\u0027.","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"    public String executeCommand(TaskList tasks, Ui ui, Storage storage) throws AndeluException {","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"        assert input !\u003d null : \"input should not be null\";","lastModifiedDate":"2024-02-12"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"        if (splitInput.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AndeluException(\"Missing the description!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"        String[] eventSplit \u003d input.split(\"/\");","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"        if (eventSplit.length \u003c 3) {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AndeluException(\"Invalid format for new Event!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"        String[] priorityStringSplit \u003d input.split(\"/priority\");","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"        PriorityLevel priorityLevel \u003d PriorityLevel.DEFAULT;","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"        if (priorityStringSplit.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"            String priorityInput \u003d priorityStringSplit[1].trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"            if (priorityInput.equalsIgnoreCase(\"Low\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"                priorityLevel \u003d PriorityLevel.LOW;","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"            } else if (priorityInput.equalsIgnoreCase(\"Medium\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"                priorityLevel \u003d PriorityLevel.MEDIUM;","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"            } else if (priorityInput.equalsIgnoreCase(\"High\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"                priorityLevel \u003d PriorityLevel.HIGH;","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"            } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"                throw new AndeluException(\"Please select the priority level: Low, Medium or High, if any.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":74,"author":{"gitId":"AndrewOng2066"},"content":"        String name \u003d eventSplit[0].substring(6).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"AndrewOng2066"},"content":"        String start \u003d eventSplit[1].substring(5).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"AndrewOng2066"},"content":"        String end \u003d eventSplit[2].substring(3).trim();","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"AndrewOng2066"},"content":"        LocalDateTime startDT \u003d DateTimeManager.convertStringToLocalDateTime(start);","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"AndrewOng2066"},"content":"        LocalDateTime endDT \u003d DateTimeManager.convertStringToLocalDateTime(end);","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"AndrewOng2066"},"content":"        Event newEvent \u003d new Event(name, false, priorityLevel, startDT, endDT);","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"AndrewOng2066"},"content":"        tasks.addTask(newEvent);","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"AndrewOng2066"},"content":"        ArrayList\u003cTask\u003e newEventList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"AndrewOng2066"},"content":"        newEventList.add(newEvent);","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"AndrewOng2066"},"content":"        storage.writeArrayListToFile(newEventList, false);","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"AndrewOng2066"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"AndrewOng2066"},"content":"        stringBuilder.append(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"AndrewOng2066"},"content":"        stringBuilder.append(newEvent.toString() + \"\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"AndrewOng2066"},"content":"        stringBuilder.append(\"Now you have \" + tasks.getTasks().size() + \" tasks in the list.\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printAnyStatement(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printAnyStatement(newEvent.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printAnyStatement(\"Now you have \" + tasks.getTasks().size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"AndrewOng2066"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":97}},{"path":"src/main/java/command/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.AndeluException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.PriorityLevel;","lastModifiedDate":"2024-02-13"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"import task.ToDo;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":" * A AddToDoCommand to add new ToDo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":" * A subclass of Command class.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"public class AddToDoCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"    /** The information from the user to create new ToDo. */","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"    private String input;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"     * Creates a constructor with userInput as argument.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"     * @param userInput The information when creating new ToDo.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"    public AddToDoCommand(String userInput) {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"        this.input \u003d userInput;","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"     * Adds new ToDo task.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"     * Performs some prior checks to ensure the validity of the new Deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"     * If invalid input occurs, error message is returned.","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"     * Returns the response from Andelu.","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"     * @param tasks The TaskList Object that contains a List of Task.","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"     * @param ui the Ui Object that interact with the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"     * @param storage Storage Manager to writing to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"     * @return The response from Andelu.","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"     * @throws AndeluException If there is missing description","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"    public String executeCommand(TaskList tasks, Ui ui, Storage storage) throws AndeluException {","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"        assert input !\u003d null : \"input should not be null\";","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"        if (splitInput.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AndeluException(\"Missing the description!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"        String[] priorityStringSplit \u003d input.split(\"/priority\");","lastModifiedDate":"2024-02-13"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"        PriorityLevel priorityLevel \u003d PriorityLevel.DEFAULT;","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"        if (priorityStringSplit.length \u003d\u003d 2) {","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"            String priorityInput \u003d priorityStringSplit[1].trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"            if (priorityInput.equalsIgnoreCase(\"Low\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"                priorityLevel \u003d PriorityLevel.LOW;","lastModifiedDate":"2024-02-13"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"            } else if (priorityInput.equalsIgnoreCase(\"Medium\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"                priorityLevel \u003d PriorityLevel.MEDIUM;","lastModifiedDate":"2024-02-13"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"            } else if (priorityInput.equalsIgnoreCase(\"High\")) {","lastModifiedDate":"2024-02-13"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"                priorityLevel \u003d PriorityLevel.HIGH;","lastModifiedDate":"2024-02-13"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"            } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"                throw new AndeluException(\"Please select the priority level: Low, Medium or High, if any.\");","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"        String name \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"        String[] nameSplit \u003d priorityStringSplit[0].split(\" \");","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"        for (int i \u003d 1; i \u003c nameSplit.length; i++) {","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"            name +\u003d nameSplit[i] + \" \";","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"AndrewOng2066"},"content":"        ToDo newToDo \u003d new ToDo(name.trim(), false, priorityLevel);","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"AndrewOng2066"},"content":"        tasks.addTask(newToDo);","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"AndrewOng2066"},"content":"        ArrayList\u003cTask\u003e newToDoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"AndrewOng2066"},"content":"        newToDoList.add(newToDo);","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"AndrewOng2066"},"content":"        storage.writeArrayListToFile(newToDoList, false);","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"AndrewOng2066"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"AndrewOng2066"},"content":"        stringBuilder.append(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"AndrewOng2066"},"content":"        stringBuilder.append(newToDo.toString() + \"\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"AndrewOng2066"},"content":"        stringBuilder.append(\"Now you have \" + tasks.getTasks().size() + \" tasks in the list.\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printAnyStatement(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printAnyStatement(newToDo.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printAnyStatement(\"Now you have \" + tasks.getTasks().size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"AndrewOng2066"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":91}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.AndeluException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":" * A superclass and abstract class.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"    /** The status of the system. */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"    private boolean isExit;","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"     * Creates a constructor.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"    public Command() {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"        isExit \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"     * Executes some actions by the subclasses.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"     * @param tasks The TaskList Object that contains a List of Task.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"     * @param ui The Ui Object that interact with the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"     * @param storage Storage Manager to writing to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"     * @return The response from Andelu.","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"     * @throws AndeluException If there is an error.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"    public abstract String executeCommand(TaskList tasks, Ui ui, Storage storage) throws AndeluException;","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"     * Changes the status of the isExit to true.","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"    public void confirmExit() {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"     * Gets the status of the isExit.","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"     * @return isExit.","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"    public boolean getIsExit() {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"        return this.isExit;","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":53}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.AndeluException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":" * A DeleteCommand class to delete tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":" * A subclass of Command class.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"    /** The information from the user to delete a Task. */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"    private String input;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"     * Creates a constructor with userInput as argument.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"     * @param userInput","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"    public DeleteCommand(String userInput) {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"        this.input \u003d userInput;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"     * Deletes a task based on the index.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"     * If there is no task selected or the list of tasks is empty, then an error message is returned.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"     * Returns the response from Andelu.","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"     * @param tasks the Task Object that contains a List of Task.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"     * @param ui The Ui Object that interact with the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"     * @param storage Storage Manager to writing to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"     * @return The response from Andelu.","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"     * @throws AndeluException If the list of tasks is empty, no task selected, or invalid index.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"    public String executeCommand(TaskList tasks, Ui ui, Storage storage) throws AndeluException {","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"        assert input !\u003d null : \"input should not be null\";","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"        if (tasks.getTasks().size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AndeluException(\"No task at the moment.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"        } else if (splitInput.length \u003c 2) {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AndeluException(\"Please select the task.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"        int choiceDelete;","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"            choiceDelete \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AndeluException(\"Please enter a valid integer value.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"        if (choiceDelete \u003c\u003d tasks.getTasks().size() \u0026\u0026 choiceDelete \u003e 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"            Task deletedTask \u003d tasks.getIndividualTask(choiceDelete - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"            tasks.removeTask(choiceDelete - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"            storage.writeArrayListToFile(tasks.getTasks(), true);","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"            StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"            stringBuilder.append(\"Noted, I\u0027ve removed this task:\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"            stringBuilder.append(deletedTask.toString() + \"\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"            stringBuilder.append(\"Now you have \" + tasks.getTasks().size() + \" tasks in the list.\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"            ui.printAnyStatement(\"Noted, I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"            ui.printAnyStatement(deletedTask.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"            ui.printAnyStatement(\"Now you have \" + tasks.getTasks().size() + \" tasks in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"            return stringBuilder.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AndeluException(\"Invalid choice\");","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":73}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.AndeluException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":" * A ExitCommand to exit the program.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":" * A subclass of Command class.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"     * Exits the program.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"     * Returns a bye statement.","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"     * @param tasks The TaskList Object that contains a List of Task.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"     * @param ui The Ui Object that interact with the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"     * @param storage Storage Manager to writing to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"     * @return The response from Andelu.","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"     * @throws AndeluException No Exception.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"    public String executeCommand(TaskList tasks, Ui ui, Storage storage) throws AndeluException {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"        super.confirmExit();","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printByeStatement();","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":31}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.AndeluException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":" * A FindCommand class to search the tasks based on the description.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":" * A subclass of Command class.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"    /** The information form the user to search tasks based on the description. */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"    private String input;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"     * A constructor with userInput as argument.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"     * @param userInput The information to search a task based on the description.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"    public FindCommand(String userInput) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"        this.input \u003d userInput;","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"     * Searches tasks based on the description.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"     * If no description is inputted, an error message is returned.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"     * Returns the response from Andelu.","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"     * @param tasks The TaskList Object that contains a List of Tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"     * @param ui THe Ui Object that interact with the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"     * @param storage Storage Manager to write the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"     * @return The response from Andelu.","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"     * @throws AndeluException If missing the description.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"    public String executeCommand(TaskList tasks, Ui ui, Storage storage) throws AndeluException {","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"        assert input !\u003d null : \"input should not be null\";","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"        if (splitInput.length \u003c\u003d 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AndeluException(\"Missing the Description!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"        stringBuilder.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printAnyStatement(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"        int index \u003d 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"        for (Task task : tasks.getTasks()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"            if (task.getDescription().contains(splitInput[1].trim())) {","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"                ui.printAnyStatement((index++) + \".\" + task.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"                stringBuilder.append((index++) + \".\" + task.toString() + \"\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"        if (index \u003d\u003d 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"            ui.printAnyStatement(\"There is no such task.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"            stringBuilder.append(\"There is no such task.\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"AndrewOng2066":65}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.AndeluException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":" * A ListCommand to list down the current list of tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":" * A subclass of Command class.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"     * Lists down the current list of tasks (from the file).","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"     * Returns a response from Andelu.","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"     * @param tasks The TaskList Object that contains a List of Task.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"     * @param ui The Ui Object that interact with the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"     * @param storage Storage Manager to writing to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"     * @return The response from Andelu.","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"     * @throws AndeluException","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"    public String executeCommand(TaskList tasks, Ui ui, Storage storage) throws AndeluException {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"        /*","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"        stringBuilder.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printAnyStatement(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"        tasks.setTasks(storage.loadTasksFromFile());","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"        for (int i \u003d 0; i \u003c tasks.getTasks().size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"            System.out.println(\"      \" + (i + 1) + \".\" + tasks.getTasks().get(i).toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"            stringBuilder.append((i + 1) + \".\" + tasks.getTasks().get(i).toString() + \"\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"        */","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"        String tasksString \u003d IntStream.range(0, tasks.getTasks().size()).mapToObj(i -\u003e String.format(\"%d. %s\", (i + 1), tasks.getTasks().get(i).toString())).collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"        String result \u003d \"Here are the tasks in your list:\\n\" + tasksString;","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"        return result;","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":47}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.AndeluException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":" * A MarkCommand to mark the task as completion.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":" * A subclass of Command class.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"    /** The information from the user to mark a Task. */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"    private String input;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"     * Creates a constructor with userInput as argument.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"     * @param userInput The information to mark a task.","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"    public MarkCommand(String userInput) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"        this.input \u003d userInput;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"     * Marks a task as completion.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"     * If no task is selected, no task at the moment, or invalid index, an error message is returned.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"     * Return a response from Andelu.","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"     * @param tasks The TaskList Object that contains a List of Task.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"     * @param ui The Ui Object that interact with the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"     * @param storage Storage Manager to writing to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"     * @return The response from Andelu.","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"     * @throws AndeluException If no task is selected, no task at the moment, or invalid index.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"    public String executeCommand(TaskList tasks, Ui ui, Storage storage) throws AndeluException {","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"        assert input !\u003d null : \"input should not be null\";","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"        if (tasks.getTasks().size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AndeluException(\"No task at the moment.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"        } else if (splitInput.length \u003c 2) {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AndeluException(\"Please select the task.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"        int choiceMark;","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"            choiceMark \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AndeluException(\"Please enter a valid integer value.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"        if (choiceMark \u003c\u003d tasks.getTasks().size() \u0026\u0026 choiceMark \u003e 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"            tasks.markTask(choiceMark - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"            storage.writeArrayListToFile(tasks.getTasks(), true);","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"            StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"            stringBuilder.append(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"            stringBuilder.append(tasks.getTasks().get(choiceMark - 1).toString() + \"\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"            ui.printAnyStatement(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"            ui.printAnyStatement(tasks.getTasks().get(choiceMark - 1).toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"            return stringBuilder.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AndeluException(\"Invalid choice.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":72}},{"path":"src/main/java/command/OtherCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.AndeluException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":" * A OtherCommand that prints invalid instruction.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":" * A subclass of Command class.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"public class OtherCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"     * Returns a statement of invalid instruction.","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"     * @param tasks The TaskList Object that contains a List of Task.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"     * @param ui The Ui Object that interact with the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"     * @param storage Storage Manager to writing to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"     * @return The response from Andelu.","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"     * @throws AndeluException","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"    public String executeCommand(TaskList tasks, Ui ui, Storage storage) throws AndeluException {","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printInvalidFeature();","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"        return \"I\u0027m sorry, I do not understand that.\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":28}},{"path":"src/main/java/command/SearchCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.AndeluException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.DateTimeManager;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"import task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"import task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"import task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":" * A Search command to search the tasks based on date.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":" * A subclass of Command class.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"public class SearchCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"    /** The information from the user to search tasks. */","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"    private String input;","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"     * Creates a constructor with userInput as argument.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"     * @param userInput The information to search a task based on a date.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"    public SearchCommand(String userInput) {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"        this.input \u003d userInput;","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"     * Searches tasks based on the date.","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"     * If no date is inputted, an error message is returned.","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"     * Returns a response from Andelu.","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"     * @param tasks The TaskList Object that contains a List of Task.","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"     * @param ui The Ui Object that interact with the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"     * @param storage Storage Manager to writing to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"     * @return The response from Andelu.","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"     * @throws AndeluException If missing the date.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"    public String executeCommand(TaskList tasks, Ui ui, Storage storage) throws AndeluException {","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"        assert input !\u003d null : \"input should not be null\";","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"        if (splitInput.length \u003c\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AndeluException(\"Missing the date!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"        LocalDateTime dateInput \u003d DateTimeManager.convertStringToLocalDateTime(splitInput[1].trim() + \"T00:00\");","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"        ui.printAnyStatement(\"Here are the tasks on \" + input + \":\");","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"        stringBuilder.append(\"Here are the tasks on \" + input + \":\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"        int index \u003d 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"        for (Task i : tasks.getTasks()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"            if (i instanceof Deadline) {","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"                if (((Deadline) i).getBy().toLocalDate().isEqual(dateInput.toLocalDate())) {","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"                    ui.printAnyStatement((index++) + \".\" + i.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"                    stringBuilder.append((index++) + \".\" + i.toString() + \"\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"            } else if (i instanceof Event) {","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"                if (((Event) i).getStart().toLocalDate().isEqual(dateInput.toLocalDate())) {","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"                    ui.printAnyStatement((index++) + \".\" + i.toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"                    stringBuilder.append((index++) + \".\" + i.toString() + \"\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"AndrewOng2066"},"content":"        if (index \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"AndrewOng2066"},"content":"            ui.printAnyStatement(\"There are no task on this date\");","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"AndrewOng2066"},"content":"            stringBuilder.append(\"There are no task on this date\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"AndrewOng2066"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":81}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.AndeluException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":" * A UnmarkCommand to mark the task as not complete.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":" * A subclass of Command class.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"    /** The information from the user to unmark a Task. */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"    private String input;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"     * Creates a constructor with userInput as argument.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"     * @param userInput","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"    public UnmarkCommand(String userInput) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"        this.input \u003d userInput;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"     * Unmarks a task as not complete.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"     * If no task is selected, no task at the moment, or invalid index, an error message is returned.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"     * Returns a response from Andelu.","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"     * @param tasks The TaskList Object that contains a List of Task.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"     * @param ui The Ui Object that interact with the user.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"     * @param storage Storage Manager to writing to the file.","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"     * @return The response from Andelu.","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"     * @throws AndeluException If no task is selected, no task at the moment, or invalid index.","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"    public String executeCommand(TaskList tasks, Ui ui, Storage storage) throws AndeluException {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"        assert input !\u003d null : \"input should not be null\";","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"        if (tasks.getTasks().size() \u003d\u003d 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AndeluException(\"No task at the moment.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"        } else if (splitInput.length \u003c 2) {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AndeluException(\"Please select the task.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"        int choiceUnmark;","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"            choiceUnmark \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AndeluException(\"Please enter a valid integer value.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"        if (choiceUnmark \u003c\u003d tasks.getTasks().size() \u0026\u0026 choiceUnmark \u003e 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"            tasks.unmarkTask(choiceUnmark - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"            storage.writeArrayListToFile(tasks.getTasks(), true);","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"            ui.printAnyStatement(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"            ui.printAnyStatement(tasks.getTasks().get(choiceUnmark - 1).toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"            StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"            stringBuilder.append(\"OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"            stringBuilder.append(tasks.getTasks().get(choiceUnmark - 1).toString() + \"\\n\");","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"            return stringBuilder.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AndeluException(\"Invalid choice.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":70}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package gui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":" * A class to handle the Diglox Box GUI.","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"    /** A label to show text. */","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"    /** An imageView to show image. */","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"     * A constructor to create a DialogBox for label and image.","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"     * @param text The text to print.","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"     * @param image The image to show.","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"    public DialogBox(String text, Image image) {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"        displayPicture.setImage(image);","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"     * Flips the dialog box.","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"    private void flip() {","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"     * Returns a new dialog box to represent the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"     * @param text The text that the user sent.","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"     * @param image The image of the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"     * @return a Dialog box that represent the user.","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"    public static DialogBox getUserDialog(String text, Image image) {","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"        return new DialogBox(text, image);","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"AndrewOng2066"},"content":"     * Returns a new dialog box to represent Andelu bot.","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"AndrewOng2066"},"content":"     * @param text The response by Andelu bot.","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"AndrewOng2066"},"content":"     * @param image The image of Andelu bot.","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"AndrewOng2066"},"content":"     * @return a Dialog box that represent Andelu bot.","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"AndrewOng2066"},"content":"    public static DialogBox getAndeluDialog(String text, Image image) {","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"AndrewOng2066"},"content":"        var db \u003d new DialogBox(text, image);","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"AndrewOng2066"},"content":"        db.flip();","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"AndrewOng2066"},"content":"        return db;","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"AndrewOng2066":84}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package gui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":" * A class for launching the GUI.","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"public class Launcher {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"        Application.launch(MainGui.class, args);","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"AndrewOng2066":13}},{"path":"src/main/java/gui/MainGui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package gui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Andelu;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":" * A GUI for Andelu bot using FXML.","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"public class MainGui extends Application {","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    private Andelu andelu;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"     * Starts the GUI interface.","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"     * @param stage the primary stage for this application, onto which the application scene can be set.","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"     *              Applications may create other stages, if needed, but they will not be primary stages.","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"        andelu \u003d new Andelu(\"duke\");","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainGui.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setAndelu(\"duke\");","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"            stage.show();","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"AndrewOng2066":40}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package gui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Andelu;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.AndeluException;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Parser;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import command.Command;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"    /** Scroll Pane for the GUI. */","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"    /** DialogContainer to store all the DialogBox. */","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"    /** TextField to get the user input.*/","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"    /** A button for the user to submit his enquires. */","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"    /** An Andelu Object. */","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"    private Andelu andelu;","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"    /** The image of the user. */","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"    /** The image of Andelu bot. */","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"    private Image andeluImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaAndelu.png\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"     * Initialises some properties for GUI.","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"        dialogContainer.getChildren()","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"                .addAll(DialogBox.getAndeluDialog(\"Hello! I\u0027m AndrewOng2066.\\nWhat can I do for you?\", andeluImage));","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"     * Create the Andelu Object.","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"     * @param filename the filename to store the data.","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"    public void setAndelu(String filename) {","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"        andelu \u003d new Andelu(filename);","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Andelu\u0027s reply and then appends them to","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"    @FXML","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"        Command c \u003d Parser.parse(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"AndrewOng2066"},"content":"        String response;","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"AndrewOng2066"},"content":"            response \u003d c.executeCommand(andelu.getTasks(), andelu.getUi(), andelu.getStorage());","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (AndeluException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"AndrewOng2066"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"AndrewOng2066"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"AndrewOng2066"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"AndrewOng2066"},"content":"                DialogBox.getAndeluDialog(response, andeluImage)","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"AndrewOng2066"},"content":"        );","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"AndrewOng2066"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"AndrewOng2066":84}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.PriorityLevel;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":" * A class to create Deadline Object.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":" * A subclass of Task.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"    /** The DateTime to complete this task. */","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"     * A constructor to create the Deadline Object.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"     * @param description The title of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"     * @param isDone The status of the task.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"     * @param by The DateTime to complete the Deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"    public Deadline(String description, boolean isDone, PriorityLevel priorityLevel, LocalDateTime by) {","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"        super(description, isDone, priorityLevel);","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"     * Returns the DateTime of the deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"     * @return \u0027by\u0027.","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"        return this.by;","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"     * Prints the information of the Deadline Object.","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"     * @return the information of the Deadline.","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"        List\u003cDateTimeFormatter\u003e formatters \u003d Arrays.asList(","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"                DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"                DateTimeFormatter.ofPattern(\"MMM dd yyyy\u0027T\u0027HH:mm\")","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"        );","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"        String byString \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"                byString \u003d this.by.format(formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"                // Continue next format","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"        return \"[D][\" + super.getStatusIcon() + \"] \"","lastModifiedDate":"2024-02-13"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"                + super.getDescription()","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"                + \" (by: \" + byString + \")\"","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"                + \" (\" + super.getPriorityLevel() + \" priority)\";","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":68}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.PriorityLevel;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.List;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":" * A class to create Event Object.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":" * A subclass of Task.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    /** The start DateTime for this Event. */","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"    private LocalDateTime start;","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"    /** The end DateTime for this Event. */","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"    private LocalDateTime end;","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"     * A constructor to create the Event Object.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"     * @param description The title of the Event.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"     * @param isDone The status of the Event.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"     * @param start The start DateTime of the Event.","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"     * @param end The end DateTime of the Event.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"    public Event(String description, boolean isDone, PriorityLevel priorityLevel, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"        super(description, isDone, priorityLevel);","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"     * Returns the start DateTime of the Event.","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"     * @return The start DateTime.","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"    public LocalDateTime getStart() {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"        return this.start;","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"     * Returns the end DateTime of the Event.","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"     * @return The end DateTime.","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"    public LocalDateTime getEnd() {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"        return this.end;","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"     * Prints the information of the Event Object.","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"     * @return the information of the Event.","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"        List\u003cDateTimeFormatter\u003e formatters \u003d Arrays.asList(","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"                DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"),","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"                DateTimeFormatter.ofPattern(\"MMM dd yyyy\u0027T\u0027HH:mm\")","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"        );","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"        String startString \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"        String endString \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"AndrewOng2066"},"content":"        for (DateTimeFormatter formatter : formatters) {","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"AndrewOng2066"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"AndrewOng2066"},"content":"                startString \u003d this.start.format(formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"AndrewOng2066"},"content":"                endString \u003d this.end.format(formatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"AndrewOng2066"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"AndrewOng2066"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"AndrewOng2066"},"content":"                // Continue next format","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"AndrewOng2066"},"content":"        return \"[E][\" + super.getStatusIcon() + \"] \"","lastModifiedDate":"2024-02-06"},{"lineNumber":83,"author":{"gitId":"AndrewOng2066"},"content":"                + super.getDescription()","lastModifiedDate":"2024-02-06"},{"lineNumber":84,"author":{"gitId":"AndrewOng2066"},"content":"                + \" (from: \" + startString + \" to: \"","lastModifiedDate":"2024-02-06"},{"lineNumber":85,"author":{"gitId":"AndrewOng2066"},"content":"                + endString + \")\"","lastModifiedDate":"2024-02-13"},{"lineNumber":86,"author":{"gitId":"AndrewOng2066"},"content":"                + \" (\" + super.getPriorityLevel() + \" priority)\";","lastModifiedDate":"2024-02-13"},{"lineNumber":87,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":88}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.PriorityLevel;","lastModifiedDate":"2024-02-13"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":" * A superclass for Task.","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"public class Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"    /** The description for this task. */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"    private String description;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"    /** The status of completion for this task. */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"    private PriorityLevel priorityLevel;","lastModifiedDate":"2024-02-13"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"     * A superclass constructor to create a Task.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"     * @param description The title of the Task.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"     * @param isDone The status of the Task.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"     * @param isDone The priority level of the Task.","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"    public Task(String description, boolean isDone, PriorityLevel priorityLevel) {","lastModifiedDate":"2024-02-13"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"        this.priorityLevel \u003d priorityLevel;","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"     * Returns the description of the Task.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"     * @return The Description.","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"    public String getDescription() {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"        return description;","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"     * Returns the status of the Task.","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"     * Returns \"X\" if the status of the Task is completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"     * Else, returns \" \".","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"     * @return \"X\" if isDone is true, else \" \".","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"     * Marks the Task as completed.","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"     * Unmarks the Task as not complete.","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"     * Returns the priority level of the Task.","lastModifiedDate":"2024-02-13"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"     * @return priority level of the task.","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"    public PriorityLevel getPriorityLevel() {","lastModifiedDate":"2024-02-13"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"        return this.priorityLevel;","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":73}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.PriorityLevel;","lastModifiedDate":"2024-02-13"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":" * A class to create ToDO Object.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":" * A subclass of Task.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"     * A constructor to create ToDo Object.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"     * @param description The title of the ToDo.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"     * @param isDone The status of the ToDo.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    public ToDo(String description, boolean isDone, PriorityLevel priorityLevel) {","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"        super(description, isDone, priorityLevel);","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"     * Prints the information of the ToDo Object.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"     * @return the information of the ToDo.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"    public String toString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"        return \"[T][\" + super.getStatusIcon() + \"] \"","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"                + super.getDescription()","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"                + \" (\" + super.getPriorityLevel() + \" priority)\";","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"AndrewOng2066":33}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"500.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"                \u003cInsets left\u003d\"11.0\" right\u003d\"11.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"AndrewOng2066":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"\u003cAnchorPane fx:id\u003d\"anchorPane\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"358.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"400\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"400.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"100\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"${anchorPane.width}\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"500.0\" /\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"AndrewOng2066":19}},{"path":"src/test/java/command/AddDeadLineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.AndeluException;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"public class AddDeadLineCommandTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    public void executeCommand_missingDescription_exceptionThrown() {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"        AndeluException exception \u003d assertThrows(AndeluException.class, ()","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"                -\u003e {","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"            new AddDeadlineCommand(\"deadline \")","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"                    .executeCommand(new TaskList(), new Ui(), new Storage(\"duke\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"        });","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"        assertEquals(\"Missing the description!\", exception.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"    public void executeCommand_missingDateTime_exceptionThrown() {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"        AndeluException exception \u003d assertThrows(AndeluException.class, ()","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"                -\u003e {","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"            new AddDeadlineCommand(\"deadline borrow book\")","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"                    .executeCommand(new TaskList(), new Ui(), new Storage(\"duke\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"        });","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"        assertEquals(\"Invalid format for new Deadline!\", exception.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"AndrewOng2066":38}},{"path":"src/test/java/command/AddEventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package command;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.AndeluException;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"public class AddEventCommandTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"    public void executeCommand_missingDescription_exceptionThrown() {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"        AndeluException exception \u003d assertThrows(AndeluException.class, ()","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"                -\u003e {","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"            new AddEventCommand(\"event \")","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"                    .executeCommand(new TaskList(), new Ui(), new Storage(\"duke\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"        });","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"        assertEquals(\"Missing the description!\", exception.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"    public void executeCommand_missingTwoDateTime_exceptionThrown() {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"        AndeluException exception \u003d assertThrows(AndeluException.class, ()","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"                -\u003e {","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"            new AddEventCommand(\"event meeting\")","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"                    .executeCommand(new TaskList(), new Ui(), new Storage(\"duke\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"        });","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"        assertEquals(\"Invalid format for new Event!\", exception.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"    public void executeCommand_missingOneDateTime_exceptionThrown() {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"        AndeluException exception \u003d assertThrows(AndeluException.class, ()","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"                -\u003e {","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"            new AddEventCommand(\"event meeting /from 2024-10-01 23:59\")","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"                    .executeCommand(new TaskList(), new Ui(), new Storage(\"duke\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"        });","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"        assertEquals(\"Invalid format for new Event!\", exception.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"AndrewOng2066":48}},{"path":"src/test/java/duke/DateTimeManagerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package duke;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.AndeluException;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"import andelu.DateTimeManager;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"public class DateTimeManagerTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"    public void convertStringToLocalDateTime_matchedStringInput_success() throws AndeluException {","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"        assertEquals(LocalDateTime.of(2024, 01, 30, 23, 59),","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"                DateTimeManager.convertStringToLocalDateTime(\"2024-01-30 23:59\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"        assertEquals(LocalDateTime.of(2024, 01, 30, 23, 59),","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"                DateTimeManager.convertStringToLocalDateTime(\"2024-01-30 23:59\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"        assertEquals(LocalDateTime.of(2024, 03, 30, 10, 30),","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"                DateTimeManager.convertStringToLocalDateTime(\"2024-03-30 10:30\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"    public void convertStringToLocalDateTime_unmatchedStringInput_fail() throws AndeluException {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"        assertNotEquals(LocalDateTime.of(2025, 03, 30, 10, 30),","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"                DateTimeManager.convertStringToLocalDateTime(\"2024-03-30 10:30\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"        assertNotEquals(LocalDateTime.of(2024, 03, 30, 12, 30),","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"                DateTimeManager.convertStringToLocalDateTime(\"2024-03-30 10:30\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"    public void convertLocalDateTimeToString_matchedDateTimeInput_success() throws AndeluException {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"        assertEquals(\"Mar 30 2024 12:30\",","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"                DateTimeManager.convertLocalDateTimeToString(LocalDateTime.of(2024, 03, 30, 12, 30)));","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"        assertEquals(\"Jan 30 2024 15:30\",","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"                DateTimeManager.convertLocalDateTimeToString(LocalDateTime.of(2024, 01, 30, 15, 30)));","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"    public void convertLocalDateTimeToString_unmatchedDateTimeInput_fail() {","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"            assertNotEquals(\"Dec 30 2024 12:30\",","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"                    DateTimeManager.convertLocalDateTimeToString(LocalDateTime.of(2024, 03, 30, 12, 30)));","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"            assertNotEquals(\"Jan 30 2024 08:30\",","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"                    DateTimeManager.convertLocalDateTimeToString(LocalDateTime.of(2024, 01, 30, 15, 30)));","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (AndeluException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"            assertEquals(\"There is an error of converting LocalDateTime to String.\", e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"    public void convertStringToLocalDateTime_invalidInputNoTime_exceptionThrown() {","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"            assertNotEquals(LocalDateTime.of(2024, 01, 30, 23, 59),","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"                    DateTimeManager.convertStringToLocalDateTime(\"2024-01-30\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"            printSomething(); // the test should not reach this line","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"            assertEquals(\"Invalid format for Date-Time. The format is \\\"yyyy-MM-dd HH:mm\\\".\", e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"AndrewOng2066"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"AndrewOng2066"},"content":"    public void convertStringToLocalDateTime_invalidInputTimeWrong_exceptionThrown() {","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"AndrewOng2066"},"content":"            assertNotEquals(LocalDateTime.of(2024, 01, 30, 23, 59),","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"AndrewOng2066"},"content":"                    DateTimeManager.convertStringToLocalDateTime(\"2024-01-30 25:59\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"AndrewOng2066"},"content":"            printSomething(); // the test should not reach this line","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"AndrewOng2066"},"content":"            assertEquals(\"Invalid format for Date-Time. The format is \\\"yyyy-MM-dd HH:mm\\\".\", e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"AndrewOng2066"},"content":"    private static void printSomething() {","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"AndrewOng2066"},"content":"        System.out.println(\"Hello!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"AndrewOng2066":93}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"todo read book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"todo return book","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"AndrewOng2066":3}},{"path":"text-ui-test/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"todo read book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"todo","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"todo join sports club","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"mark 4","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"deadline","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"deadline return book","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"event","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"event meeting","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"event meeting /from 5pm","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"mark 5","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"mark 7","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"mark","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"mark 9","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"unmark","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"unmark 4","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"unmark 9","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"delete","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"delete 8","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"delete 6","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"blah","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"AndrewOng2066":30}},{"path":"text-ui-test/runtest2.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"@ECHO OFF","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"REM delete output from previous run","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"    exit /b 1","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":")","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"java -classpath ..\\bin Duke \u003c input2.txt \u003e ACTUAL2.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"REM compare the output to the expected output","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"FC ACTUAL2.TXT EXPECTED2.TXT","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"AndrewOng2066":21}},{"path":"text-ui-test/runtest2.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"then","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"    mkdir ../bin","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"fi","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"# delete output from previous run","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"then","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"fi","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"then","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"    exit 1","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"fi","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"java -classpath ../bin Duke \u003c input2.txt \u003e ACTUAL2.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"# convert to UNIX format","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"cp EXPECTED2.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"dos2unix ACTUAL2.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"# compare the output to the expected output","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"diff ACTUAL2.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"then","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"    exit 0","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"else","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"    exit 1","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"fi","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"AndrewOng2066":38}}]
