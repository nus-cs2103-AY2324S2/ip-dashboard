[{"path":"src/main/java/Shon.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaunlxw"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"shaunlxw"},"content":"public class Shon {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"shaunlxw"},"content":"    private final static String LINE \u003d \"    _______________\" +","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"shaunlxw"},"content":"            \"_____________________________________________\";","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"shaunlxw"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"shaunlxw"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"shaunlxw"},"content":"        print(\"Hello! I\u0027m Shon\", \"What can I do for you?\");","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"shaunlxw"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"shaunlxw"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"shaunlxw"},"content":"            print(input);","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"shaunlxw"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"shaunlxw"},"content":"        print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"shaunlxw"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"shaunlxw"},"content":"    private static void print(String... messages) {","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"shaunlxw"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"shaunlxw"},"content":"        for (String msg : messages) {","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"shaunlxw"},"content":"            System.out.println(\"     \" + msg);","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"shaunlxw"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"shaunlxw"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"shaunlxw"},"content":"        System.out.println();","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"shaunlxw"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"shaunlxw"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"shaunlxw":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"shaunlxw"},"content":"java -classpath ..\\bin Shon \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"shaunlxw":1}}]
