[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gosongying"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"gosongying"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"gosongying"},"content":"     * Creates a Deadline task with description and deadline.","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"gosongying"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"gosongying"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"gosongying"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"gosongying"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime by) {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"gosongying"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"gosongying"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"gosongying"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"gosongying"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"gosongying"},"content":"        return \"D\" + super.toString() + \" | \" + this.by.format(dateTimeFormatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"gosongying"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"gosongying":23}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"        Harper harper \u003d new Harper();","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"        harper.startChat();","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"gosongying":2,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gosongying"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"gosongying"},"content":"    protected LocalDateTime start;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"gosongying"},"content":"    protected LocalDateTime end;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"gosongying"},"content":"     * Creates a Event task with description, start time and end time.","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"gosongying"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"gosongying"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"gosongying"},"content":"     * @param start Start time of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"gosongying"},"content":"     * @param end End time of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"gosongying"},"content":"    public Event(String description, boolean isDone, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"gosongying"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"gosongying"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"gosongying"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"gosongying"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"gosongying"},"content":"        return \"E\" + super.toString() + \" | \"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"gosongying"},"content":"                + this.start.format(dateTimeFormatter) + \" - \" + this.end.format(dateTimeFormatter);","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"gosongying"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"gosongying":27}},{"path":"src/main/java/Harper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gosongying"},"content":"import exceptions.HarperException;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"import exceptions.HarperInvalidDeadlineException;","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"import exceptions.HarperInvalidInputException;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"import exceptions.HarperInvalidEventException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"gosongying"},"content":"import exceptions.HarperInvalidFileContentFormatException;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"gosongying"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"gosongying"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"gosongying"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"gosongying"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"gosongying"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"gosongying"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"gosongying"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"gosongying"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"gosongying"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"gosongying"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"gosongying"},"content":" * A chatbot called Harper.","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"gosongying"},"content":" *","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"gosongying"},"content":" * @author gosongying","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"gosongying"},"content":" * @version CS2103T AY23/24 Sem 2","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"gosongying"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"gosongying"},"content":"public class Harper {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"gosongying"},"content":"    private static final String LINE \u003d \"_________________________________________________________\";","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"gosongying"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"gosongying"},"content":"    private static final String PROJECT_DIR \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"gosongying"},"content":"    private static final String FILE_PATH \u003d PROJECT_DIR + File.separator + \"data\" + File.separator + \"harper.txt\";","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"gosongying"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy H:mm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"gosongying"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER_2 \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy H:mm\");","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"gosongying"},"content":"     * Greets the user.","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"gosongying"},"content":"    public void greet() {","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"gosongying"},"content":"        Harper.print(\"Hello! I am Harper.\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"gosongying"},"content":"                + \"What can I do for you?\");","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"gosongying"},"content":"     * Exit the chat.","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"gosongying"},"content":"    public void exit() {","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"gosongying"},"content":"        Harper.print(\"Hope to see you again soon! Peace out!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":50,"author":{"gitId":"gosongying"},"content":"     * Lists out the tasks in the list.","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"gosongying"},"content":"    public void listTasks() {","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"gosongying"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"gosongying"},"content":"        if (this.tasks.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"gosongying"},"content":"            System.out.println(\"Nothing is in your list!\");","lastModifiedDate":"2024-01-25"},{"lineNumber":56,"author":{"gitId":"gosongying"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"gosongying"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":58,"author":{"gitId":"gosongying"},"content":"            for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"gosongying"},"content":"                System.out.println(i + 1 + \". \" + this.tasks.get(i).toString());","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"gosongying"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":61,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"gosongying"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":65,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":66,"author":{"gitId":"gosongying"},"content":"     * Creates a todo task with the description and adds it into the list.","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"gosongying"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"gosongying"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":70,"author":{"gitId":"gosongying"},"content":"    public void addToDo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"gosongying"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"gosongying"},"content":"            Task newToDo \u003d new ToDo(description, false);","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"gosongying"},"content":"            Harper.appendToFile(Harper.FILE_PATH, newToDo);","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"gosongying"},"content":"            this.tasks.add(newToDo);","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"gosongying"},"content":"            int listSize \u003d this.tasks.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"gosongying"},"content":"            Harper.print(\"Got it. I\u0027ve added this task into your list:\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"gosongying"},"content":"                    + newToDo.toString() + \"\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":78,"author":{"gitId":"gosongying"},"content":"                    + \"Now you have \" + listSize + (listSize \u003e 1 ? \" tasks \" : \" task \")","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"gosongying"},"content":"                    + \"in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"gosongying"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"gosongying"},"content":"            Harper.createFolderAndFile(\"data\", \"harper.txt\");","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"gosongying"},"content":"            this.addToDo(description);","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":86,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":87,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"gosongying"},"content":"     * Creates a deadline task with the description and deadline and adds it into the list.","lastModifiedDate":"2024-01-25"},{"lineNumber":89,"author":{"gitId":"gosongying"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":90,"author":{"gitId":"gosongying"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":91,"author":{"gitId":"gosongying"},"content":"     * @param by Deadline of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":93,"author":{"gitId":"gosongying"},"content":"    public void addDeadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"gosongying"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"gosongying"},"content":"            Task newDeadline \u003d new Deadline(description, false, by);","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"gosongying"},"content":"            Harper.appendToFile(Harper.FILE_PATH, newDeadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"gosongying"},"content":"            this.tasks.add(newDeadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"gosongying"},"content":"            int listSize \u003d this.tasks.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"gosongying"},"content":"            Harper.print(\"Got it. I\u0027ve added this task into your list:\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"gosongying"},"content":"                    + newDeadline.toString() + \"\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":101,"author":{"gitId":"gosongying"},"content":"                    + \"Now you have \" + listSize + (listSize \u003e 1 ? \" tasks \" : \" task \")","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"gosongying"},"content":"                    + \"in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"gosongying"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"gosongying"},"content":"            Harper.createFolderAndFile(\"data\", \"harper.txt\");","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"gosongying"},"content":"            this.addDeadline(description, by);","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":109,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":110,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":111,"author":{"gitId":"gosongying"},"content":"     * Creates an event task with description, start time and end time, and adds it into the list.","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"gosongying"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":113,"author":{"gitId":"gosongying"},"content":"     * @param description Description of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":114,"author":{"gitId":"gosongying"},"content":"     * @param start Start time of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":115,"author":{"gitId":"gosongying"},"content":"     * @param end End time of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":116,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":117,"author":{"gitId":"gosongying"},"content":"    public void addEvent(String description, LocalDateTime start, LocalDateTime end) {","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"gosongying"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"gosongying"},"content":"            Task newEvent \u003d new Event(description, false, start, end);","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"gosongying"},"content":"            Harper.appendToFile(Harper.FILE_PATH, newEvent);","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"gosongying"},"content":"            this.tasks.add(newEvent);","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"gosongying"},"content":"            int listSize \u003d this.tasks.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"gosongying"},"content":"            Harper.print(\"Got it. I\u0027ve added this task into your list:\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"gosongying"},"content":"                    + newEvent.toString() + \"\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":125,"author":{"gitId":"gosongying"},"content":"                    + \"Now you have \" + listSize + (listSize \u003e 1 ? \" tasks \" : \" task \")","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"gosongying"},"content":"                    + \"in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"gosongying"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"gosongying"},"content":"            Harper.createFolderAndFile(\"data\", \"harper.txt\");","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"gosongying"},"content":"            this.addEvent(description, start, end);","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":132,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":133,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":134,"author":{"gitId":"gosongying"},"content":"     * Marks the task as done or not done based on the command.","lastModifiedDate":"2024-01-25"},{"lineNumber":135,"author":{"gitId":"gosongying"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":136,"author":{"gitId":"gosongying"},"content":"     * @param command Marks or unmarks the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":137,"author":{"gitId":"gosongying"},"content":"     * @param taskIndex Index of the task in the list.","lastModifiedDate":"2024-01-25"},{"lineNumber":138,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":139,"author":{"gitId":"gosongying"},"content":"    public void markOrUnmark(String command, int taskIndex) {","lastModifiedDate":"2024-01-25"},{"lineNumber":140,"author":{"gitId":"gosongying"},"content":"        Task taskToMark \u003d this.tasks.get(taskIndex);","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"gosongying"},"content":"        boolean isDone \u003d taskToMark.isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"gosongying"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"gosongying"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"gosongying"},"content":"            if (command.equals(\"mark\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":145,"author":{"gitId":"gosongying"},"content":"                taskToMark.markAsDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":146,"author":{"gitId":"gosongying"},"content":"                this.saveToHardDisk(Harper.FILE_PATH);","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"gosongying"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":148,"author":{"gitId":"gosongying"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":149,"author":{"gitId":"gosongying"},"content":"            if (command.equals(\"unmark\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":150,"author":{"gitId":"gosongying"},"content":"                taskToMark.markAsNotDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":151,"author":{"gitId":"gosongying"},"content":"                this.saveToHardDisk(Harper.FILE_PATH);","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"gosongying"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":153,"author":{"gitId":"gosongying"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":154,"author":{"gitId":"gosongying"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":155,"author":{"gitId":"gosongying"},"content":"            if (command.equals(\"mark\") \u0026\u0026 !isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"gosongying"},"content":"                taskToMark.markAsNotDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"gosongying"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"gosongying"},"content":"            if (command.equals(\"unmark\") \u0026\u0026 isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":159,"author":{"gitId":"gosongying"},"content":"                taskToMark.markAsDone();","lastModifiedDate":"2024-01-31"},{"lineNumber":160,"author":{"gitId":"gosongying"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":161,"author":{"gitId":"gosongying"},"content":"            System.out.println(\"Some errors have caused your task cannot be marked!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":162,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":163,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":164,"author":{"gitId":"gosongying"},"content":"        System.out.println(taskToMark.toString() + \"\\n\" + LINE);","lastModifiedDate":"2024-01-31"},{"lineNumber":165,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":166,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":167,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":168,"author":{"gitId":"gosongying"},"content":"     * Informs the user that the command entered is invalid.","lastModifiedDate":"2024-01-25"},{"lineNumber":169,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":170,"author":{"gitId":"gosongying"},"content":"    public void handleInvalidInput() {","lastModifiedDate":"2024-01-25"},{"lineNumber":171,"author":{"gitId":"gosongying"},"content":"        Harper.print(\"Please enter an valid input!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":172,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":173,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":174,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":175,"author":{"gitId":"gosongying"},"content":"     * Informs the user that the index entered is invalid.","lastModifiedDate":"2024-01-25"},{"lineNumber":176,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":177,"author":{"gitId":"gosongying"},"content":"    public void handleIndexOutOfBounds() {","lastModifiedDate":"2024-01-25"},{"lineNumber":178,"author":{"gitId":"gosongying"},"content":"        Harper.print(\"Index is out of bounds. Please provide a valid task index!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":179,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":180,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":181,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":182,"author":{"gitId":"gosongying"},"content":"     * Handles the logic when todo is entered.","lastModifiedDate":"2024-01-25"},{"lineNumber":183,"author":{"gitId":"gosongying"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":184,"author":{"gitId":"gosongying"},"content":"     * @param input The input of user.","lastModifiedDate":"2024-01-25"},{"lineNumber":185,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":186,"author":{"gitId":"gosongying"},"content":"    public void handleToDo(String input) {","lastModifiedDate":"2024-01-25"},{"lineNumber":187,"author":{"gitId":"gosongying"},"content":"        String taskDescription \u003d input.substring(\"todo\".length()).trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":188,"author":{"gitId":"gosongying"},"content":"        this.addToDo(taskDescription);","lastModifiedDate":"2024-01-25"},{"lineNumber":189,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":190,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":191,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":192,"author":{"gitId":"gosongying"},"content":"     * Handles the logic when deadline is entered.","lastModifiedDate":"2024-01-25"},{"lineNumber":193,"author":{"gitId":"gosongying"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":194,"author":{"gitId":"gosongying"},"content":"     * @param input The input of user.","lastModifiedDate":"2024-01-25"},{"lineNumber":195,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":196,"author":{"gitId":"gosongying"},"content":"    public void handleDeadline(String input) {","lastModifiedDate":"2024-01-25"},{"lineNumber":197,"author":{"gitId":"gosongying"},"content":"        String taskDescriptionAndDeadline \u003d input.substring(\"deadline\".length()).trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":198,"author":{"gitId":"gosongying"},"content":"        String[] parts \u003d taskDescriptionAndDeadline.split(\"/by\", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":199,"author":{"gitId":"gosongying"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":200,"author":{"gitId":"gosongying"},"content":"            throw new HarperInvalidDeadlineException();","lastModifiedDate":"2024-01-25"},{"lineNumber":201,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":202,"author":{"gitId":"gosongying"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":203,"author":{"gitId":"gosongying"},"content":"        String deadline \u003d parts[1].trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":204,"author":{"gitId":"gosongying"},"content":"        if (description.isEmpty() || deadline.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":205,"author":{"gitId":"gosongying"},"content":"            throw new HarperInvalidDeadlineException();","lastModifiedDate":"2024-01-25"},{"lineNumber":206,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":207,"author":{"gitId":"gosongying"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":208,"author":{"gitId":"gosongying"},"content":"            LocalDateTime deadlineFormatted \u003d LocalDateTime.parse(deadline, DATE_TIME_FORMATTER);","lastModifiedDate":"2024-01-31"},{"lineNumber":209,"author":{"gitId":"gosongying"},"content":"            this.addDeadline(description, deadlineFormatted);","lastModifiedDate":"2024-01-31"},{"lineNumber":210,"author":{"gitId":"gosongying"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":211,"author":{"gitId":"gosongying"},"content":"            this.handleInvalidDateTime();","lastModifiedDate":"2024-01-31"},{"lineNumber":212,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":213,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":214,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":215,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":216,"author":{"gitId":"gosongying"},"content":"     * Handles the logic when event is entered.","lastModifiedDate":"2024-01-25"},{"lineNumber":217,"author":{"gitId":"gosongying"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":218,"author":{"gitId":"gosongying"},"content":"     * @param input The input of user.","lastModifiedDate":"2024-01-25"},{"lineNumber":219,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":220,"author":{"gitId":"gosongying"},"content":"    public void handleEvent(String input) {","lastModifiedDate":"2024-01-25"},{"lineNumber":221,"author":{"gitId":"gosongying"},"content":"        String taskDescriptionAndStartEnd \u003d input.substring(\"event\".length()).trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":222,"author":{"gitId":"gosongying"},"content":"        String[] parts \u003d taskDescriptionAndStartEnd.split(\"/from\", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":223,"author":{"gitId":"gosongying"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2024-01-25"},{"lineNumber":224,"author":{"gitId":"gosongying"},"content":"            throw new HarperInvalidEventException();","lastModifiedDate":"2024-01-25"},{"lineNumber":225,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":226,"author":{"gitId":"gosongying"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":227,"author":{"gitId":"gosongying"},"content":"        String[] startAndEnd \u003d parts[1].trim().split(\"/to\", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":228,"author":{"gitId":"gosongying"},"content":"        if (startAndEnd.length !\u003d 2 || description.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":229,"author":{"gitId":"gosongying"},"content":"            throw new HarperInvalidEventException();","lastModifiedDate":"2024-01-25"},{"lineNumber":230,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":231,"author":{"gitId":"gosongying"},"content":"        String start \u003d startAndEnd[0].trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":232,"author":{"gitId":"gosongying"},"content":"        String end \u003d startAndEnd[1].trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":233,"author":{"gitId":"gosongying"},"content":"        if (start.isEmpty() || end.isEmpty()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":234,"author":{"gitId":"gosongying"},"content":"            throw new HarperInvalidEventException();","lastModifiedDate":"2024-01-25"},{"lineNumber":235,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":236,"author":{"gitId":"gosongying"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":237,"author":{"gitId":"gosongying"},"content":"            LocalDateTime startFormatted \u003d LocalDateTime.parse(start, DATE_TIME_FORMATTER);","lastModifiedDate":"2024-01-31"},{"lineNumber":238,"author":{"gitId":"gosongying"},"content":"            LocalDateTime endFormatted \u003d LocalDateTime.parse(end, DATE_TIME_FORMATTER);","lastModifiedDate":"2024-01-31"},{"lineNumber":239,"author":{"gitId":"gosongying"},"content":"            this.addEvent(description, startFormatted, endFormatted);","lastModifiedDate":"2024-01-31"},{"lineNumber":240,"author":{"gitId":"gosongying"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":241,"author":{"gitId":"gosongying"},"content":"            this.handleInvalidDateTime();","lastModifiedDate":"2024-01-31"},{"lineNumber":242,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":243,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":244,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":245,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":246,"author":{"gitId":"gosongying"},"content":"     * Informs user the date time should follow the format.","lastModifiedDate":"2024-01-31"},{"lineNumber":247,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":248,"author":{"gitId":"gosongying"},"content":"    public void handleInvalidDateTime() {","lastModifiedDate":"2024-01-31"},{"lineNumber":249,"author":{"gitId":"gosongying"},"content":"        Harper.print(\"Date time should follow this format:\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":250,"author":{"gitId":"gosongying"},"content":"                + \"d/M/yyyy HH:mm (e.g., 15/9/2024 16:25)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":251,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":252,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":253,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":254,"author":{"gitId":"gosongying"},"content":"     * Prints out text bounded by line.","lastModifiedDate":"2024-01-31"},{"lineNumber":255,"author":{"gitId":"gosongying"},"content":"     * @param text Text to be printed","lastModifiedDate":"2024-01-31"},{"lineNumber":256,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":257,"author":{"gitId":"gosongying"},"content":"    public static void print(String text) {","lastModifiedDate":"2024-01-31"},{"lineNumber":258,"author":{"gitId":"gosongying"},"content":"        System.out.println(LINE + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":259,"author":{"gitId":"gosongying"},"content":"                + text + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":260,"author":{"gitId":"gosongying"},"content":"                + LINE);","lastModifiedDate":"2024-01-31"},{"lineNumber":261,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":262,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":263,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":264,"author":{"gitId":"gosongying"},"content":"     * Handles the logic when mark or unmark is entered.","lastModifiedDate":"2024-01-25"},{"lineNumber":265,"author":{"gitId":"gosongying"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":266,"author":{"gitId":"gosongying"},"content":"     * @param input Input of user.","lastModifiedDate":"2024-01-31"},{"lineNumber":267,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":268,"author":{"gitId":"gosongying"},"content":"    public void handleMarkOrUnmark(String input) {","lastModifiedDate":"2024-01-25"},{"lineNumber":269,"author":{"gitId":"gosongying"},"content":"        String[] commands \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-25"},{"lineNumber":270,"author":{"gitId":"gosongying"},"content":"        int taskIndex \u003d Integer.parseInt(commands[1].trim()) - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":271,"author":{"gitId":"gosongying"},"content":"        this.markOrUnmark(commands[0], taskIndex);","lastModifiedDate":"2024-01-25"},{"lineNumber":272,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":273,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":274,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":275,"author":{"gitId":"gosongying"},"content":"     * Preprocesses the command before deleting the task.","lastModifiedDate":"2024-01-31"},{"lineNumber":276,"author":{"gitId":"gosongying"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":277,"author":{"gitId":"gosongying"},"content":"     * @param input Input of user.","lastModifiedDate":"2024-01-31"},{"lineNumber":278,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":279,"author":{"gitId":"gosongying"},"content":"    public void handleDeleteTask(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":280,"author":{"gitId":"gosongying"},"content":"        String[] commands \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-26"},{"lineNumber":281,"author":{"gitId":"gosongying"},"content":"        int taskIndex \u003d Integer.parseInt(commands[1].trim()) - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":282,"author":{"gitId":"gosongying"},"content":"        this.deleteTask(taskIndex);","lastModifiedDate":"2024-01-31"},{"lineNumber":283,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":284,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":285,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":286,"author":{"gitId":"gosongying"},"content":"     * Removes the task with the index specified from the list.","lastModifiedDate":"2024-01-31"},{"lineNumber":287,"author":{"gitId":"gosongying"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":288,"author":{"gitId":"gosongying"},"content":"     * @param taskIndex Index of the task in the list.","lastModifiedDate":"2024-01-31"},{"lineNumber":289,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":290,"author":{"gitId":"gosongying"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2024-01-31"},{"lineNumber":291,"author":{"gitId":"gosongying"},"content":"        Task task \u003d this.tasks.remove(taskIndex);","lastModifiedDate":"2024-01-31"},{"lineNumber":292,"author":{"gitId":"gosongying"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":293,"author":{"gitId":"gosongying"},"content":"            this.saveToHardDisk(Harper.FILE_PATH);","lastModifiedDate":"2024-01-31"},{"lineNumber":294,"author":{"gitId":"gosongying"},"content":"            int listSize \u003d this.tasks.size();","lastModifiedDate":"2024-01-31"},{"lineNumber":295,"author":{"gitId":"gosongying"},"content":"            Harper.print(\"Ok! I\u0027ve removed this task for you:\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":296,"author":{"gitId":"gosongying"},"content":"                    + task.toString() + \"\\n\"","lastModifiedDate":"2024-01-26"},{"lineNumber":297,"author":{"gitId":"gosongying"},"content":"                    + \"Now you have \" + listSize + (listSize \u003e 1 ? \" tasks \" : \" task \")","lastModifiedDate":"2024-01-31"},{"lineNumber":298,"author":{"gitId":"gosongying"},"content":"                    + \"in the list.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":299,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":300,"author":{"gitId":"gosongying"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":301,"author":{"gitId":"gosongying"},"content":"            this.tasks.add(taskIndex, task);","lastModifiedDate":"2024-01-31"},{"lineNumber":302,"author":{"gitId":"gosongying"},"content":"            Harper.print(\"Some errors have caused your task cannot be deleted!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":303,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":304,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":305,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":306,"author":{"gitId":"gosongying"},"content":"    private static void createFolderAndFile(String folderName, String fileName) {","lastModifiedDate":"2024-01-31"},{"lineNumber":307,"author":{"gitId":"gosongying"},"content":"        File folder \u003d new File(PROJECT_DIR, folderName);","lastModifiedDate":"2024-01-31"},{"lineNumber":308,"author":{"gitId":"gosongying"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":309,"author":{"gitId":"gosongying"},"content":"            if (folder.mkdir()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":310,"author":{"gitId":"gosongying"},"content":"                File file \u003d new File(folder, fileName);","lastModifiedDate":"2024-01-31"},{"lineNumber":311,"author":{"gitId":"gosongying"},"content":"                if (!file.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":312,"author":{"gitId":"gosongying"},"content":"                    try {","lastModifiedDate":"2024-01-31"},{"lineNumber":313,"author":{"gitId":"gosongying"},"content":"                        file.createNewFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":314,"author":{"gitId":"gosongying"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":315,"author":{"gitId":"gosongying"},"content":"                        Harper.print(\"The file harper.txt cannot be created.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":316,"author":{"gitId":"gosongying"},"content":"                    }","lastModifiedDate":"2024-01-31"},{"lineNumber":317,"author":{"gitId":"gosongying"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":318,"author":{"gitId":"gosongying"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":319,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":320,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":321,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":322,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":323,"author":{"gitId":"gosongying"},"content":"     * Adds data to the end of the file specified.","lastModifiedDate":"2024-01-31"},{"lineNumber":324,"author":{"gitId":"gosongying"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":325,"author":{"gitId":"gosongying"},"content":"     * @param filePath Relative path of the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":326,"author":{"gitId":"gosongying"},"content":"     * @param task Task to be added into the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":327,"author":{"gitId":"gosongying"},"content":"     * @throws IOException When the file does not exist.","lastModifiedDate":"2024-01-31"},{"lineNumber":328,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":329,"author":{"gitId":"gosongying"},"content":"    private static void appendToFile(String filePath, Task task) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":330,"author":{"gitId":"gosongying"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2024-01-31"},{"lineNumber":331,"author":{"gitId":"gosongying"},"content":"        fw.write(task.toString() + System.lineSeparator());","lastModifiedDate":"2024-01-31"},{"lineNumber":332,"author":{"gitId":"gosongying"},"content":"        fw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":333,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":334,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":335,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":336,"author":{"gitId":"gosongying"},"content":"     * Loads data from hard disk.","lastModifiedDate":"2024-01-31"},{"lineNumber":337,"author":{"gitId":"gosongying"},"content":"     * Transfers data into Task object and stores into the list.","lastModifiedDate":"2024-01-31"},{"lineNumber":338,"author":{"gitId":"gosongying"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":339,"author":{"gitId":"gosongying"},"content":"     * @param filePath Relative path of the file.","lastModifiedDate":"2024-01-31"},{"lineNumber":340,"author":{"gitId":"gosongying"},"content":"     * @return Success of loading.","lastModifiedDate":"2024-01-31"},{"lineNumber":341,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":342,"author":{"gitId":"gosongying"},"content":"    private boolean loadFromHardDisk(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":343,"author":{"gitId":"gosongying"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":344,"author":{"gitId":"gosongying"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":345,"author":{"gitId":"gosongying"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-01-31"},{"lineNumber":346,"author":{"gitId":"gosongying"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":347,"author":{"gitId":"gosongying"},"content":"                String[] taskString \u003d scanner.nextLine().split(\" \\\\| \");","lastModifiedDate":"2024-01-31"},{"lineNumber":348,"author":{"gitId":"gosongying"},"content":"                if (taskString[0].equals(\"T\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":349,"author":{"gitId":"gosongying"},"content":"                    boolean isDone \u003d taskString[1].equals(\"1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":350,"author":{"gitId":"gosongying"},"content":"                    Task task \u003d new ToDo(taskString[2], isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":351,"author":{"gitId":"gosongying"},"content":"                    this.tasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":352,"author":{"gitId":"gosongying"},"content":"                } else if (taskString[0].equals(\"D\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":353,"author":{"gitId":"gosongying"},"content":"                    boolean isDone \u003d taskString[1].equals(\"1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":354,"author":{"gitId":"gosongying"},"content":"                    String by \u003d taskString[3];","lastModifiedDate":"2024-01-31"},{"lineNumber":355,"author":{"gitId":"gosongying"},"content":"                    LocalDateTime byFormatted \u003d LocalDateTime.parse(by, DATE_TIME_FORMATTER_2);","lastModifiedDate":"2024-01-31"},{"lineNumber":356,"author":{"gitId":"gosongying"},"content":"                    Task task \u003d new Deadline(taskString[2], isDone, byFormatted);","lastModifiedDate":"2024-01-31"},{"lineNumber":357,"author":{"gitId":"gosongying"},"content":"                    this.tasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":358,"author":{"gitId":"gosongying"},"content":"                } else if (taskString[0].equals(\"E\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":359,"author":{"gitId":"gosongying"},"content":"                    boolean isDone \u003d taskString[1].equals(\"1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":360,"author":{"gitId":"gosongying"},"content":"                    String[] duration \u003d taskString[3].split(\" - \");","lastModifiedDate":"2024-01-31"},{"lineNumber":361,"author":{"gitId":"gosongying"},"content":"                    LocalDateTime start \u003d LocalDateTime.parse(duration[0], DATE_TIME_FORMATTER_2);","lastModifiedDate":"2024-01-31"},{"lineNumber":362,"author":{"gitId":"gosongying"},"content":"                    LocalDateTime end \u003d LocalDateTime.parse(duration[1], DATE_TIME_FORMATTER_2);","lastModifiedDate":"2024-01-31"},{"lineNumber":363,"author":{"gitId":"gosongying"},"content":"                    Task task \u003d new Event(taskString[2], isDone, start, end);","lastModifiedDate":"2024-01-31"},{"lineNumber":364,"author":{"gitId":"gosongying"},"content":"                    this.tasks.add(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":365,"author":{"gitId":"gosongying"},"content":"                } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":366,"author":{"gitId":"gosongying"},"content":"                    throw new HarperInvalidFileContentFormatException();","lastModifiedDate":"2024-01-31"},{"lineNumber":367,"author":{"gitId":"gosongying"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":368,"author":{"gitId":"gosongying"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":369,"author":{"gitId":"gosongying"},"content":"            return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":370,"author":{"gitId":"gosongying"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":371,"author":{"gitId":"gosongying"},"content":"            Harper.print(\"Please make sure the content of the file harper.txt follows the expected format:\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":372,"author":{"gitId":"gosongying"},"content":"                    + \"ToDo: \\\"T | [0 or 1] | [description]\\\"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":373,"author":{"gitId":"gosongying"},"content":"                    + \"Deadline: \\\"D | [0 or 1] | [description] | [by]\\\"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":374,"author":{"gitId":"gosongying"},"content":"                    + \"Event: \\\"E | [0 or 1] | [description] | [start] - [end]\\\"\");","lastModifiedDate":"2024-01-31"},{"lineNumber":375,"author":{"gitId":"gosongying"},"content":"            this.tasks.clear();","lastModifiedDate":"2024-01-31"},{"lineNumber":376,"author":{"gitId":"gosongying"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":377,"author":{"gitId":"gosongying"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":378,"author":{"gitId":"gosongying"},"content":"            Harper.print(\"Please make sure data in the file harper.txt follow this format:\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":379,"author":{"gitId":"gosongying"},"content":"                    + \"d MMM yyyy HH:mm (e.g., 15 Oct 2024 16:25)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":380,"author":{"gitId":"gosongying"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":381,"author":{"gitId":"gosongying"},"content":"        } catch (HarperInvalidFileContentFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":382,"author":{"gitId":"gosongying"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":383,"author":{"gitId":"gosongying"},"content":"            this.tasks.clear();","lastModifiedDate":"2024-01-31"},{"lineNumber":384,"author":{"gitId":"gosongying"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":385,"author":{"gitId":"gosongying"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":386,"author":{"gitId":"gosongying"},"content":"            Harper.createFolderAndFile(\"data\", \"harper.txt\");","lastModifiedDate":"2024-01-31"},{"lineNumber":387,"author":{"gitId":"gosongying"},"content":"            return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":388,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":389,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":390,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":391,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":392,"author":{"gitId":"gosongying"},"content":"     * Saves all the tasks in the list into the hard disk.","lastModifiedDate":"2024-01-31"},{"lineNumber":393,"author":{"gitId":"gosongying"},"content":"     *","lastModifiedDate":"2024-01-31"},{"lineNumber":394,"author":{"gitId":"gosongying"},"content":"     * @param filePath File path to be stored.","lastModifiedDate":"2024-01-31"},{"lineNumber":395,"author":{"gitId":"gosongying"},"content":"     * @throws IOException When the file cannot be found.","lastModifiedDate":"2024-01-31"},{"lineNumber":396,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":397,"author":{"gitId":"gosongying"},"content":"    private void saveToHardDisk(String filePath) throws IOException {","lastModifiedDate":"2024-01-31"},{"lineNumber":398,"author":{"gitId":"gosongying"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":399,"author":{"gitId":"gosongying"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":400,"author":{"gitId":"gosongying"},"content":"            fw.write(task.toString() + System.lineSeparator());","lastModifiedDate":"2024-01-31"},{"lineNumber":401,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":402,"author":{"gitId":"gosongying"},"content":"        fw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":403,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":404,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":405,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":406,"author":{"gitId":"gosongying"},"content":"     * Starts the chat, reads user\u0027s input and respond to user.","lastModifiedDate":"2024-01-25"},{"lineNumber":407,"author":{"gitId":"gosongying"},"content":"     * Saves user\u0027s input and displays back when requested.","lastModifiedDate":"2024-01-25"},{"lineNumber":408,"author":{"gitId":"gosongying"},"content":"     * Loads data from hard disk.","lastModifiedDate":"2024-01-31"},{"lineNumber":409,"author":{"gitId":"gosongying"},"content":"     * Marks tasks as done or not done.","lastModifiedDate":"2024-01-25"},{"lineNumber":410,"author":{"gitId":"gosongying"},"content":"     * Add different types of tasks into the list.","lastModifiedDate":"2024-01-25"},{"lineNumber":411,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":412,"author":{"gitId":"gosongying"},"content":"    public void startChat() {","lastModifiedDate":"2024-01-25"},{"lineNumber":413,"author":{"gitId":"gosongying"},"content":"        this.greet();","lastModifiedDate":"2024-01-25"},{"lineNumber":414,"author":{"gitId":"gosongying"},"content":"        boolean loadSuccess \u003d this.loadFromHardDisk(Harper.FILE_PATH);","lastModifiedDate":"2024-01-31"},{"lineNumber":415,"author":{"gitId":"gosongying"},"content":"        if (!loadSuccess) {","lastModifiedDate":"2024-01-31"},{"lineNumber":416,"author":{"gitId":"gosongying"},"content":"            this.exit();","lastModifiedDate":"2024-01-31"},{"lineNumber":417,"author":{"gitId":"gosongying"},"content":"            return;","lastModifiedDate":"2024-01-31"},{"lineNumber":418,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":419,"author":{"gitId":"gosongying"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":420,"author":{"gitId":"gosongying"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2024-01-25"},{"lineNumber":421,"author":{"gitId":"gosongying"},"content":"            String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2024-01-25"},{"lineNumber":422,"author":{"gitId":"gosongying"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":423,"author":{"gitId":"gosongying"},"content":"                this.exit();","lastModifiedDate":"2024-01-25"},{"lineNumber":424,"author":{"gitId":"gosongying"},"content":"                scanner.close();","lastModifiedDate":"2024-01-25"},{"lineNumber":425,"author":{"gitId":"gosongying"},"content":"                break;","lastModifiedDate":"2024-01-25"},{"lineNumber":426,"author":{"gitId":"gosongying"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":427,"author":{"gitId":"gosongying"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":428,"author":{"gitId":"gosongying"},"content":"                this.listTasks();","lastModifiedDate":"2024-01-25"},{"lineNumber":429,"author":{"gitId":"gosongying"},"content":"                continue;","lastModifiedDate":"2024-01-25"},{"lineNumber":430,"author":{"gitId":"gosongying"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":431,"author":{"gitId":"gosongying"},"content":"            try {","lastModifiedDate":"2024-01-25"},{"lineNumber":432,"author":{"gitId":"gosongying"},"content":"                if (input.startsWith(\"todo \")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":433,"author":{"gitId":"gosongying"},"content":"                    this.handleToDo(input);","lastModifiedDate":"2024-01-25"},{"lineNumber":434,"author":{"gitId":"gosongying"},"content":"                    continue;","lastModifiedDate":"2024-01-25"},{"lineNumber":435,"author":{"gitId":"gosongying"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":436,"author":{"gitId":"gosongying"},"content":"                if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":437,"author":{"gitId":"gosongying"},"content":"                    this.handleDeadline(input);","lastModifiedDate":"2024-01-25"},{"lineNumber":438,"author":{"gitId":"gosongying"},"content":"                    continue;","lastModifiedDate":"2024-01-25"},{"lineNumber":439,"author":{"gitId":"gosongying"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":440,"author":{"gitId":"gosongying"},"content":"                if (input.startsWith(\"event \")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":441,"author":{"gitId":"gosongying"},"content":"                    this.handleEvent(input);","lastModifiedDate":"2024-01-25"},{"lineNumber":442,"author":{"gitId":"gosongying"},"content":"                    continue;","lastModifiedDate":"2024-01-25"},{"lineNumber":443,"author":{"gitId":"gosongying"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":444,"author":{"gitId":"gosongying"},"content":"                if (input.startsWith(\"mark \") || input.startsWith(\"unmark \")) {","lastModifiedDate":"2024-01-25"},{"lineNumber":445,"author":{"gitId":"gosongying"},"content":"                    this.handleMarkOrUnmark(input);","lastModifiedDate":"2024-01-25"},{"lineNumber":446,"author":{"gitId":"gosongying"},"content":"                    continue;","lastModifiedDate":"2024-01-25"},{"lineNumber":447,"author":{"gitId":"gosongying"},"content":"                }","lastModifiedDate":"2024-01-25"},{"lineNumber":448,"author":{"gitId":"gosongying"},"content":"                if (input.startsWith(\"delete \")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":449,"author":{"gitId":"gosongying"},"content":"                    this.handleDeleteTask(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":450,"author":{"gitId":"gosongying"},"content":"                    continue;","lastModifiedDate":"2024-01-26"},{"lineNumber":451,"author":{"gitId":"gosongying"},"content":"                }","lastModifiedDate":"2024-01-26"},{"lineNumber":452,"author":{"gitId":"gosongying"},"content":"                throw new HarperInvalidInputException();","lastModifiedDate":"2024-01-25"},{"lineNumber":453,"author":{"gitId":"gosongying"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":454,"author":{"gitId":"gosongying"},"content":"                this.handleInvalidInput();","lastModifiedDate":"2024-01-25"},{"lineNumber":455,"author":{"gitId":"gosongying"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":456,"author":{"gitId":"gosongying"},"content":"                this.handleIndexOutOfBounds();","lastModifiedDate":"2024-01-25"},{"lineNumber":457,"author":{"gitId":"gosongying"},"content":"            } catch (HarperException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":458,"author":{"gitId":"gosongying"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":459,"author":{"gitId":"gosongying"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":460,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":461,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":462,"author":{"gitId":"gosongying"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"gosongying":462}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gosongying"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":" * Represents a task with a description and a status indicating whether it is done or not.","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"gosongying"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"gosongying"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"gosongying"},"content":"     * Create a task with description and the task is marked as not done initially.","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"gosongying"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"gosongying"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"gosongying"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"gosongying"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"gosongying"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"gosongying"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"gosongying"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"gosongying"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"gosongying"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"gosongying"},"content":"     * Gets the current status of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"gosongying"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"gosongying"},"content":"     * @return The status icon of the task followed by its description.","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"gosongying"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"gosongying"},"content":"        String statusSymbol \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"gosongying"},"content":"        return \" | \" + statusSymbol + \" | \" + this.description;","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"gosongying"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"gosongying":41}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gosongying"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"     * Creates a ToDo task with description.","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"gosongying"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"gosongying"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"gosongying"},"content":"        super(description, isDone);","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"gosongying"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"gosongying"},"content":"        return \"T\" + super.toString();","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"gosongying"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"gosongying":15}},{"path":"src/main/java/exceptions/HarperException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gosongying"},"content":"package exceptions;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"public class HarperException extends RuntimeException {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"    public HarperException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"gosongying"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"gosongying"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"gosongying":7}},{"path":"src/main/java/exceptions/HarperInvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gosongying"},"content":"package exceptions;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"public class HarperInvalidDeadlineException extends HarperException {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"    public HarperInvalidDeadlineException() {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"gosongying"},"content":"        super(\"_________________________________________________________\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"gosongying"},"content":"                + \"Please follow the format: \\\"deadline [description] /by [deadline]\\\"\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"gosongying"},"content":"                + \"to add a deadline task into your list.\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"gosongying"},"content":"                + \"All fields are required.\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"gosongying"},"content":"                + \"Only the whitespace after \\\"deadline\\\" is required.\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"gosongying"},"content":"                + \"_________________________________________________________\");","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"gosongying"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"gosongying":12}},{"path":"src/main/java/exceptions/HarperInvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gosongying"},"content":"package exceptions;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"public class HarperInvalidEventException extends HarperException {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"    public HarperInvalidEventException() {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"gosongying"},"content":"        super(\"_________________________________________________________\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"gosongying"},"content":"                + \"Please follow the format: \\\"event [description] /from [start time] /to [end time]\\\"\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"gosongying"},"content":"                + \"to add a event task into your list.\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"gosongying"},"content":"                + \"All fields are required!\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"gosongying"},"content":"                + \"Only the whitespace after \\\"event\\\" is required\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"gosongying"},"content":"                + \"_________________________________________________________\");","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"gosongying"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"gosongying":12}},{"path":"src/main/java/exceptions/HarperInvalidFileContentFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gosongying"},"content":"package exceptions;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"public class HarperInvalidFileContentFormatException extends HarperException {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"    public HarperInvalidFileContentFormatException() {","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"gosongying"},"content":"        super(\"_________________________________________________________\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"gosongying"},"content":"                + \"Please make sure the content of the file harper.txt follows the expected format:\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"gosongying"},"content":"                + \"ToDo: \\\"T | [0 or 1] | [description]\\\"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"gosongying"},"content":"                + \"Deadline: \\\"D | [0 or 1] | [description] | [by]\\\"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"gosongying"},"content":"                + \"Event: \\\"E | [0 or 1] | [description] | [start] - [end]\\\"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"gosongying"},"content":"                + \"_________________________________________________________\");","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"gosongying"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"gosongying":13}},{"path":"src/main/java/exceptions/HarperInvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gosongying"},"content":"package exceptions;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"public class HarperInvalidInputException extends HarperException {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"    public HarperInvalidInputException() {","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"gosongying"},"content":"        super(\"_________________________________________________________\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"gosongying"},"content":"                + \"What do you mean? :-(\\n\"","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"gosongying"},"content":"                + \"_________________________________________________________\");","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"gosongying"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"gosongying":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gosongying"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"todo read book","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"deadline return book/bySunday","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"event math class/from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"gosongying"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"gosongying"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"gosongying"},"content":"mark 3","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"gosongying"},"content":"unmark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"gosongying"},"content":"delete 2","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"gosongying"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"gosongying"},"content":"mark 5","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"gosongying"},"content":"todo","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"gosongying"},"content":"deadline","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"gosongying"},"content":"event","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"gosongying"},"content":"deadline math assignment","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"gosongying"},"content":"event /from a /to b","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"gosongying"},"content":"mark1","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"lala","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"gosongying"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"gosongying":19}}]
