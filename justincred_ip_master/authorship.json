[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"# Jux project template","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"justincred"},"content":"3. After that, locate the `src/main/java/Jux.java` file, right-click it, and choose `Run Jux.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"justincred":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"//    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":"//checkstyle {","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"//    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"justincred"},"content":"//}","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":17,"author":{"gitId":"justincred"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"justincred"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"justincred"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"justincred"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"justincred"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"justincred"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"justincred"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"justincred"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"justincred"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"justincred"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"justincred"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"justincred"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"justincred"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"justincred"},"content":"    mainClass.set(\"jux.Launcher\")","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"justincred"},"content":"    archiveBaseName \u003d \"jux\"","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"justincred":20,"-":39}},{"path":"src/main/java/jux/Jux.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"package jux;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"justincred"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"import parser.Parser;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":"import storage.Storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"justincred"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"justincred"},"content":" * main chatbot class that contains the logic for the chatbot","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"justincred"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"justincred"},"content":"public class Jux{","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"justincred"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"justincred"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"justincred"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"justincred"},"content":"    private boolean isNewStart \u003d true;","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"justincred"},"content":"    public Jux(String filePath) {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"justincred"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"justincred"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"justincred"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"justincred"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"justincred"},"content":"            isNewStart \u003d tasks.isEmpty();","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":28,"author":{"gitId":"justincred"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"justincred"},"content":"            ui.showLoadingError(e.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"justincred"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"justincred"},"content":"     * Response to user Input","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"justincred"},"content":"     * @param input user input","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"justincred"},"content":"     * @return  the response","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"justincred"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"justincred"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"justincred"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"justincred"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"justincred"},"content":"            if (Parser.isExit(input)) {","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"justincred"},"content":"                output \u003d ui.showGoodbye();","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"justincred"},"content":"            } else {","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"justincred"},"content":"                output \u003d Parser.parsingInput(input, tasks, ui);","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"justincred"},"content":"                storage.saveFile(tasks.getTaskList());","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"justincred"},"content":"            }","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"justincred"},"content":"        } catch(JuxException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"justincred"},"content":"            return (e.getMessage());","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":51,"author":{"gitId":"justincred"},"content":"        return output;","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"justincred"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"justincred"},"content":"    public String getStorageList() {","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"justincred"},"content":"        return tasks.showListWithIndexing(ui);","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"justincred"},"content":"     * Returns whether the chatbot\u0027s history is empty or not","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"justincred"},"content":"     * @return boolean value of chatbot\u0027s history","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"justincred"},"content":"    public boolean isNewStart() {","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"justincred"},"content":"        return this.isNewStart;","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"justincred":64,"-":2}},{"path":"src/main/java/jux/JuxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"package jux;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"justincred"},"content":"public class JuxException extends Exception {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":"     * Customised exception for user","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":"     * @param message","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"justincred"},"content":"    public JuxException(String message) {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"justincred"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"justincred"},"content":"    // You can add more constructors or methods based on your needs","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"justincred"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"justincred":14}},{"path":"src/main/java/jux/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"package jux;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"justincred"},"content":"import ui.Main;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"public class Launcher {","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"justincred"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"justincred"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"justincred"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"justincred":12}},{"path":"src/main/java/parser/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"package parser;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"justincred"},"content":"import jux.Jux;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"justincred"},"content":"import jux.JuxException;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":"import java.time.*;","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"import java.time.temporal.TemporalAdjusters;","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"justincred"},"content":"public class DateTimeParser {","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"justincred"},"content":"    public static final String[] POSSIBLE_DAY_OF_WEEK_FORMATS \u003d {\"E\", \"EEE\", \"EEEEE\"};","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"justincred"},"content":"    public static final String[] POSSIBLE_DATETIME_FORMATS \u003d {","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"justincred"},"content":"            \"yyyy-MM-dd HH:mm\",","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"justincred"},"content":"            \"yyyy/MM/dd HH:mm\",","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"justincred"},"content":"            \"dd-MM-yyyy HH:mm\",","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"justincred"},"content":"            \"dd/NN/yyyy HH:mm\",","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"justincred"},"content":"            \"yyyyMMdd HH:mm\",","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"justincred"},"content":"            \"yyyy MM dd HH:mm\",","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"justincred"},"content":"            \"dd MM yyyy HH:mm\",","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"justincred"},"content":"            \"ddMMyyyy HH:mm\"","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"justincred"},"content":"            // Add more formats as needed","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"justincred"},"content":"    };","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"justincred"},"content":"     * Convert the localDateTime variable in the task to","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"justincred"},"content":"     * a presentable format","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"justincred"},"content":"     * @param localDateTime date time stored in the task","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"justincred"},"content":"     * @return formatted string to be printed","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"justincred"},"content":"    public static String convertDateTimeToStringUI(LocalDateTime localDateTime) {","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"justincred"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"justincred"},"content":"        if (localDateTime.toLocalTime().equals(LocalTime.MIDNIGHT)) {","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"justincred"},"content":"            formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"justincred"},"content":"        return localDateTime.format(formatter);","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"justincred"},"content":"     * Converts the localDateTime date to string to be stored in the datafile","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"justincred"},"content":"     * @param localDateTime date time","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"justincred"},"content":"     * @return formatted string to be stored as ISO date time format","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"justincred"},"content":"    public static String convertDateTimeToStringStorage(LocalDateTime localDateTime) {","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"justincred"},"content":"        String formattedDateTime \u003d localDateTime.format(DateTimeFormatter.ISO_DATE_TIME);","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"justincred"},"content":"        return formattedDateTime;","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":47,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":48,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":49,"author":{"gitId":"justincred"},"content":"     * Converts the String dateTime in the storage to LocalDateTime","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"justincred"},"content":"     * @param date date string stored in storage as ISO date time format","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"justincred"},"content":"     * @return the local date time to be stored in the task","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"justincred"},"content":"    public static LocalDateTime storageConvertToDateTime(String date) {","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"justincred"},"content":"        return LocalDateTime.parse(date, DateTimeFormatter.ISO_DATE_TIME);","lastModifiedDate":"2024-02-16"},{"lineNumber":55,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":56,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":57,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":58,"author":{"gitId":"justincred"},"content":"     * Converts the String input to LocalDateTime","lastModifiedDate":"2024-02-16"},{"lineNumber":59,"author":{"gitId":"justincred"},"content":"     * @param dateString String date input","lastModifiedDate":"2024-02-16"},{"lineNumber":60,"author":{"gitId":"justincred"},"content":"     * @return local date time format","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"justincred"},"content":"     * @throws DateTimeException if invalid format","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"justincred"},"content":"    public static LocalDateTime inputConvertToDateTime(String dateString) throws JuxException{","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"justincred"},"content":"        try {","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"justincred"},"content":"            String dateTimeString \u003d addsTimeIfNonexistent(dateString);","lastModifiedDate":"2024-02-16"},{"lineNumber":66,"author":{"gitId":"justincred"},"content":"            if (isDayOfWeek(dateTimeString)) {","lastModifiedDate":"2024-02-16"},{"lineNumber":67,"author":{"gitId":"justincred"},"content":"                return getLocalDateTimeFromDayOfWeek(dateTimeString);","lastModifiedDate":"2024-02-16"},{"lineNumber":68,"author":{"gitId":"justincred"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"justincred"},"content":"            LocalDateTime dateTime \u003d getLocalDateTimeFromPossibleFormats(dateTimeString);","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"justincred"},"content":"            return dateTime;","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"justincred"},"content":"        } catch (JuxException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"justincred"},"content":"            throw e;","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":76,"author":{"gitId":"justincred"},"content":"    private static LocalDateTime getLocalDateTimeFromPossibleFormats(String dateString) throws JuxException {","lastModifiedDate":"2024-02-16"},{"lineNumber":77,"author":{"gitId":"justincred"},"content":"        for (String format : POSSIBLE_DATETIME_FORMATS) {","lastModifiedDate":"2024-02-16"},{"lineNumber":78,"author":{"gitId":"justincred"},"content":"            try {","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"justincred"},"content":"                LocalDateTime dateTime \u003d LocalDateTime.parse(dateString, DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"justincred"},"content":"                return dateTime;","lastModifiedDate":"2024-02-16"},{"lineNumber":81,"author":{"gitId":"justincred"},"content":"            } catch (Exception ignored) {","lastModifiedDate":"2024-02-16"},{"lineNumber":82,"author":{"gitId":"justincred"},"content":"                // If parsing fails, ignore the exception and try the next format","lastModifiedDate":"2024-02-16"},{"lineNumber":83,"author":{"gitId":"justincred"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":84,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":85,"author":{"gitId":"justincred"},"content":"        throw new JuxException(\"enter date and time using yyyy MM dd HH:mm\");","lastModifiedDate":"2024-02-16"},{"lineNumber":86,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":87,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":88,"author":{"gitId":"justincred"},"content":"    private static boolean isDayOfWeek(String dateTime) {","lastModifiedDate":"2024-02-16"},{"lineNumber":89,"author":{"gitId":"justincred"},"content":"        String date \u003d dateTime.split(\"\\\\s+\")[0];","lastModifiedDate":"2024-02-16"},{"lineNumber":90,"author":{"gitId":"justincred"},"content":"        for (String format : POSSIBLE_DAY_OF_WEEK_FORMATS) {","lastModifiedDate":"2024-02-16"},{"lineNumber":91,"author":{"gitId":"justincred"},"content":"            try {","lastModifiedDate":"2024-02-16"},{"lineNumber":92,"author":{"gitId":"justincred"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(format);","lastModifiedDate":"2024-02-16"},{"lineNumber":93,"author":{"gitId":"justincred"},"content":"                DayOfWeek.from(formatter.parse(date));","lastModifiedDate":"2024-02-16"},{"lineNumber":94,"author":{"gitId":"justincred"},"content":"                return true;","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"justincred"},"content":"            } catch (Exception ignored) {","lastModifiedDate":"2024-02-16"},{"lineNumber":96,"author":{"gitId":"justincred"},"content":"                // If parsing fails, ignore the exception and try the next format","lastModifiedDate":"2024-02-16"},{"lineNumber":97,"author":{"gitId":"justincred"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":98,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":99,"author":{"gitId":"justincred"},"content":"        return false;","lastModifiedDate":"2024-02-16"},{"lineNumber":100,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":101,"author":{"gitId":"justincred"},"content":"    private static LocalDateTime getLocalDateTimeFromDayOfWeek(String dateString) throws DateTimeException {","lastModifiedDate":"2024-02-16"},{"lineNumber":102,"author":{"gitId":"justincred"},"content":"        String[] splitdateString \u003d dateString.split(\"\\\\s+\");","lastModifiedDate":"2024-02-16"},{"lineNumber":103,"author":{"gitId":"justincred"},"content":"        LocalTime chosenTime \u003d LocalTime.parse(splitdateString[1], DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2024-02-16"},{"lineNumber":104,"author":{"gitId":"justincred"},"content":"        for (String format : POSSIBLE_DAY_OF_WEEK_FORMATS) {","lastModifiedDate":"2024-02-16"},{"lineNumber":105,"author":{"gitId":"justincred"},"content":"            try {","lastModifiedDate":"2024-02-16"},{"lineNumber":106,"author":{"gitId":"justincred"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(format);","lastModifiedDate":"2024-02-16"},{"lineNumber":107,"author":{"gitId":"justincred"},"content":"                DayOfWeek dayOfWeek \u003d DayOfWeek.from(formatter.parse(splitdateString[0]));","lastModifiedDate":"2024-02-16"},{"lineNumber":108,"author":{"gitId":"justincred"},"content":"                LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2024-02-16"},{"lineNumber":109,"author":{"gitId":"justincred"},"content":"                LocalDate currentDay \u003d currentDate.with(dayOfWeek);","lastModifiedDate":"2024-02-16"},{"lineNumber":110,"author":{"gitId":"justincred"},"content":"                LocalDate nextOccurrence \u003d findNextDayOfWeek(currentDate, dayOfWeek);","lastModifiedDate":"2024-02-16"},{"lineNumber":111,"author":{"gitId":"justincred"},"content":"                nextOccurrence \u003d checkIfTimeHasPassedOnSameDayAsCurrent(chosenTime, dayOfWeek,","lastModifiedDate":"2024-02-16"},{"lineNumber":112,"author":{"gitId":"justincred"},"content":"                        currentDay, nextOccurrence);","lastModifiedDate":"2024-02-16"},{"lineNumber":113,"author":{"gitId":"justincred"},"content":"                LocalDateTime dateTime \u003d nextOccurrence.atTime(chosenTime);","lastModifiedDate":"2024-02-16"},{"lineNumber":114,"author":{"gitId":"justincred"},"content":"                return dateTime;","lastModifiedDate":"2024-02-16"},{"lineNumber":115,"author":{"gitId":"justincred"},"content":"            } catch (Exception ignored) {","lastModifiedDate":"2024-02-16"},{"lineNumber":116,"author":{"gitId":"justincred"},"content":"                // If parsing fails, ignore the exception and try the next format","lastModifiedDate":"2024-02-16"},{"lineNumber":117,"author":{"gitId":"justincred"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":118,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":119,"author":{"gitId":"justincred"},"content":"        throw new DateTimeException(\"Invalid format for day of week\");","lastModifiedDate":"2024-02-16"},{"lineNumber":120,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":121,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":122,"author":{"gitId":"justincred"},"content":"    private static LocalDate checkIfTimeHasPassedOnSameDayAsCurrent(LocalTime time, DayOfWeek dayOfWeek, LocalDate currentDay, LocalDate nextOccurrence) {","lastModifiedDate":"2024-02-16"},{"lineNumber":123,"author":{"gitId":"justincred"},"content":"        if (nextOccurrence.with(dayOfWeek) \u003d\u003d currentDay) {","lastModifiedDate":"2024-02-16"},{"lineNumber":124,"author":{"gitId":"justincred"},"content":"            LocalTime currentTime \u003d LocalTime.now();","lastModifiedDate":"2024-02-16"},{"lineNumber":125,"author":{"gitId":"justincred"},"content":"            if (time.isBefore(currentTime)) {","lastModifiedDate":"2024-02-16"},{"lineNumber":126,"author":{"gitId":"justincred"},"content":"                nextOccurrence \u003d nextOccurrence.plusWeeks(1);","lastModifiedDate":"2024-02-16"},{"lineNumber":127,"author":{"gitId":"justincred"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":128,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":129,"author":{"gitId":"justincred"},"content":"        return nextOccurrence;","lastModifiedDate":"2024-02-16"},{"lineNumber":130,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":131,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":132,"author":{"gitId":"justincred"},"content":"    private static LocalDate findNextDayOfWeek(LocalDate currentDate, DayOfWeek targetDayOfWeek) {","lastModifiedDate":"2024-02-16"},{"lineNumber":133,"author":{"gitId":"justincred"},"content":"        return currentDate.with(TemporalAdjusters.nextOrSame(targetDayOfWeek));","lastModifiedDate":"2024-02-16"},{"lineNumber":134,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":135,"author":{"gitId":"justincred"},"content":"    private static String addsTimeIfNonexistent(String dateString) {","lastModifiedDate":"2024-02-16"},{"lineNumber":136,"author":{"gitId":"justincred"},"content":"        if (!dateString.contains(\":\")) { // might consider using localtime to find time","lastModifiedDate":"2024-02-16"},{"lineNumber":137,"author":{"gitId":"justincred"},"content":"            dateString \u003d dateString + \" 00:00\";","lastModifiedDate":"2024-02-16"},{"lineNumber":138,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":139,"author":{"gitId":"justincred"},"content":"        return dateString;","lastModifiedDate":"2024-02-16"},{"lineNumber":140,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":141,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":142,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":143,"author":{"gitId":"justincred"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"justincred":143}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"package parser;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"import jux.JuxException;","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"justincred"},"content":"import tasklist.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"justincred"},"content":"import tasklist.TaskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"justincred"},"content":"public class Parser {","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"justincred"},"content":"    public static final String TASK_TODO \u003d \"TODO\";","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"justincred"},"content":"    public static final String TASK_DEADLINE \u003d \"DEADLINE\";","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"justincred"},"content":"    public static final String TASK_EVENT \u003d \"EVENT\";","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"justincred"},"content":"    public static final String TASK_INVALID \u003d \"INVALID\";","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"justincred"},"content":"     * Takes input from user and finds the corresponding action","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"justincred"},"content":"     * @param input input string","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"justincred"},"content":"     * @param taskList the task list","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"justincred"},"content":"     * @param ui the ui","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"justincred"},"content":"     * @throws JuxException","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"justincred"},"content":"    public static String parsingInput(String input, TaskList taskList, Ui ui) throws JuxException {","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"justincred"},"content":"        String command \u003d findCommand(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"justincred"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"justincred"},"content":"        switch (command) {","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"justincred"},"content":"        case \"list\":","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"justincred"},"content":"            output \u003d getListString(taskList, ui);","lastModifiedDate":"2024-02-15"},{"lineNumber":29,"author":{"gitId":"justincred"},"content":"            break;","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"justincred"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"justincred"},"content":"            output \u003d getmarkString(input, taskList, ui);","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"justincred"},"content":"            break;","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"justincred"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"justincred"},"content":"            output \u003d getunmarkString(input, taskList, ui);","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"justincred"},"content":"            break;","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"justincred"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"justincred"},"content":"            output \u003d getDeleteString(input, taskList, ui);","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"justincred"},"content":"            break;","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"justincred"},"content":"        case \"add\":","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"justincred"},"content":"            output \u003d getAddTaskString(input, taskList, ui);","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"justincred"},"content":"            break;","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"justincred"},"content":"        case \"find\":","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"justincred"},"content":"            output \u003d getFindString(input, taskList, ui);","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"justincred"},"content":"            break;","lastModifiedDate":"2024-02-15"},{"lineNumber":45,"author":{"gitId":"justincred"},"content":"        default:","lastModifiedDate":"2024-02-15"},{"lineNumber":46,"author":{"gitId":"justincred"},"content":"            break;","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"justincred"},"content":"        return output;","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"justincred"},"content":"     * Returns the list to be printed in the gui","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"justincred"},"content":"     * @param taskList task list","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"justincred"},"content":"     * @param ui ui","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"justincred"},"content":"     * @return the task list to be printed","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"justincred"},"content":"     * @throws JuxException if list is empty","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"justincred"},"content":"    private static String getListString(TaskList taskList, Ui ui) throws JuxException {","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"justincred"},"content":"        String output;","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"justincred"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"justincred"},"content":"            throw new JuxException(\" YOUR LIST IS EMPTY\");","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"justincred"},"content":"        output \u003d taskList.showListWithIndexing(ui);","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"justincred"},"content":"        return output;","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"justincred"},"content":"     * Returns the string to be printed in the Gui","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"justincred"},"content":"     * @param input user input","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"justincred"},"content":"     * @param taskList task list","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"justincred"},"content":"     * @param ui ui","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"justincred"},"content":"     * @return the marked string to be printed","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"justincred"},"content":"     * @throws JuxException exception for incorrect input","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"justincred"},"content":"    private static String getmarkString(String input, TaskList taskList, Ui ui) throws JuxException {","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"justincred"},"content":"        String output;","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"justincred"},"content":"        if (input.length() \u003e 5) {","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"justincred"},"content":"            String listStringNumber \u003d input.substring(5);","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"justincred"},"content":"            // future error detection for non-numerals","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"justincred"},"content":"            int convertedToNumber \u003d Parser.convertStringIndexToIntZeroIndex(listStringNumber);","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"justincred"},"content":"            // future error when list is empty","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"justincred"},"content":"            exceptionMarkString(taskList, convertedToNumber);","lastModifiedDate":"2024-02-15"},{"lineNumber":83,"author":{"gitId":"justincred"},"content":"            taskList.toggleIndexedTask(convertedToNumber);","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"justincred"},"content":"            output \u003d taskList.printTaskMarked(ui, convertedToNumber);","lastModifiedDate":"2024-02-15"},{"lineNumber":85,"author":{"gitId":"justincred"},"content":"        } else {","lastModifiedDate":"2024-02-15"},{"lineNumber":86,"author":{"gitId":"justincred"},"content":"            throw new JuxException(\"PLEASE INSERT NUMBER TO MARK\");","lastModifiedDate":"2024-02-15"},{"lineNumber":87,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":88,"author":{"gitId":"justincred"},"content":"        return output;","lastModifiedDate":"2024-02-15"},{"lineNumber":89,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":90,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":91,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":92,"author":{"gitId":"justincred"},"content":"     * Exception for input for mark string","lastModifiedDate":"2024-02-15"},{"lineNumber":93,"author":{"gitId":"justincred"},"content":"     * @param taskList task list","lastModifiedDate":"2024-02-15"},{"lineNumber":94,"author":{"gitId":"justincred"},"content":"     * @param convertedToNumber the index of the task in tasklist","lastModifiedDate":"2024-02-15"},{"lineNumber":95,"author":{"gitId":"justincred"},"content":"     * @throws JuxException the exception to the rule that it violates","lastModifiedDate":"2024-02-15"},{"lineNumber":96,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":97,"author":{"gitId":"justincred"},"content":"    private static void exceptionMarkString(TaskList taskList, int convertedToNumber) throws JuxException {","lastModifiedDate":"2024-02-15"},{"lineNumber":98,"author":{"gitId":"justincred"},"content":"        if (convertedToNumber \u003c 0 || convertedToNumber \u003e\u003d taskList.getSize()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"justincred"},"content":"            throw new JuxException(\"NUMBER NOT IN LIST, PLEASE ADD A TASK OR \" +","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"justincred"},"content":"                    \"CHOOSE A DIFFERENT NUMBER WITHIN 1 AND\"","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"justincred"},"content":"                    + taskList.getSize());","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"justincred"},"content":"        if (taskList.isIndexedTaskChecked(convertedToNumber)) {","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"justincred"},"content":"            throw new JuxException(\"TASK ALREADY MARKED\");","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":107,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":108,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":109,"author":{"gitId":"justincred"},"content":"     * Returns the unmarked string to be printed in the Gui","lastModifiedDate":"2024-02-15"},{"lineNumber":110,"author":{"gitId":"justincred"},"content":"     * @param input user input","lastModifiedDate":"2024-02-15"},{"lineNumber":111,"author":{"gitId":"justincred"},"content":"     * @param taskList task list","lastModifiedDate":"2024-02-15"},{"lineNumber":112,"author":{"gitId":"justincred"},"content":"     * @param ui ui","lastModifiedDate":"2024-02-15"},{"lineNumber":113,"author":{"gitId":"justincred"},"content":"     * @return the unmarked string to be printed","lastModifiedDate":"2024-02-15"},{"lineNumber":114,"author":{"gitId":"justincred"},"content":"     * @throws JuxException exception for incorrect input","lastModifiedDate":"2024-02-15"},{"lineNumber":115,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":116,"author":{"gitId":"justincred"},"content":"    private static String getunmarkString(String input, TaskList taskList, Ui ui) throws JuxException {","lastModifiedDate":"2024-02-15"},{"lineNumber":117,"author":{"gitId":"justincred"},"content":"        String output;","lastModifiedDate":"2024-02-15"},{"lineNumber":118,"author":{"gitId":"justincred"},"content":"        String listStringNumber \u003d input.substring(7);","lastModifiedDate":"2024-02-07"},{"lineNumber":119,"author":{"gitId":"justincred"},"content":"        // future error detection for non-numerals","lastModifiedDate":"2024-02-07"},{"lineNumber":120,"author":{"gitId":"justincred"},"content":"        int convertedToNumber \u003d Parser.convertStringIndexToIntZeroIndex(listStringNumber);","lastModifiedDate":"2024-02-07"},{"lineNumber":121,"author":{"gitId":"justincred"},"content":"        // future error when list is empty","lastModifiedDate":"2024-02-07"},{"lineNumber":122,"author":{"gitId":"justincred"},"content":"        exceptionUnMarkString(taskList, convertedToNumber);","lastModifiedDate":"2024-02-15"},{"lineNumber":123,"author":{"gitId":"justincred"},"content":"        taskList.toggleIndexedTask(convertedToNumber);","lastModifiedDate":"2024-02-15"},{"lineNumber":124,"author":{"gitId":"justincred"},"content":"        output \u003d taskList.printTaskUnMarked(ui, convertedToNumber);","lastModifiedDate":"2024-02-15"},{"lineNumber":125,"author":{"gitId":"justincred"},"content":"        return output;","lastModifiedDate":"2024-02-15"},{"lineNumber":126,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":127,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":128,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":129,"author":{"gitId":"justincred"},"content":"     * Exceptions for input for unMark string","lastModifiedDate":"2024-02-15"},{"lineNumber":130,"author":{"gitId":"justincred"},"content":"     * @param taskList task list","lastModifiedDate":"2024-02-15"},{"lineNumber":131,"author":{"gitId":"justincred"},"content":"     * @param convertedToNumber the task index in the task list","lastModifiedDate":"2024-02-15"},{"lineNumber":132,"author":{"gitId":"justincred"},"content":"     * @throws JuxException the exception to the rule that it violates","lastModifiedDate":"2024-02-15"},{"lineNumber":133,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":134,"author":{"gitId":"justincred"},"content":"    private static void exceptionUnMarkString(TaskList taskList, int convertedToNumber) throws JuxException {","lastModifiedDate":"2024-02-15"},{"lineNumber":135,"author":{"gitId":"justincred"},"content":"        if (convertedToNumber \u003c 0 || convertedToNumber \u003e\u003d taskList.getSize()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":136,"author":{"gitId":"justincred"},"content":"            throw new JuxException(\"NUMBER NOT IN LIST, PLEASE ADD A TASK OR \" +","lastModifiedDate":"2024-02-07"},{"lineNumber":137,"author":{"gitId":"justincred"},"content":"                    \"CHOOSE A DIFFERENT NUMBER WITHIN 1 AND\"","lastModifiedDate":"2024-02-07"},{"lineNumber":138,"author":{"gitId":"justincred"},"content":"                    + taskList.getSize());","lastModifiedDate":"2024-02-07"},{"lineNumber":139,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":140,"author":{"gitId":"justincred"},"content":"        if (!taskList.isIndexedTaskChecked(convertedToNumber)) {","lastModifiedDate":"2024-02-07"},{"lineNumber":141,"author":{"gitId":"justincred"},"content":"            throw new JuxException(\"TASK ALREADY UNMARKED\");","lastModifiedDate":"2024-02-07"},{"lineNumber":142,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":143,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":144,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":145,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":146,"author":{"gitId":"justincred"},"content":"     * Returns the find string to be printed in Gui","lastModifiedDate":"2024-02-15"},{"lineNumber":147,"author":{"gitId":"justincred"},"content":"     * @param input user input","lastModifiedDate":"2024-02-15"},{"lineNumber":148,"author":{"gitId":"justincred"},"content":"     * @param taskList task list","lastModifiedDate":"2024-02-15"},{"lineNumber":149,"author":{"gitId":"justincred"},"content":"     * @param ui ui","lastModifiedDate":"2024-02-15"},{"lineNumber":150,"author":{"gitId":"justincred"},"content":"     * @return string from find action","lastModifiedDate":"2024-02-15"},{"lineNumber":151,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":152,"author":{"gitId":"justincred"},"content":"    private static String getFindString(String input, TaskList taskList, Ui ui) {","lastModifiedDate":"2024-02-15"},{"lineNumber":153,"author":{"gitId":"justincred"},"content":"        String output;","lastModifiedDate":"2024-02-15"},{"lineNumber":154,"author":{"gitId":"justincred"},"content":"        String findTask \u003d Parser.parseFind(input);","lastModifiedDate":"2024-02-15"},{"lineNumber":155,"author":{"gitId":"justincred"},"content":"        ArrayList\u003cTask\u003e tasksFound \u003d taskList.findTask(findTask);","lastModifiedDate":"2024-02-15"},{"lineNumber":156,"author":{"gitId":"justincred"},"content":"        if (tasksFound.isEmpty()) {","lastModifiedDate":"2024-02-15"},{"lineNumber":157,"author":{"gitId":"justincred"},"content":"            output \u003d ui.printNotFound();","lastModifiedDate":"2024-02-15"},{"lineNumber":158,"author":{"gitId":"justincred"},"content":"        } else {","lastModifiedDate":"2024-02-15"},{"lineNumber":159,"author":{"gitId":"justincred"},"content":"            output \u003d ui.printList(tasksFound);","lastModifiedDate":"2024-02-15"},{"lineNumber":160,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":161,"author":{"gitId":"justincred"},"content":"        return output;","lastModifiedDate":"2024-02-15"},{"lineNumber":162,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":163,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":164,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":165,"author":{"gitId":"justincred"},"content":"     * Returns the add task string to be printed in the Gui","lastModifiedDate":"2024-02-15"},{"lineNumber":166,"author":{"gitId":"justincred"},"content":"     * @param input user input","lastModifiedDate":"2024-02-15"},{"lineNumber":167,"author":{"gitId":"justincred"},"content":"     * @param taskList task list","lastModifiedDate":"2024-02-15"},{"lineNumber":168,"author":{"gitId":"justincred"},"content":"     * @param ui ui","lastModifiedDate":"2024-02-15"},{"lineNumber":169,"author":{"gitId":"justincred"},"content":"     * @return string for Gui","lastModifiedDate":"2024-02-15"},{"lineNumber":170,"author":{"gitId":"justincred"},"content":"     * @throws JuxException","lastModifiedDate":"2024-02-15"},{"lineNumber":171,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":172,"author":{"gitId":"justincred"},"content":"    private static String getAddTaskString(String input, TaskList taskList, Ui ui) throws JuxException {","lastModifiedDate":"2024-02-15"},{"lineNumber":173,"author":{"gitId":"justincred"},"content":"        String output;","lastModifiedDate":"2024-02-15"},{"lineNumber":174,"author":{"gitId":"justincred"},"content":"        String typeOfTask \u003d Parser.typeOfTask(input);","lastModifiedDate":"2024-02-15"},{"lineNumber":175,"author":{"gitId":"justincred"},"content":"        output \u003d taskList.addTask(ui, typeOfTask, input);","lastModifiedDate":"2024-02-15"},{"lineNumber":176,"author":{"gitId":"justincred"},"content":"        return output;","lastModifiedDate":"2024-02-15"},{"lineNumber":177,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":178,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":179,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":180,"author":{"gitId":"justincred"},"content":"     * Returns the string to be shown in the Gui after","lastModifiedDate":"2024-02-15"},{"lineNumber":181,"author":{"gitId":"justincred"},"content":"     * checking whether it violates any exceptions","lastModifiedDate":"2024-02-15"},{"lineNumber":182,"author":{"gitId":"justincred"},"content":"     * @param input user input","lastModifiedDate":"2024-02-15"},{"lineNumber":183,"author":{"gitId":"justincred"},"content":"     * @param taskList the task list","lastModifiedDate":"2024-02-15"},{"lineNumber":184,"author":{"gitId":"justincred"},"content":"     * @param ui the ui","lastModifiedDate":"2024-02-15"},{"lineNumber":185,"author":{"gitId":"justincred"},"content":"     * @return","lastModifiedDate":"2024-02-15"},{"lineNumber":186,"author":{"gitId":"justincred"},"content":"     * @throws JuxException","lastModifiedDate":"2024-02-15"},{"lineNumber":187,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":188,"author":{"gitId":"justincred"},"content":"    private static String getDeleteString(String input, TaskList taskList, Ui ui) throws JuxException {","lastModifiedDate":"2024-02-15"},{"lineNumber":189,"author":{"gitId":"justincred"},"content":"        String output;","lastModifiedDate":"2024-02-15"},{"lineNumber":190,"author":{"gitId":"justincred"},"content":"        String deleteListStringNumber \u003d  input.substring(7);","lastModifiedDate":"2024-02-07"},{"lineNumber":191,"author":{"gitId":"justincred"},"content":"        // future error detection for non-numerals","lastModifiedDate":"2024-02-07"},{"lineNumber":192,"author":{"gitId":"justincred"},"content":"        int deleteConvertedToNumber \u003d Parser.convertStringIndexToIntZeroIndex(deleteListStringNumber);","lastModifiedDate":"2024-02-07"},{"lineNumber":193,"author":{"gitId":"justincred"},"content":"        // future error when list is empty","lastModifiedDate":"2024-02-07"},{"lineNumber":194,"author":{"gitId":"justincred"},"content":"        if (deleteConvertedToNumber \u003c 0 || deleteConvertedToNumber \u003e\u003d taskList.getSize()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":195,"author":{"gitId":"justincred"},"content":"            throw new JuxException(\"NUMBER NOT IN LIST, PLEASE ADD A TASK OR \" +","lastModifiedDate":"2024-02-07"},{"lineNumber":196,"author":{"gitId":"justincred"},"content":"                    \"CHOOSE A DIFFERENT NUMBER WITHIN 1 AND\"","lastModifiedDate":"2024-02-07"},{"lineNumber":197,"author":{"gitId":"justincred"},"content":"                    + taskList.getSize());","lastModifiedDate":"2024-02-07"},{"lineNumber":198,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":199,"author":{"gitId":"justincred"},"content":"        output \u003d taskList.deleteTask(ui, deleteConvertedToNumber);","lastModifiedDate":"2024-02-11"},{"lineNumber":200,"author":{"gitId":"justincred"},"content":"        return output;","lastModifiedDate":"2024-02-11"},{"lineNumber":201,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":202,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":203,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":204,"author":{"gitId":"justincred"},"content":"     * Returns the string to find","lastModifiedDate":"2024-02-15"},{"lineNumber":205,"author":{"gitId":"justincred"},"content":"     * @param input user input","lastModifiedDate":"2024-02-15"},{"lineNumber":206,"author":{"gitId":"justincred"},"content":"     * @return the string to find","lastModifiedDate":"2024-02-15"},{"lineNumber":207,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":208,"author":{"gitId":"justincred"},"content":"    public static  String parseFind(String input) {","lastModifiedDate":"2024-02-08"},{"lineNumber":209,"author":{"gitId":"justincred"},"content":"        return input.substring(5);","lastModifiedDate":"2024-02-08"},{"lineNumber":210,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":211,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":212,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":213,"author":{"gitId":"justincred"},"content":"     * Returns the type of task to add","lastModifiedDate":"2024-02-08"},{"lineNumber":214,"author":{"gitId":"justincred"},"content":"     * @param input user input","lastModifiedDate":"2024-02-08"},{"lineNumber":215,"author":{"gitId":"justincred"},"content":"     * @return the type of task","lastModifiedDate":"2024-02-08"},{"lineNumber":216,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":217,"author":{"gitId":"justincred"},"content":"    public static String typeOfTask(String input) {","lastModifiedDate":"2024-02-07"},{"lineNumber":218,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":219,"author":{"gitId":"justincred"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":220,"author":{"gitId":"justincred"},"content":"            return TASK_TODO;","lastModifiedDate":"2024-02-08"},{"lineNumber":221,"author":{"gitId":"justincred"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":222,"author":{"gitId":"justincred"},"content":"            return TASK_EVENT;","lastModifiedDate":"2024-02-08"},{"lineNumber":223,"author":{"gitId":"justincred"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":224,"author":{"gitId":"justincred"},"content":"            return TASK_DEADLINE;","lastModifiedDate":"2024-02-08"},{"lineNumber":225,"author":{"gitId":"justincred"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":226,"author":{"gitId":"justincred"},"content":"            return TASK_INVALID;","lastModifiedDate":"2024-02-08"},{"lineNumber":227,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":228,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":229,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":230,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":231,"author":{"gitId":"justincred"},"content":"     * Parse input for Todo constructor","lastModifiedDate":"2024-02-08"},{"lineNumber":232,"author":{"gitId":"justincred"},"content":"     * @param input user input","lastModifiedDate":"2024-02-08"},{"lineNumber":233,"author":{"gitId":"justincred"},"content":"     * @return todo description","lastModifiedDate":"2024-02-08"},{"lineNumber":234,"author":{"gitId":"justincred"},"content":"     * @throws JuxException when description is empty","lastModifiedDate":"2024-02-08"},{"lineNumber":235,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":236,"author":{"gitId":"justincred"},"content":"    public static String parseTodo(String input) throws JuxException {","lastModifiedDate":"2024-02-07"},{"lineNumber":237,"author":{"gitId":"justincred"},"content":"        if (input.length() \u003e 5) {","lastModifiedDate":"2024-02-07"},{"lineNumber":238,"author":{"gitId":"justincred"},"content":"            return input.substring(5);","lastModifiedDate":"2024-02-07"},{"lineNumber":239,"author":{"gitId":"justincred"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":240,"author":{"gitId":"justincred"},"content":"            throw new JuxException(\"PLEASE INSERT DESCRIPTION FOR YOUR TODO\");","lastModifiedDate":"2024-02-07"},{"lineNumber":241,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":242,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":243,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":244,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":245,"author":{"gitId":"justincred"},"content":"     * Parse input for Deadline constructor","lastModifiedDate":"2024-02-08"},{"lineNumber":246,"author":{"gitId":"justincred"},"content":"     * Checks if input format is valid","lastModifiedDate":"2024-02-08"},{"lineNumber":247,"author":{"gitId":"justincred"},"content":"     * @param input user input","lastModifiedDate":"2024-02-08"},{"lineNumber":248,"author":{"gitId":"justincred"},"content":"     * @return string array containing the deadline constructor values","lastModifiedDate":"2024-02-08"},{"lineNumber":249,"author":{"gitId":"justincred"},"content":"     * @throws JuxException if invalid time or missing description","lastModifiedDate":"2024-02-08"},{"lineNumber":250,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":251,"author":{"gitId":"justincred"},"content":"    public static String[] parseDeadline(String input) throws JuxException {","lastModifiedDate":"2024-02-07"},{"lineNumber":252,"author":{"gitId":"justincred"},"content":"        if (input.length() \u003e10) {","lastModifiedDate":"2024-02-07"},{"lineNumber":253,"author":{"gitId":"justincred"},"content":"            if (!input.contains(\"/\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":254,"author":{"gitId":"justincred"},"content":"                throw new JuxException(\"insert time after deadline such as deadline /monday\");","lastModifiedDate":"2024-02-07"},{"lineNumber":255,"author":{"gitId":"justincred"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":256,"author":{"gitId":"justincred"},"content":"            String desc \u003d input.substring(9, input.indexOf(\"/\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":257,"author":{"gitId":"justincred"},"content":"            String date \u003d input.substring(input.indexOf(\"/\") + 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":258,"author":{"gitId":"justincred"},"content":"            String[] strings \u003d {desc, date};","lastModifiedDate":"2024-02-07"},{"lineNumber":259,"author":{"gitId":"justincred"},"content":"            return strings;","lastModifiedDate":"2024-02-07"},{"lineNumber":260,"author":{"gitId":"justincred"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":261,"author":{"gitId":"justincred"},"content":"            throw new JuxException(\"PLEASE INSERT DESCRIPTION FOR YOUR DEADLINE\");","lastModifiedDate":"2024-02-07"},{"lineNumber":262,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":263,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":264,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":265,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":266,"author":{"gitId":"justincred"},"content":"     * Parse input for Event constructor","lastModifiedDate":"2024-02-08"},{"lineNumber":267,"author":{"gitId":"justincred"},"content":"     * Checks if input format is valid","lastModifiedDate":"2024-02-08"},{"lineNumber":268,"author":{"gitId":"justincred"},"content":"     * @param input user input","lastModifiedDate":"2024-02-08"},{"lineNumber":269,"author":{"gitId":"justincred"},"content":"     * @return string array containing the event constructor values","lastModifiedDate":"2024-02-08"},{"lineNumber":270,"author":{"gitId":"justincred"},"content":"     * @throws JuxException if invalid time or missing description","lastModifiedDate":"2024-02-08"},{"lineNumber":271,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":272,"author":{"gitId":"justincred"},"content":"    public static String[] parseEvent(String input) throws JuxException {","lastModifiedDate":"2024-02-07"},{"lineNumber":273,"author":{"gitId":"justincred"},"content":"        if (input.length() \u003e7 ) {","lastModifiedDate":"2024-02-07"},{"lineNumber":274,"author":{"gitId":"justincred"},"content":"            String regex \u003d \".*\" + \u0027/\u0027+ \".*\" + \u0027/\u0027 + \".*\";","lastModifiedDate":"2024-02-07"},{"lineNumber":275,"author":{"gitId":"justincred"},"content":"            if (!input.matches(regex)) {","lastModifiedDate":"2024-02-07"},{"lineNumber":276,"author":{"gitId":"justincred"},"content":"                throw new JuxException(\"insert time for event such as event /monday /sunday\");","lastModifiedDate":"2024-02-07"},{"lineNumber":277,"author":{"gitId":"justincred"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":278,"author":{"gitId":"justincred"},"content":"            String desc \u003d input.substring(6, input.indexOf(\"/\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":279,"author":{"gitId":"justincred"},"content":"            String firstDate \u003d input.substring(input.indexOf(\"/\") + 1, input.lastIndexOf(\"/\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":280,"author":{"gitId":"justincred"},"content":"            String endDate \u003d input.substring(input.lastIndexOf(\"/\") + 1);","lastModifiedDate":"2024-02-07"},{"lineNumber":281,"author":{"gitId":"justincred"},"content":"            String [] strings \u003d{desc, firstDate, endDate};","lastModifiedDate":"2024-02-07"},{"lineNumber":282,"author":{"gitId":"justincred"},"content":"            return strings;","lastModifiedDate":"2024-02-07"},{"lineNumber":283,"author":{"gitId":"justincred"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":284,"author":{"gitId":"justincred"},"content":"            throw new JuxException(\"PLEASE INSERT DESCRIPTION FOR YOUR EVENT\");","lastModifiedDate":"2024-02-07"},{"lineNumber":285,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":286,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":287,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":288,"author":{"gitId":"justincred"},"content":"     * Finds the action that the user wants to execute","lastModifiedDate":"2024-02-08"},{"lineNumber":289,"author":{"gitId":"justincred"},"content":"     * @param input user input","lastModifiedDate":"2024-02-08"},{"lineNumber":290,"author":{"gitId":"justincred"},"content":"     * @return string containing the action","lastModifiedDate":"2024-02-08"},{"lineNumber":291,"author":{"gitId":"justincred"},"content":"     * @throws JuxException if invalid action","lastModifiedDate":"2024-02-08"},{"lineNumber":292,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":293,"author":{"gitId":"justincred"},"content":"    public static String findCommand(String input) throws JuxException {","lastModifiedDate":"2024-02-07"},{"lineNumber":294,"author":{"gitId":"justincred"},"content":"        if (input.startsWith(\"mark\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":295,"author":{"gitId":"justincred"},"content":"            return \"mark\";","lastModifiedDate":"2024-02-07"},{"lineNumber":296,"author":{"gitId":"justincred"},"content":"        } else if (input.startsWith(\"unmark\") || input.startsWith(\"unMark\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":297,"author":{"gitId":"justincred"},"content":"            return \"unmark\";","lastModifiedDate":"2024-02-07"},{"lineNumber":298,"author":{"gitId":"justincred"},"content":"        } else if (input.startsWith(\"list\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":299,"author":{"gitId":"justincred"},"content":"            return \"list\";","lastModifiedDate":"2024-02-07"},{"lineNumber":300,"author":{"gitId":"justincred"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":301,"author":{"gitId":"justincred"},"content":"            return \"delete\";","lastModifiedDate":"2024-02-07"},{"lineNumber":302,"author":{"gitId":"justincred"},"content":"        } else if (input.startsWith(\"todo\") ||input.startsWith(\"deadline\")||input.startsWith(\"event\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":303,"author":{"gitId":"justincred"},"content":"            return \"add\";","lastModifiedDate":"2024-02-07"},{"lineNumber":304,"author":{"gitId":"justincred"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2024-02-08"},{"lineNumber":305,"author":{"gitId":"justincred"},"content":"            return \"find\";","lastModifiedDate":"2024-02-08"},{"lineNumber":306,"author":{"gitId":"justincred"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":307,"author":{"gitId":"justincred"},"content":"                throw new JuxException(\"Enter a valid input\");","lastModifiedDate":"2024-02-07"},{"lineNumber":308,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":309,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":310,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":311,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":312,"author":{"gitId":"justincred"},"content":"     * Converts the input index provided by the user to an int","lastModifiedDate":"2024-02-08"},{"lineNumber":313,"author":{"gitId":"justincred"},"content":"     * @param listStringNumber string index","lastModifiedDate":"2024-02-08"},{"lineNumber":314,"author":{"gitId":"justincred"},"content":"     * @return int indedx","lastModifiedDate":"2024-02-08"},{"lineNumber":315,"author":{"gitId":"justincred"},"content":"     * @throws JuxException if invalid string index","lastModifiedDate":"2024-02-08"},{"lineNumber":316,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":317,"author":{"gitId":"justincred"},"content":"    public static int convertStringIndexToIntZeroIndex(String listStringNumber) throws JuxException {","lastModifiedDate":"2024-02-07"},{"lineNumber":318,"author":{"gitId":"justincred"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":319,"author":{"gitId":"justincred"},"content":"            return Integer.parseInt(listStringNumber) - 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":320,"author":{"gitId":"justincred"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":321,"author":{"gitId":"justincred"},"content":"            throw new JuxException(e.getMessage()); // might customise error message","lastModifiedDate":"2024-02-07"},{"lineNumber":322,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":323,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":324,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":325,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":326,"author":{"gitId":"justincred"},"content":"     * Returns a boolean value of whether","lastModifiedDate":"2024-02-08"},{"lineNumber":327,"author":{"gitId":"justincred"},"content":"     * the user wants to exit the program","lastModifiedDate":"2024-02-08"},{"lineNumber":328,"author":{"gitId":"justincred"},"content":"     * @param input user input","lastModifiedDate":"2024-02-08"},{"lineNumber":329,"author":{"gitId":"justincred"},"content":"     * @return boolean value depending on if input is equal to bye","lastModifiedDate":"2024-02-16"},{"lineNumber":330,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":331,"author":{"gitId":"justincred"},"content":"    public static boolean isExit(String input) {","lastModifiedDate":"2024-02-07"},{"lineNumber":332,"author":{"gitId":"justincred"},"content":"        return input.equals(\"bye\") ? true : false;","lastModifiedDate":"2024-02-07"},{"lineNumber":333,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":334,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":335,"author":{"gitId":"justincred"},"content":"}","lastModifiedDate":"2024-02-06"},{"lineNumber":336,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"justincred":336}},{"path":"src/main/java/parser/Util.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"package parser;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"public class Util {","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"justincred"},"content":"        public static int findNthDividerIndex(String input,char c, int n) {","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"justincred"},"content":"            int count \u003d 0;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"            for (int i \u003d 0; i \u003c input.length(); i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":"                if (input.charAt(i) \u003d\u003d c) {","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":"                    count++;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"                    if (count \u003d\u003d n) {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"justincred"},"content":"                        return i; // Return the index of the nth repetition","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"justincred"},"content":"                    }","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"justincred"},"content":"                }","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"justincred"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"justincred"},"content":"            return -1; // Return -1 if the character is not repeated n times","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"justincred"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"justincred":17}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"package storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"import parser.Util;","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"justincred"},"content":"import tasklist.Deadline;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"justincred"},"content":"import tasklist.Event;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"import tasklist.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":"import tasklist.Todo;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"import java.io.File;","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"justincred"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"justincred"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"justincred"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"justincred"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"justincred"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"justincred"},"content":" * Storage Class to perform file actions","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"justincred"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"justincred"},"content":"public class Storage {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"justincred"},"content":"    private  String filepath\u003d \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"justincred"},"content":"    private File f;","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"justincred"},"content":"    private boolean doesExist;","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"justincred"},"content":"     * Searches and adds the hard disk for the file","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"justincred"},"content":"     * Creates the file or parent directory","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"justincred"},"content":"     * if it does not exist","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"justincred"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"justincred"},"content":"     * @param filepath the filepath","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"justincred"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"justincred"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"justincred"},"content":"        this.f \u003d new File(filepath);","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"justincred"},"content":"        this.doesExist \u003d f.exists();","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"justincred"},"content":"        File parentDirectory \u003d f.getParentFile();","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"justincred"},"content":"        if (!parentDirectory.exists()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"justincred"},"content":"            parentDirectory.mkdirs(); // Creates parent directories if they don\u0027t exist","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"justincred"},"content":"        if (!f.exists()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"justincred"},"content":"            try {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"justincred"},"content":"                f.createNewFile();","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"justincred"},"content":"            } catch(java.io.IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"justincred"},"content":"                e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"justincred"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"justincred"},"content":"     * Scans the file for the Tasks","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"justincred"},"content":"     * Adds the tasks as their respective subtasks to an array list","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"justincred"},"content":"     * @return ArrayList\u003cTask\u003e that contains the tasks in the file","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"justincred"},"content":"     * @throws FileNotFoundException if file not found","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"justincred"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"justincred"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"justincred"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"justincred"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"justincred"},"content":"            String data \u003d s.nextLine();","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"justincred"},"content":"            char isDoneChar \u003d data.charAt(2);","lastModifiedDate":"2024-02-04"},{"lineNumber":60,"author":{"gitId":"justincred"},"content":"            boolean isDone \u003d isDoneChar \u003d\u003d 1;","lastModifiedDate":"2024-02-04"},{"lineNumber":61,"author":{"gitId":"justincred"},"content":"            switch(data.charAt(0)) {","lastModifiedDate":"2024-02-04"},{"lineNumber":62,"author":{"gitId":"justincred"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2024-02-04"},{"lineNumber":63,"author":{"gitId":"justincred"},"content":"                    list.add(new Todo(data.substring(4), isDone));","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"justincred"},"content":"                    break;","lastModifiedDate":"2024-02-04"},{"lineNumber":65,"author":{"gitId":"justincred"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2024-02-04"},{"lineNumber":66,"author":{"gitId":"justincred"},"content":"                    int dateIndex \u003d Util.findNthDividerIndex(data, \u0027|\u0027, 3);","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"justincred"},"content":"                    list.add(new Deadline(data.substring(4, dateIndex), isDone, data.substring(dateIndex + 1)));","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"justincred"},"content":"                        break;","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"justincred"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"justincred"},"content":"                    int dateStartIndex \u003d Util.findNthDividerIndex(data, \u0027|\u0027, 3);","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"justincred"},"content":"                    int dateEndIndex \u003d Util.findNthDividerIndex(data, \u0027|\u0027,4);","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"justincred"},"content":"                    list.add(new Event(data.substring(4, dateStartIndex), isDone,","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"justincred"},"content":"                            data.substring(dateStartIndex + 1, dateEndIndex), data.substring(dateEndIndex + 1)));","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"justincred"},"content":"                    break;","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"justincred"},"content":"                default:","lastModifiedDate":"2024-02-04"},{"lineNumber":76,"author":{"gitId":"justincred"},"content":"                    break;","lastModifiedDate":"2024-02-04"},{"lineNumber":77,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":78,"author":{"gitId":"justincred"},"content":"            }","lastModifiedDate":"2024-02-04"},{"lineNumber":79,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":80,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":81,"author":{"gitId":"justincred"},"content":"        return list;","lastModifiedDate":"2024-02-04"},{"lineNumber":82,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":83,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"justincred"},"content":"     * Writes the whole task list to the file","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"justincred"},"content":"     * @param list task list","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"justincred"},"content":"    public void saveFile (ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"justincred"},"content":"        String toSave \u003d \"\";","lastModifiedDate":"2024-02-04"},{"lineNumber":90,"author":{"gitId":"justincred"},"content":"        for (int i \u003d 0; i \u003c list.size(); i ++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":91,"author":{"gitId":"justincred"},"content":"            toSave +\u003d list.get(i).saveStorage() + \"\\n\";","lastModifiedDate":"2024-02-04"},{"lineNumber":92,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"justincred"},"content":"        try{","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"justincred"},"content":"            FileWriter fw \u003d new FileWriter(filepath);","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"justincred"},"content":"            fw.write(toSave);","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"justincred"},"content":"            fw.close();","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"justincred"},"content":"        } catch(java.io.IOException e ) {","lastModifiedDate":"2024-02-04"},{"lineNumber":98,"author":{"gitId":"justincred"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-04"},{"lineNumber":99,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":100,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":101,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":102,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":103,"author":{"gitId":"justincred"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"justincred":103}},{"path":"src/main/java/tasklist/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"package tasklist;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"justincred"},"content":"import jux.JuxException;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"justincred"},"content":"import parser.DateTimeParser;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"justincred"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"justincred"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"justincred"},"content":"    public Deadline (String desc, String dateOrDateTimeUnformatted) throws JuxException {","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"justincred"},"content":"        super(desc);","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"justincred"},"content":"        this.dateTime \u003d DateTimeParser.inputConvertToDateTime(dateOrDateTimeUnformatted);","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"justincred"},"content":"    public Deadline (String desc, boolean isDone, String dateOrDateTimeStorage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"justincred"},"content":"        super(desc, isDone);","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"justincred"},"content":"        this.dateTime \u003d DateTimeParser.storageConvertToDateTime(dateOrDateTimeStorage);","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"justincred"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"justincred"},"content":"    public String saveStorage(){","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"justincred"},"content":"        String details \u003d super.saveStorage();","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"justincred"},"content":"            details \u003d \"D|\" + details +\"|\" +  DateTimeParser.convertDateTimeToStringStorage(this.dateTime);","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"justincred"},"content":"            return details;","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"justincred"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"justincred"},"content":"        return \"[D]\" + super.toString() + \"(\" + DateTimeParser.convertDateTimeToStringUI(this.dateTime) + \")\";","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"justincred"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"justincred":28}},{"path":"src/main/java/tasklist/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"package tasklist;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"justincred"},"content":"import jux.JuxException;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"justincred"},"content":"import parser.DateTimeParser;","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"justincred"},"content":"public class Event extends Task{","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"justincred"},"content":"    private LocalDateTime  startDateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"justincred"},"content":"    private LocalDateTime endDateTime;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"justincred"},"content":"    public Event(String desc, String startDate, String endDate) throws JuxException {","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"justincred"},"content":"        super(desc);","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"justincred"},"content":"            this.startDateTime \u003d DateTimeParser.inputConvertToDateTime(startDate);","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"justincred"},"content":"            this.endDateTime \u003d DateTimeParser.inputConvertToDateTime(endDate);","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"justincred"},"content":"    public Event(String desc, boolean isDone, String startDateStorage, String endDateStorage){","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"justincred"},"content":"        super(desc, isDone);","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"justincred"},"content":"        this.startDateTime \u003d DateTimeParser.storageConvertToDateTime(startDateStorage);","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"justincred"},"content":"        this.endDateTime \u003d DateTimeParser.storageConvertToDateTime(endDateStorage);","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"justincred"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"justincred"},"content":"    public String saveStorage(){","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"justincred"},"content":"        String details \u003d super.saveStorage();","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"justincred"},"content":"        details \u003d \"E|\" + details + \"|\" + DateTimeParser.convertDateTimeToStringStorage(startDateTime)","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"justincred"},"content":"                + \"|\" + DateTimeParser.convertDateTimeToStringStorage(endDateTime);","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"justincred"},"content":"        return details;","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"justincred"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"justincred"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"justincred"},"content":"        return \"[E]\" + super.toString() + \"(\" + DateTimeParser.convertDateTimeToStringUI(startDateTime)","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"justincred"},"content":"                + \" - \" + DateTimeParser.convertDateTimeToStringUI(endDateTime) + \")\";","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"justincred"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"justincred":36}},{"path":"src/main/java/tasklist/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"package tasklist;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"justincred"},"content":"    private String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"justincred"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"justincred"},"content":"    public Task(String description ,boolean isDone ) {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"justincred"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"justincred"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"justincred"},"content":"    public boolean match(String matchString) {","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"justincred"},"content":"        if (description.contains(matchString)) {","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"justincred"},"content":"            return true;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"justincred"},"content":"        } else {","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"justincred"},"content":"            return false;","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"justincred"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"justincred"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"justincred"},"content":"     * Toggles whether the task has been done","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"justincred"},"content":"     * @return String for UI","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"justincred"},"content":"    public String toggleIsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"justincred"},"content":"        isDone \u003d !isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"justincred"},"content":"        return getStatusIcon();","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"justincred"},"content":"     * Saves the task in the storage as a String","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"justincred"},"content":"     * @return string format of task to store","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"justincred"},"content":"    public String saveStorage() {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"justincred"},"content":"        String storageIsDone \u003d \"0\";","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"justincred"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"justincred"},"content":"            storageIsDone \u003d \"1\";","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"justincred"},"content":"        String details \u003d storageIsDone + \"|\" + description;","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"justincred"},"content":"        return details;","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"justincred"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"justincred"},"content":"    public String toString(){","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"justincred"},"content":"        return \"[\"+getStatusIcon()+\"]\"+ description;","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"justincred"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"justincred":49}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"package tasklist;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"import jux.JuxException;","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"justincred"},"content":"import parser.Parser;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"justincred"},"content":"import ui.Ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":"public class TaskList {","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"justincred"},"content":"    private int size \u003d 0;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"justincred"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"justincred"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"justincred"},"content":"        size \u003d (taskList.size());","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"justincred"},"content":"     * Updates the size of array and","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"justincred"},"content":"     * returns the size of array","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"justincred"},"content":"     * @return size  of array","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"justincred"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"justincred"},"content":"        size \u003d taskList.size();","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"justincred"},"content":"        return size;","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"justincred"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"justincred"},"content":"        return taskList;","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"justincred"},"content":"     * Finds tasks with description containing the string to find","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"justincred"},"content":"     * @param taskToFind the user input string of task","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"justincred"},"content":"     * @return an arraylist of the task that matches","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"justincred"},"content":"    public ArrayList\u003cTask\u003e findTask(String taskToFind) {","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"justincred"},"content":"        ArrayList\u003cTask\u003e taskArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"justincred"},"content":"        for (int i \u003d 0; i \u003c getSize(); i++) {","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"justincred"},"content":"            if (taskList.get(i).match(taskToFind)) {","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"justincred"},"content":"                taskArray.add(taskList.get(i));","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"justincred"},"content":"            }","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"justincred"},"content":"        return taskArray;","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"justincred"},"content":"     * Returns whether the task is checked","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"justincred"},"content":"     * @param num index of task","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"justincred"},"content":"     * @return boolean value of whether the task is checked","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"justincred"},"content":"    public boolean isIndexedTaskChecked(int num) {","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"justincred"},"content":"        return taskList.get(num).getStatusIcon().equals(\"X\");","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"justincred"},"content":"     * Toggles whether the indexed task is marked","lastModifiedDate":"2024-02-08"},{"lineNumber":55,"author":{"gitId":"justincred"},"content":"     * @param num index of task","lastModifiedDate":"2024-02-08"},{"lineNumber":56,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":57,"author":{"gitId":"justincred"},"content":"    public void toggleIndexedTask(int num) {","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"justincred"},"content":"        taskList.get(num).toggleIsDone();","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"justincred"},"content":"     * Prints the task when it is marked","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"justincred"},"content":"     * @param ui the ui","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"justincred"},"content":"     * @param num the index for the task","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"justincred"},"content":"     * @return the marked task string","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":67,"author":{"gitId":"justincred"},"content":"    public String printTaskMarked(Ui ui, int num) {","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"justincred"},"content":"        Task task \u003d taskList.get(num);","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"justincred"},"content":"        assert task.getStatusIcon().equals(\"X\"):\"task should already be marked\" ;","lastModifiedDate":"2024-02-14"},{"lineNumber":70,"author":{"gitId":"justincred"},"content":"        return ui.printTaskMarked(task.toString());","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":73,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"justincred"},"content":"     * Prints the task when it is unmarked","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"justincred"},"content":"     * @param ui the ui","lastModifiedDate":"2024-02-08"},{"lineNumber":76,"author":{"gitId":"justincred"},"content":"     * @param num the index for the task","lastModifiedDate":"2024-02-08"},{"lineNumber":77,"author":{"gitId":"justincred"},"content":"     * @return the unmarked task string","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"justincred"},"content":"    public String printTaskUnMarked(Ui ui, int num) {","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"justincred"},"content":"        Task task \u003d taskList.get(num);","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"justincred"},"content":"        assert task.getStatusIcon().equals(\" \"):\"task should be unmarked\" ;","lastModifiedDate":"2024-02-14"},{"lineNumber":82,"author":{"gitId":"justincred"},"content":"        return ui.printTaskUnMarked(task.toString());","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":85,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":86,"author":{"gitId":"justincred"},"content":"     * Remove indexed task from tasklist and","lastModifiedDate":"2024-02-08"},{"lineNumber":87,"author":{"gitId":"justincred"},"content":"     * print to user","lastModifiedDate":"2024-02-08"},{"lineNumber":88,"author":{"gitId":"justincred"},"content":"     * @param ui the ui","lastModifiedDate":"2024-02-08"},{"lineNumber":89,"author":{"gitId":"justincred"},"content":"     * @param num the index of the task","lastModifiedDate":"2024-02-08"},{"lineNumber":90,"author":{"gitId":"justincred"},"content":"     * @return the deleted task","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":92,"author":{"gitId":"justincred"},"content":"    public String deleteTask(Ui ui, int num) {","lastModifiedDate":"2024-02-11"},{"lineNumber":93,"author":{"gitId":"justincred"},"content":"        Task task \u003d taskList.get(num);","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"justincred"},"content":"        taskList.remove(num);","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"justincred"},"content":"        String taskString \u003d task.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"justincred"},"content":"        String output \u003d ui.printDeletedTask(taskString);","lastModifiedDate":"2024-02-11"},{"lineNumber":97,"author":{"gitId":"justincred"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"justincred"},"content":"            output +\u003d \"\\n\" + ui.printEmptyTaskList();","lastModifiedDate":"2024-02-11"},{"lineNumber":99,"author":{"gitId":"justincred"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"justincred"},"content":"            output +\u003d \"\\n\" + ui.printNumberOfTasks(getSize());","lastModifiedDate":"2024-02-11"},{"lineNumber":101,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"justincred"},"content":"        return output;","lastModifiedDate":"2024-02-11"},{"lineNumber":103,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"justincred"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"justincred"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"justincred"},"content":"    public boolean isEmpty(){","lastModifiedDate":"2024-02-07"},{"lineNumber":108,"author":{"gitId":"justincred"},"content":"        return size \u003d\u003d 0;","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":110,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":111,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":112,"author":{"gitId":"justincred"},"content":"     * Add the corresponding task to the tasklist","lastModifiedDate":"2024-02-08"},{"lineNumber":113,"author":{"gitId":"justincred"},"content":"     * @param ui the ui","lastModifiedDate":"2024-02-08"},{"lineNumber":114,"author":{"gitId":"justincred"},"content":"     * @param typeOfTask the type of task","lastModifiedDate":"2024-02-08"},{"lineNumber":115,"author":{"gitId":"justincred"},"content":"     * @param task the task information to add","lastModifiedDate":"2024-02-08"},{"lineNumber":116,"author":{"gitId":"justincred"},"content":"     * @return the task added","lastModifiedDate":"2024-02-11"},{"lineNumber":117,"author":{"gitId":"justincred"},"content":"     * @throws JuxException","lastModifiedDate":"2024-02-08"},{"lineNumber":118,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":119,"author":{"gitId":"justincred"},"content":"    public String addTask(Ui ui, String typeOfTask, String task) throws JuxException {","lastModifiedDate":"2024-02-11"},{"lineNumber":120,"author":{"gitId":"justincred"},"content":"        if (typeOfTask.equals(Parser.TASK_TODO)) {","lastModifiedDate":"2024-02-08"},{"lineNumber":121,"author":{"gitId":"justincred"},"content":"            addTodo(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":122,"author":{"gitId":"justincred"},"content":"        } else if (typeOfTask.equals(Parser.TASK_DEADLINE)) {","lastModifiedDate":"2024-02-08"},{"lineNumber":123,"author":{"gitId":"justincred"},"content":"            addDeadline(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":124,"author":{"gitId":"justincred"},"content":"        } else if (typeOfTask.equals(Parser.TASK_EVENT)){","lastModifiedDate":"2024-02-08"},{"lineNumber":125,"author":{"gitId":"justincred"},"content":"            addEvent(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":126,"author":{"gitId":"justincred"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":127,"author":{"gitId":"justincred"},"content":"            throw new JuxException(\"SORRY I DO NOT KNOW WHAT THAT MEANS, PLEASE TRY AGAIN!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":128,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":129,"author":{"gitId":"justincred"},"content":"        String output \u003d ui.printTaskAfterword(task);","lastModifiedDate":"2024-02-11"},{"lineNumber":130,"author":{"gitId":"justincred"},"content":"        output +\u003d \"\\n\" + ui.printNumberOfTasks(this.getSize());","lastModifiedDate":"2024-02-11"},{"lineNumber":131,"author":{"gitId":"justincred"},"content":"        return output;","lastModifiedDate":"2024-02-11"},{"lineNumber":132,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":133,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":134,"author":{"gitId":"justincred"},"content":"    public void addTodo(String task) throws JuxException {","lastModifiedDate":"2024-02-07"},{"lineNumber":135,"author":{"gitId":"justincred"},"content":"        taskList.add(new Todo(Parser.parseTodo(task)));","lastModifiedDate":"2024-02-07"},{"lineNumber":136,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":137,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":138,"author":{"gitId":"justincred"},"content":"    public void addDeadline(String task) throws JuxException {","lastModifiedDate":"2024-02-07"},{"lineNumber":139,"author":{"gitId":"justincred"},"content":"        String[] args \u003d Parser.parseDeadline(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":140,"author":{"gitId":"justincred"},"content":"        assert args.length \u003d\u003d 2 : \"Deadline should have description and time!\";","lastModifiedDate":"2024-02-14"},{"lineNumber":141,"author":{"gitId":"justincred"},"content":"        taskList.add(new Deadline(args[0], args[1]));","lastModifiedDate":"2024-02-07"},{"lineNumber":142,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":143,"author":{"gitId":"justincred"},"content":"    public void addEvent(String task) throws JuxException {","lastModifiedDate":"2024-02-07"},{"lineNumber":144,"author":{"gitId":"justincred"},"content":"        String[] args \u003d Parser.parseEvent(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":145,"author":{"gitId":"justincred"},"content":"        assert args.length \u003d\u003d 2 : \"Event should have description and time range!\";","lastModifiedDate":"2024-02-14"},{"lineNumber":146,"author":{"gitId":"justincred"},"content":"        taskList.add(new Event(args[0],args[1],args[2]));","lastModifiedDate":"2024-02-07"},{"lineNumber":147,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":148,"author":{"gitId":"justincred"},"content":"    public String showListWithIndexing(Ui ui) {","lastModifiedDate":"2024-02-11"},{"lineNumber":149,"author":{"gitId":"justincred"},"content":"        return ui.printListWithIndexing(taskList);","lastModifiedDate":"2024-02-11"},{"lineNumber":150,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":151,"author":{"gitId":"justincred"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"justincred":151}},{"path":"src/main/java/tasklist/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"package tasklist;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"justincred"},"content":"public class Todo extends Task{","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"    public Todo(String desc) {","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":"        super(desc);","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"    public Todo(String desc, boolean isDone) {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"justincred"},"content":"        super(desc, isDone);","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"justincred"},"content":"    @Override","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"justincred"},"content":"    public String saveStorage(){","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"justincred"},"content":"        String details \u003d super.saveStorage();","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"justincred"},"content":"        details \u003d \"T|\" + details;","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"justincred"},"content":"        return details;","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"justincred"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"justincred"},"content":"    public String toString() {","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"justincred"},"content":"        return \"[T]\" + super.toString() ;","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"justincred"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"justincred":22}},{"path":"src/main/java/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"package ui;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"justincred"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"justincred"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"justincred"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"justincred"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"justincred"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"justincred"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"justincred"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"justincred"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"justincred"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"justincred"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"justincred"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"justincred"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"justincred"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"justincred"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"justincred"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"justincred"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"justincred"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"justincred"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"justincred"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"justincred"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"justincred"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"justincred"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"justincred"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"justincred"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"justincred"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"justincred"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"justincred"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"justincred"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"justincred"},"content":"    private void flip() {","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"justincred"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"justincred"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"justincred"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"justincred"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"justincred"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"justincred"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"justincred"},"content":"    public static DialogBox getJuxDialog(String text, Image img) {","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"justincred"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"justincred"},"content":"        db.flip();","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"justincred"},"content":"        return db;","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"justincred"},"content":"}","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"justincred":61}},{"path":"src/main/java/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"package ui;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"justincred"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"justincred"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"justincred"},"content":"import jux.Jux;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"justincred"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"justincred"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"justincred"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"justincred"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"justincred"},"content":"    private Jux jux \u003d new Jux(\"data/Jux.txt\");","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"justincred"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"justincred"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"justincred"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"justincred"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"justincred"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"justincred"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"justincred"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"justincred"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setJux(jux);","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"justincred"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().welcomeMessage(); // initialise the task list here instead of main window","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"justincred"},"content":"            stage.show();","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"justincred"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"justincred"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"justincred"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"justincred":33}},{"path":"src/main/java/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"package ui;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"justincred"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"justincred"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"justincred"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"justincred"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"justincred"},"content":"import jux.Jux;","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"justincred"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"justincred"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"justincred"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"justincred"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"justincred"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"justincred"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"justincred"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"justincred"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"justincred"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"justincred"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"justincred"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"justincred"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"justincred"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"justincred"},"content":"    private Jux jux;","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"justincred"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/cat.png\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"justincred"},"content":"    private Image juxImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/dog.png\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"justincred"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"justincred"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"justincred"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"justincred"},"content":"    public void setJux(Jux jux) {","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"justincred"},"content":"        this.jux \u003d jux;","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"justincred"},"content":"     * Creates the initial dialog box by Jux, only contains the welcome message then","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"justincred"},"content":"     * appends to the dialog container. Located as a child in the fxml file","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":48,"author":{"gitId":"justincred"},"content":"    public void welcomeMessage(){","lastModifiedDate":"2024-02-12"},{"lineNumber":49,"author":{"gitId":"justincred"},"content":"        String message \u003d \"Hello! I\u0027m Jux\\n\" +","lastModifiedDate":"2024-02-14"},{"lineNumber":50,"author":{"gitId":"justincred"},"content":"                \"What can I do for you?\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"justincred"},"content":"        if (!jux.isNewStart()) {","lastModifiedDate":"2024-02-14"},{"lineNumber":52,"author":{"gitId":"justincred"},"content":"            message \u003d \"Previously on Jux....\" + \"\\n\";","lastModifiedDate":"2024-02-14"},{"lineNumber":53,"author":{"gitId":"justincred"},"content":"            message +\u003d jux.getStorageList();","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"justincred"},"content":"        dialogContainer.getChildren().add(DialogBox.getJuxDialog(message, juxImage));","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"justincred"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"justincred"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"justincred"},"content":"     *","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"justincred"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"justincred"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"justincred"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"justincred"},"content":"        String response \u003d jux.getResponse(input);","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"justincred"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"justincred"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"justincred"},"content":"                DialogBox.getJuxDialog(response, juxImage)","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"justincred"},"content":"        );","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"justincred"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"justincred"},"content":"}","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"justincred":74}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"package ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"import tasklist.Task;","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"justincred"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":"public class Ui {","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":"    private static final String ALLTASKSHEADER \u003d \"Here are the tasks in your list!\";","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"justincred"},"content":"     * Ui class that contains the strings to be printed in the Gui","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"justincred"},"content":"    public Ui() {","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"justincred"},"content":"    public void showLoadingError(String error) {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"justincred"},"content":"        System.out.println(error);","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"justincred"},"content":"     * Print goodbye message upon exiting the program","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"justincred"},"content":"    public String showGoodbye() {","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"justincred"},"content":"        String end \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"justincred"},"content":"                \"Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"justincred"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"justincred"},"content":"        return end;","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"justincred"},"content":"     * Print the task as marked","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"justincred"},"content":"     * @param task","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"justincred"},"content":"     * @return the marked task","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"justincred"},"content":"    public String printTaskMarked(String task) {","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"justincred"},"content":"        String output \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"justincred"},"content":"        return output + \"\\n\" + task;","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"justincred"},"content":"     * Print the task as unmarked","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"justincred"},"content":"     * @param task","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"justincred"},"content":"     * @return the unmarked task","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"justincred"},"content":"    public String printTaskUnMarked(String task) {","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"justincred"},"content":"        String output \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"justincred"},"content":"        return output + \"\\n\" +task;","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"justincred"},"content":"     * Print the task list","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"justincred"},"content":"     * @param taskList","lastModifiedDate":"2024-02-08"},{"lineNumber":51,"author":{"gitId":"justincred"},"content":"     * @String the task list","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":53,"author":{"gitId":"justincred"},"content":"    public String printList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"justincred"},"content":"        String output \u003d \"\";","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"justincred"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"justincred"},"content":"            output +\u003d (taskList.get(i)) + \"\\n\";","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"justincred"},"content":"        return output;","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":61,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":62,"author":{"gitId":"justincred"},"content":"     * Print the deleted task","lastModifiedDate":"2024-02-08"},{"lineNumber":63,"author":{"gitId":"justincred"},"content":"     * @param task","lastModifiedDate":"2024-02-08"},{"lineNumber":64,"author":{"gitId":"justincred"},"content":"     * @return the deleted task string","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"justincred"},"content":"    public String printDeletedTask(String task) {","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"justincred"},"content":"        String output \u003d \"Noted. I\u0027ve removed this task:\" + \"\\n\" + task;","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"justincred"},"content":"        return output;","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":71,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":72,"author":{"gitId":"justincred"},"content":"     * Returns a string that the task list is empty","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"justincred"},"content":"     * @return the string","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":75,"author":{"gitId":"justincred"},"content":"    public String printEmptyTaskList() {","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"justincred"},"content":"        return (\"Now, your list is empty!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":79,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":80,"author":{"gitId":"justincred"},"content":"     * Returns string after a task is added","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"justincred"},"content":"     * @param task the task in string form","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"justincred"},"content":"     * @return the task string","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":84,"author":{"gitId":"justincred"},"content":"    public String printTaskAfterword(String task) {","lastModifiedDate":"2024-02-11"},{"lineNumber":85,"author":{"gitId":"justincred"},"content":"        String output \u003d \"You entered:\" + \"\\n\" ;","lastModifiedDate":"2024-02-11"},{"lineNumber":86,"author":{"gitId":"justincred"},"content":"        assert task.length() !\u003d 0 : \"task should not be empty\";","lastModifiedDate":"2024-02-14"},{"lineNumber":87,"author":{"gitId":"justincred"},"content":"        output +\u003d task;","lastModifiedDate":"2024-02-11"},{"lineNumber":88,"author":{"gitId":"justincred"},"content":"        return output;","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":91,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":92,"author":{"gitId":"justincred"},"content":"     * Returns a string saying task not found","lastModifiedDate":"2024-02-11"},{"lineNumber":93,"author":{"gitId":"justincred"},"content":"     * @return the string","lastModifiedDate":"2024-02-11"},{"lineNumber":94,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":95,"author":{"gitId":"justincred"},"content":"    public String printNotFound() {","lastModifiedDate":"2024-02-11"},{"lineNumber":96,"author":{"gitId":"justincred"},"content":"        return \"Task not found!\";","lastModifiedDate":"2024-02-11"},{"lineNumber":97,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":98,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"justincred"},"content":"     * Returns the number of tasks","lastModifiedDate":"2024-02-11"},{"lineNumber":100,"author":{"gitId":"justincred"},"content":"     * @param num","lastModifiedDate":"2024-02-08"},{"lineNumber":101,"author":{"gitId":"justincred"},"content":"     * @return the total number of tasks remaining","lastModifiedDate":"2024-02-11"},{"lineNumber":102,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":103,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":104,"author":{"gitId":"justincred"},"content":"    public String printNumberOfTasks(int num) {","lastModifiedDate":"2024-02-11"},{"lineNumber":105,"author":{"gitId":"justincred"},"content":"        String output \u003d \"You now have \" + num + \" tasks remaining\";","lastModifiedDate":"2024-02-11"},{"lineNumber":106,"author":{"gitId":"justincred"},"content":"        if (num \u003d\u003d 1) {","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"justincred"},"content":"            output \u003d \"You now have 1 task remaining\";","lastModifiedDate":"2024-02-11"},{"lineNumber":108,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"justincred"},"content":"        return output;","lastModifiedDate":"2024-02-11"},{"lineNumber":110,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":111,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":112,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":113,"author":{"gitId":"justincred"},"content":"     * Print the task with indexing","lastModifiedDate":"2024-02-08"},{"lineNumber":114,"author":{"gitId":"justincred"},"content":"     * @param taskList","lastModifiedDate":"2024-02-08"},{"lineNumber":115,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":116,"author":{"gitId":"justincred"},"content":"    public String printListWithIndexing(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2024-02-11"},{"lineNumber":117,"author":{"gitId":"justincred"},"content":"        String output \u003d ALLTASKSHEADER;","lastModifiedDate":"2024-02-11"},{"lineNumber":118,"author":{"gitId":"justincred"},"content":"        for (int i \u003d 0; i \u003c taskList.size();i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":119,"author":{"gitId":"justincred"},"content":"            int j \u003d i + 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":120,"author":{"gitId":"justincred"},"content":"            output +\u003d\"\\n\" + j + \".\" +  taskList.get(i);","lastModifiedDate":"2024-02-11"},{"lineNumber":121,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":122,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":123,"author":{"gitId":"justincred"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-02-12"},{"lineNumber":124,"author":{"gitId":"justincred"},"content":"            return printEmptyTaskList();","lastModifiedDate":"2024-02-12"},{"lineNumber":125,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":126,"author":{"gitId":"justincred"},"content":"        return output;","lastModifiedDate":"2024-02-11"},{"lineNumber":127,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":128,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":129,"author":{"gitId":"justincred"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"justincred":129}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"justincred"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"justincred"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"justincred"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"justincred"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"justincred"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"justincred"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"justincred"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"justincred"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"justincred"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"justincred"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"justincred":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"justincred"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"justincred"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"justincred"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ui.MainWindow\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"justincred"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"justincred"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"justincred"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"justincred"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"justincred"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"justincred"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"justincred"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"justincred"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"justincred"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"justincred"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"justincred":20}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"package parser;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"justincred"},"content":"import jux.JuxException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"justincred"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"justincred"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"justincred"},"content":"    public ParserTest() {","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"justincred"},"content":"    @Test","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"justincred"},"content":"    public void parseTodo_inputLenMoreThan5_success() throws Exception {","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"justincred"},"content":"        assertEquals(\"lollypop\", Parser.parseTodo(\"todo lollypop\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"justincred"},"content":"    @Test","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"justincred"},"content":"    public void parseTodo_inputLenLessThan5_failure() {","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"justincred"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"justincred"},"content":"            assertEquals(\"lollypop\", Parser.parseTodo(\"todo\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"justincred"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"justincred"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"justincred"},"content":"            assertEquals(\"PLEASE INSERT DESCRIPTION FOR YOUR TODO\", e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":25,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"justincred"},"content":"    @Test","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"justincred"},"content":"    public void parseEvent_correctInput_success() throws Exception {","lastModifiedDate":"2024-02-08"},{"lineNumber":30,"author":{"gitId":"justincred"},"content":"        String[] expected \u003d {\"return book \", \"2024-05-05 1800\", \"2024-06-06\"};","lastModifiedDate":"2024-02-08"},{"lineNumber":31,"author":{"gitId":"justincred"},"content":"        assertArrayEquals(expected, Parser.parseEvent(\"event return book /2024-05-05 1800/2024-06-06\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":33,"author":{"gitId":"justincred"},"content":"    @Test","lastModifiedDate":"2024-02-08"},{"lineNumber":34,"author":{"gitId":"justincred"},"content":"    public void parseEvent_wrongInput_throwException() {","lastModifiedDate":"2024-02-08"},{"lineNumber":35,"author":{"gitId":"justincred"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":36,"author":{"gitId":"justincred"},"content":"            String[] expected \u003d {\"return book \", \"2024-05-05\", \"2024-06-06\"};","lastModifiedDate":"2024-02-08"},{"lineNumber":37,"author":{"gitId":"justincred"},"content":"            assertArrayEquals(expected, Parser.parseEvent(\"event\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":38,"author":{"gitId":"justincred"},"content":"            fail();","lastModifiedDate":"2024-02-08"},{"lineNumber":39,"author":{"gitId":"justincred"},"content":"        } catch (JuxException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"justincred"},"content":"            assertEquals( \"PLEASE INSERT DESCRIPTION FOR YOUR EVENT\", e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"justincred"},"content":"        try {","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"justincred"},"content":"            String[] expected \u003d {\"return book \", \"2024-05-05\", \"2024-06-06\"};","lastModifiedDate":"2024-02-08"},{"lineNumber":44,"author":{"gitId":"justincred"},"content":"            assertArrayEquals(expected, Parser.parseEvent(\"event return book 2024-05-05 2024-06-06\"));","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"justincred"},"content":"            fail();","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"justincred"},"content":"        } catch (JuxException e) {","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"justincred"},"content":"            assertEquals(\"insert time for event such as event /monday /sunday\", e.getMessage());","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"justincred"},"content":"        }","lastModifiedDate":"2024-02-08"},{"lineNumber":49,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":50,"author":{"gitId":"justincred"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"justincred":50}},{"path":"src/test/java/tasklist/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"package tasklist;","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":3,"author":{"gitId":"justincred"},"content":"import jux.JuxException;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"justincred"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"public class DeadlineTest {","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"justincred"},"content":"     * Tests whether the Deadline task prints the correct String","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"justincred"},"content":"    @Test","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"justincred"},"content":"    public void deadlineToString_inputCorrectDateTime_success() throws Exception {","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"justincred"},"content":"            Task deadline \u003d new Deadline(\"return book\", \"2024-05-05\");","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"justincred"},"content":"            String deadlineSuccess \u003d deadline.toString();","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"justincred"},"content":"            assertEquals(deadlineSuccess, \"[D][ ]return book(May 05 2024)\");","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"justincred"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"justincred"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"justincred"},"content":"     * Tests whether the Deadline saves the correct String","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"justincred"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"justincred"},"content":"    @Test","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"justincred"},"content":"    public void deadlineStorageToString_inputCorrectDateTime_success() throws Exception {","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"justincred"},"content":"            Task deadline \u003d new Deadline(\"return book\", \"2024-05-05\");","lastModifiedDate":"2024-02-08"},{"lineNumber":26,"author":{"gitId":"justincred"},"content":"            String deadlineSuccess \u003d deadline.saveStorage();","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"justincred"},"content":"            assertEquals(deadlineSuccess, \"D|0|return book|2024-05-05T00:00:00\");","lastModifiedDate":"2024-02-08"},{"lineNumber":28,"author":{"gitId":"justincred"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"justincred"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"justincred":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"justincred"},"content":"todo hi","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"justincred"},"content":"deadline hw /monday","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"justincred"},"content":"event jb /tues /wed","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"justincred"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"justincred"},"content":"mark 2","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"justincred"},"content":"unmark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"justincred"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"justincred"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"justincred":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"justincred"},"content":"javac  -cp \\Desktop\\2101\\ip\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"justincred"},"content":"java -classpath \\Desktop\\2101\\ip\\bin Jux \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"justincred":2,"-":19}}]
