[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"# duke.Duke project template","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"peienlim"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"peienlim":2,"-":22}},{"path":"logTasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"T | 1 | hi","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"peienlim"},"content":"T | 0 | hihihi","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"T | 0 | hihi","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"peienlim":3}},{"path":"logs.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"[[T][ ] heyhey, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"peienlim":1}},{"path":"logs1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"T | 1 | hihihi","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"peienlim"},"content":"T | 0 | hihihihihihihihihi","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"peienlim":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"package duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"import duke.command.Parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":"import duke.command.Storage;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"peienlim"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"peienlim"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"peienlim"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"peienlim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"peienlim"},"content":"import duke.task.Todo;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"peienlim"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"peienlim"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"peienlim"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"peienlim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"peienlim"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"peienlim"},"content":" * Represents the main Duke application class responsible for running the program.","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"peienlim"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"peienlim"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"peienlim"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"peienlim"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"peienlim"},"content":"     * Constructs a Duke object with the specified file path.","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"peienlim"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"peienlim"},"content":"     * @param filePath The file path for storing task data.","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"peienlim"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"peienlim"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"peienlim"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"peienlim"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"peienlim"},"content":"     * Runs the Duke application.","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"peienlim"},"content":"    public void run() {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"peienlim"},"content":"        storage.getFileContents(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"peienlim"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"peienlim"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"peienlim"},"content":"        while (true) {","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"peienlim"},"content":"            try {","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"peienlim"},"content":"                Task[] taskArr \u003d tasks.getTasks();","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"peienlim"},"content":"                int counter \u003d tasks.getCounter();","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"peienlim"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":53,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"peienlim"},"content":"                ui.showMessage(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"peienlim"},"content":"                Object[] parseRes \u003d Parser.parseCommand(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"peienlim"},"content":"                String type \u003d (String) parseRes[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"peienlim"},"content":"                if (parseRes.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"peienlim"},"content":"                    if (Objects.equals(type, \"bye\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"peienlim"},"content":"                        ui.showByeMessage();","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"peienlim"},"content":"                        break;","lastModifiedDate":"2024-01-25"},{"lineNumber":63,"author":{"gitId":"peienlim"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":64,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"peienlim"},"content":"                    if (Objects.equals(type, \"list\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"peienlim"},"content":"                        ui.showTaskList(taskArr, counter);","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"peienlim"},"content":"                        continue;","lastModifiedDate":"2024-01-25"},{"lineNumber":68,"author":{"gitId":"peienlim"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":69,"author":{"gitId":"peienlim"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":71,"author":{"gitId":"peienlim"},"content":"                if (parseRes.length \u003e 1) {","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"peienlim"},"content":"                    if (Objects.equals(type, \"mark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"peienlim"},"content":"                        int taskNumber \u003d (int) parseRes[1];","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"peienlim"},"content":"                        if (taskNumber \u003e\u003d 1 \u0026\u0026 taskNumber \u003c\u003d counter) {","lastModifiedDate":"2024-01-25"},{"lineNumber":75,"author":{"gitId":"peienlim"},"content":"                            tasks.markTaskAsDone(taskNumber);","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"peienlim"},"content":"                            ui.showMarkTaskDoneMessage(taskArr[taskNumber]);","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"peienlim"},"content":"                        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":79,"author":{"gitId":"peienlim"},"content":"                            ui.showMessage(\"UH OH! Invalid task number, \" +","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"peienlim"},"content":"                                    \"please provide a valid task number!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"peienlim"},"content":"                        }","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"peienlim"},"content":"                        continue;","lastModifiedDate":"2024-01-25"},{"lineNumber":83,"author":{"gitId":"peienlim"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":84,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"peienlim"},"content":"                    if (Objects.equals(type, \"delete\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"peienlim"},"content":"                        int taskNumber \u003d (int) parseRes[1];","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"peienlim"},"content":"                        if (taskNumber \u003e\u003d 1 \u0026\u0026 taskNumber \u003c\u003d counter) {","lastModifiedDate":"2024-01-25"},{"lineNumber":88,"author":{"gitId":"peienlim"},"content":"                            ui.showRemoveTaskMessage(taskArr[taskNumber - 1], counter);","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"peienlim"},"content":"                            tasks.deleteTask(counter - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"peienlim"},"content":"                        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":92,"author":{"gitId":"peienlim"},"content":"                            throw new DukeException(\"UH OH! Invalid task number, \" +","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"peienlim"},"content":"                                    \"please provide a valid task number!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"peienlim"},"content":"                        }","lastModifiedDate":"2024-01-25"},{"lineNumber":95,"author":{"gitId":"peienlim"},"content":"                        continue;","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"peienlim"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":97,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":98,"author":{"gitId":"peienlim"},"content":"                    if (Objects.equals(type, \"find\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"peienlim"},"content":"                        String keyword \u003d (String) parseRes[1];","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"peienlim"},"content":"                        Task[] tasksToPrint \u003d tasks.searchKeyWord(keyword);","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"peienlim"},"content":"                        if (tasksToPrint[0] !\u003d null) {","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"peienlim"},"content":"                            ui.showTasksContainingKeyword(tasksToPrint);","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"peienlim"},"content":"                        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"peienlim"},"content":"                            throw new DukeException(\"UH OH! No tasks containing this keyword!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"peienlim"},"content":"                        }","lastModifiedDate":"2024-02-07"},{"lineNumber":106,"author":{"gitId":"peienlim"},"content":"                        continue;","lastModifiedDate":"2024-02-07"},{"lineNumber":107,"author":{"gitId":"peienlim"},"content":"                    }","lastModifiedDate":"2024-02-07"},{"lineNumber":108,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":109,"author":{"gitId":"peienlim"},"content":"                    if (Objects.equals(type, \"todo\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"peienlim"},"content":"                        String taskDesc \u003d (String) parseRes[1];","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":112,"author":{"gitId":"peienlim"},"content":"                        // create new to do task and add to list of tasks","lastModifiedDate":"2024-02-07"},{"lineNumber":113,"author":{"gitId":"peienlim"},"content":"                        Task t \u003d new Todo(taskDesc);","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"peienlim"},"content":"                        tasks.addTask(t);","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":116,"author":{"gitId":"peienlim"},"content":"                        ui.showAddTaskMessage(t, counter);","lastModifiedDate":"2024-02-05"},{"lineNumber":117,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":118,"author":{"gitId":"peienlim"},"content":"                    } else if (Objects.equals(type, \"deadline\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"peienlim"},"content":"                        String taskDesc \u003d (String) parseRes[1];","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"peienlim"},"content":"                        LocalDate by \u003d (LocalDate) parseRes[2];","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"peienlim"},"content":"                        // create new deadline task and add to list of tasks","lastModifiedDate":"2024-02-07"},{"lineNumber":123,"author":{"gitId":"peienlim"},"content":"                        Task t \u003d new Deadline(taskDesc, by);","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"peienlim"},"content":"                        tasks.addTask(t);","lastModifiedDate":"2024-02-01"},{"lineNumber":125,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":126,"author":{"gitId":"peienlim"},"content":"                        ui.showAddTaskMessage(t, counter);","lastModifiedDate":"2024-02-05"},{"lineNumber":127,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":128,"author":{"gitId":"peienlim"},"content":"                    } else if (Objects.equals(type, \"event\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"peienlim"},"content":"                        String taskDesc \u003d (String) parseRes[1];","lastModifiedDate":"2024-02-01"},{"lineNumber":130,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":131,"author":{"gitId":"peienlim"},"content":"                        LocalDate fromDate \u003d (LocalDate) parseRes[2];","lastModifiedDate":"2024-02-01"},{"lineNumber":132,"author":{"gitId":"peienlim"},"content":"                        String fromTime \u003d (String) parseRes[3];","lastModifiedDate":"2024-02-01"},{"lineNumber":133,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":134,"author":{"gitId":"peienlim"},"content":"                        LocalDate toDate \u003d (LocalDate) parseRes[4];","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"peienlim"},"content":"                        String toTime \u003d (String) parseRes[5];","lastModifiedDate":"2024-02-01"},{"lineNumber":136,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"peienlim"},"content":"                        // create new event task and add to list of tasks","lastModifiedDate":"2024-02-07"},{"lineNumber":138,"author":{"gitId":"peienlim"},"content":"                        Task t \u003d new Event(taskDesc, fromDate, fromTime, toDate, toTime);","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"peienlim"},"content":"                        tasks.addTask(t);","lastModifiedDate":"2024-02-01"},{"lineNumber":140,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":141,"author":{"gitId":"peienlim"},"content":"                        ui.showAddTaskMessage(t, counter);","lastModifiedDate":"2024-02-05"},{"lineNumber":142,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":143,"author":{"gitId":"peienlim"},"content":"                    } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":144,"author":{"gitId":"peienlim"},"content":"                        throw new DukeException(\"UH OH! I don\u0027t understand what you mean.. sorry D:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":145,"author":{"gitId":"peienlim"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":146,"author":{"gitId":"peienlim"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":147,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":148,"author":{"gitId":"peienlim"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":149,"author":{"gitId":"peienlim"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"peienlim"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":154,"author":{"gitId":"peienlim"},"content":"        // store tasks for this run into file in hard disk","lastModifiedDate":"2024-02-07"},{"lineNumber":155,"author":{"gitId":"peienlim"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2024-02-01"},{"lineNumber":156,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":157,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":158,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":159,"author":{"gitId":"peienlim"},"content":"     * The entry point for running the Duke application.","lastModifiedDate":"2024-02-07"},{"lineNumber":160,"author":{"gitId":"peienlim"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":161,"author":{"gitId":"peienlim"},"content":"     * @param args The command-line arguments.","lastModifiedDate":"2024-02-07"},{"lineNumber":162,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":163,"author":{"gitId":"peienlim"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-01"},{"lineNumber":164,"author":{"gitId":"peienlim"},"content":"        new Duke(\"./tasks.txt\").run();","lastModifiedDate":"2024-02-01"},{"lineNumber":165,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":166,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":167,"author":{"gitId":"peienlim"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":168,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"peienlim":167,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"package duke;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"peienlim"},"content":" * Represents a custom exception class for Duke application.","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"peienlim"},"content":" * It extends the Exception class.","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"peienlim"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"peienlim"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"peienlim"},"content":"     * Constructs a DukeException with the specified detail message.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"peienlim"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"peienlim"},"content":"     * @param message the detail message (which is saved for later retrieval by the Throwable.getMessage() method).","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"peienlim"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"peienlim"},"content":"        super(message);","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"peienlim"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"peienlim":17}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"package duke.command;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"peienlim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"peienlim"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"peienlim"},"content":" * The Parser class is responsible for parsing user input commands and it returns an array of","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"peienlim"},"content":" * objects based on the command type. This returned array contains the relevant fields for the","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"peienlim"},"content":" * particular command type and can be accessed to determine what is to be executed next.","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"peienlim"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"peienlim"},"content":"public class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"peienlim"},"content":"     * Parses the user input of String format and returns an array of Objects based on","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"peienlim"},"content":"     * the command type.","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"peienlim"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"peienlim"},"content":"     * @param input The user input command to be parsed.","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"peienlim"},"content":"     * @return An array of Objects corresponding to the parsed command.","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"peienlim"},"content":"     * @throws DukeException If the input command is invalid or cannot be parsed.","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"peienlim"},"content":"    public static Object[] parseCommand(String input) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"peienlim"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"peienlim"},"content":"            return new Object[] { \"bye\" };","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"peienlim"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"peienlim"},"content":"            return new Object[] { \"list\" };","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"peienlim"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"peienlim"},"content":"            return parseTodoCommand(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"peienlim"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"peienlim"},"content":"            return parseDeadlineCommand(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"peienlim"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"peienlim"},"content":"            return parseEventCommand(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"peienlim"},"content":"        } else if (input.startsWith(\"mark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"peienlim"},"content":"            return parseMarkCommand(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"peienlim"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"peienlim"},"content":"            return parseDeleteCommand(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"peienlim"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"peienlim"},"content":"            return parseFindCommand(input);","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"peienlim"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"peienlim"},"content":"            throw new DukeException(\"UH OH! I don\u0027t understand what you mean.. sorry D:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"peienlim"},"content":"    private static Object[] parseTodoCommand(String input) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"peienlim"},"content":"        String description \u003d input.substring(5).trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"peienlim"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"peienlim"},"content":"            throw new DukeException(\"UH OH! Description for todo cannot be empty!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"peienlim"},"content":"        return new Object[] { \"todo\", description };","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"peienlim"},"content":"    private static Object[] parseDeadlineCommand(String input) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"peienlim"},"content":"        String toSplit \u003d input.substring(9);","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"peienlim"},"content":"        String[] parts \u003d toSplit.split(\"/by\");","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"peienlim"},"content":"        String taskDesc \u003d parts[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"peienlim"},"content":"        String deadline \u003d parts[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"peienlim"},"content":"        // if there was no task description or deadline specified, throw exception","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"peienlim"},"content":"        if (taskDesc.isEmpty() || deadline.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"peienlim"},"content":"            throw new DukeException(\"UH OH! Description and deadline cannot be empty!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"peienlim"},"content":"        LocalDate by \u003d LocalDate.parse(deadline);","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"peienlim"},"content":"        return new Object[] { \"deadline\", taskDesc, by };","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"peienlim"},"content":"    private static Object[] parseEventCommand(String input) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"peienlim"},"content":"        String toSplit \u003d input.substring(6);","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"peienlim"},"content":"        String[] parts \u003d toSplit.split(\"/from\");","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"peienlim"},"content":"        String taskDesc \u003d parts[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"peienlim"},"content":"        String[] timeParts \u003d parts[1].split(\"/to\");","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"peienlim"},"content":"        // if format the to/from dates were not keyed in properly, throw exception","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"peienlim"},"content":"        if (timeParts.length !\u003d 2) {","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"peienlim"},"content":"            throw new DukeException(\"UH OH! Invalid format for event task!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"peienlim"},"content":"        String from \u003d timeParts[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"peienlim"},"content":"        String to \u003d timeParts[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"peienlim"},"content":"        // if there was no task description or to/from dates specified, throw exception","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"peienlim"},"content":"        if (taskDesc.isEmpty() || from.isEmpty() || to.isEmpty()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"peienlim"},"content":"            throw new DukeException(\"UH OH! Description/start time/end time cannot be empty!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"peienlim"},"content":"        // retrieve date and time for \"from\"","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"peienlim"},"content":"        String[] fromParts \u003d from.split(\" \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"peienlim"},"content":"        String fDate \u003d fromParts[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"peienlim"},"content":"        LocalDate fromDate \u003d LocalDate.parse(fDate);","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"peienlim"},"content":"        String fromTime \u003d fromParts[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"peienlim"},"content":"        // retrieve date and time for \"to\"","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"peienlim"},"content":"        String[] toParts \u003d to.split(\" \", 2);","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"peienlim"},"content":"        String tDate \u003d toParts[0].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"peienlim"},"content":"        LocalDate toDate \u003d LocalDate.parse(tDate);","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"peienlim"},"content":"        String toTime \u003d toParts[1].trim();","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"peienlim"},"content":"        if (toDate.isBefore(fromDate)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"peienlim"},"content":"            throw new DukeException(\"UH OH! The to date has to be later than the from date!!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"peienlim"},"content":"        return new Object[] { \"event\", taskDesc, fromDate, fromTime, toDate, toTime };","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"peienlim"},"content":"    private static Object[] parseMarkCommand(String input) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"peienlim"},"content":"        String taskNum \u003d input.substring(5);","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"peienlim"},"content":"        int taskNumber \u003d Integer.parseInt(taskNum);","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"peienlim"},"content":"        return new Object[] { \"mark\", taskNumber - 1};","lastModifiedDate":"2024-02-05"},{"lineNumber":112,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"peienlim"},"content":"    private static Object[] parseDeleteCommand(String input) throws DukeException {","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"peienlim"},"content":"        String taskNum \u003d input.substring(7);","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"peienlim"},"content":"        int taskNumber \u003d Integer.parseInt(taskNum);","lastModifiedDate":"2024-02-01"},{"lineNumber":117,"author":{"gitId":"peienlim"},"content":"        return new Object[] { \"delete\", taskNumber };","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":119,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":120,"author":{"gitId":"peienlim"},"content":"    private static Object[] parseFindCommand(String input) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":121,"author":{"gitId":"peienlim"},"content":"        String kw \u003d input.substring(5);","lastModifiedDate":"2024-02-07"},{"lineNumber":122,"author":{"gitId":"peienlim"},"content":"        String keyword \u003d kw.trim();","lastModifiedDate":"2024-02-07"},{"lineNumber":123,"author":{"gitId":"peienlim"},"content":"        return new Object[] { \"find\", keyword };","lastModifiedDate":"2024-02-07"},{"lineNumber":124,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":125,"author":{"gitId":"peienlim"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"peienlim":125}},{"path":"src/main/java/duke/command/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"package duke.command;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"import duke.task.*;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"peienlim"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"peienlim"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"peienlim"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"peienlim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"peienlim"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"peienlim"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"peienlim"},"content":" * The Storage class is responsible for storing tasks in a file in the hard disk before the","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"peienlim"},"content":" * program exits, and retrieving the tasks from the file when the program is subsequently","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"peienlim"},"content":" * ran again.","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"peienlim"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"peienlim"},"content":"public class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"peienlim"},"content":"    protected String filePath;","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"peienlim"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"peienlim"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"peienlim"},"content":"     * Retrieves the tasks from previous runs stored in the file, before parsing, creating and","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"peienlim"},"content":"     * adding these tasks to tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"peienlim"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"peienlim"},"content":"     * @param tasks The array to add created tasks to.","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"peienlim"},"content":"    public void getFileContents(TaskList tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"peienlim"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"peienlim"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"peienlim"},"content":"            if (!f.exists()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"peienlim"},"content":"                f.createNewFile();","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"peienlim"},"content":"                return;","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"peienlim"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"peienlim"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"peienlim"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"peienlim"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"peienlim"},"content":"                Task task \u003d createTaskFromString(line);","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"peienlim"},"content":"                tasks.addTask(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"peienlim"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"peienlim"},"content":"            s.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"peienlim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"peienlim"},"content":"            System.out.println(\"Error reading file: \" + e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"peienlim"},"content":"    private Task createTaskFromString(String line) {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"peienlim"},"content":"        String[] parts \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"peienlim"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"peienlim"},"content":"            return null; // Invalid format","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"peienlim"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"peienlim"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"peienlim"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"peienlim"},"content":"        switch (type) {","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"peienlim"},"content":"            case \"T\":","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"peienlim"},"content":"                Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"peienlim"},"content":"                if (isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"peienlim"},"content":"                    todo.markAsDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"peienlim"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"peienlim"},"content":"                return todo;","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"peienlim"},"content":"            case \"D\":","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"peienlim"},"content":"                String byString \u003d parts[3];","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"peienlim"},"content":"                LocalDate by \u003d LocalDate.parse(byString);","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"peienlim"},"content":"                Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"peienlim"},"content":"                if (isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"peienlim"},"content":"                    deadline.markAsDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"peienlim"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"peienlim"},"content":"                return deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"peienlim"},"content":"            case \"E\":","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"peienlim"},"content":"                String fromTo \u003d parts[3];","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"peienlim"},"content":"                String[] fromToParts \u003d fromTo.split(\" \");","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"peienlim"},"content":"                LocalDate fromDate \u003d LocalDate.parse(fromToParts[0]);","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"peienlim"},"content":"                String fromTime \u003d fromToParts[1];","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"peienlim"},"content":"                LocalDate toDate \u003d LocalDate.parse(fromToParts[2]);","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"peienlim"},"content":"                String toTime \u003d fromToParts[3];","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"peienlim"},"content":"                Event event \u003d new Event(description, fromDate, fromTime, toDate, toTime);","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"peienlim"},"content":"                if (isDone) {","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"peienlim"},"content":"                    event.markAsDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"peienlim"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"peienlim"},"content":"                return event;","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"peienlim"},"content":"            default:","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"peienlim"},"content":"                return null; // Unknown type","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"peienlim"},"content":"     * Writes to the file in the hard disk the list of tasks to store before the program terminates.","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"peienlim"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"peienlim"},"content":"     * @param tasks The list of tasks to store.","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"peienlim"},"content":"    public void writeToFile(TaskList tasks) {","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"peienlim"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"peienlim"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"peienlim"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"peienlim"},"content":"                if (task \u003d\u003d null) {","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"peienlim"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"peienlim"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"peienlim"},"content":"                fw.write(task.toFileString() + \u0027\\n\u0027);","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"peienlim"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":105,"author":{"gitId":"peienlim"},"content":"            fw.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"peienlim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"peienlim"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"peienlim"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"peienlim":110}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"package duke.task;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"peienlim"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"peienlim"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"peienlim"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"peienlim"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"peienlim"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"peienlim"},"content":"     * Constructs a Deadline object with the given description and deadline date.","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"peienlim"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"peienlim"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"peienlim"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"peienlim"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"peienlim"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"peienlim"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"peienlim"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"peienlim"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"peienlim"},"content":"        String status \u003d getStatusIcon();","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"peienlim"},"content":"        return \"[D][\" + status + \"] \" + super.toString()","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"peienlim"},"content":"                + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"peienlim"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"peienlim"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"peienlim"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by;","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"peienlim"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"peienlim":35}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"package duke.task;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"peienlim"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"peienlim"},"content":" * Represents an Event task.","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"peienlim"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"peienlim"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"peienlim"},"content":"    protected LocalDate fromDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"peienlim"},"content":"    protected String fromTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"peienlim"},"content":"    protected LocalDate toDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"peienlim"},"content":"    protected String toTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"peienlim"},"content":"     * Constructs a Deadline object with the given description and deadline date.","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"peienlim"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"peienlim"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"peienlim"},"content":"     * @param fromDate The start date of the event task.","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"peienlim"},"content":"     * @param fromTime The time at which the event task starts,","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"peienlim"},"content":"     * @param toDate The end date of the event task.","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"peienlim"},"content":"     * @param toTime The time at which the event task ends.","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"peienlim"},"content":"    public Event(String description, LocalDate fromDate, String fromTime, LocalDate toDate, String toTime) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"peienlim"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"peienlim"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"peienlim"},"content":"        this.fromTime \u003d fromTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"peienlim"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"peienlim"},"content":"        this.toTime \u003d toTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"peienlim"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"peienlim"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"peienlim"},"content":"        String status \u003d getStatusIcon();","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"peienlim"},"content":"        return \"[E][\" + status + \"] \" + super.toString() + \" (from: \" + fromDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"peienlim"},"content":"                + \" \" + fromTime + \" to: \" + toDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + toTime + \")\";","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"peienlim"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"peienlim"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + fromDate","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"peienlim"},"content":"                + \" \" + fromTime + \" \" + toDate + \" \" + toTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"peienlim"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"peienlim":44}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"package duke.task;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":" * Represents a generic task.","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"peienlim"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"peienlim"},"content":"public class Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"peienlim"},"content":"    protected String description;","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"peienlim"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"peienlim"},"content":"     * Constructs a Task object with the specified description.","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"peienlim"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"peienlim"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"peienlim"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"peienlim"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"peienlim"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"peienlim"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"peienlim"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"peienlim"},"content":"     * @return The status icon, \"X\" if the task is done, \" \" otherwise.","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"peienlim"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"peienlim"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"peienlim"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"peienlim"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"peienlim"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"peienlim"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":35,"author":{"gitId":"peienlim"},"content":"        return description;","lastModifiedDate":"2024-01-25"},{"lineNumber":36,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":37,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"peienlim"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"peienlim"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-25"},{"lineNumber":42,"author":{"gitId":"peienlim"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"peienlim"},"content":"     * Returns a string representation of the task for file writing.","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"peienlim"},"content":"     * The implementation for this method is dependent on the type of task,","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"peienlim"},"content":"     * and is hence overridden in the subclasses of Task.","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"peienlim"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"peienlim"},"content":"     * @return A string representation of the task for file writing.","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"peienlim"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"peienlim"},"content":"        return \"\"; // Override in subclasses","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"peienlim"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"peienlim":55}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"package duke.task;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":" * Represents a list of tasks in the Duke application.","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"peienlim"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"peienlim"},"content":"public class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"peienlim"},"content":"    private Task[] tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"peienlim"},"content":"    private int counter;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"peienlim"},"content":"     * Constructs a TaskList object with an initial capacity of 100 tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"peienlim"},"content":"     * Initializes the counter to 0.","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"peienlim"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"peienlim"},"content":"        tasks \u003d new Task[100]; // Or any initial size you prefer","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"peienlim"},"content":"        counter \u003d 0;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"peienlim"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"peienlim"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"peienlim"},"content":"     * @param task the task to be added","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"peienlim"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"peienlim"},"content":"        tasks[counter] \u003d task;","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"peienlim"},"content":"        counter++;","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"peienlim"},"content":"     * Deletes a task from the task list based on its task number.","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"peienlim"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"peienlim"},"content":"     * @param taskNumber The task number of the task to be deleted.","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"peienlim"},"content":"     * @throws IllegalArgumentException If the task number is invalid.","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"peienlim"},"content":"    public void deleteTask(int taskNumber) {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"peienlim"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e counter) {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"peienlim"},"content":"            throw new IllegalArgumentException(\"Invalid task number\");","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"peienlim"},"content":"        for (int i \u003d taskNumber - 1; i \u003c counter - 1; i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"peienlim"},"content":"            tasks[i] \u003d tasks[i + 1];","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"peienlim"},"content":"        tasks[counter - 1] \u003d null;","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"peienlim"},"content":"        counter--;","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"peienlim"},"content":"     * Marks a task as done based on its task number.","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"peienlim"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"peienlim"},"content":"     * @param taskNumber The task number of the task to be marked as done.","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"peienlim"},"content":"     * @throws IllegalArgumentException If the task number is invalid.","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"peienlim"},"content":"    public void markTaskAsDone(int taskNumber) {","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"peienlim"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e counter) {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"peienlim"},"content":"            throw new IllegalArgumentException(\"Invalid task number\");","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"peienlim"},"content":"        tasks[taskNumber].markAsDone( );","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"peienlim"},"content":"    public Task[] searchKeyWord(String keyword) {","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"peienlim"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"peienlim"},"content":"        Task[] containsKeywords \u003d new Task[100];","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"peienlim"},"content":"        for (int i \u003d 0; i \u003c counter; i++) {","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"peienlim"},"content":"            String taskDesc \u003d tasks[i].description;","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"peienlim"},"content":"            if (taskDesc.contains(keyword)) {","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"peienlim"},"content":"                containsKeywords[count] \u003d tasks[i];","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"peienlim"},"content":"                count++;","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"peienlim"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"peienlim"},"content":"        return containsKeywords;","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":77,"author":{"gitId":"peienlim"},"content":"     * Retrieves tasks stored in the task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"peienlim"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":79,"author":{"gitId":"peienlim"},"content":"     * @return An array of tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"peienlim"},"content":"    public Task[] getTasks() {","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"peienlim"},"content":"        return tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"peienlim"},"content":"     * Retrieves the current count of tasks in the task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"peienlim"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"peienlim"},"content":"     * @return The number of tasks in the task list.","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"peienlim"},"content":"    public int getCounter() {","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"peienlim"},"content":"        return counter;","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"peienlim"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"peienlim":93}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"package duke.task;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"peienlim"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"peienlim"},"content":" * Represents a Todo task.","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"peienlim"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"peienlim"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"peienlim"},"content":"     * Constructs a Todo object with the given description.","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"peienlim"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"peienlim"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"peienlim"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"peienlim"},"content":"        super(description);","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"peienlim"},"content":"    @Override","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"peienlim"},"content":"    public String toString() {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"peienlim"},"content":"        String status \u003d getStatusIcon();","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"peienlim"},"content":"        return \"[T][\" + status + \"] \" + super.toString();","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"peienlim"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"peienlim"},"content":"    public String toFileString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"peienlim"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"peienlim"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"peienlim":29}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"package duke.ui;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"peienlim"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"peienlim"},"content":"/**","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"peienlim"},"content":" * Contains functions that handle the user interface of the chatbot.","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"peienlim"},"content":" */","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"peienlim"},"content":"public class Ui {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"peienlim"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"peienlim"},"content":"     * Constructs a Ui object with a new Scanner instance.","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"peienlim"},"content":"    public Ui() {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"peienlim"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"peienlim"},"content":"     * Displays the welcome message when the application starts.","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"peienlim"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"peienlim"},"content":"        System.out.println(\"Hello! I\u0027m Cookie\");","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"peienlim"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"peienlim"},"content":"     * Displays the goodbye message when the application is terminated by user.","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"peienlim"},"content":"    public void showByeMessage() {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"peienlim"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"peienlim"},"content":"     * Displays a message upon the addition of a new task.","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"peienlim"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"peienlim"},"content":"     * @param t The task that was added.","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"peienlim"},"content":"     * @param counter The current count of tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"peienlim"},"content":"    public void showAddTaskMessage(Task t, int counter) {","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"peienlim"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"peienlim"},"content":"        System.out.println(t.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"peienlim"},"content":"        System.out.println(\"Now you have \" + (counter + 1) + \" tasks in the list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"peienlim"},"content":"     * Displays a message when a task is deleted.","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"peienlim"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"peienlim"},"content":"     * @param t       The task that was removed.","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"peienlim"},"content":"     * @param counter The current count of tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"peienlim"},"content":"    public void showRemoveTaskMessage(Task t, int counter) {","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"peienlim"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"peienlim"},"content":"        System.out.println(t.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"peienlim"},"content":"        System.out.println(\"Now you have \" + (counter - 1) + \" tasks in the list.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"peienlim"},"content":"     * Displays a message confirming that a task has been marked as done.","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"peienlim"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"peienlim"},"content":"     * @param t The task that has been marked as done.","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"peienlim"},"content":"    public void showMarkTaskDoneMessage(Task t) {","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"peienlim"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"peienlim"},"content":"        System.out.println(t.toString());","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"peienlim"},"content":"     * Displays a generic message.","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"peienlim"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"peienlim"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"peienlim"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"peienlim"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"peienlim"},"content":"    /**","lastModifiedDate":"2024-02-07"},{"lineNumber":80,"author":{"gitId":"peienlim"},"content":"     * Prints the list of tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":81,"author":{"gitId":"peienlim"},"content":"     *","lastModifiedDate":"2024-02-07"},{"lineNumber":82,"author":{"gitId":"peienlim"},"content":"     * @param tasks An array of tasks to be displayed.","lastModifiedDate":"2024-02-07"},{"lineNumber":83,"author":{"gitId":"peienlim"},"content":"     * @param counter The current count of tasks.","lastModifiedDate":"2024-02-07"},{"lineNumber":84,"author":{"gitId":"peienlim"},"content":"     */","lastModifiedDate":"2024-02-07"},{"lineNumber":85,"author":{"gitId":"peienlim"},"content":"    public void showTaskList(Task[] tasks, int counter) {","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"peienlim"},"content":"        for (int i \u003d 1; i \u003c\u003d counter; i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"peienlim"},"content":"            Task task \u003d tasks[i - 1];","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"peienlim"},"content":"            String taskDesc \u003d task.toString();","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"peienlim"},"content":"            System.out.println(i + \".\" + taskDesc);","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"peienlim"},"content":"    public void showTasksContainingKeyword(Task[] tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"peienlim"},"content":"        System.out.println(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"peienlim"},"content":"        int counter \u003d 0;","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"peienlim"},"content":"        Task t \u003d tasks[counter];","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"peienlim"},"content":"        while(t !\u003d null) {","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"peienlim"},"content":"            String taskDesc \u003d t.toString();","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"peienlim"},"content":"            System.out.println((counter + 1) + \".\" + taskDesc);","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"peienlim"},"content":"            counter++;","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"peienlim"},"content":"            t \u003d tasks[counter];","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"peienlim"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"peienlim"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"peienlim":104}},{"path":"src/test/java/duke/command/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"package duke.command;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"import duke.DukeException;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"peienlim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"peienlim"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"peienlim"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"peienlim"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"peienlim"},"content":"    public void testParseByeCommand() throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"peienlim"},"content":"        Object[] expected \u003d { \"bye\" };","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"peienlim"},"content":"        assertArrayEquals(expected, Parser.parseCommand(\"bye\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"peienlim"},"content":"    public void testParseListCommand() throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"peienlim"},"content":"        Object[] expected \u003d { \"list\" };","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"peienlim"},"content":"        assertArrayEquals(expected, Parser.parseCommand(\"list\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"peienlim"},"content":"    public void testParseTodoCommand() throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"peienlim"},"content":"        Object[] expected \u003d { \"todo\", \"description\" };","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"peienlim"},"content":"        assertArrayEquals(expected, Parser.parseCommand(\"todo description\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"peienlim"},"content":"    public void testParseDeadlineCommand() throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"peienlim"},"content":"        Object[] expected \u003d { \"deadline\", \"description\", LocalDate.parse(\"2024-02-10\") };","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"peienlim"},"content":"        assertArrayEquals(expected, Parser.parseCommand(\"deadline description /by 2024-02-10\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"peienlim"},"content":"    public void testParseEventCommand() throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"peienlim"},"content":"        Object[] expected \u003d { \"event\", \"description\", LocalDate.parse(\"2024-02-10\"), \"10:00\", LocalDate.parse(\"2024-02-12\"), \"12:00\" };","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"peienlim"},"content":"        assertArrayEquals(expected, Parser.parseCommand(\"event description /from 2024-02-10 10:00 /to 2024-02-12 12:00\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"peienlim"},"content":"    public void testParseMarkCommand() throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"peienlim"},"content":"        Object[] expected \u003d { \"mark\", 1 };","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"peienlim"},"content":"        assertArrayEquals(expected, Parser.parseCommand(\"mark 2\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"peienlim"},"content":"    public void testParseDeleteCommand() throws DukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"peienlim"},"content":"        Object[] expected \u003d { \"delete\", 1 };","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"peienlim"},"content":"        assertArrayEquals(expected, Parser.parseCommand(\"delete 1\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"peienlim"},"content":"    public void testParseCommandInvalid() {","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"peienlim"},"content":"        assertThrows(DukeException.class, () -\u003e Parser.parseCommand(\"invalid command\"));","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"peienlim"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"peienlim":58}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"package duke.task;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"peienlim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"peienlim"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"peienlim"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"peienlim"},"content":"    public void testAddTask() {","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"peienlim"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"peienlim"},"content":"        Task task1 \u003d new Task(\"Task 1\");","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"peienlim"},"content":"        Task task2 \u003d new Task(\"Task 2\");","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"peienlim"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"peienlim"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"peienlim"},"content":"        Task[] tasks \u003d taskList.getTasks();","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"peienlim"},"content":"        assertEquals(2, taskList.getCounter());","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"peienlim"},"content":"        assertEquals(task1, tasks[0]);","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"peienlim"},"content":"        assertEquals(task2, tasks[1]);","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"peienlim"},"content":"    public void testDeleteTask() {","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"peienlim"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"peienlim"},"content":"        Task task1 \u003d new Task(\"Task 1\");","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"peienlim"},"content":"        Task task2 \u003d new Task(\"Task 2\");","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"peienlim"},"content":"        Task task3 \u003d new Task(\"Task 3\");","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"peienlim"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"peienlim"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"peienlim"},"content":"        taskList.addTask(task3);","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"peienlim"},"content":"        taskList.deleteTask(2);","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"peienlim"},"content":"        Task[] tasks \u003d taskList.getTasks();","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"peienlim"},"content":"        assertEquals(2, taskList.getCounter());","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"peienlim"},"content":"        assertEquals(task1, tasks[0]);","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"peienlim"},"content":"        assertEquals(task3, tasks[1]);","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"peienlim"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"peienlim":49}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"package duke.task;","lastModifiedDate":"2024-02-05"},{"lineNumber":2,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"peienlim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"peienlim"},"content":"public class TaskTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"peienlim"},"content":"    public void testTaskConstructor() {","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"peienlim"},"content":"        Task task \u003d new Task(\"Buy groceries\");","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"peienlim"},"content":"        assertEquals(\"Buy groceries\", task.toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"peienlim"},"content":"        assertEquals(\" \", task.getStatusIcon());","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"peienlim"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"peienlim"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"peienlim"},"content":"        Task task \u003d new Task(\"Buy groceries\");","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"peienlim"},"content":"        assertEquals(\" \", task.getStatusIcon());","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"peienlim"},"content":"        task.markAsDone();","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"peienlim"},"content":"        assertEquals(\"X\", task.getStatusIcon());","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"peienlim"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"peienlim"},"content":"}","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"peienlim"},"content":"","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"peienlim":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"peienlim"},"content":"todo borrow book","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"peienlim"},"content":"mark 1","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"peienlim"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"peienlim"},"content":"list","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"peienlim"},"content":"bye","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"peienlim":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"peienlim"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"peienlim":1,"-":20}}]
