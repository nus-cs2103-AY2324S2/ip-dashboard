[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"    protected String by;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ThatGirlJam":13}},{"path":"src/main/java/Duchess.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"public class Duchess {","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"    private static final int MAX_TASKS \u003d 100;","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"    private static int taskCount \u003d 0;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"    // Declare the scanner as a static field in the class","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"    private static Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"    // Enum to represent task types","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"    private enum TaskType {","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"        TODO, DEADLINE, EVENT","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"        printOpeningGreeting();","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"        try {","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"            printEcho();","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"        } finally {","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"            //Close scanner","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"            scanner.close();","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"    //Add a ToDo to the task list","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"    private static void addToDo(String userInput) throws DuchessException {","lastModifiedDate":"2024-01-25"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"        String[] toDoTokens \u003d userInput.split(\"todo\"); //Split to find description","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"        if (toDoTokens.length \u003e 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"            String description \u003d toDoTokens[1].trim(); //Trim to only keep description","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"            ToDo newToDo \u003d new ToDo(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"            addTask(newToDo, TaskType.TODO);","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"            throw new DuchessException(\"Oh dear! That is an invalid command. Try: todo \u003cdescription\u003e\");","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"    //Add a Deadline to the taskList","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"    private static void addDeadline(String userInput) throws DuchessException {","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"        String[] deadlineTokens \u003d userInput.split(\"deadline\");","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"        if (deadlineTokens.length \u003e 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"            // Split further to extract description and deadline details","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"            String[] details \u003d deadlineTokens[1].trim().split(\"/by\");","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"            if (details.length \u003e 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"                String description \u003d details[0].trim();","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"                String by \u003d details[1].trim(); // by is everything after","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"                Deadline newDeadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"                addTask(newDeadline, TaskType.DEADLINE);","lastModifiedDate":"2024-01-25"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"            } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"ThatGirlJam"},"content":"                throw new DuchessException(\"Oh dear! That is an invalid command. Try: deadline \u003cdescription\u003e /by \u003cdeadline\u003e\");","lastModifiedDate":"2024-01-25"},{"lineNumber":59,"author":{"gitId":"ThatGirlJam"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"ThatGirlJam"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"ThatGirlJam"},"content":"            throw new DuchessException(\"Oh dear! That is an invalid command. Try: deadline \u003cdescription\u003e /by \u003cdeadline\u003e\");","lastModifiedDate":"2024-01-25"},{"lineNumber":62,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"ThatGirlJam"},"content":"    //Add an Event to the task list","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"ThatGirlJam"},"content":"    private static void addEvent(String userInput) throws DuchessException {","lastModifiedDate":"2024-01-25"},{"lineNumber":67,"author":{"gitId":"ThatGirlJam"},"content":"        String[] eventTokens \u003d userInput.split(\"event\");","lastModifiedDate":"2024-01-24"},{"lineNumber":68,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":69,"author":{"gitId":"ThatGirlJam"},"content":"        if (eventTokens.length \u003e 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"ThatGirlJam"},"content":"            // Split further to extract description and event details","lastModifiedDate":"2024-01-24"},{"lineNumber":71,"author":{"gitId":"ThatGirlJam"},"content":"            String[] details \u003d eventTokens[1].trim().split(\"/from|/to\"); // Means can use either /from or /to as delimiter","lastModifiedDate":"2024-01-24"},{"lineNumber":72,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"ThatGirlJam"},"content":"            if (details.length \u003e 2) {","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"ThatGirlJam"},"content":"                String description \u003d details[0].trim();","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"ThatGirlJam"},"content":"                String from \u003d details[1].trim(); // from is everything after","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"ThatGirlJam"},"content":"                String to \u003d details[2].trim();   // to is everything after","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"ThatGirlJam"},"content":"                Event newEvent \u003d new Event(description, from, to);","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"ThatGirlJam"},"content":"                addTask(newEvent, TaskType.EVENT);","lastModifiedDate":"2024-01-25"},{"lineNumber":80,"author":{"gitId":"ThatGirlJam"},"content":"            } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"ThatGirlJam"},"content":"                throw new DuchessException(\"Oh dear! That is an invalid command. Try: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2024-01-25"},{"lineNumber":82,"author":{"gitId":"ThatGirlJam"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"ThatGirlJam"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":84,"author":{"gitId":"ThatGirlJam"},"content":"            throw new DuchessException(\"Oh dear! That is an invalid command. Try: event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\");","lastModifiedDate":"2024-01-25"},{"lineNumber":85,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":86,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"ThatGirlJam"},"content":"    private static void printTaskList() {","lastModifiedDate":"2024-01-24"},{"lineNumber":89,"author":{"gitId":"ThatGirlJam"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":90,"author":{"gitId":"ThatGirlJam"},"content":"        if (taskCount \u003d\u003d 0) {","lastModifiedDate":"2024-01-24"},{"lineNumber":91,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(\" No tasks have been added yet.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"ThatGirlJam"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":93,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":94,"author":{"gitId":"ThatGirlJam"},"content":"            for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2024-01-24"},{"lineNumber":95,"author":{"gitId":"ThatGirlJam"},"content":"                System.out.println(\" \" + (i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2024-01-25"},{"lineNumber":96,"author":{"gitId":"ThatGirlJam"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":97,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":98,"author":{"gitId":"ThatGirlJam"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":99,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":100,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":101,"author":{"gitId":"ThatGirlJam"},"content":"    //Add a task to task list","lastModifiedDate":"2024-01-24"},{"lineNumber":102,"author":{"gitId":"ThatGirlJam"},"content":"    private static void addTask(Task task, TaskType taskType) throws DuchessException {","lastModifiedDate":"2024-01-25"},{"lineNumber":103,"author":{"gitId":"ThatGirlJam"},"content":"        if (taskCount \u003c MAX_TASKS) {","lastModifiedDate":"2024-01-24"},{"lineNumber":104,"author":{"gitId":"ThatGirlJam"},"content":"            tasks.add(task);","lastModifiedDate":"2024-01-25"},{"lineNumber":105,"author":{"gitId":"ThatGirlJam"},"content":"            taskCount++;","lastModifiedDate":"2024-01-25"},{"lineNumber":106,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":107,"author":{"gitId":"ThatGirlJam"},"content":"            printHorizontalLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":108,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(\" Understood. I\u0027ve added this \" + taskType + \" task:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":109,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(task.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":110,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":111,"author":{"gitId":"ThatGirlJam"},"content":"            printHorizontalLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":112,"author":{"gitId":"ThatGirlJam"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":113,"author":{"gitId":"ThatGirlJam"},"content":"            throw new DuchessException(\"The task list is full. I cannot add more tasks.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":114,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":115,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":116,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":117,"author":{"gitId":"ThatGirlJam"},"content":"    private static void deleteTask(int taskIndex) throws DuchessException {","lastModifiedDate":"2024-01-25"},{"lineNumber":118,"author":{"gitId":"ThatGirlJam"},"content":"        if (isValidTaskIndex(taskIndex)) {","lastModifiedDate":"2024-01-25"},{"lineNumber":119,"author":{"gitId":"ThatGirlJam"},"content":"            Task deletedTask \u003d tasks.remove(taskIndex);","lastModifiedDate":"2024-01-25"},{"lineNumber":120,"author":{"gitId":"ThatGirlJam"},"content":"            taskCount--;","lastModifiedDate":"2024-01-25"},{"lineNumber":121,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":122,"author":{"gitId":"ThatGirlJam"},"content":"            printHorizontalLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":123,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(\" Understood. I\u0027ve deleted this task:\");","lastModifiedDate":"2024-01-25"},{"lineNumber":124,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(deletedTask.toString());","lastModifiedDate":"2024-01-25"},{"lineNumber":125,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(\" Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":126,"author":{"gitId":"ThatGirlJam"},"content":"            printHorizontalLine();","lastModifiedDate":"2024-01-25"},{"lineNumber":127,"author":{"gitId":"ThatGirlJam"},"content":"        } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":128,"author":{"gitId":"ThatGirlJam"},"content":"            throw new DuchessException(\"Invalid task index.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":129,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-01-25"},{"lineNumber":130,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":131,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":132,"author":{"gitId":"ThatGirlJam"},"content":"    // Mark a task as done","lastModifiedDate":"2024-01-24"},{"lineNumber":133,"author":{"gitId":"ThatGirlJam"},"content":"    private static void markTaskAsDone(int taskIndex) throws DuchessException {","lastModifiedDate":"2024-01-25"},{"lineNumber":134,"author":{"gitId":"ThatGirlJam"},"content":"        if (isValidTaskIndex(taskIndex)) {","lastModifiedDate":"2024-01-24"},{"lineNumber":135,"author":{"gitId":"ThatGirlJam"},"content":"            tasks.get(taskIndex).markAsDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":136,"author":{"gitId":"ThatGirlJam"},"content":"            printHorizontalLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":137,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(\" Perfect! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":138,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(tasks.get(taskIndex).toString());","lastModifiedDate":"2024-01-25"},{"lineNumber":139,"author":{"gitId":"ThatGirlJam"},"content":"            printHorizontalLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":140,"author":{"gitId":"ThatGirlJam"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":141,"author":{"gitId":"ThatGirlJam"},"content":"            throw new DuchessException(\"Invalid task index.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":142,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":143,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":144,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":145,"author":{"gitId":"ThatGirlJam"},"content":"    // Unmark a task as done","lastModifiedDate":"2024-01-24"},{"lineNumber":146,"author":{"gitId":"ThatGirlJam"},"content":"    private static void unmarkTaskAsDone(int taskIndex) throws DuchessException {","lastModifiedDate":"2024-01-25"},{"lineNumber":147,"author":{"gitId":"ThatGirlJam"},"content":"        if (isValidTaskIndex(taskIndex)) {","lastModifiedDate":"2024-01-24"},{"lineNumber":148,"author":{"gitId":"ThatGirlJam"},"content":"            tasks.get(taskIndex).unmarkAsDone();","lastModifiedDate":"2024-01-25"},{"lineNumber":149,"author":{"gitId":"ThatGirlJam"},"content":"            printHorizontalLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":150,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(\" Understood, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":151,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.println(tasks.get(taskIndex).toString());","lastModifiedDate":"2024-01-25"},{"lineNumber":152,"author":{"gitId":"ThatGirlJam"},"content":"            printHorizontalLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":153,"author":{"gitId":"ThatGirlJam"},"content":"        } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":154,"author":{"gitId":"ThatGirlJam"},"content":"            throw new DuchessException(\"Invalid task index.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":155,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":156,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":157,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":158,"author":{"gitId":"ThatGirlJam"},"content":"    // Check if the task index is valid","lastModifiedDate":"2024-01-24"},{"lineNumber":159,"author":{"gitId":"ThatGirlJam"},"content":"    private static boolean isValidTaskIndex(int taskIndex) {","lastModifiedDate":"2024-01-24"},{"lineNumber":160,"author":{"gitId":"ThatGirlJam"},"content":"        return taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c taskCount;","lastModifiedDate":"2024-01-24"},{"lineNumber":161,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":162,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":163,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":164,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":165,"author":{"gitId":"ThatGirlJam"},"content":"    //Adds user input to list, exits if user inputs \"bye\"","lastModifiedDate":"2024-01-24"},{"lineNumber":166,"author":{"gitId":"ThatGirlJam"},"content":"    private static void printEcho() throws DuchessException {","lastModifiedDate":"2024-01-25"},{"lineNumber":167,"author":{"gitId":"ThatGirlJam"},"content":"        // Loop to read user input","lastModifiedDate":"2024-01-24"},{"lineNumber":168,"author":{"gitId":"ThatGirlJam"},"content":"        while (true) {","lastModifiedDate":"2024-01-24"},{"lineNumber":169,"author":{"gitId":"ThatGirlJam"},"content":"            String userInput \u003d scanner.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":170,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":171,"author":{"gitId":"ThatGirlJam"},"content":"            // Split user input into tokens","lastModifiedDate":"2024-01-24"},{"lineNumber":172,"author":{"gitId":"ThatGirlJam"},"content":"            String[] tokens \u003d userInput.split(\" \");","lastModifiedDate":"2024-01-24"},{"lineNumber":173,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":174,"author":{"gitId":"ThatGirlJam"},"content":"            // Based on user input, change output","lastModifiedDate":"2024-01-24"},{"lineNumber":175,"author":{"gitId":"ThatGirlJam"},"content":"            switch (tokens[0].toLowerCase()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":176,"author":{"gitId":"ThatGirlJam"},"content":"                case \"bye\":","lastModifiedDate":"2024-01-24"},{"lineNumber":177,"author":{"gitId":"ThatGirlJam"},"content":"                    printClosingGreeting();","lastModifiedDate":"2024-01-24"},{"lineNumber":178,"author":{"gitId":"ThatGirlJam"},"content":"                    return;","lastModifiedDate":"2024-01-24"},{"lineNumber":179,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":180,"author":{"gitId":"ThatGirlJam"},"content":"                case \"list\":","lastModifiedDate":"2024-01-24"},{"lineNumber":181,"author":{"gitId":"ThatGirlJam"},"content":"                    printTaskList();","lastModifiedDate":"2024-01-24"},{"lineNumber":182,"author":{"gitId":"ThatGirlJam"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":183,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":184,"author":{"gitId":"ThatGirlJam"},"content":"                case \"mark\":","lastModifiedDate":"2024-01-24"},{"lineNumber":185,"author":{"gitId":"ThatGirlJam"},"content":"                    if (tokens.length \u003e 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":186,"author":{"gitId":"ThatGirlJam"},"content":"                        int taskIndexToMark \u003d Integer.parseInt(tokens[1]) - 1; //Minus 1 to match zero-index","lastModifiedDate":"2024-01-24"},{"lineNumber":187,"author":{"gitId":"ThatGirlJam"},"content":"                        markTaskAsDone(taskIndexToMark);","lastModifiedDate":"2024-01-24"},{"lineNumber":188,"author":{"gitId":"ThatGirlJam"},"content":"                    } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":189,"author":{"gitId":"ThatGirlJam"},"content":"                        throw new DuchessException(\"Oh dear! That is an invalid command. Try: mark \u003ctaskIndex\u003e\");","lastModifiedDate":"2024-01-25"},{"lineNumber":190,"author":{"gitId":"ThatGirlJam"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":191,"author":{"gitId":"ThatGirlJam"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":192,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":193,"author":{"gitId":"ThatGirlJam"},"content":"                case \"unmark\":","lastModifiedDate":"2024-01-24"},{"lineNumber":194,"author":{"gitId":"ThatGirlJam"},"content":"                    if (tokens.length \u003e 1) {","lastModifiedDate":"2024-01-24"},{"lineNumber":195,"author":{"gitId":"ThatGirlJam"},"content":"                        int taskIndexToUnmark \u003d Integer.parseInt(tokens[1]) - 1; //Minus 1 to match zero-index","lastModifiedDate":"2024-01-24"},{"lineNumber":196,"author":{"gitId":"ThatGirlJam"},"content":"                        unmarkTaskAsDone(taskIndexToUnmark);","lastModifiedDate":"2024-01-24"},{"lineNumber":197,"author":{"gitId":"ThatGirlJam"},"content":"                    } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":198,"author":{"gitId":"ThatGirlJam"},"content":"                        throw new DuchessException(\"Oh dear! That is an invalid command. Try: unmark \u003ctaskIndex\u003e\");","lastModifiedDate":"2024-01-25"},{"lineNumber":199,"author":{"gitId":"ThatGirlJam"},"content":"                    }","lastModifiedDate":"2024-01-24"},{"lineNumber":200,"author":{"gitId":"ThatGirlJam"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":201,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":202,"author":{"gitId":"ThatGirlJam"},"content":"                case \"todo\":","lastModifiedDate":"2024-01-24"},{"lineNumber":203,"author":{"gitId":"ThatGirlJam"},"content":"                    addToDo(userInput);","lastModifiedDate":"2024-01-24"},{"lineNumber":204,"author":{"gitId":"ThatGirlJam"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":205,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":206,"author":{"gitId":"ThatGirlJam"},"content":"                case \"deadline\":","lastModifiedDate":"2024-01-24"},{"lineNumber":207,"author":{"gitId":"ThatGirlJam"},"content":"                    addDeadline(userInput);","lastModifiedDate":"2024-01-24"},{"lineNumber":208,"author":{"gitId":"ThatGirlJam"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":209,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":210,"author":{"gitId":"ThatGirlJam"},"content":"                case \"event\":","lastModifiedDate":"2024-01-24"},{"lineNumber":211,"author":{"gitId":"ThatGirlJam"},"content":"                    addEvent(userInput);","lastModifiedDate":"2024-01-24"},{"lineNumber":212,"author":{"gitId":"ThatGirlJam"},"content":"                    break;","lastModifiedDate":"2024-01-24"},{"lineNumber":213,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":214,"author":{"gitId":"ThatGirlJam"},"content":"                case \"delete\":","lastModifiedDate":"2024-01-25"},{"lineNumber":215,"author":{"gitId":"ThatGirlJam"},"content":"                    if (tokens.length \u003e 1) {","lastModifiedDate":"2024-01-25"},{"lineNumber":216,"author":{"gitId":"ThatGirlJam"},"content":"                        int taskIndexToDelete \u003d Integer.parseInt(tokens[1]) - 1; //Minus 1 to match zero-index","lastModifiedDate":"2024-01-25"},{"lineNumber":217,"author":{"gitId":"ThatGirlJam"},"content":"                        deleteTask(taskIndexToDelete);","lastModifiedDate":"2024-01-25"},{"lineNumber":218,"author":{"gitId":"ThatGirlJam"},"content":"                    } else {","lastModifiedDate":"2024-01-25"},{"lineNumber":219,"author":{"gitId":"ThatGirlJam"},"content":"                        throw new DuchessException(\"Oh dear! That is an invalid command. Try: unmark \u003ctaskIndex\u003e\");","lastModifiedDate":"2024-01-25"},{"lineNumber":220,"author":{"gitId":"ThatGirlJam"},"content":"                    }","lastModifiedDate":"2024-01-25"},{"lineNumber":221,"author":{"gitId":"ThatGirlJam"},"content":"                    break;","lastModifiedDate":"2024-01-25"},{"lineNumber":222,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":223,"author":{"gitId":"ThatGirlJam"},"content":"                default:","lastModifiedDate":"2024-01-24"},{"lineNumber":224,"author":{"gitId":"ThatGirlJam"},"content":"                    throw new DuchessException(\"Oh dear, I can\u0027t make out what that is.\");","lastModifiedDate":"2024-01-25"},{"lineNumber":225,"author":{"gitId":"ThatGirlJam"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":226,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":227,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":228,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":229,"author":{"gitId":"ThatGirlJam"},"content":"    //Print opening greeting","lastModifiedDate":"2024-01-24"},{"lineNumber":230,"author":{"gitId":"ThatGirlJam"},"content":"    private static void printOpeningGreeting() {","lastModifiedDate":"2024-01-24"},{"lineNumber":231,"author":{"gitId":"ThatGirlJam"},"content":"        String logo \u003d \" ____            __\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":232,"author":{"gitId":"ThatGirlJam"},"content":"                + \"|  _ \\\\ _   ______| |      ___  ___  ___\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":233,"author":{"gitId":"ThatGirlJam"},"content":"                + \"| | | | | | |  __| |__  /  _ \\\\/ __|/ __|\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":234,"author":{"gitId":"ThatGirlJam"},"content":"                + \"| |_| | |_| | |__| ___ |   __/\\\\__ \\\\\\\\__ \\\\\\n\"","lastModifiedDate":"2024-01-24"},{"lineNumber":235,"author":{"gitId":"ThatGirlJam"},"content":"                + \"|____/ \\\\__,_|____|_| |_|\\\\ ___||___/|___/\\n\";","lastModifiedDate":"2024-01-24"},{"lineNumber":236,"author":{"gitId":"ThatGirlJam"},"content":"        System.out.println(logo);","lastModifiedDate":"2024-01-24"},{"lineNumber":237,"author":{"gitId":"ThatGirlJam"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":238,"author":{"gitId":"ThatGirlJam"},"content":"        System.out.println(\"Hello! I\u0027m Duchess.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":239,"author":{"gitId":"ThatGirlJam"},"content":"        System.out.println(\"What can I do for you today?\");","lastModifiedDate":"2024-01-24"},{"lineNumber":240,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":241,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":242,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":243,"author":{"gitId":"ThatGirlJam"},"content":"    //Prints closing greeting","lastModifiedDate":"2024-01-24"},{"lineNumber":244,"author":{"gitId":"ThatGirlJam"},"content":"    private static void printClosingGreeting() {","lastModifiedDate":"2024-01-24"},{"lineNumber":245,"author":{"gitId":"ThatGirlJam"},"content":"        printHorizontalLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":246,"author":{"gitId":"ThatGirlJam"},"content":"        System.out.println(\"Goodbye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":247,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":248,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":249,"author":{"gitId":"ThatGirlJam"},"content":"    //Prints a Horizontal Line of 50 dashes","lastModifiedDate":"2024-01-24"},{"lineNumber":250,"author":{"gitId":"ThatGirlJam"},"content":"    private static void printHorizontalLine() {","lastModifiedDate":"2024-01-24"},{"lineNumber":251,"author":{"gitId":"ThatGirlJam"},"content":"        int lineLength \u003d 50; // Specify the length of the line","lastModifiedDate":"2024-01-24"},{"lineNumber":252,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":253,"author":{"gitId":"ThatGirlJam"},"content":"        // Print the horizontal line","lastModifiedDate":"2024-01-24"},{"lineNumber":254,"author":{"gitId":"ThatGirlJam"},"content":"        for (int i \u003d 0; i \u003c lineLength; i++) {","lastModifiedDate":"2024-01-24"},{"lineNumber":255,"author":{"gitId":"ThatGirlJam"},"content":"            System.out.print(\"_\");","lastModifiedDate":"2024-01-24"},{"lineNumber":256,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":257,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":258,"author":{"gitId":"ThatGirlJam"},"content":"        System.out.println();","lastModifiedDate":"2024-01-24"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ThatGirlJam":257,"-":3}},{"path":"src/main/java/DuchessException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"public class DuchessException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"    public DuchessException(String message) {","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"        super(message);","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"ThatGirlJam":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"    protected String start; //Date or time, but just generic for now","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"    protected String end;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \")\";","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ThatGirlJam":15}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"    protected String description;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"        return (isDone ? \"X\" : \" \"); //mark done task with X","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ThatGirlJam":25}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"    public ToDo(String description) {","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"        super(description);","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ThatGirlJam":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"todo borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"unmark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ThatGirlJam":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"java -classpath ..\\bin Duchess \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ThatGirlJam":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"java -classpath ../bin Duchess \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ThatGirlJam":1,"-":37}}]
