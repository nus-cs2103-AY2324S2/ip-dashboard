[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopKec"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"TopKec"},"content":"    protected String due;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"TopKec"},"content":"    Deadline(String name, String due) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"TopKec"},"content":"        super(name);","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"TopKec"},"content":"        this.due \u003d due;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"TopKec"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"TopKec"},"content":"    protected String taskTypeDisplay() {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"TopKec"},"content":"        return \"[D]\";","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"TopKec"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"TopKec"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"TopKec"},"content":"        return String.format(\"%s%s %s (by: %s)\", this.taskTypeDisplay(), this.completionDisplay(), this.name, this.due);","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"TopKec"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"TopKec"},"content":"    public String storeFormat() {","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"TopKec"},"content":"        String completeFormat \u003d complete ? \"1\" : \"0\";","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"TopKec"},"content":"        return String.format(\"%s | %s | %s | %s\", \"D\", completeFormat, name, due);","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"TopKec"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"TopKec":22}},{"path":"src/main/java/EmptyFieldException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopKec"},"content":"public class EmptyFieldException extends Exception{","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"TopKec"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"TopKec":2}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopKec"},"content":"public class Event extends Task{","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"TopKec"},"content":"    protected String start;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"TopKec"},"content":"    protected String end;","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"TopKec"},"content":"    Event(String name, String start, String end) {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"TopKec"},"content":"        super(name);","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"TopKec"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"TopKec"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"TopKec"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"TopKec"},"content":"    protected String taskTypeDisplay() {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"TopKec"},"content":"        return \"[E]\";","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"TopKec"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"TopKec"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"TopKec"},"content":"        return String.format(\"%s%s %s (from: %s to: %s)\", this.taskTypeDisplay(), this.completionDisplay(), this.name, this.start, this.end);","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"TopKec"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"TopKec"},"content":"    public String storeFormat() {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"TopKec"},"content":"        String completeFormat \u003d complete ? \"1\" : \"0\";","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"TopKec"},"content":"        return String.format(\"%s | %s | %s | %s | %s\", \"D\", completeFormat, name, start, end);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"TopKec"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"TopKec":24}},{"path":"src/main/java/Steven.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopKec"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"TopKec"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"TopKec"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"TopKec"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"TopKec"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"TopKec"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"TopKec"},"content":"public class Steven {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"TopKec"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"TopKec"},"content":"        String corrputed \u003d \"Oh dear, looks like the file used to handle the data I\u0027m supposed to store is corrupted...\\nSteven\u0027s Advice: You may need to re-create the file!\";","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"TopKec"},"content":"        String line \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"TopKec"},"content":"        String bootMsg \u003d (\"This is Steven!\\nHow can I advise?\\n\");","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"TopKec"},"content":"        String blankFieldMsg \u003d \"Just to let you know, I can\u0027t accept a task with missing details.\\nSteven\u0027s advice: Make sure you\u0027re leaving no blanks in your instructions!\";","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"TopKec"},"content":"        System.out.print(line + bootMsg + line);","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"TopKec"},"content":"        System.out.println(\"Steven\u0027s advice: Don\u0027t know what commands I understand? Use \\\"help\\\"!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"TopKec"},"content":"        System.out.print(line);","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"TopKec"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"TopKec"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"TopKec"},"content":"            new File(\"./data\").mkdirs();","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"TopKec"},"content":"            File newFile \u003d new File(\"./data/Steven.txt\");","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"TopKec"},"content":"            if (!newFile.createNewFile()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"TopKec"},"content":"                taskList \u003d readFile(newFile);","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"TopKec"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"TopKec"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"TopKec"},"content":"            System.out.println(\"Whoops, looks like something went wrong, it really shouldn\u0027t!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"TopKec"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"TopKec"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"TopKec"},"content":"        boolean exit \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"TopKec"},"content":"        while (!exit) {","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"TopKec"},"content":"            Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"TopKec"},"content":"            while (userInput.hasNextLine()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"TopKec"},"content":"                String command \u003d userInput.nextLine();","lastModifiedDate":"2024-01-24"},{"lineNumber":35,"author":{"gitId":"TopKec"},"content":"                switch (command.split(\" \")[0]) {","lastModifiedDate":"2024-01-24"},{"lineNumber":36,"author":{"gitId":"TopKec"},"content":"                    case \"list\":","lastModifiedDate":"2024-01-24"},{"lineNumber":37,"author":{"gitId":"TopKec"},"content":"                        System.out.println(\"This is your list so far:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":38,"author":{"gitId":"TopKec"},"content":"                        int counter \u003d 1;","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"TopKec"},"content":"                        for (Task t : taskList) {","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"TopKec"},"content":"                            System.out.printf(\"%d. %s%n\", counter, t.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"TopKec"},"content":"                            counter++;","lastModifiedDate":"2024-01-24"},{"lineNumber":42,"author":{"gitId":"TopKec"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"TopKec"},"content":"                        break;","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"TopKec"},"content":"                    case \"unmark\":","lastModifiedDate":"2024-01-24"},{"lineNumber":45,"author":{"gitId":"TopKec"},"content":"                    case \"mark\":","lastModifiedDate":"2024-01-24"},{"lineNumber":46,"author":{"gitId":"TopKec"},"content":"                        String commandType \u003d command.split(\" \")[0];","lastModifiedDate":"2024-01-24"},{"lineNumber":47,"author":{"gitId":"TopKec"},"content":"                        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"TopKec"},"content":"                            int index \u003d Integer.parseInt(command.split(\" \", 2)[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"TopKec"},"content":"                            if (commandType.equals(\"unmark\")) {","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"TopKec"},"content":"                                if (!taskList.get(index - 1).getCompletionStatus()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"TopKec"},"content":"                                    System.out.println(\"Ah, hold on. Seems like this one\u0027s still incomplete. If you meant to mark this as complete instead, use \\\"mark\\\".\\nDo note that this is the current status of the task:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"TopKec"},"content":"                                } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":53,"author":{"gitId":"TopKec"},"content":"                                    taskList.get(index - 1).toggleCompletion();","lastModifiedDate":"2024-01-24"},{"lineNumber":54,"author":{"gitId":"TopKec"},"content":"                                    System.out.println(\"Sure, I\u0027ll mark this as incomplete for the time being.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"TopKec"},"content":"                                }","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"TopKec"},"content":"                            } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"TopKec"},"content":"                                if (taskList.get(index - 1).getCompletionStatus()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"TopKec"},"content":"                                    System.out.println(\"Oh, this one\u0027s already cleared! Remember that you can use \\\"unmark\\\" to mark this as incomplete if that was your intention.\\nRegardless, here is the current status of that task:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"TopKec"},"content":"                                } else {","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"TopKec"},"content":"                                    taskList.get(index - 1).toggleCompletion();","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"TopKec"},"content":"                                    System.out.println(\"As you wish, this will me marked as complete then!\");","lastModifiedDate":"2024-01-24"},{"lineNumber":62,"author":{"gitId":"TopKec"},"content":"                                }","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"TopKec"},"content":"                            }","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"TopKec"},"content":"                            System.out.println(taskList.get(index - 1).toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"TopKec"},"content":"                            refreshFile(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"TopKec"},"content":"                        } catch (NumberFormatException error) {","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"TopKec"},"content":"                            System.out.println(\"Hmm... Seems like you want me to mark, or unmark something, but you didn\u0027t provide a valid number for me to work off.\\nSteven\u0027s Advice: Use a number instead.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":68,"author":{"gitId":"TopKec"},"content":"                        } catch (IndexOutOfBoundsException error) {","lastModifiedDate":"2024-01-24"},{"lineNumber":69,"author":{"gitId":"TopKec"},"content":"                            System.out.println(\"Ah, a pity... Seems like you don\u0027t have that many tasks.\\nSteven\u0027s advice: Use a number which corresponds to a task number. If you need to know what number corresponds to what task, use \\\"list\\\".\");","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"TopKec"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"TopKec"},"content":"                            System.out.println(corrputed);","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"TopKec"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"TopKec"},"content":"                        break;","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"TopKec"},"content":"                    case \"todo\":","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"TopKec"},"content":"                        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"TopKec"},"content":"                            String name \u003d command.split(\" \", 2)[1];","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"TopKec"},"content":"                            if (name.isEmpty()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"TopKec"},"content":"                                throw new EmptyFieldException();","lastModifiedDate":"2024-01-24"},{"lineNumber":79,"author":{"gitId":"TopKec"},"content":"                            }","lastModifiedDate":"2024-01-24"},{"lineNumber":80,"author":{"gitId":"TopKec"},"content":"                            taskList.add(new Todo(name));","lastModifiedDate":"2024-01-24"},{"lineNumber":81,"author":{"gitId":"TopKec"},"content":"                            refreshFile(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"TopKec"},"content":"                            System.out.print(line);","lastModifiedDate":"2024-01-24"},{"lineNumber":83,"author":{"gitId":"TopKec"},"content":"                            System.out.println(\"I see. I shall add the following to the list of tasks:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":84,"author":{"gitId":"TopKec"},"content":"                            System.out.println(taskList.get(taskList.size() - 1));","lastModifiedDate":"2024-01-24"},{"lineNumber":85,"author":{"gitId":"TopKec"},"content":"                            System.out.printf(\"Do bear in mind that you now have %d tasks in the list.%n\", taskList.size());","lastModifiedDate":"2024-01-24"},{"lineNumber":86,"author":{"gitId":"TopKec"},"content":"                        } catch (EmptyFieldException | ArrayIndexOutOfBoundsException error) {","lastModifiedDate":"2024-01-24"},{"lineNumber":87,"author":{"gitId":"TopKec"},"content":"                            System.out.println(blankFieldMsg);","lastModifiedDate":"2024-01-24"},{"lineNumber":88,"author":{"gitId":"TopKec"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"TopKec"},"content":"                            System.out.println(corrputed);","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"TopKec"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":91,"author":{"gitId":"TopKec"},"content":"                        break;","lastModifiedDate":"2024-01-24"},{"lineNumber":92,"author":{"gitId":"TopKec"},"content":"                    case \"deadline\":","lastModifiedDate":"2024-01-24"},{"lineNumber":93,"author":{"gitId":"TopKec"},"content":"                        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":94,"author":{"gitId":"TopKec"},"content":"                            String due \u003d command.split(\"/by \")[1];","lastModifiedDate":"2024-01-24"},{"lineNumber":95,"author":{"gitId":"TopKec"},"content":"                            String name \u003d command.split(\" \", 2)[1].split(\"/by\")[0];","lastModifiedDate":"2024-01-24"},{"lineNumber":96,"author":{"gitId":"TopKec"},"content":"                            if (name.isEmpty() || due.isEmpty()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":97,"author":{"gitId":"TopKec"},"content":"                                throw new EmptyFieldException();","lastModifiedDate":"2024-01-24"},{"lineNumber":98,"author":{"gitId":"TopKec"},"content":"                            }","lastModifiedDate":"2024-01-24"},{"lineNumber":99,"author":{"gitId":"TopKec"},"content":"                            taskList.add(new Deadline(name, due));","lastModifiedDate":"2024-01-24"},{"lineNumber":100,"author":{"gitId":"TopKec"},"content":"                            refreshFile(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"TopKec"},"content":"                            System.out.print(line);","lastModifiedDate":"2024-01-24"},{"lineNumber":102,"author":{"gitId":"TopKec"},"content":"                            System.out.println(\"I see. I shall add the following to the list of tasks:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":103,"author":{"gitId":"TopKec"},"content":"                            System.out.println(taskList.get(taskList.size() - 1));","lastModifiedDate":"2024-01-24"},{"lineNumber":104,"author":{"gitId":"TopKec"},"content":"                            System.out.printf(\"Do bear in mind that you now have %d tasks in the list.%n\", taskList.size());","lastModifiedDate":"2024-01-24"},{"lineNumber":105,"author":{"gitId":"TopKec"},"content":"                        } catch (EmptyFieldException | ArrayIndexOutOfBoundsException error) {","lastModifiedDate":"2024-01-24"},{"lineNumber":106,"author":{"gitId":"TopKec"},"content":"                            System.out.println(blankFieldMsg);","lastModifiedDate":"2024-01-24"},{"lineNumber":107,"author":{"gitId":"TopKec"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"TopKec"},"content":"                            System.out.println(corrputed);","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"TopKec"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":110,"author":{"gitId":"TopKec"},"content":"                        break;","lastModifiedDate":"2024-01-24"},{"lineNumber":111,"author":{"gitId":"TopKec"},"content":"                    case \"event\":","lastModifiedDate":"2024-01-24"},{"lineNumber":112,"author":{"gitId":"TopKec"},"content":"                        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":113,"author":{"gitId":"TopKec"},"content":"                            String start \u003d command.split(\"/from \")[1].split(\"/to \")[0];","lastModifiedDate":"2024-01-24"},{"lineNumber":114,"author":{"gitId":"TopKec"},"content":"                            String end \u003d command.split(\"/to \")[1];","lastModifiedDate":"2024-01-24"},{"lineNumber":115,"author":{"gitId":"TopKec"},"content":"                            String name \u003d command.split(\" \", 2)[1].split(\"/from\")[0];","lastModifiedDate":"2024-01-24"},{"lineNumber":116,"author":{"gitId":"TopKec"},"content":"                            if (name.isEmpty() || start.isEmpty() || end.isEmpty()) {","lastModifiedDate":"2024-01-24"},{"lineNumber":117,"author":{"gitId":"TopKec"},"content":"                                throw new EmptyFieldException();","lastModifiedDate":"2024-01-24"},{"lineNumber":118,"author":{"gitId":"TopKec"},"content":"                            }","lastModifiedDate":"2024-01-24"},{"lineNumber":119,"author":{"gitId":"TopKec"},"content":"                            taskList.add(new Event(name, start, end));","lastModifiedDate":"2024-01-24"},{"lineNumber":120,"author":{"gitId":"TopKec"},"content":"                            refreshFile(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":121,"author":{"gitId":"TopKec"},"content":"                            System.out.print(line);","lastModifiedDate":"2024-01-24"},{"lineNumber":122,"author":{"gitId":"TopKec"},"content":"                            System.out.println(\"I see. I shall add the following to the list of tasks:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":123,"author":{"gitId":"TopKec"},"content":"                            System.out.println(taskList.get(taskList.size() - 1));","lastModifiedDate":"2024-01-24"},{"lineNumber":124,"author":{"gitId":"TopKec"},"content":"                            System.out.printf(\"Do bear in mind that you now have %d tasks in the list.%n\", taskList.size());","lastModifiedDate":"2024-01-24"},{"lineNumber":125,"author":{"gitId":"TopKec"},"content":"                        } catch (EmptyFieldException | ArrayIndexOutOfBoundsException error) {","lastModifiedDate":"2024-01-24"},{"lineNumber":126,"author":{"gitId":"TopKec"},"content":"                            System.out.println(blankFieldMsg);","lastModifiedDate":"2024-01-24"},{"lineNumber":127,"author":{"gitId":"TopKec"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":128,"author":{"gitId":"TopKec"},"content":"                            System.out.println(corrputed);","lastModifiedDate":"2024-02-01"},{"lineNumber":129,"author":{"gitId":"TopKec"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":130,"author":{"gitId":"TopKec"},"content":"                        break;","lastModifiedDate":"2024-01-24"},{"lineNumber":131,"author":{"gitId":"TopKec"},"content":"                    case \"delete\":","lastModifiedDate":"2024-01-24"},{"lineNumber":132,"author":{"gitId":"TopKec"},"content":"                        try {","lastModifiedDate":"2024-01-24"},{"lineNumber":133,"author":{"gitId":"TopKec"},"content":"                            int index \u003d Integer.parseInt(command.split(\" \", 2)[1]);","lastModifiedDate":"2024-01-24"},{"lineNumber":134,"author":{"gitId":"TopKec"},"content":"                            index -\u003d 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":135,"author":{"gitId":"TopKec"},"content":"                            Task removedItem \u003d taskList.get(index);","lastModifiedDate":"2024-01-24"},{"lineNumber":136,"author":{"gitId":"TopKec"},"content":"                            taskList.remove(index);","lastModifiedDate":"2024-01-24"},{"lineNumber":137,"author":{"gitId":"TopKec"},"content":"                            refreshFile(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":138,"author":{"gitId":"TopKec"},"content":"                            System.out.println(line + \"Very well, the following item has been removed from the list:\\n\" + removedItem.toString() + \"\\n\");","lastModifiedDate":"2024-01-24"},{"lineNumber":139,"author":{"gitId":"TopKec"},"content":"                            System.out.println(\"For the sake of completeness, this is the current list, do take note if any of your items have been moved around in order.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":140,"author":{"gitId":"TopKec"},"content":"                            int counter1 \u003d 1;","lastModifiedDate":"2024-01-24"},{"lineNumber":141,"author":{"gitId":"TopKec"},"content":"                            for (Task t : taskList) {","lastModifiedDate":"2024-01-24"},{"lineNumber":142,"author":{"gitId":"TopKec"},"content":"                                System.out.printf(\"%d. %s%n\", counter1, t.toString());","lastModifiedDate":"2024-01-24"},{"lineNumber":143,"author":{"gitId":"TopKec"},"content":"                                counter1++;","lastModifiedDate":"2024-01-24"},{"lineNumber":144,"author":{"gitId":"TopKec"},"content":"                            }","lastModifiedDate":"2024-01-24"},{"lineNumber":145,"author":{"gitId":"TopKec"},"content":"                        } catch (NumberFormatException error) {","lastModifiedDate":"2024-01-24"},{"lineNumber":146,"author":{"gitId":"TopKec"},"content":"                            System.out.println(\"Oh, I can\u0027t  delete that - I need a number of an item in the list to delete it.\\nSteven\u0027s Advice: Use a number instead.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":147,"author":{"gitId":"TopKec"},"content":"                        } catch (IndexOutOfBoundsException error) {","lastModifiedDate":"2024-01-24"},{"lineNumber":148,"author":{"gitId":"TopKec"},"content":"                            System.out.println(\"Apologies, you don\u0027t have a task of this number, so I can\u0027t delete it.\\nSteven\u0027s advice: Use a number which corresponds to a task number. If you need to know what number corresponds to what task, use \\\"list\\\".\");","lastModifiedDate":"2024-01-24"},{"lineNumber":149,"author":{"gitId":"TopKec"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":150,"author":{"gitId":"TopKec"},"content":"                            System.out.println(corrputed);","lastModifiedDate":"2024-02-01"},{"lineNumber":151,"author":{"gitId":"TopKec"},"content":"                        }","lastModifiedDate":"2024-01-24"},{"lineNumber":152,"author":{"gitId":"TopKec"},"content":"                        break;","lastModifiedDate":"2024-01-24"},{"lineNumber":153,"author":{"gitId":"TopKec"},"content":"                    case \"help\":","lastModifiedDate":"2024-01-24"},{"lineNumber":154,"author":{"gitId":"TopKec"},"content":"                        System.out.println(\"The following are commands that I recgonise, and their respective formats:\");","lastModifiedDate":"2024-01-24"},{"lineNumber":155,"author":{"gitId":"TopKec"},"content":"                        System.out.println(\"bye - terminates the program\");","lastModifiedDate":"2024-01-24"},{"lineNumber":156,"author":{"gitId":"TopKec"},"content":"                        System.out.println(\"list - provides a list of events that you have added prior\");","lastModifiedDate":"2024-01-24"},{"lineNumber":157,"author":{"gitId":"TopKec"},"content":"                        System.out.println(\"mark (x) - marks the xth item on the list as complete. Note that an item marked complete cannot be marked complete again.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":158,"author":{"gitId":"TopKec"},"content":"                        System.out.println(\"unmark (x) - marks the xth item on the list as incomplete. Note than an item marked incomplete cannot be marked incomplete again.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":159,"author":{"gitId":"TopKec"},"content":"                        System.out.println(\"todo (item) - adds a todo item to the list.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":160,"author":{"gitId":"TopKec"},"content":"                        System.out.println(\"deadline (item) /by (date1) - adds a deadline item to the list which is due on date1.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":161,"author":{"gitId":"TopKec"},"content":"                        System.out.println(\"event (item) /from (date1) /to (date2) - adds an event item to the list which begins on date1 and ends on date2.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":162,"author":{"gitId":"TopKec"},"content":"                        System.out.println(\"delete (x) - delete the xth item from the list. Do note that this may affect the positioning of some of the items.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":163,"author":{"gitId":"TopKec"},"content":"                        break;","lastModifiedDate":"2024-01-24"},{"lineNumber":164,"author":{"gitId":"TopKec"},"content":"                    case \"bye\":","lastModifiedDate":"2024-01-24"},{"lineNumber":165,"author":{"gitId":"TopKec"},"content":"                        exit \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":166,"author":{"gitId":"TopKec"},"content":"                        break;","lastModifiedDate":"2024-01-24"},{"lineNumber":167,"author":{"gitId":"TopKec"},"content":"                    default:","lastModifiedDate":"2024-01-24"},{"lineNumber":168,"author":{"gitId":"TopKec"},"content":"                        System.out.println(\"Hm, this doesn\u0027t seem like something can do for you. Try something else?\\nSteven\u0027s advice: try typing \\\"help\\\" to see what commands are available.\");","lastModifiedDate":"2024-01-24"},{"lineNumber":169,"author":{"gitId":"TopKec"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":170,"author":{"gitId":"TopKec"},"content":"                System.out.print(line);","lastModifiedDate":"2024-01-24"},{"lineNumber":171,"author":{"gitId":"TopKec"},"content":"                if (exit) {","lastModifiedDate":"2024-02-01"},{"lineNumber":172,"author":{"gitId":"TopKec"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":173,"author":{"gitId":"TopKec"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":174,"author":{"gitId":"TopKec"},"content":"            }","lastModifiedDate":"2024-01-24"},{"lineNumber":175,"author":{"gitId":"TopKec"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":176,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":177,"author":{"gitId":"TopKec"},"content":"        System.out.println(\"I\u0027ll see you soon then!\\n\" + line);","lastModifiedDate":"2024-01-24"},{"lineNumber":178,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":179,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":180,"author":{"gitId":"TopKec"},"content":"    private static ArrayList\u003cTask\u003e readFile(File newFile) throws FileNotFoundException {","lastModifiedDate":"2024-02-01"},{"lineNumber":181,"author":{"gitId":"TopKec"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":182,"author":{"gitId":"TopKec"},"content":"        Scanner s \u003d new Scanner(newFile);","lastModifiedDate":"2024-02-01"},{"lineNumber":183,"author":{"gitId":"TopKec"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":184,"author":{"gitId":"TopKec"},"content":"            String readLine \u003d s.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":185,"author":{"gitId":"TopKec"},"content":"            String eventType \u003d readLine.split(\" \\\\| \")[0];","lastModifiedDate":"2024-02-01"},{"lineNumber":186,"author":{"gitId":"TopKec"},"content":"            boolean cleared \u003d readLine.split(\" \\\\| \")[1].equals(\"1\");","lastModifiedDate":"2024-02-01"},{"lineNumber":187,"author":{"gitId":"TopKec"},"content":"            String description \u003d readLine.split(\" \\\\| \", 3)[2];","lastModifiedDate":"2024-02-01"},{"lineNumber":188,"author":{"gitId":"TopKec"},"content":"            Task t;","lastModifiedDate":"2024-02-01"},{"lineNumber":189,"author":{"gitId":"TopKec"},"content":"            switch (eventType) {","lastModifiedDate":"2024-02-01"},{"lineNumber":190,"author":{"gitId":"TopKec"},"content":"                case \"T\":","lastModifiedDate":"2024-02-01"},{"lineNumber":191,"author":{"gitId":"TopKec"},"content":"                    t \u003d new Todo(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":192,"author":{"gitId":"TopKec"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":193,"author":{"gitId":"TopKec"},"content":"                case \"D\":","lastModifiedDate":"2024-02-01"},{"lineNumber":194,"author":{"gitId":"TopKec"},"content":"                    t \u003d new Deadline(description.split(\" \\\\| \")[0], description.split(\" \\\\| \")[1]);","lastModifiedDate":"2024-02-01"},{"lineNumber":195,"author":{"gitId":"TopKec"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":196,"author":{"gitId":"TopKec"},"content":"                case \"E\":","lastModifiedDate":"2024-02-01"},{"lineNumber":197,"author":{"gitId":"TopKec"},"content":"                    t \u003d new Event(description.split(\" \\\\| \")[0], description.split(\" \\\\| \")[1], description.split(\" \\\\| \")[2]);","lastModifiedDate":"2024-02-01"},{"lineNumber":198,"author":{"gitId":"TopKec"},"content":"                    break;","lastModifiedDate":"2024-02-01"},{"lineNumber":199,"author":{"gitId":"TopKec"},"content":"                default:","lastModifiedDate":"2024-02-01"},{"lineNumber":200,"author":{"gitId":"TopKec"},"content":"                    t \u003d new Task(\"errortemp\");","lastModifiedDate":"2024-02-01"},{"lineNumber":201,"author":{"gitId":"TopKec"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":202,"author":{"gitId":"TopKec"},"content":"            if (cleared) {","lastModifiedDate":"2024-02-01"},{"lineNumber":203,"author":{"gitId":"TopKec"},"content":"                t.toggleCompletion();","lastModifiedDate":"2024-02-01"},{"lineNumber":204,"author":{"gitId":"TopKec"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":205,"author":{"gitId":"TopKec"},"content":"            list.add(t);","lastModifiedDate":"2024-02-01"},{"lineNumber":206,"author":{"gitId":"TopKec"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":207,"author":{"gitId":"TopKec"},"content":"        return list;","lastModifiedDate":"2024-02-01"},{"lineNumber":208,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":209,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":210,"author":{"gitId":"TopKec"},"content":"    private static void refreshFile(ArrayList\u003cTask\u003e list) throws IOException{","lastModifiedDate":"2024-02-01"},{"lineNumber":211,"author":{"gitId":"TopKec"},"content":"        FileWriter fw \u003d new FileWriter(\"data/Steven.txt\");","lastModifiedDate":"2024-02-01"},{"lineNumber":212,"author":{"gitId":"TopKec"},"content":"        for(Task t : list) {","lastModifiedDate":"2024-02-01"},{"lineNumber":213,"author":{"gitId":"TopKec"},"content":"            String description \u003d t.storeFormat() + \"\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":214,"author":{"gitId":"TopKec"},"content":"            fw.write(description);","lastModifiedDate":"2024-02-01"},{"lineNumber":215,"author":{"gitId":"TopKec"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":216,"author":{"gitId":"TopKec"},"content":"        fw.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":217,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":218,"author":{"gitId":"TopKec"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"TopKec":218}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopKec"},"content":"public class Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"TopKec"},"content":"    protected final String name;","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"TopKec"},"content":"    protected boolean complete;","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"TopKec"},"content":"    Task(String name) {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"TopKec"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"TopKec"},"content":"        this.complete \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"TopKec"},"content":"    boolean getCompletionStatus() {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"TopKec"},"content":"        return this.complete;","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"TopKec"},"content":"    void toggleCompletion() {","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"TopKec"},"content":"        if (complete) {","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"TopKec"},"content":"            complete \u003d false;","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"TopKec"},"content":"            return;","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"TopKec"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"TopKec"},"content":"        complete \u003d true;","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"TopKec"},"content":"    protected String completionDisplay() {","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"TopKec"},"content":"        if (complete) {","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"TopKec"},"content":"            return \"[X]\";","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"TopKec"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"TopKec"},"content":"        return \"[ ]\";","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"TopKec"},"content":"    protected String taskTypeDisplay() {","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"TopKec"},"content":"        return \"[this shouldn\u0027t show]\";","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"TopKec"},"content":"    public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"TopKec"},"content":"        return String.format(\"%s%s %s\", this.taskTypeDisplay(), this.completionDisplay(), this.name);","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"TopKec"},"content":"    public String storeFormat() {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"TopKec"},"content":"        String completeFormat \u003d complete ? \"1\" : \"0\";","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"TopKec"},"content":"        return String.format(\"%s | %s | %s\", \"Err\", completeFormat, name);","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"TopKec"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"TopKec":38}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TopKec"},"content":"public class Todo extends Task{","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"TopKec"},"content":"    Todo (String name) {","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"TopKec"},"content":"        super(name);","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"TopKec"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"TopKec"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"TopKec"},"content":"    public String taskTypeDisplay() {","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"TopKec"},"content":"        return \"[T]\";","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"TopKec"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"TopKec"},"content":"    public String storeFormat() {","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"TopKec"},"content":"        String completeFormat \u003d complete ? \"1\" : \"0\";","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"TopKec"},"content":"        return String.format(\"%s | %s | %s\", \"T\", completeFormat, name);","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"TopKec"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"TopKec"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"TopKec":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"TopKec"},"content":"java -classpath ..\\bin Steven \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"TopKec":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"TopKec"},"content":"java -classpath ../bin Steven \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"TopKec":1,"-":37}}]
