[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"# luke.luke project template","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"LWS49"},"content":"3. After that, locate the `src/main/java/luke.luke.java` file, right-click it, and choose `Run luke.luke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LWS49":2,"-":22}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"LWS49"},"content":"Luke is a CLI-based simple to-do list app for you to keep track of all your tasks, big and small!","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"LWS49"},"content":"If Notion\u0027s overwhelming amount of functionality intimidates you, this might just be the to-do","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"LWS49"},"content":"list app for you.","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"LWS49"},"content":"## Quick start","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"LWS49"},"content":"Download the latest `Luke.jar` from (here) [https://github.com/LWS49/ip/blob/master/build/libs/luke.jar]","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"LWS49"},"content":"Note that text in brackets are arguments you are supposed to replace when entering the command.","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"LWS49"},"content":"### Save different types of tasks","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"LWS49"},"content":"You can save your tasks under one of three types: Todo, Deadline and Event. ","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"LWS49"},"content":"1. Todo","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"LWS49"},"content":"A todo task has only one field: the description of the task.","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"LWS49"},"content":"The simplest format for the simplest tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"LWS49"},"content":"2. Deadline","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"LWS49"},"content":"A deadline task has two fields: the description of the task, and the deadline.","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"LWS49"},"content":"Suited for tasks with a deadline you need to keep track of.","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"LWS49"},"content":"3. Event","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"LWS49"},"content":"An event task has two fields: the description of the task, start time, and end time.","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"LWS49"},"content":"Suited for events with a start time and end time that you need to keep track of.","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"LWS49"},"content":"The type of task is labeled at the front of the output:","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"LWS49"},"content":"`[T]`: todo task","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"LWS49"},"content":"`[D]`: deadline task","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"LWS49"},"content":"`[E]`: event task","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"LWS49"},"content":"Some examples below:","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"LWS49"},"content":"[T][ ] borrow book -\u003e todo task","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"LWS49"},"content":"[D][ ] return book (by: Wednesday) -\u003e deadline task","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"LWS49"},"content":"[E][ ] librarian interview (from: Tues 2pm to: Tues 3pm) -\u003e event task","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"LWS49"},"content":"### List all tasks","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"LWS49"},"content":"You can list all tasks using the `list` command.","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"LWS49"},"content":"It will list all tasks you have in order, displaying the following information for todo tasks:","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"LWS49"},"content":"1. Task number","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"LWS49"},"content":"2. Task type","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"LWS49"},"content":"3. Marked/Unmarked","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"LWS49"},"content":"4. Description","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"LWS49"},"content":"For deadline tasks, it will also display:","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"LWS49"},"content":"5. Deadline","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"LWS49"},"content":"For event tasks, it will also display:","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"LWS49"},"content":"5. Start time","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"LWS49"},"content":"6. End time","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"LWS49"},"content":"Example of output:","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"LWS49"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"LWS49"},"content":"[T][ ] borrow book","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"LWS49"},"content":"[D][ ] return book (by: Wednesday)","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"LWS49"},"content":"[E][ ] librarian interview (from: Tues 2pm to: Tues 3pm)","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":73,"author":{"gitId":"LWS49"},"content":"### Mark and unmark tasks","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":75,"author":{"gitId":"LWS49"},"content":"You can mark and unmark tasks using the `mark` and `unmark` commands to keep track of whether","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"LWS49"},"content":"a task has been completed.","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"LWS49"},"content":"Example of marked vs. unmarked tasks:","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"LWS49"},"content":"[T][X] borrow book -\u003e marked","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"LWS49"},"content":"[T][ ] borrow book -\u003e unmarked","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"LWS49"},"content":"A new task is unmarked by default.","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"LWS49"},"content":"### Delete tasks","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"LWS49"},"content":"You can delete tasks using the `delete` commands to remove tasks from the list.","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"LWS49"},"content":"The deleted task will be displayed.","lastModifiedDate":"2024-02-19"},{"lineNumber":90,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"LWS49"},"content":"### Find tasks","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"LWS49"},"content":"You can find tasks using the `find` command to find tasks whose description contain your input.","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"LWS49"},"content":"It does not select tasks whose other fields contain your input - it only checks the description","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"LWS49"},"content":"of each task.","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"LWS49"},"content":"### Edit tasks","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"LWS49"},"content":"You use the `edit` command to edit a field of a task.","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"LWS49"},"content":"### Save tasks to your local drive","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"LWS49"},"content":"You use the `bye` command to save the list to your local drive.","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"LWS49"},"content":"Whenever you open this application, your local list is automatically loaded into the application (if","lastModifiedDate":"2024-02-19"},{"lineNumber":106,"author":{"gitId":"LWS49"},"content":"the save file exists).","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"LWS49"},"content":"Note that all arguments are expected to be String, unless stated otherwise.","lastModifiedDate":"2024-02-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":112,"author":{"gitId":"LWS49"},"content":"### `todo` - Saves a todo task.","lastModifiedDate":"2024-02-19"},{"lineNumber":113,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":114,"author":{"gitId":"LWS49"},"content":"Saves a todo task. Successful message shown upon successful save.","lastModifiedDate":"2024-02-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":116,"author":{"gitId":"LWS49"},"content":"Format of command:","lastModifiedDate":"2024-02-19"},{"lineNumber":117,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":119,"author":{"gitId":"LWS49"},"content":"todo (description)","lastModifiedDate":"2024-02-19"},{"lineNumber":120,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":121,"author":{"gitId":"LWS49"},"content":"Arguments:","lastModifiedDate":"2024-02-19"},{"lineNumber":122,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":123,"author":{"gitId":"LWS49"},"content":"`description`: the description of your task","lastModifiedDate":"2024-02-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":127,"author":{"gitId":"LWS49"},"content":"`todo borrow book`","lastModifiedDate":"2024-02-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":131,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":132,"author":{"gitId":"LWS49"},"content":"I\u0027ve added this task:","lastModifiedDate":"2024-02-19"},{"lineNumber":133,"author":{"gitId":"LWS49"},"content":"[T][ ] borrow book","lastModifiedDate":"2024-02-19"},{"lineNumber":134,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":136,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":137,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":138,"author":{"gitId":"LWS49"},"content":"### `deadline` - Saves a deadline task.","lastModifiedDate":"2024-02-19"},{"lineNumber":139,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":140,"author":{"gitId":"LWS49"},"content":"Saves a deadline task with a deadline. Successful message shown upon successful save.","lastModifiedDate":"2024-02-19"},{"lineNumber":141,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":142,"author":{"gitId":"LWS49"},"content":"Format of command:","lastModifiedDate":"2024-02-19"},{"lineNumber":143,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":144,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":145,"author":{"gitId":"LWS49"},"content":"deadline (description) /by (deadline)","lastModifiedDate":"2024-02-19"},{"lineNumber":146,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":147,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":148,"author":{"gitId":"LWS49"},"content":"Arguments:","lastModifiedDate":"2024-02-19"},{"lineNumber":149,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":150,"author":{"gitId":"LWS49"},"content":"`description`: the description of your task","lastModifiedDate":"2024-02-19"},{"lineNumber":151,"author":{"gitId":"LWS49"},"content":"`deadline`: the deadline of your task","lastModifiedDate":"2024-02-19"},{"lineNumber":152,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":153,"author":{"gitId":"LWS49"},"content":"Example of usage:","lastModifiedDate":"2024-02-19"},{"lineNumber":154,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":155,"author":{"gitId":"LWS49"},"content":"`deadline return book /by Wednesday`","lastModifiedDate":"2024-02-19"},{"lineNumber":156,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":157,"author":{"gitId":"LWS49"},"content":"Expected outcome:","lastModifiedDate":"2024-02-19"},{"lineNumber":158,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":159,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":160,"author":{"gitId":"LWS49"},"content":"I\u0027ve added this task:","lastModifiedDate":"2024-02-19"},{"lineNumber":161,"author":{"gitId":"LWS49"},"content":"[D][ ] return book (by: Wednesday)","lastModifiedDate":"2024-02-19"},{"lineNumber":162,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":163,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":164,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":165,"author":{"gitId":"LWS49"},"content":"### `event` - Saves an event task.","lastModifiedDate":"2024-02-19"},{"lineNumber":166,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":167,"author":{"gitId":"LWS49"},"content":"Saves an event task with a start and end time. Successful message shown upon successful save.","lastModifiedDate":"2024-02-19"},{"lineNumber":168,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":169,"author":{"gitId":"LWS49"},"content":"Format of command:","lastModifiedDate":"2024-02-19"},{"lineNumber":170,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":171,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":172,"author":{"gitId":"LWS49"},"content":"event (description) /from (start time) /to (end time)","lastModifiedDate":"2024-02-19"},{"lineNumber":173,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":174,"author":{"gitId":"LWS49"},"content":"Arguments:","lastModifiedDate":"2024-02-19"},{"lineNumber":175,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":176,"author":{"gitId":"LWS49"},"content":"`description`: the description of your task.","lastModifiedDate":"2024-02-19"},{"lineNumber":177,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":178,"author":{"gitId":"LWS49"},"content":"`start time`: the start time of your task.","lastModifiedDate":"2024-02-19"},{"lineNumber":179,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":180,"author":{"gitId":"LWS49"},"content":"`end time`: the end time of your task.","lastModifiedDate":"2024-02-19"},{"lineNumber":181,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":182,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":183,"author":{"gitId":"LWS49"},"content":"Example of usage:","lastModifiedDate":"2024-02-19"},{"lineNumber":184,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":185,"author":{"gitId":"LWS49"},"content":"`event librarian interview /from Tues 2pm /to Tues 3pm`","lastModifiedDate":"2024-02-19"},{"lineNumber":186,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":187,"author":{"gitId":"LWS49"},"content":"Expected outcome:","lastModifiedDate":"2024-02-19"},{"lineNumber":188,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":189,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":190,"author":{"gitId":"LWS49"},"content":"I\u0027ve added this task:","lastModifiedDate":"2024-02-19"},{"lineNumber":191,"author":{"gitId":"LWS49"},"content":"[E][ ] librarian interview (from: Tues 2pm to: Tues 3pm)","lastModifiedDate":"2024-02-19"},{"lineNumber":192,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":193,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":194,"author":{"gitId":"LWS49"},"content":"### `list` - Lists all saved tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":195,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":196,"author":{"gitId":"LWS49"},"content":"Lists all saved tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":197,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":198,"author":{"gitId":"LWS49"},"content":"Format of command:","lastModifiedDate":"2024-02-19"},{"lineNumber":199,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":200,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":201,"author":{"gitId":"LWS49"},"content":"list","lastModifiedDate":"2024-02-19"},{"lineNumber":202,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":203,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":204,"author":{"gitId":"LWS49"},"content":"Expected outcome:","lastModifiedDate":"2024-02-19"},{"lineNumber":205,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":206,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":207,"author":{"gitId":"LWS49"},"content":"Here are the tasks in your list:","lastModifiedDate":"2024-02-19"},{"lineNumber":208,"author":{"gitId":"LWS49"},"content":"[T][ ] borrow book","lastModifiedDate":"2024-02-19"},{"lineNumber":209,"author":{"gitId":"LWS49"},"content":"[D][ ] return book (by: Wednesday)","lastModifiedDate":"2024-02-19"},{"lineNumber":210,"author":{"gitId":"LWS49"},"content":"[E][ ] librarian interview (from: Tues 2pm to: Tues 3pm)","lastModifiedDate":"2024-02-19"},{"lineNumber":211,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":212,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":213,"author":{"gitId":"LWS49"},"content":"### `mark` - Mark a task.","lastModifiedDate":"2024-02-19"},{"lineNumber":214,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":215,"author":{"gitId":"LWS49"},"content":"Marks a task. Successful message shown upon successful marking.","lastModifiedDate":"2024-02-19"},{"lineNumber":216,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":217,"author":{"gitId":"LWS49"},"content":"Format of command:","lastModifiedDate":"2024-02-19"},{"lineNumber":218,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":219,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":220,"author":{"gitId":"LWS49"},"content":"mark (task number)","lastModifiedDate":"2024-02-19"},{"lineNumber":221,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":222,"author":{"gitId":"LWS49"},"content":"Arguments:","lastModifiedDate":"2024-02-19"},{"lineNumber":223,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":224,"author":{"gitId":"LWS49"},"content":"`task number`: the task number as listed in the `list` function.","lastModifiedDate":"2024-02-19"},{"lineNumber":225,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":226,"author":{"gitId":"LWS49"},"content":"Example of usage:","lastModifiedDate":"2024-02-19"},{"lineNumber":227,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":228,"author":{"gitId":"LWS49"},"content":"`delete 1`","lastModifiedDate":"2024-02-19"},{"lineNumber":229,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":230,"author":{"gitId":"LWS49"},"content":"Expected outcome:","lastModifiedDate":"2024-02-19"},{"lineNumber":231,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":232,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":233,"author":{"gitId":"LWS49"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2024-02-19"},{"lineNumber":234,"author":{"gitId":"LWS49"},"content":"[T][X] return book","lastModifiedDate":"2024-02-19"},{"lineNumber":235,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":236,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":237,"author":{"gitId":"LWS49"},"content":"### `unmark` - Unmark a task.","lastModifiedDate":"2024-02-19"},{"lineNumber":238,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":239,"author":{"gitId":"LWS49"},"content":"Unmarks a task. Successful message shown upon successful unmarking.","lastModifiedDate":"2024-02-19"},{"lineNumber":240,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":241,"author":{"gitId":"LWS49"},"content":"Format of command:","lastModifiedDate":"2024-02-19"},{"lineNumber":242,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":243,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":244,"author":{"gitId":"LWS49"},"content":"unmark (task number)","lastModifiedDate":"2024-02-19"},{"lineNumber":245,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":246,"author":{"gitId":"LWS49"},"content":"Arguments:","lastModifiedDate":"2024-02-19"},{"lineNumber":247,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":248,"author":{"gitId":"LWS49"},"content":"`task number`: the task number as listed in the `list` function.","lastModifiedDate":"2024-02-19"},{"lineNumber":249,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":250,"author":{"gitId":"LWS49"},"content":"Example of usage:","lastModifiedDate":"2024-02-19"},{"lineNumber":251,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":252,"author":{"gitId":"LWS49"},"content":"`unmark 1`","lastModifiedDate":"2024-02-19"},{"lineNumber":253,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":254,"author":{"gitId":"LWS49"},"content":"Expected outcome:","lastModifiedDate":"2024-02-19"},{"lineNumber":255,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":256,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":257,"author":{"gitId":"LWS49"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2024-02-19"},{"lineNumber":258,"author":{"gitId":"LWS49"},"content":"[T][ ] return book","lastModifiedDate":"2024-02-19"},{"lineNumber":259,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":260,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":261,"author":{"gitId":"LWS49"},"content":"### `delete` - Delete a task.","lastModifiedDate":"2024-02-19"},{"lineNumber":262,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":263,"author":{"gitId":"LWS49"},"content":"Delete a task. Successful message shown upon successful deletion.","lastModifiedDate":"2024-02-19"},{"lineNumber":264,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":265,"author":{"gitId":"LWS49"},"content":"Format of command:","lastModifiedDate":"2024-02-19"},{"lineNumber":266,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":267,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":268,"author":{"gitId":"LWS49"},"content":"delete (task number)","lastModifiedDate":"2024-02-19"},{"lineNumber":269,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":270,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":271,"author":{"gitId":"LWS49"},"content":"Arguments:","lastModifiedDate":"2024-02-19"},{"lineNumber":272,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":273,"author":{"gitId":"LWS49"},"content":"`task number`: the task number as listed in the `list` function.","lastModifiedDate":"2024-02-19"},{"lineNumber":274,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":275,"author":{"gitId":"LWS49"},"content":"Example of usage:","lastModifiedDate":"2024-02-19"},{"lineNumber":276,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":277,"author":{"gitId":"LWS49"},"content":"`delete 1`","lastModifiedDate":"2024-02-19"},{"lineNumber":278,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":279,"author":{"gitId":"LWS49"},"content":"Expected outcome:","lastModifiedDate":"2024-02-19"},{"lineNumber":280,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":281,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":282,"author":{"gitId":"LWS49"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2024-02-19"},{"lineNumber":283,"author":{"gitId":"LWS49"},"content":"[T][ ] return book","lastModifiedDate":"2024-02-19"},{"lineNumber":284,"author":{"gitId":"LWS49"},"content":"You now have 2 tasks in the list.","lastModifiedDate":"2024-02-19"},{"lineNumber":285,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":286,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":287,"author":{"gitId":"LWS49"},"content":"### `Find` - Finds all tasks that contain a string.","lastModifiedDate":"2024-02-19"},{"lineNumber":288,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":289,"author":{"gitId":"LWS49"},"content":"Find all tasks that contain the given string in its description and list them.","lastModifiedDate":"2024-02-19"},{"lineNumber":290,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":291,"author":{"gitId":"LWS49"},"content":"Format of command:","lastModifiedDate":"2024-02-19"},{"lineNumber":292,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":293,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":294,"author":{"gitId":"LWS49"},"content":"find (keyword)","lastModifiedDate":"2024-02-19"},{"lineNumber":295,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":296,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":297,"author":{"gitId":"LWS49"},"content":"Arguments:","lastModifiedDate":"2024-02-19"},{"lineNumber":298,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":299,"author":{"gitId":"LWS49"},"content":"`keyword`: the string used to find the tasks. Can be a string containing spaces.","lastModifiedDate":"2024-02-19"},{"lineNumber":300,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":301,"author":{"gitId":"LWS49"},"content":"Example of usage:","lastModifiedDate":"2024-02-19"},{"lineNumber":302,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":303,"author":{"gitId":"LWS49"},"content":"`find book`","lastModifiedDate":"2024-02-19"},{"lineNumber":304,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":305,"author":{"gitId":"LWS49"},"content":"Expected outcome:","lastModifiedDate":"2024-02-19"},{"lineNumber":306,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":307,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":308,"author":{"gitId":"LWS49"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2024-02-19"},{"lineNumber":309,"author":{"gitId":"LWS49"},"content":"[T][ ] borrow book","lastModifiedDate":"2024-02-19"},{"lineNumber":310,"author":{"gitId":"LWS49"},"content":"[D][ ] return book (by: Wednesday)","lastModifiedDate":"2024-02-19"},{"lineNumber":311,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":312,"author":{"gitId":"LWS49"},"content":"The expected outcome if no tasks are found:","lastModifiedDate":"2024-02-19"},{"lineNumber":313,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":314,"author":{"gitId":"LWS49"},"content":"No tasks with the keyword found.","lastModifiedDate":"2024-02-19"},{"lineNumber":315,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":316,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":317,"author":{"gitId":"LWS49"},"content":"### `Edit` - Edit a task\u0027s details","lastModifiedDate":"2024-02-19"},{"lineNumber":318,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":319,"author":{"gitId":"LWS49"},"content":"Edit a task\u0027s field by replacing it with the given input. ","lastModifiedDate":"2024-02-19"},{"lineNumber":320,"author":{"gitId":"LWS49"},"content":"Successful message shown upon successful modification.","lastModifiedDate":"2024-02-19"},{"lineNumber":321,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":322,"author":{"gitId":"LWS49"},"content":"Format of command:","lastModifiedDate":"2024-02-19"},{"lineNumber":323,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":324,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":325,"author":{"gitId":"LWS49"},"content":"edit (task number) (field) (new string)","lastModifiedDate":"2024-02-19"},{"lineNumber":326,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":327,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":328,"author":{"gitId":"LWS49"},"content":"Arguments:","lastModifiedDate":"2024-02-19"},{"lineNumber":329,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":330,"author":{"gitId":"LWS49"},"content":"`task number`: the task number of the task  to be edited as listed in the `list` function.","lastModifiedDate":"2024-02-19"},{"lineNumber":331,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":332,"author":{"gitId":"LWS49"},"content":"`field`: the field of the task to be edited","lastModifiedDate":"2024-02-19"},{"lineNumber":333,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":334,"author":{"gitId":"LWS49"},"content":"`new string`: the string used to replace the field","lastModifiedDate":"2024-02-19"},{"lineNumber":335,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":336,"author":{"gitId":"LWS49"},"content":"Points to note for `field`:","lastModifiedDate":"2024-02-19"},{"lineNumber":337,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":338,"author":{"gitId":"LWS49"},"content":"1. `todo` tasks only accept `description` under the field argument.","lastModifiedDate":"2024-02-19"},{"lineNumber":339,"author":{"gitId":"LWS49"},"content":"2. `deadline` tasks accept `description` and `by` under the field argument.","lastModifiedDate":"2024-02-19"},{"lineNumber":340,"author":{"gitId":"LWS49"},"content":"3. `event` tasks accept `description` ,`from` and `to` under the field argument.","lastModifiedDate":"2024-02-19"},{"lineNumber":341,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":342,"author":{"gitId":"LWS49"},"content":"Example of usage:","lastModifiedDate":"2024-02-19"},{"lineNumber":343,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":344,"author":{"gitId":"LWS49"},"content":"`edit 1 description borrow Harry Potter`","lastModifiedDate":"2024-02-19"},{"lineNumber":345,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":346,"author":{"gitId":"LWS49"},"content":"Expected outcome:","lastModifiedDate":"2024-02-19"},{"lineNumber":347,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":348,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":349,"author":{"gitId":"LWS49"},"content":"Task change successful! This is the new task:","lastModifiedDate":"2024-02-19"},{"lineNumber":350,"author":{"gitId":"LWS49"},"content":"[T][ ] borrow Harry Potter","lastModifiedDate":"2024-02-19"},{"lineNumber":351,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":352,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":353,"author":{"gitId":"LWS49"},"content":"### `bye` - saves the file to the local drive.","lastModifiedDate":"2024-02-19"},{"lineNumber":354,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":355,"author":{"gitId":"LWS49"},"content":"Saves the file to the local drive. Successful message shown upon successful deletion.","lastModifiedDate":"2024-02-19"},{"lineNumber":356,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":357,"author":{"gitId":"LWS49"},"content":"Format of command:","lastModifiedDate":"2024-02-19"},{"lineNumber":358,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":359,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":360,"author":{"gitId":"LWS49"},"content":"bye","lastModifiedDate":"2024-02-19"},{"lineNumber":361,"author":{"gitId":"LWS49"},"content":"```","lastModifiedDate":"2024-02-19"},{"lineNumber":362,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":363,"author":{"gitId":"LWS49"},"content":"Expected outcome:","lastModifiedDate":"2024-02-19"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":365,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":366,"author":{"gitId":"LWS49"},"content":"File saved. Hope to see you again soon!","lastModifiedDate":"2024-02-19"},{"lineNumber":367,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"LWS49":343,"-":24}},{"path":"src/main/java/luke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"package luke;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"LWS49"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"LWS49"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"LWS49"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"LWS49"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"LWS49"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"LWS49"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"LWS49"},"content":"    protected String by;","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"LWS49"},"content":"    protected LocalDateTime byDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"LWS49"},"content":"    protected boolean hasByDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"LWS49"},"content":"    protected DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"M/dd/yyyy HHmm\");","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"LWS49"},"content":"    protected DateTimeFormatter dateTimeStringFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM uuuu hh:mma\");","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"LWS49"},"content":"     * Constructs a Deadline object with the given description and deadline.","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"LWS49"},"content":"     * @param description the description of the task","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"LWS49"},"content":"     * @param by the deadline of the task, in the format \"M/dd/yyyy HHmm\" (e.g., \"2/12/2022 1800\")","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"LWS49"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"LWS49"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"LWS49"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"LWS49"},"content":"            this.byDate \u003d LocalDateTime.parse(by, dateTimeFormatter);","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"LWS49"},"content":"            this.hasByDate \u003d true;","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"LWS49"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"LWS49"},"content":"            this.by \u003d by;","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"LWS49"},"content":"            this.hasByDate \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"LWS49"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"LWS49"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"LWS49"},"content":"     * @return a string representation of the deadline task","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"LWS49"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"LWS49"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"LWS49"},"content":"        if (hasByDate) {","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"LWS49"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + dateTimeStringFormatter.format(byDate) + \")\";","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"LWS49"},"content":"        } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"LWS49"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"LWS49"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"LWS49"},"content":"    protected String queryType() {","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"LWS49"},"content":"        return \"Deadline\";","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"LWS49"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"LWS49"},"content":"    protected void changeBy(String newString) {","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"LWS49"},"content":"        this.by \u003d newString;","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"LWS49"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"LWS49":59}},{"path":"src/main/java/luke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"package luke;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"LWS49"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"LWS49"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"LWS49"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"LWS49"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"LWS49"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"LWS49"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"LWS49"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"LWS49"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"LWS49"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"LWS49"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"LWS49"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"LWS49"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"LWS49"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"LWS49"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"LWS49"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"LWS49"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"LWS49"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"LWS49"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"LWS49"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"LWS49"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"LWS49"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"LWS49"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"LWS49"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"LWS49"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"LWS49"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"LWS49"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"LWS49"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"LWS49"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"LWS49"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"LWS49"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"LWS49"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"LWS49"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"LWS49"},"content":"    private void flip() {","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"LWS49"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"LWS49"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"LWS49"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"LWS49"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"LWS49"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"LWS49"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"LWS49"},"content":"    public static DialogBox getLukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"LWS49"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"LWS49"},"content":"        db.flip();","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"LWS49"},"content":"        return db;","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"LWS49"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"LWS49":62}},{"path":"src/main/java/luke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"package luke;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"LWS49"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"LWS49"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"LWS49"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"LWS49"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"LWS49"},"content":" * Represents a task with a scheduled event with a start and end time.","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"LWS49"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"LWS49"},"content":"    protected String from;","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"LWS49"},"content":"    protected String to;","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"LWS49"},"content":"    protected LocalDateTime fromDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"LWS49"},"content":"    protected boolean hasFromDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"LWS49"},"content":"    protected LocalDateTime toDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"LWS49"},"content":"    protected boolean hasToDate;","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"LWS49"},"content":"    protected DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"M/dd/yyyy HHmm\");","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"LWS49"},"content":"    protected DateTimeFormatter dateTimeStringFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM uuuu hh:mma\");","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"LWS49"},"content":"     * Constructs an Event object with the given description, start date, and end date.","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"LWS49"},"content":"     * @param description the description of the event","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"LWS49"},"content":"     * @param from the start date of the event, in the format \"M/dd/yyyy HHmm\" (e.g., \"2/12/2022 1800\")","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"LWS49"},"content":"     * @param to the end date of the event, in the format \"M/dd/yyyy HHmm\" (e.g., \"2/12/2022 2200\")","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"LWS49"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"LWS49"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"LWS49"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"LWS49"},"content":"            this.fromDate \u003d LocalDateTime.parse(from, dateTimeFormatter);","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"LWS49"},"content":"            this.hasFromDate \u003d true;","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"LWS49"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"LWS49"},"content":"            this.from \u003d from;","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"LWS49"},"content":"            this.hasFromDate \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"LWS49"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"LWS49"},"content":"            this.toDate \u003d LocalDateTime.parse(to, dateTimeFormatter);","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"LWS49"},"content":"            this.hasToDate \u003d true;","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"LWS49"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"LWS49"},"content":"            this.to \u003d to;","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"LWS49"},"content":"            this.hasToDate \u003d false;","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":48,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"LWS49"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"LWS49"},"content":"     * @return a string representation of the event task","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"LWS49"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"LWS49"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":56,"author":{"gitId":"LWS49"},"content":"        if (hasFromDate \u0026\u0026 hasToDate) {","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"LWS49"},"content":"            return \"[E]\" + super.toString() + \" (from: \" + dateTimeStringFormatter.format(fromDate)","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"LWS49"},"content":"                    + \" to: \" + dateTimeStringFormatter.format(toDate) + \")\";","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"LWS49"},"content":"        } else if (hasFromDate) {","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"LWS49"},"content":"            return \"[E]\" + super.toString() + \" (from: \" + dateTimeStringFormatter.format(fromDate)","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"LWS49"},"content":"                    + \" to: \" + to + \")\";","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"LWS49"},"content":"        } else if (hasToDate) {","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"LWS49"},"content":"            return \"[E]\" + super.toString() + \" (from: \" + from","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"LWS49"},"content":"                    + \" to: \" + dateTimeStringFormatter.format(toDate) + \")\";","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"LWS49"},"content":"        } else {","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"LWS49"},"content":"            return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-01-23"},{"lineNumber":67,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":68,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":69,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"LWS49"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"LWS49"},"content":"    protected String queryType() {","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"LWS49"},"content":"        return \"Event\";","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"LWS49"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"LWS49"},"content":"    protected void changeFrom(String newString) {","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"LWS49"},"content":"        this.from \u003d newString;","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"LWS49"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"LWS49"},"content":"    protected void changeTo(String newString) {","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"LWS49"},"content":"        this.to \u003d newString;","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"LWS49"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"LWS49":84}},{"path":"src/main/java/luke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"package luke;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"LWS49"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"LWS49"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"LWS49"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"LWS49"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"LWS49"},"content":"public class Launcher {","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"LWS49"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"LWS49"},"content":"        Application.launch(Luke.class, args);","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"LWS49"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"LWS49":11}},{"path":"src/main/java/luke/Luke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"package luke;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"LWS49"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"LWS49"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"LWS49"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"LWS49"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"LWS49"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"LWS49"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"LWS49"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"LWS49"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"LWS49"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"LWS49"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"LWS49"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"LWS49"},"content":" * The main class for the Luke chatbot application.","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"LWS49"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"LWS49"},"content":" * This class extends the JavaFX {@code Application} class and serves as the entry point for the Luke chatbot GUI.","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"LWS49"},"content":" * It initializes the UI components and handles user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"LWS49"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"LWS49"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"LWS49"},"content":" * The conversation between the user and Luke is displayed in a scrollable dialog container.","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"LWS49"},"content":" * User input is processed, and Luke\u0027s response is displayed in dialog boxes within the container.","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"LWS49"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"LWS49"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"LWS49"},"content":" * This class also loads task data from a storage file and initializes the {@code Ui} object to handle user","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"LWS49"},"content":" * interactions.","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"LWS49"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"LWS49"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"LWS49"},"content":"public class Luke extends Application {","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"LWS49"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"LWS49"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"LWS49"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"LWS49"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"LWS49"},"content":"    private final Image userImage \u003d","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"LWS49"},"content":"            new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/DaUser.png\")));","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"LWS49"},"content":"    private final Image lukeImage \u003d","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"LWS49"},"content":"            new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/DaLuke.png\")));","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"LWS49"},"content":"     * Constructs a new instance of the Luke chatbot application.","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"LWS49"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"LWS49"},"content":"     * Initializes the storage, task list, and user interface components.","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"LWS49"},"content":"     * If loading task data from storage fails, it initializes an empty task list and displays a loading error message.","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"LWS49"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"LWS49"},"content":"    public Luke() {","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"LWS49"},"content":"        Storage storage \u003d new Storage(\"./tasks.txt\");","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"LWS49"},"content":"        TaskList taskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"LWS49"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"LWS49"},"content":"            taskList \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"LWS49"},"content":"            ui \u003d new Ui(taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"LWS49"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"LWS49"},"content":"            ui \u003d new Ui();","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"LWS49"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"LWS49"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"LWS49"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"LWS49"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"LWS49"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"LWS49"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"LWS49"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"LWS49"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"LWS49"},"content":"        Button sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"LWS49"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"LWS49"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"LWS49"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"LWS49"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"LWS49"},"content":"        stage.show();","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"LWS49"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"LWS49"},"content":"        stage.setTitle(\"Luke\");","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"LWS49"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"LWS49"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"LWS49"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"LWS49"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"LWS49"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2024-02-19"},{"lineNumber":90,"author":{"gitId":"LWS49"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"LWS49"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"LWS49"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"LWS49"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"LWS49"},"content":"        //You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"LWS49"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"LWS49"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"LWS49"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"LWS49"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"LWS49"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":106,"author":{"gitId":"LWS49"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":108,"author":{"gitId":"LWS49"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":109,"author":{"gitId":"LWS49"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-19"},{"lineNumber":110,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":111,"author":{"gitId":"LWS49"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2024-02-19"},{"lineNumber":112,"author":{"gitId":"LWS49"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2024-02-19"},{"lineNumber":113,"author":{"gitId":"LWS49"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-19"},{"lineNumber":114,"author":{"gitId":"LWS49"},"content":"        });","lastModifiedDate":"2024-02-19"},{"lineNumber":115,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":116,"author":{"gitId":"LWS49"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2024-02-19"},{"lineNumber":117,"author":{"gitId":"LWS49"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"LWS49"},"content":"        });","lastModifiedDate":"2024-02-19"},{"lineNumber":119,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":120,"author":{"gitId":"LWS49"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2024-02-19"},{"lineNumber":121,"author":{"gitId":"LWS49"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2024-02-19"},{"lineNumber":122,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":123,"author":{"gitId":"LWS49"},"content":"        //Initialize the conversation.","lastModifiedDate":"2024-02-19"},{"lineNumber":124,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":125,"author":{"gitId":"LWS49"},"content":"        String lukeText \u003d ui.welcome();","lastModifiedDate":"2024-02-19"},{"lineNumber":126,"author":{"gitId":"LWS49"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-19"},{"lineNumber":127,"author":{"gitId":"LWS49"},"content":"                DialogBox.getLukeDialog(lukeText, lukeImage)","lastModifiedDate":"2024-02-19"},{"lineNumber":128,"author":{"gitId":"LWS49"},"content":"        );","lastModifiedDate":"2024-02-19"},{"lineNumber":129,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":130,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":131,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":132,"author":{"gitId":"LWS49"},"content":"     * Iteration 2:","lastModifiedDate":"2024-02-19"},{"lineNumber":133,"author":{"gitId":"LWS49"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-19"},{"lineNumber":134,"author":{"gitId":"LWS49"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-19"},{"lineNumber":135,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":136,"author":{"gitId":"LWS49"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-19"},{"lineNumber":137,"author":{"gitId":"LWS49"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2024-02-19"},{"lineNumber":138,"author":{"gitId":"LWS49"},"content":"        String lukeText \u003d getResponse(userInput.getText());","lastModifiedDate":"2024-02-19"},{"lineNumber":139,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":140,"author":{"gitId":"LWS49"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-19"},{"lineNumber":141,"author":{"gitId":"LWS49"},"content":"                DialogBox.getUserDialog(userText, userImage),","lastModifiedDate":"2024-02-19"},{"lineNumber":142,"author":{"gitId":"LWS49"},"content":"                DialogBox.getLukeDialog(lukeText, lukeImage)","lastModifiedDate":"2024-02-19"},{"lineNumber":143,"author":{"gitId":"LWS49"},"content":"        );","lastModifiedDate":"2024-02-19"},{"lineNumber":144,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":145,"author":{"gitId":"LWS49"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-19"},{"lineNumber":146,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":147,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":148,"author":{"gitId":"LWS49"},"content":"    String getResponse(String input) {","lastModifiedDate":"2024-02-19"},{"lineNumber":149,"author":{"gitId":"LWS49"},"content":"        return ui.handleInput(input);","lastModifiedDate":"2024-02-19"},{"lineNumber":150,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":151,"author":{"gitId":"LWS49"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"LWS49":151}},{"path":"src/main/java/luke/LukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"package luke;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"LWS49"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"LWS49"},"content":" * Custom exception class for Luke program.","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"LWS49"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"LWS49"},"content":" * Represents exceptions that can occur during the execution of the Luke program.","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"LWS49"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"LWS49"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"LWS49"},"content":"public class LukeException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"LWS49"},"content":"     * Enumeration of exception types.","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"LWS49"},"content":"    public enum ExceptionType {","lastModifiedDate":"2024-02-13"},{"lineNumber":14,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"LWS49"},"content":"        commandInvalid,","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"LWS49"},"content":"        listCommandInvalid,","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"LWS49"},"content":"        taskNumberInvalid,","lastModifiedDate":"2024-02-13"},{"lineNumber":18,"author":{"gitId":"LWS49"},"content":"        descriptionEmpty,","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"LWS49"},"content":"        deadlineEmpty,","lastModifiedDate":"2024-02-13"},{"lineNumber":20,"author":{"gitId":"LWS49"},"content":"        deadlineWrongFormat,","lastModifiedDate":"2024-02-13"},{"lineNumber":21,"author":{"gitId":"LWS49"},"content":"        eventWrongFormat,","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"LWS49"},"content":"        eventFromEmpty,","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"LWS49"},"content":"        eventToEmpty,","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"LWS49"},"content":"        findKeywordEmpty,","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"LWS49"},"content":"        editDetailsEmpty,","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"LWS49"},"content":"        editIncorrectNoArguments,","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"LWS49"},"content":"        editFieldInvalid","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"LWS49"},"content":"    private ExceptionType type;","lastModifiedDate":"2024-02-13"},{"lineNumber":31,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":32,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"LWS49"},"content":"     * Constructs a LukeException object with the specified exception type.","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"LWS49"},"content":"     * @param type the type of exception","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"LWS49"},"content":"    public LukeException(ExceptionType type) {","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"LWS49"},"content":"        super();","lastModifiedDate":"2024-02-13"},{"lineNumber":39,"author":{"gitId":"LWS49"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-02-13"},{"lineNumber":40,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":41,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":42,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"LWS49"},"content":"     * Constructs a default LukeException if no type is given object.","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"LWS49"},"content":"    public LukeException() {","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"LWS49"},"content":"        super();","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"LWS49"},"content":"     * Returns a message describing the exception.","lastModifiedDate":"2024-02-16"},{"lineNumber":51,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":52,"author":{"gitId":"LWS49"},"content":"     * @return a message describing the exception","lastModifiedDate":"2024-02-16"},{"lineNumber":53,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":54,"author":{"gitId":"LWS49"},"content":"    @Override","lastModifiedDate":"2024-02-13"},{"lineNumber":55,"author":{"gitId":"LWS49"},"content":"    public String getMessage() {","lastModifiedDate":"2024-02-13"},{"lineNumber":56,"author":{"gitId":"LWS49"},"content":"        switch (type) {","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"LWS49"},"content":"            case commandInvalid: return \"Invalid command/task type.\";","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"LWS49"},"content":"            case listCommandInvalid: return \"Invalid list command. To list all tasks, please enter \u0027list\u0027 .\";","lastModifiedDate":"2024-02-20"},{"lineNumber":59,"author":{"gitId":"LWS49"},"content":"            case taskNumberInvalid: return \"Task does not exist. Please give a valid task number.\";","lastModifiedDate":"2024-02-20"},{"lineNumber":60,"author":{"gitId":"LWS49"},"content":"            case descriptionEmpty: return \"Invalid command. The description cannot be empty.\";","lastModifiedDate":"2024-02-20"},{"lineNumber":61,"author":{"gitId":"LWS49"},"content":"            case deadlineEmpty: return \"Invalid command. The deadline cannot be empty.\";","lastModifiedDate":"2024-02-20"},{"lineNumber":62,"author":{"gitId":"LWS49"},"content":"            case deadlineWrongFormat: return \"Invalid command. The deadline format as follows needs to be followed: \"","lastModifiedDate":"2024-02-20"},{"lineNumber":63,"author":{"gitId":"LWS49"},"content":"                    + \"deadline (description) /by (deadline).\";","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"LWS49"},"content":"            case eventWrongFormat: return \"Invalid command. The deadline format as follows needs to be followed: \"","lastModifiedDate":"2024-02-20"},{"lineNumber":65,"author":{"gitId":"LWS49"},"content":"                    + \"event (description) /from (start) /to (end).\";","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"LWS49"},"content":"            case eventFromEmpty: return \"Invalid command. The from section cannot be empty.\";","lastModifiedDate":"2024-02-20"},{"lineNumber":67,"author":{"gitId":"LWS49"},"content":"            case eventToEmpty: return \"Invalid command. The to section cannot be empty.\";","lastModifiedDate":"2024-02-20"},{"lineNumber":68,"author":{"gitId":"LWS49"},"content":"            case findKeywordEmpty: return \"Invalid command. The find command must be followed by a keyword.\";","lastModifiedDate":"2024-02-20"},{"lineNumber":69,"author":{"gitId":"LWS49"},"content":"            case editDetailsEmpty: return \"Invalid command. The edit command must be followed by 3 arguments: task number\"","lastModifiedDate":"2024-02-20"},{"lineNumber":70,"author":{"gitId":"LWS49"},"content":"                    + \", the field to edit, and the new string.\";","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"LWS49"},"content":"            case editIncorrectNoArguments: return \"Invalid command. The edit command must have 3 arguments, each separated\"","lastModifiedDate":"2024-02-20"},{"lineNumber":72,"author":{"gitId":"LWS49"},"content":"                    + \"by a space: task number, field to edit, and the new string.\";","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"LWS49"},"content":"            case editFieldInvalid: return \"Invalid command. The task you select does not have the field that you \"","lastModifiedDate":"2024-02-20"},{"lineNumber":74,"author":{"gitId":"LWS49"},"content":"                    + \"indicated.\\n The possible fields are: \u0027description\u0027, \u0027by\u0027, \u0027from\u0027 and \u0027to\u0027.\";","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"LWS49"},"content":"            default: return \"Unknown error.\";","lastModifiedDate":"2024-02-20"},{"lineNumber":76,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-20"},{"lineNumber":77,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"LWS49"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"LWS49":78}},{"path":"src/main/java/luke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"package luke;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"LWS49"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"LWS49"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"LWS49"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"LWS49"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"LWS49"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"LWS49"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"LWS49"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"LWS49"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"LWS49"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"LWS49"},"content":"    private Luke luke \u003d new Luke();","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"LWS49"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"LWS49"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"LWS49"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"LWS49"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"LWS49"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"LWS49"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"LWS49"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"LWS49"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(luke);","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"LWS49"},"content":"            stage.show();","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"LWS49"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"LWS49"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"LWS49"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"LWS49":30}},{"path":"src/main/java/luke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"package luke;","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"LWS49"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"LWS49"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"LWS49"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"LWS49"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"LWS49"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"LWS49"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"LWS49"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"LWS49"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"LWS49"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"LWS49"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"LWS49"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"LWS49"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"LWS49"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"LWS49"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"LWS49"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"LWS49"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"LWS49"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"LWS49"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"LWS49"},"content":"    private Luke luke;","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"LWS49"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"LWS49"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":28,"author":{"gitId":"LWS49"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":29,"author":{"gitId":"LWS49"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"LWS49"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"LWS49"},"content":"    public void setDuke(Luke l) {","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"LWS49"},"content":"        luke \u003d l;","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"LWS49"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-19"},{"lineNumber":39,"author":{"gitId":"LWS49"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-19"},{"lineNumber":40,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":41,"author":{"gitId":"LWS49"},"content":"    @FXML","lastModifiedDate":"2024-02-19"},{"lineNumber":42,"author":{"gitId":"LWS49"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-19"},{"lineNumber":43,"author":{"gitId":"LWS49"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-19"},{"lineNumber":44,"author":{"gitId":"LWS49"},"content":"        String response \u003d luke.getResponse(input);","lastModifiedDate":"2024-02-19"},{"lineNumber":45,"author":{"gitId":"LWS49"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-19"},{"lineNumber":46,"author":{"gitId":"LWS49"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-19"},{"lineNumber":47,"author":{"gitId":"LWS49"},"content":"                DialogBox.getLukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"LWS49"},"content":"        );","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"LWS49"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"LWS49"},"content":"}","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"LWS49":52}},{"path":"src/main/java/luke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"package luke;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"LWS49"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"LWS49"},"content":" * Parses user input and executes corresponding commands.","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"LWS49"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"LWS49"},"content":"public class Parser {","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"LWS49"},"content":"    private final String[] validCommands \u003d {\"bye\", \"list\", \"unmark\", \"mark\", \"todo\", \"event\", \"deadline\",","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"LWS49"},"content":"        \"delete\", \"find\", \"edit\"};","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"LWS49"},"content":"     * Constructs a Parser object with the specified valid commands and task list.","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"LWS49"},"content":"     * @param taskList the task list to be operated on","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"LWS49"},"content":"    Parser(TaskList taskList) {","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"LWS49"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"LWS49"},"content":"     * Checks if the input command is valid.","lastModifiedDate":"2024-02-16"},{"lineNumber":23,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":24,"author":{"gitId":"LWS49"},"content":"     * @param input the user input command","lastModifiedDate":"2024-02-16"},{"lineNumber":25,"author":{"gitId":"LWS49"},"content":"     * @throws LukeException if the command is invalid","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"LWS49"},"content":"    protected void isInputValid(String input) throws LukeException {","lastModifiedDate":"2024-02-13"},{"lineNumber":28,"author":{"gitId":"LWS49"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2024-02-13"},{"lineNumber":29,"author":{"gitId":"LWS49"},"content":"        String command \u003d inputArr[0];","lastModifiedDate":"2024-02-13"},{"lineNumber":30,"author":{"gitId":"LWS49"},"content":"        for (String validCommand: validCommands) {","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"LWS49"},"content":"            if (command.equals(validCommand)) {","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"LWS49"},"content":"                return;","lastModifiedDate":"2024-02-13"},{"lineNumber":33,"author":{"gitId":"LWS49"},"content":"            }","lastModifiedDate":"2024-02-13"},{"lineNumber":34,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":35,"author":{"gitId":"LWS49"},"content":"        throw new LukeException(LukeException.ExceptionType.commandInvalid);","lastModifiedDate":"2024-02-13"},{"lineNumber":36,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":37,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":38,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"LWS49"},"content":"     * Retrieves the command from the input string.","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"LWS49"},"content":"     * @param input the user input command","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"LWS49"},"content":"     * @return the command extracted from the input","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"LWS49"},"content":"    protected String getCommand(String input) {","lastModifiedDate":"2024-02-13"},{"lineNumber":45,"author":{"gitId":"LWS49"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2024-02-13"},{"lineNumber":46,"author":{"gitId":"LWS49"},"content":"        return inputArr[0];","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":48,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":49,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":50,"author":{"gitId":"LWS49"},"content":"     * Checks if the input is a valid list command.","lastModifiedDate":"2024-02-19"},{"lineNumber":51,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":52,"author":{"gitId":"LWS49"},"content":"     * @param input the input string.","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":54,"author":{"gitId":"LWS49"},"content":"    protected void isListCommandValid(String input) throws LukeException {","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"LWS49"},"content":"        if (!input.substring(4).trim().isEmpty()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"LWS49"},"content":"            throw new LukeException(LukeException.ExceptionType.listCommandInvalid);","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":58,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"LWS49"},"content":"     * Returns a string containing all tasks in the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"LWS49"},"content":"     * @param taskList the task list to be listed","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"LWS49"},"content":"    protected String commandList(TaskList taskList) {","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"LWS49"},"content":"        return taskList.list();","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":68,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":69,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"LWS49"},"content":"     * Marks a task as done in the task list.","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":72,"author":{"gitId":"LWS49"},"content":"     * @param input the user input command","lastModifiedDate":"2024-02-16"},{"lineNumber":73,"author":{"gitId":"LWS49"},"content":"     * @return the task that was marked as done","lastModifiedDate":"2024-02-16"},{"lineNumber":74,"author":{"gitId":"LWS49"},"content":"     * @throws LukeException if the task number is invalid","lastModifiedDate":"2024-02-16"},{"lineNumber":75,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":76,"author":{"gitId":"LWS49"},"content":"    protected Task commandMark(String input) throws LukeException {","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"LWS49"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2024-02-13"},{"lineNumber":78,"author":{"gitId":"LWS49"},"content":"        int taskNo \u003d Integer.parseInt(inputArr[1]) - 1;","lastModifiedDate":"2024-02-13"},{"lineNumber":79,"author":{"gitId":"LWS49"},"content":"        int noTasks \u003d taskList.getNoTasks();","lastModifiedDate":"2024-02-13"},{"lineNumber":80,"author":{"gitId":"LWS49"},"content":"        if (taskNo \u003e\u003d noTasks || taskNo \u003c 0) {","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"LWS49"},"content":"            throw new LukeException(LukeException.ExceptionType.taskNumberInvalid);","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"LWS49"},"content":"        } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"LWS49"},"content":"            taskList.markTask(taskNo);","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"LWS49"},"content":"            return taskList.getTask(taskNo);","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":86,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":87,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":88,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":89,"author":{"gitId":"LWS49"},"content":"     * Unmarks a task in the task list.","lastModifiedDate":"2024-02-16"},{"lineNumber":90,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":91,"author":{"gitId":"LWS49"},"content":"     * @param input the user input command","lastModifiedDate":"2024-02-16"},{"lineNumber":92,"author":{"gitId":"LWS49"},"content":"     * @return the task that was unmarked","lastModifiedDate":"2024-02-16"},{"lineNumber":93,"author":{"gitId":"LWS49"},"content":"     * @throws LukeException if the task number is invalid","lastModifiedDate":"2024-02-16"},{"lineNumber":94,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"LWS49"},"content":"    protected Task commandUnmark(String input) throws LukeException {","lastModifiedDate":"2024-02-13"},{"lineNumber":96,"author":{"gitId":"LWS49"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2024-02-13"},{"lineNumber":97,"author":{"gitId":"LWS49"},"content":"        int taskNo \u003d Integer.parseInt(inputArr[1]) - 1;","lastModifiedDate":"2024-02-13"},{"lineNumber":98,"author":{"gitId":"LWS49"},"content":"        int noTasks \u003d taskList.getNoTasks();","lastModifiedDate":"2024-02-13"},{"lineNumber":99,"author":{"gitId":"LWS49"},"content":"        if (taskNo \u003e\u003d noTasks || taskNo \u003c 0) {","lastModifiedDate":"2024-02-13"},{"lineNumber":100,"author":{"gitId":"LWS49"},"content":"            throw new LukeException(LukeException.ExceptionType.taskNumberInvalid);","lastModifiedDate":"2024-02-13"},{"lineNumber":101,"author":{"gitId":"LWS49"},"content":"        } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":102,"author":{"gitId":"LWS49"},"content":"            taskList.unmarkTask(taskNo);","lastModifiedDate":"2024-02-13"},{"lineNumber":103,"author":{"gitId":"LWS49"},"content":"            return taskList.getMostRecentTask();","lastModifiedDate":"2024-02-13"},{"lineNumber":104,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":105,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":106,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":107,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":108,"author":{"gitId":"LWS49"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2024-02-16"},{"lineNumber":109,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":110,"author":{"gitId":"LWS49"},"content":"     * @param input the user input command","lastModifiedDate":"2024-02-16"},{"lineNumber":111,"author":{"gitId":"LWS49"},"content":"     * @return the task that was deleted","lastModifiedDate":"2024-02-16"},{"lineNumber":112,"author":{"gitId":"LWS49"},"content":"     * @throws LukeException if the task number is invalid","lastModifiedDate":"2024-02-16"},{"lineNumber":113,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":114,"author":{"gitId":"LWS49"},"content":"    protected Task commandDelete(String input) throws LukeException {","lastModifiedDate":"2024-02-13"},{"lineNumber":115,"author":{"gitId":"LWS49"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2024-02-13"},{"lineNumber":116,"author":{"gitId":"LWS49"},"content":"        int taskNo \u003d Integer.parseInt(inputArr[1]) - 1;","lastModifiedDate":"2024-02-13"},{"lineNumber":117,"author":{"gitId":"LWS49"},"content":"        int noTasks \u003d taskList.getNoTasks();","lastModifiedDate":"2024-02-13"},{"lineNumber":118,"author":{"gitId":"LWS49"},"content":"        if (taskNo \u003e\u003d noTasks || taskNo \u003c 0) {","lastModifiedDate":"2024-02-13"},{"lineNumber":119,"author":{"gitId":"LWS49"},"content":"            throw new LukeException(LukeException.ExceptionType.taskNumberInvalid);","lastModifiedDate":"2024-02-13"},{"lineNumber":120,"author":{"gitId":"LWS49"},"content":"        } else {","lastModifiedDate":"2024-02-13"},{"lineNumber":121,"author":{"gitId":"LWS49"},"content":"            return taskList.deleteEvent(taskNo);","lastModifiedDate":"2024-02-19"},{"lineNumber":122,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":123,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":124,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":125,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":126,"author":{"gitId":"LWS49"},"content":"     * Adds a todo task to the task list.","lastModifiedDate":"2024-02-16"},{"lineNumber":127,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":128,"author":{"gitId":"LWS49"},"content":"     * @param input the user input command","lastModifiedDate":"2024-02-16"},{"lineNumber":129,"author":{"gitId":"LWS49"},"content":"     * @return the todo task that was added","lastModifiedDate":"2024-02-16"},{"lineNumber":130,"author":{"gitId":"LWS49"},"content":"     * @throws LukeException if the description is empty","lastModifiedDate":"2024-02-16"},{"lineNumber":131,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":132,"author":{"gitId":"LWS49"},"content":"    protected Task commandTodo(String input) throws LukeException {","lastModifiedDate":"2024-02-13"},{"lineNumber":133,"author":{"gitId":"LWS49"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2024-02-13"},{"lineNumber":134,"author":{"gitId":"LWS49"},"content":"        if (inputArr.length \u003d\u003d 1 || inputArr[1].trim().isEmpty()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":135,"author":{"gitId":"LWS49"},"content":"            throw new LukeException(LukeException.ExceptionType.descriptionEmpty);","lastModifiedDate":"2024-02-13"},{"lineNumber":136,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":137,"author":{"gitId":"LWS49"},"content":"        taskList.addTodo(inputArr[1].trim());","lastModifiedDate":"2024-02-13"},{"lineNumber":138,"author":{"gitId":"LWS49"},"content":"        return taskList.getMostRecentTask();","lastModifiedDate":"2024-02-13"},{"lineNumber":139,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":140,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":141,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":142,"author":{"gitId":"LWS49"},"content":"     * Adds a deadline task to the task list.","lastModifiedDate":"2024-02-16"},{"lineNumber":143,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":144,"author":{"gitId":"LWS49"},"content":"     * @param input the user input command","lastModifiedDate":"2024-02-16"},{"lineNumber":145,"author":{"gitId":"LWS49"},"content":"     * @return the deadline task that was added","lastModifiedDate":"2024-02-16"},{"lineNumber":146,"author":{"gitId":"LWS49"},"content":"     * @throws LukeException if the description or deadline format is invalid","lastModifiedDate":"2024-02-16"},{"lineNumber":147,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":148,"author":{"gitId":"LWS49"},"content":"    protected Task commandDeadline(String input) throws LukeException {","lastModifiedDate":"2024-02-13"},{"lineNumber":149,"author":{"gitId":"LWS49"},"content":"        String[] deadlineSplitBy \u003d input.split(\"/by\");","lastModifiedDate":"2024-02-13"},{"lineNumber":150,"author":{"gitId":"LWS49"},"content":"        String deadlineDescription \u003d deadlineSplitBy[0].substring(9).trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":151,"author":{"gitId":"LWS49"},"content":"        if (deadlineDescription.isEmpty()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":152,"author":{"gitId":"LWS49"},"content":"            throw new LukeException(LukeException.ExceptionType.descriptionEmpty);","lastModifiedDate":"2024-02-13"},{"lineNumber":153,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":154,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":155,"author":{"gitId":"LWS49"},"content":"        if (deadlineSplitBy.length !\u003d 2) {","lastModifiedDate":"2024-02-13"},{"lineNumber":156,"author":{"gitId":"LWS49"},"content":"            throw new LukeException(LukeException.ExceptionType.deadlineWrongFormat);","lastModifiedDate":"2024-02-13"},{"lineNumber":157,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":158,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":159,"author":{"gitId":"LWS49"},"content":"        String by \u003d deadlineSplitBy[1].trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":160,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":161,"author":{"gitId":"LWS49"},"content":"        if (by.isEmpty()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":162,"author":{"gitId":"LWS49"},"content":"            throw new LukeException(LukeException.ExceptionType.deadlineEmpty);","lastModifiedDate":"2024-02-13"},{"lineNumber":163,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":164,"author":{"gitId":"LWS49"},"content":"        taskList.addDeadline(deadlineDescription, by);","lastModifiedDate":"2024-02-13"},{"lineNumber":165,"author":{"gitId":"LWS49"},"content":"        return taskList.getMostRecentTask();","lastModifiedDate":"2024-02-13"},{"lineNumber":166,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":167,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":168,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":169,"author":{"gitId":"LWS49"},"content":"     * Adds an event task to the task list.","lastModifiedDate":"2024-02-16"},{"lineNumber":170,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":171,"author":{"gitId":"LWS49"},"content":"     * @param input the user input command","lastModifiedDate":"2024-02-16"},{"lineNumber":172,"author":{"gitId":"LWS49"},"content":"     * @return the event task that was added","lastModifiedDate":"2024-02-16"},{"lineNumber":173,"author":{"gitId":"LWS49"},"content":"     * @throws LukeException if the description or event format is invalid","lastModifiedDate":"2024-02-16"},{"lineNumber":174,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":175,"author":{"gitId":"LWS49"},"content":"    protected Task commandEvent(String input) throws LukeException {","lastModifiedDate":"2024-02-13"},{"lineNumber":176,"author":{"gitId":"LWS49"},"content":"        String[] eventSplitFrom \u003d input.split(\"/from\");","lastModifiedDate":"2024-02-13"},{"lineNumber":177,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":178,"author":{"gitId":"LWS49"},"content":"        if (eventSplitFrom.length !\u003d 2) {","lastModifiedDate":"2024-02-13"},{"lineNumber":179,"author":{"gitId":"LWS49"},"content":"            throw new LukeException(LukeException.ExceptionType.eventWrongFormat);","lastModifiedDate":"2024-02-13"},{"lineNumber":180,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":181,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":182,"author":{"gitId":"LWS49"},"content":"        String eventDescription \u003d eventSplitFrom[0].substring(6).trim();","lastModifiedDate":"2024-02-16"},{"lineNumber":183,"author":{"gitId":"LWS49"},"content":"        String[] eventSplitTo \u003d eventSplitFrom[1].split(\"/to\");","lastModifiedDate":"2024-02-13"},{"lineNumber":184,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":185,"author":{"gitId":"LWS49"},"content":"        if (eventSplitTo.length !\u003d 2) {","lastModifiedDate":"2024-02-13"},{"lineNumber":186,"author":{"gitId":"LWS49"},"content":"            throw new LukeException(LukeException.ExceptionType.eventWrongFormat);","lastModifiedDate":"2024-02-13"},{"lineNumber":187,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":188,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":189,"author":{"gitId":"LWS49"},"content":"        String from \u003d eventSplitTo[0].trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":190,"author":{"gitId":"LWS49"},"content":"        String to \u003d eventSplitTo[1].trim();","lastModifiedDate":"2024-02-13"},{"lineNumber":191,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":192,"author":{"gitId":"LWS49"},"content":"        if (eventDescription.isEmpty()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":193,"author":{"gitId":"LWS49"},"content":"            throw new LukeException(LukeException.ExceptionType.descriptionEmpty);","lastModifiedDate":"2024-02-13"},{"lineNumber":194,"author":{"gitId":"LWS49"},"content":"        } else if (from.isEmpty()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":195,"author":{"gitId":"LWS49"},"content":"            throw new LukeException(LukeException.ExceptionType.eventFromEmpty);","lastModifiedDate":"2024-02-13"},{"lineNumber":196,"author":{"gitId":"LWS49"},"content":"        } else if (to.isEmpty()) {","lastModifiedDate":"2024-02-13"},{"lineNumber":197,"author":{"gitId":"LWS49"},"content":"            throw new LukeException(LukeException.ExceptionType.eventToEmpty);","lastModifiedDate":"2024-02-13"},{"lineNumber":198,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":199,"author":{"gitId":"LWS49"},"content":"        taskList.addEvent(eventDescription, from, to);","lastModifiedDate":"2024-02-13"},{"lineNumber":200,"author":{"gitId":"LWS49"},"content":"        return taskList.getMostRecentTask();","lastModifiedDate":"2024-02-13"},{"lineNumber":201,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":202,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":203,"author":{"gitId":"LWS49"},"content":"    protected String commandFind(String input) throws LukeException {","lastModifiedDate":"2024-02-16"},{"lineNumber":204,"author":{"gitId":"LWS49"},"content":"        String keyword \u003d input.substring(4).trim();","lastModifiedDate":"2024-02-16"},{"lineNumber":205,"author":{"gitId":"LWS49"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2024-02-16"},{"lineNumber":206,"author":{"gitId":"LWS49"},"content":"            throw new LukeException(LukeException.ExceptionType.findKeywordEmpty);","lastModifiedDate":"2024-02-16"},{"lineNumber":207,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":208,"author":{"gitId":"LWS49"},"content":"        return keyword;","lastModifiedDate":"2024-02-16"},{"lineNumber":209,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":210,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":211,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":212,"author":{"gitId":"LWS49"},"content":"     * Edits a task based on the provided input.","lastModifiedDate":"2024-02-19"},{"lineNumber":213,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":214,"author":{"gitId":"LWS49"},"content":"     * @param input The input string containing details of the edit command.","lastModifiedDate":"2024-02-19"},{"lineNumber":215,"author":{"gitId":"LWS49"},"content":"     * @return The task that was edited.","lastModifiedDate":"2024-02-19"},{"lineNumber":216,"author":{"gitId":"LWS49"},"content":"     * @throws LukeException If there is an error processing the edit command.","lastModifiedDate":"2024-02-19"},{"lineNumber":217,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":218,"author":{"gitId":"LWS49"},"content":"    protected Task commandEdit(String input) throws LukeException {","lastModifiedDate":"2024-02-19"},{"lineNumber":219,"author":{"gitId":"LWS49"},"content":"        String details \u003d input.substring(4).trim();","lastModifiedDate":"2024-02-19"},{"lineNumber":220,"author":{"gitId":"LWS49"},"content":"        if (details.isEmpty()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":221,"author":{"gitId":"LWS49"},"content":"            throw new LukeException(LukeException.ExceptionType.editDetailsEmpty);","lastModifiedDate":"2024-02-19"},{"lineNumber":222,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":223,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":224,"author":{"gitId":"LWS49"},"content":"        String[] detailsArr \u003d details.split(\" \");","lastModifiedDate":"2024-02-19"},{"lineNumber":225,"author":{"gitId":"LWS49"},"content":"        if (detailsArr.length \u003c 3) {","lastModifiedDate":"2024-02-19"},{"lineNumber":226,"author":{"gitId":"LWS49"},"content":"            throw new LukeException(LukeException.ExceptionType.editIncorrectNoArguments);","lastModifiedDate":"2024-02-19"},{"lineNumber":227,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":228,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":229,"author":{"gitId":"LWS49"},"content":"        int taskNo \u003d Integer.parseInt(detailsArr[0]);","lastModifiedDate":"2024-02-19"},{"lineNumber":230,"author":{"gitId":"LWS49"},"content":"        if (taskNo \u003e taskList.getNoTasks() || taskNo \u003c 0) {","lastModifiedDate":"2024-02-19"},{"lineNumber":231,"author":{"gitId":"LWS49"},"content":"            throw new LukeException(LukeException.ExceptionType.taskNumberInvalid);","lastModifiedDate":"2024-02-19"},{"lineNumber":232,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":233,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":234,"author":{"gitId":"LWS49"},"content":"        String field \u003d detailsArr[1];","lastModifiedDate":"2024-02-19"},{"lineNumber":235,"author":{"gitId":"LWS49"},"content":"        Task taskEdited \u003d taskList.getTask(taskNo - 1);","lastModifiedDate":"2024-02-19"},{"lineNumber":236,"author":{"gitId":"LWS49"},"content":"        String taskType \u003d taskEdited.queryType();","lastModifiedDate":"2024-02-19"},{"lineNumber":237,"author":{"gitId":"LWS49"},"content":"        StringBuilder newStringBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-02-19"},{"lineNumber":238,"author":{"gitId":"LWS49"},"content":"        for (int i \u003d 2; i \u003c detailsArr.length; i++) {","lastModifiedDate":"2024-02-19"},{"lineNumber":239,"author":{"gitId":"LWS49"},"content":"            newStringBuilder.append(detailsArr[i]).append(\" \");","lastModifiedDate":"2024-02-19"},{"lineNumber":240,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":241,"author":{"gitId":"LWS49"},"content":"        String newString \u003d newStringBuilder.toString();","lastModifiedDate":"2024-02-19"},{"lineNumber":242,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":243,"author":{"gitId":"LWS49"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-19"},{"lineNumber":244,"author":{"gitId":"LWS49"},"content":"        case \"Todo\":","lastModifiedDate":"2024-02-19"},{"lineNumber":245,"author":{"gitId":"LWS49"},"content":"            if (field.equals(\"description\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":246,"author":{"gitId":"LWS49"},"content":"                taskEdited.changeDescription(newString);","lastModifiedDate":"2024-02-19"},{"lineNumber":247,"author":{"gitId":"LWS49"},"content":"            } else {","lastModifiedDate":"2024-02-19"},{"lineNumber":248,"author":{"gitId":"LWS49"},"content":"                throw new LukeException(LukeException.ExceptionType.editFieldInvalid);","lastModifiedDate":"2024-02-19"},{"lineNumber":249,"author":{"gitId":"LWS49"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":250,"author":{"gitId":"LWS49"},"content":"            break;","lastModifiedDate":"2024-02-19"},{"lineNumber":251,"author":{"gitId":"LWS49"},"content":"        case \"Deadline\":","lastModifiedDate":"2024-02-19"},{"lineNumber":252,"author":{"gitId":"LWS49"},"content":"            if (field.equals(\"description\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":253,"author":{"gitId":"LWS49"},"content":"                taskEdited.changeDescription(newString);","lastModifiedDate":"2024-02-19"},{"lineNumber":254,"author":{"gitId":"LWS49"},"content":"            } else if (field.equals(\"by\")) {","lastModifiedDate":"2024-02-19"},{"lineNumber":255,"author":{"gitId":"LWS49"},"content":"                taskEdited.changeBy(newString);","lastModifiedDate":"2024-02-19"},{"lineNumber":256,"author":{"gitId":"LWS49"},"content":"            } else {","lastModifiedDate":"2024-02-19"},{"lineNumber":257,"author":{"gitId":"LWS49"},"content":"                throw new LukeException(LukeException.ExceptionType.editFieldInvalid);","lastModifiedDate":"2024-02-19"},{"lineNumber":258,"author":{"gitId":"LWS49"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":259,"author":{"gitId":"LWS49"},"content":"            break;","lastModifiedDate":"2024-02-19"},{"lineNumber":260,"author":{"gitId":"LWS49"},"content":"        case \"Event\":","lastModifiedDate":"2024-02-19"},{"lineNumber":261,"author":{"gitId":"LWS49"},"content":"            switch (field) {","lastModifiedDate":"2024-02-19"},{"lineNumber":262,"author":{"gitId":"LWS49"},"content":"            case \"description\": taskEdited.changeDescription(newString);","lastModifiedDate":"2024-02-20"},{"lineNumber":263,"author":{"gitId":"LWS49"},"content":"            case \"from\": taskEdited.changeFrom(newString);","lastModifiedDate":"2024-02-20"},{"lineNumber":264,"author":{"gitId":"LWS49"},"content":"            case \"to\": taskEdited.changeTo(newString);","lastModifiedDate":"2024-02-20"},{"lineNumber":265,"author":{"gitId":"LWS49"},"content":"            default: throw new LukeException(LukeException.ExceptionType.editFieldInvalid);","lastModifiedDate":"2024-02-20"},{"lineNumber":266,"author":{"gitId":"LWS49"},"content":"            }","lastModifiedDate":"2024-02-19"},{"lineNumber":267,"author":{"gitId":"LWS49"},"content":"            default:","lastModifiedDate":"2024-02-19"},{"lineNumber":268,"author":{"gitId":"LWS49"},"content":"            throw new LukeException(LukeException.ExceptionType.editFieldInvalid);","lastModifiedDate":"2024-02-19"},{"lineNumber":269,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":270,"author":{"gitId":"LWS49"},"content":"        return taskEdited;","lastModifiedDate":"2024-02-19"},{"lineNumber":271,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":272,"author":{"gitId":"LWS49"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"LWS49":272}},{"path":"src/main/java/luke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"package luke;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"LWS49"},"content":"import java.io.File;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"LWS49"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"LWS49"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-05"},{"lineNumber":6,"author":{"gitId":"LWS49"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"LWS49"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"LWS49"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"LWS49"},"content":" * Handles the loading and saving of tasks from and to a file.","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"LWS49"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"LWS49"},"content":"public class Storage {","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"LWS49"},"content":"    private final String filepath;","lastModifiedDate":"2024-02-13"},{"lineNumber":15,"author":{"gitId":"LWS49"},"content":"    private final File file;","lastModifiedDate":"2024-02-13"},{"lineNumber":16,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"LWS49"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":20,"author":{"gitId":"LWS49"},"content":"     * @param filepath the file path for storing tasks","lastModifiedDate":"2024-02-16"},{"lineNumber":21,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":22,"author":{"gitId":"LWS49"},"content":"    Storage(String filepath) {","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"LWS49"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"LWS49"},"content":"        this.file \u003d new File(filepath);","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"LWS49"},"content":"     * Loads tasks from the file.","lastModifiedDate":"2024-02-16"},{"lineNumber":29,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":30,"author":{"gitId":"LWS49"},"content":"     * @return an ArrayList containing the tasks loaded from the file","lastModifiedDate":"2024-02-16"},{"lineNumber":31,"author":{"gitId":"LWS49"},"content":"     * @throws LukeException if an error occurs during file loading","lastModifiedDate":"2024-02-16"},{"lineNumber":32,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":33,"author":{"gitId":"LWS49"},"content":"    public ArrayList\u003cString\u003e loadFile() throws LukeException {","lastModifiedDate":"2024-02-05"},{"lineNumber":34,"author":{"gitId":"LWS49"},"content":"        ArrayList\u003cString\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-05"},{"lineNumber":35,"author":{"gitId":"LWS49"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":36,"author":{"gitId":"LWS49"},"content":"            File directory \u003d file.getParentFile();","lastModifiedDate":"2024-02-05"},{"lineNumber":37,"author":{"gitId":"LWS49"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":38,"author":{"gitId":"LWS49"},"content":"                directory.mkdirs();","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"LWS49"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"LWS49"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"LWS49"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"LWS49"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"LWS49"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"LWS49"},"content":"            System.out.println(\"Failed to save file: \" + e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"LWS49"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"LWS49"},"content":"            Scanner myReader \u003d new Scanner(file);","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"LWS49"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"LWS49"},"content":"                String data \u003d myReader.nextLine();","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"LWS49"},"content":"                if (!data.isEmpty()) {","lastModifiedDate":"2024-02-19"},{"lineNumber":53,"author":{"gitId":"LWS49"},"content":"                    taskList.add(data);","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"LWS49"},"content":"                }","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"LWS49"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"LWS49"},"content":"            myReader.close();","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"LWS49"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"LWS49"},"content":"            System.out.println(\"File not found.\");","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"LWS49"},"content":"        return taskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":63,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"LWS49"},"content":"     * Saves tasks to the file.","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":66,"author":{"gitId":"LWS49"},"content":"     * @param taskListObject the TaskList object containing the tasks to be saved","lastModifiedDate":"2024-02-16"},{"lineNumber":67,"author":{"gitId":"LWS49"},"content":"     * @return message","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"LWS49"},"content":"    public String saveFile(TaskList taskListObject) {","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"LWS49"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":71,"author":{"gitId":"LWS49"},"content":"            ArrayList\u003cTask\u003e taskList \u003d taskListObject.getTaskList();","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"LWS49"},"content":"            FileWriter writer \u003d new FileWriter(filepath);","lastModifiedDate":"2024-02-05"},{"lineNumber":73,"author":{"gitId":"LWS49"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"LWS49"},"content":"                writer.write(task.toString());","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"LWS49"},"content":"                writer.write(\"\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":76,"author":{"gitId":"LWS49"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":77,"author":{"gitId":"LWS49"},"content":"            writer.close();","lastModifiedDate":"2024-02-05"},{"lineNumber":78,"author":{"gitId":"LWS49"},"content":"            return \"File saved. Hope to see you again soon!\";","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"LWS49"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":80,"author":{"gitId":"LWS49"},"content":"            return \"An error occurred while saving.\" + e.getMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":82,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"LWS49"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"LWS49":83}},{"path":"src/main/java/luke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"package luke;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"LWS49"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"LWS49"},"content":" * Represents a task in the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"LWS49"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"LWS49"},"content":" * This abstract class defines common attributes and methods for all types of tasks.","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"LWS49"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"LWS49"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"LWS49"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"LWS49"},"content":"     * Indicates whether the task is done or not.","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"LWS49"},"content":"    protected boolean done;","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"LWS49"},"content":"     * The description of the task.","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"LWS49"},"content":"    protected String description;","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"LWS49"},"content":"     * Constructs a new Task object with the specified description.","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"LWS49"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"LWS49"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"LWS49"},"content":"        this.done \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"LWS49"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":31,"author":{"gitId":"LWS49"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"LWS49"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"LWS49"},"content":"     * If the task is done, it returns a string with \u0027[X]\u0027 prefix, otherwise \u0027[ ]\u0027.","lastModifiedDate":"2024-02-19"},{"lineNumber":34,"author":{"gitId":"LWS49"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":35,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":36,"author":{"gitId":"LWS49"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-02-19"},{"lineNumber":37,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":38,"author":{"gitId":"LWS49"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"LWS49"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":40,"author":{"gitId":"LWS49"},"content":"        if (done) {","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"LWS49"},"content":"            return \"[X] \" + description;","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"LWS49"},"content":"        } else {","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"LWS49"},"content":"            return \"[ ] \" + description;","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":46,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":48,"author":{"gitId":"LWS49"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-19"},{"lineNumber":49,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":50,"author":{"gitId":"LWS49"},"content":"    public void setToDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"LWS49"},"content":"        this.done \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":55,"author":{"gitId":"LWS49"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-02-19"},{"lineNumber":56,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":57,"author":{"gitId":"LWS49"},"content":"    public void setToNotDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"LWS49"},"content":"        this.done \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":59,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":61,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":62,"author":{"gitId":"LWS49"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-02-16"},{"lineNumber":63,"author":{"gitId":"LWS49"},"content":"     * @return description of the task","lastModifiedDate":"2024-02-16"},{"lineNumber":64,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":65,"author":{"gitId":"LWS49"},"content":"    public String getDescription() {","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"LWS49"},"content":"        return this.description;","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"LWS49"},"content":"     * Returns the most recently added task.","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":72,"author":{"gitId":"LWS49"},"content":"     * @return the most recent task","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"LWS49"},"content":"    protected abstract String queryType();","lastModifiedDate":"2024-02-19"},{"lineNumber":75,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":77,"author":{"gitId":"LWS49"},"content":"     * Changes the description of the task.","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"LWS49"},"content":"     * @param newString The new description for the task.","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":81,"author":{"gitId":"LWS49"},"content":"    protected void changeDescription(String newString) {","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"LWS49"},"content":"        this.description \u003d newString;","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":84,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"LWS49"},"content":"     * Abstract method to change the \u0027from\u0027 attribute of the task.","lastModifiedDate":"2024-02-19"},{"lineNumber":87,"author":{"gitId":"LWS49"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"LWS49"},"content":"     * This method should be overridden by subclasses to implement specific behavior.","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"LWS49"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":90,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"LWS49"},"content":"     * @param newString The new value for the \u0027from\u0027 attribute.","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"LWS49"},"content":"    protected void changeFrom(String newString) {","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"LWS49"},"content":"        assert this.getClass() !\u003d Task.class : \"changeFrom method should be overridden by subclass\";","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"LWS49"},"content":"    };","lastModifiedDate":"2024-02-19"},{"lineNumber":96,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":98,"author":{"gitId":"LWS49"},"content":"     * Method to change the \u0027to\u0027 attribute of the task.","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"LWS49"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"LWS49"},"content":"     * This method should be overridden by subclasses to implement specific behavior.","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"LWS49"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":102,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"LWS49"},"content":"     * @param newString The new value for the \u0027to\u0027 attribute.","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"LWS49"},"content":"    protected void changeTo(String newString) {","lastModifiedDate":"2024-02-19"},{"lineNumber":106,"author":{"gitId":"LWS49"},"content":"        assert this.getClass() !\u003d Task.class : \"changeFrom method should be overridden by subclass\";","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"LWS49"},"content":"    };","lastModifiedDate":"2024-02-19"},{"lineNumber":108,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":109,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":110,"author":{"gitId":"LWS49"},"content":"     * Method to change the \u0027by\u0027 attribute of the task.","lastModifiedDate":"2024-02-19"},{"lineNumber":111,"author":{"gitId":"LWS49"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":112,"author":{"gitId":"LWS49"},"content":"     * This method should be overridden by subclasses to implement specific behavior.","lastModifiedDate":"2024-02-19"},{"lineNumber":113,"author":{"gitId":"LWS49"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":114,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":115,"author":{"gitId":"LWS49"},"content":"     * @param newString The new value for the \u0027by\u0027 attribute.","lastModifiedDate":"2024-02-19"},{"lineNumber":116,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":117,"author":{"gitId":"LWS49"},"content":"    protected void changeBy(String newString) {","lastModifiedDate":"2024-02-19"},{"lineNumber":118,"author":{"gitId":"LWS49"},"content":"        assert this.getClass() !\u003d Task.class : \"changeFrom method should be overridden by subclass\";","lastModifiedDate":"2024-02-19"},{"lineNumber":119,"author":{"gitId":"LWS49"},"content":"    };","lastModifiedDate":"2024-02-19"},{"lineNumber":120,"author":{"gitId":"LWS49"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"LWS49":120}},{"path":"src/main/java/luke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"package luke;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"LWS49"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"LWS49"},"content":"/**","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"LWS49"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"LWS49"},"content":" */","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"LWS49"},"content":"public class TaskList {","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"LWS49"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"    private int noTasks;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"LWS49"},"content":"     * Constructs a TaskList object with tasks loaded from the specified list.","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"LWS49"},"content":"     * @param saveTaskList the list of tasks loaded from file","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"LWS49"},"content":"    TaskList(ArrayList\u003cString\u003e saveTaskList) {","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"LWS49"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"LWS49"},"content":"        if (!saveTaskList.isEmpty()) {","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"LWS49"},"content":"            saveTaskList.forEach(this::loadToTaskList);","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"LWS49"},"content":"        this.noTasks \u003d this.taskList.size();","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":26,"author":{"gitId":"LWS49"},"content":"     * Constructs an empty TaskList object.","lastModifiedDate":"2024-02-16"},{"lineNumber":27,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":28,"author":{"gitId":"LWS49"},"content":"    TaskList() {","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"LWS49"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"LWS49"},"content":"        this.noTasks \u003d 0;","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":32,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":33,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":34,"author":{"gitId":"LWS49"},"content":"     * Loads a task from a string and adds it to the task list.","lastModifiedDate":"2024-02-16"},{"lineNumber":35,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":36,"author":{"gitId":"LWS49"},"content":"     * @param taskString the string representing the task","lastModifiedDate":"2024-02-16"},{"lineNumber":37,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":38,"author":{"gitId":"LWS49"},"content":"    private void loadToTaskList(String taskString) {","lastModifiedDate":"2024-02-05"},{"lineNumber":39,"author":{"gitId":"LWS49"},"content":"        String taskType \u003d taskString.substring(1, 2);","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"LWS49"},"content":"        switch (taskType) {","lastModifiedDate":"2024-02-05"},{"lineNumber":41,"author":{"gitId":"LWS49"},"content":"        case \"T\":","lastModifiedDate":"2024-02-05"},{"lineNumber":42,"author":{"gitId":"LWS49"},"content":"            Todo todo \u003d new Todo(taskString.substring(7).trim());","lastModifiedDate":"2024-02-05"},{"lineNumber":43,"author":{"gitId":"LWS49"},"content":"            taskList.add(todo);","lastModifiedDate":"2024-02-05"},{"lineNumber":44,"author":{"gitId":"LWS49"},"content":"            break;","lastModifiedDate":"2024-02-05"},{"lineNumber":45,"author":{"gitId":"LWS49"},"content":"        case \"D\":","lastModifiedDate":"2024-02-05"},{"lineNumber":46,"author":{"gitId":"LWS49"},"content":"            String[] deadlineSplit \u003d taskString.split(\"by: \");","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"LWS49"},"content":"            String deadlineDescription \u003d deadlineSplit[0].substring(7, deadlineSplit[0].length() - 1);","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"LWS49"},"content":"            String by \u003d deadlineSplit[1].substring(0, deadlineSplit[1].length() - 1).trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":49,"author":{"gitId":"LWS49"},"content":"            Deadline deadline \u003d new Deadline(deadlineDescription, by);","lastModifiedDate":"2024-02-05"},{"lineNumber":50,"author":{"gitId":"LWS49"},"content":"            taskList.add(deadline);","lastModifiedDate":"2024-02-05"},{"lineNumber":51,"author":{"gitId":"LWS49"},"content":"            break;","lastModifiedDate":"2024-02-05"},{"lineNumber":52,"author":{"gitId":"LWS49"},"content":"        case \"E\":","lastModifiedDate":"2024-02-05"},{"lineNumber":53,"author":{"gitId":"LWS49"},"content":"            String[] eventFirstSplit \u003d taskString.split(\"from: \");","lastModifiedDate":"2024-02-05"},{"lineNumber":54,"author":{"gitId":"LWS49"},"content":"            String[] eventSecondSplit \u003d eventFirstSplit[1].split(\" to: \");","lastModifiedDate":"2024-02-05"},{"lineNumber":55,"author":{"gitId":"LWS49"},"content":"            String eventDescription \u003d eventFirstSplit[0].substring(7, eventFirstSplit[0].length() - 1);","lastModifiedDate":"2024-02-05"},{"lineNumber":56,"author":{"gitId":"LWS49"},"content":"            String from \u003d eventSecondSplit[0].trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":57,"author":{"gitId":"LWS49"},"content":"            String to \u003d eventSecondSplit[1].substring(0, eventSecondSplit[1].length() - 1).trim();","lastModifiedDate":"2024-02-05"},{"lineNumber":58,"author":{"gitId":"LWS49"},"content":"            Event event \u003d new Event(eventDescription, from, to);","lastModifiedDate":"2024-02-05"},{"lineNumber":59,"author":{"gitId":"LWS49"},"content":"            taskList.add(event);","lastModifiedDate":"2024-02-05"},{"lineNumber":60,"author":{"gitId":"LWS49"},"content":"            break;","lastModifiedDate":"2024-02-05"},{"lineNumber":61,"author":{"gitId":"LWS49"},"content":"        default:","lastModifiedDate":"2024-02-19"},{"lineNumber":62,"author":{"gitId":"LWS49"},"content":"            break;","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":64,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":65,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":66,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":67,"author":{"gitId":"LWS49"},"content":"     * Marks the task at the specified index as done.","lastModifiedDate":"2024-02-16"},{"lineNumber":68,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":69,"author":{"gitId":"LWS49"},"content":"     * @param taskNo the index of the task to be marked","lastModifiedDate":"2024-02-16"},{"lineNumber":70,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":71,"author":{"gitId":"LWS49"},"content":"    public void markTask(int taskNo) {","lastModifiedDate":"2024-02-05"},{"lineNumber":72,"author":{"gitId":"LWS49"},"content":"        taskList.get(taskNo).setToDone();","lastModifiedDate":"2024-02-13"},{"lineNumber":73,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":74,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":75,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":76,"author":{"gitId":"LWS49"},"content":"     * Unmarks the task at the specified index as not done.","lastModifiedDate":"2024-02-16"},{"lineNumber":77,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":78,"author":{"gitId":"LWS49"},"content":"     * @param taskNo the index of the task to be unmarked","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"LWS49"},"content":"    public void unmarkTask(int taskNo) {","lastModifiedDate":"2024-02-05"},{"lineNumber":81,"author":{"gitId":"LWS49"},"content":"        taskList.get(taskNo).setToNotDone();","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":83,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":84,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":85,"author":{"gitId":"LWS49"},"content":"     * Lists all tasks in the task list.","lastModifiedDate":"2024-02-16"},{"lineNumber":86,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":87,"author":{"gitId":"LWS49"},"content":"    protected String list() {","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"LWS49"},"content":"        StringBuilder taskListString \u003d new StringBuilder();","lastModifiedDate":"2024-02-19"},{"lineNumber":89,"author":{"gitId":"LWS49"},"content":"        for (int i \u003d 0; i \u003c noTasks; i++) {","lastModifiedDate":"2024-02-13"},{"lineNumber":90,"author":{"gitId":"LWS49"},"content":"            taskListString.append((i + 1)).append(\". \").append(taskList.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":92,"author":{"gitId":"LWS49"},"content":"        return taskListString.toString();","lastModifiedDate":"2024-02-19"},{"lineNumber":93,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":94,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":95,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":96,"author":{"gitId":"LWS49"},"content":"     * Adds a todo task to the task list.","lastModifiedDate":"2024-02-16"},{"lineNumber":97,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":98,"author":{"gitId":"LWS49"},"content":"     * @param description the description of the todo task","lastModifiedDate":"2024-02-16"},{"lineNumber":99,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":100,"author":{"gitId":"LWS49"},"content":"    public void addTodo(String description) {","lastModifiedDate":"2024-02-13"},{"lineNumber":101,"author":{"gitId":"LWS49"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2024-02-13"},{"lineNumber":102,"author":{"gitId":"LWS49"},"content":"        taskList.add(todo);","lastModifiedDate":"2024-02-05"},{"lineNumber":103,"author":{"gitId":"LWS49"},"content":"        noTasks++;","lastModifiedDate":"2024-02-05"},{"lineNumber":104,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":105,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":106,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":107,"author":{"gitId":"LWS49"},"content":"     * Adds a deadline task to the task list.","lastModifiedDate":"2024-02-16"},{"lineNumber":108,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":109,"author":{"gitId":"LWS49"},"content":"     * @param deadlineDescription the description of the deadline task","lastModifiedDate":"2024-02-16"},{"lineNumber":110,"author":{"gitId":"LWS49"},"content":"     * @param by the deadline of the task","lastModifiedDate":"2024-02-16"},{"lineNumber":111,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":112,"author":{"gitId":"LWS49"},"content":"    public void addDeadline(String deadlineDescription, String by) {","lastModifiedDate":"2024-02-13"},{"lineNumber":113,"author":{"gitId":"LWS49"},"content":"        Deadline deadline \u003d new Deadline(deadlineDescription, by);","lastModifiedDate":"2024-02-05"},{"lineNumber":114,"author":{"gitId":"LWS49"},"content":"        taskList.add(deadline);","lastModifiedDate":"2024-02-05"},{"lineNumber":115,"author":{"gitId":"LWS49"},"content":"        noTasks++;","lastModifiedDate":"2024-02-05"},{"lineNumber":116,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":117,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":118,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":119,"author":{"gitId":"LWS49"},"content":"     * Adds an event task to the task list.","lastModifiedDate":"2024-02-16"},{"lineNumber":120,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":121,"author":{"gitId":"LWS49"},"content":"     * @param eventDescription the description of the event task","lastModifiedDate":"2024-02-16"},{"lineNumber":122,"author":{"gitId":"LWS49"},"content":"     * @param from the starting date/time of the event","lastModifiedDate":"2024-02-16"},{"lineNumber":123,"author":{"gitId":"LWS49"},"content":"     * @param to the ending date/time of the event","lastModifiedDate":"2024-02-16"},{"lineNumber":124,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":125,"author":{"gitId":"LWS49"},"content":"    public void addEvent(String eventDescription, String from, String to) {","lastModifiedDate":"2024-02-13"},{"lineNumber":126,"author":{"gitId":"LWS49"},"content":"        Event event \u003d new Event(eventDescription, from, to);","lastModifiedDate":"2024-02-05"},{"lineNumber":127,"author":{"gitId":"LWS49"},"content":"        taskList.add(event);","lastModifiedDate":"2024-02-05"},{"lineNumber":128,"author":{"gitId":"LWS49"},"content":"        noTasks++;","lastModifiedDate":"2024-02-05"},{"lineNumber":129,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":130,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":131,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":132,"author":{"gitId":"LWS49"},"content":"     * Deletes the task at the specified index from the task list.","lastModifiedDate":"2024-02-16"},{"lineNumber":133,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":134,"author":{"gitId":"LWS49"},"content":"     * @param taskNo the index of the task to be deleted","lastModifiedDate":"2024-02-16"},{"lineNumber":135,"author":{"gitId":"LWS49"},"content":"     * @return the deleted task","lastModifiedDate":"2024-02-16"},{"lineNumber":136,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":137,"author":{"gitId":"LWS49"},"content":"    public Task deleteEvent(int taskNo) {","lastModifiedDate":"2024-02-13"},{"lineNumber":138,"author":{"gitId":"LWS49"},"content":"        Task taskDeleted \u003d taskList.get(taskNo);","lastModifiedDate":"2024-02-13"},{"lineNumber":139,"author":{"gitId":"LWS49"},"content":"        taskList.remove(taskNo);","lastModifiedDate":"2024-02-13"},{"lineNumber":140,"author":{"gitId":"LWS49"},"content":"        noTasks--;","lastModifiedDate":"2024-02-05"},{"lineNumber":141,"author":{"gitId":"LWS49"},"content":"        return taskDeleted;","lastModifiedDate":"2024-02-13"},{"lineNumber":142,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":143,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":144,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":145,"author":{"gitId":"LWS49"},"content":"     * Searches for tasks containing the specified keyword in their descriptions.","lastModifiedDate":"2024-02-16"},{"lineNumber":146,"author":{"gitId":"LWS49"},"content":"     * Creates a new TaskList containing tasks matching the keyword.","lastModifiedDate":"2024-02-16"},{"lineNumber":147,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":148,"author":{"gitId":"LWS49"},"content":"     * @param keyword the keyword to search for in task descriptions","lastModifiedDate":"2024-02-16"},{"lineNumber":149,"author":{"gitId":"LWS49"},"content":"     * @return a new TaskList containing tasks with descriptions matching the keyword","lastModifiedDate":"2024-02-16"},{"lineNumber":150,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":151,"author":{"gitId":"LWS49"},"content":"    public TaskList search(String keyword) {","lastModifiedDate":"2024-02-16"},{"lineNumber":152,"author":{"gitId":"LWS49"},"content":"        ArrayList\u003cString\u003e tasksWithKeyword \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-16"},{"lineNumber":153,"author":{"gitId":"LWS49"},"content":"        for (Task task: taskList) {","lastModifiedDate":"2024-02-16"},{"lineNumber":154,"author":{"gitId":"LWS49"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2024-02-16"},{"lineNumber":155,"author":{"gitId":"LWS49"},"content":"                tasksWithKeyword.add(task.toString());","lastModifiedDate":"2024-02-16"},{"lineNumber":156,"author":{"gitId":"LWS49"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":157,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":158,"author":{"gitId":"LWS49"},"content":"        return new TaskList(tasksWithKeyword);","lastModifiedDate":"2024-02-16"},{"lineNumber":159,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":160,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":161,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":162,"author":{"gitId":"LWS49"},"content":"     * Returns the task list.","lastModifiedDate":"2024-02-16"},{"lineNumber":163,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":164,"author":{"gitId":"LWS49"},"content":"     * @return the task list","lastModifiedDate":"2024-02-16"},{"lineNumber":165,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":166,"author":{"gitId":"LWS49"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2024-02-05"},{"lineNumber":167,"author":{"gitId":"LWS49"},"content":"        return taskList;","lastModifiedDate":"2024-02-05"},{"lineNumber":168,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":169,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":170,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":171,"author":{"gitId":"LWS49"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2024-02-16"},{"lineNumber":172,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":173,"author":{"gitId":"LWS49"},"content":"     * @return the number of tasks","lastModifiedDate":"2024-02-16"},{"lineNumber":174,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":175,"author":{"gitId":"LWS49"},"content":"    public int getNoTasks() {","lastModifiedDate":"2024-02-05"},{"lineNumber":176,"author":{"gitId":"LWS49"},"content":"        return noTasks;","lastModifiedDate":"2024-02-05"},{"lineNumber":177,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":178,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":179,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":180,"author":{"gitId":"LWS49"},"content":"     * Returns the task at the specified index in the task list.","lastModifiedDate":"2024-02-16"},{"lineNumber":181,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":182,"author":{"gitId":"LWS49"},"content":"     * @param taskNo the index of the task to retrieve","lastModifiedDate":"2024-02-16"},{"lineNumber":183,"author":{"gitId":"LWS49"},"content":"     * @return the task at the specified index","lastModifiedDate":"2024-02-16"},{"lineNumber":184,"author":{"gitId":"LWS49"},"content":"     * @throws IndexOutOfBoundsException if the index is out of range","lastModifiedDate":"2024-02-16"},{"lineNumber":185,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":186,"author":{"gitId":"LWS49"},"content":"    public Task getTask(int taskNo) {","lastModifiedDate":"2024-02-13"},{"lineNumber":187,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":188,"author":{"gitId":"LWS49"},"content":"        return taskList.get(taskNo);","lastModifiedDate":"2024-02-13"},{"lineNumber":189,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":190,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":191,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":192,"author":{"gitId":"LWS49"},"content":"     * Returns the most recently added task.","lastModifiedDate":"2024-02-16"},{"lineNumber":193,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":194,"author":{"gitId":"LWS49"},"content":"     * @return the most recent task","lastModifiedDate":"2024-02-16"},{"lineNumber":195,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":196,"author":{"gitId":"LWS49"},"content":"    public Task getMostRecentTask() {","lastModifiedDate":"2024-02-19"},{"lineNumber":197,"author":{"gitId":"LWS49"},"content":"        return taskList.get(noTasks - 1);","lastModifiedDate":"2024-02-19"},{"lineNumber":198,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":199,"author":{"gitId":"LWS49"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"LWS49":199}},{"path":"src/main/java/luke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"package luke;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"LWS49"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"LWS49"},"content":" * Represents a todo task in the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"LWS49"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"LWS49"},"content":" * A todo task is a simple task without any specific date or time associated with it.","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"LWS49"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"LWS49"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"LWS49"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"LWS49"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"LWS49"},"content":"        super(description);","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"LWS49"},"content":"    @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":16,"author":{"gitId":"LWS49"},"content":"    public String toString() {","lastModifiedDate":"2024-02-16"},{"lineNumber":17,"author":{"gitId":"LWS49"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-16"},{"lineNumber":18,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":19,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"LWS49"},"content":"    @Override","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"LWS49"},"content":"    protected String queryType() {","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"LWS49"},"content":"        return \"Todo\";","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"LWS49"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"LWS49":24}},{"path":"src/main/java/luke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"package luke;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":3,"author":{"gitId":"LWS49"},"content":"/**","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"LWS49"},"content":" * Represents the user interface of the Luke chatbot.","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"LWS49"},"content":" * \u003cp\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"LWS49"},"content":" * The UI class handles user input, processes commands, and interacts with the task list.","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"LWS49"},"content":" * It uses a parser to interpret user commands and executes corresponding actions.","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"LWS49"},"content":" * \u003c/p\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"LWS49"},"content":" */","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"public class Ui {","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"LWS49"},"content":"    protected TaskList taskList;","lastModifiedDate":"2024-02-13"},{"lineNumber":13,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"LWS49"},"content":"    protected Storage storage;","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"LWS49"},"content":"    protected Parser parser;","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"LWS49"},"content":"    Ui() {","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"LWS49"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2024-02-13"},{"lineNumber":19,"author":{"gitId":"LWS49"},"content":"        this.parser \u003d new Parser(taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"LWS49"},"content":"        this.storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":22,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-13"},{"lineNumber":23,"author":{"gitId":"LWS49"},"content":"    Ui(TaskList taskList) {","lastModifiedDate":"2024-02-13"},{"lineNumber":24,"author":{"gitId":"LWS49"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-02-13"},{"lineNumber":25,"author":{"gitId":"LWS49"},"content":"        this.parser \u003d new Parser(taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"LWS49"},"content":"        this.storage \u003d new Storage(\"data/tasks.txt\");","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"LWS49"},"content":"    protected String handleInput(String input) {","lastModifiedDate":"2024-02-19"},{"lineNumber":30,"author":{"gitId":"LWS49"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"LWS49"},"content":"            parser.isInputValid(input);","lastModifiedDate":"2024-02-19"},{"lineNumber":32,"author":{"gitId":"LWS49"},"content":"            String command \u003d parser.getCommand(input);","lastModifiedDate":"2024-02-19"},{"lineNumber":33,"author":{"gitId":"LWS49"},"content":"            String result;","lastModifiedDate":"2024-02-20"},{"lineNumber":34,"author":{"gitId":"LWS49"},"content":"            switch (command) {","lastModifiedDate":"2024-02-20"},{"lineNumber":35,"author":{"gitId":"LWS49"},"content":"            case \"list\":","lastModifiedDate":"2024-02-20"},{"lineNumber":36,"author":{"gitId":"LWS49"},"content":"                return this.list(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":37,"author":{"gitId":"LWS49"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-20"},{"lineNumber":38,"author":{"gitId":"LWS49"},"content":"                return this.mark(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":39,"author":{"gitId":"LWS49"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-20"},{"lineNumber":40,"author":{"gitId":"LWS49"},"content":"                return this.unmark(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":41,"author":{"gitId":"LWS49"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-20"},{"lineNumber":42,"author":{"gitId":"LWS49"},"content":"                return this.delete(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":43,"author":{"gitId":"LWS49"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-20"},{"lineNumber":44,"author":{"gitId":"LWS49"},"content":"                return this.todo(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":45,"author":{"gitId":"LWS49"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-20"},{"lineNumber":46,"author":{"gitId":"LWS49"},"content":"                return this.deadline(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":47,"author":{"gitId":"LWS49"},"content":"            case \"event\":","lastModifiedDate":"2024-02-20"},{"lineNumber":48,"author":{"gitId":"LWS49"},"content":"                return this.event(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":49,"author":{"gitId":"LWS49"},"content":"            case \"find\":","lastModifiedDate":"2024-02-20"},{"lineNumber":50,"author":{"gitId":"LWS49"},"content":"                return this.find(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":51,"author":{"gitId":"LWS49"},"content":"            case \"edit\":","lastModifiedDate":"2024-02-20"},{"lineNumber":52,"author":{"gitId":"LWS49"},"content":"                return this.edit(input);","lastModifiedDate":"2024-02-20"},{"lineNumber":53,"author":{"gitId":"LWS49"},"content":"            case \"bye\":","lastModifiedDate":"2024-02-20"},{"lineNumber":54,"author":{"gitId":"LWS49"},"content":"                return this.end();","lastModifiedDate":"2024-02-20"},{"lineNumber":55,"author":{"gitId":"LWS49"},"content":"            default:","lastModifiedDate":"2024-02-20"},{"lineNumber":56,"author":{"gitId":"LWS49"},"content":"                throw new LukeException(LukeException.ExceptionType.commandInvalid);","lastModifiedDate":"2024-02-20"},{"lineNumber":57,"author":{"gitId":"LWS49"},"content":"            }","lastModifiedDate":"2024-02-20"},{"lineNumber":58,"author":{"gitId":"LWS49"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":59,"author":{"gitId":"LWS49"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":60,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":61,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":62,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":63,"author":{"gitId":"LWS49"},"content":"    /**","lastModifiedDate":"2024-02-19"},{"lineNumber":64,"author":{"gitId":"LWS49"},"content":"     * Generates a welcome message for the user.","lastModifiedDate":"2024-02-19"},{"lineNumber":65,"author":{"gitId":"LWS49"},"content":"     *","lastModifiedDate":"2024-02-19"},{"lineNumber":66,"author":{"gitId":"LWS49"},"content":"     * @return The welcome message, including the name of the chatbot.","lastModifiedDate":"2024-02-19"},{"lineNumber":67,"author":{"gitId":"LWS49"},"content":"     */","lastModifiedDate":"2024-02-19"},{"lineNumber":68,"author":{"gitId":"LWS49"},"content":"    public String welcome() {","lastModifiedDate":"2024-02-19"},{"lineNumber":69,"author":{"gitId":"LWS49"},"content":"        String name \u003d \"Luke\";","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"LWS49"},"content":"        return \"Hello! I\u0027m \" + name + \"\\nWhat can I do for you?\";","lastModifiedDate":"2024-02-19"},{"lineNumber":71,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":72,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":73,"author":{"gitId":"LWS49"},"content":"    private String list(String input) {","lastModifiedDate":"2024-02-19"},{"lineNumber":74,"author":{"gitId":"LWS49"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":75,"author":{"gitId":"LWS49"},"content":"            parser.isListCommandValid(input);","lastModifiedDate":"2024-02-19"},{"lineNumber":76,"author":{"gitId":"LWS49"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":77,"author":{"gitId":"LWS49"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":78,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-19"},{"lineNumber":79,"author":{"gitId":"LWS49"},"content":"        return \"Here are the tasks in your list: \\n\" + parser.commandList(taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":80,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":81,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":82,"author":{"gitId":"LWS49"},"content":"    private String mark(String input) {","lastModifiedDate":"2024-02-19"},{"lineNumber":83,"author":{"gitId":"LWS49"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"LWS49"},"content":"            Task taskMarked \u003d parser.commandMark(input);","lastModifiedDate":"2024-02-19"},{"lineNumber":85,"author":{"gitId":"LWS49"},"content":"            return \"Nice! I\u0027ve marked this task as done: \\n\" + taskMarked.toString();","lastModifiedDate":"2024-02-19"},{"lineNumber":86,"author":{"gitId":"LWS49"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":87,"author":{"gitId":"LWS49"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":88,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":89,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":90,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":91,"author":{"gitId":"LWS49"},"content":"    private String unmark(String input) {","lastModifiedDate":"2024-02-19"},{"lineNumber":92,"author":{"gitId":"LWS49"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":93,"author":{"gitId":"LWS49"},"content":"            Task taskUnmarked \u003d parser.commandUnmark(input);","lastModifiedDate":"2024-02-19"},{"lineNumber":94,"author":{"gitId":"LWS49"},"content":"            return \"OK, I\u0027ve marked this task as not done yet: \\n\" + taskUnmarked.toString();","lastModifiedDate":"2024-02-19"},{"lineNumber":95,"author":{"gitId":"LWS49"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":96,"author":{"gitId":"LWS49"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":97,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-13"},{"lineNumber":98,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":99,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":100,"author":{"gitId":"LWS49"},"content":"    private String delete(String input) {","lastModifiedDate":"2024-02-19"},{"lineNumber":101,"author":{"gitId":"LWS49"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":102,"author":{"gitId":"LWS49"},"content":"            Task taskDeleted \u003d parser.commandDelete(input);","lastModifiedDate":"2024-02-19"},{"lineNumber":103,"author":{"gitId":"LWS49"},"content":"            return \"Noted. I\u0027ve removed this task:\\n\" + taskDeleted.toString()","lastModifiedDate":"2024-02-19"},{"lineNumber":104,"author":{"gitId":"LWS49"},"content":"                    + \"\\nNow you have \" + taskList.getNoTasks() + \" tasks in the list.\";","lastModifiedDate":"2024-02-19"},{"lineNumber":105,"author":{"gitId":"LWS49"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":106,"author":{"gitId":"LWS49"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":107,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":108,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":109,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":110,"author":{"gitId":"LWS49"},"content":"    private String todo(String input) {","lastModifiedDate":"2024-02-19"},{"lineNumber":111,"author":{"gitId":"LWS49"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":112,"author":{"gitId":"LWS49"},"content":"            Task todoAdded \u003d parser.commandTodo(input);","lastModifiedDate":"2024-02-19"},{"lineNumber":113,"author":{"gitId":"LWS49"},"content":"            return taskSuccessfullyAdded(todoAdded, taskList.getNoTasks());","lastModifiedDate":"2024-02-19"},{"lineNumber":114,"author":{"gitId":"LWS49"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2024-02-16"},{"lineNumber":115,"author":{"gitId":"LWS49"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":116,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":117,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":118,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":119,"author":{"gitId":"LWS49"},"content":"    private String deadline(String input) {","lastModifiedDate":"2024-02-19"},{"lineNumber":120,"author":{"gitId":"LWS49"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":121,"author":{"gitId":"LWS49"},"content":"            Task deadlineAdded \u003d parser.commandDeadline(input);","lastModifiedDate":"2024-02-19"},{"lineNumber":122,"author":{"gitId":"LWS49"},"content":"            return taskSuccessfullyAdded(deadlineAdded, taskList.getNoTasks());","lastModifiedDate":"2024-02-19"},{"lineNumber":123,"author":{"gitId":"LWS49"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":124,"author":{"gitId":"LWS49"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":125,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":126,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":127,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":128,"author":{"gitId":"LWS49"},"content":"    private String event(String input) {","lastModifiedDate":"2024-02-19"},{"lineNumber":129,"author":{"gitId":"LWS49"},"content":"        try {","lastModifiedDate":"2024-02-13"},{"lineNumber":130,"author":{"gitId":"LWS49"},"content":"            Task eventAdded \u003d parser.commandEvent(input);","lastModifiedDate":"2024-02-19"},{"lineNumber":131,"author":{"gitId":"LWS49"},"content":"            return taskSuccessfullyAdded(eventAdded, taskList.getNoTasks());","lastModifiedDate":"2024-02-19"},{"lineNumber":132,"author":{"gitId":"LWS49"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2024-02-13"},{"lineNumber":133,"author":{"gitId":"LWS49"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":134,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":135,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":136,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":137,"author":{"gitId":"LWS49"},"content":"    private String taskSuccessfullyAdded(Task task, int noTasks) {","lastModifiedDate":"2024-02-19"},{"lineNumber":138,"author":{"gitId":"LWS49"},"content":"        return \"I\u0027ve added this task:\\n\" + task.toString()","lastModifiedDate":"2024-02-19"},{"lineNumber":139,"author":{"gitId":"LWS49"},"content":"            + \"\\nNow you have \" + noTasks + \" tasks in the list.\";","lastModifiedDate":"2024-02-19"},{"lineNumber":140,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":141,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":142,"author":{"gitId":"LWS49"},"content":"    private String find(String input) {","lastModifiedDate":"2024-02-19"},{"lineNumber":143,"author":{"gitId":"LWS49"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":144,"author":{"gitId":"LWS49"},"content":"            String keyword \u003d parser.commandFind(input);","lastModifiedDate":"2024-02-19"},{"lineNumber":145,"author":{"gitId":"LWS49"},"content":"            TaskList tasksFound \u003d taskList.search(keyword);","lastModifiedDate":"2024-02-19"},{"lineNumber":146,"author":{"gitId":"LWS49"},"content":"            if (tasksFound.getNoTasks() \u003d\u003d 0) {","lastModifiedDate":"2024-02-19"},{"lineNumber":147,"author":{"gitId":"LWS49"},"content":"                return \"No tasks with the keyword found.\";","lastModifiedDate":"2024-02-19"},{"lineNumber":148,"author":{"gitId":"LWS49"},"content":"            } else {","lastModifiedDate":"2024-02-19"},{"lineNumber":149,"author":{"gitId":"LWS49"},"content":"                return \"Here are the matching tasks in your list:\\n\" + tasksFound.list();","lastModifiedDate":"2024-02-19"},{"lineNumber":150,"author":{"gitId":"LWS49"},"content":"            }","lastModifiedDate":"2024-02-05"},{"lineNumber":151,"author":{"gitId":"LWS49"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":152,"author":{"gitId":"LWS49"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":153,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":154,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":155,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":156,"author":{"gitId":"LWS49"},"content":"    private String edit(String input) {","lastModifiedDate":"2024-02-19"},{"lineNumber":157,"author":{"gitId":"LWS49"},"content":"        try {","lastModifiedDate":"2024-02-19"},{"lineNumber":158,"author":{"gitId":"LWS49"},"content":"            Task taskEdited \u003d parser.commandEdit(input);","lastModifiedDate":"2024-02-19"},{"lineNumber":159,"author":{"gitId":"LWS49"},"content":"            return \"Task change successful! This is the new task:\\n\" + taskEdited.toString();","lastModifiedDate":"2024-02-19"},{"lineNumber":160,"author":{"gitId":"LWS49"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2024-02-19"},{"lineNumber":161,"author":{"gitId":"LWS49"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-19"},{"lineNumber":162,"author":{"gitId":"LWS49"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":163,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":164,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":165,"author":{"gitId":"LWS49"},"content":"    public String end() {","lastModifiedDate":"2024-02-19"},{"lineNumber":166,"author":{"gitId":"LWS49"},"content":"        return storage.saveFile(taskList);","lastModifiedDate":"2024-02-19"},{"lineNumber":167,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":168,"author":{"gitId":"LWS49"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"LWS49":168}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"LWS49"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"LWS49"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"LWS49"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"LWS49"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"LWS49"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"LWS49"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"LWS49"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"LWS49"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"LWS49"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"LWS49"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"LWS49"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"LWS49"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"LWS49":16}},{"path":"src/main/resources/view/MainWindows.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":3,"author":{"gitId":"LWS49"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"LWS49"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":5,"author":{"gitId":"LWS49"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"LWS49"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"LWS49"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"LWS49"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"LWS49"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"LWS49"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"LWS49"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"LWS49"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"LWS49"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"LWS49"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"LWS49"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"LWS49"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"LWS49"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"LWS49":19}},{"path":"src/test/java/luke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"package luke;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"LWS49"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-19"},{"lineNumber":4,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"LWS49"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"LWS49"},"content":"public class EventTest {","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"LWS49"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"LWS49"},"content":"    public void testEventDate() {","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"        Deadline testDeadline \u003d new Deadline(\"return book\", \"2/12/2019 1800\");","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"LWS49"},"content":"        assertEquals(testDeadline.toString(), \"[D][ ] return book (by: 12 Feb 2019 06:00pm)\");","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"LWS49"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"LWS49":13}},{"path":"src/test/java/luke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"package luke;","lastModifiedDate":"2024-02-16"},{"lineNumber":2,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":3,"author":{"gitId":"LWS49"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-16"},{"lineNumber":4,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":5,"author":{"gitId":"LWS49"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-16"},{"lineNumber":6,"author":{"gitId":"LWS49"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":7,"author":{"gitId":"LWS49"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-16"},{"lineNumber":8,"author":{"gitId":"LWS49"},"content":"    @Test","lastModifiedDate":"2024-02-16"},{"lineNumber":9,"author":{"gitId":"LWS49"},"content":"    public void testLoadTasksFromFiles() throws LukeException {","lastModifiedDate":"2024-02-16"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"        Storage storage \u003d new Storage(\"src/test/java/Luke/StorageTest.txt\");","lastModifiedDate":"2024-02-16"},{"lineNumber":11,"author":{"gitId":"LWS49"},"content":"        String list \u003d \"[E][ ] project meeting   (from: Mon 2pm to: 4pm)\";","lastModifiedDate":"2024-02-16"},{"lineNumber":12,"author":{"gitId":"LWS49"},"content":"        TaskList testList \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2024-02-16"},{"lineNumber":13,"author":{"gitId":"LWS49"},"content":"        assertEquals(list, testList.getTaskList().get(0).toString());","lastModifiedDate":"2024-02-16"},{"lineNumber":14,"author":{"gitId":"LWS49"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":15,"author":{"gitId":"LWS49"},"content":"}","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"LWS49":15}},{"path":"src/test/java/luke/StorageTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"[E][ ] project meeting  (from: Mon 2pm to: 4pm)","lastModifiedDate":"2024-02-16"}],"authorContributionMap":{"LWS49":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LWS49"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"LWS49"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"LWS49"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"LWS49"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"LWS49"},"content":"mark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"LWS49"},"content":"mark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"LWS49"},"content":"unmark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"LWS49"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"LWS49"},"content":"mark 4","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"delete 4","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"LWS49"},"content":"delete 3","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"LWS49"},"content":"hehe","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"LWS49"},"content":"todo","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"LWS49"},"content":"deadline read book by 3","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"LWS49"},"content":"deadline read book /start 3","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"LWS49"},"content":"deadline /by 3","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"LWS49"},"content":"deadline read book /by","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"LWS49"},"content":"event project meeting /from Mon 2pm to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"LWS49"},"content":"event project meeting /fro Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":20,"author":{"gitId":"LWS49"},"content":"event project meeting /fro Mon 2pm /until 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":21,"author":{"gitId":"LWS49"},"content":"event /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"LWS49"},"content":"event project meeting /from /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"LWS49"},"content":"event project meeting /from Mon 2pm /to","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"LWS49"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"LWS49":24}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"LWS49"},"content":"javac  -cp C:\\Users\\user\\ip\\src\\main\\java -Xlint:none -d C:\\Users\\user\\ip\\bin C:\\Users\\user\\ip\\src\\main\\java\\*.java","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"LWS49"},"content":"java -classpath C:\\Users\\user\\ip\\bin Luke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LWS49":2,"-":19}}]
