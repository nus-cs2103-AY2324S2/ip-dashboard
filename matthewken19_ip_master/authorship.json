[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"matthewken19"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"matthewken19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"matthewken19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"matthewken19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"matthewken19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"matthewken19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"matthewken19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"matthewken19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"matthewken19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"matthewken19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"matthewken19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"matthewken19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"matthewken19"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"matthewken19"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"matthewken19":16}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"matthewken19"},"content":"E | true | conference | 2023-01-01 | 2022-01-01","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"matthewken19"},"content":"D | false | shower | 2023-02-02","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"matthewken19"},"content":"D | true | sleep | 2024-02-02","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"matthewken19"},"content":"T | false | test","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"matthewken19"},"content":"D | false | test | 2024-01-01","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"matthewken19"},"content":"E | false | test | 2024-01-01 | 2024-02-02","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"matthewken19":6}},{"path":"src/main/java/duke/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthewken19"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"matthewken19"},"content":"public class AddCommand implements Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"matthewken19"},"content":"    private String commandWord;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"matthewken19"},"content":"    private String description;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"matthewken19"},"content":"    AddCommand(String commandWord, String description) {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"matthewken19"},"content":"        this.commandWord \u003d commandWord;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"matthewken19"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"matthewken19"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"matthewken19"},"content":"     * Add the corresponding Task into the TaskList based on the command word","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"matthewken19"},"content":"     * and display the UI message","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"matthewken19"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"matthewken19"},"content":"     * @param tasks the TaskList for which the Task will be added to","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"matthewken19"},"content":"     * @param ui the UI that will be used to display the message","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"matthewken19"},"content":"     * @throws DukeException if format of the description does not match.","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"matthewken19"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"matthewken19"},"content":"    public void execute(TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"matthewken19"},"content":"        Task task;","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"matthewken19"},"content":"        String[] stringSplit;","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"matthewken19"},"content":"        switch (commandWord) {","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"matthewken19"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"matthewken19"},"content":"            task \u003d new ToDo(description.trim());","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"matthewken19"},"content":"            tasks.add(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"matthewken19"},"content":"            ui.addMessage(task.toString(), tasks.size());","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"matthewken19"},"content":"            break;","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"matthewken19"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"matthewken19"},"content":"            stringSplit \u003d description.split(\"/by\");","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"matthewken19"},"content":"            if (stringSplit.length \u003c 2) {","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"matthewken19"},"content":"                throw new DukeException(\"Deadline /by cannot be empty!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"matthewken19"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"matthewken19"},"content":"            description \u003d stringSplit[0];","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"matthewken19"},"content":"            String by \u003d stringSplit[1];","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"matthewken19"},"content":"            // Create Task and add to list","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"matthewken19"},"content":"            task \u003d new Deadline(description.trim(), by.trim());","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"matthewken19"},"content":"            tasks.add(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"matthewken19"},"content":"            ui.addMessage(task.toString(), tasks.size());","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"matthewken19"},"content":"            break;","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"matthewken19"},"content":"        case \"event\":","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"matthewken19"},"content":"            stringSplit \u003d description.split(\"/from\");","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"matthewken19"},"content":"            if (stringSplit.length \u003c 2) {","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"matthewken19"},"content":"                throw new DukeException(\"Event /from cannot be empty!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"matthewken19"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"matthewken19"},"content":"            description \u003d stringSplit[0];","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"matthewken19"},"content":"            stringSplit \u003d stringSplit[1].split(\"/to\");","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"matthewken19"},"content":"            if (stringSplit.length \u003c 2) {","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"matthewken19"},"content":"                throw new DukeException(\"Event /to cannot be empty!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"matthewken19"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"matthewken19"},"content":"            String from \u003d stringSplit[0];","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"matthewken19"},"content":"            String to \u003d stringSplit[1];","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"matthewken19"},"content":"            // Create Task and add to list","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"matthewken19"},"content":"            task \u003d new Event(description.trim(), from.trim(), to.trim());","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"matthewken19"},"content":"            tasks.add(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"matthewken19"},"content":"            ui.addMessage(task.toString(), tasks.size());","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"matthewken19"},"content":"            break;","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"matthewken19"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"matthewken19"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-07"},{"lineNumber":63,"author":{"gitId":"matthewken19"},"content":"        return false;","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"matthewken19"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"matthewken19":65}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthewken19"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"matthewken19"},"content":"interface Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"matthewken19"},"content":"    void execute(TaskList tasks, Ui ui) throws DukeException;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"matthewken19"},"content":"    boolean isExit();","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"matthewken19"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"matthewken19":8}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthewken19"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"matthewken19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"matthewken19"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"matthewken19"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"matthewken19"},"content":"    LocalDate by;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"matthewken19"},"content":"    Deadline(String desc, String by) {","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"matthewken19"},"content":"        super(desc);","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"matthewken19"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"matthewken19"},"content":"    Deadline(String desc, boolean isDone, String by) {","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"matthewken19"},"content":"        super(desc, isDone);","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"matthewken19"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"matthewken19"},"content":"    public String toStore() {","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"matthewken19"},"content":"        // need to store status as well","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"matthewken19"},"content":"        return \"D | \" + super.toStore() + \" | \" + by;","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"matthewken19"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"matthewken19"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"matthewken19"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"matthewken19"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"matthewken19":29}},{"path":"src/main/java/duke/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthewken19"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"matthewken19"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"matthewken19"},"content":"    int index;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"matthewken19"},"content":"    DeleteCommand(int index) {","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"matthewken19"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"matthewken19"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"matthewken19"},"content":"     * Delete the task in TaskList and display the UI message.","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"matthewken19"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"matthewken19"},"content":"     * @param tasks the TaskList for which the task is in","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"matthewken19"},"content":"     * @param ui the UI that will be used to display the message","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"matthewken19"},"content":"     * @throws DukeException if index is greater than the amount of Task in the TaskList","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"matthewken19"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"matthewken19"},"content":"    public void execute(TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"matthewken19"},"content":"        if (index + 1 \u003e tasks.size()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"matthewken19"},"content":"            throw new DukeException(\"You only have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"matthewken19"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"matthewken19"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"matthewken19"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"matthewken19"},"content":"        ui.deleteMessage(task.toString(), tasks.size());","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"matthewken19"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"matthewken19"},"content":"        return false;","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"matthewken19"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"matthewken19":29}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthewken19"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"matthewken19"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"matthewken19"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"matthewken19"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"matthewken19"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"matthewken19"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"matthewken19"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"matthewken19"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"matthewken19"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"matthewken19"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"matthewken19"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"matthewken19"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"matthewken19"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"matthewken19"},"content":"public class Duke extends Application {","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"matthewken19"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"matthewken19"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"matthewken19"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"matthewken19"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"matthewken19"},"content":"    private Scene scene;","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"matthewken19"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"matthewken19"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"matthewken19"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"matthewken19"},"content":"    public Duke() {","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"matthewken19"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"matthewken19"},"content":"        storage \u003d new Storage(\"duke.txt\");","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"matthewken19"},"content":"        tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"matthewken19"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"matthewken19"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"matthewken19"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"matthewken19"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"matthewken19"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"matthewken19"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"matthewken19"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"matthewken19"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"matthewken19"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"matthewken19"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"matthewken19"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"matthewken19"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"matthewken19"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"matthewken19"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"matthewken19"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"matthewken19"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"matthewken19"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"matthewken19"},"content":"        stage.show();","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"matthewken19"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"matthewken19"},"content":"        //Setting up the stage","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"matthewken19"},"content":"        stage.setTitle(\"Duke\"); // Sets the title of the window to \"Duke\"","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"matthewken19"},"content":"        stage.setResizable(false); // Makes the window non-resizable","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"matthewken19"},"content":"        stage.setMinHeight(600.0); // Sets the minimum height of the window to 600 pixels","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"matthewken19"},"content":"        stage.setMinWidth(400.0); // Sets the minimum width of the window to 400 pixels","lastModifiedDate":"2024-02-11"},{"lineNumber":66,"author":{"gitId":"matthewken19"},"content":"        //Setting up the layout","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"matthewken19"},"content":"        mainLayout.setPrefSize(400.0, 600.0); // The mainLayout is set up with a preferred size of 400x600 pixels.","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"matthewken19"},"content":"        //Setting up the scroll pane","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"matthewken19"},"content":"        scrollPane.setPrefSize(385, 535); // Sets the preferred scrollPane size to 385 width x 535 height","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"matthewken19"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER); // Horizontal scrollbar is never shown","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"matthewken19"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS); // Vertical scrollbar is always shown","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"matthewken19"},"content":"        scrollPane.setVvalue(1.0); // Used to set the vertical scroll position of the ScrollPane, 1.0 is at the bottom","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"matthewken19"},"content":"        scrollPane.setFitToWidth(true); // Automatically adjust the width of the content to match the scrollbar","lastModifiedDate":"2024-02-11"},{"lineNumber":74,"author":{"gitId":"matthewken19"},"content":"        // The VBox height is set to adjust based on its content","lastModifiedDate":"2024-02-11"},{"lineNumber":75,"author":{"gitId":"matthewken19"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-11"},{"lineNumber":76,"author":{"gitId":"matthewken19"},"content":"        // Set preferred width of userInput and sendButton","lastModifiedDate":"2024-02-11"},{"lineNumber":77,"author":{"gitId":"matthewken19"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":78,"author":{"gitId":"matthewken19"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":79,"author":{"gitId":"matthewken19"},"content":"        // Anchor children to the pane, the value Double represents the distance in pixels from the pane","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"matthewken19"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"matthewken19"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":82,"author":{"gitId":"matthewken19"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":83,"author":{"gitId":"matthewken19"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":84,"author":{"gitId":"matthewken19"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-11"},{"lineNumber":85,"author":{"gitId":"matthewken19"},"content":"        // Alternative ways instead of AnchorPane:","lastModifiedDate":"2024-02-11"},{"lineNumber":86,"author":{"gitId":"matthewken19"},"content":"        // 1.BorderPane","lastModifiedDate":"2024-02-11"},{"lineNumber":87,"author":{"gitId":"matthewken19"},"content":"        //  (+) straightforward to use and great for layouts that need to expand in one direction","lastModifiedDate":"2024-02-11"},{"lineNumber":88,"author":{"gitId":"matthewken19"},"content":"        //  (-) less flexible than AnchorPane as it only allows one node per region","lastModifiedDate":"2024-02-11"},{"lineNumber":89,"author":{"gitId":"matthewken19"},"content":"        // 2.GridPane","lastModifiedDate":"2024-02-11"},{"lineNumber":90,"author":{"gitId":"matthewken19"},"content":"        //  (+) very flexible","lastModifiedDate":"2024-02-11"},{"lineNumber":91,"author":{"gitId":"matthewken19"},"content":"        //  (-) more complex to set up and manage","lastModifiedDate":"2024-02-11"},{"lineNumber":92,"author":{"gitId":"matthewken19"},"content":"        // 3.VBox","lastModifiedDate":"2024-02-11"},{"lineNumber":93,"author":{"gitId":"matthewken19"},"content":"        //  (+) simple to use and great for stacking components","lastModifiedDate":"2024-02-11"},{"lineNumber":94,"author":{"gitId":"matthewken19"},"content":"        //  (-) less flexible since it doesn\u0027t allow precise positioning of components","lastModifiedDate":"2024-02-11"},{"lineNumber":95,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":96,"author":{"gitId":"matthewken19"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2024-02-11"},{"lineNumber":97,"author":{"gitId":"matthewken19"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2024-02-11"},{"lineNumber":98,"author":{"gitId":"matthewken19"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2024-02-11"},{"lineNumber":99,"author":{"gitId":"matthewken19"},"content":"            userInput.clear();","lastModifiedDate":"2024-02-11"},{"lineNumber":100,"author":{"gitId":"matthewken19"},"content":"        });","lastModifiedDate":"2024-02-11"},{"lineNumber":101,"author":{"gitId":"matthewken19"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2024-02-11"},{"lineNumber":102,"author":{"gitId":"matthewken19"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2024-02-11"},{"lineNumber":103,"author":{"gitId":"matthewken19"},"content":"            userInput.clear();","lastModifiedDate":"2024-02-11"},{"lineNumber":104,"author":{"gitId":"matthewken19"},"content":"        });","lastModifiedDate":"2024-02-11"},{"lineNumber":105,"author":{"gitId":"matthewken19"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2024-02-11"},{"lineNumber":106,"author":{"gitId":"matthewken19"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2024-02-11"},{"lineNumber":107,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":108,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":109,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":110,"author":{"gitId":"matthewken19"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":111,"author":{"gitId":"matthewken19"},"content":"     * Iteration 1:","lastModifiedDate":"2024-02-11"},{"lineNumber":112,"author":{"gitId":"matthewken19"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2024-02-11"},{"lineNumber":113,"author":{"gitId":"matthewken19"},"content":"     * @param text String containing text to add","lastModifiedDate":"2024-02-11"},{"lineNumber":114,"author":{"gitId":"matthewken19"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2024-02-11"},{"lineNumber":115,"author":{"gitId":"matthewken19"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":116,"author":{"gitId":"matthewken19"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2024-02-11"},{"lineNumber":117,"author":{"gitId":"matthewken19"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2024-02-11"},{"lineNumber":118,"author":{"gitId":"matthewken19"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2024-02-11"},{"lineNumber":119,"author":{"gitId":"matthewken19"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2024-02-11"},{"lineNumber":120,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":121,"author":{"gitId":"matthewken19"},"content":"        return textToAdd;","lastModifiedDate":"2024-02-11"},{"lineNumber":122,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":123,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":124,"author":{"gitId":"matthewken19"},"content":"    public void run() {","lastModifiedDate":"2024-02-07"},{"lineNumber":125,"author":{"gitId":"matthewken19"},"content":"        this.ui.open();","lastModifiedDate":"2024-02-11"},{"lineNumber":126,"author":{"gitId":"matthewken19"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-07"},{"lineNumber":127,"author":{"gitId":"matthewken19"},"content":"        while (!isExit) {","lastModifiedDate":"2024-02-07"},{"lineNumber":128,"author":{"gitId":"matthewken19"},"content":"            try {","lastModifiedDate":"2024-02-06"},{"lineNumber":129,"author":{"gitId":"matthewken19"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-02-07"},{"lineNumber":130,"author":{"gitId":"matthewken19"},"content":"                ui.showLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":131,"author":{"gitId":"matthewken19"},"content":"                Command c \u003d Parser.parseToCommand(fullCommand);","lastModifiedDate":"2024-02-07"},{"lineNumber":132,"author":{"gitId":"matthewken19"},"content":"                c.execute(tasks, ui);","lastModifiedDate":"2024-02-07"},{"lineNumber":133,"author":{"gitId":"matthewken19"},"content":"                ui.showLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":134,"author":{"gitId":"matthewken19"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-02-07"},{"lineNumber":135,"author":{"gitId":"matthewken19"},"content":"            } catch (DukeException ex) {","lastModifiedDate":"2024-02-07"},{"lineNumber":136,"author":{"gitId":"matthewken19"},"content":"                System.out.println(ex.toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":137,"author":{"gitId":"matthewken19"},"content":"                ui.showLine();","lastModifiedDate":"2024-02-09"},{"lineNumber":138,"author":{"gitId":"matthewken19"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"matthewken19"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"matthewken19"},"content":"        ui.close();","lastModifiedDate":"2024-02-07"},{"lineNumber":141,"author":{"gitId":"matthewken19"},"content":"        storage.save(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":142,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":143,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":144,"author":{"gitId":"matthewken19"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-07"},{"lineNumber":145,"author":{"gitId":"matthewken19"},"content":"        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2024-02-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"matthewken19":145}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthewken19"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"matthewken19"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"matthewken19"},"content":"    DukeException(String str) {","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"matthewken19"},"content":"        super(str);","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"matthewken19"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"matthewken19":8}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthewken19"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"matthewken19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"matthewken19"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"matthewken19"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"matthewken19"},"content":"    private LocalDate start;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"matthewken19"},"content":"    private LocalDate end;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"matthewken19"},"content":"    Event(String desc, String start, String end) {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"matthewken19"},"content":"        super(desc);","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"matthewken19"},"content":"        this.start \u003d LocalDate.parse(start);","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"matthewken19"},"content":"        this.end \u003d LocalDate.parse(end);","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"matthewken19"},"content":"    Event(String desc, boolean isDone, String start, String end) {","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"matthewken19"},"content":"        super(desc, isDone);","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"matthewken19"},"content":"        this.start \u003d LocalDate.parse(start);","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"matthewken19"},"content":"        this.end \u003d LocalDate.parse(end);","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"matthewken19"},"content":"    public String toStore() {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"matthewken19"},"content":"        // need to store status as well","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"matthewken19"},"content":"        return \"E | \" + super.toStore() + \" | \" + start + \" | \" + end;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"matthewken19"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"matthewken19"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"matthewken19"},"content":"        return \"[E]\" + super.toString() +","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"matthewken19"},"content":"                \" (from: \" + start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) +","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"matthewken19"},"content":"                \" to: \" + end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"matthewken19"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"matthewken19":33}},{"path":"src/main/java/duke/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthewken19"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"matthewken19"},"content":"class ExitCommand implements Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"matthewken19"},"content":"    public void execute(TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"matthewken19"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"matthewken19"},"content":"        return true;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"matthewken19"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"matthewken19":11}},{"path":"src/main/java/duke/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthewken19"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"matthewken19"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"matthewken19"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"matthewken19"},"content":"    private String keyword;","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"matthewken19"},"content":"    FindCommand(String  keyword) {","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"matthewken19"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"matthewken19"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"matthewken19"},"content":"        TaskList foundList \u003d tasks.find(keyword);","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"matthewken19"},"content":"        ui.findMessage(foundList.toString());","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"matthewken19"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"matthewken19"},"content":"        return false;","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"matthewken19"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"matthewken19":19}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthewken19"},"content":"package duke;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"matthewken19"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"matthewken19"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"matthewken19"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"matthewken19"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"matthewken19"},"content":"public class Launcher {","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"matthewken19"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"matthewken19"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"matthewken19"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"matthewken19":12}},{"path":"src/main/java/duke/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthewken19"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"matthewken19"},"content":"class ListCommand implements Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"matthewken19"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"matthewken19"},"content":"     * Display all the Task in TaskList.","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"matthewken19"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"matthewken19"},"content":"     * @param tasks the TaskList where the Task are in","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"matthewken19"},"content":"     * @param ui the UI that will be used to display the message","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"matthewken19"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"matthewken19"},"content":"    public void execute(TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"matthewken19"},"content":"        ui.listMessage(tasks.toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"matthewken19"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"matthewken19"},"content":"        return false;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"matthewken19"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"matthewken19":18}},{"path":"src/main/java/duke/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthewken19"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"matthewken19"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"matthewken19"},"content":"    int index;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"matthewken19"},"content":"    boolean isDone;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"matthewken19"},"content":"    MarkCommand(int index, boolean isDone) {","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"matthewken19"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"matthewken19"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"matthewken19"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"matthewken19"},"content":"     * Marks or Unmarks the Task in the TaskList according to the index","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"matthewken19"},"content":"     * and displays the UI message.","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"matthewken19"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"matthewken19"},"content":"     * @param tasks the TaskList for which the Task will be added to","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"matthewken19"},"content":"     * @param ui the UI that will be used to display the message","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"matthewken19"},"content":"     * @throws DukeException if the index is greater than the number of Task in the TaskList","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"matthewken19"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"matthewken19"},"content":"    public void execute(TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"matthewken19"},"content":"        if (index + 1 \u003e tasks.size()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"matthewken19"},"content":"            throw new DukeException(\"You only have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"matthewken19"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"matthewken19"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"matthewken19"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"matthewken19"},"content":"            task.mark();","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"matthewken19"},"content":"            ui.markMessage(task.toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"matthewken19"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"matthewken19"},"content":"            task.unmark();","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"matthewken19"},"content":"            ui.unmarkMessage(task.toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"matthewken19"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"matthewken19"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"matthewken19"},"content":"        return false;","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"matthewken19"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"matthewken19":37}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthewken19"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"matthewken19"},"content":"class Parser {","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"matthewken19"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"matthewken19"},"content":"     * Parsed the line input and returns a Task.","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"matthewken19"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"matthewken19"},"content":"     * @param line the String input to be parsed","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"matthewken19"},"content":"     * @param splitFormat the separator for the input","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"matthewken19"},"content":"     * @return a Task corresponding to the input","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"matthewken19"},"content":"     * @throws DukeException if the format of the input does not match","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"matthewken19"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"matthewken19"},"content":"    public static Task parseToTask(String line, String splitFormat) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"matthewken19"},"content":"        Task task;","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"matthewken19"},"content":"        String[] stringComponents \u003d line.split(splitFormat);","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"matthewken19"},"content":"        for (int i \u003d 0; i \u003c stringComponents.length; i++) {","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"matthewken19"},"content":"            stringComponents[i] \u003d stringComponents[i].trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"matthewken19"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"matthewken19"},"content":"        boolean isDone \u003d Boolean.valueOf(stringComponents[1]);","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"matthewken19"},"content":"        switch (stringComponents[0]) {","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"matthewken19"},"content":"        case \"T\":","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"matthewken19"},"content":"            task \u003d new ToDo(stringComponents[2], isDone);","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"matthewken19"},"content":"            break;","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"matthewken19"},"content":"        case \"D\":","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"matthewken19"},"content":"            task \u003d new Deadline(stringComponents[2], isDone, stringComponents[3]);","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"matthewken19"},"content":"            break;","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"matthewken19"},"content":"        case \"E\":","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"matthewken19"},"content":"            task \u003d new Event(stringComponents[2], isDone, stringComponents[3], stringComponents[4]);","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"matthewken19"},"content":"            break;","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"matthewken19"},"content":"        default:","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"matthewken19"},"content":"            throw new DukeException(\"Corrupted Data!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"matthewken19"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"matthewken19"},"content":"        return task;","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"matthewken19"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"matthewken19"},"content":"     * Parsed the line input and returns a Command.","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"matthewken19"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"matthewken19"},"content":"     * @param line the String input to be parsed","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"matthewken19"},"content":"     * @return a Command corresponding to the input","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"matthewken19"},"content":"     * @throws DukeException if the format of the input does not match","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"matthewken19"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"matthewken19"},"content":"    public static Command parseToCommand(String line) throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"matthewken19"},"content":"        String[] stringComponents \u003d line.split(\" \");","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"matthewken19"},"content":"        String commandWord \u003d stringComponents[0].trim();","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"matthewken19"},"content":"        Command command;","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"matthewken19"},"content":"        int index;","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"matthewken19"},"content":"        switch (commandWord) {","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"matthewken19"},"content":"        case \"list\":","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"matthewken19"},"content":"            command \u003d new ListCommand();","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"matthewken19"},"content":"            break;","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"matthewken19"},"content":"        case \"bye\":","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"matthewken19"},"content":"            command \u003d new ExitCommand();","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"matthewken19"},"content":"            break;","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"matthewken19"},"content":"        case \"mark\":","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"matthewken19"},"content":"            // Exception handling and splitting the string","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"matthewken19"},"content":"            if (stringComponents.length !\u003d 2) {","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"matthewken19"},"content":"                throw new DukeException(\"Invalid input format!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"matthewken19"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"matthewken19"},"content":"            index \u003d Integer.parseInt(stringComponents[1]) - 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"matthewken19"},"content":"            command \u003d new MarkCommand(index, true);","lastModifiedDate":"2024-02-07"},{"lineNumber":64,"author":{"gitId":"matthewken19"},"content":"            break;","lastModifiedDate":"2024-02-07"},{"lineNumber":65,"author":{"gitId":"matthewken19"},"content":"        case \"unmark\":","lastModifiedDate":"2024-02-07"},{"lineNumber":66,"author":{"gitId":"matthewken19"},"content":"            // Exception handling and splitting the string","lastModifiedDate":"2024-02-07"},{"lineNumber":67,"author":{"gitId":"matthewken19"},"content":"            if (stringComponents.length !\u003d 2) {","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"matthewken19"},"content":"                throw new DukeException(\"Invalid input format!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"matthewken19"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"matthewken19"},"content":"            index \u003d Integer.parseInt(stringComponents[1]) - 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":71,"author":{"gitId":"matthewken19"},"content":"            command \u003d new MarkCommand(index, false);","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"matthewken19"},"content":"        case \"delete\":","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"matthewken19"},"content":"            if (stringComponents.length \u003c 2) {","lastModifiedDate":"2024-02-09"},{"lineNumber":74,"author":{"gitId":"matthewken19"},"content":"                throw new DukeException(\"Invalid input format!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"matthewken19"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"matthewken19"},"content":"            index \u003d Integer.parseInt(stringComponents[1]) - 1;","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"matthewken19"},"content":"            command \u003d new DeleteCommand(index);","lastModifiedDate":"2024-02-07"},{"lineNumber":78,"author":{"gitId":"matthewken19"},"content":"        case \"find\":","lastModifiedDate":"2024-02-09"},{"lineNumber":79,"author":{"gitId":"matthewken19"},"content":"            if (stringComponents.length \u003c 2) {","lastModifiedDate":"2024-02-11"},{"lineNumber":80,"author":{"gitId":"matthewken19"},"content":"                throw new DukeException(\"Invalid input format!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":81,"author":{"gitId":"matthewken19"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":82,"author":{"gitId":"matthewken19"},"content":"            String keyword \u003d line.split(commandWord + \" \")[1];","lastModifiedDate":"2024-02-09"},{"lineNumber":83,"author":{"gitId":"matthewken19"},"content":"            command \u003d new FindCommand(keyword.trim());","lastModifiedDate":"2024-02-09"},{"lineNumber":84,"author":{"gitId":"matthewken19"},"content":"            break;","lastModifiedDate":"2024-02-09"},{"lineNumber":85,"author":{"gitId":"matthewken19"},"content":"        case \"event\":","lastModifiedDate":"2024-02-07"},{"lineNumber":86,"author":{"gitId":"matthewken19"},"content":"        case \"todo\":","lastModifiedDate":"2024-02-07"},{"lineNumber":87,"author":{"gitId":"matthewken19"},"content":"        case \"deadline\":","lastModifiedDate":"2024-02-07"},{"lineNumber":88,"author":{"gitId":"matthewken19"},"content":"            String description \u003d line.split(commandWord + \" \")[1];","lastModifiedDate":"2024-02-07"},{"lineNumber":89,"author":{"gitId":"matthewken19"},"content":"            command \u003d new AddCommand(commandWord, description);","lastModifiedDate":"2024-02-07"},{"lineNumber":90,"author":{"gitId":"matthewken19"},"content":"            break;","lastModifiedDate":"2024-02-07"},{"lineNumber":91,"author":{"gitId":"matthewken19"},"content":"        default:","lastModifiedDate":"2024-02-07"},{"lineNumber":92,"author":{"gitId":"matthewken19"},"content":"            throw new DukeException(\"I\u0027m sorry, I don\u0027t know what that means.\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":93,"author":{"gitId":"matthewken19"},"content":"                    \"Please input valid commands (i.e. [command] [description]).\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":94,"author":{"gitId":"matthewken19"},"content":"                    \"You can choose from the following available commands:\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":95,"author":{"gitId":"matthewken19"},"content":"                    \"   * todo [desc]\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":96,"author":{"gitId":"matthewken19"},"content":"                    \"   * event [desc] /from [desc] /to [desc]\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":97,"author":{"gitId":"matthewken19"},"content":"                    \"   * deadline [desc] /by [desc]\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":98,"author":{"gitId":"matthewken19"},"content":"                    \"   * list\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":99,"author":{"gitId":"matthewken19"},"content":"                    \"   * mark [number]\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":100,"author":{"gitId":"matthewken19"},"content":"                    \"   * unmark [number]\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":101,"author":{"gitId":"matthewken19"},"content":"                    \"   * delete [number]\");","lastModifiedDate":"2024-02-07"},{"lineNumber":102,"author":{"gitId":"matthewken19"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":103,"author":{"gitId":"matthewken19"},"content":"        return command;","lastModifiedDate":"2024-02-07"},{"lineNumber":104,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":105,"author":{"gitId":"matthewken19"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"matthewken19":105}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthewken19"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"matthewken19"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"matthewken19"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"matthewken19"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"matthewken19"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"matthewken19"},"content":"import java.io.File;","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"matthewken19"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"matthewken19"},"content":"class Storage {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"matthewken19"},"content":"    private File file;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"matthewken19"},"content":"    Storage(String filePath) {","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"matthewken19"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"matthewken19"},"content":"    Storage(File file) {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"matthewken19"},"content":"        this.file \u003d file;","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"matthewken19"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"matthewken19"},"content":"     * Read the content of the file and returns a Task ArrayList.","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"matthewken19"},"content":"     * If no existing file is found or file is corrupted, returns empty ArrayList.","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"matthewken19"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"matthewken19"},"content":"     * @return ArrayList\u003cTask\u003e of the content of the file.","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"matthewken19"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"matthewken19"},"content":"    ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"matthewken19"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"matthewken19"},"content":"        // If file doesn\u0027t exist, create the parent directories and the file","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"matthewken19"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"matthewken19"},"content":"            try {","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"matthewken19"},"content":"                // Create parent directories","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"matthewken19"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"matthewken19"},"content":"                // Create file","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"matthewken19"},"content":"                file.createNewFile();","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"matthewken19"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"matthewken19"},"content":"                System.out.println(\"An error occurred while creating the file.\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"matthewken19"},"content":"                        \"Program will run without saved file.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"matthewken19"},"content":"                return tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"matthewken19"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"matthewken19"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"matthewken19"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"matthewken19"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"matthewken19"},"content":"            String lineRead;","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"matthewken19"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"matthewken19"},"content":"                lineRead \u003d sc.nextLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"matthewken19"},"content":"                tasks.add(Parser.parseToTask(lineRead, \"\\\\|\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"matthewken19"},"content":"            }","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"matthewken19"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"matthewken19"},"content":"            System.out.println(\"An error occurred while opening the file\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"matthewken19"},"content":"                    \"Program will run without saved file.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"matthewken19"},"content":"            return tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"matthewken19"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"matthewken19"},"content":"            System.out.println(\"An error occurred while reading the file.\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"matthewken19"},"content":"                    \"File may contain corrupted data!\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"matthewken19"},"content":"                    \"Program will run without saved file.\");","lastModifiedDate":"2024-02-07"},{"lineNumber":57,"author":{"gitId":"matthewken19"},"content":"            return tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":58,"author":{"gitId":"matthewken19"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"matthewken19"},"content":"        return tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":62,"author":{"gitId":"matthewken19"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"matthewken19"},"content":"     * Write the content of the tasks into the file.","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"matthewken19"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"matthewken19"},"content":"     * @param tasks the TaskList that will be written into the file.","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"matthewken19"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"matthewken19"},"content":"    void save(TaskList tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":68,"author":{"gitId":"matthewken19"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":69,"author":{"gitId":"matthewken19"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2024-02-07"},{"lineNumber":70,"author":{"gitId":"matthewken19"},"content":"            fw.write(tasks.toStore());","lastModifiedDate":"2024-02-07"},{"lineNumber":71,"author":{"gitId":"matthewken19"},"content":"            fw.close();","lastModifiedDate":"2024-02-07"},{"lineNumber":72,"author":{"gitId":"matthewken19"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2024-02-07"},{"lineNumber":73,"author":{"gitId":"matthewken19"},"content":"            System.out.println(\"Failed tot save progress!\");","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"matthewken19"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":75,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":76,"author":{"gitId":"matthewken19"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"matthewken19":76}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthewken19"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"matthewken19"},"content":"public class Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"matthewken19"},"content":"    private String desc;","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"matthewken19"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"matthewken19"},"content":"    Task(String desc) {","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"matthewken19"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"matthewken19"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"matthewken19"},"content":"    Task(String desc, boolean isDone) {","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"matthewken19"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"matthewken19"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"matthewken19"},"content":"    public boolean equals(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"matthewken19"},"content":"        if (task \u003d\u003d this) {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"matthewken19"},"content":"            return true;","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"matthewken19"},"content":"        } else {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"matthewken19"},"content":"            return task.desc \u003d\u003d desc \u0026\u0026 task.isDone \u003d\u003d isDone;","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"matthewken19"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"matthewken19"},"content":"    boolean contains(String keyword) {","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"matthewken19"},"content":"        return desc.contains(keyword);","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"matthewken19"},"content":"    public void mark() {","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"matthewken19"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"matthewken19"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"matthewken19"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"matthewken19"},"content":"    public String toStore() {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"matthewken19"},"content":"        // need to store status as well","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"matthewken19"},"content":"        return isDone + \" | \" + desc;","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"matthewken19"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"matthewken19"},"content":"        String s \u003d \"[ ]\";","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"matthewken19"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"matthewken19"},"content":"            s \u003d \"[X]\";","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"matthewken19"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"matthewken19"},"content":"        return  s + \" \" + desc;","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"matthewken19"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"matthewken19":49}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthewken19"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"matthewken19"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"matthewken19"},"content":"import java.util.List;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"matthewken19"},"content":"public class TaskList {","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"matthewken19"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"matthewken19"},"content":"    TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"matthewken19"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"matthewken19"},"content":"    void add(Task task) {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"matthewken19"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"matthewken19"},"content":"    int size() {","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"matthewken19"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"matthewken19"},"content":"    void remove(int index) {","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"matthewken19"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"matthewken19"},"content":"    Task get(int index) {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"matthewken19"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"matthewken19"},"content":"    TaskList find(String str) {","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"matthewken19"},"content":"        ArrayList\u003cTask\u003e foundList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"matthewken19"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"matthewken19"},"content":"            if (task.contains(str)) {","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"matthewken19"},"content":"                foundList.add(task);","lastModifiedDate":"2024-02-09"},{"lineNumber":34,"author":{"gitId":"matthewken19"},"content":"            }","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"matthewken19"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"matthewken19"},"content":"        return new TaskList(foundList);","lastModifiedDate":"2024-02-09"},{"lineNumber":37,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"matthewken19"},"content":"    String toStore() {","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"matthewken19"},"content":"        String out \u003d \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"matthewken19"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"matthewken19"},"content":"            out +\u003d task.toStore() + \"\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"matthewken19"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"matthewken19"},"content":"        return out;","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"matthewken19"},"content":"    public String toString() {","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"matthewken19"},"content":"        int index \u003d 1;","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"matthewken19"},"content":"        String out \u003d \"\";","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"matthewken19"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"matthewken19"},"content":"            out +\u003d index + \".\" + task.toString() + \"\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"matthewken19"},"content":"            index++;","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"matthewken19"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"matthewken19"},"content":"        return out;","lastModifiedDate":"2024-02-07"},{"lineNumber":55,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":56,"author":{"gitId":"matthewken19"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"matthewken19":56}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthewken19"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"matthewken19"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"matthewken19"},"content":"    ToDo(String desc) {","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"matthewken19"},"content":"        super(desc);","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"matthewken19"},"content":"    ToDo(String desc, boolean isDone) {","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"matthewken19"},"content":"        super(desc, isDone);","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"matthewken19"},"content":"    public String toStore() {","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"matthewken19"},"content":"        // need to store status as well","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"matthewken19"},"content":"        return \"T | \" + super.toStore();","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"matthewken19"},"content":"    @Override","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"matthewken19"},"content":"    public String toString() {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"matthewken19"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"matthewken19"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"matthewken19":22}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthewken19"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"matthewken19"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"matthewken19"},"content":"public class Ui {","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"matthewken19"},"content":"    static String LINE \u003d \"_____________________________________________\";","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"matthewken19"},"content":"    public void open() {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"matthewken19"},"content":"        String greeting \u003d \"Hello! I\u0027m Donald.\\nWhat can I do for you?\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"matthewken19"},"content":"        String out \u003d LINE + \"\\n\" + greeting + LINE;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"matthewken19"},"content":"        System.out.println(out);","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"matthewken19"},"content":"    public void close() {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"matthewken19"},"content":"        String closing \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"matthewken19"},"content":"        String out \u003d closing + LINE;","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"matthewken19"},"content":"        System.out.println(out);","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"matthewken19"},"content":"    String readCommand() {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"matthewken19"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"matthewken19"},"content":"        return sc.nextLine();","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"matthewken19"},"content":"    void showLine() {","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"matthewken19"},"content":"        System.out.println(LINE);","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"matthewken19"},"content":"    void addMessage(String str, int taskSize) {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"matthewken19"},"content":"        String out \u003d \"Got it. I\u0027ve added this task:\\n\" + str","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"matthewken19"},"content":"                + \"\\nNow you have \" + taskSize + \" tasks in this list.\";","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"matthewken19"},"content":"        System.out.println(out);","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"matthewken19"},"content":"    void deleteMessage(String str, int taskSize) {","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"matthewken19"},"content":"        String out \u003d \"Noted. I\u0027ve removed this task:\\n\" + str + \"\\nNow you have \" + taskSize + \" tasks in the list.\";","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"matthewken19"},"content":"        System.out.println(out);","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"matthewken19"},"content":"    void markMessage(String str) {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"matthewken19"},"content":"        String out \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + str;","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"matthewken19"},"content":"        System.out.println(out);","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"matthewken19"},"content":"    void unmarkMessage(String str) {","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"matthewken19"},"content":"        String out \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\" + str;","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"matthewken19"},"content":"        System.out.println(out);","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"matthewken19"},"content":"    void listMessage(String str) {","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"matthewken19"},"content":"        String out \u003d \"Here are the tasks in your list:\\n\" + str;","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"matthewken19"},"content":"        System.out.print(out);","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"matthewken19"},"content":"    void findMessage(String str) {","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"matthewken19"},"content":"        String out \u003d \"Here are the matching tasks in your list:\\n\" + str;","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"matthewken19"},"content":"        System.out.print(str);","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"matthewken19"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"matthewken19":59}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthewken19"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"matthewken19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"matthewken19"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"matthewken19"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"matthewken19"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"matthewken19"},"content":"    public void parseToTask_correctFormat_success() throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"matthewken19"},"content":"        // parse string to Task for ToDo","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"matthewken19"},"content":"        assertEquals(new ToDo(\"test\"), Parser.parseToTask(\"T |   | test\", \" | \"));","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"matthewken19"},"content":"        // parse string to Task for Deadline","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"matthewken19"},"content":"        assertEquals(new Deadline(\"test\", \"2024-01-01\"),","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"matthewken19"},"content":"                Parser.parseToTask(\"D |   | test | 2024-01-01\", \" | \"));","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"matthewken19"},"content":"        // parse string to Task for Event","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"matthewken19"},"content":"        assertEquals(new Event(\"test\", \"2024-01-01\", \"2024-02-02\"),","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"matthewken19"},"content":"                Parser.parseToTask(\"E |   | test | 2024-01-01 | 2024-02-02\", \" | \"));","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"matthewken19"},"content":"    public void parseToTask_wrongFormat_DukeExceptionThrown() {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"matthewken19"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"matthewken19"},"content":"            assertEquals(new ToDo(\"test\"), Parser.parseToTask(\"O |   | test\", \" | \"));","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"matthewken19"},"content":"            fail();","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"matthewken19"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"matthewken19"},"content":"            assertEquals(\"Corrupted Data!\", ex.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"matthewken19"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"matthewken19"},"content":"    public void parseToCommand_correctFormat_success() throws DukeException {","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"matthewken19"},"content":"        // parse command for List","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"matthewken19"},"content":"        assertEquals(new ListCommand(), Parser.parseToCommand(\"list\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"matthewken19"},"content":"        // parse command for bye","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"matthewken19"},"content":"        assertEquals(new ExitCommand(), Parser.parseToCommand(\"bye\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":34,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":35,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"matthewken19"},"content":"    public void parseToCommand_wrongFormat_DukeExceptionThrown() {","lastModifiedDate":"2024-02-07"},{"lineNumber":37,"author":{"gitId":"matthewken19"},"content":"        try {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"matthewken19"},"content":"            assertEquals(0, Parser.parseToCommand(\"test\"));","lastModifiedDate":"2024-02-07"},{"lineNumber":39,"author":{"gitId":"matthewken19"},"content":"            fail();","lastModifiedDate":"2024-02-07"},{"lineNumber":40,"author":{"gitId":"matthewken19"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2024-02-07"},{"lineNumber":41,"author":{"gitId":"matthewken19"},"content":"            assertEquals(\"I\u0027m sorry, I don\u0027t know what that means.\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"matthewken19"},"content":"                    \"Please input valid commands (i.e. [command] [description]).\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":43,"author":{"gitId":"matthewken19"},"content":"                    \"You can choose from the following available commands:\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":44,"author":{"gitId":"matthewken19"},"content":"                    \"   * todo [desc]\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":45,"author":{"gitId":"matthewken19"},"content":"                    \"   * event [desc] /from [desc] /to [desc]\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":46,"author":{"gitId":"matthewken19"},"content":"                    \"   * deadline [desc] /by [desc]\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":47,"author":{"gitId":"matthewken19"},"content":"                    \"   * list\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":48,"author":{"gitId":"matthewken19"},"content":"                    \"   * mark [number]\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":49,"author":{"gitId":"matthewken19"},"content":"                    \"   * unmark [number]\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":50,"author":{"gitId":"matthewken19"},"content":"                    \"   * delete [number]\",","lastModifiedDate":"2024-02-07"},{"lineNumber":51,"author":{"gitId":"matthewken19"},"content":"                    ex.getMessage());","lastModifiedDate":"2024-02-07"},{"lineNumber":52,"author":{"gitId":"matthewken19"},"content":"        }","lastModifiedDate":"2024-02-07"},{"lineNumber":53,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":54,"author":{"gitId":"matthewken19"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"matthewken19":54}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"matthewken19"},"content":"package duke;","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"matthewken19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"matthewken19"},"content":"import java.util.List;","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"matthewken19"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"matthewken19"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"matthewken19"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"matthewken19"},"content":"    private static TaskList tasks \u003d new TaskList(List.of(new ToDo(\"test\"),","lastModifiedDate":"2024-02-07"},{"lineNumber":11,"author":{"gitId":"matthewken19"},"content":"            new Deadline(\"test\", \"2024-01-01\"),","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"matthewken19"},"content":"            new Event(\"test\", \"2024-01-01\", \"2024-02-02\")));","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"matthewken19"},"content":"    public void toStore_taskList_success() {","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"matthewken19"},"content":"        assertEquals(\"T | false | test\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"matthewken19"},"content":"                \"D | false | test | 2024-01-01\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"matthewken19"},"content":"                \"E | false | test | 2024-01-01 | 2024-02-02\", tasks.toStore());","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":20,"author":{"gitId":"matthewken19"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"matthewken19"},"content":"    public void toString_taskList_success() {","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"matthewken19"},"content":"        assertEquals(\"1.[T][ ] test\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"matthewken19"},"content":"                \"2.[D][ ] test (by: Jan 1 2024)\\n\" +","lastModifiedDate":"2024-02-07"},{"lineNumber":24,"author":{"gitId":"matthewken19"},"content":"                \"3.[E][ ] test (from: Jan 1 2024 to: Feb 2 2024)\", tasks.toString());","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"matthewken19"},"content":"    }","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"matthewken19"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"matthewken19":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"matthewken19"},"content":"deadline submit report /by 13th Jan","lastModifiedDate":"2024-01-30"},{"lineNumber":2,"author":{"gitId":"matthewken19"},"content":"todo buy groceries","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"matthewken19"},"content":"list","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"matthewken19"},"content":"event conference /from 8:00 /to 10:00","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"matthewken19"},"content":"list","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"matthewken19"},"content":"mark 1","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"matthewken19"},"content":"mark 3","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"matthewken19"},"content":"list","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"matthewken19"},"content":"unmark 1","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"matthewken19"},"content":"mark 2","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"matthewken19"},"content":"todo catch up on cs2103","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"matthewken19"},"content":"list","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"matthewken19"},"content":"bye","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"matthewken19":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"matthewken19"},"content":"javac  -cp C:\\Users\\Ken\\Desktop\\NUS\\CS2103\\ip\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"matthewken19"},"content":"java -classpath C:\\Users\\Ken\\Desktop\\NUS\\CS2103\\ip\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"matthewken19":2}}]
