[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"# duke.duke project template","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"3. After that, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"GERARDJM018":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"mainClassName \u003d \u0027duke.Launcher\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"tasks.withType(JavaCompile) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"    options.compilerArgs \u003c\u003c \u0027-source\u0027 \u003c\u003c \u002711\u0027 // Set the Java source version","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"    options.compilerArgs \u003c\u003c \u0027-target\u0027 \u003c\u003c \u002711\u0027 // Set the target Java version","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"checkstyle {","lastModifiedDate":"2024-02-08"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-02-08"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"GERARDJM018"},"content":"    mainClass.set(\"duke.Launcher\")","lastModifiedDate":"2024-02-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"GERARDJM018"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2024-02-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":38,"GERARDJM018":29}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"    private void flip() {","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"GERARDJM018"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"GERARDJM018"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"GERARDJM018"},"content":"        db.flip();","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"GERARDJM018"},"content":"        return db;","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"GERARDJM018":62}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"import duke.command.Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"import duke.exception.CommandInvalidException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":" * Main code to run program.","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":" *","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":" *","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"public class Duke {","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"    private static final String CURRENT_WORKING_DIRECTORY \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"    private static final String PATH \u003d \"/list.txt\";","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"    private Scene scene;","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/Kuromi.png\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/bot.jpg\"));","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"    private boolean isExit;","lastModifiedDate":"2024-02-09"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"     * Constructor for Duke","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"     * @param filePath X path of the saved file.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"            ui.showMessage(e.getMessage());","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":53,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"     * Constructor for Duke","lastModifiedDate":"2024-02-09"},{"lineNumber":56,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-09"},{"lineNumber":58,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":59,"author":{"gitId":"GERARDJM018"},"content":"    public Duke() {","lastModifiedDate":"2024-02-09"},{"lineNumber":60,"author":{"gitId":"GERARDJM018"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-09"},{"lineNumber":61,"author":{"gitId":"GERARDJM018"},"content":"        storage \u003d new Storage(CURRENT_WORKING_DIRECTORY + PATH);","lastModifiedDate":"2024-02-09"},{"lineNumber":62,"author":{"gitId":"GERARDJM018"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":63,"author":{"gitId":"GERARDJM018"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-09"},{"lineNumber":64,"author":{"gitId":"GERARDJM018"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":65,"author":{"gitId":"GERARDJM018"},"content":"            ui.showMessage(e.getMessage());","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"GERARDJM018"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-09"},{"lineNumber":67,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"GERARDJM018"},"content":"        isExit \u003d false;","lastModifiedDate":"2024-02-09"},{"lineNumber":69,"author":{"gitId":"GERARDJM018"},"content":"        assert ui !\u003d null;","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"GERARDJM018"},"content":"        assert storage !\u003d null;","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"GERARDJM018"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"GERARDJM018"},"content":"        assert isExit \u003d\u003d false;","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"GERARDJM018"},"content":"        assert duke !\u003d null;","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"GERARDJM018"},"content":"        assert user !\u003d null;","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":76,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":77,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"GERARDJM018"},"content":"     * Runs the duke program","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"GERARDJM018"},"content":"    public void run() {","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"GERARDJM018"},"content":"        ui.showWelcome();","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"GERARDJM018"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"GERARDJM018"},"content":"        while (!isExit) {","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"GERARDJM018"},"content":"            try {","lastModifiedDate":"2024-01-28"},{"lineNumber":86,"author":{"gitId":"GERARDJM018"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"GERARDJM018"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"GERARDJM018"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"GERARDJM018"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"GERARDJM018"},"content":"            } catch (CommandInvalidException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"GERARDJM018"},"content":"                ui.showMessage(e.getMessage());","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"GERARDJM018"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-09"},{"lineNumber":97,"author":{"gitId":"GERARDJM018"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2024-02-09"},{"lineNumber":98,"author":{"gitId":"GERARDJM018"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"GERARDJM018"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-11"},{"lineNumber":101,"author":{"gitId":"GERARDJM018"},"content":"        String output;","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"GERARDJM018"},"content":"        try {","lastModifiedDate":"2024-02-09"},{"lineNumber":103,"author":{"gitId":"GERARDJM018"},"content":"            String fullCommand \u003d input;","lastModifiedDate":"2024-02-09"},{"lineNumber":104,"author":{"gitId":"GERARDJM018"},"content":"            Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-02-09"},{"lineNumber":105,"author":{"gitId":"GERARDJM018"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"GERARDJM018"},"content":"            output \u003d c.getOut();","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"GERARDJM018"},"content":"            isExit \u003d c.isExit();","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"GERARDJM018"},"content":"        } catch (CommandInvalidException e) {","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"GERARDJM018"},"content":"            ui.showMessage(e.getMessage());","lastModifiedDate":"2024-02-09"},{"lineNumber":110,"author":{"gitId":"GERARDJM018"},"content":"            output \u003d e.getMessage();","lastModifiedDate":"2024-02-09"},{"lineNumber":111,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-02-09"},{"lineNumber":112,"author":{"gitId":"GERARDJM018"},"content":"        return \"GanAnWo answer: \\n\" + output;","lastModifiedDate":"2024-02-09"},{"lineNumber":113,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":114,"author":{"gitId":"GERARDJM018"},"content":"    public boolean getIsExit() {","lastModifiedDate":"2024-02-11"},{"lineNumber":115,"author":{"gitId":"GERARDJM018"},"content":"        return isExit;","lastModifiedDate":"2024-02-11"},{"lineNumber":116,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":117,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":118,"author":{"gitId":"GERARDJM018"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"GERARDJM018"},"content":"        new Duke(CURRENT_WORKING_DIRECTORY + PATH).run();","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":1,"GERARDJM018":120}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke;","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":" * Launcher code.","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":" *","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":" *","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"public class Launcher {","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"GERARDJM018":14}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"    @Override","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"        assert duke !\u003d null;","lastModifiedDate":"2024-02-15"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"        try {","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"            stage.show();","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"            stage.setResizable(false);","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"            // Start a background thread to continuously check the exit condition","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"            checkAndExit().start();","lastModifiedDate":"2024-02-15"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"     * Returns a thread to check the exit status","lastModifiedDate":"2024-02-15"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"     * and if it is true, exit the program.","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"     * @return an ArrayList of task.","lastModifiedDate":"2024-02-15"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"    public Thread checkAndExit() {","lastModifiedDate":"2024-02-15"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"        return new Thread(() -\u003e {","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"            while (true) {","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"                // Check the exit condition in real-time","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"                if (duke.getIsExit()) {","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"                    // Terminate the Java application","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"                    System.exit(0);","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"                }","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"                try {","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"                    // Wait for a short period before checking again","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"                    Thread.sleep(4000); // Adjust the sleep time as needed","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"GERARDJM018"},"content":"                } catch (InterruptedException e) {","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"GERARDJM018"},"content":"                    e.printStackTrace();","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"                }","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"GERARDJM018"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"        });","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"GERARDJM018":60}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke;","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"    private Duke duke;","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Kuromi.png\"));","lastModifiedDate":"2024-02-14"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bot.jpg\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"     * Creates first scene and welcome message.","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"    public void initialize() {","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"        showWelcome();","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"        duke \u003d d;","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-11"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"        );","lastModifiedDate":"2024-02-11"},{"lineNumber":53,"author":{"gitId":"GERARDJM018"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"GERARDJM018"},"content":"    @FXML","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"    private void showWelcome() {","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"GERARDJM018"},"content":"        String dukeText \u003d \"Hello! I\u0027m GanAnWo\\n\"","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"GERARDJM018"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"GERARDJM018"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"GERARDJM018"},"content":"                DialogBox.getDukeDialog(dukeText, dukeImage)","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"GERARDJM018"},"content":"        );","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"GERARDJM018"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"GERARDJM018":65}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"import duke.command.Commands;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"import duke.exception.CommandInvalidException;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":" * Class to convert text to command.","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":" *","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"public class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"     * Returns validity whether the command given.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"     * If the command is valid, return true.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"     * If the command is invalid, return false.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"     * @param no given command.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"     * @return validity of the command.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"    public static boolean isValid(String no) { //check if the given command is valid //throw something","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"        String[] inputs \u003d no.split(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"        for (Commands com : Commands.values()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"            if (com.name().equalsIgnoreCase(inputs[0])) {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"                return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"        return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"     * Returns an instatiate of Command for the given command.","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"     * @param command given command.","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"     * @return an instatiate of Command.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"     * @throws CommandInvalidException If command is invalid.","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"    public static Command parse(String command) throws CommandInvalidException {","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"        if (!isValid(command)) {","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"            throw new CommandInvalidException(\"Invalid command -_-, please use the available commands!!!\");","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"        String[] inputs \u003d command.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"        if (command.equals(\"bye\")) { //if the user use bye command","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"            return new ByeCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"GERARDJM018"},"content":"        } else if (inputs[0].equals(\"mark\")) {","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"GERARDJM018"},"content":"            return new MarkCommand(command);","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"        } else if (inputs[0].equals(\"unmark\")) {","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"GERARDJM018"},"content":"            return new UnmarkCommand(command);","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"        } else if (command.equals(\"list\")) { //if the user use list command","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"GERARDJM018"},"content":"            return new ListCommand();","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"GERARDJM018"},"content":"        } else if (inputs[0].equals(\"delete\")) { //if the user use delete command","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"GERARDJM018"},"content":"            return new DeleteCommand(command);","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"GERARDJM018"},"content":"        } else if (inputs[0].equals(\"find\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"GERARDJM018"},"content":"            System.out.println(inputs[0]);","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"GERARDJM018"},"content":"            return new FindCommand(command);","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"GERARDJM018"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"GERARDJM018"},"content":"            return new AddCommand(command);","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"GERARDJM018":69}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"import duke.task.Event;","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"import duke.task.ToDos;","lastModifiedDate":"2024-02-08"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":" * Class used to do all methods related to save \u0026 load.","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":" *","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":" *","lastModifiedDate":"2024-02-08"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"    private static final DateTimeFormatter DATE_FORMAT_INP \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027 \u0027HH:mm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"    private static final DateTimeFormatter DATE_FORMAT_OUT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"    private String path;","lastModifiedDate":"2024-02-08"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"    private File data;","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"     * Constructor for storage","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"     * @param filePath path of file in string.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"        path \u003d filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"        data \u003d new File(path);","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"     * Returns an ArrayList of task from the saved file.","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"     * @return an ArrayList contains Task.","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"     * @throws FileNotFoundException If file is not yet made.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"        ArrayList\u003cTask\u003e taskF \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"        if (!data.exists()) {","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"            throw new FileNotFoundException(\"No saved data before, making new one\");","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"        Scanner sc \u003d new Scanner(data);","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"            String dt \u003d sc.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"GERARDJM018"},"content":"            String[] dtl \u003d dt.split(\"/\");","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"GERARDJM018"},"content":"            switch (dtl[0]) {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"            case \"T\":","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"GERARDJM018"},"content":"                taskF.add(new ToDos(dtl[1], dtl[2]));","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"GERARDJM018"},"content":"            case \"D\":","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"GERARDJM018"},"content":"                taskF.add(new Deadline(dtl[1], dtl[2], LocalDateTime.parse(dtl[3], DATE_FORMAT_INP)));","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"GERARDJM018"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"GERARDJM018"},"content":"            case \"E\":","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"GERARDJM018"},"content":"                taskF.add(new Event(dtl[1], dtl[2], LocalDateTime.parse(dtl[3], DATE_FORMAT_INP),","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"GERARDJM018"},"content":"                        LocalDateTime.parse(dtl[4], DATE_FORMAT_INP)));","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"GERARDJM018"},"content":"                break;","lastModifiedDate":"2024-02-08"},{"lineNumber":65,"author":{"gitId":"GERARDJM018"},"content":"            default:","lastModifiedDate":"2024-02-08"},{"lineNumber":66,"author":{"gitId":"GERARDJM018"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"GERARDJM018"},"content":"        return taskF;","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"GERARDJM018"},"content":"     * Saves the given ArrayList to the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"GERARDJM018"},"content":"     * @param tasks an ArrayList of task.","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"GERARDJM018"},"content":"     * @throws IOException If save failed.","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"GERARDJM018"},"content":"    public void write(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"GERARDJM018"},"content":"        FileWriter rFile;","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"GERARDJM018"},"content":"        rFile \u003d new FileWriter(path);","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"GERARDJM018"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"GERARDJM018"},"content":"            rFile.write(tasks.get(i).toWrite());","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"GERARDJM018"},"content":"            rFile.write(\"\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":84,"author":{"gitId":"GERARDJM018"},"content":"        rFile.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":86,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"GERARDJM018":86}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":" * Class used to store tasks.","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":" *","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"     * Constructor for the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"     * Constructor for the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"     * @param t An ArrayList of task.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"    public TaskList(ArrayList\u003cTask\u003e t) {","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"        tasks \u003d t;","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"     * Returns a string if the task given is","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"     * succesfully added.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"     * @param t a task to be added.","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"     * @return a string.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"    public String addTask(Task t) {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"        String b \u003d t.toString() + \"\\n\";","lastModifiedDate":"2024-02-16"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"        if (isDuplicate(t)) {","lastModifiedDate":"2024-02-16"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"            String a \u003d \"This task has been added to the list before:\\n\";","lastModifiedDate":"2024-02-16"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"            String c \u003d \"So, the task will not be added again!\";","lastModifiedDate":"2024-02-16"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"            return a + b + c;","lastModifiedDate":"2024-02-16"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"        tasks.add(t);","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"        String a \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"        String c \u003d \"Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"        return a + b + c;","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"     * Returns a string if the task with the given","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"GERARDJM018"},"content":"     * number is succesfully marked.","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"     * @param n task number.","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"GERARDJM018"},"content":"     * @return a string.","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"GERARDJM018"},"content":"    public String mark(int n) {","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"GERARDJM018"},"content":"        assert tasks.size() \u003e n;","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"GERARDJM018"},"content":"        tasks.get(n).setMark();","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"GERARDJM018"},"content":"        String a \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"GERARDJM018"},"content":"        String b \u003d tasks.get(n).toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"GERARDJM018"},"content":"        return a + b;","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"GERARDJM018"},"content":"     * Returns a string if the task with the given","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"GERARDJM018"},"content":"     * number is succesfully unmarked.","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"GERARDJM018"},"content":"     * @param n task number.","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"GERARDJM018"},"content":"     * @return a string.","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"GERARDJM018"},"content":"    public String unMark(int n) {","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"GERARDJM018"},"content":"        assert tasks.size() \u003e n;","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"GERARDJM018"},"content":"        tasks.get(n).setUnMark();","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"GERARDJM018"},"content":"        String a \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"GERARDJM018"},"content":"        String b \u003d tasks.get(n).toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"GERARDJM018"},"content":"        return a + b;","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"GERARDJM018"},"content":"     * Returns a string if the task with the given","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"GERARDJM018"},"content":"     * number is succesfully deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"GERARDJM018"},"content":"     * @param n task number.","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"GERARDJM018"},"content":"     * @return a string.","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"GERARDJM018"},"content":"    public String delete(int n) {","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"GERARDJM018"},"content":"        assert tasks.size() \u003e n;","lastModifiedDate":"2024-02-15"},{"lineNumber":90,"author":{"gitId":"GERARDJM018"},"content":"        Task delT \u003d tasks.get(n);","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"GERARDJM018"},"content":"        tasks.remove(n);","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"GERARDJM018"},"content":"        String a \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"GERARDJM018"},"content":"        String b \u003d delT.toString() + \"\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"GERARDJM018"},"content":"        String c \u003d \"Now you have \" + tasks.size() + \" tasks in the list. \";","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"GERARDJM018"},"content":"        return a + b + c;","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"GERARDJM018"},"content":"     * Returns an ArrayList of task from the TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"GERARDJM018"},"content":"     * @return an ArrayList of task.","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"GERARDJM018"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"GERARDJM018"},"content":"        return tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"GERARDJM018"},"content":"     * Returns the current list of task in String format.","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"GERARDJM018"},"content":"    public String showList() {","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"GERARDJM018"},"content":"        String sl \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":113,"author":{"gitId":"GERARDJM018"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"GERARDJM018"},"content":"            sl \u003d sl + (i + 1) + \".\" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"GERARDJM018"},"content":"        return sl;","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"GERARDJM018"},"content":"     * Returns all the tasks that contains the key in","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"GERARDJM018"},"content":"     * String format.","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"GERARDJM018"},"content":"     * @param key the string key need to be contained.","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"GERARDJM018"},"content":"     * @return the list of tasks that contains key in String format.","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"GERARDJM018"},"content":"    public String findList(String key) {","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"GERARDJM018"},"content":"        String sl \u003d \"\";","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"GERARDJM018"},"content":"        int no \u003d 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"GERARDJM018"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"GERARDJM018"},"content":"            if (tasks.get(i).hasFind(key)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"GERARDJM018"},"content":"                sl \u003d sl + no + \".\" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"GERARDJM018"},"content":"                no++;","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"GERARDJM018"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"GERARDJM018"},"content":"        if (sl.equals(\"\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"GERARDJM018"},"content":"            sl \u003d \"Not found task with keyword: \" + key;","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"GERARDJM018"},"content":"        return sl;","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":141,"author":{"gitId":"GERARDJM018"},"content":"     * Check whether a task is duplicate.","lastModifiedDate":"2024-02-16"},{"lineNumber":142,"author":{"gitId":"GERARDJM018"},"content":"     * Duplicate means the task instance checked has","lastModifiedDate":"2024-02-16"},{"lineNumber":143,"author":{"gitId":"GERARDJM018"},"content":"     * the same details of another task instance that","lastModifiedDate":"2024-02-16"},{"lineNumber":144,"author":{"gitId":"GERARDJM018"},"content":"     * is already on the list.","lastModifiedDate":"2024-02-16"},{"lineNumber":145,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":146,"author":{"gitId":"GERARDJM018"},"content":"     * @param task Task instance to be checked.","lastModifiedDate":"2024-02-16"},{"lineNumber":147,"author":{"gitId":"GERARDJM018"},"content":"     * @return boolean result of the check.","lastModifiedDate":"2024-02-16"},{"lineNumber":148,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":149,"author":{"gitId":"GERARDJM018"},"content":"    public boolean isDuplicate(Task task) {","lastModifiedDate":"2024-02-16"},{"lineNumber":150,"author":{"gitId":"GERARDJM018"},"content":"        boolean isDp \u003d false;","lastModifiedDate":"2024-02-16"},{"lineNumber":151,"author":{"gitId":"GERARDJM018"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-16"},{"lineNumber":152,"author":{"gitId":"GERARDJM018"},"content":"            isDp \u003d tasks.get(i).isEqual(task);","lastModifiedDate":"2024-02-16"},{"lineNumber":153,"author":{"gitId":"GERARDJM018"},"content":"            System.out.println(isDp);","lastModifiedDate":"2024-02-16"},{"lineNumber":154,"author":{"gitId":"GERARDJM018"},"content":"            if (isDp) {","lastModifiedDate":"2024-02-16"},{"lineNumber":155,"author":{"gitId":"GERARDJM018"},"content":"                break;","lastModifiedDate":"2024-02-16"},{"lineNumber":156,"author":{"gitId":"GERARDJM018"},"content":"            }","lastModifiedDate":"2024-02-16"},{"lineNumber":157,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":158,"author":{"gitId":"GERARDJM018"},"content":"        return isDp;","lastModifiedDate":"2024-02-16"},{"lineNumber":159,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":160,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"GERARDJM018":160}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":" * Class used to handle all things relate to input and output.","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":" *","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"    private static String name \u003d \"GanAnWo\";","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"    private Scanner sc;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"     * Constructor for Ui.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"    public Ui() {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"     * Prints a welcome message.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"    public void showWelcome() {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"        System.out.println(\"Hello! I\u0027m \" + name + \"\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"                + \"What can I do for you?\");","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"     * Prints a message based on the given string.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"     * @param m a string","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"    public void showMessage(String m) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"        System.out.println(m);","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"     * Prints a bye message.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"    public void showBye() {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"     * Returns a string from the scanner.","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"     * @return a string","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"GERARDJM018"},"content":"    public String readCommand() {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"GERARDJM018"},"content":"        return sc.nextLine();","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"GERARDJM018":56}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"import duke.exception.DescriptionFormatException;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"import duke.task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"import duke.task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"import duke.task.ToDos;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":" * Class for \"add\" command.","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":" *","lastModifiedDate":"2024-02-08"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"    private static final DateTimeFormatter DATE_FORMAT_INP \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027 \u0027HH:mm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"    private static final DateTimeFormatter DATE_FORMAT_OUT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"    private String com;","lastModifiedDate":"2024-02-08"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"     * Constructor for AddCommand.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"     * @param c command in String format.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"    public AddCommand(String c) {","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"        super(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"        com \u003d c;","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"    public void execute(TaskList tL, Ui ui, Storage st) {","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"        String[] inputs \u003d com.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"        assert inputs.length \u003e 0;","lastModifiedDate":"2024-02-15"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"        String[] name;","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"            switch (inputs[0]) {","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"            case \"event\":","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"                createEvent(inputs, tL, ui, st);","lastModifiedDate":"2024-02-15"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"                break;","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"                createToDo(inputs, tL, ui, st);","lastModifiedDate":"2024-02-15"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"                break;","lastModifiedDate":"2024-02-15"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-15"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"                createDeadline(inputs, tL, ui, st);","lastModifiedDate":"2024-02-15"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"                break;","lastModifiedDate":"2024-02-15"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"            default:","lastModifiedDate":"2024-02-15"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"            }","lastModifiedDate":"2024-02-15"},{"lineNumber":53,"author":{"gitId":"GERARDJM018"},"content":"        } catch (DescriptionFormatException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":54,"author":{"gitId":"GERARDJM018"},"content":"            ui.showMessage(e.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"            setOut(e.getMessage());","lastModifiedDate":"2024-02-15"},{"lineNumber":56,"author":{"gitId":"GERARDJM018"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"            ui.showMessage(\"Please use the date format: yyyy-MM-dd HH:mm (e.g.: 2023-02-01 12:30)\");","lastModifiedDate":"2024-02-15"},{"lineNumber":58,"author":{"gitId":"GERARDJM018"},"content":"            setOut(\"Please use the date format: yyyy-MM-dd HH:mm (e.g.: 2023-02-01 12:30)\");","lastModifiedDate":"2024-02-15"},{"lineNumber":59,"author":{"gitId":"GERARDJM018"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-15"},{"lineNumber":60,"author":{"gitId":"GERARDJM018"},"content":"            ui.showMessage(\"Save failed\");","lastModifiedDate":"2024-02-15"},{"lineNumber":61,"author":{"gitId":"GERARDJM018"},"content":"            setOut(\"Please use the date format: yyyy-MM-dd HH:mm (e.g.: 2023-02-01 12:30)\");","lastModifiedDate":"2024-02-15"},{"lineNumber":62,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":63,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":64,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":65,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":66,"author":{"gitId":"GERARDJM018"},"content":"     * Returns command in String format.","lastModifiedDate":"2024-02-15"},{"lineNumber":67,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":68,"author":{"gitId":"GERARDJM018"},"content":"     * @return command in String format.","lastModifiedDate":"2024-02-15"},{"lineNumber":69,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":70,"author":{"gitId":"GERARDJM018"},"content":"    public String getCom() {","lastModifiedDate":"2024-02-15"},{"lineNumber":71,"author":{"gitId":"GERARDJM018"},"content":"        return com;","lastModifiedDate":"2024-02-15"},{"lineNumber":72,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":73,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":74,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":75,"author":{"gitId":"GERARDJM018"},"content":"     * Create new ToDos task and add it to the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":76,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":77,"author":{"gitId":"GERARDJM018"},"content":"     * @param inputs string array of the input.","lastModifiedDate":"2024-02-15"},{"lineNumber":78,"author":{"gitId":"GERARDJM018"},"content":"     * @param tL TaskList for executing command.","lastModifiedDate":"2024-02-15"},{"lineNumber":79,"author":{"gitId":"GERARDJM018"},"content":"     * @param ui Ui for printing string.","lastModifiedDate":"2024-02-15"},{"lineNumber":80,"author":{"gitId":"GERARDJM018"},"content":"     * @param st Storage for saving/loading in file.","lastModifiedDate":"2024-02-15"},{"lineNumber":81,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":82,"author":{"gitId":"GERARDJM018"},"content":"    public void createToDo(String[] inputs, TaskList tL, Ui ui, Storage st) throws DescriptionFormatException,","lastModifiedDate":"2024-02-15"},{"lineNumber":83,"author":{"gitId":"GERARDJM018"},"content":"            IOException {","lastModifiedDate":"2024-02-15"},{"lineNumber":84,"author":{"gitId":"GERARDJM018"},"content":"        if ((inputs.length \u003d\u003d 1)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"GERARDJM018"},"content":"            throw new DescriptionFormatException(\"Wrong format!, please use this format: \"","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"GERARDJM018"},"content":"                    + ToDos.getFormat());","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":88,"author":{"gitId":"GERARDJM018"},"content":"        String[] name \u003d com.split(\"todo \");","lastModifiedDate":"2024-02-15"},{"lineNumber":89,"author":{"gitId":"GERARDJM018"},"content":"        if (name.length !\u003d 2) {","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"GERARDJM018"},"content":"            throw new DescriptionFormatException(\"Wrong format!, please use this format: \"","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"GERARDJM018"},"content":"                    + ToDos.getFormat());","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":93,"author":{"gitId":"GERARDJM018"},"content":"        name \u003d com.split(\"todo \");","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"GERARDJM018"},"content":"        if (name.length !\u003d 2) {","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"GERARDJM018"},"content":"            throw new DescriptionFormatException(\"Wrong format!, please use this format: \"","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"GERARDJM018"},"content":"                    + ToDos.getFormat());","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"GERARDJM018"},"content":"        String out \u003d tL.addTask(new ToDos(name[1]));","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"GERARDJM018"},"content":"        ui.showMessage(out);","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"GERARDJM018"},"content":"        st.write(tL.getList());","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"GERARDJM018"},"content":"        setOut(out);","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":104,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":105,"author":{"gitId":"GERARDJM018"},"content":"     * Create new Event task and add it to the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":106,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":107,"author":{"gitId":"GERARDJM018"},"content":"     * @param inputs string array of the input.","lastModifiedDate":"2024-02-15"},{"lineNumber":108,"author":{"gitId":"GERARDJM018"},"content":"     * @param tL TaskList for executing command.","lastModifiedDate":"2024-02-15"},{"lineNumber":109,"author":{"gitId":"GERARDJM018"},"content":"     * @param ui Ui for printing string.","lastModifiedDate":"2024-02-15"},{"lineNumber":110,"author":{"gitId":"GERARDJM018"},"content":"     * @param st Storage for saving/loading in file.","lastModifiedDate":"2024-02-15"},{"lineNumber":111,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":112,"author":{"gitId":"GERARDJM018"},"content":"    public void createEvent(String[] inputs, TaskList tL, Ui ui, Storage st) throws DescriptionFormatException,","lastModifiedDate":"2024-02-15"},{"lineNumber":113,"author":{"gitId":"GERARDJM018"},"content":"            IOException {","lastModifiedDate":"2024-02-15"},{"lineNumber":114,"author":{"gitId":"GERARDJM018"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2024-02-15"},{"lineNumber":115,"author":{"gitId":"GERARDJM018"},"content":"            throw new DescriptionFormatException(\"Wrong format!, please use this format: \"","lastModifiedDate":"2024-02-15"},{"lineNumber":116,"author":{"gitId":"GERARDJM018"},"content":"                    + Event.getFormat());","lastModifiedDate":"2024-02-15"},{"lineNumber":117,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":118,"author":{"gitId":"GERARDJM018"},"content":"        String[] name \u003d com.split(\"event \");","lastModifiedDate":"2024-02-15"},{"lineNumber":119,"author":{"gitId":"GERARDJM018"},"content":"        String[] desFromTo \u003d name[1].split(\" /from \");","lastModifiedDate":"2024-02-15"},{"lineNumber":120,"author":{"gitId":"GERARDJM018"},"content":"        String[] fromTo \u003d desFromTo[1].split(\" /to \");","lastModifiedDate":"2024-02-15"},{"lineNumber":121,"author":{"gitId":"GERARDJM018"},"content":"        if (desFromTo.length !\u003d 2 || fromTo.length !\u003d 2) {","lastModifiedDate":"2024-02-15"},{"lineNumber":122,"author":{"gitId":"GERARDJM018"},"content":"            throw new DescriptionFormatException(\"Wrong format!, please use this format: \"","lastModifiedDate":"2024-02-15"},{"lineNumber":123,"author":{"gitId":"GERARDJM018"},"content":"                    + Event.getFormat());","lastModifiedDate":"2024-02-15"},{"lineNumber":124,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":125,"author":{"gitId":"GERARDJM018"},"content":"        LocalDateTime ldtF \u003d LocalDateTime.parse(fromTo[0], DATE_FORMAT_INP);","lastModifiedDate":"2024-02-15"},{"lineNumber":126,"author":{"gitId":"GERARDJM018"},"content":"        LocalDateTime ldtT \u003d LocalDateTime.parse(fromTo[1], DATE_FORMAT_INP);","lastModifiedDate":"2024-02-15"},{"lineNumber":127,"author":{"gitId":"GERARDJM018"},"content":"        String out \u003d tL.addTask(new Event(desFromTo[0], ldtF, ldtT));","lastModifiedDate":"2024-02-15"},{"lineNumber":128,"author":{"gitId":"GERARDJM018"},"content":"        ui.showMessage(out);","lastModifiedDate":"2024-02-15"},{"lineNumber":129,"author":{"gitId":"GERARDJM018"},"content":"        st.write(tL.getList());","lastModifiedDate":"2024-02-15"},{"lineNumber":130,"author":{"gitId":"GERARDJM018"},"content":"        setOut(out);","lastModifiedDate":"2024-02-15"},{"lineNumber":131,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-15"},{"lineNumber":132,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-15"},{"lineNumber":133,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-15"},{"lineNumber":134,"author":{"gitId":"GERARDJM018"},"content":"     * Create new Deadline task and add it to the task list.","lastModifiedDate":"2024-02-15"},{"lineNumber":135,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-15"},{"lineNumber":136,"author":{"gitId":"GERARDJM018"},"content":"     * @param inputs string array of the input.","lastModifiedDate":"2024-02-15"},{"lineNumber":137,"author":{"gitId":"GERARDJM018"},"content":"     * @param tL TaskList for executing command.","lastModifiedDate":"2024-02-15"},{"lineNumber":138,"author":{"gitId":"GERARDJM018"},"content":"     * @param ui Ui for printing string.","lastModifiedDate":"2024-02-15"},{"lineNumber":139,"author":{"gitId":"GERARDJM018"},"content":"     * @param st Storage for saving/loading in file.","lastModifiedDate":"2024-02-15"},{"lineNumber":140,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-15"},{"lineNumber":141,"author":{"gitId":"GERARDJM018"},"content":"    public void createDeadline(String[] inputs, TaskList tL, Ui ui, Storage st) throws DescriptionFormatException,","lastModifiedDate":"2024-02-15"},{"lineNumber":142,"author":{"gitId":"GERARDJM018"},"content":"            IOException {","lastModifiedDate":"2024-02-15"},{"lineNumber":143,"author":{"gitId":"GERARDJM018"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"GERARDJM018"},"content":"            throw new DescriptionFormatException(\"Wrong format!, please use this format: \"","lastModifiedDate":"2024-01-31"},{"lineNumber":145,"author":{"gitId":"GERARDJM018"},"content":"                    + Deadline.getFormat());","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-02-15"},{"lineNumber":147,"author":{"gitId":"GERARDJM018"},"content":"        String[] name \u003d com.split(\"deadline \");","lastModifiedDate":"2024-02-15"},{"lineNumber":148,"author":{"gitId":"GERARDJM018"},"content":"        String[] desBy \u003d name[1].split(\" /by \");","lastModifiedDate":"2024-01-31"},{"lineNumber":149,"author":{"gitId":"GERARDJM018"},"content":"        if (desBy.length !\u003d 2) {","lastModifiedDate":"2024-01-31"},{"lineNumber":150,"author":{"gitId":"GERARDJM018"},"content":"            throw new DescriptionFormatException(\"Wrong format!, please use this format: \"","lastModifiedDate":"2024-01-31"},{"lineNumber":151,"author":{"gitId":"GERARDJM018"},"content":"                    + Deadline.getFormat());","lastModifiedDate":"2024-01-31"},{"lineNumber":152,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":153,"author":{"gitId":"GERARDJM018"},"content":"        LocalDateTime ldt \u003d LocalDateTime.parse(desBy[1], DATE_FORMAT_INP);","lastModifiedDate":"2024-02-02"},{"lineNumber":154,"author":{"gitId":"GERARDJM018"},"content":"        String out \u003d tL.addTask(new Deadline(desBy[0], ldt));","lastModifiedDate":"2024-02-02"},{"lineNumber":155,"author":{"gitId":"GERARDJM018"},"content":"        ui.showMessage(out);","lastModifiedDate":"2024-01-31"},{"lineNumber":156,"author":{"gitId":"GERARDJM018"},"content":"        st.write(tL.getList());","lastModifiedDate":"2024-02-02"},{"lineNumber":157,"author":{"gitId":"GERARDJM018"},"content":"        setOut(out);","lastModifiedDate":"2024-02-09"},{"lineNumber":158,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":159,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"GERARDJM018":159}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":" * Class for \"bye\" command.","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":" *","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"     * Constructor for ByeCommand.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"    public ByeCommand() {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"        super(1);","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"    public void execute(TaskList tL, Ui ui, Storage st) {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"        ui.showBye();","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"        setOut(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"GERARDJM018":26}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":" * Abstact class for command.","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":" *","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"public abstract class Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"    private String out;","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"    private boolean isExit;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"     * Constructor for Command.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"     * @param i exit status in int format.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"    public Command(int i) {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"        if (i \u003d\u003d 1) {","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"            isExit \u003d true;","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"        } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"            isExit \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"     * Executes the command using TaskList,","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"     * Ui, and Storage given.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"     * @param tL TaskList for executing command.","lastModifiedDate":"2024-02-08"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"     * @param ui Ui for printing string.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"     * @param st Storage for saving/loading in file.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"    public abstract void execute(TaskList tL, Ui ui, Storage st);","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"     * Returns exit status in boolean format.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"     * @return boolean for exit status","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"        return isExit;","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"    public void setOut(String s) {","lastModifiedDate":"2024-02-09"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"        out \u003d s;","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"    public String getOut() {","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"        return out;","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"GERARDJM018":52}},{"path":"src/main/java/duke/command/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":" * Enum for all valid commands.","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":" *","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"public enum Commands {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":"    LIST, TODO, EVENT, DEADLINE, MARK, UNMARK, DELETE, BYE, FIND;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"GERARDJM018":9}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":"import duke.exception.CommandFormatException;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":" * Class for \"delete\" command.","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":" *","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"    private String com;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"     * @param i command in String format.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"    public DeleteCommand(String i) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"        super(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"        com \u003d i;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"    public void execute(TaskList tL, Ui ui, Storage st) {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"        int noArr;","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"        String[] inputs \u003d com.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"        assert inputs.length \u003e 0;","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"            if (!(inputs.length \u003d\u003d 2)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"                throw new CommandFormatException();","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"            noArr \u003d Integer.parseInt(inputs[1]) - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"            String out \u003d tL.delete(noArr);","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"            ui.showMessage(out);","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"            st.write(tL.getList());","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"            setOut(out);","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"            ui.showMessage(\"No task number \" + inputs[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"            setOut(\"No task number \" + inputs[1]);","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"            ui.showMessage(\"The task number given is not a number\");","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"            setOut(\"The task number given is not a number\");","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"        } catch (CommandFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"            ui.showMessage(\"The command format for delete is delete number (e.g.: delete 1)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"            setOut(\"The command format for delete is delete number (e.g.: delete 1)\");","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"            ui.showMessage(\"Save failed\");","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"GERARDJM018"},"content":"            setOut(\"Save failed\");","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"GERARDJM018"},"content":"     * Returns command in String format.","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"GERARDJM018"},"content":"     * @return command in String format.","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"GERARDJM018"},"content":"    public String getCom() {","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"GERARDJM018"},"content":"        return com;","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"GERARDJM018":66}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke.command;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"import duke.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"import duke.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"import duke.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"import duke.exception.CommandFormatException;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":" * Class for \"find\" command.","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":" *","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"    private String com;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"     * Constructor for FindCommand.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"     * @param com the given command","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"    public FindCommand(String com) {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"        super(0);","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"        this.com \u003d com;","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"    public void execute(TaskList tL, Ui ui, Storage st) {","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"        String[] inputs \u003d com.split(\" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"        assert inputs.length \u003e 0;","lastModifiedDate":"2024-02-15"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"            if (!(inputs.length \u003d\u003d 2)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"                throw new CommandFormatException();","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"            String key \u003d inputs[1];","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"            String out \u003d tL.findList(key);","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"            ui.showMessage(out);","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"            setOut(out);","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"        } catch (CommandFormatException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"            ui.showMessage(\"The command format for find is find \u0027key\u0027 (e.g.: find book)\");","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"            setOut(\"The command format for find is find \u0027key\u0027 (e.g.: find book)\");","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"     * returns the command initialised in","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"     * this instance of FindCommand.","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"     * @return the command initialised.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"    public String getCom() {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"        return com;","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"GERARDJM018":53}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":" * Class for \"list\" command.","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":" *","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"     * Constructor for ListCommand.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"    public ListCommand() {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"        super(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"    public void execute(TaskList tL, Ui ui, Storage st) {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"        String out \u003d tL.showList();","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"        ui.showMessage(out);","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"        setOut(out);","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"GERARDJM018":27}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":"import duke.exception.CommandFormatException;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":" * Class for \"mark\" command.","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":" *","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"    private String com;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"     * Constructor for MarkCommand.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"     * @param i command in String format.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"    public MarkCommand(String i) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"        super(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"        com \u003d i;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"    public void execute(TaskList tL, Ui ui, Storage st) {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"        int noArr;","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"        String[] inputs \u003d com.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"        assert inputs.length \u003e 0;","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"            if (!(inputs.length \u003d\u003d 2)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"                throw new CommandFormatException();","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"            noArr \u003d Integer.parseInt(inputs[1]) - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"            String out \u003d tL.mark(noArr);","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"            ui.showMessage(out);","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"            st.write(tL.getList());","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"            setOut(out);","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"            ui.showMessage(\"No task number \" + inputs[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"            setOut(\"No task number \" + inputs[1]);","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"            ui.showMessage(\"The task number given is not a number\");","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"            setOut(\"The task number given is not a number\");","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"        } catch (CommandFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"            ui.showMessage(\"The command format for mark is mark number (e.g.: mark 1)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"            setOut(\"The command format for mark is mark number (e.g.: mark 1)\");","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"            ui.showMessage(\"Save failed\");","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"GERARDJM018"},"content":"            setOut(\"Save failed\");","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"GERARDJM018"},"content":"     * Returns command in String format.","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"GERARDJM018"},"content":"     * @return command in String format.","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"GERARDJM018"},"content":"    public String getCom() {","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"GERARDJM018"},"content":"        return com;","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"GERARDJM018":65}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke.command;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"import duke.Storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"import duke.TaskList;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"import duke.Ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":"import duke.exception.CommandFormatException;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":" * Class for \"unmark\" command.","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":" *","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"    private String com;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"     * Constructor for UnmarkCommand.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"     * @param i command in String format.","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"    public UnmarkCommand(String i) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"        super(0);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"        com \u003d i;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"    public void execute(TaskList tL, Ui ui, Storage st) {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"        int noArr;","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"        String[] inputs \u003d com.split(\" \");","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"        assert inputs.length \u003e 0;","lastModifiedDate":"2024-02-15"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"            if (!(inputs.length \u003d\u003d 2)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"                throw new CommandFormatException();","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"            noArr \u003d Integer.parseInt(inputs[1]) - 1;","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"            String out \u003d tL.unMark(noArr);","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"            ui.showMessage(out);","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"            st.write(tL.getList());","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"            setOut(out);","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"            ui.showMessage(\"No task number \" + inputs[1]);","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"            setOut(\"No task number \" + inputs[1]);","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"            ui.showMessage(\"The task number given is not a number\");","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"            setOut(\"The task number given is not a number\");","lastModifiedDate":"2024-02-09"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"        } catch (CommandFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"            ui.showMessage(\"The command format for unmark is unmark number (e.g.: unmark 1)\");","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"            setOut(\"The command format for unmark is unmark number (e.g.: unmark 1)\");","lastModifiedDate":"2024-02-09"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"            ui.showMessage(\"Save failed\");","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"GERARDJM018"},"content":"            setOut(\"Save failed\");","lastModifiedDate":"2024-02-09"},{"lineNumber":54,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"GERARDJM018"},"content":"     * Returns command in String format.","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"GERARDJM018"},"content":"     * @return command in String format.","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"GERARDJM018"},"content":"    public String getCom() {","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"GERARDJM018"},"content":"        return com;","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"GERARDJM018":66}},{"path":"src/main/java/duke/exception/CommandFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke.exception;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":" * Exception used when command format is wrong.","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":" *","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":"public class CommandFormatException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"     * Constructor for CommandFormatException.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"    public CommandFormatException() {","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"        super();","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"GERARDJM018":18}},{"path":"src/main/java/duke/exception/CommandInvalidException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke.exception;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":" * Exception used when command is invalid.","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":" *","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"public class CommandInvalidException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"     * Constructor for CommandInvalidException.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"    public CommandInvalidException(String e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"        super(e);","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"GERARDJM018":16}},{"path":"src/main/java/duke/exception/DescriptionFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke.exception;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":" * Exception used when description format is wrong.","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":" *","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"public class DescriptionFormatException extends Exception {","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"     * Constructor for DescriptionFormatException.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"     * @param e error message.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"    public DescriptionFormatException(String e) {","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"        super(e);","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"GERARDJM018":17}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":" * Class for task type deadline.","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":" *","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"    private static final String SYMBOL \u003d \"D\";","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"    private static final DateTimeFormatter DATE_FORMAT_INP \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027 \u0027HH:mm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"    private static final DateTimeFormatter DATE_FORMAT_OUT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"     * This constructor will be used when given","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"     * description and date as the parameter.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"     * @param des description for the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"     * @param dl deadline date.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"    public Deadline(String des, LocalDateTime dl) {","lastModifiedDate":"2024-01-29"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"        super(des);","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"        deadline \u003d dl;","lastModifiedDate":"2024-01-24"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"     * This constructor will be used when given","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"     * mark status, description, and date as the parameter.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"     * @param st mark status","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"     * @param des description for the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"     * @param dl deadline date.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"    public Deadline(String st, String des, LocalDateTime dl) {","lastModifiedDate":"2024-01-29"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"        super(des);","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"        deadline \u003d dl;","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"        if (st.equals(\"true\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"            setMark();","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"            setUnMark();","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"     * Returns symbol for Deadline with String format.","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"     * @return symbol for Deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"GERARDJM018"},"content":"    public String getSymbol() { //method to get symbol","lastModifiedDate":"2024-01-25"},{"lineNumber":54,"author":{"gitId":"GERARDJM018"},"content":"        return SYMBOL;","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":56,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"GERARDJM018"},"content":"     * Returns string representative of Deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"GERARDJM018"},"content":"     * The string consist of symbol, mark status,","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"GERARDJM018"},"content":"     * description, and deadline date.","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"GERARDJM018"},"content":"     * @return String representative of Deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"GERARDJM018"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"GERARDJM018"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"GERARDJM018"},"content":"        String s \u003d \"[\" + this.getSymbol() + \"][\" + this.getStatusIcon() + \"] \" + this.description","lastModifiedDate":"2024-01-24"},{"lineNumber":67,"author":{"gitId":"GERARDJM018"},"content":"                + \" (by: \" + this.deadline.format(DATE_FORMAT_OUT) + \")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"GERARDJM018"},"content":"        return s;","lastModifiedDate":"2024-01-24"},{"lineNumber":69,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":70,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"GERARDJM018"},"content":"     * Returns string representative of Deadline for the write format.","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"GERARDJM018"},"content":"     * The string consist of symbol, mark status,","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"GERARDJM018"},"content":"     * description, and deadline date.","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"GERARDJM018"},"content":"     * @return String representative of Deadline in write format.","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"GERARDJM018"},"content":"    public String toWrite() {","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"GERARDJM018"},"content":"        String s \u003d this.getSymbol() + \"/\" + this.isDone + \"/\" + this.description","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"GERARDJM018"},"content":"                + \"/\" + this.deadline.format(DATE_FORMAT_INP);","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"GERARDJM018"},"content":"        return s;","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":84,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"GERARDJM018"},"content":"     * Returns format for deadline command in","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"GERARDJM018"},"content":"     * string format.","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"GERARDJM018"},"content":"     * @return format for deadline command.","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"GERARDJM018"},"content":"    public static String getFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":91,"author":{"gitId":"GERARDJM018"},"content":"        return \"deadline Description /by \" + \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2024-01-29"},{"lineNumber":92,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":93,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":94,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":95,"author":{"gitId":"GERARDJM018"},"content":"     * Check whether the deadline instance date","lastModifiedDate":"2024-02-16"},{"lineNumber":96,"author":{"gitId":"GERARDJM018"},"content":"     * is equal to other deadline instance date.","lastModifiedDate":"2024-02-16"},{"lineNumber":97,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":98,"author":{"gitId":"GERARDJM018"},"content":"     * @param task Deadline instance to be checked.","lastModifiedDate":"2024-02-16"},{"lineNumber":99,"author":{"gitId":"GERARDJM018"},"content":"     * @return boolean result of the check.","lastModifiedDate":"2024-02-16"},{"lineNumber":100,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":101,"author":{"gitId":"GERARDJM018"},"content":"    public boolean isEqualDeadline(Deadline task) {","lastModifiedDate":"2024-02-16"},{"lineNumber":102,"author":{"gitId":"GERARDJM018"},"content":"        return deadline.equals(task.deadline);","lastModifiedDate":"2024-02-16"},{"lineNumber":103,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":104,"author":{"gitId":"GERARDJM018"},"content":"    @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":105,"author":{"gitId":"GERARDJM018"},"content":"    public boolean isEqual(Task task) {","lastModifiedDate":"2024-02-16"},{"lineNumber":106,"author":{"gitId":"GERARDJM018"},"content":"        if (!(task instanceof Deadline)) {","lastModifiedDate":"2024-02-16"},{"lineNumber":107,"author":{"gitId":"GERARDJM018"},"content":"            return false;","lastModifiedDate":"2024-02-16"},{"lineNumber":108,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":109,"author":{"gitId":"GERARDJM018"},"content":"        boolean isEqualDesc \u003d description.equals(task.description);","lastModifiedDate":"2024-02-16"},{"lineNumber":110,"author":{"gitId":"GERARDJM018"},"content":"        boolean isEqualDl \u003d isEqualDeadline((Deadline) task);","lastModifiedDate":"2024-02-16"},{"lineNumber":111,"author":{"gitId":"GERARDJM018"},"content":"        return isEqualDl \u0026\u0026 isEqualDesc;","lastModifiedDate":"2024-02-16"},{"lineNumber":112,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":113,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"GERARDJM018":113}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":" * Class for task type event.","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":" *","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"    private static final String SYMBOL \u003d \"E\";","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"    private static final DateTimeFormatter DATE_FORMAT_INP \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027 \u0027HH:mm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"    private static final DateTimeFormatter DATE_FORMAT_OUT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-01-29"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-01-29"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"     * Constructor for Event.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"     * This constructor will be used when given","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"     * description, starting time, and","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"     * finishing time as the parameter.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"     * @param des description for the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"     * @param f starting time.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"     * @param t finishing time","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"    public Event(String des, LocalDateTime f, LocalDateTime t) {","lastModifiedDate":"2024-01-29"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"        super(des);","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"        from \u003d f;","lastModifiedDate":"2024-01-24"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"        to \u003d t;","lastModifiedDate":"2024-01-24"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"     * Constructor for Event.","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"     * This constructor will be used when given","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"     * mark status, description, starting time, and","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"     * finishing time as the parameter.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"     * @param st mark status","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"     * @param des description for the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"     * @param f starting time.","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"     * @param t finishing time","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"    public Event(String st, String des, LocalDateTime f, LocalDateTime t) {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"        super(des);","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"        from \u003d f;","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"        to \u003d t;","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"        if (st.equals(\"true\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"            setMark();","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"            setUnMark();","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"     * Returns symbol for Event with String format.","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"GERARDJM018"},"content":"     * @return symbol for Event.","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"GERARDJM018"},"content":"    public String getSymbol() {","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"GERARDJM018"},"content":"        return SYMBOL;","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"GERARDJM018"},"content":"     * Returns string representative of Event.","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"GERARDJM018"},"content":"     * The string consist of symbol, mark status,","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"GERARDJM018"},"content":"     * description, starting time and finishing time.","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"GERARDJM018"},"content":"     * @return String representative of Deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"GERARDJM018"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"GERARDJM018"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"GERARDJM018"},"content":"        String s \u003d \"[\" + this.getSymbol() + \"][\" + this.getStatusIcon() + \"] \" + this.description","lastModifiedDate":"2024-01-24"},{"lineNumber":75,"author":{"gitId":"GERARDJM018"},"content":"                + \" (from: \" + this.from.format(DATE_FORMAT_OUT) + \" to: \" + this.to.format(DATE_FORMAT_OUT) + \")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"GERARDJM018"},"content":"        return s;","lastModifiedDate":"2024-01-24"},{"lineNumber":77,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":78,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"GERARDJM018"},"content":"     * Returns string representative of Event for the write format..","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"GERARDJM018"},"content":"     * The string consist of symbol, mark status,","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"GERARDJM018"},"content":"     * description, starting time and finishing time.","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"GERARDJM018"},"content":"     * @return String representative of Deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"GERARDJM018"},"content":"    public String toWrite() {","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"GERARDJM018"},"content":"        String s \u003d this.getSymbol() + \"/\" + this.isDone + \"/\" + this.description","lastModifiedDate":"2024-01-28"},{"lineNumber":88,"author":{"gitId":"GERARDJM018"},"content":"                + \"/\" + this.from.format(DATE_FORMAT_INP) + \"/\" + this.to.format(DATE_FORMAT_INP);","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"GERARDJM018"},"content":"        return s;","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"GERARDJM018"},"content":"     * Returns format for event command in","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"GERARDJM018"},"content":"     * string format.","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"GERARDJM018"},"content":"     * @return format for event command.","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"GERARDJM018"},"content":"    public static String getFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":99,"author":{"gitId":"GERARDJM018"},"content":"        return \"event Description /from \" + \"yyyy-MM-dd HH:mm\" + \" /to \" + \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2024-01-29"},{"lineNumber":100,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":101,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":102,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":103,"author":{"gitId":"GERARDJM018"},"content":"     * Check whether the event instance date","lastModifiedDate":"2024-02-16"},{"lineNumber":104,"author":{"gitId":"GERARDJM018"},"content":"     * is equal to other event instance date.","lastModifiedDate":"2024-02-16"},{"lineNumber":105,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":106,"author":{"gitId":"GERARDJM018"},"content":"     * @param task Event instance to be checked.","lastModifiedDate":"2024-02-16"},{"lineNumber":107,"author":{"gitId":"GERARDJM018"},"content":"     * @return boolean result of the check.","lastModifiedDate":"2024-02-16"},{"lineNumber":108,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":109,"author":{"gitId":"GERARDJM018"},"content":"    public boolean isEqualDate(Event task) {","lastModifiedDate":"2024-02-16"},{"lineNumber":110,"author":{"gitId":"GERARDJM018"},"content":"        boolean isEqualFrom \u003d from.equals(task.from);","lastModifiedDate":"2024-02-16"},{"lineNumber":111,"author":{"gitId":"GERARDJM018"},"content":"        boolean isEqualTo \u003d to.equals(task.to);","lastModifiedDate":"2024-02-16"},{"lineNumber":112,"author":{"gitId":"GERARDJM018"},"content":"        return isEqualTo \u0026\u0026 isEqualFrom;","lastModifiedDate":"2024-02-16"},{"lineNumber":113,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":114,"author":{"gitId":"GERARDJM018"},"content":"    @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":115,"author":{"gitId":"GERARDJM018"},"content":"    public boolean isEqual(Task task) {","lastModifiedDate":"2024-02-16"},{"lineNumber":116,"author":{"gitId":"GERARDJM018"},"content":"        if (!(task instanceof Event)) {","lastModifiedDate":"2024-02-16"},{"lineNumber":117,"author":{"gitId":"GERARDJM018"},"content":"            return false;","lastModifiedDate":"2024-02-16"},{"lineNumber":118,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":119,"author":{"gitId":"GERARDJM018"},"content":"        boolean isEqualDesc \u003d description.equals(task.description);","lastModifiedDate":"2024-02-16"},{"lineNumber":120,"author":{"gitId":"GERARDJM018"},"content":"        boolean isEqualDt \u003d isEqualDate((Event) task);","lastModifiedDate":"2024-02-16"},{"lineNumber":121,"author":{"gitId":"GERARDJM018"},"content":"        return isEqualDt \u0026\u0026 isEqualDesc;","lastModifiedDate":"2024-02-16"},{"lineNumber":122,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":123,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"GERARDJM018":123}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":" * Class for basic task.","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":" *","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"public class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":"    protected String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"     * Constructor for Task.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"     * @param description description for the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"     * Returns mark status in String format.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"     * @return mark status","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"     * Marks the mark status.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"    public void setMark() {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"     * Unmarks the mark status.","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"    public void setUnMark() {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"     * Returns true if the key given is contained in","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"     * the description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"     * @param key the string key need to be contained.","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"     * @return a boolean whether the key is contained.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"GERARDJM018"},"content":"    public boolean hasFind(String key) {","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"GERARDJM018"},"content":"        if (description.contains(key)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"            return true;","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"GERARDJM018"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"            return false;","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"GERARDJM018"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"GERARDJM018"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"GERARDJM018"},"content":"        String s \u003d \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-24"},{"lineNumber":63,"author":{"gitId":"GERARDJM018"},"content":"        return s;","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":66,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"GERARDJM018"},"content":"     * Returns string representative of Task with write format.","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"GERARDJM018"},"content":"     * The string consist of symbol, mark status,","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"GERARDJM018"},"content":"     * description, and deadline date.","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"GERARDJM018"},"content":"     * @return String representative of Task.","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"GERARDJM018"},"content":"    public String toWrite() {","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"GERARDJM018"},"content":"        String s \u003d this.getStatusIcon() + \" | \" + this.description;","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"GERARDJM018"},"content":"        return s;","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":78,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-16"},{"lineNumber":79,"author":{"gitId":"GERARDJM018"},"content":"     * Check whether the task instance","lastModifiedDate":"2024-02-16"},{"lineNumber":80,"author":{"gitId":"GERARDJM018"},"content":"     * is equal to other task instance.","lastModifiedDate":"2024-02-16"},{"lineNumber":81,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-16"},{"lineNumber":82,"author":{"gitId":"GERARDJM018"},"content":"     * @param task Task instance to be checked.","lastModifiedDate":"2024-02-16"},{"lineNumber":83,"author":{"gitId":"GERARDJM018"},"content":"     * @return boolean result of the check.","lastModifiedDate":"2024-02-16"},{"lineNumber":84,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-16"},{"lineNumber":85,"author":{"gitId":"GERARDJM018"},"content":"    public boolean isEqual(Task task) {","lastModifiedDate":"2024-02-16"},{"lineNumber":86,"author":{"gitId":"GERARDJM018"},"content":"        return description.equals(description);","lastModifiedDate":"2024-02-16"},{"lineNumber":87,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":88,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"GERARDJM018":88}},{"path":"src/main/java/duke/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":" * Class for task type deadline.","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":" *","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"public class ToDos extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"    private static final String SYMBOL \u003d \"T\";","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"     * Constructor for ToDos.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"     * This constructor will be used when given","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"     * description as the parameter.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"     * @param des description for the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"    public ToDos(String des) {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"        super(des);","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"     * Constructor for ToDos.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"     * This constructor will be used when given","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"     * mark status and description as the parameter.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"     * @param st mark status","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"     * @param des description for the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"    public ToDos(String st, String des) {","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"        super(des);","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"        if (st.equals(\"true\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"            setMark();","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"        } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"            setUnMark();","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"     * Returns symbol for ToDos with String format.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"     * @return symbol for ToDos.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"    public String getSymbol() { //method to get symbol","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"        return SYMBOL;","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"     * Returns string representative of ToDos.","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"     * The string consist of symbol, mark status,","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"     * and description.","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"GERARDJM018"},"content":"     * @return String representative of Deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"GERARDJM018"},"content":"    @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"GERARDJM018"},"content":"        String s \u003d \"[\" + this.getSymbol() + \"][\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-24"},{"lineNumber":59,"author":{"gitId":"GERARDJM018"},"content":"        return s;","lastModifiedDate":"2024-01-24"},{"lineNumber":60,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":61,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"GERARDJM018"},"content":"     * Returns string representative of ToDos for the write format.","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"GERARDJM018"},"content":"     * The string consist of symbol, mark status,","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"GERARDJM018"},"content":"     * and description.","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"GERARDJM018"},"content":"     * @return String representative of Deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"GERARDJM018"},"content":"    public String toWrite() {","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"GERARDJM018"},"content":"        String s \u003d this.getSymbol() + \"/\" + this.isDone + \"/\" + this.description;","lastModifiedDate":"2024-01-28"},{"lineNumber":71,"author":{"gitId":"GERARDJM018"},"content":"        return s;","lastModifiedDate":"2024-01-28"},{"lineNumber":72,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":73,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"GERARDJM018"},"content":"     * Returns format for todos command in","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"GERARDJM018"},"content":"     * string format.","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"GERARDJM018"},"content":"     * @return format for todos command.","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"GERARDJM018"},"content":"    public static String getFormat() {","lastModifiedDate":"2024-01-29"},{"lineNumber":81,"author":{"gitId":"GERARDJM018"},"content":"        return \"todo Description\";","lastModifiedDate":"2024-01-29"},{"lineNumber":82,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":83,"author":{"gitId":"GERARDJM018"},"content":"    @Override","lastModifiedDate":"2024-02-16"},{"lineNumber":84,"author":{"gitId":"GERARDJM018"},"content":"    public boolean isEqual(Task task) {","lastModifiedDate":"2024-02-16"},{"lineNumber":85,"author":{"gitId":"GERARDJM018"},"content":"        if (!(task instanceof ToDos)) {","lastModifiedDate":"2024-02-16"},{"lineNumber":86,"author":{"gitId":"GERARDJM018"},"content":"            return false;","lastModifiedDate":"2024-02-16"},{"lineNumber":87,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-02-16"},{"lineNumber":88,"author":{"gitId":"GERARDJM018"},"content":"        return description.equals(task.description);","lastModifiedDate":"2024-02-16"},{"lineNumber":89,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":90,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"GERARDJM018":90}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"156.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-border-color: black;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"      \u003cScrollPane prefHeight\u003d\"200.0\" prefWidth\u003d\"282.0\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"              \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" prefHeight\u003d\"576.0\" prefWidth\u003d\"579.0\" style\u003d\"-fx-label-padding: 2;\" text\u003d\"Label\" textOverrun\u003d\"WORD_ELLIPSIS\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"         \u003c/content\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"      \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"      \u003cSeparator orientation\u003d\"VERTICAL\" prefHeight\u003d\"37.0\" prefWidth\u003d\"4.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"      \u003cStackPane prefHeight\u003d\"81.0\" prefWidth\u003d\"108.0\" style\u003d\"-fx-border-radius: 0.5; -fx-border-color: black;\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"              \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"108.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"         \u003c/children\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"            \u003cInsets bottom\u003d\"1.0\" left\u003d\"1.0\" right\u003d\"1.0\" top\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"      \u003c/StackPane\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"GERARDJM018":31}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"\u003cAnchorPane prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"GERARDJM018":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"import duke.command.Command;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2024-02-08"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"import duke.exception.CommandInvalidException;","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"    private String dummyCommandA \u003d \"todo return book\";","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"    private String dummyCommandB \u003d \"list\";","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"    private String dummyCommandC \u003d \"mark 1\";","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"    private String dummyCommandD \u003d \"unmark 1\";","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"    private String dummyCommandE \u003d \"delete 1\";","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"    private String dummyCommandF \u003d \"bye\";","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"    private String dummyCommandG \u003d \"bwah\";","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"     * Tests Parser to be able to parse","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"     * every available commands.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"    public void parse_success() throws CommandInvalidException {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"        AddCommand expectedA \u003d new AddCommand(dummyCommandA);","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"        AddCommand cA \u003d (AddCommand) Parser.parse(dummyCommandA);","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"        assertEquals(expectedA.getCom(), cA.getCom());","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"        Command expectedB \u003d new ListCommand();","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"        Command cB \u003d Parser.parse(dummyCommandB);","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"        assertEquals(expectedB.isExit(), cB.isExit());","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"        MarkCommand expectedC \u003d new MarkCommand(dummyCommandC);","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"        MarkCommand cC \u003d (MarkCommand) Parser.parse(dummyCommandC);","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"        assertEquals(expectedC.getCom(), cC.getCom());","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"        UnmarkCommand expectedD \u003d new UnmarkCommand(dummyCommandD);","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"        UnmarkCommand cD \u003d (UnmarkCommand) Parser.parse(dummyCommandD);","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"GERARDJM018"},"content":"        assertEquals(expectedD.getCom(), cD.getCom());","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"        DeleteCommand expectedE \u003d new DeleteCommand(dummyCommandE);","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"GERARDJM018"},"content":"        DeleteCommand cE \u003d (DeleteCommand) Parser.parse(dummyCommandE);","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"GERARDJM018"},"content":"        assertEquals(expectedE.getCom(), cE.getCom());","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"GERARDJM018"},"content":"        Command expectedF \u003d new ByeCommand();","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"GERARDJM018"},"content":"        Command cF \u003d Parser.parse(dummyCommandF);","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"GERARDJM018"},"content":"        assertEquals(expectedF.isExit(), cF.isExit());","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"GERARDJM018"},"content":"     * Tests whether the exception for the","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"GERARDJM018"},"content":"     * parser is thrown when given invalid command.","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"GERARDJM018"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"GERARDJM018"},"content":"    public void parse_exception() {","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"GERARDJM018"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"GERARDJM018"},"content":"            assertEquals(new ListCommand(), Parser.parse(dummyCommandG));","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"GERARDJM018"},"content":"            fail();","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"GERARDJM018"},"content":"        } catch (CommandInvalidException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"GERARDJM018"},"content":"            assertEquals(\"Invalid command -_-, please use the available commands!!\", e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"GERARDJM018":83}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-08"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"import duke.task.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"import duke.task.ToDos;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"public class TaskListTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"     * Tests whether addTask able to","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"     * perform as expected.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"    public void addTask_success() {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"        TaskList TaskL \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"        Task dummyTaskA \u003d new ToDos(\"first\");","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"        String a \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"        String b \u003d dummyTaskA.toString() + \"\\n\";","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"        String c \u003d \"Now you have 1 tasks in the list.\";","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"        String expected \u003d a + b + c;","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"        assertEquals(expected, TaskL.addTask(dummyTaskA) );","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"     * Tests whether getList able to","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"     * perform as expected.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"    public void getList_success() {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"        TaskList TaskL \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"        ArrayList\u003cTask\u003e expected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"        Task dummyTaskA \u003d new ToDos(\"first\");","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"        TaskL.addTask(dummyTaskA);","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"        expected.add(dummyTaskA);","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"        assertEquals(expected.get(0), TaskL.getList().get(0));","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"GERARDJM018":45}},{"path":"src/test/java/duke/task/ToDosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"package duke.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"public class ToDosTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":"    private ToDos t \u003d new ToDos(\"return book\");","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"     * Tests whether the string given is","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"     * same as the expected value.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"    public void stringTest() {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"        assertEquals(\"[T][ ] return book\", t.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"     * Tests whether the string given is","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"     * same as the expected value.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"    public void writeTest() {","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"        assertEquals(\"T/false/return book\", t.toWrite());","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"GERARDJM018":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"todo read book","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"mark 1","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"mark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"unmark 2","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"list","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"mark 5","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"unmark a","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"GERARDJM018":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"GERARDJM018":1}}]
