[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"doyelee0313"},"content":"# Doye task manager","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"doyelee0313"},"content":"## welcome to Doye task manager","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"doyelee0313"},"content":"### Doye will help your task managing skill","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"doyelee0313"},"content":"**Do you ...**","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"doyelee0313"},"content":"- want to manage tasks?","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"doyelee0313"},"content":"- want to set deadline for tasks?","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"doyelee0313"},"content":"- want to write down your events?","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"doyelee0313"},"content":"- ~~procrastinate?~~","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"doyelee0313"},"content":"These are some functions provided:","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"doyelee0313"},"content":"1. welcoming message","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"doyelee0313"},"content":"2. add task/deadline/event","lastModifiedDate":"2024-02-07"},{"lineNumber":14,"author":{"gitId":"doyelee0313"},"content":"3. delete task/deadline/event","lastModifiedDate":"2024-02-07"},{"lineNumber":15,"author":{"gitId":"doyelee0313"},"content":"4. mark as done/undone","lastModifiedDate":"2024-02-07"},{"lineNumber":16,"author":{"gitId":"doyelee0313"},"content":"5. write/save tasks","lastModifiedDate":"2024-02-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"doyelee0313"},"content":"Some basic commands are:","lastModifiedDate":"2024-02-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"doyelee0313"},"content":"task reading","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"doyelee0313"},"content":"deadline return book /by 2/12/2019 1800","lastModifiedDate":"2024-02-07"},{"lineNumber":22,"author":{"gitId":"doyelee0313"},"content":"event festival /from 2/12/2019 1800 /to 2/12/2019 2000","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":25,"author":{"gitId":"doyelee0313"},"content":"\u003e [!CAUTION]","lastModifiedDate":"2024-02-07"},{"lineNumber":26,"author":{"gitId":"doyelee0313"},"content":"\u003e _command should be written in correct format, or it will have some errors _","lastModifiedDate":"2024-02-07"},{"lineNumber":27,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":28,"author":{"gitId":"doyelee0313"},"content":"these are some features that are built/buidling:","lastModifiedDate":"2024-02-07"},{"lineNumber":29,"author":{"gitId":"doyelee0313"},"content":"- [x] basic add/delete/saving/writing/marking functions","lastModifiedDate":"2024-02-07"},{"lineNumber":30,"author":{"gitId":"doyelee0313"},"content":"- [ ] making a friendly user guide","lastModifiedDate":"2024-02-07"},{"lineNumber":31,"author":{"gitId":"doyelee0313"},"content":"- [ ] build fancy UI/UX for the app :tada:","lastModifiedDate":"2024-02-07"},{"lineNumber":32,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":33,"author":{"gitId":"doyelee0313"},"content":"This site was built using [GitHub Pages](https://pages.github.com/).","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"doyelee0313":27,"-":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"doyelee0313"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"doyelee0313":1,"-":42}},{"path":"src/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"doyelee0313"},"content":"todo read","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"doyelee0313"},"content":"bye","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"doyelee0313":2}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doyelee0313"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"doyelee0313"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"doyelee0313"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"doyelee0313"},"content":" * The Deadline class represents a task with a deadline.","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"doyelee0313"},"content":" * It has information about the deadline and it is a subclass of the Task class.","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"doyelee0313"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"doyelee0313"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"doyelee0313"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"doyelee0313"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"doyelee0313"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"doyelee0313"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"doyelee0313"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"doyelee0313"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"doyelee0313"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"doyelee0313"},"content":"     * Returns a string format of the Deadline object.","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"doyelee0313"},"content":"     * @return A string representation of the Deadline object.","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"doyelee0313"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"doyelee0313"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"doyelee0313"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"doyelee0313"},"content":"}","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"doyelee0313":33}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doyelee0313"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"doyelee0313"},"content":"import java.util.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"doyelee0313"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"doyelee0313"},"content":"     * The main method for the Duke program.","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"doyelee0313"},"content":"     * Reads user commands and actions until the user enters \"bye\"","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"doyelee0313"},"content":"     * @param args The command-line","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"doyelee0313"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"doyelee0313"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"doyelee0313"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"doyelee0313"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"doyelee0313"},"content":"     * Constructs a Duke instance.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"doyelee0313"},"content":"     * @param filePath The file path for storing and saving the data.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"doyelee0313"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"doyelee0313"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"doyelee0313"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"doyelee0313"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"doyelee0313"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"doyelee0313"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"doyelee0313"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"doyelee0313"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"doyelee0313"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"doyelee0313"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"doyelee0313"},"content":"     * Runs the Duke program according to the user command line.","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"doyelee0313"},"content":"    public void run() {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"doyelee0313"},"content":"        ui.welcome();","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"doyelee0313"},"content":"        while(true) {","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"doyelee0313"},"content":"            Scanner sc \u003d new Scanner(System.in);        ","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"doyelee0313"},"content":"            String order \u003d sc.nextLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"doyelee0313"},"content":"            String[] orders \u003d order.split(\" \"); ","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"doyelee0313"},"content":"            if (orders[0].equals(\"bye\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"doyelee0313"},"content":"                ui.bye();","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"doyelee0313"},"content":"                System.exit(0);","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"doyelee0313"},"content":"            } else if (orders[0].equals(\"list\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"doyelee0313"},"content":"                ui.list(tasks.getTasks());","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"doyelee0313"},"content":"            } else if (orders[0].equals(\"unmark\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"doyelee0313"},"content":"                try {","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"doyelee0313"},"content":"                    int number \u003d parser.parseUnmark(order, tasks.getSize());","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"doyelee0313"},"content":"                    tasks.unmark(number);","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"doyelee0313"},"content":"                    ui.unmark(tasks.getTask(number));","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"doyelee0313"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"doyelee0313"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"doyelee0313"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":56,"author":{"gitId":"doyelee0313"},"content":"            } else if (orders[0].equals(\"mark\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"doyelee0313"},"content":"                try {","lastModifiedDate":"2024-01-24"},{"lineNumber":58,"author":{"gitId":"doyelee0313"},"content":"                    int number \u003d parser.parseMark(order, tasks.getSize());","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"doyelee0313"},"content":"                    tasks.mark(number);","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"doyelee0313"},"content":"                    ui.mark(tasks.getTask(number));","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"doyelee0313"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"doyelee0313"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"doyelee0313"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"doyelee0313"},"content":"            } else if (orders[0].equals(\"todo\")) {  ","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"doyelee0313"},"content":"                try {","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"doyelee0313"},"content":"                    Task task \u003d parser.parseTodo(order);","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"doyelee0313"},"content":"                    tasks.addTask(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"doyelee0313"},"content":"                    ui.addedMessage(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"doyelee0313"},"content":"                    ui.totalTask(tasks.getSize());","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"doyelee0313"},"content":"                    storage.save(tasks.getTasks());","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"doyelee0313"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":72,"author":{"gitId":"doyelee0313"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-01-24"},{"lineNumber":73,"author":{"gitId":"doyelee0313"},"content":"                }","lastModifiedDate":"2024-01-24"},{"lineNumber":74,"author":{"gitId":"doyelee0313"},"content":"            } else if (orders[0].equals(\"deadline\")) {  ","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"doyelee0313"},"content":"                try {","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"doyelee0313"},"content":"                    Task task \u003d parser.parseDeadline(order);","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"doyelee0313"},"content":"                    tasks.addTask(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"doyelee0313"},"content":"                    ui.addedMessage(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"doyelee0313"},"content":"                    ui.totalTask(tasks.getSize());","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"doyelee0313"},"content":"                    storage.save(tasks.getTasks());","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"doyelee0313"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"doyelee0313"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"doyelee0313"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"doyelee0313"},"content":"            } else if (orders[0].equals(\"event\")) {  ","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"doyelee0313"},"content":"                try {","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"doyelee0313"},"content":"                    Task task \u003d parser.parseEvent(order);","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"doyelee0313"},"content":"                    tasks.addTask(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"doyelee0313"},"content":"                    ui.addedMessage(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"doyelee0313"},"content":"                    ui.totalTask(tasks.getSize());","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"doyelee0313"},"content":"                    storage.save(tasks.getTasks());","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"doyelee0313"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"doyelee0313"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"doyelee0313"},"content":"                }","lastModifiedDate":"2024-01-22"},{"lineNumber":94,"author":{"gitId":"doyelee0313"},"content":"            } else if (orders[0].equals(\"delete\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"doyelee0313"},"content":"                try {","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"doyelee0313"},"content":"                    int number \u003d parser.parseDelete(order, tasks.getSize());","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"doyelee0313"},"content":"                    ui.deletedMessage(tasks.getTask(number));","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"doyelee0313"},"content":"                    tasks.deleteTask(number);","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"doyelee0313"},"content":"                    ui.totalTask(tasks.getSize());","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"doyelee0313"},"content":"                    storage.save(tasks.getTasks());","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"doyelee0313"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"doyelee0313"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2019-07-29"},{"lineNumber":104,"author":{"gitId":"doyelee0313"},"content":"            } else if (orders[0].equals(\"find\")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"doyelee0313"},"content":"                try {","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"doyelee0313"},"content":"                    String word \u003d parser.parseFind(order);","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"doyelee0313"},"content":"                    TaskList newtasks \u003d new TaskList(tasks.findTasks(word));","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"doyelee0313"},"content":"                    ui.findList(newtasks.getTasks());","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"doyelee0313"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"doyelee0313"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"doyelee0313"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"doyelee0313"},"content":"            } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"doyelee0313"},"content":"                ui.dontUnderstand();","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-07-29"},{"lineNumber":115,"author":{"gitId":"doyelee0313"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"doyelee0313"},"content":"    ","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"doyelee0313"},"content":"     * The entry point(the file path) for the program. ","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"doyelee0313"},"content":"     * @param args The command-line arguments.","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"doyelee0313"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"doyelee0313"},"content":"        new Duke(\"/Users/leedoye/ip/src/data/duke_tasks.txt\").run();","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"doyelee0313"},"content":"}","lastModifiedDate":"2024-01-23"},{"lineNumber":127,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":128,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":129,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":130,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"doyelee0313":127,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doyelee0313"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"doyelee0313"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"doyelee0313"},"content":" * DukeException is a custom exception class for errors.","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"doyelee0313"},"content":" * It extends the Exception class and prints a message for each error case.","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"doyelee0313"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"doyelee0313"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"doyelee0313"},"content":"     * sends the error message according to the error type","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"doyelee0313"},"content":"     * @param message The error message about the exception","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"doyelee0313"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"doyelee0313"},"content":"        super(message);","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"doyelee0313"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"doyelee0313":15}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doyelee0313"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"doyelee0313"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"doyelee0313"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"doyelee0313"},"content":" * The Event class represents a event, starting date and ending date.","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"doyelee0313"},"content":" * It has information about the event and it is a subclass of the Task class.","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"doyelee0313"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":8,"author":{"gitId":"doyelee0313"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"doyelee0313"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"doyelee0313"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"doyelee0313"},"content":"     * Constructor for Event class.","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"doyelee0313"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"doyelee0313"},"content":"     * @param from The starting date or time of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"doyelee0313"},"content":"     * @param to The ending date or time of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"doyelee0313"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"doyelee0313"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"doyelee0313"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"doyelee0313"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"doyelee0313"},"content":"     * Returns a string format of the Event object.","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":29,"author":{"gitId":"doyelee0313"},"content":"     * @return A string representation of the Event object.","lastModifiedDate":"2024-01-25"},{"lineNumber":30,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"doyelee0313"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"doyelee0313"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"doyelee0313"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \"to: \" + to + \")\";","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"doyelee0313"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"doyelee0313":35}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doyelee0313"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"doyelee0313"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"doyelee0313"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"doyelee0313"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"doyelee0313"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"doyelee0313"},"content":" * Parser class parses the user commands in Duke.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"doyelee0313"},"content":" * It throws exceptions for invalid formats and inform how to fix it.","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"doyelee0313"},"content":" *","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"doyelee0313"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"doyelee0313"},"content":"public class Parser {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"doyelee0313"},"content":"     * Constructs an empty Parser instance.","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"doyelee0313"},"content":"    public Parser() {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"doyelee0313"},"content":"     * Parses the marking command from the main class.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"doyelee0313"},"content":"     * @param order     The user command.","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"doyelee0313"},"content":"     * @param totalnum  The total number of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"doyelee0313"},"content":"     * @return The task number to mark as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"doyelee0313"},"content":"     * @throws DukeException If the command format is invalid and tell how to fix.","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"doyelee0313"},"content":"    public int parseMark(String order, int totalnum) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"doyelee0313"},"content":"        try { ","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"doyelee0313"},"content":"            String[] actions \u003d order.split(\" \"); ","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"doyelee0313"},"content":"            int markNum \u003d Integer.parseInt(actions[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"doyelee0313"},"content":"            if (actions[1].isEmpty() || markNum \u003e totalnum || markNum \u003c 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"doyelee0313"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"doyelee0313"},"content":"            } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"doyelee0313"},"content":"                int number \u003d Integer.parseInt(actions[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"doyelee0313"},"content":"                return number;","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"doyelee0313"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"doyelee0313"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"doyelee0313"},"content":"            throw new DukeException(\"write in valid/correct format: mark + [task number]\");","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"doyelee0313"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"doyelee0313"},"content":"     * Parses the deleting command from the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"doyelee0313"},"content":"     * @param order     The user command.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"doyelee0313"},"content":"     * @param totalnum  The total number of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"doyelee0313"},"content":"     * @return The task number to delete.","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"doyelee0313"},"content":"     * @throws DukeException If the command format is invalid and tell how to fix.","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"doyelee0313"},"content":"    public int parseDelete(String order, int totalnum) throws DukeException{","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"doyelee0313"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"doyelee0313"},"content":"            String[] actions \u003d order.split(\" \");","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"doyelee0313"},"content":"            int deleteNum \u003d Integer.parseInt(actions[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"doyelee0313"},"content":"            if (actions[1].isEmpty() || deleteNum \u003e totalnum || deleteNum \u003c 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"doyelee0313"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"doyelee0313"},"content":"            } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"doyelee0313"},"content":"                int number \u003d Integer.parseInt(actions[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"doyelee0313"},"content":"                return number;","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"doyelee0313"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"doyelee0313"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"doyelee0313"},"content":"            throw new DukeException(\"write in valid/correct format: delete + [task number]\");","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"doyelee0313"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"doyelee0313"},"content":"     * Parses the unmarking command from the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"doyelee0313"},"content":"     * @param order     The user command.","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"doyelee0313"},"content":"     * @param totalnum  The total number of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"doyelee0313"},"content":"     * @return The task number to unmark.","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"doyelee0313"},"content":"     * @throws DukeException If the command format is invalid and tell how to fix.","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"doyelee0313"},"content":"    public int parseUnmark(String order, int totalnum) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"doyelee0313"},"content":"        try { ","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"doyelee0313"},"content":"            String[] actions \u003d order.split(\" \"); ","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"doyelee0313"},"content":"            int unmarkNum \u003d Integer.parseInt(actions[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"doyelee0313"},"content":"            if (actions[1].isEmpty() || unmarkNum \u003e totalnum || unmarkNum \u003c 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"doyelee0313"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"doyelee0313"},"content":"            } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"doyelee0313"},"content":"                int number \u003d Integer.parseInt(actions[1]);","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"doyelee0313"},"content":"                return number;","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"doyelee0313"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"doyelee0313"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"doyelee0313"},"content":"            throw new DukeException(\"write in valid/correct format: unmark + [task number]\");","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"doyelee0313"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"doyelee0313"},"content":"        public String parseFind(String order) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"doyelee0313"},"content":"            try { ","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"doyelee0313"},"content":"                String[] actions \u003d order.split(\" \"); ","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"doyelee0313"},"content":"                String word \u003d actions[1];","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"doyelee0313"},"content":"                if (actions[1].isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"doyelee0313"},"content":"                    throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"doyelee0313"},"content":"                } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"doyelee0313"},"content":"                    return word;","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"doyelee0313"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"doyelee0313"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"doyelee0313"},"content":"                throw new DukeException(\"write in valid/correct format: find + [keyword]\");","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"doyelee0313"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"doyelee0313"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"doyelee0313"},"content":"     * Parses the todo command from the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"doyelee0313"},"content":"     * @param order The user command.","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"doyelee0313"},"content":"     * @return The created Todo task from the command.","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"doyelee0313"},"content":"     * @throws DukeException If the command format is invalid and tell how to fix.","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"doyelee0313"},"content":"    public Todo parseTodo(String order) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"doyelee0313"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"doyelee0313"},"content":"            String t \u003d order.substring(4).trim();","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"doyelee0313"},"content":"            if (t.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"doyelee0313"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"doyelee0313"},"content":"            } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"doyelee0313"},"content":"                Todo todo \u003d new Todo(t);","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"doyelee0313"},"content":"                return todo;","lastModifiedDate":"2024-02-03"},{"lineNumber":118,"author":{"gitId":"doyelee0313"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"doyelee0313"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"doyelee0313"},"content":"            throw new DukeException(\"write in the correct format: todo + [content]\");","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"doyelee0313"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"doyelee0313"},"content":"     * Parses the deadline command from the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"doyelee0313"},"content":"     * @param order The user command.","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"doyelee0313"},"content":"     * @return The created Deadline task from the command.","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"doyelee0313"},"content":"     * @throws DukeException If the command format is invalid and tell how to fix.","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"doyelee0313"},"content":"    public Deadline parseDeadline(String order) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"doyelee0313"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"doyelee0313"},"content":"            int byIndex \u003d order.indexOf(\"/by\");","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"doyelee0313"},"content":"            String t \u003d order.substring(9, byIndex - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"doyelee0313"},"content":"            String due \u003d order.substring(byIndex + 4);","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"doyelee0313"},"content":"            LocalDateTime dueFormat \u003d LocalDateTime.parse(due, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":138,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"doyelee0313"},"content":"            if (t.isEmpty() || due.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":140,"author":{"gitId":"doyelee0313"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-02-03"},{"lineNumber":141,"author":{"gitId":"doyelee0313"},"content":"            } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":142,"author":{"gitId":"doyelee0313"},"content":"                Deadline task \u003d new Deadline(t, dueFormat);","lastModifiedDate":"2024-02-03"},{"lineNumber":143,"author":{"gitId":"doyelee0313"},"content":"                return task;","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"doyelee0313"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"doyelee0313"},"content":"        } catch (IndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":146,"author":{"gitId":"doyelee0313"},"content":"            throw new DukeException(\"write in the correct format: deadline + [content] + /by + [duedate]\");","lastModifiedDate":"2024-02-03"},{"lineNumber":147,"author":{"gitId":"doyelee0313"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":148,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":149,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":150,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":151,"author":{"gitId":"doyelee0313"},"content":"     * Parses the event command from the user.","lastModifiedDate":"2024-02-03"},{"lineNumber":152,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":153,"author":{"gitId":"doyelee0313"},"content":"     * @param order The user command.","lastModifiedDate":"2024-02-03"},{"lineNumber":154,"author":{"gitId":"doyelee0313"},"content":"     * @return The created Event task from the command.","lastModifiedDate":"2024-02-03"},{"lineNumber":155,"author":{"gitId":"doyelee0313"},"content":"     * @throws DukeException If the command format is invalid and tell how to fix.","lastModifiedDate":"2024-02-03"},{"lineNumber":156,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":157,"author":{"gitId":"doyelee0313"},"content":"    public Event parseEvent(String order) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":158,"author":{"gitId":"doyelee0313"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":159,"author":{"gitId":"doyelee0313"},"content":"            int fromIndex \u003d order.indexOf(\"/from\");","lastModifiedDate":"2024-02-03"},{"lineNumber":160,"author":{"gitId":"doyelee0313"},"content":"            int toIndex \u003d order.indexOf(\"/to\");","lastModifiedDate":"2024-02-03"},{"lineNumber":161,"author":{"gitId":"doyelee0313"},"content":"            String t \u003d order.substring(6, fromIndex - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":162,"author":{"gitId":"doyelee0313"},"content":"            String from \u003d order.substring(fromIndex + 6, toIndex - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":163,"author":{"gitId":"doyelee0313"},"content":"            String to \u003d order.substring(toIndex + 4);","lastModifiedDate":"2024-02-03"},{"lineNumber":164,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":165,"author":{"gitId":"doyelee0313"},"content":"            LocalDateTime fromFormat \u003d LocalDateTime.parse(from, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":166,"author":{"gitId":"doyelee0313"},"content":"            LocalDateTime toFormat \u003d LocalDateTime.parse(to, DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":167,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":168,"author":{"gitId":"doyelee0313"},"content":"            if (t.isEmpty() || from.isEmpty() || to.isEmpty()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":169,"author":{"gitId":"doyelee0313"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-02-03"},{"lineNumber":170,"author":{"gitId":"doyelee0313"},"content":"            } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":171,"author":{"gitId":"doyelee0313"},"content":"                Event event \u003d new Event(t, fromFormat, toFormat);","lastModifiedDate":"2024-02-03"},{"lineNumber":172,"author":{"gitId":"doyelee0313"},"content":"                return event;","lastModifiedDate":"2024-02-03"},{"lineNumber":173,"author":{"gitId":"doyelee0313"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":174,"author":{"gitId":"doyelee0313"},"content":"        } catch (IndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":175,"author":{"gitId":"doyelee0313"},"content":"            throw new DukeException(\"\\\"write in the correct format: event + [content] + /from + [startingdate] + /to + [enddate]\");","lastModifiedDate":"2024-02-03"},{"lineNumber":176,"author":{"gitId":"doyelee0313"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":177,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":178,"author":{"gitId":"doyelee0313"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"doyelee0313":178}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doyelee0313"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"doyelee0313"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"doyelee0313"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"doyelee0313"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"doyelee0313"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"doyelee0313"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"doyelee0313"},"content":"import java.util.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"doyelee0313"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"doyelee0313"},"content":" * Storage class load and save the task from a file.","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"doyelee0313"},"content":" * It provides methods to read and write the tasks","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"doyelee0313"},"content":" *","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"doyelee0313"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"doyelee0313"},"content":"public class Storage {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"doyelee0313"},"content":"    private String filePath \u003d \"/Users/leedoye/ip/src/data/duke_tasks.txt\";","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"doyelee0313"},"content":"     * Constructs a Storage instance with a specified file path.","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"doyelee0313"},"content":"     * @param filePath The path to the file for storing tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"doyelee0313"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"doyelee0313"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"doyelee0313"},"content":"     * Loads tasks from the filepath.","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"doyelee0313"},"content":"     * @return The list of tasks loaded from the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"doyelee0313"},"content":"     * @throws DukeException If there is an error loading tasks from storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"doyelee0313"},"content":"    public List\u003cTask\u003e load() throws DukeException{","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"doyelee0313"},"content":"        try (ObjectInputStream intput \u003d new ObjectInputStream(new FileInputStream(\"filePath\"))) {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"doyelee0313"},"content":"            return (List\u003cTask\u003e) intput.readObject();","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"doyelee0313"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"doyelee0313"},"content":"            System.out.println(\"No existing tasks or file.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"doyelee0313"},"content":"            throw new DukeException(\"Error loading tasks from storage\");","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"doyelee0313"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"doyelee0313"},"content":"     * Saves tasks from the filepath.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"doyelee0313"},"content":"     * @return The list of tasks saved from the file.","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"doyelee0313"},"content":"     * @throws DukeException If there is an error saving tasks from storage.","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"doyelee0313"},"content":"    public void save(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"doyelee0313"},"content":"        try (ObjectOutputStream output \u003d new ObjectOutputStream(new FileOutputStream(\"filePath\"))) {","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"doyelee0313"},"content":"            output.writeObject(tasks);","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"doyelee0313"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"doyelee0313"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"doyelee0313"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"doyelee0313"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"doyelee0313":54}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doyelee0313"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"doyelee0313"},"content":"import java.io.Serializable;","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"doyelee0313"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"doyelee0313"},"content":" * The Task class contains the task with a description and a status.","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"doyelee0313"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":7,"author":{"gitId":"doyelee0313"},"content":"public class Task implements Serializable{","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"doyelee0313"},"content":"    protected String description;","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"doyelee0313"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":11,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"doyelee0313"},"content":"     * Constructs a new Task with the description.","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":14,"author":{"gitId":"doyelee0313"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":15,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"doyelee0313"},"content":"    public Task(String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"doyelee0313"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"doyelee0313"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"doyelee0313"},"content":"     * Gets the status icon representing the completion status of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"doyelee0313"},"content":"     * @return A string containing \"X\" if the task is done, or a space if the task is not done.","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"doyelee0313"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"doyelee0313"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"doyelee0313"},"content":"     * Mark the task as done.","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"doyelee0313"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"doyelee0313"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":38,"author":{"gitId":"doyelee0313"},"content":"     * Unmark the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":39,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"doyelee0313"},"content":"    public void markAsUnDone() {","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"doyelee0313"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"doyelee0313"},"content":"     * Returns a string of the Task.","lastModifiedDate":"2024-01-25"},{"lineNumber":46,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"doyelee0313"},"content":"     * @return A string representation of the Task object.","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"doyelee0313"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"doyelee0313"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"doyelee0313"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"doyelee0313":52}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doyelee0313"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"doyelee0313"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"doyelee0313"},"content":"import java.util.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"doyelee0313"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"doyelee0313"},"content":" * TaskList class is the list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"doyelee0313"},"content":" * It provides methods to manipulate the tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"doyelee0313"},"content":" *","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"doyelee0313"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"doyelee0313"},"content":"public class TaskList {","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"doyelee0313"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"doyelee0313"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"doyelee0313"},"content":"     * Constructs a TaskList instance.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"doyelee0313"},"content":"     * @param tasks The list of tasks to initialize the TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"doyelee0313"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"doyelee0313"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"doyelee0313"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"doyelee0313"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"doyelee0313"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"doyelee0313"},"content":"     * Gets the list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"doyelee0313"},"content":"     * @return The list of tasks.","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"doyelee0313"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"doyelee0313"},"content":"        return tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"doyelee0313"},"content":"     * Adds a task to the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"doyelee0313"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"doyelee0313"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"doyelee0313"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"doyelee0313"},"content":"     * Deletes a task from the list by its number.","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"doyelee0313"},"content":"     * @param number The number of the task to be deleted.","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"doyelee0313"},"content":"    public void deleteTask(int number) {","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"doyelee0313"},"content":"        tasks.remove(number - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"doyelee0313"},"content":"     * Gets the number of tasks in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"doyelee0313"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"doyelee0313"},"content":"    public int getSize() {","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"doyelee0313"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"doyelee0313"},"content":"     * Gets a task from the list by its number.","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"doyelee0313"},"content":"     * @param number The number of the task to be received.","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"doyelee0313"},"content":"     * @return The task corresponding to the number.","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"doyelee0313"},"content":"    public Task getTask(int number) {","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"doyelee0313"},"content":"        return tasks.get(number - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"doyelee0313"},"content":"     * Unmarks a task.","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"doyelee0313"},"content":"     * @param number The number of the task to be unmarked.","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"doyelee0313"},"content":"    public void unmark(int number) {","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"doyelee0313"},"content":"        Task t \u003d tasks.get(number - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"doyelee0313"},"content":"        t.markAsUnDone();","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"doyelee0313"},"content":"     * Marks a task as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"doyelee0313"},"content":"     * @param number The number of the task to be marked as done.","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"doyelee0313"},"content":"    public void mark(int number) {","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"doyelee0313"},"content":"        Task t \u003d tasks.get(number - 1);","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"doyelee0313"},"content":"        t.markAsDone();","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"doyelee0313"},"content":"    } ","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"doyelee0313"},"content":"    public List\u003cTask\u003e findTasks(String word) {","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"doyelee0313"},"content":"        List\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"doyelee0313"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"doyelee0313"},"content":"            if (task.toString().contains(word)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"doyelee0313"},"content":"                foundTasks.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"doyelee0313"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"doyelee0313"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"doyelee0313"},"content":"    ","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"doyelee0313"},"content":"        return foundTasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"doyelee0313"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"doyelee0313":108}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doyelee0313"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"doyelee0313"},"content":"/**","lastModifiedDate":"2024-01-25"},{"lineNumber":3,"author":{"gitId":"doyelee0313"},"content":" * The Todo class represents a task.","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"doyelee0313"},"content":" * It has description about the task and it is a subclass of the Task class.","lastModifiedDate":"2024-01-25"},{"lineNumber":5,"author":{"gitId":"doyelee0313"},"content":" */","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"doyelee0313"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":9,"author":{"gitId":"doyelee0313"},"content":"     * Constructor for Todo class.","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":11,"author":{"gitId":"doyelee0313"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-01-25"},{"lineNumber":12,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":13,"author":{"gitId":"doyelee0313"},"content":"    public Todo (String description) {","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"doyelee0313"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"doyelee0313"},"content":"    /**","lastModifiedDate":"2024-01-25"},{"lineNumber":18,"author":{"gitId":"doyelee0313"},"content":"     * Returns a string format of the Event object.","lastModifiedDate":"2024-01-25"},{"lineNumber":19,"author":{"gitId":"doyelee0313"},"content":"     *","lastModifiedDate":"2024-01-25"},{"lineNumber":20,"author":{"gitId":"doyelee0313"},"content":"     * @return A string representation of the Event object.","lastModifiedDate":"2024-01-25"},{"lineNumber":21,"author":{"gitId":"doyelee0313"},"content":"     */","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"doyelee0313"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"doyelee0313"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"doyelee0313"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"doyelee0313"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"doyelee0313":26}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doyelee0313"},"content":"package duke;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"doyelee0313"},"content":"import java.util.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"doyelee0313"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":4,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"doyelee0313"},"content":"public class Ui {","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"doyelee0313"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"doyelee0313"},"content":"    public Ui() {","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"doyelee0313"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"doyelee0313"},"content":"    public String readCommand() {","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"doyelee0313"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"doyelee0313"},"content":"    public void printLine() {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"doyelee0313"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"doyelee0313"},"content":"    public void welcome() {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"doyelee0313"},"content":"        printLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"doyelee0313"},"content":"        System.out.println(\"Hello! I\u0027m Doye\\n\" + \"What can I do for you?\");","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"doyelee0313"},"content":"        printLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":25,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":26,"author":{"gitId":"doyelee0313"},"content":"    public void bye() {","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"doyelee0313"},"content":"        printLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"doyelee0313"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"doyelee0313"},"content":"        printLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"doyelee0313"},"content":"        ","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"doyelee0313"},"content":"    public void list(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"doyelee0313"},"content":"        printLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"doyelee0313"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"doyelee0313"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"doyelee0313"},"content":"            Task addTask \u003d tasks.get(i);","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"doyelee0313"},"content":"            System.out.println((i + 1) + \".\" + addTask.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"doyelee0313"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"doyelee0313"},"content":"        printLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"doyelee0313"},"content":"    public void findList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"doyelee0313"},"content":"        printLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"doyelee0313"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"doyelee0313"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"doyelee0313"},"content":"            Task addTask \u003d tasks.get(i);","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"doyelee0313"},"content":"            System.out.println((i + 1) + \".\" + addTask.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"doyelee0313"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"doyelee0313"},"content":"        printLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"doyelee0313"},"content":"    public void unmark(Task t) {","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"doyelee0313"},"content":"        printLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"doyelee0313"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"doyelee0313"},"content":"        System.out.println(t.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"doyelee0313"},"content":"        printLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"doyelee0313"},"content":"    public void mark(Task t) {","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"doyelee0313"},"content":"        printLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"doyelee0313"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"doyelee0313"},"content":"        System.out.println(t.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"doyelee0313"},"content":"        printLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"doyelee0313"},"content":"    public void showError(DukeException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"doyelee0313"},"content":"        printLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"doyelee0313"},"content":"        System.out.println(\"OOPS!!! \" + e.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"doyelee0313"},"content":"        printLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"doyelee0313"},"content":"    public void dontUnderstand() {","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"doyelee0313"},"content":"        printLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"doyelee0313"},"content":"        System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"doyelee0313"},"content":"        printLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"doyelee0313"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"doyelee0313"},"content":"        printLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"doyelee0313"},"content":"        System.out.println(\"loading error\");","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"doyelee0313"},"content":"        printLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"doyelee0313"},"content":"    public void addedMessage(Task task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"doyelee0313"},"content":"        printLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"doyelee0313"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"doyelee0313"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"doyelee0313"},"content":"    public void deletedMessage(Task task) {","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"doyelee0313"},"content":"        printLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"doyelee0313"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"doyelee0313"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"doyelee0313"},"content":"    public void totalTask(int count) {","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"doyelee0313"},"content":"        System.out.println(\"Now you have \" + count + \" tasks in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"doyelee0313"},"content":"        printLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"doyelee0313"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"doyelee0313":101}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doyelee0313"},"content":"package duke;  //same package as the class being tested","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"doyelee0313"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"doyelee0313"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"doyelee0313"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"doyelee0313"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"doyelee0313"},"content":"    public void parseTodo(String order) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"doyelee0313"},"content":"        String command \u003d \"todo reading\";","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"doyelee0313"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"doyelee0313"},"content":"        assertEquals(new Todo(\"reading\"), parser.parseTodo(command));","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"doyelee0313"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"doyelee0313"},"content":"    public void parseDeadline(String order) throws DukeException {","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"doyelee0313"},"content":"        String command \u003d \"deadline return book /by 2/12/2019 1800\";","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"doyelee0313"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"doyelee0313"},"content":"        assertEquals(new Todo(\"deadline return book /by 2/12/2019 1800\"), parser.parseTodo(command));","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"doyelee0313"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"doyelee0313":22}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"doyelee0313"},"content":"package duke;  //same package as the class being tested","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"doyelee0313"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"doyelee0313"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"doyelee0313"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"doyelee0313"},"content":"public class TodoTest {","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"doyelee0313"},"content":"    @Test","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"doyelee0313"},"content":"    public void toStringTest(){","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"doyelee0313"},"content":"        Todo todo \u003d new Todo(\"read\");","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"doyelee0313"},"content":"        assertEquals(\"[T][ ] read\", todo.toString());","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"doyelee0313"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"doyelee0313"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"doyelee0313":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"doyelee0313"},"content":"todo borrow book","lastModifiedDate":"2024-01-24"},{"lineNumber":2,"author":{"gitId":"doyelee0313"},"content":"bye","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"doyelee0313":2}},{"path":"src/data/duke_tasks.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"doyelee0313":0}}]
