[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"myang2020"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-02-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-07"},{"lineNumber":59,"author":{"gitId":"myang2020"},"content":"checkstyle {","lastModifiedDate":"2024-02-07"},{"lineNumber":60,"author":{"gitId":"myang2020"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-07"},{"lineNumber":61,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"-":41,"myang2020":20}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"todo eat","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"todo help","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"deadline return book /by 2/12/2019 1800","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"myang2020":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"# Dwight User Guide","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"# Address Book CLI Readme","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"Welcome to the Address Book CLI repository! This command-line interface (CLI) allows you to manage your address book efficiently. Below are the commands and their respective formats that you can use:","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"## View tasks : list","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"Lists out all tasks entered by user","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"Format: `list`","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"## Mark task : mark","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"Marks tasks as done.","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"Format: `mark INDEX`","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"Examples:","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"- `mark 1`","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"## Unmark task : unmark","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"myang2020"},"content":"Unmarks task as done.","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"myang2020"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2024-02-29"},{"lineNumber":47,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":48,"author":{"gitId":"myang2020"},"content":"Examples:","lastModifiedDate":"2024-02-29"},{"lineNumber":49,"author":{"gitId":"myang2020"},"content":"- `unmark 1`","lastModifiedDate":"2024-02-29"},{"lineNumber":50,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":51,"author":{"gitId":"myang2020"},"content":"## Find tasks by keyword: find","lastModifiedDate":"2024-02-29"},{"lineNumber":52,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":53,"author":{"gitId":"myang2020"},"content":"Finds tasks whose names contain any of the given keywords.","lastModifiedDate":"2024-02-29"},{"lineNumber":54,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":55,"author":{"gitId":"myang2020"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2024-02-29"},{"lineNumber":56,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":57,"author":{"gitId":"myang2020"},"content":"The search is case-insensitive. e.g hans will match Hans.","lastModifiedDate":"2024-02-29"},{"lineNumber":58,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":59,"author":{"gitId":"myang2020"},"content":"Only full words will be matched e.g. Han will not match Hans.","lastModifiedDate":"2024-02-29"},{"lineNumber":60,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":61,"author":{"gitId":"myang2020"},"content":"Examples:","lastModifiedDate":"2024-02-29"},{"lineNumber":62,"author":{"gitId":"myang2020"},"content":"- `find eat` returns eat and eat cake.","lastModifiedDate":"2024-02-29"},{"lineNumber":63,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":64,"author":{"gitId":"myang2020"},"content":"## Deleting a task : delete","lastModifiedDate":"2024-02-29"},{"lineNumber":65,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":66,"author":{"gitId":"myang2020"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2024-02-29"},{"lineNumber":67,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":68,"author":{"gitId":"myang2020"},"content":"Format: `delete INDEX`","lastModifiedDate":"2024-02-29"},{"lineNumber":69,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":70,"author":{"gitId":"myang2020"},"content":"Deletes the task at the specified INDEX. The index refers to the index number shown in the displayed task list. The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2024-02-29"},{"lineNumber":71,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":72,"author":{"gitId":"myang2020"},"content":"Examples:","lastModifiedDate":"2024-02-29"},{"lineNumber":73,"author":{"gitId":"myang2020"},"content":"- `list` followed by `delete 2` deletes the 2nd task in the address book.","lastModifiedDate":"2024-02-29"},{"lineNumber":74,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":75,"author":{"gitId":"myang2020"},"content":"## Adds todo task : todo","lastModifiedDate":"2024-02-29"},{"lineNumber":76,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":77,"author":{"gitId":"myang2020"},"content":"Adds a todo task to the task list.","lastModifiedDate":"2024-02-29"},{"lineNumber":78,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":79,"author":{"gitId":"myang2020"},"content":"Format: `todo TASK_NAME`","lastModifiedDate":"2024-02-29"},{"lineNumber":80,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":81,"author":{"gitId":"myang2020"},"content":"Examples:","lastModifiedDate":"2024-02-29"},{"lineNumber":82,"author":{"gitId":"myang2020"},"content":"- `todo eat chicken`","lastModifiedDate":"2024-02-29"},{"lineNumber":83,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":84,"author":{"gitId":"myang2020"},"content":"## Adds deadline task : deadline","lastModifiedDate":"2024-02-29"},{"lineNumber":85,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":86,"author":{"gitId":"myang2020"},"content":"Adds a deadline task to the task list.","lastModifiedDate":"2024-02-29"},{"lineNumber":87,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":88,"author":{"gitId":"myang2020"},"content":"Format: `deadline TASK_NAME /by DD/MM/YYYY HHMM`","lastModifiedDate":"2024-02-29"},{"lineNumber":89,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":90,"author":{"gitId":"myang2020"},"content":"Examples:","lastModifiedDate":"2024-02-29"},{"lineNumber":91,"author":{"gitId":"myang2020"},"content":"- `deadline return book /by 2/12/2019 1800`","lastModifiedDate":"2024-02-29"},{"lineNumber":92,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":93,"author":{"gitId":"myang2020"},"content":"## Adds event task : event","lastModifiedDate":"2024-02-29"},{"lineNumber":94,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":95,"author":{"gitId":"myang2020"},"content":"Adds an event task to the task list.","lastModifiedDate":"2024-02-29"},{"lineNumber":96,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":97,"author":{"gitId":"myang2020"},"content":"Format: `event TASK_NAME /from START_TIME /to END_TIME`","lastModifiedDate":"2024-02-29"},{"lineNumber":98,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":99,"author":{"gitId":"myang2020"},"content":"Examples:","lastModifiedDate":"2024-02-29"},{"lineNumber":100,"author":{"gitId":"myang2020"},"content":"- `event project meeting /from Mon 2pm /to 4pm`","lastModifiedDate":"2024-02-29"},{"lineNumber":101,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":102,"author":{"gitId":"myang2020"},"content":"## Exiting the program : bye","lastModifiedDate":"2024-02-29"},{"lineNumber":103,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":104,"author":{"gitId":"myang2020"},"content":"Exits the program.","lastModifiedDate":"2024-02-29"},{"lineNumber":105,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":106,"author":{"gitId":"myang2020"},"content":"Format: `bye`","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"-":25,"myang2020":81}},{"path":"src/main/java/dwight/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package dwight;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-12"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-12"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"    private Label text;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"        text \u003d l;","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"        text.setWrapText(true);","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2024-02-12"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-12"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"    private void flip() {","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2024-02-12"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2024-02-12"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2024-02-12"},{"lineNumber":44,"author":{"gitId":"myang2020"},"content":"        db.flip();","lastModifiedDate":"2024-02-12"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"        return db;","lastModifiedDate":"2024-02-12"},{"lineNumber":46,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":47,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"myang2020":47}},{"path":"src/main/java/dwight/Dwight.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package dwight;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import dwight.exceptions.DukeException;","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import dwight.task.Task;","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import dwight.util.Parser;","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"import dwight.util.Storage;","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"import dwight.task.TaskList;","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"import dwight.util.Ui;","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-12"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-12"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-12"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-12"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-12"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-02-12"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-12"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-12"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-12"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-12"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-12"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"public class Dwight extends Application {","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"    private TaskList todo;","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"    private final Ui ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-12"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-12"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-12"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-12"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"    private Scene scene;","lastModifiedDate":"2024-02-12"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/Dwight_Schrute.jpeg\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/Michael_Scott.png\"));","lastModifiedDate":"2024-02-12"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"    // Duke Constructor","lastModifiedDate":"2024-02-05"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"    public Dwight() {","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"        storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2024-02-12"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"        try {","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"myang2020"},"content":"            todo \u003d new TaskList(storage.readFile());","lastModifiedDate":"2024-02-04"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"myang2020"},"content":"            ui.showLoadingError();","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"myang2020"},"content":"            todo \u003d new TaskList();","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":52,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-02-12"},{"lineNumber":53,"author":{"gitId":"myang2020"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-12"},{"lineNumber":54,"author":{"gitId":"myang2020"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2024-02-12"},{"lineNumber":55,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":56,"author":{"gitId":"myang2020"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2024-02-12"},{"lineNumber":57,"author":{"gitId":"myang2020"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-02-12"},{"lineNumber":58,"author":{"gitId":"myang2020"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2024-02-12"},{"lineNumber":59,"author":{"gitId":"myang2020"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-02-12"},{"lineNumber":60,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":61,"author":{"gitId":"myang2020"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2024-02-12"},{"lineNumber":62,"author":{"gitId":"myang2020"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-02-12"},{"lineNumber":63,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":64,"author":{"gitId":"myang2020"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2024-02-12"},{"lineNumber":65,"author":{"gitId":"myang2020"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2024-02-12"},{"lineNumber":66,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":67,"author":{"gitId":"myang2020"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-02-12"},{"lineNumber":68,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":69,"author":{"gitId":"myang2020"},"content":"        // Step 2.","lastModifiedDate":"2024-02-12"},{"lineNumber":70,"author":{"gitId":"myang2020"},"content":"        stage.setTitle(\"Dwight\");","lastModifiedDate":"2024-02-29"},{"lineNumber":71,"author":{"gitId":"myang2020"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-02-12"},{"lineNumber":72,"author":{"gitId":"myang2020"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2024-02-12"},{"lineNumber":73,"author":{"gitId":"myang2020"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2024-02-12"},{"lineNumber":74,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":75,"author":{"gitId":"myang2020"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2024-02-12"},{"lineNumber":76,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":77,"author":{"gitId":"myang2020"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2024-02-12"},{"lineNumber":78,"author":{"gitId":"myang2020"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-02-12"},{"lineNumber":79,"author":{"gitId":"myang2020"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-02-12"},{"lineNumber":80,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":81,"author":{"gitId":"myang2020"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-02-12"},{"lineNumber":82,"author":{"gitId":"myang2020"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-02-12"},{"lineNumber":83,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":84,"author":{"gitId":"myang2020"},"content":"        //You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2024-02-12"},{"lineNumber":85,"author":{"gitId":"myang2020"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-02-12"},{"lineNumber":86,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":87,"author":{"gitId":"myang2020"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2024-02-12"},{"lineNumber":88,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":89,"author":{"gitId":"myang2020"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-02-12"},{"lineNumber":90,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":91,"author":{"gitId":"myang2020"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-02-12"},{"lineNumber":92,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":93,"author":{"gitId":"myang2020"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-12"},{"lineNumber":94,"author":{"gitId":"myang2020"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-02-12"},{"lineNumber":95,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":96,"author":{"gitId":"myang2020"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2024-02-12"},{"lineNumber":97,"author":{"gitId":"myang2020"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-02-12"},{"lineNumber":98,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":99,"author":{"gitId":"myang2020"},"content":"        // Step 3.","lastModifiedDate":"2024-02-12"},{"lineNumber":100,"author":{"gitId":"myang2020"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2024-02-12"},{"lineNumber":101,"author":{"gitId":"myang2020"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-12"},{"lineNumber":102,"author":{"gitId":"myang2020"},"content":"        });","lastModifiedDate":"2024-02-12"},{"lineNumber":103,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":104,"author":{"gitId":"myang2020"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2024-02-12"},{"lineNumber":105,"author":{"gitId":"myang2020"},"content":"            handleUserInput();","lastModifiedDate":"2024-02-12"},{"lineNumber":106,"author":{"gitId":"myang2020"},"content":"        });","lastModifiedDate":"2024-02-12"},{"lineNumber":107,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":108,"author":{"gitId":"myang2020"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2024-02-12"},{"lineNumber":109,"author":{"gitId":"myang2020"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2024-02-12"},{"lineNumber":110,"author":{"gitId":"myang2020"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-02-12"},{"lineNumber":111,"author":{"gitId":"myang2020"},"content":"        stage.show();","lastModifiedDate":"2024-02-12"},{"lineNumber":112,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":113,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":114,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":115,"author":{"gitId":"myang2020"},"content":"     * Iteration 1:","lastModifiedDate":"2024-02-12"},{"lineNumber":116,"author":{"gitId":"myang2020"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2024-02-12"},{"lineNumber":117,"author":{"gitId":"myang2020"},"content":"     * @param text String containing text to add","lastModifiedDate":"2024-02-12"},{"lineNumber":118,"author":{"gitId":"myang2020"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2024-02-12"},{"lineNumber":119,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":120,"author":{"gitId":"myang2020"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2024-02-12"},{"lineNumber":121,"author":{"gitId":"myang2020"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2024-02-12"},{"lineNumber":122,"author":{"gitId":"myang2020"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2024-02-12"},{"lineNumber":123,"author":{"gitId":"myang2020"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2024-02-12"},{"lineNumber":124,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":125,"author":{"gitId":"myang2020"},"content":"        return textToAdd;","lastModifiedDate":"2024-02-12"},{"lineNumber":126,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":127,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":128,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":129,"author":{"gitId":"myang2020"},"content":"     * Iteration 2:","lastModifiedDate":"2024-02-12"},{"lineNumber":130,"author":{"gitId":"myang2020"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2024-02-12"},{"lineNumber":131,"author":{"gitId":"myang2020"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-12"},{"lineNumber":132,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":133,"author":{"gitId":"myang2020"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-12"},{"lineNumber":134,"author":{"gitId":"myang2020"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2024-02-12"},{"lineNumber":135,"author":{"gitId":"myang2020"},"content":"        String responseString \u003d getResponse(userInput.getText());","lastModifiedDate":"2024-02-12"},{"lineNumber":136,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":137,"author":{"gitId":"myang2020"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-12"},{"lineNumber":138,"author":{"gitId":"myang2020"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2024-02-12"},{"lineNumber":139,"author":{"gitId":"myang2020"},"content":"                DialogBox.getDukeDialog(new Label(responseString), new ImageView(duke))","lastModifiedDate":"2024-02-12"},{"lineNumber":140,"author":{"gitId":"myang2020"},"content":"        );","lastModifiedDate":"2024-02-12"},{"lineNumber":141,"author":{"gitId":"myang2020"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-12"},{"lineNumber":142,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":143,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":144,"author":{"gitId":"myang2020"},"content":"    private StringBuilder handleMark(int idx) {","lastModifiedDate":"2024-02-29"},{"lineNumber":145,"author":{"gitId":"myang2020"},"content":"        Task task;","lastModifiedDate":"2024-02-29"},{"lineNumber":146,"author":{"gitId":"myang2020"},"content":"        StringBuilder responseString \u003d new StringBuilder();","lastModifiedDate":"2024-02-29"},{"lineNumber":147,"author":{"gitId":"myang2020"},"content":"        task \u003d todo.mark(idx);","lastModifiedDate":"2024-02-29"},{"lineNumber":148,"author":{"gitId":"myang2020"},"content":"        responseString.append(\"\\tNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-29"},{"lineNumber":149,"author":{"gitId":"myang2020"},"content":"        responseString.append(String.format(\"\\t\\t%s\\n\", task));","lastModifiedDate":"2024-02-29"},{"lineNumber":150,"author":{"gitId":"myang2020"},"content":"        return responseString;","lastModifiedDate":"2024-02-29"},{"lineNumber":151,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":152,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":153,"author":{"gitId":"myang2020"},"content":"    private StringBuilder handleUnmark(int idx) {","lastModifiedDate":"2024-02-29"},{"lineNumber":154,"author":{"gitId":"myang2020"},"content":"        Task task;","lastModifiedDate":"2024-02-29"},{"lineNumber":155,"author":{"gitId":"myang2020"},"content":"        StringBuilder responseString \u003d new StringBuilder();","lastModifiedDate":"2024-02-29"},{"lineNumber":156,"author":{"gitId":"myang2020"},"content":"        task \u003d todo.unmark(idx);","lastModifiedDate":"2024-02-29"},{"lineNumber":157,"author":{"gitId":"myang2020"},"content":"        responseString.append(\"\\tI\u0027ve unmarked this task as done:\");","lastModifiedDate":"2024-02-29"},{"lineNumber":158,"author":{"gitId":"myang2020"},"content":"        responseString.append(String.format(\"\\t\\t%s\\n\", task));","lastModifiedDate":"2024-02-29"},{"lineNumber":159,"author":{"gitId":"myang2020"},"content":"        return responseString;","lastModifiedDate":"2024-02-29"},{"lineNumber":160,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":161,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":162,"author":{"gitId":"myang2020"},"content":"    private StringBuilder handleTodo(Task task) {","lastModifiedDate":"2024-02-29"},{"lineNumber":163,"author":{"gitId":"myang2020"},"content":"        StringBuilder responseString \u003d new StringBuilder();","lastModifiedDate":"2024-02-29"},{"lineNumber":164,"author":{"gitId":"myang2020"},"content":"        todo.addTask(task);","lastModifiedDate":"2024-02-29"},{"lineNumber":165,"author":{"gitId":"myang2020"},"content":"        responseString.append(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-29"},{"lineNumber":166,"author":{"gitId":"myang2020"},"content":"        responseString.append(String.format(\"\\t\\t%s\\n\", task));","lastModifiedDate":"2024-02-29"},{"lineNumber":167,"author":{"gitId":"myang2020"},"content":"        responseString.append(String.format(\"\\tNow you have %d tasks in the list.\\n\", todo.size()));","lastModifiedDate":"2024-02-29"},{"lineNumber":168,"author":{"gitId":"myang2020"},"content":"        return responseString;","lastModifiedDate":"2024-02-29"},{"lineNumber":169,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":170,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":171,"author":{"gitId":"myang2020"},"content":"    private StringBuilder handleDeadline(Task task) {","lastModifiedDate":"2024-02-29"},{"lineNumber":172,"author":{"gitId":"myang2020"},"content":"        StringBuilder responseString \u003d new StringBuilder();","lastModifiedDate":"2024-02-29"},{"lineNumber":173,"author":{"gitId":"myang2020"},"content":"        todo.addTask(task);","lastModifiedDate":"2024-02-29"},{"lineNumber":174,"author":{"gitId":"myang2020"},"content":"        responseString.append(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-29"},{"lineNumber":175,"author":{"gitId":"myang2020"},"content":"        responseString.append(String.format(\"\\t\\t%s\\n\", task));","lastModifiedDate":"2024-02-29"},{"lineNumber":176,"author":{"gitId":"myang2020"},"content":"        responseString.append(String.format(\"\\tNow you have %d tasks in the list.\\n\", todo.size()));","lastModifiedDate":"2024-02-29"},{"lineNumber":177,"author":{"gitId":"myang2020"},"content":"        return responseString;","lastModifiedDate":"2024-02-29"},{"lineNumber":178,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":179,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":180,"author":{"gitId":"myang2020"},"content":"    private StringBuilder handleEvent(Task task) {","lastModifiedDate":"2024-02-29"},{"lineNumber":181,"author":{"gitId":"myang2020"},"content":"        StringBuilder responseString \u003d new StringBuilder();","lastModifiedDate":"2024-02-29"},{"lineNumber":182,"author":{"gitId":"myang2020"},"content":"        todo.addTask(task);","lastModifiedDate":"2024-02-29"},{"lineNumber":183,"author":{"gitId":"myang2020"},"content":"        responseString.append(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2024-02-29"},{"lineNumber":184,"author":{"gitId":"myang2020"},"content":"        responseString.append(String.format(\"\\t\\t%s\\n\", task));","lastModifiedDate":"2024-02-29"},{"lineNumber":185,"author":{"gitId":"myang2020"},"content":"        responseString.append(String.format(\"\\tNow you have %d tasks in the list.\\n\", todo.size()));","lastModifiedDate":"2024-02-29"},{"lineNumber":186,"author":{"gitId":"myang2020"},"content":"        return responseString;","lastModifiedDate":"2024-02-29"},{"lineNumber":187,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":188,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":189,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":190,"author":{"gitId":"myang2020"},"content":"    private StringBuilder handleDelete(int idx) {","lastModifiedDate":"2024-02-29"},{"lineNumber":191,"author":{"gitId":"myang2020"},"content":"        StringBuilder responseString \u003d new StringBuilder();","lastModifiedDate":"2024-02-29"},{"lineNumber":192,"author":{"gitId":"myang2020"},"content":"        responseString.append(\"\\tNoted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-02-29"},{"lineNumber":193,"author":{"gitId":"myang2020"},"content":"        responseString.append(String.format(\"\\t\\t%s\\n\", todo.deleteTask(idx)));","lastModifiedDate":"2024-02-29"},{"lineNumber":194,"author":{"gitId":"myang2020"},"content":"        responseString.append(String.format(\"\\tNow you have %d tasks in the list.\\n\", todo.size()));","lastModifiedDate":"2024-02-29"},{"lineNumber":195,"author":{"gitId":"myang2020"},"content":"        return responseString;","lastModifiedDate":"2024-02-29"},{"lineNumber":196,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":197,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":198,"author":{"gitId":"myang2020"},"content":"    private StringBuilder handleFind(String keyword) {","lastModifiedDate":"2024-02-29"},{"lineNumber":199,"author":{"gitId":"myang2020"},"content":"        StringBuilder responseString \u003d new StringBuilder();","lastModifiedDate":"2024-02-29"},{"lineNumber":200,"author":{"gitId":"myang2020"},"content":"        for (int i \u003d 0; i \u003c todo.size(); i++) {","lastModifiedDate":"2024-02-29"},{"lineNumber":201,"author":{"gitId":"myang2020"},"content":"            if (todo.getList().get(i).getName().contains(keyword)) {","lastModifiedDate":"2024-02-29"},{"lineNumber":202,"author":{"gitId":"myang2020"},"content":"                responseString.append(String.format(\"\\t%d. %s\", i + 1, todo.getList().get(i)));","lastModifiedDate":"2024-02-29"},{"lineNumber":203,"author":{"gitId":"myang2020"},"content":"            }","lastModifiedDate":"2024-02-29"},{"lineNumber":204,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-29"},{"lineNumber":205,"author":{"gitId":"myang2020"},"content":"        responseString.append(\"\\tHere are the matching tasks in your list:\");","lastModifiedDate":"2024-02-29"},{"lineNumber":206,"author":{"gitId":"myang2020"},"content":"        return responseString;","lastModifiedDate":"2024-02-29"},{"lineNumber":207,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-29"},{"lineNumber":208,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":209,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":210,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-12"},{"lineNumber":211,"author":{"gitId":"myang2020"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2024-02-12"},{"lineNumber":212,"author":{"gitId":"myang2020"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2024-02-12"},{"lineNumber":213,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-12"},{"lineNumber":214,"author":{"gitId":"myang2020"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2024-02-12"},{"lineNumber":215,"author":{"gitId":"myang2020"},"content":"        StringBuilder responseString \u003d new StringBuilder();","lastModifiedDate":"2024-02-12"},{"lineNumber":216,"author":{"gitId":"myang2020"},"content":"        String command;","lastModifiedDate":"2024-02-12"},{"lineNumber":217,"author":{"gitId":"myang2020"},"content":"        String keyword;","lastModifiedDate":"2024-02-12"},{"lineNumber":218,"author":{"gitId":"myang2020"},"content":"        Task task;","lastModifiedDate":"2024-02-12"},{"lineNumber":219,"author":{"gitId":"myang2020"},"content":"        int idx;","lastModifiedDate":"2024-02-12"},{"lineNumber":220,"author":{"gitId":"myang2020"},"content":"        try {","lastModifiedDate":"2024-02-12"},{"lineNumber":221,"author":{"gitId":"myang2020"},"content":"            command \u003d Parser.parse(input);","lastModifiedDate":"2024-02-12"},{"lineNumber":222,"author":{"gitId":"myang2020"},"content":"            switch (command) {","lastModifiedDate":"2024-02-12"},{"lineNumber":223,"author":{"gitId":"myang2020"},"content":"                case (\"bye\"):","lastModifiedDate":"2024-02-12"},{"lineNumber":224,"author":{"gitId":"myang2020"},"content":"                    responseString.append(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":225,"author":{"gitId":"myang2020"},"content":"                    Platform.exit();","lastModifiedDate":"2024-02-12"},{"lineNumber":226,"author":{"gitId":"myang2020"},"content":"                    System.exit(0);","lastModifiedDate":"2024-02-12"},{"lineNumber":227,"author":{"gitId":"myang2020"},"content":"                case (\"list\"):","lastModifiedDate":"2024-02-12"},{"lineNumber":228,"author":{"gitId":"myang2020"},"content":"                    for (int i \u003d 0; i \u003c this.todo.getList().size(); i++) {","lastModifiedDate":"2024-02-12"},{"lineNumber":229,"author":{"gitId":"myang2020"},"content":"                        responseString.append(String.format(\"\\t%d. %s\", i + 1, this.todo.getList().get(i)));","lastModifiedDate":"2024-02-12"},{"lineNumber":230,"author":{"gitId":"myang2020"},"content":"                    }","lastModifiedDate":"2024-02-12"},{"lineNumber":231,"author":{"gitId":"myang2020"},"content":"                    break;","lastModifiedDate":"2024-02-12"},{"lineNumber":232,"author":{"gitId":"myang2020"},"content":"                case(\"mark\"):","lastModifiedDate":"2024-02-12"},{"lineNumber":233,"author":{"gitId":"myang2020"},"content":"                    idx \u003d Parser.parseMark(input);","lastModifiedDate":"2024-02-29"},{"lineNumber":234,"author":{"gitId":"myang2020"},"content":"                    responseString \u003d handleMark(idx);","lastModifiedDate":"2024-02-29"},{"lineNumber":235,"author":{"gitId":"myang2020"},"content":"                    break;","lastModifiedDate":"2024-02-12"},{"lineNumber":236,"author":{"gitId":"myang2020"},"content":"                case(\"unmark\"):","lastModifiedDate":"2024-02-12"},{"lineNumber":237,"author":{"gitId":"myang2020"},"content":"                    idx \u003d Parser.parseUnmark(input);","lastModifiedDate":"2024-02-29"},{"lineNumber":238,"author":{"gitId":"myang2020"},"content":"                    assert idx !\u003d 0;","lastModifiedDate":"2024-02-27"},{"lineNumber":239,"author":{"gitId":"myang2020"},"content":"                    responseString \u003d handleUnmark(idx);","lastModifiedDate":"2024-02-29"},{"lineNumber":240,"author":{"gitId":"myang2020"},"content":"                    break;","lastModifiedDate":"2024-02-12"},{"lineNumber":241,"author":{"gitId":"myang2020"},"content":"                case (\"todo\"):","lastModifiedDate":"2024-02-12"},{"lineNumber":242,"author":{"gitId":"myang2020"},"content":"                    task \u003d Parser.parseTodo(input);","lastModifiedDate":"2024-02-29"},{"lineNumber":243,"author":{"gitId":"myang2020"},"content":"                    todo.addTask(task);","lastModifiedDate":"2024-02-12"},{"lineNumber":244,"author":{"gitId":"myang2020"},"content":"                    responseString \u003d handleTodo(task);","lastModifiedDate":"2024-02-29"},{"lineNumber":245,"author":{"gitId":"myang2020"},"content":"                    break;","lastModifiedDate":"2024-02-12"},{"lineNumber":246,"author":{"gitId":"myang2020"},"content":"                case (\"deadline\"):","lastModifiedDate":"2024-02-12"},{"lineNumber":247,"author":{"gitId":"myang2020"},"content":"                    try {","lastModifiedDate":"2024-02-12"},{"lineNumber":248,"author":{"gitId":"myang2020"},"content":"                        task \u003d Parser.parseDeadline(input);","lastModifiedDate":"2024-02-29"},{"lineNumber":249,"author":{"gitId":"myang2020"},"content":"                        responseString \u003d handleDeadline(task);","lastModifiedDate":"2024-02-29"},{"lineNumber":250,"author":{"gitId":"myang2020"},"content":"                        break;","lastModifiedDate":"2024-02-12"},{"lineNumber":251,"author":{"gitId":"myang2020"},"content":"                    } catch (DateTimeParseException err) {","lastModifiedDate":"2024-02-12"},{"lineNumber":252,"author":{"gitId":"myang2020"},"content":"                        responseString.append(\"\\tPlease write your data in d/m/yyyy T format\");","lastModifiedDate":"2024-02-12"},{"lineNumber":253,"author":{"gitId":"myang2020"},"content":"                        break;","lastModifiedDate":"2024-02-12"},{"lineNumber":254,"author":{"gitId":"myang2020"},"content":"                    }","lastModifiedDate":"2024-02-12"},{"lineNumber":255,"author":{"gitId":"myang2020"},"content":"                case (\"event\"):","lastModifiedDate":"2024-02-12"},{"lineNumber":256,"author":{"gitId":"myang2020"},"content":"                    task \u003d Parser.parseEvent(input);","lastModifiedDate":"2024-02-29"},{"lineNumber":257,"author":{"gitId":"myang2020"},"content":"                    responseString \u003d handleEvent(task);","lastModifiedDate":"2024-02-29"},{"lineNumber":258,"author":{"gitId":"myang2020"},"content":"                    break;","lastModifiedDate":"2024-02-12"},{"lineNumber":259,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":260,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":261,"author":{"gitId":"myang2020"},"content":"                case(\"delete\"):","lastModifiedDate":"2024-02-12"},{"lineNumber":262,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":263,"author":{"gitId":"myang2020"},"content":"                    idx \u003d Parser.parseDelete(input);","lastModifiedDate":"2024-02-29"},{"lineNumber":264,"author":{"gitId":"myang2020"},"content":"                    assert idx !\u003d 0;","lastModifiedDate":"2024-02-27"},{"lineNumber":265,"author":{"gitId":"myang2020"},"content":"                    responseString \u003d handleDelete(idx);","lastModifiedDate":"2024-02-29"},{"lineNumber":266,"author":{"gitId":"myang2020"},"content":"                    break;","lastModifiedDate":"2024-02-12"},{"lineNumber":267,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":268,"author":{"gitId":"myang2020"},"content":"                case(\"find\"):","lastModifiedDate":"2024-02-12"},{"lineNumber":269,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":270,"author":{"gitId":"myang2020"},"content":"                    keyword \u003d Parser.parseFind(input);","lastModifiedDate":"2024-02-27"},{"lineNumber":271,"author":{"gitId":"myang2020"},"content":"                    responseString \u003d handleFind(keyword);","lastModifiedDate":"2024-02-29"},{"lineNumber":272,"author":{"gitId":"myang2020"},"content":"                    break;","lastModifiedDate":"2024-02-12"},{"lineNumber":273,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":274,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":275,"author":{"gitId":"myang2020"},"content":"                default:","lastModifiedDate":"2024-02-12"},{"lineNumber":276,"author":{"gitId":"myang2020"},"content":"                    throw new DukeException(\"\\tSorry, I did not understand the command!\");","lastModifiedDate":"2024-02-12"},{"lineNumber":277,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":278,"author":{"gitId":"myang2020"},"content":"            }","lastModifiedDate":"2024-02-12"},{"lineNumber":279,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":280,"author":{"gitId":"myang2020"},"content":"            storage.writeFile(todo.getList());","lastModifiedDate":"2024-02-12"},{"lineNumber":281,"author":{"gitId":"myang2020"},"content":"        } catch (DukeException | IOException err) {","lastModifiedDate":"2024-02-12"},{"lineNumber":282,"author":{"gitId":"myang2020"},"content":"            responseString.append(err.getMessage());","lastModifiedDate":"2024-02-12"},{"lineNumber":283,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":284,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-12"},{"lineNumber":285,"author":{"gitId":"myang2020"},"content":"        return responseString.toString();","lastModifiedDate":"2024-02-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"myang2020":285}},{"path":"src/main/java/dwight/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package dwight;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-12"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"public class Launcher {","lastModifiedDate":"2024-02-12"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-12"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-12"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"        Application.launch(Dwight.class, args);","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-12"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-02-12"}],"authorContributionMap":{"myang2020":10}},{"path":"src/main/java/dwight/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package dwight.exceptions;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":" * Customized exception class for Duke project","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"    // Ex: Invalid commands","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"     * Constructor for DukeException","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"     * @param str Error message that is thrown","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"    public DukeException (String str)","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"    {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"        // calling the constructor of parent Exception","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"        super(str);","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"myang2020":18}},{"path":"src/main/java/dwight/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package dwight.task;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":" * Class for deadline tasks","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"    protected LocalDateTime endTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"     * Constructor for DeadlineTask","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"     * @param name Name of the DeadlineTask","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"     * @param endTime Deadline for the task","lastModifiedDate":"2024-02-07"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"     * @param file_format File format for the task","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"    public DeadlineTask(String name, LocalDateTime endTime, String file_format) {","lastModifiedDate":"2024-02-07"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"        super(name, Task.Type.D, file_format);","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-02-07"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"     * String representation of DeadlineTask","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"     * @return String representation of DeadlineTask","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"    public String toString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"        String output;","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"            output \u003d \"[\" + this.type + \"]\" + \"[X] \" + this.name + \" (by: \" + this.endTime.format(formatter) + \")\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"            output \u003d \"[\" + this.type + \"]\" + \"[ ] \" + this.name + \" (by: \" + this.endTime.format(formatter) + \")\\n\";","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"        return output;","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"myang2020":41}},{"path":"src/main/java/dwight/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package dwight.task;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":" * Class for event tasks","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"public class EventTask extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"    protected String start_time, end_time;","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"     * Constructor for EventTask","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"     * @param name Name of the event","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"     * @param start_time Starting time for the task","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"     * @param end_time Ending time for the task","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"     * @param file_format File format for the task","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"    public EventTask(String name, String start_time, String end_time, String file_format) {","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"        super(name, Task.Type.E, file_format);","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"        this.start_time \u003d start_time;","lastModifiedDate":"2024-01-24"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"        this.end_time \u003d end_time;","lastModifiedDate":"2024-01-24"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"     * String representation of EventTask","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"     * @return String representation of EventTask","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"    public String toString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"        String output;","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"        if (!isDone) {","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"            output \u003d \"[\" + this.type + \"]\" + \"[ ] \" + this.name + \" (from: \" + this.start_time + \" to: \" + this.end_time + \")\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"            output \u003d \"[\" + this.type + \"]\" + \"[X] \" + this.name + \" (from: \" + this.start_time + \" to: \" + this.end_time + \")\\n\";","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"        return output;","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"myang2020":41}},{"path":"src/main/java/dwight/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package dwight.task;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":" * Abstract parent class for todo, deadline, and event tasks","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"public abstract class Task {","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"    protected Boolean isDone;","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"    protected final String name;","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"    protected Type type;","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"    protected String fileFormat;","lastModifiedDate":"2024-02-07"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"     * Enum for type of task","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"    enum Type {","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"        T,D,E;","lastModifiedDate":"2024-01-24"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"        /**","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"         * String representation of enum constant","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"         *","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"         * @return Return string representation of the enum constant","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"         */","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"        @Override","lastModifiedDate":"2024-01-24"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"        public String toString() {","lastModifiedDate":"2024-01-24"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"            return name();","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-01-24"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"     * Constructor for Task","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"     * @param name Name of the DeadlineTask","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"     * @param type Type of task","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"     * @param file_format File format for the task","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"    Task(String name, Type type, String fileFormat) {","lastModifiedDate":"2024-02-07"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-24"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-01-24"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"        this.fileFormat \u003d fileFormat;","lastModifiedDate":"2024-02-07"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":44,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"     * Mark tasks as done","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"myang2020"},"content":"    public void mark() {","lastModifiedDate":"2024-01-24"},{"lineNumber":48,"author":{"gitId":"myang2020"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-27"},{"lineNumber":49,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":50,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":51,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"myang2020"},"content":"     * Unmark tasks as done","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"myang2020"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"myang2020"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-27"},{"lineNumber":56,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"myang2020"},"content":"     * Gets task name","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"myang2020"},"content":"     * @return Return name as string","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"myang2020"},"content":"    public String getName() {","lastModifiedDate":"2024-01-24"},{"lineNumber":64,"author":{"gitId":"myang2020"},"content":"        return this.name;","lastModifiedDate":"2024-01-24"},{"lineNumber":65,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":66,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"myang2020"},"content":"     * Gets file format of task","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"myang2020"},"content":"     * @return Return file format as string","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"myang2020"},"content":"    public String getFileFormat() {","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"myang2020"},"content":"        return this.fileFormat;","lastModifiedDate":"2024-02-07"},{"lineNumber":74,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":76,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"myang2020":76}},{"path":"src/main/java/dwight/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package dwight.task;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import java.util.List;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"public class TaskList {","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"    private List\u003cTask\u003e todo;","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"    public TaskList(List\u003cTask\u003e todo) {","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"        this.todo \u003d todo;","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"        this.todo \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"        this.todo.add(task);","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"    public List\u003cTask\u003e getList() {","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"        return this.todo;","lastModifiedDate":"2024-02-04"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"    public Task deleteTask(int idx) {","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"        return this.todo.remove(idx - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"    public Task unmark(int idx) {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"        this.todo.get(idx - 1).unmark();","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"        return this.todo.get(idx - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"    public Task mark(int idx) {","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"        this.todo.get(idx - 1).mark();","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"        return this.todo.get(idx - 1);","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"    public void list() {","lastModifiedDate":"2024-02-04"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"        for (int i \u003d 0; i \u003c todo.size(); i++) {","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"myang2020"},"content":"            System.out.printf(\"\\t%d. %s\", i + 1, todo.get(i));","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"myang2020"},"content":"    public void find(String keyword) {","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"myang2020"},"content":"        for (int i \u003d 0; i \u003c todo.size(); i++) {","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"myang2020"},"content":"            if (todo.get(i).getName().contains(keyword)) {","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"myang2020"},"content":"                System.out.printf(\"\\t%d. %s\", i + 1, todo.get(i));","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"myang2020"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"myang2020"},"content":"    public int size() {","lastModifiedDate":"2024-02-04"},{"lineNumber":57,"author":{"gitId":"myang2020"},"content":"        return todo.size();","lastModifiedDate":"2024-02-04"},{"lineNumber":58,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":59,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"myang2020":59}},{"path":"src/main/java/dwight/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package dwight.task;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import dwight.exceptions.DukeException;","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"    public TodoTask(String name, String file_format) throws DukeException {","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"        super(name, Type.T, file_format);","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"        if (this.name.isBlank()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"            String error_message \u003d \"\\tTodo description cannot be empty!\\n\\tEx: todo return book\\n\";","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"            throw new DukeException(error_message);","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"    public String toString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"        String output;","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"        if (isDone) {","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"            output \u003d \"[\" + this.type + \"]\" + \"[X] \" + this.name + \"\\n\";","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"        } else {","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"            output \u003d \"[\" + this.type + \"]\" + \"[ ] \" + this.name + \"\\n\";","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"        return output;","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"myang2020":25}},{"path":"src/main/java/dwight/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package dwight.util;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-04"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-04"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-04"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"import dwight.task.DeadlineTask;","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"import dwight.task.EventTask;","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"import dwight.task.TodoTask;","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"import dwight.exceptions.DukeException;","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"public class Parser {","lastModifiedDate":"2024-02-04"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"    Parser() {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"     * Parses one word inputs such as \"list\"","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"     * @param input The input line inputted by the user","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"     * @return returns the inputted command","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"    public static String parse(String input) {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"        return input.split(\" \")[0];","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"     * Parses todo commands","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"     * @param input The input line inputted by the user","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"     * @return TodoTask instance","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"     * throws DukeException if input not correct TodoTask format","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"    public static TodoTask parseTodo(String input) throws DukeException {","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"        String taskName;","lastModifiedDate":"2024-02-27"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"        TodoTask task;","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"        taskName \u003d String.join(\" \", Arrays.copyOfRange(input.split(\" \"), 1, input.split(\" \").length));","lastModifiedDate":"2024-02-27"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"        if (!taskName.isBlank()) {","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"            System.out.println(taskName);","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"            // calling the method","lastModifiedDate":"2024-02-04"},{"lineNumber":44,"author":{"gitId":"myang2020"},"content":"            task \u003d new TodoTask(taskName, input);","lastModifiedDate":"2024-02-27"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"            return task;","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"myang2020"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"myang2020"},"content":"            throw new DukeException(\"\\tTodo description cannot be empty!\\n\\tEx: todo return book\\n\");","lastModifiedDate":"2024-02-05"},{"lineNumber":48,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":50,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":51,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"myang2020"},"content":"     * Parses deadline commands","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"myang2020"},"content":"     * @param input The input line inputted by the user","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"myang2020"},"content":"     * @return DeadlineTask instance","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"myang2020"},"content":"     * throws DukeException if input not correct DeadLine format","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"myang2020"},"content":"    public static DeadlineTask parseDeadline(String input) throws DukeException {","lastModifiedDate":"2024-02-29"},{"lineNumber":59,"author":{"gitId":"myang2020"},"content":"        String taskName, start, end, firstString, secondString;","lastModifiedDate":"2024-02-29"},{"lineNumber":60,"author":{"gitId":"myang2020"},"content":"        firstString \u003d input.split(\" /\")[0];","lastModifiedDate":"2024-02-29"},{"lineNumber":61,"author":{"gitId":"myang2020"},"content":"        secondString \u003d input.split(\" /\")[1];","lastModifiedDate":"2024-02-29"},{"lineNumber":62,"author":{"gitId":"myang2020"},"content":"        taskName \u003d String.join(\" \", Arrays.copyOfRange(firstString.split(\" \"), 1, firstString.split(\" \").length));","lastModifiedDate":"2024-02-29"},{"lineNumber":63,"author":{"gitId":"myang2020"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-04"},{"lineNumber":64,"author":{"gitId":"myang2020"},"content":"        end \u003d String.join(\" \", Arrays.copyOfRange(secondString.split(\"by \"), 1, secondString.split(\"by \").length));","lastModifiedDate":"2024-02-29"},{"lineNumber":65,"author":{"gitId":"myang2020"},"content":"        if (!taskName.isBlank() \u0026\u0026 !firstString.isBlank() \u0026\u0026 !secondString.isBlank()) {","lastModifiedDate":"2024-02-29"},{"lineNumber":66,"author":{"gitId":"myang2020"},"content":"            LocalDateTime end_time \u003d LocalDateTime.parse(end, formatter);","lastModifiedDate":"2024-02-04"},{"lineNumber":67,"author":{"gitId":"myang2020"},"content":"            return new DeadlineTask(taskName, end_time, input);","lastModifiedDate":"2024-02-27"},{"lineNumber":68,"author":{"gitId":"myang2020"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":69,"author":{"gitId":"myang2020"},"content":"            throw new DukeException(\"\\tInvalid deadline command\");","lastModifiedDate":"2024-02-04"},{"lineNumber":70,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":71,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":72,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":73,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":74,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":75,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":76,"author":{"gitId":"myang2020"},"content":"     * Parses event commands","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":78,"author":{"gitId":"myang2020"},"content":"     * @param input The input line inputted by the user","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"myang2020"},"content":"     * @return EventTask instance","lastModifiedDate":"2024-02-06"},{"lineNumber":80,"author":{"gitId":"myang2020"},"content":"     * throws DukeException if input not correct EventTask format","lastModifiedDate":"2024-02-06"},{"lineNumber":81,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":82,"author":{"gitId":"myang2020"},"content":"    public static EventTask parseEvent(String input) throws DukeException {","lastModifiedDate":"2024-02-29"},{"lineNumber":83,"author":{"gitId":"myang2020"},"content":"        if (input.split(\" /\").length \u003d\u003d 3) {","lastModifiedDate":"2024-02-04"},{"lineNumber":84,"author":{"gitId":"myang2020"},"content":"            String firstString, secondString, thirdString, taskName, start, end;","lastModifiedDate":"2024-02-29"},{"lineNumber":85,"author":{"gitId":"myang2020"},"content":"            firstString \u003d input.split(\" /\")[0];","lastModifiedDate":"2024-02-29"},{"lineNumber":86,"author":{"gitId":"myang2020"},"content":"            secondString \u003d input.split(\" /\")[1];","lastModifiedDate":"2024-02-29"},{"lineNumber":87,"author":{"gitId":"myang2020"},"content":"            thirdString \u003d input.split(\" /\")[2];","lastModifiedDate":"2024-02-29"},{"lineNumber":88,"author":{"gitId":"myang2020"},"content":"            taskName \u003d String.join(\" \", Arrays.copyOfRange(firstString.split(\" \"), 1, firstString.split(\" \").length));","lastModifiedDate":"2024-02-29"},{"lineNumber":89,"author":{"gitId":"myang2020"},"content":"            start \u003d String.join(\" \", Arrays.copyOfRange(secondString.split(\" \"), 1, secondString.split(\" \").length));","lastModifiedDate":"2024-02-29"},{"lineNumber":90,"author":{"gitId":"myang2020"},"content":"            end \u003d String.join(\" \", Arrays.copyOfRange(thirdString.split(\" \"), 1, thirdString.split(\" \").length));","lastModifiedDate":"2024-02-29"},{"lineNumber":91,"author":{"gitId":"myang2020"},"content":"            return new EventTask(taskName, start, end, input);","lastModifiedDate":"2024-02-29"},{"lineNumber":92,"author":{"gitId":"myang2020"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":93,"author":{"gitId":"myang2020"},"content":"            throw new DukeException(\"\\tInvalid event command\");","lastModifiedDate":"2024-02-04"},{"lineNumber":94,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":95,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":96,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":97,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":98,"author":{"gitId":"myang2020"},"content":"     * Parses delete commands","lastModifiedDate":"2024-02-06"},{"lineNumber":99,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":100,"author":{"gitId":"myang2020"},"content":"     * @param input The input line inputted by the user","lastModifiedDate":"2024-02-06"},{"lineNumber":101,"author":{"gitId":"myang2020"},"content":"     * @return Index of item to be deleted","lastModifiedDate":"2024-02-06"},{"lineNumber":102,"author":{"gitId":"myang2020"},"content":"     * throws DukeException if input not correct delete command format","lastModifiedDate":"2024-02-06"},{"lineNumber":103,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":104,"author":{"gitId":"myang2020"},"content":"    public static int parseDelete(String input) throws DukeException {","lastModifiedDate":"2024-02-29"},{"lineNumber":105,"author":{"gitId":"myang2020"},"content":"        if (input.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2024-02-04"},{"lineNumber":106,"author":{"gitId":"myang2020"},"content":"            return Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":107,"author":{"gitId":"myang2020"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":108,"author":{"gitId":"myang2020"},"content":"            throw new DukeException(\"\\tInvalid delete command\");","lastModifiedDate":"2024-02-04"},{"lineNumber":109,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":110,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":111,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":112,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":113,"author":{"gitId":"myang2020"},"content":"     * Parses mark commands","lastModifiedDate":"2024-02-06"},{"lineNumber":114,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":115,"author":{"gitId":"myang2020"},"content":"     * @param input The input line inputted by the user","lastModifiedDate":"2024-02-06"},{"lineNumber":116,"author":{"gitId":"myang2020"},"content":"     * @return Index of item to be marked","lastModifiedDate":"2024-02-06"},{"lineNumber":117,"author":{"gitId":"myang2020"},"content":"     * throws DukeException if input not correct mark command format","lastModifiedDate":"2024-02-06"},{"lineNumber":118,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":119,"author":{"gitId":"myang2020"},"content":"    public static int parseMark(String input) throws DukeException {","lastModifiedDate":"2024-02-29"},{"lineNumber":120,"author":{"gitId":"myang2020"},"content":"        if (input.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2024-02-04"},{"lineNumber":121,"author":{"gitId":"myang2020"},"content":"            return Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":122,"author":{"gitId":"myang2020"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":123,"author":{"gitId":"myang2020"},"content":"            throw new DukeException(\"\\tInvalid mark command\");","lastModifiedDate":"2024-02-04"},{"lineNumber":124,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":125,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":126,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":127,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":128,"author":{"gitId":"myang2020"},"content":"     * Parses unmark commands","lastModifiedDate":"2024-02-06"},{"lineNumber":129,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-02-06"},{"lineNumber":130,"author":{"gitId":"myang2020"},"content":"     * @param input The input line inputted by the user","lastModifiedDate":"2024-02-06"},{"lineNumber":131,"author":{"gitId":"myang2020"},"content":"     * @return Index of item to be unmarked","lastModifiedDate":"2024-02-06"},{"lineNumber":132,"author":{"gitId":"myang2020"},"content":"     * throws DukeException if input not correct unmark command format","lastModifiedDate":"2024-02-06"},{"lineNumber":133,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":134,"author":{"gitId":"myang2020"},"content":"    public static int parseUnmark(String input) throws DukeException {","lastModifiedDate":"2024-02-29"},{"lineNumber":135,"author":{"gitId":"myang2020"},"content":"        if (input.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2024-02-04"},{"lineNumber":136,"author":{"gitId":"myang2020"},"content":"            return Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2024-02-04"},{"lineNumber":137,"author":{"gitId":"myang2020"},"content":"        } else {","lastModifiedDate":"2024-02-04"},{"lineNumber":138,"author":{"gitId":"myang2020"},"content":"            throw new DukeException(\"\\tInvalid unmark command\");","lastModifiedDate":"2024-02-04"},{"lineNumber":139,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-04"},{"lineNumber":140,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":141,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":142,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-29"},{"lineNumber":143,"author":{"gitId":"myang2020"},"content":"     * Parses keyword for find command","lastModifiedDate":"2024-02-29"},{"lineNumber":144,"author":{"gitId":"myang2020"},"content":"     *","lastModifiedDate":"2024-02-29"},{"lineNumber":145,"author":{"gitId":"myang2020"},"content":"     * @param input User inputted find command","lastModifiedDate":"2024-02-29"},{"lineNumber":146,"author":{"gitId":"myang2020"},"content":"     * @return Keyword that user wants to find","lastModifiedDate":"2024-02-29"},{"lineNumber":147,"author":{"gitId":"myang2020"},"content":"     * throws DukeException if input not correct find command format","lastModifiedDate":"2024-02-29"},{"lineNumber":148,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-29"},{"lineNumber":149,"author":{"gitId":"myang2020"},"content":"    public static String parseFind(String input) throws DukeException {","lastModifiedDate":"2024-02-27"},{"lineNumber":150,"author":{"gitId":"myang2020"},"content":"        if (input.split(\" \").length \u003e 1) {","lastModifiedDate":"2024-02-06"},{"lineNumber":151,"author":{"gitId":"myang2020"},"content":"            return String.join(\" \", Arrays.copyOfRange(input.split(\" \"), 1, input.split(\" \").length));","lastModifiedDate":"2024-02-06"},{"lineNumber":152,"author":{"gitId":"myang2020"},"content":"        } else {","lastModifiedDate":"2024-02-06"},{"lineNumber":153,"author":{"gitId":"myang2020"},"content":"            throw new DukeException(\"\\tFind keyword cannot be empty\");","lastModifiedDate":"2024-02-06"},{"lineNumber":154,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":155,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":156,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":157,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"myang2020":157}},{"path":"src/main/java/dwight/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package dwight.util;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import java.util.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"import java.io.File;","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"import dwight.task.Task;","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"import dwight.task.TodoTask;","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"import dwight.task.DeadlineTask;","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"import dwight.task.EventTask;","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"import dwight.exceptions.DukeException;","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"public class Storage {","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"    private final File FILE;","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-04"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"        this.FILE \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2024-02-04"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"    public List\u003cTask\u003e readFile() throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"        String input, task_name, start, end, first_string, second_string, third_string; // for easy processing","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"        Task task;","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"        List\u003cTask\u003e todo \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"            System.out.println(\"Current Working Directory: \" + System.getProperty(\"user.dir\"));","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"            Scanner scanner \u003d new Scanner(FILE);","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"                input \u003d scanner.nextLine();","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"                switch (input.split(\" \")[0]) {","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"                    case (\"todo\"):","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"                        task_name \u003d String.join(\" \", Arrays.copyOfRange(input.split(\" \"), 1, input.split(\" \").length));","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"                        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"                            // calling the method","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"                            task \u003d new TodoTask(task_name, input);","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"myang2020"},"content":"                            todo.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"                            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"myang2020"},"content":"                        } catch (DukeException err) {","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"myang2020"},"content":"                            System.out.println(err.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"myang2020"},"content":"                            break;","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"myang2020"},"content":"                        }","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"myang2020"},"content":"                    case (\"deadline\"):","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"myang2020"},"content":"                        first_string \u003d input.split(\" /\")[0];","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"myang2020"},"content":"                        second_string \u003d input.split(\" /\")[1];","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"myang2020"},"content":"                        task_name \u003d String.join(\" \", Arrays.copyOfRange(first_string.split(\" \"), 1, first_string.split(\" \").length));","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"myang2020"},"content":"                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"myang2020"},"content":"                        end \u003d String.join(\" \", Arrays.copyOfRange(second_string.split(\"by \"), 1, second_string.split(\"by \").length));","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"myang2020"},"content":"                        LocalDateTime end_time \u003d LocalDateTime.parse(end, formatter);","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"myang2020"},"content":"                        task \u003d new DeadlineTask(task_name, end_time, input);","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"myang2020"},"content":"                        todo.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"myang2020"},"content":"                        break;","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"myang2020"},"content":"                    case (\"event\"):","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"myang2020"},"content":"                        first_string \u003d input.split(\" /\")[0];","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"myang2020"},"content":"                        second_string \u003d input.split(\" /\")[1];","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"myang2020"},"content":"                        third_string \u003d input.split(\" /\")[2];","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"myang2020"},"content":"                        task_name \u003d String.join(\" \", Arrays.copyOfRange(first_string.split(\" \"), 1, first_string.split(\" \").length));","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"myang2020"},"content":"                        start \u003d String.join(\" \", Arrays.copyOfRange(second_string.split(\" \"), 1, second_string.split(\" \").length));","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"myang2020"},"content":"                        end \u003d String.join(\" \", Arrays.copyOfRange(third_string.split(\" \"), 1, third_string.split(\" \").length));","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"myang2020"},"content":"                        task \u003d new EventTask(task_name, start, end, input);","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"myang2020"},"content":"                        todo.add(task);","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"myang2020"},"content":"                        break;","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"myang2020"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"myang2020"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"myang2020"},"content":"            return todo;","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"myang2020"},"content":"        } catch (IOException err) {","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"myang2020"},"content":"            throw new IOException(err.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"myang2020"},"content":"    public void writeFile(List\u003cTask\u003e todo) throws IOException {","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"myang2020"},"content":"        try {","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"myang2020"},"content":"            FileWriter fw \u003d new FileWriter(FILE);","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"myang2020"},"content":"            for (Task task : todo) {","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"myang2020"},"content":"                fw.write(task.getFileFormat() + System.lineSeparator());","lastModifiedDate":"2024-02-04"},{"lineNumber":85,"author":{"gitId":"myang2020"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"myang2020"},"content":"            fw.close();","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"myang2020"},"content":"        } catch (IOException err) {","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"myang2020"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"myang2020":91}},{"path":"src/main/java/dwight/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package dwight.util;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":" * The Ui class is a utility class in charge of display","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"public class Ui {","lastModifiedDate":"2024-02-04"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"    public final String divider \u003d \"---------------------------------------------------------------\";","lastModifiedDate":"2024-02-04"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"    public Ui() {","lastModifiedDate":"2024-02-04"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"     * Prints welcome message","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"    public void welcome() {","lastModifiedDate":"2024-02-04"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"        String chat_name \u003d \"Dwight Schrute\";","lastModifiedDate":"2024-02-04"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"        System.out.printf(\"%s\\nHello! I\u0027m %s\\nWhat Can I do for you?\\n%s\\n\"","lastModifiedDate":"2024-02-04"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"                , divider, chat_name, divider);","lastModifiedDate":"2024-02-04"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"     * Prints divider","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"    public void divider() {","lastModifiedDate":"2024-02-04"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"        System.out.println(divider);","lastModifiedDate":"2024-02-04"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"     * Prints valid commands","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"    public void showCommands() {","lastModifiedDate":"2024-02-04"},{"lineNumber":32,"author":{"gitId":"myang2020"},"content":"        System.out.println(\"1. list - Lists out tasks\");","lastModifiedDate":"2024-02-04"},{"lineNumber":33,"author":{"gitId":"myang2020"},"content":"        System.out.println(\"2. mark [index] - Marks task at given index as done\");","lastModifiedDate":"2024-02-04"},{"lineNumber":34,"author":{"gitId":"myang2020"},"content":"        System.out.println(\"3. unmark [index] - Unmarks task at given index as done\");","lastModifiedDate":"2024-02-04"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"        System.out.println(\"4. todo [task] - Adds todo task\");","lastModifiedDate":"2024-02-04"},{"lineNumber":36,"author":{"gitId":"myang2020"},"content":"        System.out.println(\"5. event [task] /from [start date] /to [end date] - Adds event task\");","lastModifiedDate":"2024-02-04"},{"lineNumber":37,"author":{"gitId":"myang2020"},"content":"        System.out.println(\"6. deadline [task] /by [d/MM/yyyy HH:mm] - Adds deadline task\");","lastModifiedDate":"2024-02-04"},{"lineNumber":38,"author":{"gitId":"myang2020"},"content":"        System.out.println(\"7. delete [index] - Deletes task at index\");","lastModifiedDate":"2024-02-04"},{"lineNumber":39,"author":{"gitId":"myang2020"},"content":"        System.out.println(\"8. bye - Exits program\");","lastModifiedDate":"2024-02-04"},{"lineNumber":40,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":41,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":42,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"myang2020"},"content":"     * Prints file failed to load error","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"myang2020"},"content":"    public void showLoadingError() {","lastModifiedDate":"2024-02-04"},{"lineNumber":46,"author":{"gitId":"myang2020"},"content":"        System.out.println(\"Failed to load file\");","lastModifiedDate":"2024-02-04"},{"lineNumber":47,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":48,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-04"},{"lineNumber":49,"author":{"gitId":"myang2020"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"myang2020"},"content":"     * Prints invalid command message","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"myang2020"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"myang2020"},"content":"    public void invalidCommand() {","lastModifiedDate":"2024-02-04"},{"lineNumber":53,"author":{"gitId":"myang2020"},"content":"        System.out.println(\"Sorry, I didn\u0027t understand you. Here are a list of commands!\");","lastModifiedDate":"2024-02-04"},{"lineNumber":54,"author":{"gitId":"myang2020"},"content":"        showCommands();","lastModifiedDate":"2024-02-04"},{"lineNumber":55,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-04"},{"lineNumber":56,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-02-04"}],"authorContributionMap":{"myang2020":56}},{"path":"src/test/java/dwight/task/TodoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package dwight.task;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import dwight.util.Parser;","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import dwight.exceptions.DukeException;","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"public class TodoTaskTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"    public void invalid_constructor() {","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"            assertEquals(new TodoTask(\"\", \"\"), Parser.parseTodo(\"todo\"));","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"            assertEquals(\"\\tTodo description cannot be empty!\\n\\tEx: todo return book\\n\", e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"    public void success_instance() {","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"            assertEquals(new TodoTask(\"read\", \"todo read\").toString(), Parser.parseTodo(\"todo read\").toString());","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"myang2020":27}},{"path":"src/test/java/dwight/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"package dwight.util;","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"import dwight.task.TodoTask;","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-05"},{"lineNumber":4,"author":{"gitId":"myang2020"},"content":"import dwight.exceptions.DukeException;","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"myang2020"},"content":"import dwight.task.DeadlineTask;","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":7,"author":{"gitId":"myang2020"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-05"},{"lineNumber":8,"author":{"gitId":"myang2020"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-05"},{"lineNumber":9,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":10,"author":{"gitId":"myang2020"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-05"},{"lineNumber":11,"author":{"gitId":"myang2020"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-05"},{"lineNumber":12,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":13,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":14,"author":{"gitId":"myang2020"},"content":"    public void invalid_todo() {","lastModifiedDate":"2024-02-05"},{"lineNumber":15,"author":{"gitId":"myang2020"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":16,"author":{"gitId":"myang2020"},"content":"            assertEquals(new TodoTask(\"\", \"\"), Parser.parseTodo(\"todo\"));","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"myang2020"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":18,"author":{"gitId":"myang2020"},"content":"            assertEquals(\"\\tTodo description cannot be empty!\\n\\tEx: todo return book\\n\", e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":19,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":20,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":21,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-02-05"},{"lineNumber":22,"author":{"gitId":"myang2020"},"content":"    @Test","lastModifiedDate":"2024-02-05"},{"lineNumber":23,"author":{"gitId":"myang2020"},"content":"    public void deadline_success() {","lastModifiedDate":"2024-02-05"},{"lineNumber":24,"author":{"gitId":"myang2020"},"content":"        try {","lastModifiedDate":"2024-02-05"},{"lineNumber":25,"author":{"gitId":"myang2020"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2024-02-05"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"            assertEquals(new DeadlineTask(\"eat\", LocalDateTime.parse(\"7/2/2024 1800\", formatter), \"deadline eat /by 7/2/2024 1800\").toString(), Parser.parseDeadline(\"deadline eat /by 7/2/2024 1800\").toString());","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"myang2020"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-05"},{"lineNumber":28,"author":{"gitId":"myang2020"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-05"},{"lineNumber":29,"author":{"gitId":"myang2020"},"content":"        }","lastModifiedDate":"2024-02-05"},{"lineNumber":30,"author":{"gitId":"myang2020"},"content":"    }","lastModifiedDate":"2024-02-05"},{"lineNumber":31,"author":{"gitId":"myang2020"},"content":"}","lastModifiedDate":"2024-02-05"}],"authorContributionMap":{"myang2020":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"myang2020"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"myang2020"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"myang2020"},"content":"bye","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"myang2020":3}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"myang2020"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"myang2020"},"content":"","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"-":33,"myang2020":2}}]
