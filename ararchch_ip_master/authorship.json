[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"# yapchit.yapchit project template","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"3. After that, locate the `src/main/java/yapchit.yapchit.java` file, right-click it, and choose `Run yapchit.yapchit.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"ararchch":2}},{"path":"src/main/data/dataStore.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"todo bob0","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"ararchch":1}},{"path":"src/main/java/Yapchit/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":" * Task class representing a general task in Yapchit/","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"public class Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"    private String name;","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"     * Constructor of task class.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"     * @param name name of task to perform","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"    public Task(String name){","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"     * setter function to set the tag of the class based on input.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"     * @param isDone the boolean value to update the tag to","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"    public void setDone(boolean isDone){","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"     * Getter function that returns name of tag","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"     * @return String with name of task","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"    public String getName(){","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"        return this.name;","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"    public boolean getDone(){","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ararchch":41}},{"path":"src/main/java/Yapchit/Tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":" * ToDo class representing a ToDo object.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":" * Extends Task class","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"public class ToDo extends Task{","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"     * Constructor of new ToDo object","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"     * @param name name of ToDo","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"    public ToDo(String name){","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"        super(name);","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"     * Prints the ToDo details onto the screen.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"     * @return","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"    public String toString(){","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"        String tag \u003d super.getDone() ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"        return \"[T]\" + tag + \" \" + super.getName();","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ararchch":28}},{"path":"src/main/java/Yapchit/YapchitExceptions/YapchitException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.yapchitexceptions;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":" * Special exception class for Yapchit.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"public class YapchitException extends Exception{","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"     * Constuctor of special yapchit excptions. Calls constructor of overall exception class","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"     * @param errorMsg","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"    public YapchitException(String errorMsg){","lastModifiedDate":"2024-01-24"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"        super(errorMsg);","lastModifiedDate":"2024-01-24"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ararchch":17}},{"path":"src/main/java/yapchit/Handler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import yapchit.tasks.Deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import yapchit.tasks.Event;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import yapchit.tasks.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import yapchit.tasks.ToDo;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.InvalidDetailException;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.InvalidKeywordException;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.YapchitException;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":" * Class that acts as the \u0027brains\u0027 of the Yapchit program and handles all operations.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"public class Handler {","lastModifiedDate":"2024-01-30"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"     * creates new handler instance","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"    public Handler() {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"     * Primary function is to accept an input and operation and redirect it to appropriate handler function","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"     * for handling.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"     * @param input user input","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"     * @param op parsed operation from parser","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"     * @param tasks the full tasklist","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"     * @param ui the ui to interact with user","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"     * @param parser the parser to perform additional parsing","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"     * @throws YapchitException if there is conflict in terms of user input and operation to perform","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"    public void handleOperation(","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"            String input, Yapchit.Operations op, TaskList tasks, Ui ui, Parser parser) throws YapchitException {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"        String[] parts \u003d parser.parseInputParts(input);","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"        switch (op) {","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"        case LIST:","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"            handleList(parts, tasks, ui);","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"        case MARK:","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"            handleMark(parts, tasks, ui);","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"        case UNMARK:","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"            handleUnmark(parts, tasks, ui);","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"        case DELETE:","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"            handleDelete(parts, tasks, ui);","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"        case FIND:","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"            handleFind(parts, tasks, ui);","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"            break;","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"        case DEADLINE:","lastModifiedDate":"2024-01-30"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"            handleDeadline(input, true, tasks, ui, parser);","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"        case EVENT:","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"            handleEvent(input, true, tasks, ui);","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"        case TODO:","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"            handleTodo(input, true, tasks, ui);","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"            break;","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"        default:","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"            throw new InvalidKeywordException(\"You have entered an invalid keyword. \" +","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"                    \"Valid keywords are [\u0027mark\u0027, \u0027unmark\u0027, \u0027deadline\u0027, \u0027todo\u0027, \u0027event\u0027, \u0027bye\u0027, \u0027list\u0027, \u0027delete\u0027]\");","lastModifiedDate":"2024-01-30"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"     * Primary function is to accept an input and operation and redirect it to appropriate handler function","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"     * for handling. Only this time the input is from the storage file and not the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"     * @param input file stored input","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"     * @param op parsed operation from parser","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"     * @param tasks the full tasklist","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"     * @param ui the ui to interact with user","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"     * @param parser the parser to perform additional parsing","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"     * @throws YapchitException if there is conflict in terms of input and operation to perform","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"    public void handleUpdateListFromFile(","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"            String input, Yapchit.Operations op, TaskList tasks, Ui ui, Parser parser) throws InvalidDetailException {","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"        switch (op) {","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"        case EVENT:","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"ararchch"},"content":"            this.handleEvent(input, false, tasks, ui);","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"ararchch"},"content":"        case DEADLINE:","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"ararchch"},"content":"            this.handleDeadline(input, false, tasks, ui, parser);","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"ararchch"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"        case TODO:","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"            this.handleTodo(input, false, tasks, ui);","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"            break;","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"ararchch"},"content":"     * Creates a new event object based on details in provided input.","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"ararchch"},"content":"     * @param input containing details of the event","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"ararchch"},"content":"     * @param isNewTask boolean which identifies if this is a task being added to list for the first time","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"ararchch"},"content":"     * @param tasks list of tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"ararchch"},"content":"     * @param ui ui object to interact with the user","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"ararchch"},"content":"     * @throws InvalidDetailException in case of mismatch in input and task detail requirements.","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"ararchch"},"content":"    public void handleEvent(String input, boolean isNewTask, TaskList tasks, Ui ui) throws InvalidDetailException {","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"ararchch"},"content":"        int fromStart \u003d input.indexOf(\"/from\");","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"ararchch"},"content":"        int toStart \u003d input.indexOf(\"/to\");","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"ararchch"},"content":"        char isDone \u003d \u00270\u0027;","lastModifiedDate":"2024-02-01"},{"lineNumber":120,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"ararchch"},"content":"        if (!isNewTask) {","lastModifiedDate":"2024-02-01"},{"lineNumber":122,"author":{"gitId":"ararchch"},"content":"            isDone \u003d input.charAt(input.length() - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":123,"author":{"gitId":"ararchch"},"content":"            input \u003d input.substring(0, input.length() - 1);","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"ararchch"},"content":"        if (fromStart \u003d\u003d -1 || toStart \u003d\u003d -1 || fromStart \u003e\u003d toStart) {","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"ararchch"},"content":"            throw new InvalidDetailException(\"invalid /from and /to parameters. Please retry\");","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"ararchch"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"ararchch"},"content":"            if (6 \u003d\u003d fromStart || fromStart + 6 \u003d\u003d toStart || toStart + 4 \u003e\u003d input.length()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":130,"author":{"gitId":"ararchch"},"content":"                throw new InvalidDetailException(\"Event description and/or to/from parameters cannot be empty\");","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":132,"author":{"gitId":"ararchch"},"content":"            String desc \u003d input.substring(6, fromStart).strip();","lastModifiedDate":"2024-01-30"},{"lineNumber":133,"author":{"gitId":"ararchch"},"content":"            String from \u003d input.substring(fromStart + 6, toStart).strip();","lastModifiedDate":"2024-01-30"},{"lineNumber":134,"author":{"gitId":"ararchch"},"content":"            String to \u003d input.substring(toStart + 4).strip();","lastModifiedDate":"2024-01-30"},{"lineNumber":135,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"ararchch"},"content":"            if (desc.length() \u003d\u003d 0 || from.length() \u003d\u003d 0 || to.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-30"},{"lineNumber":137,"author":{"gitId":"ararchch"},"content":"                throw new InvalidDetailException(\"Event description and/or to/from parameters cannot be empty\");","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"ararchch"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":139,"author":{"gitId":"ararchch"},"content":"                Task t \u003d new Event(desc, from, to);","lastModifiedDate":"2024-01-30"},{"lineNumber":140,"author":{"gitId":"ararchch"},"content":"                tasks.addTask(t);","lastModifiedDate":"2024-01-30"},{"lineNumber":141,"author":{"gitId":"ararchch"},"content":"                if (isNewTask) {","lastModifiedDate":"2024-02-01"},{"lineNumber":142,"author":{"gitId":"ararchch"},"content":"                    ui.printTaskAdd(t, tasks.getListSize());","lastModifiedDate":"2024-01-30"},{"lineNumber":143,"author":{"gitId":"ararchch"},"content":"                } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":144,"author":{"gitId":"ararchch"},"content":"                    t.setDone(isDone \u003d\u003d \u00271\u0027 ? true : false);","lastModifiedDate":"2024-02-01"},{"lineNumber":145,"author":{"gitId":"ararchch"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":146,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":147,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":148,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":149,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":150,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"ararchch"},"content":"     * Creates a new deadline object based on details in provided input.","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":153,"author":{"gitId":"ararchch"},"content":"     * @param input containing details of the deadline","lastModifiedDate":"2024-02-02"},{"lineNumber":154,"author":{"gitId":"ararchch"},"content":"     * @param newTask boolean which identifies if this is a task being added to list for the first time","lastModifiedDate":"2024-02-02"},{"lineNumber":155,"author":{"gitId":"ararchch"},"content":"     * @param tasks list of tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":156,"author":{"gitId":"ararchch"},"content":"     * @param ui ui object to interact with the user","lastModifiedDate":"2024-02-02"},{"lineNumber":157,"author":{"gitId":"ararchch"},"content":"     * @param parser parser object to parse input","lastModifiedDate":"2024-02-02"},{"lineNumber":158,"author":{"gitId":"ararchch"},"content":"     * @throws InvalidDetailException in case of mismatch in input and task detail requirements.","lastModifiedDate":"2024-02-02"},{"lineNumber":159,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":160,"author":{"gitId":"ararchch"},"content":"    public void handleDeadline(","lastModifiedDate":"2024-02-01"},{"lineNumber":161,"author":{"gitId":"ararchch"},"content":"            String input, boolean isNewTask, TaskList tasks, Ui ui, Parser parser) throws InvalidDetailException {","lastModifiedDate":"2024-02-01"},{"lineNumber":162,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":163,"author":{"gitId":"ararchch"},"content":"        int byStart \u003d input.indexOf(\"/by\");","lastModifiedDate":"2024-01-30"},{"lineNumber":164,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":165,"author":{"gitId":"ararchch"},"content":"        char isDone \u003d \u00270\u0027;","lastModifiedDate":"2024-02-01"},{"lineNumber":166,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":167,"author":{"gitId":"ararchch"},"content":"        if (!isNewTask) {","lastModifiedDate":"2024-02-01"},{"lineNumber":168,"author":{"gitId":"ararchch"},"content":"            isDone \u003d input.charAt(input.length() - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":169,"author":{"gitId":"ararchch"},"content":"            input \u003d input.substring(0, input.length() - 1);","lastModifiedDate":"2024-01-30"},{"lineNumber":170,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":171,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":172,"author":{"gitId":"ararchch"},"content":"        if (byStart \u003d\u003d -1) {","lastModifiedDate":"2024-01-30"},{"lineNumber":173,"author":{"gitId":"ararchch"},"content":"            throw new InvalidDetailException(\"Missing \u0027by\u0027 parameter in deadline detail\");","lastModifiedDate":"2024-01-30"},{"lineNumber":174,"author":{"gitId":"ararchch"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":175,"author":{"gitId":"ararchch"},"content":"            if (9 \u003d\u003d byStart || byStart + 4 \u003e\u003d input.length()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":176,"author":{"gitId":"ararchch"},"content":"                throw new InvalidDetailException(\"Deadline description and/or by parameter cannot be empty\");","lastModifiedDate":"2024-01-31"},{"lineNumber":177,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":178,"author":{"gitId":"ararchch"},"content":"            String desc \u003d input.substring(9, byStart).strip();","lastModifiedDate":"2024-01-30"},{"lineNumber":179,"author":{"gitId":"ararchch"},"content":"            LocalDate by \u003d parser.parseTimestamp(input.substring(byStart + 4).strip());","lastModifiedDate":"2024-01-30"},{"lineNumber":180,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":181,"author":{"gitId":"ararchch"},"content":"            if (desc.length() \u003d\u003d 0 || by \u003d\u003d null) {","lastModifiedDate":"2024-01-30"},{"lineNumber":182,"author":{"gitId":"ararchch"},"content":"                throw new InvalidDetailException(\"Invalid or empty deadline description and/or by parameter\");","lastModifiedDate":"2024-01-31"},{"lineNumber":183,"author":{"gitId":"ararchch"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":184,"author":{"gitId":"ararchch"},"content":"                Task t \u003d new Deadline(desc, by);","lastModifiedDate":"2024-01-30"},{"lineNumber":185,"author":{"gitId":"ararchch"},"content":"                tasks.addTask(t);","lastModifiedDate":"2024-01-30"},{"lineNumber":186,"author":{"gitId":"ararchch"},"content":"                if (isNewTask) {","lastModifiedDate":"2024-02-01"},{"lineNumber":187,"author":{"gitId":"ararchch"},"content":"                    ui.printTaskAdd(t, tasks.getListSize());","lastModifiedDate":"2024-01-30"},{"lineNumber":188,"author":{"gitId":"ararchch"},"content":"                } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":189,"author":{"gitId":"ararchch"},"content":"                    t.setDone(isDone \u003d\u003d \u00271\u0027 ? true : false);","lastModifiedDate":"2024-02-01"},{"lineNumber":190,"author":{"gitId":"ararchch"},"content":"                }","lastModifiedDate":"2024-01-30"},{"lineNumber":191,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":192,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":193,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":194,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":195,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":196,"author":{"gitId":"ararchch"},"content":"     * Creates a new todo object based on details in provided input.","lastModifiedDate":"2024-02-02"},{"lineNumber":197,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":198,"author":{"gitId":"ararchch"},"content":"     * @param input containing details of the todo","lastModifiedDate":"2024-02-02"},{"lineNumber":199,"author":{"gitId":"ararchch"},"content":"     * @param isNewTask boolean which identifies if this is a task being added to list for the first time","lastModifiedDate":"2024-02-02"},{"lineNumber":200,"author":{"gitId":"ararchch"},"content":"     * @param tasks list of tasks","lastModifiedDate":"2024-02-02"},{"lineNumber":201,"author":{"gitId":"ararchch"},"content":"     * @param ui ui object to interact with the user","lastModifiedDate":"2024-02-02"},{"lineNumber":202,"author":{"gitId":"ararchch"},"content":"     * @throws InvalidDetailException in case of mismatch in input and task detail requirements.","lastModifiedDate":"2024-02-02"},{"lineNumber":203,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":204,"author":{"gitId":"ararchch"},"content":"    public void handleTodo(String input, boolean isNewTask, TaskList tasks, Ui ui) throws InvalidDetailException {","lastModifiedDate":"2024-02-01"},{"lineNumber":205,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":206,"author":{"gitId":"ararchch"},"content":"        char isDone \u003d \u00270\u0027;","lastModifiedDate":"2024-02-01"},{"lineNumber":207,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":208,"author":{"gitId":"ararchch"},"content":"        if (!isNewTask) {","lastModifiedDate":"2024-02-01"},{"lineNumber":209,"author":{"gitId":"ararchch"},"content":"            isDone \u003d input.charAt(input.length() - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":210,"author":{"gitId":"ararchch"},"content":"            input \u003d input.substring(0, input.length() - 1);","lastModifiedDate":"2024-01-30"},{"lineNumber":211,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":212,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":213,"author":{"gitId":"ararchch"},"content":"        if (5 \u003e\u003d input.length()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":214,"author":{"gitId":"ararchch"},"content":"            throw new InvalidDetailException(\"todo description cannot be an empty string. Please retry\");","lastModifiedDate":"2024-01-30"},{"lineNumber":215,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":216,"author":{"gitId":"ararchch"},"content":"        String desc \u003d input.substring(5).strip();","lastModifiedDate":"2024-01-30"},{"lineNumber":217,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":218,"author":{"gitId":"ararchch"},"content":"        if (desc.length() \u003d\u003d 0) {","lastModifiedDate":"2024-01-30"},{"lineNumber":219,"author":{"gitId":"ararchch"},"content":"            throw new InvalidDetailException(\"todo description cannot be an empty string. Please retry\");","lastModifiedDate":"2024-01-30"},{"lineNumber":220,"author":{"gitId":"ararchch"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":221,"author":{"gitId":"ararchch"},"content":"            Task t \u003d new ToDo(desc);","lastModifiedDate":"2024-01-30"},{"lineNumber":222,"author":{"gitId":"ararchch"},"content":"            tasks.addTask(t);","lastModifiedDate":"2024-01-30"},{"lineNumber":223,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":224,"author":{"gitId":"ararchch"},"content":"            if (isNewTask) {","lastModifiedDate":"2024-02-01"},{"lineNumber":225,"author":{"gitId":"ararchch"},"content":"                ui.printTaskAdd(t, tasks.getListSize());","lastModifiedDate":"2024-01-30"},{"lineNumber":226,"author":{"gitId":"ararchch"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":227,"author":{"gitId":"ararchch"},"content":"                t.setDone(isDone \u003d\u003d \u00271\u0027 ? true : false);","lastModifiedDate":"2024-02-01"},{"lineNumber":228,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":229,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":230,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":231,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":232,"author":{"gitId":"ararchch"},"content":"    public void handleFind(String[] parts, TaskList tasks, Ui ui) throws  InvalidDetailException {","lastModifiedDate":"2024-02-01"},{"lineNumber":233,"author":{"gitId":"ararchch"},"content":"        if(parts.length !\u003d 2){","lastModifiedDate":"2024-02-01"},{"lineNumber":234,"author":{"gitId":"ararchch"},"content":"            throw new InvalidDetailException(\"Invalid detail after keyword. Please retry\");","lastModifiedDate":"2024-02-01"},{"lineNumber":235,"author":{"gitId":"ararchch"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":236,"author":{"gitId":"ararchch"},"content":"            ui.printList(tasks.findSublist(parts[1]), \"Here are the matching tasks in your list:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":237,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":238,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":239,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":240,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":241,"author":{"gitId":"ararchch"},"content":"     * Handles the printing of all the tasks in the tasks list.","lastModifiedDate":"2024-02-02"},{"lineNumber":242,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":243,"author":{"gitId":"ararchch"},"content":"     * @param parts The user input split into parts","lastModifiedDate":"2024-02-02"},{"lineNumber":244,"author":{"gitId":"ararchch"},"content":"     * @param tasks the list of tasks to print","lastModifiedDate":"2024-02-02"},{"lineNumber":245,"author":{"gitId":"ararchch"},"content":"     * @param ui the ui object to interact with the user","lastModifiedDate":"2024-02-02"},{"lineNumber":246,"author":{"gitId":"ararchch"},"content":"     * @throws InvalidDetailException if the input does not provide the necessary details","lastModifiedDate":"2024-02-02"},{"lineNumber":247,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":248,"author":{"gitId":"ararchch"},"content":"    public void handleList(String[] parts, TaskList tasks, Ui ui) throws InvalidDetailException{","lastModifiedDate":"2024-01-31"},{"lineNumber":249,"author":{"gitId":"ararchch"},"content":"            if(parts.length !\u003d 1){","lastModifiedDate":"2024-01-30"},{"lineNumber":250,"author":{"gitId":"ararchch"},"content":"                throw new InvalidDetailException(\"Invalid detail after keyword. Please retry\");","lastModifiedDate":"2024-01-30"},{"lineNumber":251,"author":{"gitId":"ararchch"},"content":"            } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":252,"author":{"gitId":"ararchch"},"content":"                ui.printList(tasks, \"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":253,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":254,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":255,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":256,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":257,"author":{"gitId":"ararchch"},"content":"     * Handles the deleting of the tasks in the tasks list.","lastModifiedDate":"2024-02-02"},{"lineNumber":258,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":259,"author":{"gitId":"ararchch"},"content":"     * @param parts The user input split into parts","lastModifiedDate":"2024-02-02"},{"lineNumber":260,"author":{"gitId":"ararchch"},"content":"     * @param tasks the list of tasks to delete from","lastModifiedDate":"2024-02-02"},{"lineNumber":261,"author":{"gitId":"ararchch"},"content":"     * @param ui the ui object to interact with the user","lastModifiedDate":"2024-02-02"},{"lineNumber":262,"author":{"gitId":"ararchch"},"content":"     * @throws InvalidDetailException if the input does not provide the necessary details","lastModifiedDate":"2024-02-02"},{"lineNumber":263,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":264,"author":{"gitId":"ararchch"},"content":"    public void handleDelete(String[] parts, TaskList tasks, Ui ui) throws InvalidDetailException {","lastModifiedDate":"2024-01-31"},{"lineNumber":265,"author":{"gitId":"ararchch"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":266,"author":{"gitId":"ararchch"},"content":"            throw new InvalidDetailException(\"Invalid detail after delete. Please retry\");","lastModifiedDate":"2024-01-30"},{"lineNumber":267,"author":{"gitId":"ararchch"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":268,"author":{"gitId":"ararchch"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":269,"author":{"gitId":"ararchch"},"content":"                int num \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":270,"author":{"gitId":"ararchch"},"content":"                Task t \u003d tasks.getItem(num - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":271,"author":{"gitId":"ararchch"},"content":"                tasks.delete(num - 1);","lastModifiedDate":"2024-01-30"},{"lineNumber":272,"author":{"gitId":"ararchch"},"content":"                ui.printTaskDelete(t, tasks.getListSize());","lastModifiedDate":"2024-01-31"},{"lineNumber":273,"author":{"gitId":"ararchch"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":274,"author":{"gitId":"ararchch"},"content":"                throw new InvalidDetailException(\"Invalid detail after delete. Please retry\");","lastModifiedDate":"2024-01-30"},{"lineNumber":275,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":276,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":277,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":278,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":279,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":280,"author":{"gitId":"ararchch"},"content":"     * Handles the marking of the tasks in the tasks list.","lastModifiedDate":"2024-02-02"},{"lineNumber":281,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":282,"author":{"gitId":"ararchch"},"content":"     * @param parts The user input split into parts","lastModifiedDate":"2024-02-02"},{"lineNumber":283,"author":{"gitId":"ararchch"},"content":"     * @param tasks the list of tasks to mark from","lastModifiedDate":"2024-02-02"},{"lineNumber":284,"author":{"gitId":"ararchch"},"content":"     * @param ui the ui object to interact with the user","lastModifiedDate":"2024-02-02"},{"lineNumber":285,"author":{"gitId":"ararchch"},"content":"     * @throws InvalidDetailException if the input does not provide the necessary details","lastModifiedDate":"2024-02-02"},{"lineNumber":286,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":287,"author":{"gitId":"ararchch"},"content":"    public void handleMark(String[] parts, TaskList tasks, Ui ui) throws InvalidDetailException {","lastModifiedDate":"2024-01-31"},{"lineNumber":288,"author":{"gitId":"ararchch"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":289,"author":{"gitId":"ararchch"},"content":"            throw new InvalidDetailException(\"Invalid detail after mark. Please retry\");","lastModifiedDate":"2024-01-30"},{"lineNumber":290,"author":{"gitId":"ararchch"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":291,"author":{"gitId":"ararchch"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":292,"author":{"gitId":"ararchch"},"content":"                int idx \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":293,"author":{"gitId":"ararchch"},"content":"                tasks.mark(idx - 1, true);","lastModifiedDate":"2024-01-30"},{"lineNumber":294,"author":{"gitId":"ararchch"},"content":"                ui.printTaskMark(tasks.getItem(idx - 1), true);","lastModifiedDate":"2024-01-30"},{"lineNumber":295,"author":{"gitId":"ararchch"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":296,"author":{"gitId":"ararchch"},"content":"                throw new InvalidDetailException(\"Invalid detail after mark. Please retry\");","lastModifiedDate":"2024-01-30"},{"lineNumber":297,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":298,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":299,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":300,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":301,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":302,"author":{"gitId":"ararchch"},"content":"     * Handles the unmarking of tasks in the tasks list.","lastModifiedDate":"2024-02-02"},{"lineNumber":303,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":304,"author":{"gitId":"ararchch"},"content":"     * @param parts The user input split into parts","lastModifiedDate":"2024-02-02"},{"lineNumber":305,"author":{"gitId":"ararchch"},"content":"     * @param tasks the list of tasks to unmark from","lastModifiedDate":"2024-02-02"},{"lineNumber":306,"author":{"gitId":"ararchch"},"content":"     * @param ui the ui object to interact with the user","lastModifiedDate":"2024-02-02"},{"lineNumber":307,"author":{"gitId":"ararchch"},"content":"     * @throws InvalidDetailException if the input does not provide the necessary details","lastModifiedDate":"2024-02-02"},{"lineNumber":308,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":309,"author":{"gitId":"ararchch"},"content":"    public void handleUnmark(String[] parts, TaskList tasks, Ui ui) throws InvalidDetailException {","lastModifiedDate":"2024-01-31"},{"lineNumber":310,"author":{"gitId":"ararchch"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2024-01-30"},{"lineNumber":311,"author":{"gitId":"ararchch"},"content":"            throw new InvalidDetailException(\"Invalid detail after unmark. Please retry\");","lastModifiedDate":"2024-01-30"},{"lineNumber":312,"author":{"gitId":"ararchch"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":313,"author":{"gitId":"ararchch"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":314,"author":{"gitId":"ararchch"},"content":"                int idx \u003d Integer.parseInt(parts[1]);","lastModifiedDate":"2024-01-30"},{"lineNumber":315,"author":{"gitId":"ararchch"},"content":"                tasks.mark(idx - 1, false);","lastModifiedDate":"2024-01-30"},{"lineNumber":316,"author":{"gitId":"ararchch"},"content":"                ui.printTaskMark(tasks.getItem(idx - 1), false);","lastModifiedDate":"2024-01-30"},{"lineNumber":317,"author":{"gitId":"ararchch"},"content":"            } catch (Exception e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":318,"author":{"gitId":"ararchch"},"content":"                throw new InvalidDetailException(\"Invalid detail after unmark. Please retry\");","lastModifiedDate":"2024-01-30"},{"lineNumber":319,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":320,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":321,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":322,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":323,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":324,"author":{"gitId":"ararchch"},"content":"     * checks if the user input is equivalent to \u0027bye\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":325,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":326,"author":{"gitId":"ararchch"},"content":"     * @param input user input","lastModifiedDate":"2024-02-02"},{"lineNumber":327,"author":{"gitId":"ararchch"},"content":"     * @return boolean indicating if input is \u0027bye\u0027 or not","lastModifiedDate":"2024-02-02"},{"lineNumber":328,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":329,"author":{"gitId":"ararchch"},"content":"    public boolean checkIsBye(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":330,"author":{"gitId":"ararchch"},"content":"        return input.toLowerCase().equals(\"bye\");","lastModifiedDate":"2024-01-31"},{"lineNumber":331,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":332,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"ararchch":332}},{"path":"src/main/java/yapchit/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.InvalidDetailException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.InvalidKeywordException;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.YapchitException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-30"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":" * Parser class is responsible for parsing input from the user into formats that are easier","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":" * for the program to work with.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"public class Parser {","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"     * constructs new Parser object","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"    public Parser(){","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"     * Accepts input and converts it into one of the existing, handled operations listed in","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"     * the Operations enum.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"     * @param input user input to be parsed","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"     * @return Yapchit.Operations object representing the operation to be performed","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"     * @throws YapchitException if the user input cannot be parsed into one of the existing operations.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"    public Yapchit.Operations parseInputOperation(String input) throws YapchitException {","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"        String[] parts \u003d this.parseInputParts(input);","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"        Yapchit.Operations k;","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"            k \u003d Yapchit.Operations.valueOf(parts[0].toUpperCase());","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"            throw new InvalidKeywordException(\"You have entered an invalid keyword. \" +","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"                    \"Valid keywords are [\u0027mark\u0027, \u0027unmark\u0027, \u0027deadline\u0027, \u0027todo\u0027, \u0027event\u0027, \u0027bye\u0027, \u0027list\u0027, \u0027delete\u0027]\");","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"        return k;","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"     * Wrapper over input.split() method to split string input","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"     * @param input to be parsed into parts","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"     * @return String[] of parsed input","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"    public String[] parseInputParts(String input) {","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"        return input.split(\" \");","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"     * Parses time from yyyy-mm-dd format into Java date object","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"     * @param timestamp date to parse","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"     * @return LocalDate object representing the date","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"     * @throws InvalidDetailException if timestamp is invalid or unable to be parsed","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"    public LocalDate parseTimestamp(String timestamp) throws InvalidDetailException {","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"            LocalDate d \u003d LocalDate.parse(timestamp);","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"            throw new InvalidDetailException(\"Please enter date in yyyy-mm-dd format\");","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"        return LocalDate.parse(timestamp);","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"ararchch":69}},{"path":"src/main/java/yapchit/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import yapchit.tasks.Deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import yapchit.tasks.Event;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import yapchit.tasks.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import yapchit.tasks.ToDo;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.FileListParseException;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.YapchitException;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"import java.io.File;","lastModifiedDate":"2024-01-30"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-30"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":" * Class that handles interactions with the external storage file that maintains the tasks outside","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":" * the yapchit program.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"public class Storage {","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"    private String filePath;","lastModifiedDate":"2024-01-30"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"     * Creates new storage object.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"     * @param filePath FilePath of the external file used to store tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"    public Storage(String filePath){","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"     * Imports existing tasks from file at specified filepath and returns list as a TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"     * @param filePath Path where data is stored.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"     * @param ui User interface object to handle outputs","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"     * @param handler Handler object to handle tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"     * @param parser Parser object to parse input","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"     * @return TaskList containing all tasks in file","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"     * @throws YapchitException if file is not found or corrupted","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"    public TaskList importFromFile(","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"            String filePath, Ui ui, Handler handler, Parser parser) throws YapchitException {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"        Scanner s;","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"            s \u003d new Scanner(f);","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"            throw new FileListParseException(\"Could not locate existing file list\");","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"            String input \u003d s.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"            String[] parts \u003d parser.parseInputParts(input);","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"            try {","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"                Yapchit.Operations k \u003d Yapchit.Operations.valueOf(parts[0].toUpperCase());","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"                handler.handleUpdateListFromFile(input, k, tasks, ui, parser);","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"            } catch (YapchitException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"                throw new FileListParseException(\"Error in parsing file. Some of the contents may be corrupted\");","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"        return tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"     * Updates file at specified path with list of tasks for permanent storage","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"     * @param filePath Path of file to update","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"     * @param tasks List of tasks to update the file with","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"    public void updateFile(String filePath, TaskList tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"        String toWrite \u003d \"\";","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"        for (int i \u003d 0; i \u003c tasks.getListSize(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"            Task t \u003d tasks.getItem(i);","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"            if (t instanceof ToDo) {","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"                toWrite \u003d toWrite + \"todo \"+ t.getName() + (t.getDone() ? \"1\" : \"0\") + \"\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"            if (t instanceof Event) {","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"                toWrite \u003d toWrite","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"                        + \"event \"+ t.getName()","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"                        + \" /from \" + ((Event) t).getFrom()","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"                        + \" /to \" + ((Event) t).getTo()","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"                        +(t.getDone() ? \"1\" : \"0\") + \"\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"            if (t instanceof Deadline) {","lastModifiedDate":"2024-01-30"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"                toWrite \u003d toWrite","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"ararchch"},"content":"                        + \"deadline \"+ t.getName()","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"                        + \" /by \" + ((Deadline) t).getBy()","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"ararchch"},"content":"                        +(t.getDone() ? \"1\" : \"0\") + \"\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":98,"author":{"gitId":"ararchch"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"        File dirCheck \u003d f.getParentFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"        if (!dirCheck.exists()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"ararchch"},"content":"            dirCheck.mkdirs();","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":106,"author":{"gitId":"ararchch"},"content":"        try {","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"ararchch"},"content":"            if (!f.exists()) {","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"ararchch"},"content":"                f.createNewFile();","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-01-30"},{"lineNumber":110,"author":{"gitId":"ararchch"},"content":"        } catch (IOException e){","lastModifiedDate":"2024-01-30"},{"lineNumber":111,"author":{"gitId":"ararchch"},"content":"            Ui.print(\"Error in creating file. \" + e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":112,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":113,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":114,"author":{"gitId":"ararchch"},"content":"        try{","lastModifiedDate":"2024-01-30"},{"lineNumber":115,"author":{"gitId":"ararchch"},"content":"            this.writeToFile(filePath, toWrite);","lastModifiedDate":"2024-01-30"},{"lineNumber":116,"author":{"gitId":"ararchch"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"ararchch"},"content":"            Ui.print(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":118,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"ararchch"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"ararchch"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":124,"author":{"gitId":"ararchch"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"ararchch"},"content":"        fw.close();","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"ararchch":129}},{"path":"src/main/java/yapchit/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import yapchit.tasks.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.InvalidDetailException;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":" * Encapsulates an arraylist of tasks and performs necessary operations to manipulate it.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"public class TaskList {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"     * Initates new TaskList instance.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"     * deletes item from list","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"     * @param idx index of item to delete","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"    public void delete(int idx) {","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"        this.tasks.remove(idx);","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"     * marks item as completed or incomplete","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"     * @param idx item to be marked","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"     * @param isDone boolean","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"     * @throws InvalidDetailException","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"    public void mark(int idx, boolean isDone) throws InvalidDetailException {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"        if (idx \u003e\u003d tasks.size()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"            throw new InvalidDetailException(\"Invalid item index, please try again\");","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"            tasks.get(idx).setDone(isDone);","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"     * adds task to list.","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"     * @param t task to add.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"        tasks.add(t);","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"     * Returns size of list","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"     * @return int: the size of list","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"    public int getListSize() {","lastModifiedDate":"2024-01-30"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"        return this.tasks.size();","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"     * Returns item at specified index in list.","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"     * @param i index of task to locate","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"     * @return Task that is at the specified index","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"    public Task getItem(int i) {","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"        return this.tasks.get(i);","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"    public TaskList findSublist(String term){","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"        TaskList sublist \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"        for(Task task : tasks){","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"            if(task.getName().contains(term)){","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"                sublist.addTask(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"        return sublist;","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"ararchch":83}},{"path":"src/main/java/yapchit/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import yapchit.tasks.Task;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":" * Ui class is responsible for providing an interface to interact with users, including via accepting","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":" * input and outputting updates on the screen.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"public class Ui {","lastModifiedDate":"2024-01-30"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"    Scanner scanner;","lastModifiedDate":"2024-01-30"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"     * Constructor of new Ui instance. Initiates the in built scanner class.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"    public Ui() {","lastModifiedDate":"2024-01-30"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-30"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"     * Wrapper over scanner method to read input from user.","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"     * @return String User input","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"    public String scanInput() {","lastModifiedDate":"2024-01-30"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"        return input;","lastModifiedDate":"2024-01-30"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"     * Prints Yapchit intro message.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"    public void printIntro() {","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"        String intro \u003d \"\\t--------------------------------------------------\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"                + \"\\tHello! I\u0027m Yapchit\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"                + \"\\tWhat can I do for you?\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"                + \"\\t--------------------------------------------------\";","lastModifiedDate":"2024-01-30"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"        print(intro);","lastModifiedDate":"2024-01-30"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"     * Prints Yapchit outro message.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"    public void printOutro() {","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"        String outro \u003d \"\\t--------------------------------------------------\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"                + \"\\tBye. Hope to see you again soon!\\n\"","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"                + \"\\t--------------------------------------------------\";","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"        print(outro);","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"     * Prints error message if there is an issue in loading tasks from existing file.","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"    public void printTasklistLoadError() {","lastModifiedDate":"2024-01-30"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"        print(\"Unable to load existing list from file.\\nThis could be due to corrupted file data or missing file.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"     * Prints message to signal that task has been added to a list.","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"     * @param t    The added task.","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"     * @param size Size of task list to be printed.","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"    public void printTaskAdd(Task t, int size) {","lastModifiedDate":"2024-01-30"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"        Ui.printLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"        print(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"        print(\"\\t\\t\"+ t.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"        String temp \u003d size \u003d\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2024-01-30"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"        print(\"\\tNow you have \" + size +\" \" + temp + \" in the list\");","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"        Ui.printLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"     * Prints message to signal that task has been deleted from a list.","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"     * @param t    The deleted task.","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"     * @param size Size of task list to be printed.","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"    public void printTaskDelete(Task t, int size) {","lastModifiedDate":"2024-01-30"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"        Ui.printLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"        Ui.print(\"\\tNoted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"        Ui.print(\"\\t\\t\" + t.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"        String temp \u003d size \u003d\u003d 1 ? \"task\" : \"tasks\";","lastModifiedDate":"2024-01-30"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"        Ui.print(\"\\tNow you have \" + size +\" \" + temp + \" in the list\");","lastModifiedDate":"2024-01-30"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"        Ui.printLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"     * Prints message to signal that task has been marked or unmarked .","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"     * @param t    The task in question","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"ararchch"},"content":"     * @param isDone Boolean that indicates whether the task is completed or not.","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"ararchch"},"content":"    public void printTaskMark(Task t, boolean isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":96,"author":{"gitId":"ararchch"},"content":"        Ui.printLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":97,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"ararchch"},"content":"        if (isDone) {","lastModifiedDate":"2024-01-30"},{"lineNumber":99,"author":{"gitId":"ararchch"},"content":"            Ui.print(\"\\t\" + \"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":100,"author":{"gitId":"ararchch"},"content":"            Ui.print(\"\\t\\t\" + t.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":101,"author":{"gitId":"ararchch"},"content":"        } else {","lastModifiedDate":"2024-01-30"},{"lineNumber":102,"author":{"gitId":"ararchch"},"content":"            Ui.print(\"\\t\" + \"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-01-30"},{"lineNumber":103,"author":{"gitId":"ararchch"},"content":"            Ui.print(\"\\t\\t\" + t.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":104,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":105,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":106,"author":{"gitId":"ararchch"},"content":"        Ui.printLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":107,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":108,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":109,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"ararchch"},"content":"     * Prints the list of tasks currently stored in the TaskList (both completed or incomplete).","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"ararchch"},"content":"     * @param tasks The TaskList in question.","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"ararchch"},"content":"     * @param message the message to print above the list","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"ararchch"},"content":"    public void printList(TaskList tasks, String message) {","lastModifiedDate":"2024-02-01"},{"lineNumber":116,"author":{"gitId":"ararchch"},"content":"        Ui.printLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":117,"author":{"gitId":"ararchch"},"content":"        Ui.print(\"\\t\" + message);","lastModifiedDate":"2024-02-01"},{"lineNumber":118,"author":{"gitId":"ararchch"},"content":"        for (int i \u003d 0; i \u003c tasks.getListSize(); i++) {","lastModifiedDate":"2024-01-30"},{"lineNumber":119,"author":{"gitId":"ararchch"},"content":"            int idx \u003d i + 1;","lastModifiedDate":"2024-01-30"},{"lineNumber":120,"author":{"gitId":"ararchch"},"content":"            Task item \u003d tasks.getItem(i);","lastModifiedDate":"2024-01-30"},{"lineNumber":121,"author":{"gitId":"ararchch"},"content":"            Ui.print(\"\\t\" + idx + \".\" + item.toString());","lastModifiedDate":"2024-01-30"},{"lineNumber":122,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-30"},{"lineNumber":123,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":124,"author":{"gitId":"ararchch"},"content":"        Ui.printLine();","lastModifiedDate":"2024-01-30"},{"lineNumber":125,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":126,"author":{"gitId":"ararchch"},"content":"    public static void printLine() {","lastModifiedDate":"2024-01-30"},{"lineNumber":127,"author":{"gitId":"ararchch"},"content":"        print(\"\\t--------------------------------------------------\");","lastModifiedDate":"2024-01-30"},{"lineNumber":128,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":129,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"ararchch"},"content":"     * Wrapper over System print functionality for ease of use.","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"ararchch"},"content":"     * @param o Object to be printed.","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"ararchch"},"content":"    public static void print(Object o) {","lastModifiedDate":"2024-01-30"},{"lineNumber":136,"author":{"gitId":"ararchch"},"content":"        System.out.println(o);","lastModifiedDate":"2024-01-30"},{"lineNumber":137,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-30"},{"lineNumber":138,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-30"}],"authorContributionMap":{"ararchch":138}},{"path":"src/main/java/yapchit/Yapchit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.YapchitException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":" * Yapchit is a bot that allows users to create and manage their tasks. The Yapchit class","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":" * is the entry point into the program and encapsulates a number of other classes that","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":" * enable the functionality of Yapchit.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":" * @author Archit Goswami","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":" * @version 1.0","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":" * @since 2024-02-01","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"public class Yapchit {","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"     * List of operations that the Yapchit functionality can handle. Operations","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"     * are keywords that the user can enter as Yapchit input.","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"     * Yapchit additionally stores tasks across restarts.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"    enum Operations {","lastModifiedDate":"2024-01-25"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"        LIST,","lastModifiedDate":"2024-01-25"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"        MARK,","lastModifiedDate":"2024-01-25"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"        UNMARK,","lastModifiedDate":"2024-01-25"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"        DEADLINE,","lastModifiedDate":"2024-01-25"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"        EVENT,","lastModifiedDate":"2024-01-25"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"        TODO,","lastModifiedDate":"2024-01-25"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"        DELETE,","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"        FIND;","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-25"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-30"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-30"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"    private Storage storage;","lastModifiedDate":"2024-01-30"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"    private Parser parser;","lastModifiedDate":"2024-01-30"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"    private Handler handler;","lastModifiedDate":"2024-01-30"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"    private boolean isBye;","lastModifiedDate":"2024-01-30"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"    private String filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"     * Constructor of a Yapchit object. Initiates instance of components of Yapchit and loads","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"     * tasks from existing file (if any).","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"     * @param filePath The file path to the storage file used to keep track of tasks.","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"    public Yapchit(String filePath) {","lastModifiedDate":"2024-01-30"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-01-30"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-01-30"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"        this.isBye \u003d false;","lastModifiedDate":"2024-01-30"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2024-01-30"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"        this.handler \u003d new Handler();","lastModifiedDate":"2024-01-30"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"        try{","lastModifiedDate":"2024-01-24"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"            this.tasks \u003d storage.importFromFile(filePath, ui, handler, parser);","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"        } catch (YapchitException e) {","lastModifiedDate":"2024-01-24"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"            ui.printTasklistLoadError();","lastModifiedDate":"2024-01-30"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2024-01-30"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"     * Initiates core functionality of the bot by running a main loop that harnesses relevant components","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"     * to accept, handle inputs and output a response.","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"     * Main loop ends when the \u0027bye\u0027 command is entered by the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"    public void run() {","lastModifiedDate":"2024-01-30"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"        ui.printIntro();","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"        String input \u003d ui.scanInput();","lastModifiedDate":"2024-01-30"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"        while (!handler.checkIsBye(input)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"            try{","lastModifiedDate":"2024-01-29"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"                Yapchit.Operations k \u003d parser.parseInputOperation(input);","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"                handler.handleOperation(input, k, tasks, ui, parser);","lastModifiedDate":"2024-01-30"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"            } catch (YapchitException e) {","lastModifiedDate":"2024-01-30"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"                Ui.print(e.getMessage());","lastModifiedDate":"2024-01-30"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"            } finally {","lastModifiedDate":"2024-01-30"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"                input \u003d ui.scanInput();","lastModifiedDate":"2024-01-30"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"        storage.updateFile(filePath, this.tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"        ui.printOutro();","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"     * The entry point of the application.","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"     * @param args Command line arguments","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-30"},{"lineNumber":93,"author":{"gitId":"ararchch"},"content":"        Yapchit bot \u003d new Yapchit(\"./src/main/data/dataStore.txt\");","lastModifiedDate":"2024-01-30"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"        bot.run();","lastModifiedDate":"2024-01-30"},{"lineNumber":95,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":96,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":97,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"ararchch":97}},{"path":"src/main/java/yapchit/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-29"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-29"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":" * Deadline class representing a Deadline object.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":" * Extends Task class","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"    private LocalDate by;","lastModifiedDate":"2024-01-29"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"     * Constructor of new Deadline object","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"     * @param name name of Deadline","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    public Deadline(String name, LocalDate by) {","lastModifiedDate":"2024-01-29"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"        super(name);","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"     * Prints the Deadline details onto the screen.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"     * @return","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"        String tag \u003d super.getDone() ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"        return \"[D]\"","lastModifiedDate":"2024-01-29"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"                + tag","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"                + \" \" + super.getName().strip()","lastModifiedDate":"2024-01-29"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"                + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2024-01-29"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"                + \")\";","lastModifiedDate":"2024-01-29"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"     * Getter method which returns the \u0027by\u0027 date of the deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"     * @return LocalDate representing the due date of the deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2024-01-29"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"        return this.by;","lastModifiedDate":"2024-01-29"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ararchch":48}},{"path":"src/main/java/yapchit/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":" * Event class representing a Event object.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":" *","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":" * Extends Task class","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-23"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"    private String from;","lastModifiedDate":"2024-01-24"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"    private String to;","lastModifiedDate":"2024-01-24"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"     * Constructor of new Event object","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"     * @param name name of Event","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    public Event(String name, String from, String to) {","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"        super(name);","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"     * Prints the Event details onto the screen.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"     * @return","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"        String tag \u003d super.getDone() ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"        return \"[E]\" + tag + \" \" + super.getName().strip() + \" (from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2024-01-25"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"     * Getter method which returns the \u0027from\u0027 detail of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"     * @return String representing the \u0027from\u0027 detail of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"    public String getFrom() {","lastModifiedDate":"2024-01-29"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"        return this.from;","lastModifiedDate":"2024-01-29"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"     * Getter method which returns the \u0027to\u0027 detail of the event.","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"     * @return String representing the \u0027to\u0027 detail of the deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"    public String getTo() {","lastModifiedDate":"2024-01-29"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"        return this.to;","lastModifiedDate":"2024-01-29"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-29"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ararchch":52}},{"path":"src/main/java/yapchit/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":" * Task class representing a general task in Yapchit/","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"public class Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"    private String name;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"    private boolean isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"     * Constructor of task class.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"     * @param name name of task to perform","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"    public Task(String name){","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"     * setter function to set the tag of the class based on input.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"     * @param isDone the boolean value to update the tag to","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"    public void setDone(boolean isDone){","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"     * Getter function that returns name of tag","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"     * @return String with name of task","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"    public String getName(){","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"        return this.name;","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"    public boolean getDone(){","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"        return this.isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ararchch":41}},{"path":"src/main/java/yapchit/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.tasks;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":" * ToDo class representing a ToDo object.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":" * Extends Task class","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"public class ToDo extends Task{","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"     * Constructor of new ToDo object","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"     * @param name name of ToDo","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"    public ToDo(String name){","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"        super(name);","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"     * Prints the ToDo details onto the screen.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"     * @return","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"    @Override","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"    public String toString(){","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"        String tag \u003d super.getDone() ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"        return \"[T]\" + tag + \" \" + super.getName();","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ararchch":28}},{"path":"src/main/java/yapchit/yapchitexceptions/FileListParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.yapchitexceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"public class FileListParseException extends YapchitException{","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"    public FileListParseException(String errorMsg){","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"        super(errorMsg);","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"    ","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ararchch":10}},{"path":"src/main/java/yapchit/yapchitexceptions/InvalidDetailException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.yapchitexceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"public class InvalidDetailException extends YapchitException{","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"    public InvalidDetailException(String errorMsg){","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"        super(errorMsg);","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"    ","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ararchch":10}},{"path":"src/main/java/yapchit/yapchitexceptions/InvalidKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.yapchitexceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"public class InvalidKeywordException extends YapchitException{","lastModifiedDate":"2024-01-24"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"    public InvalidKeywordException(String errorMsg){","lastModifiedDate":"2024-01-24"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"        super(errorMsg);","lastModifiedDate":"2024-01-24"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-24"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"    ","lastModifiedDate":"2024-01-24"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-24"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-24"}],"authorContributionMap":{"ararchch":10}},{"path":"src/main/java/yapchit/yapchitexceptions/YapchitException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit.yapchitexceptions;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":" * Special exception class for Yapchit.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"public class YapchitException extends Exception{","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"     * Constuctor of special yapchit excptions. Calls constructor of overall exception class","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"     * @param errorMsg","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"    public YapchitException(String errorMsg){","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"        super(errorMsg);","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ararchch":17}},{"path":"src/test/java/yapchit/HandlerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import yapchit.tasks.Deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.InvalidDetailException;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.YapchitException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"public class HandlerTest {","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"    private Handler handler;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"    private Ui ui;","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"    private Parser parser;","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"    public HandlerTest() {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"        handler \u003d new Handler();","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"    void testHandleDeadlineSuccess() throws YapchitException {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"        String input \u003d \"deadline assignment /by 2023-02-01\";","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"        handler.handleDeadline(input, true, tasks, ui, parser);","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"        Deadline t \u003d new Deadline(\"assignment\", parser.parseTimestamp(\"2023-02-01\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"        assertEquals(t.getName(), tasks.getItem(tasks.getListSize() - 1).getName());","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"        assertEquals(t.getBy(), ((Deadline) tasks.getItem(tasks.getListSize() - 1)).getBy());","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"        input \u003d \"deadline test                          /by 2023-02-28\";","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"        handler.handleDeadline(input, true, tasks, ui, parser);","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"        t \u003d new Deadline(\"test\", parser.parseTimestamp(\"2023-02-28\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"        assertEquals(t.getName(), tasks.getItem(tasks.getListSize() - 1).getName());","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"        assertEquals(t.getBy(), ((Deadline) tasks.getItem(tasks.getListSize() - 1)).getBy());","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"        input \u003d \"deadline test/by 2023-02-28\";","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"        handler.handleDeadline(input, true, tasks, ui, parser);","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"        t \u003d new Deadline(\"test\", parser.parseTimestamp(\"2023-02-28\"));","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"        assertEquals(t.getName(), tasks.getItem(tasks.getListSize() - 1).getName());","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"        assertEquals(t.getBy(), ((Deadline) tasks.getItem(tasks.getListSize() - 1)).getBy());","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"    void testHandleDeadlineMissingDescription() {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"        String input \u003d \"deadline /by 2023-02-28\";","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"        assertThrows(InvalidDetailException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"            handler.handleDeadline(input, true, tasks, ui, parser);","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"    void testHandleDeadlineInvalidDateFormat() {","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"        String input \u003d \"deadline test /by 2023-2-28\";","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"        assertThrows(InvalidDetailException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"            handler.handleDeadline(input, true, tasks, ui, parser);","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"    void testHandleDeadlineIMissingByParam() {","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"        String input \u003d \"deadline test /by\";","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"        assertThrows(InvalidDetailException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"            handler.handleDeadline(input, true, tasks, ui, parser);","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"    void testHandleDeadlineIMissingDescAndByParam() {","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"        String input \u003d \"deadline /by\";","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"        assertThrows(InvalidDetailException.class, () -\u003e {","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"            handler.handleDeadline(input, true, tasks, ui, parser);","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"        });","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"ararchch":79}},{"path":"src/test/java/yapchit/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"package yapchit;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.InvalidKeywordException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"import yapchit.yapchitexceptions.YapchitException;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"ararchch"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"ararchch"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"ararchch"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"ararchch"},"content":"    public ParserTest() {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"ararchch"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"ararchch"},"content":"    void testParseInputOperationSuccess() throws YapchitException {","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"ararchch"},"content":"        String input \u003d \"deadline\";","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"ararchch"},"content":"        Yapchit.Operations op \u003d Yapchit.Operations.DEADLINE;","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"ararchch"},"content":"        assertEquals(op, parser.parseInputOperation(input));","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"ararchch"},"content":"        input \u003d \"todo\";","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"ararchch"},"content":"        op \u003d Yapchit.Operations.TODO;","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"ararchch"},"content":"        assertEquals(op, parser.parseInputOperation(input));","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"ararchch"},"content":"        input \u003d \"event\";","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"ararchch"},"content":"        op \u003d Yapchit.Operations.EVENT;","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"ararchch"},"content":"        assertEquals(op, parser.parseInputOperation(input));","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"ararchch"},"content":"        input \u003d \"mark\";","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"ararchch"},"content":"        op \u003d Yapchit.Operations.MARK;","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"ararchch"},"content":"        assertEquals(op, parser.parseInputOperation(input));","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"ararchch"},"content":"        input \u003d \"unmark\";","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"ararchch"},"content":"        op \u003d Yapchit.Operations.UNMARK;","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"ararchch"},"content":"        assertEquals(op, parser.parseInputOperation(input));","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"ararchch"},"content":"        input \u003d \"list\";","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"ararchch"},"content":"        op \u003d Yapchit.Operations.LIST;","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"ararchch"},"content":"        assertEquals(op, parser.parseInputOperation(input));","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"ararchch"},"content":"        input \u003d \"delete\";","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"ararchch"},"content":"        op \u003d Yapchit.Operations.DELETE;","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"ararchch"},"content":"        assertEquals(op, parser.parseInputOperation(input));","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"ararchch"},"content":"        input \u003d \"Delete\";","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"ararchch"},"content":"        op \u003d Yapchit.Operations.DELETE;","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"ararchch"},"content":"        assertEquals(op, parser.parseInputOperation(input));","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"ararchch"},"content":"        input \u003d \"toDo\";","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"ararchch"},"content":"        op \u003d Yapchit.Operations.TODO;","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"ararchch"},"content":"        assertEquals(op, parser.parseInputOperation(input));","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"ararchch"},"content":"        input \u003d \"MARK\";","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"ararchch"},"content":"        op \u003d Yapchit.Operations.MARK;","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"ararchch"},"content":"        assertEquals(op, parser.parseInputOperation(input));","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"ararchch"},"content":"    void testParseInputMissingInput() {","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"ararchch"},"content":"        String input \u003d \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"ararchch"},"content":"        assertThrows(InvalidKeywordException.class, () -\u003e {","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"ararchch"},"content":"            parser.parseInputOperation(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"ararchch"},"content":"        });","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"ararchch"},"content":"    void testParseInputWrongKeyword() {","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"ararchch"},"content":"        String input \u003d \"blah\";","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"ararchch"},"content":"        assertThrows(InvalidKeywordException.class, () -\u003e {","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"ararchch"},"content":"            parser.parseInputOperation(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"ararchch"},"content":"        });","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"ararchch"},"content":"    void testParseInputSpaceInKeyword() {","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"ararchch"},"content":"        String input \u003d \"dele te\";","lastModifiedDate":"2024-02-01"},{"lineNumber":81,"author":{"gitId":"ararchch"},"content":"        assertThrows(InvalidKeywordException.class, () -\u003e {","lastModifiedDate":"2024-02-01"},{"lineNumber":82,"author":{"gitId":"ararchch"},"content":"            parser.parseInputOperation(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"ararchch"},"content":"        });","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":85,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":86,"author":{"gitId":"ararchch"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":87,"author":{"gitId":"ararchch"},"content":"    void testParseInputInvalidCharacterAfterKeyword() {","lastModifiedDate":"2024-02-01"},{"lineNumber":88,"author":{"gitId":"ararchch"},"content":"        String input \u003d \"mark6\";","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"ararchch"},"content":"        assertThrows(InvalidKeywordException.class, () -\u003e {","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"ararchch"},"content":"            parser.parseInputOperation(input);","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"ararchch"},"content":"        });","lastModifiedDate":"2024-02-01"},{"lineNumber":92,"author":{"gitId":"ararchch"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"ararchch"},"content":"}","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"ararchch"},"content":"","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"ararchch":96}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ararchch"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"ararchch"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"ararchch"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-23"},{"lineNumber":4,"author":{"gitId":"ararchch"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-23"},{"lineNumber":5,"author":{"gitId":"ararchch"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"ararchch"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"ararchch":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"ararchch"},"content":"del ACTUAL.TXT","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ararchch"},"content":"java -classpath ..\\bin yapchit \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"ararchch":2}}]
