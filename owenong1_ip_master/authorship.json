[{"path":"src/main/java/BotBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"public class BotBot {","lastModifiedDate":"2024-01-25"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-25"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"        scanner.useDelimiter(\"\\n\");","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"owenong1"},"content":"        BotBot.greet();","lastModifiedDate":"2024-01-25"},{"lineNumber":10,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"owenong1"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"owenong1"},"content":"            String nextTask \u003d scanner.next();","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"owenong1"},"content":"            BotBot.divider();","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"owenong1"},"content":"            // Logic sequence","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"owenong1"},"content":"            if (nextTask.startsWith(\"bye\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"owenong1"},"content":"                BotBot.exit();","lastModifiedDate":"2024-01-25"},{"lineNumber":17,"author":{"gitId":"owenong1"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"owenong1"},"content":"            } else if (nextTask.startsWith(\"mark\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"owenong1"},"content":"                System.out.println(\"Good job on completing the task:\");","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"owenong1"},"content":"                System.out.println(Integer.parseInt(nextTask.split(\" \", 2)[1]));","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"owenong1"},"content":"                list.mark(Integer.parseInt(nextTask.split(\" \", 2)[1]));","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"owenong1"},"content":"            } else if (nextTask.startsWith(\"unmark\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"owenong1"},"content":"                System.out.println(\"I have unmarked a task:\");","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"owenong1"},"content":"                list.unmark(Integer.parseInt(nextTask.split(\" \", 2)[1]));","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"owenong1"},"content":"            } else if (nextTask.startsWith(\"list\")) {","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"owenong1"},"content":"                System.out.println(\"These are the tasks in your list:\");","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"owenong1"},"content":"                list.printList();","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"owenong1"},"content":"            } else {","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"owenong1"},"content":"                list.addTask(nextTask);","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"owenong1"},"content":"            }","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"owenong1"},"content":"            BotBot.divider();","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"owenong1"},"content":"        scanner.close();","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"owenong1"},"content":"    // Print functionalities","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"owenong1"},"content":"    private static void print(String string) {","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"owenong1"},"content":"        System.out.println(string);","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":40,"author":{"gitId":"owenong1"},"content":"    private static void divider() {","lastModifiedDate":"2024-01-25"},{"lineNumber":41,"author":{"gitId":"owenong1"},"content":"        BotBot.print(\"########################################\");","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":43,"author":{"gitId":"owenong1"},"content":"    public static void greet() {","lastModifiedDate":"2024-01-25"},{"lineNumber":44,"author":{"gitId":"owenong1"},"content":"        BotBot.divider();","lastModifiedDate":"2024-01-25"},{"lineNumber":45,"author":{"gitId":"owenong1"},"content":"        BotBot.print(\"I am BotBot!\\nWhat can I do for you?\");","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"owenong1"},"content":"        BotBot.divider();","lastModifiedDate":"2024-01-25"},{"lineNumber":47,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":48,"author":{"gitId":"owenong1"},"content":"    public static void exit() {","lastModifiedDate":"2024-01-25"},{"lineNumber":49,"author":{"gitId":"owenong1"},"content":"        BotBot.print(\"Goodbye! See you soon!\");","lastModifiedDate":"2024-01-26"},{"lineNumber":50,"author":{"gitId":"owenong1"},"content":"        BotBot.divider();","lastModifiedDate":"2024-01-25"},{"lineNumber":51,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-25"},{"lineNumber":52,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":53,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-01-25"}],"authorContributionMap":{"owenong1":53}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"    String dueDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"    public Deadline(String task, String dueDate) {","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"        super(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":"    public String getRep() {","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"owenong1"},"content":"        return String.format(\"[D]%s (by:%s)\", super.getRep(), this.dueDate);","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"owenong1":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"public class Event extends Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"    String from;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"    String to;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"    public Event(String task, String from, String to) {","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"        super(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"owenong1"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"owenong1"},"content":"    public String getRep() {","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"owenong1"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.getRep(), this.from, this.to);","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"owenong1":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"    String taskName;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"    Boolean done \u003d false;","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"    public Task(String task) {","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"        this.taskName \u003d task;","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":"    public String getName() {","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"owenong1"},"content":"        return this.taskName;","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"owenong1"},"content":"    public void mark() {","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"owenong1"},"content":"        this.done \u003d true;","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"owenong1"},"content":"    public void unmark() { this.done \u003d false; }","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"owenong1"},"content":"    public String getRep() {","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"owenong1"},"content":"        // Returns representation of the task (including done)","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"owenong1"},"content":"        String doneChar \u003d (this.done) ? \"X\" : \" \";","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"owenong1"},"content":"        return String.format(\"[%s] %s\", doneChar, this.taskName);","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"owenong1":20}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"public class TaskList {","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"    ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"    public void addTask(String taskString) {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"        String[] temp \u003d taskString.split(\" \", 2);","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":"        String taskType \u003d temp[0];","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"owenong1"},"content":"        String taskInfo \u003d temp.length \u003e 1 ? temp[1] : \"\";","lastModifiedDate":"2024-01-26"},{"lineNumber":10,"author":{"gitId":"owenong1"},"content":"        switch (taskType) {","lastModifiedDate":"2024-01-26"},{"lineNumber":11,"author":{"gitId":"owenong1"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-26"},{"lineNumber":12,"author":{"gitId":"owenong1"},"content":"                addTask(new ToDo(taskInfo));","lastModifiedDate":"2024-01-26"},{"lineNumber":13,"author":{"gitId":"owenong1"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":14,"author":{"gitId":"owenong1"},"content":"            case \"deadline\":","lastModifiedDate":"2024-01-26"},{"lineNumber":15,"author":{"gitId":"owenong1"},"content":"                String[] temp2 \u003d taskInfo.split(\" /\", 2);","lastModifiedDate":"2024-01-26"},{"lineNumber":16,"author":{"gitId":"owenong1"},"content":"                addTask(new Deadline(temp2[0], temp2[1].substring(3)));","lastModifiedDate":"2024-01-26"},{"lineNumber":17,"author":{"gitId":"owenong1"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":18,"author":{"gitId":"owenong1"},"content":"            case \"event\":","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"owenong1"},"content":"                String[] temp3 \u003d taskInfo.split(\" /\", 3);","lastModifiedDate":"2024-01-26"},{"lineNumber":20,"author":{"gitId":"owenong1"},"content":"                addTask(new Event(temp3[0], temp3[1].substring(5), temp3[2].substring(3)));","lastModifiedDate":"2024-01-26"},{"lineNumber":21,"author":{"gitId":"owenong1"},"content":"                break;","lastModifiedDate":"2024-01-26"},{"lineNumber":22,"author":{"gitId":"owenong1"},"content":"            // can account for errors here","lastModifiedDate":"2024-01-26"},{"lineNumber":23,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":24,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":25,"author":{"gitId":"owenong1"},"content":"    private Task getTask(int i) {","lastModifiedDate":"2024-01-26"},{"lineNumber":26,"author":{"gitId":"owenong1"},"content":"        return this.list.get(i);","lastModifiedDate":"2024-01-26"},{"lineNumber":27,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":28,"author":{"gitId":"owenong1"},"content":"    private void addTask(Task task) {","lastModifiedDate":"2024-01-26"},{"lineNumber":29,"author":{"gitId":"owenong1"},"content":"        System.out.printf(\"I have added the following task:\\n%s\\n\", task.getRep());","lastModifiedDate":"2024-01-26"},{"lineNumber":30,"author":{"gitId":"owenong1"},"content":"        this.list.add(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":31,"author":{"gitId":"owenong1"},"content":"        System.out.printf(\"You now have %d task(s) in your list!%n\", list.size());","lastModifiedDate":"2024-01-26"},{"lineNumber":32,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":33,"author":{"gitId":"owenong1"},"content":"    public void printList() {","lastModifiedDate":"2024-01-26"},{"lineNumber":34,"author":{"gitId":"owenong1"},"content":"        for (int i \u003d 1; i \u003c this.list.size() + 1; i++) {","lastModifiedDate":"2024-01-26"},{"lineNumber":35,"author":{"gitId":"owenong1"},"content":"            System.out.println(i + \". \" + getTask(i - 1).getRep());","lastModifiedDate":"2024-01-26"},{"lineNumber":36,"author":{"gitId":"owenong1"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":37,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":38,"author":{"gitId":"owenong1"},"content":"    public void mark(int i) {","lastModifiedDate":"2024-01-26"},{"lineNumber":39,"author":{"gitId":"owenong1"},"content":"        Task task \u003d getTask(i - 1);","lastModifiedDate":"2024-01-26"},{"lineNumber":40,"author":{"gitId":"owenong1"},"content":"        task.mark();","lastModifiedDate":"2024-01-26"},{"lineNumber":41,"author":{"gitId":"owenong1"},"content":"        System.out.println(task.getRep());","lastModifiedDate":"2024-01-26"},{"lineNumber":42,"author":{"gitId":"owenong1"},"content":"    } // Handle index exception here maybe","lastModifiedDate":"2024-01-26"},{"lineNumber":43,"author":{"gitId":"owenong1"},"content":"    public void unmark(int i) {","lastModifiedDate":"2024-01-26"},{"lineNumber":44,"author":{"gitId":"owenong1"},"content":"        Task task \u003d getTask(i - 1);","lastModifiedDate":"2024-01-26"},{"lineNumber":45,"author":{"gitId":"owenong1"},"content":"        task.unmark();","lastModifiedDate":"2024-01-26"},{"lineNumber":46,"author":{"gitId":"owenong1"},"content":"        System.out.println(task.getRep());","lastModifiedDate":"2024-01-26"},{"lineNumber":47,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":48,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"owenong1":48}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"public class ToDo extends Task{","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"    public ToDo(String task) {","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"        super(task);","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"    @Override","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"    public String getRep() {","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"        return \"[T]\" + super.getRep();","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":9,"author":{"gitId":"owenong1"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"owenong1":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"owenong1"},"content":"todo borrow book","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"owenong1"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-26"},{"lineNumber":3,"author":{"gitId":"owenong1"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-26"},{"lineNumber":4,"author":{"gitId":"owenong1"},"content":"todo eat","lastModifiedDate":"2024-01-26"},{"lineNumber":5,"author":{"gitId":"owenong1"},"content":"todo have fun","lastModifiedDate":"2024-01-26"},{"lineNumber":6,"author":{"gitId":"owenong1"},"content":"mark 1","lastModifiedDate":"2024-01-26"},{"lineNumber":7,"author":{"gitId":"owenong1"},"content":"list","lastModifiedDate":"2024-01-26"},{"lineNumber":8,"author":{"gitId":"owenong1"},"content":"bye","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"owenong1":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"owenong1"},"content":"java -classpath ..\\bin BotBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"owenong1":1,"-":20}}]
