[{"path":"src/main/java/data/hirwan.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":". [T][ ] jafj","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":". [T][ ] fa","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":". [T][ ] faj","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":". [T][ ] schwork","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":". [T][X] workformhoem","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Alteqa":5}},{"path":"src/main/java/hirwan/Hirwan.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"package hirwan;","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"import java.io.*;","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"import java.util.List;","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":" * The chatbots main class which simulates talking to a virtual assistant","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Alteqa"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"public class Hirwan {","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"    static final String FILE_PATH \u003d","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Alteqa"},"content":"            \"C:\\\\Users\\\\eugen\\\\Documents\\\\National University of Singapore\\\\Y2S2\\\\CS2103T\\\\IP\\\\src\\\\main\\\\java\\\\data\\\\hirwan.txt\";","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"     * The main method of the program. This method is the entry point","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"     * when the program is executed.","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"     * @param args Command-line arguments passed to the program.","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Alteqa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Alteqa"},"content":"        String logo \u003d \"I\u0027m hirwan \\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Alteqa"},"content":"                + \"_________________________________\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":"                + \"what can I do for you? \\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"                + \"_________________________________\\n\";","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Alteqa"},"content":"        Ui.output(\"Hello! \" + logo);","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Alteqa"},"content":"        Tasklist tasks \u003d new Tasklist(Storage.read());","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Alteqa"},"content":"        try (BufferedWriter fileWrite \u003d new BufferedWriter(new FileWriter(FILE_PATH, true))) {","lastModifiedDate":"2024-02-03"},{"lineNumber":34,"author":{"gitId":"Alteqa"},"content":"            while (true) {","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Alteqa"},"content":"                String text \u003d Ui.input();","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Alteqa"},"content":"                int input \u003d Parser.translate(text);","lastModifiedDate":"2024-02-03"},{"lineNumber":37,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Alteqa"},"content":"                if (input \u003d\u003d 8) {","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Alteqa"},"content":"                    break;","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Alteqa"},"content":"                } else if (input \u003d\u003d 1) {","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Alteqa"},"content":"                    tasks.printList();","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Alteqa"},"content":"                } else if (input \u003d\u003d 2) {","lastModifiedDate":"2024-02-03"},{"lineNumber":43,"author":{"gitId":"Alteqa"},"content":"                    try {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Alteqa"},"content":"                        Ui.output(\"Got it. I\u0027ve added this task: \\n  \" + \"[T][ ] \"","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Alteqa"},"content":"                                + text.substring(5));","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Alteqa"},"content":"                        tasks.add(\". \" + \"[T][ ] \" + text.substring(5));","lastModifiedDate":"2024-02-03"},{"lineNumber":47,"author":{"gitId":"Alteqa"},"content":"                        Ui.output(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Alteqa"},"content":"                        Storage.writeTask(tasks.getList());","lastModifiedDate":"2024-02-03"},{"lineNumber":49,"author":{"gitId":"Alteqa"},"content":"                    } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Alteqa"},"content":"                        Ui.output(\"Error: Please enter a description for your todo command\");","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Alteqa"},"content":"                    }","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Alteqa"},"content":"                } else if (input \u003d\u003d 3) {","lastModifiedDate":"2024-02-03"},{"lineNumber":53,"author":{"gitId":"Alteqa"},"content":"                    try {","lastModifiedDate":"2024-02-03"},{"lineNumber":54,"author":{"gitId":"Alteqa"},"content":"                        String delimiter \u003d \" /by\";","lastModifiedDate":"2024-02-03"},{"lineNumber":55,"author":{"gitId":"Alteqa"},"content":"                        int index \u003d text.indexOf(delimiter);","lastModifiedDate":"2024-02-03"},{"lineNumber":56,"author":{"gitId":"Alteqa"},"content":"                        String Day \u003d text.substring(index + 5);","lastModifiedDate":"2024-02-03"},{"lineNumber":57,"author":{"gitId":"Alteqa"},"content":"                        String item \u003d text.substring(9, index);","lastModifiedDate":"2024-02-03"},{"lineNumber":58,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":59,"author":{"gitId":"Alteqa"},"content":"                        LocalDateTime dayDate \u003d translateDate(Day);","lastModifiedDate":"2024-02-03"},{"lineNumber":60,"author":{"gitId":"Alteqa"},"content":"                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d \u0027of\u0027 MMMM yyyy, ha\");","lastModifiedDate":"2024-02-03"},{"lineNumber":61,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":62,"author":{"gitId":"Alteqa"},"content":"                        tasks.add(\". \" + \"[D][ ] \" + item + \" (by: \" + dayDate.format(formatter) + \")\");","lastModifiedDate":"2024-02-03"},{"lineNumber":63,"author":{"gitId":"Alteqa"},"content":"                        Ui.output(\"Got it. I\u0027ve added this task:\\n  \" + \"[D][ ] \" + item + \" (by: \"","lastModifiedDate":"2024-02-03"},{"lineNumber":64,"author":{"gitId":"Alteqa"},"content":"                                + dayDate.format(formatter) + \")\");","lastModifiedDate":"2024-02-03"},{"lineNumber":65,"author":{"gitId":"Alteqa"},"content":"                        Ui.output(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":66,"author":{"gitId":"Alteqa"},"content":"                    } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":67,"author":{"gitId":"Alteqa"},"content":"                        Ui.output(\"Error: Please enter a description or date for your deadline command\");","lastModifiedDate":"2024-02-03"},{"lineNumber":68,"author":{"gitId":"Alteqa"},"content":"                    }","lastModifiedDate":"2024-02-03"},{"lineNumber":69,"author":{"gitId":"Alteqa"},"content":"                } else if (input \u003d\u003d 4) {","lastModifiedDate":"2024-02-03"},{"lineNumber":70,"author":{"gitId":"Alteqa"},"content":"                    try {","lastModifiedDate":"2024-02-03"},{"lineNumber":71,"author":{"gitId":"Alteqa"},"content":"                        String delimiterstart \u003d \" /from\";","lastModifiedDate":"2024-02-03"},{"lineNumber":72,"author":{"gitId":"Alteqa"},"content":"                        String delimiterend \u003d \" /to\";","lastModifiedDate":"2024-02-03"},{"lineNumber":73,"author":{"gitId":"Alteqa"},"content":"                        int indexStart \u003d text.indexOf(delimiterstart);","lastModifiedDate":"2024-02-03"},{"lineNumber":74,"author":{"gitId":"Alteqa"},"content":"                        int indexEnd \u003d text.indexOf(delimiterend);","lastModifiedDate":"2024-02-03"},{"lineNumber":75,"author":{"gitId":"Alteqa"},"content":"                        String start \u003d text.substring(indexStart + 7, indexEnd);","lastModifiedDate":"2024-02-03"},{"lineNumber":76,"author":{"gitId":"Alteqa"},"content":"                        String end \u003d text.substring(indexEnd + 5);","lastModifiedDate":"2024-02-03"},{"lineNumber":77,"author":{"gitId":"Alteqa"},"content":"                        String item \u003d text.substring(6, indexStart);","lastModifiedDate":"2024-02-03"},{"lineNumber":78,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":79,"author":{"gitId":"Alteqa"},"content":"                        LocalDateTime startDate \u003d translateDate(start);","lastModifiedDate":"2024-02-03"},{"lineNumber":80,"author":{"gitId":"Alteqa"},"content":"                        LocalDateTime endDate \u003d translateDate(end);","lastModifiedDate":"2024-02-03"},{"lineNumber":81,"author":{"gitId":"Alteqa"},"content":"                        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d \u0027of\u0027 MMMM yyyy, ha\");","lastModifiedDate":"2024-02-03"},{"lineNumber":82,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":83,"author":{"gitId":"Alteqa"},"content":"                        tasks.add(\". \" + \"[E][ ] \" + item + \" (from: \" + startDate.format(formatter) + \" to: \"","lastModifiedDate":"2024-02-03"},{"lineNumber":84,"author":{"gitId":"Alteqa"},"content":"                                + endDate.format(formatter) + \")\");","lastModifiedDate":"2024-02-03"},{"lineNumber":85,"author":{"gitId":"Alteqa"},"content":"                        Ui.output(\"Got it. I\u0027ve added this task:\\n  \" + \"[E][ ] \" + item + \" (from: \"","lastModifiedDate":"2024-02-03"},{"lineNumber":86,"author":{"gitId":"Alteqa"},"content":"                                + startDate.format(formatter) + \" to: \" + endDate.format(formatter) + \")\");","lastModifiedDate":"2024-02-03"},{"lineNumber":87,"author":{"gitId":"Alteqa"},"content":"                        Ui.output(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":88,"author":{"gitId":"Alteqa"},"content":"                        Storage.writeTask(tasks.getList());","lastModifiedDate":"2024-02-03"},{"lineNumber":89,"author":{"gitId":"Alteqa"},"content":"                    } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":90,"author":{"gitId":"Alteqa"},"content":"                        Ui.output(\"Error: Please enter a description or date for your event to command\");","lastModifiedDate":"2024-02-03"},{"lineNumber":91,"author":{"gitId":"Alteqa"},"content":"                    }","lastModifiedDate":"2024-02-03"},{"lineNumber":92,"author":{"gitId":"Alteqa"},"content":"                } else if (input \u003d\u003d 5) {","lastModifiedDate":"2024-02-03"},{"lineNumber":93,"author":{"gitId":"Alteqa"},"content":"                    try {","lastModifiedDate":"2024-02-03"},{"lineNumber":94,"author":{"gitId":"Alteqa"},"content":"                        String number \u003d text.substring(5);","lastModifiedDate":"2024-02-03"},{"lineNumber":95,"author":{"gitId":"Alteqa"},"content":"                        int numberint \u003d Integer.parseInt(number);","lastModifiedDate":"2024-02-03"},{"lineNumber":96,"author":{"gitId":"Alteqa"},"content":"                        String temp \u003d tasks.get(numberint - 1).substring(9);","lastModifiedDate":"2024-02-03"},{"lineNumber":97,"author":{"gitId":"Alteqa"},"content":"                        String type \u003d tasks.get(numberint - 1).substring(2, 5);","lastModifiedDate":"2024-02-03"},{"lineNumber":98,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":99,"author":{"gitId":"Alteqa"},"content":"                        tasks.set(numberint - 1, \". \" + type + \"[X] \" + temp);","lastModifiedDate":"2024-02-03"},{"lineNumber":100,"author":{"gitId":"Alteqa"},"content":"                        Ui.output(\"Nice! I\u0027ve marked this task as done: \\n\" + \"[X] \" + temp);","lastModifiedDate":"2024-02-03"},{"lineNumber":101,"author":{"gitId":"Alteqa"},"content":"                        Storage.writeTask(tasks.getList());","lastModifiedDate":"2024-02-03"},{"lineNumber":102,"author":{"gitId":"Alteqa"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":103,"author":{"gitId":"Alteqa"},"content":"                        Ui.output(\"Error: Please enter a valid index for marking!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":104,"author":{"gitId":"Alteqa"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":105,"author":{"gitId":"Alteqa"},"content":"                        Ui.output(\"Error: Please enter a numerical index to mark!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":106,"author":{"gitId":"Alteqa"},"content":"                    }","lastModifiedDate":"2024-02-03"},{"lineNumber":107,"author":{"gitId":"Alteqa"},"content":"                } else if (input \u003d\u003d 6) {","lastModifiedDate":"2024-02-03"},{"lineNumber":108,"author":{"gitId":"Alteqa"},"content":"                    try {","lastModifiedDate":"2024-02-03"},{"lineNumber":109,"author":{"gitId":"Alteqa"},"content":"                        String number \u003d text.substring(7);","lastModifiedDate":"2024-02-03"},{"lineNumber":110,"author":{"gitId":"Alteqa"},"content":"                        int numberInt \u003d Integer.parseInt(number);","lastModifiedDate":"2024-02-03"},{"lineNumber":111,"author":{"gitId":"Alteqa"},"content":"                        String temp \u003d tasks.get(numberInt - 1).substring(9);","lastModifiedDate":"2024-02-03"},{"lineNumber":112,"author":{"gitId":"Alteqa"},"content":"                        String type \u003d tasks.get(numberInt - 1).substring(2, 5);","lastModifiedDate":"2024-02-03"},{"lineNumber":113,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":114,"author":{"gitId":"Alteqa"},"content":"                        tasks.set(numberInt - 1, \". \" + type + \"[ ] \" + temp);","lastModifiedDate":"2024-02-03"},{"lineNumber":115,"author":{"gitId":"Alteqa"},"content":"                        Ui.output(\"OK, I\u0027ve marked this task as not done yet: \\n\" + \"[ ] \" + temp);","lastModifiedDate":"2024-02-03"},{"lineNumber":116,"author":{"gitId":"Alteqa"},"content":"                        Storage.writeTask(tasks.getList());","lastModifiedDate":"2024-02-03"},{"lineNumber":117,"author":{"gitId":"Alteqa"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":118,"author":{"gitId":"Alteqa"},"content":"                        Ui.output(\"Error: Please enter a valid index for unmarking!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":119,"author":{"gitId":"Alteqa"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":120,"author":{"gitId":"Alteqa"},"content":"                        Ui.output(\"Error: Please enter a numerical index to unmark!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":121,"author":{"gitId":"Alteqa"},"content":"                    }","lastModifiedDate":"2024-02-03"},{"lineNumber":122,"author":{"gitId":"Alteqa"},"content":"                } else if (input \u003d\u003d 7) {","lastModifiedDate":"2024-02-03"},{"lineNumber":123,"author":{"gitId":"Alteqa"},"content":"                    try {","lastModifiedDate":"2024-02-03"},{"lineNumber":124,"author":{"gitId":"Alteqa"},"content":"                        int numberInt \u003d Integer.parseInt(text.substring(7)) - 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":125,"author":{"gitId":"Alteqa"},"content":"                        Ui.output(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":126,"author":{"gitId":"Alteqa"},"content":"                                + \"  \" + tasks.get(numberInt).substring(2) + \"\\n\"","lastModifiedDate":"2024-02-03"},{"lineNumber":127,"author":{"gitId":"Alteqa"},"content":"                                + \"Now you have \" + (tasks.size() - 1) + \" tasks in the list.\");","lastModifiedDate":"2024-02-03"},{"lineNumber":128,"author":{"gitId":"Alteqa"},"content":"                        tasks.delete(numberInt);","lastModifiedDate":"2024-02-03"},{"lineNumber":129,"author":{"gitId":"Alteqa"},"content":"                        Storage.writeTask(tasks.getList());","lastModifiedDate":"2024-02-03"},{"lineNumber":130,"author":{"gitId":"Alteqa"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":131,"author":{"gitId":"Alteqa"},"content":"                        Ui.output(\"Error: Please enter a valid index for deletion!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":132,"author":{"gitId":"Alteqa"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":133,"author":{"gitId":"Alteqa"},"content":"                        Ui.output(\"Error: Please enter a numerical index to delete!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":134,"author":{"gitId":"Alteqa"},"content":"                    }","lastModifiedDate":"2024-02-03"},{"lineNumber":135,"author":{"gitId":"Alteqa"},"content":"                } else if (input \u003d\u003d 10) {","lastModifiedDate":"2024-02-03"},{"lineNumber":136,"author":{"gitId":"Alteqa"},"content":"                    List\u003cInteger\u003e indexes \u003d Hirwan.searchWord(text.substring(5), tasks.getList());","lastModifiedDate":"2024-02-03"},{"lineNumber":137,"author":{"gitId":"Alteqa"},"content":"                    Hirwan.printSearchResults(indexes, tasks.getList());","lastModifiedDate":"2024-02-03"},{"lineNumber":138,"author":{"gitId":"Alteqa"},"content":"                } else if (input \u003d\u003d 9) {","lastModifiedDate":"2024-02-03"},{"lineNumber":139,"author":{"gitId":"Alteqa"},"content":"                    Ui.output(\"Error: I am sorry but I do not recognise this command\");","lastModifiedDate":"2024-02-03"},{"lineNumber":140,"author":{"gitId":"Alteqa"},"content":"                }","lastModifiedDate":"2024-02-03"},{"lineNumber":141,"author":{"gitId":"Alteqa"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":142,"author":{"gitId":"Alteqa"},"content":"            Ui.output(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":143,"author":{"gitId":"Alteqa"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-03"},{"lineNumber":144,"author":{"gitId":"Alteqa"},"content":"            System.out.print(e.getMessage());","lastModifiedDate":"2024-02-03"},{"lineNumber":145,"author":{"gitId":"Alteqa"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":146,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":147,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":148,"author":{"gitId":"Alteqa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":149,"author":{"gitId":"Alteqa"},"content":"     * Translates the string given into a LocalDateTime instance by taking in the string and formatting the date and","lastModifiedDate":"2024-02-03"},{"lineNumber":150,"author":{"gitId":"Alteqa"},"content":"     * time then return the LocalDateTime instance","lastModifiedDate":"2024-02-03"},{"lineNumber":151,"author":{"gitId":"Alteqa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":152,"author":{"gitId":"Alteqa"},"content":"     * @param date Date to be converted into LocalDateTime instance","lastModifiedDate":"2024-02-03"},{"lineNumber":153,"author":{"gitId":"Alteqa"},"content":"     * @return The translated LocalDateTime instance","lastModifiedDate":"2024-02-03"},{"lineNumber":154,"author":{"gitId":"Alteqa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":155,"author":{"gitId":"Alteqa"},"content":"    public static LocalDateTime translateDate(String date) {","lastModifiedDate":"2024-02-03"},{"lineNumber":156,"author":{"gitId":"Alteqa"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2024-02-03"},{"lineNumber":157,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":158,"author":{"gitId":"Alteqa"},"content":"        LocalDateTime dateStored \u003d LocalDateTime.parse(date, formatter);","lastModifiedDate":"2024-02-03"},{"lineNumber":159,"author":{"gitId":"Alteqa"},"content":"        return dateStored;","lastModifiedDate":"2024-02-03"},{"lineNumber":160,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":161,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":162,"author":{"gitId":"Alteqa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":163,"author":{"gitId":"Alteqa"},"content":"     * The method to search the tasks list to check if each element contains the search word","lastModifiedDate":"2024-02-03"},{"lineNumber":164,"author":{"gitId":"Alteqa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":165,"author":{"gitId":"Alteqa"},"content":"     * @param word The search word to be found","lastModifiedDate":"2024-02-03"},{"lineNumber":166,"author":{"gitId":"Alteqa"},"content":"     * @return the list of indexes of tasks that contain the search word","lastModifiedDate":"2024-02-03"},{"lineNumber":167,"author":{"gitId":"Alteqa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":168,"author":{"gitId":"Alteqa"},"content":"    public static List\u003cInteger\u003e searchWord(String word, List\u003cString\u003e tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":169,"author":{"gitId":"Alteqa"},"content":"        List\u003cInteger\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":170,"author":{"gitId":"Alteqa"},"content":"        for (String element : tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":171,"author":{"gitId":"Alteqa"},"content":"            if (element.contains(word)) {","lastModifiedDate":"2024-02-03"},{"lineNumber":172,"author":{"gitId":"Alteqa"},"content":"                indexes.add(tasks.indexOf(element));","lastModifiedDate":"2024-02-03"},{"lineNumber":173,"author":{"gitId":"Alteqa"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":174,"author":{"gitId":"Alteqa"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":175,"author":{"gitId":"Alteqa"},"content":"        return indexes;","lastModifiedDate":"2024-02-03"},{"lineNumber":176,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":177,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":178,"author":{"gitId":"Alteqa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":179,"author":{"gitId":"Alteqa"},"content":"     * The print search result method that prints the list of search results from the tasklist","lastModifiedDate":"2024-02-03"},{"lineNumber":180,"author":{"gitId":"Alteqa"},"content":"     * that match the search term","lastModifiedDate":"2024-02-03"},{"lineNumber":181,"author":{"gitId":"Alteqa"},"content":"     *","lastModifiedDate":"2024-02-03"},{"lineNumber":182,"author":{"gitId":"Alteqa"},"content":"     * @param indexes the list of indexes of items in the tasklist that having matching substrings to the search term","lastModifiedDate":"2024-02-03"},{"lineNumber":183,"author":{"gitId":"Alteqa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":184,"author":{"gitId":"Alteqa"},"content":"    public static void printSearchResults(List\u003cInteger\u003e indexes, List\u003cString\u003e tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":185,"author":{"gitId":"Alteqa"},"content":"        Ui.output(\"Here are the results of your search in the tasklist:\\n\");","lastModifiedDate":"2024-02-03"},{"lineNumber":186,"author":{"gitId":"Alteqa"},"content":"        if (indexes.size() \u003d\u003d 0) {","lastModifiedDate":"2024-02-03"},{"lineNumber":187,"author":{"gitId":"Alteqa"},"content":"            Ui.output(\"There are no matching tasks with the search word!\");","lastModifiedDate":"2024-02-03"},{"lineNumber":188,"author":{"gitId":"Alteqa"},"content":"        } else {","lastModifiedDate":"2024-02-03"},{"lineNumber":189,"author":{"gitId":"Alteqa"},"content":"            for (int index : indexes) {","lastModifiedDate":"2024-02-03"},{"lineNumber":190,"author":{"gitId":"Alteqa"},"content":"                Ui.output((index + 1) + tasks.get(index));","lastModifiedDate":"2024-02-03"},{"lineNumber":191,"author":{"gitId":"Alteqa"},"content":"            }","lastModifiedDate":"2024-02-03"},{"lineNumber":192,"author":{"gitId":"Alteqa"},"content":"        }","lastModifiedDate":"2024-02-03"},{"lineNumber":193,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":194,"author":{"gitId":"Alteqa"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Alteqa":194}},{"path":"src/main/java/hirwan/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"package hirwan;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"import java.io.*;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Alteqa"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Alteqa"},"content":" * The parser class which deals with all functionality related to interpreting the users command into the correct action","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"class Parser {","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Alteqa"},"content":"    static final int COMMAND_LIST \u003d 1;","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"    static final int TASK_TODO \u003d 2;","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":"    static final int TASK_DEADLINE \u003d 3;","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"    static final int TASK_EVENT  \u003d 4;","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"    static final int COMMAND_MARK \u003d 5;","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"    static final int COMMAND_UNMARK \u003d 6;","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"    static final int COMMAND_DELETE \u003d 7;","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Alteqa"},"content":"    static final int COMMAND_BYE \u003d 8;","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"    static final int COMMAND_FIND \u003d 10;","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":25,"author":{"gitId":"Alteqa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":"     * The Translate method that takes in the command to be translated into an int representing the action to be carried","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"     * out by the hirwan chatbot","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Alteqa"},"content":"     * @param text The command to be interpreted by the chatbot and which is inputted by the user","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Alteqa"},"content":"     * @return An integer representing the command to be carried out by the hirwan chatbot that is parsed into the","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Alteqa"},"content":"     * hirwan class","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Alteqa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"    public static int translate(String text) {","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Alteqa"},"content":"        if (text.equals(\"list\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"Alteqa"},"content":"            return COMMAND_LIST;","lastModifiedDate":"2024-02-03"},{"lineNumber":36,"author":{"gitId":"Alteqa"},"content":"        } else if (text.startsWith(\"todo\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Alteqa"},"content":"            return TASK_TODO;","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Alteqa"},"content":"        } else if (text.startsWith(\"deadline\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"Alteqa"},"content":"            return TASK_DEADLINE;","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Alteqa"},"content":"        } else if (text.startsWith(\"event\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"Alteqa"},"content":"            return TASK_EVENT;","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Alteqa"},"content":"        } else if (text.startsWith(\"mark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Alteqa"},"content":"            return COMMAND_MARK;","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Alteqa"},"content":"        } else if (text.startsWith(\"unmark\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"Alteqa"},"content":"            return COMMAND_UNMARK;","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Alteqa"},"content":"        } else if (text.startsWith(\"delete\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"Alteqa"},"content":"            return COMMAND_DELETE;","lastModifiedDate":"2024-02-03"},{"lineNumber":48,"author":{"gitId":"Alteqa"},"content":"        } else if (text.equals(\"bye\")) {","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"Alteqa"},"content":"            return COMMAND_BYE;","lastModifiedDate":"2024-02-03"},{"lineNumber":50,"author":{"gitId":"Alteqa"},"content":"        } else if (text.startsWith(\"find \")) {","lastModifiedDate":"2024-02-03"},{"lineNumber":51,"author":{"gitId":"Alteqa"},"content":"            return COMMAND_FIND;","lastModifiedDate":"2024-02-03"},{"lineNumber":52,"author":{"gitId":"Alteqa"},"content":"        } else {","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"Alteqa"},"content":"            return 9;","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"Alteqa"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"Alteqa"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Alteqa":56}},{"path":"src/main/java/hirwan/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"package hirwan;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"import java.io.*;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Alteqa"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Alteqa"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":" * The storage class that deals with all interactions with the text file used to store the list of activities","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Alteqa"},"content":"class Storage {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"    static List\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":"    static String FILE_PATH \u003d","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"            \"C:\\\\Users\\\\eugen\\\\Documents\\\\National University of Singapore\\\\Y2S2\\\\CS2103T\\\\IP\\\\src\\\\main\\\\java\\\\data\\\\hirwan.txt\";","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"     * The read method that reads in the data from the text file that stores the list into the hard disk","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Alteqa"},"content":"     * @return The list of activities that the user has to do in the form of a string list","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Alteqa"},"content":"    public static List\u003cString\u003e read() {","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Alteqa"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":"            File filePath \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"            Scanner scan \u003d new Scanner(filePath);","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Alteqa"},"content":"            while (scan.hasNext()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Alteqa"},"content":"                tasks.add(scan.nextLine());","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Alteqa"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"Alteqa"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"            Ui.output(\"Error: file to read data from cannot be found!\");","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Alteqa"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Alteqa"},"content":"        return tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Alteqa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":38,"author":{"gitId":"Alteqa"},"content":"     * The writeTask method that takes in the list of activities to be stored and updates the text file","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Alteqa"},"content":"     * to match this list","lastModifiedDate":"2024-02-03"},{"lineNumber":40,"author":{"gitId":"Alteqa"},"content":"     * @param List The list of activities to store into the hard disk text file","lastModifiedDate":"2024-02-03"},{"lineNumber":41,"author":{"gitId":"Alteqa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":42,"author":{"gitId":"Alteqa"},"content":"    public static void writeTask(List\u003cString\u003e List) {","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"Alteqa"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"Alteqa"},"content":"            FileWriter file \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"Alteqa"},"content":"            for (String tasks : List) {","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"Alteqa"},"content":"                file.write(tasks + \"\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"Alteqa"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"Alteqa"},"content":"            file.close();","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"Alteqa"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"Alteqa"},"content":"            Ui.output(\"Error: could not write to file\");","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"Alteqa"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"Alteqa"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"Alteqa"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Alteqa":55}},{"path":"src/main/java/hirwan/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"package hirwan;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"public class Tasklist {","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"    static List\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"    public Tasklist(List\u003cString\u003e List) {","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Alteqa"},"content":"        this.tasks \u003d List;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"    public String get(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"Alteqa"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"Alteqa"},"content":"    public void add(String input) {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"        tasks.add(input);","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"    public void printList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"        for (String element : tasks) {","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"            Ui.output(tasks.indexOf(element) + 1 + element);","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Alteqa"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Alteqa"},"content":"    public void delete(int index) {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":"            tasks.remove(index);","lastModifiedDate":"2024-02-03"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"Alteqa"},"content":"    public int size() {","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"Alteqa"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Alteqa"},"content":"    public List\u003cString\u003e getList() {","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Alteqa"},"content":"        return tasks;","lastModifiedDate":"2024-02-03"},{"lineNumber":35,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"Alteqa"},"content":"    public void set(int Index, String input) {","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"Alteqa"},"content":"        tasks.set(Index, input);","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"Alteqa"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Alteqa":40}},{"path":"src/main/java/hirwan/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"package hirwan;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"import java.io.*;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"import java.util.List;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"Alteqa"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"/**","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Alteqa"},"content":" * The UI class which handles all interactions with the user including the inputs from the keyboard and the","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":" * output on the screen","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":" */","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Alteqa"},"content":"class Ui {","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"     * The input class that reads in the text that the user inputs","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"     * @return The string representation of the input of the user","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"    public static String input() {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"Alteqa"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"        String text \u003d scanner.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"Alteqa"},"content":"        return text;","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"    /**","lastModifiedDate":"2024-02-03"},{"lineNumber":28,"author":{"gitId":"Alteqa"},"content":"     * The output method that prints the String desired to the user","lastModifiedDate":"2024-02-03"},{"lineNumber":29,"author":{"gitId":"Alteqa"},"content":"     * @param printText The string to be printed and displayed to the user","lastModifiedDate":"2024-02-03"},{"lineNumber":30,"author":{"gitId":"Alteqa"},"content":"     */","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Alteqa"},"content":"    public static void output(String printText) {","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"        System.out.println(printText);","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"Alteqa"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"Alteqa":34}},{"path":"src/test/java/hirwan/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"package hirwan;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"import java.io.File;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Alteqa"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Alteqa"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"    public void newFileReadTest() {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Alteqa"},"content":"        String FILE_PATH \u003d \"C:\\\\Users\\\\eugen\\\\Documents\\\\National University of Singapore\\\\Y2S2\\\\CS2103T\\\\IP\\\\src\\\\main\\\\java\\\\data\\\\hirwan.txt\";","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":"        assertEquals(true, file.exists());","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"    public void writeTask_StringList_() {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Alteqa"},"content":"        String FILE_PATH \u003d \"C:\\\\Users\\\\eugen\\\\Documents\\\\National University of Singapore\\\\Y2S2\\\\CS2103T\\\\IP\\\\src\\\\main\\\\java\\\\data\\\\hirwan.txt\";","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"        List\u003cString\u003e listToWrite \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Alteqa"},"content":"        listToWrite.add(\"1\");","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Alteqa"},"content":"        listToWrite.add(\"2\");","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":"        listToWrite.add(\"3\");","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"        Storage.writeTask(listToWrite);","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Alteqa"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Alteqa"},"content":"            File filePath \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Alteqa"},"content":"            Scanner scan \u003d new Scanner(filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Alteqa"},"content":"            int i \u003d 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Alteqa"},"content":"            while (i \u003c 4) {","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Alteqa"},"content":"                String temp \u003d scan.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Alteqa"},"content":"                assertEquals(i, Integer.parseInt(temp));","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Alteqa"},"content":"                i++;","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Alteqa"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Alteqa"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-02-03"},{"lineNumber":39,"author":{"gitId":"Alteqa"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Alteqa"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Alteqa"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Alteqa"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Alteqa":43}},{"path":"src/test/java/hirwan/TasklistTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"package hirwan;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Alteqa"},"content":"public class TasklistTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Alteqa"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Alteqa"},"content":"    public void delete_outOfBoundIndex_exceptionThrown(){","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Alteqa"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Alteqa"},"content":"            List\u003cString\u003e List \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Alteqa"},"content":"            List.add(\". [T][ ] buy groceries\");","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Alteqa"},"content":"            Tasklist listTask \u003d new Tasklist(List);","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Alteqa"},"content":"            listTask.delete(3);","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Alteqa"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"            assertEquals(\"Index 3 out of bounds for length 1\", e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Alteqa"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Alteqa"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Alteqa"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Alteqa"},"content":"//    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"//    public void printList() {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Alteqa"},"content":"//","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Alteqa"},"content":"//        assertEquals(4, 4);","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Alteqa"},"content":"//    }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Alteqa"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Alteqa":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Alteqa"},"content":"deadline draw /by Sunday","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"Alteqa"},"content":"cherry","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"Alteqa"},"content":"apples","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"Alteqa"},"content":"banana","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"Alteqa"},"content":"event eat /from monday /to thursday","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"Alteqa"},"content":"todo drive","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"Alteqa"},"content":"mark 1","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"Alteqa"},"content":"unmark 1","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"Alteqa":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Alteqa"},"content":"java -classpath ..\\bin hirwan \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Alteqa":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Alteqa"},"content":"java -classpath ../bin hirwan \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Alteqa":1,"-":37}}]
