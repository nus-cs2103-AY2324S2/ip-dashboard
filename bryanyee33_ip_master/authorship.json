[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"# FishStock project template","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"3. After that, locate the `src/main/java/FishStock.java` file, right-click it, and choose `Run FishStock.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bryanyee33":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"checkstyle {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"    mainClass.set(\"fishstock.FishStock\")","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"bryanyee33"},"content":"    archiveBaseName \u003d \"fishstock\"","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bryanyee33":22,"-":40}},{"path":"src/main/java/fishstock/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":" * Encapsulates a Deadline Task.","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":" * This Task has a description and deadline date.","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"class Deadline extends Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"    protected static final String COMMAND \u003d \"deadline\";","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"    private static final String BY_KEYWORD \u003d \" /by \";","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"    private LocalDateTime by;","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"     * Initialize Deadline object manually.","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"     * @param description The task description.","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"     * @param by The deadline date.","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"    protected Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"     * Initialize Deadline object from input.","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"     * Has format \"deadline [description] /by [date]\".","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"     * @param input The input from user.","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"     * @return The generated Deadline object.","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"     * @throws FishStockException The exceptions while creating the Deadline object.","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"    protected static Deadline of(String input) throws FishStockException {","lastModifiedDate":"2024-01-27"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"        if (!Parser.startsWith(COMMAND, input)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"OH NOSE! This input is not deadline..\");","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"        int byIdx \u003d input.indexOf(BY_KEYWORD);","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"        if (byIdx \u003d\u003d -1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"OH NOSE! \\\"\" + BY_KEYWORD + \"\\\" not found..\");","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"        if (COMMAND.length() + 1 \u003e byIdx) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"OH NOSE! The description of deadline cannot be empty..\");","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"        if (byIdx + BY_KEYWORD.length() \u003d\u003d input.length()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"OH NOSE! The by-date cannot be empty..\");","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"        String description \u003d input.substring(COMMAND.length() + 1, byIdx);","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"        String byStr \u003d input.substring(byIdx + BY_KEYWORD.length());","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"        LocalDateTime by \u003d Parser.parseDate(byStr);","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"        return new Deadline(description, by);","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"bryanyee33"},"content":"    protected String toSaveString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"bryanyee33"},"content":"        return \"D|\" + getDescription() + \"|\" + Parser.inDate(by) + \"|\" + toSaveIsDone() + System.lineSeparator();","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"bryanyee33"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"bryanyee33"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":58,"author":{"gitId":"bryanyee33"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + Parser.outDate(by) + \")\";","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"bryanyee33":60}},{"path":"src/main/java/fishstock/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":" * Encapsulates an Event Task.","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":" * This Task has a description, from date, and to date.","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"class Event extends Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"    protected static final String COMMAND \u003d \"event\";","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"    private static final String FROM_KEYWORD \u003d \" /from \";","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"    private static final String TO_KEYWORD \u003d \" /to \";","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"    private LocalDateTime from;","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"    private LocalDateTime to;","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"     * Initialize Event object manually.","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"     * @param description The task description.","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"     * @param from The from date.","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"     * @param to The to date.","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"     * @throws FishStockException The exceptions while creating the Event object.","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"    protected Event(String description, LocalDateTime from, LocalDateTime to) throws FishStockException {","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"        if (from.isAfter(to) \u0026\u0026 !from.equals(to)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"OH NOSE! The from-date must be before the to-date..\");","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"     * Initialize Event object from input.","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"     * Has format \"event [description] /from [date] /to [date]\".","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"     * @param input The input from user.","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"     * @return The generated Event object.","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"     * @throws FishStockException The exceptions while creating the Event object.","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"    protected static Event of(String input) throws FishStockException {","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"        if (!Parser.startsWith(COMMAND, input)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"OH NOSE! This input is not event..\");","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"        int fromIdx \u003d input.indexOf(FROM_KEYWORD);","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"        if (fromIdx \u003d\u003d -1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"OH NOSE! \\\"\" + FROM_KEYWORD + \"\\\" not found..\");","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"        if (COMMAND.length() + 1 \u003e fromIdx) {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"OH NOSE! The description of event cannot be empty..\");","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"        int toIdx \u003d input.indexOf(TO_KEYWORD);","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"        if (toIdx \u003d\u003d -1) {","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"OH NOSE! \\\"\" + TO_KEYWORD + \"\\\" not found..\");","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":54,"author":{"gitId":"bryanyee33"},"content":"        if (fromIdx \u003e toIdx) {","lastModifiedDate":"2024-01-23"},{"lineNumber":55,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"OH NOSE! The from-date must be put first..\");","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":57,"author":{"gitId":"bryanyee33"},"content":"        if (fromIdx + FROM_KEYWORD.length() \u003e toIdx) {","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"OH NOSE! The from-date cannot be empty..\");","lastModifiedDate":"2024-01-27"},{"lineNumber":59,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":60,"author":{"gitId":"bryanyee33"},"content":"        if (toIdx + TO_KEYWORD.length() \u003d\u003d input.length()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"OH NOSE! The to-date cannot be empty..\");","lastModifiedDate":"2024-01-27"},{"lineNumber":62,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":63,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":64,"author":{"gitId":"bryanyee33"},"content":"        String description \u003d input.substring(COMMAND.length() + 1, fromIdx);","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"bryanyee33"},"content":"        String fromStr \u003d input.substring(fromIdx + FROM_KEYWORD.length(), toIdx);","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"bryanyee33"},"content":"        String toStr \u003d input.substring(toIdx + TO_KEYWORD.length());","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"bryanyee33"},"content":"        LocalDateTime from \u003d Parser.parseDate(fromStr);","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"bryanyee33"},"content":"        LocalDateTime to \u003d Parser.parseDate(toStr);","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"bryanyee33"},"content":"        return new Event(description, from, to);","lastModifiedDate":"2024-01-23"},{"lineNumber":70,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":71,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":72,"author":{"gitId":"bryanyee33"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"bryanyee33"},"content":"    protected String toSaveString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"bryanyee33"},"content":"        return \"E|\" + getDescription() + \"|\" + Parser.inDate(from) + \"|\" + Parser.inDate(to) + \"|\"","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"bryanyee33"},"content":"                + toSaveIsDone() + System.lineSeparator();","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"bryanyee33"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":79,"author":{"gitId":"bryanyee33"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":80,"author":{"gitId":"bryanyee33"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + Parser.outDate(from) + \" to: \" + Parser.outDate(to) + \")\";","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":82,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"bryanyee33":82}},{"path":"src/main/java/fishstock/FishStock.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":" * Encapsulates a FishStock object.","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"public class FishStock {","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"    private Storage storage;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"    private TaskList list;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"    private boolean hasStopped \u003d false;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"     * List of keywords to run respective commands.","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"    protected enum Command {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"        INVALID, BYE, LIST, MARK, UNMARK, DELETE, FIND, TODO, DEADLINE, EVENT","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"     * Initializes a FishStock object.","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"    public FishStock() {","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"        storage \u003d new Storage(\"./data/tasks.txt\");","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"            list \u003d new TaskList(storage.load());","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"        } catch (FishStockException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"            list \u003d new TaskList();","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"     * The response to user input.","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"     * @param input The user input.","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"        Command command \u003d Parser.parse(input);","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"            switch (command) {","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"            case BYE:","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"                hasStopped \u003d true;","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"                return \"Bye! You\u0027ll be back ;)\";","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"            case LIST:","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"                return \"Here are the tasks in your list:\\n\" + list.toString();","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"            case MARK:","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"                return \"Did you actually finish this? \\uD83E\\uDD14:\\n\" + \"  \"","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"                        + list.changeMark(command, input);","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"bryanyee33"},"content":"            case UNMARK:","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"bryanyee33"},"content":"                return \"I knew you didn\u0027t finish it! \\uD83D\\uDE0F:\\n\" + \"  \"","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"bryanyee33"},"content":"                        + list.changeMark(command, input);","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"bryanyee33"},"content":"            case DELETE:","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"bryanyee33"},"content":"                return \"This task has been removed:\\n  \" + list.deleteTask(input) + \"\\n\"","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"bryanyee33"},"content":"                        + \"Now you have \" + list.getSize() + \" task(s) in total.\";","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"bryanyee33"},"content":"            case FIND:","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"bryanyee33"},"content":"                return \"Here are the matching tasks in your list:\\n\" + list.findTasks(input);","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"bryanyee33"},"content":"            case TODO:","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"bryanyee33"},"content":"                // Fallthrough","lastModifiedDate":"2024-02-06"},{"lineNumber":62,"author":{"gitId":"bryanyee33"},"content":"            case DEADLINE:","lastModifiedDate":"2024-02-06"},{"lineNumber":63,"author":{"gitId":"bryanyee33"},"content":"                // Fallthrough","lastModifiedDate":"2024-02-06"},{"lineNumber":64,"author":{"gitId":"bryanyee33"},"content":"            case EVENT:","lastModifiedDate":"2024-02-06"},{"lineNumber":65,"author":{"gitId":"bryanyee33"},"content":"                return \"This task has been added:\\n  \" + list.addTask(command, input) + \"\\n\"","lastModifiedDate":"2024-02-06"},{"lineNumber":66,"author":{"gitId":"bryanyee33"},"content":"                        + \"Now you have \" + list.getSize() + \" task(s) in total.\";","lastModifiedDate":"2024-02-06"},{"lineNumber":67,"author":{"gitId":"bryanyee33"},"content":"            default:","lastModifiedDate":"2024-02-06"},{"lineNumber":68,"author":{"gitId":"bryanyee33"},"content":"                return \"OH NOSE! Wakaranai... :(\";","lastModifiedDate":"2024-02-06"},{"lineNumber":69,"author":{"gitId":"bryanyee33"},"content":"            }","lastModifiedDate":"2024-02-06"},{"lineNumber":70,"author":{"gitId":"bryanyee33"},"content":"        } catch (FishStockException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":71,"author":{"gitId":"bryanyee33"},"content":"            return e.getMessage();","lastModifiedDate":"2024-02-06"},{"lineNumber":72,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":73,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":74,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":75,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"bryanyee33"},"content":"     * Exits program while saving list.","lastModifiedDate":"2024-02-06"},{"lineNumber":77,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"bryanyee33"},"content":"    public void exit() {","lastModifiedDate":"2024-02-06"},{"lineNumber":79,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":80,"author":{"gitId":"bryanyee33"},"content":"            storage.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":81,"author":{"gitId":"bryanyee33"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"bryanyee33"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-06"},{"lineNumber":83,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":84,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":86,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":87,"author":{"gitId":"bryanyee33"},"content":"     * Returns stopped status.","lastModifiedDate":"2024-02-06"},{"lineNumber":88,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":89,"author":{"gitId":"bryanyee33"},"content":"    public boolean getStopped() {","lastModifiedDate":"2024-02-06"},{"lineNumber":90,"author":{"gitId":"bryanyee33"},"content":"        return hasStopped;","lastModifiedDate":"2024-02-06"},{"lineNumber":91,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"bryanyee33"},"content":"     * Entrypoint to FishStock.","lastModifiedDate":"2024-01-28"},{"lineNumber":95,"author":{"gitId":"bryanyee33"},"content":"     * @param args ignored","lastModifiedDate":"2024-01-28"},{"lineNumber":96,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":97,"author":{"gitId":"bryanyee33"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"bryanyee33"},"content":"        Application.launch(fishstock.ui.Main.class, args);","lastModifiedDate":"2024-02-06"},{"lineNumber":99,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":100,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"bryanyee33":100}},{"path":"src/main/java/fishstock/FishStockException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":" * Encapsulates a FishStockException.","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"public class FishStockException extends Exception {","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"     * Initialize a FishStockException.","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"     * @param message The error message.","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"    public FishStockException(String message) {","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"        super(message);","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"bryanyee33":14}},{"path":"src/main/java/fishstock/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"import fishstock.FishStock.Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":" * Encapsulates parsing methods.","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"class Parser {","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"    protected static DateTimeFormatter inDateFormat \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy H:m\");","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"    protected static DateTimeFormatter outDateFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mma\");","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"     * Check if given input starts with a command.","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"     * @param command The command.","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"     * @param input The input to compare.","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"     * @return The check result.","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"    protected static boolean startsWith(String command, String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"        return input.length() \u003e\u003d command.length() \u0026\u0026 command.equals(input.substring(0, command.length()));","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"     * Parses input into their respective commands.","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"     * @param input The input that starts with the command.","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"     * @return The command.","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"    protected static Command parse(String input) {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"        if (startsWith(\"bye\", input)) {","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"            return Command.BYE;","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"        } else if (startsWith(\"list\", input)) {","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"            return Command.LIST;","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"        } else if (startsWith(\"mark\", input)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"            return Command.MARK;","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"        } else if (startsWith(\"unmark\", input)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"            return Command.UNMARK;","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"        } else if (startsWith(\"delete\", input)) {","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"            return Command.DELETE;","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"        } else if (startsWith(\"find\", input)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"            return Command.FIND;","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"        } else if (startsWith(Todo.COMMAND, input)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"            return Command.TODO;","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"        } else if (startsWith(Deadline.COMMAND, input)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"            return Command.DEADLINE;","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"        } else if (startsWith(Event.COMMAND, input)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"            return Command.EVENT;","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"        return Command.INVALID;","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"bryanyee33"},"content":"     * Gets index number from input string.","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"bryanyee33"},"content":"     * Has the format \"[command] [task_number]\".","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"bryanyee33"},"content":"     * Subtracts 1 from task_number to obtain index number for array.","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"bryanyee33"},"content":"     * @param input The input from user.","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"bryanyee33"},"content":"     * @return The resulting index number.","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"bryanyee33"},"content":"     * @throws FishStockException The exceptions while calculating the index number.","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"bryanyee33"},"content":"    protected static Integer getTaskFromIndex(String input) throws FishStockException {","lastModifiedDate":"2024-01-27"},{"lineNumber":63,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"bryanyee33"},"content":"            int num \u003d Integer.parseInt(input.split(\" \", 2)[1]);","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"bryanyee33"},"content":"            return num - 1;","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"bryanyee33"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"OH NOSE! Task number cannot be empty..\");","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"bryanyee33"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"OH NOSE! Task number has to be an integer..\");","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":75,"author":{"gitId":"bryanyee33"},"content":"     * Parses date string into LocalDateTime object.","lastModifiedDate":"2024-01-28"},{"lineNumber":76,"author":{"gitId":"bryanyee33"},"content":"     * Has the format \"[dd/mm/yyyy] [hh:mm]\".","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"bryanyee33"},"content":"     * @param date The date string.","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"bryanyee33"},"content":"     * @return The LocalDateTime object.","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"bryanyee33"},"content":"     * @throws FishStockException The exceptions while parsing the date.","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"bryanyee33"},"content":"    protected static LocalDateTime parseDate(String date) throws FishStockException {","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"bryanyee33"},"content":"            return LocalDateTime.parse(date, inDateFormat);","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"bryanyee33"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"OH NOSE! Dates should be of the format \u003cdd/mm/yyyy hh:mm\u003e\");","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":90,"author":{"gitId":"bryanyee33"},"content":"     * Converts LocalDateTime object into String input format.","lastModifiedDate":"2024-01-28"},{"lineNumber":91,"author":{"gitId":"bryanyee33"},"content":"     * @param date The LocalDateTime object.","lastModifiedDate":"2024-01-28"},{"lineNumber":92,"author":{"gitId":"bryanyee33"},"content":"     * @return The String with input format.","lastModifiedDate":"2024-01-28"},{"lineNumber":93,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":94,"author":{"gitId":"bryanyee33"},"content":"    protected static String inDate(LocalDateTime date) {","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"bryanyee33"},"content":"        return date.format(inDateFormat);","lastModifiedDate":"2024-01-27"},{"lineNumber":96,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":97,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":99,"author":{"gitId":"bryanyee33"},"content":"     * Converts LocalDateTime object into String output format.","lastModifiedDate":"2024-01-28"},{"lineNumber":100,"author":{"gitId":"bryanyee33"},"content":"     * @param date The LocalDateTime object.","lastModifiedDate":"2024-01-28"},{"lineNumber":101,"author":{"gitId":"bryanyee33"},"content":"     * @return The String with output format.","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":103,"author":{"gitId":"bryanyee33"},"content":"    protected static String outDate(LocalDateTime date) {","lastModifiedDate":"2024-01-27"},{"lineNumber":104,"author":{"gitId":"bryanyee33"},"content":"        return date.format(outDateFormat);","lastModifiedDate":"2024-01-27"},{"lineNumber":105,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":106,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"bryanyee33":106}},{"path":"src/main/java/fishstock/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"import java.io.File;","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":" * Encapsulates a Storage object.","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":" * Handles all storing/loading of save files.","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"class Storage {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"    protected final ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"    private final File db;","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"    private final String filePath;","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"     * Initialize a Storage object.","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"     * @param filePath The path to the save file.","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"    protected Storage(String filePath) {","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"        db \u003d new File(filePath);","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"     * Loads a single Task into array.","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"     * @param line The task string.","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"     * @throws FishStockException The exceptions while loading the task.","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"    protected void loadTask(String line) throws FishStockException {","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"        String[] arr \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"        Task task;","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"            if (\"T\".equals(arr[0])) { // Todo","lastModifiedDate":"2024-01-27"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"                task \u003d new Todo(arr[1]);","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"            } else if (\"D\".equals(arr[0])) { // Deadline","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"                task \u003d new Deadline(arr[1], Parser.parseDate(arr[2]));","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"            } else if (\"E\".equals(arr[0])) { // Event","lastModifiedDate":"2024-01-27"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"                task \u003d new Event(arr[1], Parser.parseDate(arr[2]), Parser.parseDate(arr[3]));","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"            } else {","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"                throw new FishStockException(\"Wrong format..\");","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"            if (arr[arr.length - 1].equals(\"1\")) {","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"                task.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"            } else if (!arr[arr.length - 1].equals(\"0\")) {","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"                throw new FishStockException(\"Mark corrupted..\");","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"bryanyee33"},"content":"        } catch (FishStockException e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"File corrupted!... Starting new session...\\n\");","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"bryanyee33"},"content":"        list.add(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"bryanyee33"},"content":"     * Loads the entire save file into array.","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"bryanyee33"},"content":"     * @return The array with all Tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"bryanyee33"},"content":"     * @throws FishStockException The exceptions while loading all Tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"bryanyee33"},"content":"    protected ArrayList\u003cTask\u003e load() throws FishStockException {","lastModifiedDate":"2024-01-27"},{"lineNumber":64,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"bryanyee33"},"content":"            Scanner sc \u003d new Scanner(db);","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"bryanyee33"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"bryanyee33"},"content":"                loadTask(sc.nextLine());","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"bryanyee33"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"bryanyee33"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"bryanyee33"},"content":"            String pathToDb \u003d filePath.substring(0, filePath.lastIndexOf(\"/\"));","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"bryanyee33"},"content":"            new File(pathToDb).mkdir();","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"File not found... Starting new session...\\n\");","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"bryanyee33"},"content":"        return list;","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":77,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"bryanyee33"},"content":"     * Saves all Tasks in array into save file.","lastModifiedDate":"2024-01-28"},{"lineNumber":79,"author":{"gitId":"bryanyee33"},"content":"     * @throws IOException The exceptions while saving all Tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"bryanyee33"},"content":"    protected void close() throws IOException {","lastModifiedDate":"2024-01-27"},{"lineNumber":82,"author":{"gitId":"bryanyee33"},"content":"        FileWriter fw \u003d new FileWriter(db);","lastModifiedDate":"2024-01-27"},{"lineNumber":83,"author":{"gitId":"bryanyee33"},"content":"        for (Task task : list) {","lastModifiedDate":"2024-01-27"},{"lineNumber":84,"author":{"gitId":"bryanyee33"},"content":"            fw.write(task.toSaveString());","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":86,"author":{"gitId":"bryanyee33"},"content":"        fw.close();","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"bryanyee33":88}},{"path":"src/main/java/fishstock/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":" * Encapsulates a Task object.","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"abstract class Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"    private String description;","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"    private boolean isDone;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"    protected Task(String description) {","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-01-23"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"     * Mark Task as done.","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"    protected void markAsDone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"     * Mark Task as undone.","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"    protected void markAsUndone() {","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"     * Converts Task into String format for saving.","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"     * @return The String format.","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"    protected abstract String toSaveString();","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"     * Converts boolean to int.","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"     * Used for saving isDone of Task.","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"     * @return The converted int.","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"    protected int toSaveIsDone() {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"        return isDone ? 1 : 0;","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"    protected String getDescription() {","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"        return description;","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"        return \"[\" + (this.isDone ? \"X\" : \" \") + \"] \" + this.description;","lastModifiedDate":"2024-01-23"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":52,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"bryanyee33":52}},{"path":"src/main/java/fishstock/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"import fishstock.FishStock.Command;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":" * Encapsulates a TaskList object.","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":" * Handles all functions related to the array storing Tasks.","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"class TaskList {","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"    protected final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"    protected TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"        this.list \u003d list;","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"    protected TaskList() {","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"    protected int getSize() {","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"        return list.size();","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"    public String toString() {","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"        String result \u003d \"\";","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"            result +\u003d (i + 1) + \".\" + list.get(i) + \"\\n\";","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"        return result;","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"     * Marks whether Task is done.","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"     * @param command The command.","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"     * @param input The input from user.","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"     * @return The marked/unmarked Task.","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"     * @throws FishStockException The exceptions while changing the mark.","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"    protected Task changeMark(Command command, String input) throws FishStockException {","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"        Integer idx \u003d Parser.getTaskFromIndex(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"            Task task \u003d list.get(idx);","lastModifiedDate":"2024-01-27"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"            if (command \u003d\u003d Command.MARK) {","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"                task.markAsDone();","lastModifiedDate":"2024-01-27"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"            } else if (command \u003d\u003d Command.UNMARK) {","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"                task.markAsUndone();","lastModifiedDate":"2024-01-27"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"            }","lastModifiedDate":"2024-01-27"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"            return task;","lastModifiedDate":"2024-01-27"},{"lineNumber":52,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":53,"author":{"gitId":"bryanyee33"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":54,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"OH NOSE! Task number must be in valid range..\");","lastModifiedDate":"2024-01-27"},{"lineNumber":55,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":56,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":57,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":58,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"bryanyee33"},"content":"     * Removes Task from array.","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"bryanyee33"},"content":"     * @param input The input from user.","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"bryanyee33"},"content":"     * @return The removed Task.","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"bryanyee33"},"content":"     * @throws FishStockException The exceptions while removing the Task.","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"bryanyee33"},"content":"    protected Task deleteTask(String input) throws FishStockException {","lastModifiedDate":"2024-01-27"},{"lineNumber":65,"author":{"gitId":"bryanyee33"},"content":"        Integer idx \u003d Parser.getTaskFromIndex(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":66,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-27"},{"lineNumber":67,"author":{"gitId":"bryanyee33"},"content":"            Task task \u003d list.get(idx);","lastModifiedDate":"2024-01-27"},{"lineNumber":68,"author":{"gitId":"bryanyee33"},"content":"            list.remove(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":69,"author":{"gitId":"bryanyee33"},"content":"            return task;","lastModifiedDate":"2024-01-27"},{"lineNumber":70,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":71,"author":{"gitId":"bryanyee33"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-01-27"},{"lineNumber":72,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"OH NOSE! Task number must be in valid range..\");","lastModifiedDate":"2024-01-27"},{"lineNumber":73,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":74,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":75,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":76,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":77,"author":{"gitId":"bryanyee33"},"content":"     * Adds Task into array.","lastModifiedDate":"2024-01-28"},{"lineNumber":78,"author":{"gitId":"bryanyee33"},"content":"     * @param command The command.","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"bryanyee33"},"content":"     * @param input The input from user.","lastModifiedDate":"2024-01-28"},{"lineNumber":80,"author":{"gitId":"bryanyee33"},"content":"     * @return The added Task.","lastModifiedDate":"2024-01-28"},{"lineNumber":81,"author":{"gitId":"bryanyee33"},"content":"     * @throws FishStockException The exceptions while adding the Task.","lastModifiedDate":"2024-01-28"},{"lineNumber":82,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":83,"author":{"gitId":"bryanyee33"},"content":"    protected Task addTask(Command command, String input) throws FishStockException {","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"bryanyee33"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-01-27"},{"lineNumber":85,"author":{"gitId":"bryanyee33"},"content":"        switch (command) {","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"bryanyee33"},"content":"        case TODO:","lastModifiedDate":"2024-01-27"},{"lineNumber":87,"author":{"gitId":"bryanyee33"},"content":"            task \u003d Todo.of(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":88,"author":{"gitId":"bryanyee33"},"content":"            break;","lastModifiedDate":"2024-01-27"},{"lineNumber":89,"author":{"gitId":"bryanyee33"},"content":"        case DEADLINE:","lastModifiedDate":"2024-01-27"},{"lineNumber":90,"author":{"gitId":"bryanyee33"},"content":"            task \u003d Deadline.of(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":91,"author":{"gitId":"bryanyee33"},"content":"            break;","lastModifiedDate":"2024-01-27"},{"lineNumber":92,"author":{"gitId":"bryanyee33"},"content":"        case EVENT:","lastModifiedDate":"2024-01-27"},{"lineNumber":93,"author":{"gitId":"bryanyee33"},"content":"            task \u003d Event.of(input);","lastModifiedDate":"2024-01-27"},{"lineNumber":94,"author":{"gitId":"bryanyee33"},"content":"            break;","lastModifiedDate":"2024-01-27"},{"lineNumber":95,"author":{"gitId":"bryanyee33"},"content":"        default:","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"Attempted to add an invalid Task..\");","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-27"},{"lineNumber":98,"author":{"gitId":"bryanyee33"},"content":"        list.add(task);","lastModifiedDate":"2024-01-27"},{"lineNumber":99,"author":{"gitId":"bryanyee33"},"content":"        return task;","lastModifiedDate":"2024-01-27"},{"lineNumber":100,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":101,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":102,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":103,"author":{"gitId":"bryanyee33"},"content":"     * Finds Tasks that contain input in description.","lastModifiedDate":"2024-02-06"},{"lineNumber":104,"author":{"gitId":"bryanyee33"},"content":"     * @param input The input to be matched with.","lastModifiedDate":"2024-02-06"},{"lineNumber":105,"author":{"gitId":"bryanyee33"},"content":"     * @return The Tasks that were found.","lastModifiedDate":"2024-02-06"},{"lineNumber":106,"author":{"gitId":"bryanyee33"},"content":"     * @throws FishStockException The exceptions while finding Tasks.","lastModifiedDate":"2024-02-06"},{"lineNumber":107,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":108,"author":{"gitId":"bryanyee33"},"content":"    protected String findTasks(String input) throws FishStockException {","lastModifiedDate":"2024-02-06"},{"lineNumber":109,"author":{"gitId":"bryanyee33"},"content":"        if (input.length() \u003c 6) {","lastModifiedDate":"2024-01-28"},{"lineNumber":110,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"OH NOSE! The match word is empty..\");","lastModifiedDate":"2024-01-28"},{"lineNumber":111,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":112,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":113,"author":{"gitId":"bryanyee33"},"content":"        String match \u003d input.substring(5);","lastModifiedDate":"2024-01-28"},{"lineNumber":114,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":115,"author":{"gitId":"bryanyee33"},"content":"        int count \u003d 0;","lastModifiedDate":"2024-02-06"},{"lineNumber":116,"author":{"gitId":"bryanyee33"},"content":"        String result \u003d \"\";","lastModifiedDate":"2024-02-06"},{"lineNumber":117,"author":{"gitId":"bryanyee33"},"content":"        for (Task task : list) {","lastModifiedDate":"2024-01-28"},{"lineNumber":118,"author":{"gitId":"bryanyee33"},"content":"            if (task.getDescription().contains(match)) {","lastModifiedDate":"2024-01-28"},{"lineNumber":119,"author":{"gitId":"bryanyee33"},"content":"                result +\u003d (++count) + \".\" + task + \"\\n\";","lastModifiedDate":"2024-02-06"},{"lineNumber":120,"author":{"gitId":"bryanyee33"},"content":"            }","lastModifiedDate":"2024-01-28"},{"lineNumber":121,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":122,"author":{"gitId":"bryanyee33"},"content":"        return result;","lastModifiedDate":"2024-01-28"},{"lineNumber":123,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":124,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-27"}],"authorContributionMap":{"bryanyee33":124}},{"path":"src/main/java/fishstock/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock;","lastModifiedDate":"2024-01-27"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":" * Encapsulates Todo Task.","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":" * This Task only has a description.","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-01-28"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"class Todo extends Task {","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"    protected static final String COMMAND \u003d \"todo\";","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"     * Initialize Todo object manually.","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"     * @param description The task description.","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"    protected Todo(String description) {","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"        super(description);","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"     * Initialize Todo object from input.","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"     * Has format \"todo [description]\".","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"     * @param input The input from user.","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"     * @return The generated Todo object.","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"     * @throws FishStockException The exceptions while creating the Todo object.","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"    protected static Todo of(String input) throws FishStockException {","lastModifiedDate":"2024-01-27"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"        if (!Parser.startsWith(COMMAND, input)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"OH NOSE! This input is not todo..\");","lastModifiedDate":"2024-01-27"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"        if (COMMAND.length() + 1 \u003e\u003d input.length()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"            throw new FishStockException(\"OH NOSE! The description of todo cannot be empty..\");","lastModifiedDate":"2024-01-27"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"        return new Todo(input.substring(COMMAND.length() + 1));","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"    @Override","lastModifiedDate":"2024-01-27"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"    protected String toSaveString() {","lastModifiedDate":"2024-01-27"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"        return \"T|\" + getDescription() + \"|\" + toSaveIsDone() + System.lineSeparator();","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-27"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"    @Override","lastModifiedDate":"2024-01-23"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"    public String toString() {","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-23"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-23"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"bryanyee33":44}},{"path":"src/main/java/fishstock/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock.ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"import java.util.Collections;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"    private Label dialog;","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"        ","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"    private void flip() {","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"bryanyee33"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"bryanyee33"},"content":"    public static DialogBox getFishStockDialog(String text, Image img) {","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"bryanyee33"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"bryanyee33"},"content":"        db.flip();","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"bryanyee33"},"content":"        return db;","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"bryanyee33":60}},{"path":"src/main/java/fishstock/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock.ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"import fishstock.FishStock;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":" * A GUI for FishStock using FXML.","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"public class Main extends Application {","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"    private FishStock fishstock \u003d new FishStock();","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setFishStock(fishstock);","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"            stage.show();","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"    @Override","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"    public void stop() {","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"        fishstock.exit();","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"bryanyee33":36}},{"path":"src/main/java/fishstock/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock.ui;","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"import fishstock.FishStock;","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"/**","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":" */","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-02-06"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"    private TextField userInput;","lastModifiedDate":"2024-02-06"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"    private Button sendButton;","lastModifiedDate":"2024-02-06"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"    private FishStock fishstock;","lastModifiedDate":"2024-02-06"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"    private Image fishStockImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/FishStock.png\"));","lastModifiedDate":"2024-02-06"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"    private void initialize() {","lastModifiedDate":"2024-02-06"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-02-06"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"        String welcomeText \u003d \"Hello, I\u0027m FishStock.\\nI might help if I feel like it.\";","lastModifiedDate":"2024-02-06"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"        dialogContainer.getChildren().add(DialogBox.getFishStockDialog(welcomeText, fishStockImage));","lastModifiedDate":"2024-02-06"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"    protected void setFishStock(FishStock f) {","lastModifiedDate":"2024-02-06"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"        fishstock \u003d f;","lastModifiedDate":"2024-02-06"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"    /**","lastModifiedDate":"2024-02-06"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing FishStock\u0027s reply","lastModifiedDate":"2024-02-06"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"     * and then appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2024-02-06"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"     */","lastModifiedDate":"2024-02-06"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"    @FXML","lastModifiedDate":"2024-02-06"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-02-06"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-02-06"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"        String response \u003d fishstock.getResponse(input);","lastModifiedDate":"2024-02-06"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-02-06"},{"lineNumber":52,"author":{"gitId":"bryanyee33"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2024-02-06"},{"lineNumber":53,"author":{"gitId":"bryanyee33"},"content":"                DialogBox.getFishStockDialog(response, fishStockImage)","lastModifiedDate":"2024-02-06"},{"lineNumber":54,"author":{"gitId":"bryanyee33"},"content":"        );","lastModifiedDate":"2024-02-06"},{"lineNumber":55,"author":{"gitId":"bryanyee33"},"content":"        userInput.clear();","lastModifiedDate":"2024-02-06"},{"lineNumber":56,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":57,"author":{"gitId":"bryanyee33"},"content":"        if (fishstock.getStopped()) {","lastModifiedDate":"2024-02-06"},{"lineNumber":58,"author":{"gitId":"bryanyee33"},"content":"            Platform.exit();","lastModifiedDate":"2024-02-06"},{"lineNumber":59,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-02-06"},{"lineNumber":60,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-02-06"},{"lineNumber":61,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"bryanyee33":61}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-padding: 0 20 0 20;\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"bryanyee33":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-02-06"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"fishstock.ui.MainWindow\"\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"      \u003c/content\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"  \u003c/children\u003e","lastModifiedDate":"2024-02-06"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-02-06"}],"authorContributionMap":{"bryanyee33":19}},{"path":"src/test/java/fishstock/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"public class ParserTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"    public void getTaskFromIndex_oneInteger_success() throws Exception {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(0, Parser.getTaskFromIndex(\"mark 1\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(0, Parser.getTaskFromIndex(\"mark 001\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(99, Parser.getTaskFromIndex(\"unmark 100\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(-1, Parser.getTaskFromIndex(\"unmark 0\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"    public void getTaskFromIndex_multiOrNonInteger_exceptionThrown() {","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(0, Parser.getTaskFromIndex(\"mark 1 2 3 4\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(\"OH NOSE! Task number has to be an integer..\", e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(1, Parser.getTaskFromIndex(\"mark 2.0\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(\"OH NOSE! Task number has to be an integer..\", e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(0, Parser.getTaskFromIndex(\"mark abc\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(\"OH NOSE! Task number has to be an integer..\", e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"    public void getTaskFromIndex_noSpaces_exceptionThrown() {","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(0, Parser.getTaskFromIndex(\"mark\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(\"OH NOSE! Task number cannot be empty..\", e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(0, Parser.getTaskFromIndex(\"unmark1\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"bryanyee33"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":53,"author":{"gitId":"bryanyee33"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":54,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(\"OH NOSE! Task number cannot be empty..\", e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":55,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":56,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":57,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":58,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(0, Parser.getTaskFromIndex(\"1\"));","lastModifiedDate":"2024-01-28"},{"lineNumber":59,"author":{"gitId":"bryanyee33"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":60,"author":{"gitId":"bryanyee33"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":61,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(\"OH NOSE! Task number cannot be empty..\", e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":62,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":63,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":64,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"bryanyee33":64}},{"path":"src/test/java/fishstock/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"package fishstock;","lastModifiedDate":"2024-01-28"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"public class StorageTest {","lastModifiedDate":"2024-01-28"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"    public void loadTask_validTask_success() throws Exception {","lastModifiedDate":"2024-01-28"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"        Storage storage \u003d new Storage(\"\");","lastModifiedDate":"2024-01-28"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"        storage.loadTask(\"T|borrow book|1\");","lastModifiedDate":"2024-01-28"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(\"[T][X] borrow book\", storage.list.get(0).toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"        storage.loadTask(\"D|return book|27/1/2024 17:15|0\");","lastModifiedDate":"2024-01-28"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(\"[D][ ] return book (by: Jan 27 2024, 5:15PM)\", storage.list.get(1).toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"        storage.loadTask(\"E|project meeting|1/1/1998 12:00|1/1/1998 22:00|1\");","lastModifiedDate":"2024-01-28"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"        assertEquals(\"[E][X] project meeting (from: Jan 01 1998, 12:00PM to: Jan 01 1998, 10:00PM)\",","lastModifiedDate":"2024-01-28"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"                storage.list.get(2).toString());","lastModifiedDate":"2024-01-28"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"    @Test","lastModifiedDate":"2024-01-28"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"    public void loadTask_invalidTask_exceptionThrown() {","lastModifiedDate":"2024-01-28"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"        Storage storage \u003d new Storage(\"\");","lastModifiedDate":"2024-01-28"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"            // Missing mark","lastModifiedDate":"2024-01-28"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"            storage.loadTask(\"T|borrow book|\");","lastModifiedDate":"2024-01-28"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(\"File corrupted!... Starting new session...\\n\", e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"            // Missing task type","lastModifiedDate":"2024-01-28"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"            storage.loadTask(\"return book|27/1/2024 17:15|0\");","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(\"File corrupted!... Starting new session...\\n\", e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"        try {","lastModifiedDate":"2024-01-28"},{"lineNumber":45,"author":{"gitId":"bryanyee33"},"content":"            // Dates swapped","lastModifiedDate":"2024-01-28"},{"lineNumber":46,"author":{"gitId":"bryanyee33"},"content":"            storage.loadTask(\"E|project meeting|1/1/1998 22:00|1/1/1998 13:00|1\");","lastModifiedDate":"2024-01-28"},{"lineNumber":47,"author":{"gitId":"bryanyee33"},"content":"            fail();","lastModifiedDate":"2024-01-28"},{"lineNumber":48,"author":{"gitId":"bryanyee33"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-01-28"},{"lineNumber":49,"author":{"gitId":"bryanyee33"},"content":"            assertEquals(\"File corrupted!... Starting new session...\\n\", e.getMessage());","lastModifiedDate":"2024-01-28"},{"lineNumber":50,"author":{"gitId":"bryanyee33"},"content":"        }","lastModifiedDate":"2024-01-28"},{"lineNumber":51,"author":{"gitId":"bryanyee33"},"content":"    }","lastModifiedDate":"2024-01-28"},{"lineNumber":52,"author":{"gitId":"bryanyee33"},"content":"}","lastModifiedDate":"2024-01-28"}],"authorContributionMap":{"bryanyee33":52}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bryanyee33"},"content":"todo borrow book","lastModifiedDate":"2024-01-23"},{"lineNumber":2,"author":{"gitId":"bryanyee33"},"content":"deadline return book /by 27/1/2024 17:15","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"bryanyee33"},"content":"event project meeting /from 1/1/2001 00:00 /to 1/1/1998 23:00","lastModifiedDate":"2024-01-28"},{"lineNumber":4,"author":{"gitId":"bryanyee33"},"content":"event project meeting /from 1/1/1998 23:00 /to 1/1/1998 23:00","lastModifiedDate":"2024-01-28"},{"lineNumber":5,"author":{"gitId":"bryanyee33"},"content":"todo a","lastModifiedDate":"2024-01-23"},{"lineNumber":6,"author":{"gitId":"bryanyee33"},"content":"event 1 /from 19/11/2011 16:50 /to 1/12/2100 18:33","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"bryanyee33"},"content":"todo","lastModifiedDate":"2024-01-23"},{"lineNumber":8,"author":{"gitId":"bryanyee33"},"content":"deadline return book by 1/1/2001 00:00","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"deadline return book/by 1/1/2001 00:00","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"deadline return book /by1/1/2001 00:00","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"event project meeting /from1/1/2001 00:00 /to 1/1/2001 00:00","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"bryanyee33"},"content":"event project meeting /from 1/1/2001 00:00/to 1/1/2001 00:00","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"event project meeting/from1/1/2001 00:00/to1/1/2001 00:00","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"bryanyee33"},"content":"event project meeting /to 1/1/2001 00:00 /from 1/1/2001 00:00","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"bryanyee33"},"content":"listing","lastModifiedDate":"2024-01-23"},{"lineNumber":16,"author":{"gitId":"bryanyee33"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":17,"author":{"gitId":"bryanyee33"},"content":"mark","lastModifiedDate":"2024-01-23"},{"lineNumber":18,"author":{"gitId":"bryanyee33"},"content":"mark abc","lastModifiedDate":"2024-01-23"},{"lineNumber":19,"author":{"gitId":"bryanyee33"},"content":"mark 0","lastModifiedDate":"2024-01-23"},{"lineNumber":20,"author":{"gitId":"bryanyee33"},"content":"mark 1","lastModifiedDate":"2024-01-23"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"mark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":22,"author":{"gitId":"bryanyee33"},"content":"mark 4","lastModifiedDate":"2024-01-23"},{"lineNumber":23,"author":{"gitId":"bryanyee33"},"content":"mark 50","lastModifiedDate":"2024-01-23"},{"lineNumber":24,"author":{"gitId":"bryanyee33"},"content":"unmark","lastModifiedDate":"2024-01-23"},{"lineNumber":25,"author":{"gitId":"bryanyee33"},"content":"unmark abc","lastModifiedDate":"2024-01-23"},{"lineNumber":26,"author":{"gitId":"bryanyee33"},"content":"unmark 0","lastModifiedDate":"2024-01-23"},{"lineNumber":27,"author":{"gitId":"bryanyee33"},"content":"unmark 2","lastModifiedDate":"2024-01-23"},{"lineNumber":28,"author":{"gitId":"bryanyee33"},"content":"unmark 3","lastModifiedDate":"2024-01-23"},{"lineNumber":29,"author":{"gitId":"bryanyee33"},"content":"unmark 21","lastModifiedDate":"2024-01-23"},{"lineNumber":30,"author":{"gitId":"bryanyee33"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":31,"author":{"gitId":"bryanyee33"},"content":"delete","lastModifiedDate":"2024-01-23"},{"lineNumber":32,"author":{"gitId":"bryanyee33"},"content":"delete def","lastModifiedDate":"2024-01-23"},{"lineNumber":33,"author":{"gitId":"bryanyee33"},"content":"delete 0","lastModifiedDate":"2024-01-23"},{"lineNumber":34,"author":{"gitId":"bryanyee33"},"content":"delete 5","lastModifiedDate":"2024-01-23"},{"lineNumber":35,"author":{"gitId":"bryanyee33"},"content":"delete 5","lastModifiedDate":"2024-01-23"},{"lineNumber":36,"author":{"gitId":"bryanyee33"},"content":"delete 1","lastModifiedDate":"2024-01-23"},{"lineNumber":37,"author":{"gitId":"bryanyee33"},"content":"delete 2","lastModifiedDate":"2024-01-23"},{"lineNumber":38,"author":{"gitId":"bryanyee33"},"content":"event project meeting /from 1/1/2001 /to 1/1/2001 23:00","lastModifiedDate":"2024-01-28"},{"lineNumber":39,"author":{"gitId":"bryanyee33"},"content":"event project meeting /from 1/1/2001 00:00 /to 1/1","lastModifiedDate":"2024-01-27"},{"lineNumber":40,"author":{"gitId":"bryanyee33"},"content":"deadline return book /by 31/13/2024 17:80","lastModifiedDate":"2024-01-27"},{"lineNumber":41,"author":{"gitId":"bryanyee33"},"content":"list","lastModifiedDate":"2024-01-23"},{"lineNumber":42,"author":{"gitId":"bryanyee33"},"content":"find","lastModifiedDate":"2024-01-28"},{"lineNumber":43,"author":{"gitId":"bryanyee33"},"content":"find boo","lastModifiedDate":"2024-01-28"},{"lineNumber":44,"author":{"gitId":"bryanyee33"},"content":"bye","lastModifiedDate":"2024-01-23"}],"authorContributionMap":{"bryanyee33":44}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"bryanyee33"},"content":"REM delete db from previous run","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"bryanyee33"},"content":"if exist data\\tasks.txt del data\\tasks.txt","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"bryanyee33"},"content":"","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"bryanyee33"},"content":"javac  -cp ..\\src\\main\\fishstock\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\fishstock\\*.java","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"bryanyee33"},"content":"java -classpath ..\\bin fishstock.FishStock \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bryanyee33":5,"-":19}}]
