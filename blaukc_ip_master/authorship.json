[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"blaukc"},"content":"    mainClass.set(\"dude.Dude\")","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"blaukc"},"content":"    archiveBaseName \u003d \"dude\"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"blaukc":2,"-":40}},{"path":"src/main/java/dude/Dude.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blaukc"},"content":"package dude;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"blaukc"},"content":"import dude.task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"blaukc"},"content":"import dude.task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"blaukc"},"content":"import dude.task.Todo;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"blaukc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"blaukc"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"blaukc"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"blaukc"},"content":" * Dude - a Duke variant.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"blaukc"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"blaukc"},"content":"public class Dude {","lastModifiedDate":"2024-01-21"},{"lineNumber":14,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"blaukc"},"content":"     * Runs the Dude program.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"blaukc"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-01-21"},{"lineNumber":19,"author":{"gitId":"blaukc"},"content":"        Ui.greeting();","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"blaukc"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":23,"author":{"gitId":"blaukc"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"blaukc"},"content":"        loop:","lastModifiedDate":"2024-01-22"},{"lineNumber":25,"author":{"gitId":"blaukc"},"content":"        while(scanner.hasNextLine()) {","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"blaukc"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2024-01-22"},{"lineNumber":27,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"blaukc"},"content":"            String[] inputSplit \u003d input.split(\" \", 2);","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"blaukc"},"content":"            String command \u003d inputSplit[0];","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"blaukc"},"content":"            String ipArgs \u003d inputSplit.length \u003e 1 ? inputSplit[1] : \"\";","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"blaukc"},"content":"            ArrayList\u003cObject\u003e formattedParameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-22"},{"lineNumber":32,"author":{"gitId":"blaukc"},"content":"            switch (command) {","lastModifiedDate":"2024-01-22"},{"lineNumber":33,"author":{"gitId":"blaukc"},"content":"            case \"bye\":","lastModifiedDate":"2024-01-22"},{"lineNumber":34,"author":{"gitId":"blaukc"},"content":"                break loop;","lastModifiedDate":"2024-01-22"},{"lineNumber":35,"author":{"gitId":"blaukc"},"content":"            case \"list\":","lastModifiedDate":"2024-01-22"},{"lineNumber":36,"author":{"gitId":"blaukc"},"content":"                taskList.list();","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"blaukc"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"blaukc"},"content":"            case \"mark\":","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"blaukc"},"content":"                if (!Parser.parse(","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"blaukc"},"content":"                        formattedParameters, command, ipArgs,","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"blaukc"},"content":"                        new String[]{\"index\"},","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"blaukc"},"content":"                        new Parser.ParameterTypes[]{Parser.ParameterTypes.INTEGER})","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"blaukc"},"content":"                ) {","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"blaukc"},"content":"                    continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"blaukc"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"blaukc"},"content":"                taskList.mark((int) formattedParameters.get(0) - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":47,"author":{"gitId":"blaukc"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"blaukc"},"content":"            case \"unmark\":","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"blaukc"},"content":"                if (!Parser.parse(","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"blaukc"},"content":"                        formattedParameters, command, ipArgs,","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"blaukc"},"content":"                        new String[]{\"index\"},","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"blaukc"},"content":"                        new Parser.ParameterTypes[]{Parser.ParameterTypes.INTEGER})","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"blaukc"},"content":"                ) {","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"blaukc"},"content":"                    continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"blaukc"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"blaukc"},"content":"                taskList.unmark((int) formattedParameters.get(0) - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"blaukc"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":58,"author":{"gitId":"blaukc"},"content":"            case \"delete\":","lastModifiedDate":"2024-01-22"},{"lineNumber":59,"author":{"gitId":"blaukc"},"content":"                if (!Parser.parse(","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"blaukc"},"content":"                        formattedParameters, command, ipArgs,","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"blaukc"},"content":"                        new String[]{\"index\"},","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"blaukc"},"content":"                        new Parser.ParameterTypes[]{Parser.ParameterTypes.INTEGER})","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"blaukc"},"content":"                ) {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"blaukc"},"content":"                    continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"blaukc"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"blaukc"},"content":"                taskList.delete((int) formattedParameters.get(0) - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"blaukc"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":68,"author":{"gitId":"blaukc"},"content":"            case \"find\":","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"blaukc"},"content":"                if (!Parser.parse(","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"blaukc"},"content":"                        formattedParameters, command, ipArgs,","lastModifiedDate":"2024-02-01"},{"lineNumber":71,"author":{"gitId":"blaukc"},"content":"                        new String[]{\"keyword\"},","lastModifiedDate":"2024-02-01"},{"lineNumber":72,"author":{"gitId":"blaukc"},"content":"                        new Parser.ParameterTypes[]{Parser.ParameterTypes.STRING})","lastModifiedDate":"2024-02-01"},{"lineNumber":73,"author":{"gitId":"blaukc"},"content":"                ) {","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"blaukc"},"content":"                    continue;","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"blaukc"},"content":"                }","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"blaukc"},"content":"                taskList.find((String) formattedParameters.get(0));","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"blaukc"},"content":"                break;","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"blaukc"},"content":"            case \"todo\":","lastModifiedDate":"2024-01-22"},{"lineNumber":79,"author":{"gitId":"blaukc"},"content":"                if (!Parser.parse(","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"blaukc"},"content":"                        formattedParameters, command, ipArgs,","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"blaukc"},"content":"                        new String[]{\"description\"},","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"blaukc"},"content":"                        new Parser.ParameterTypes[]{Parser.ParameterTypes.STRING})","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"blaukc"},"content":"                ) {","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"blaukc"},"content":"                    continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"blaukc"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"blaukc"},"content":"                Todo todo \u003d new Todo((String) formattedParameters.get(0));","lastModifiedDate":"2024-01-22"},{"lineNumber":87,"author":{"gitId":"blaukc"},"content":"                taskList.add(todo);","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"blaukc"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":89,"author":{"gitId":"blaukc"},"content":"            case \"deadline\": {","lastModifiedDate":"2024-01-22"},{"lineNumber":90,"author":{"gitId":"blaukc"},"content":"                if (!Parser.parse(","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"blaukc"},"content":"                        formattedParameters, command, ipArgs,","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"blaukc"},"content":"                        new String[]{\"description\", \"by\"},","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"blaukc"},"content":"                        new Parser.ParameterTypes[]{Parser.ParameterTypes.STRING, Parser.ParameterTypes.DATE})","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"blaukc"},"content":"                ) {","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"blaukc"},"content":"                    continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"blaukc"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"blaukc"},"content":"                Deadline deadline \u003d new Deadline(","lastModifiedDate":"2024-01-22"},{"lineNumber":98,"author":{"gitId":"blaukc"},"content":"                        (String) formattedParameters.get(0),","lastModifiedDate":"2024-01-22"},{"lineNumber":99,"author":{"gitId":"blaukc"},"content":"                        (String) formattedParameters.get(1));","lastModifiedDate":"2024-01-22"},{"lineNumber":100,"author":{"gitId":"blaukc"},"content":"                taskList.add(deadline);","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"blaukc"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":102,"author":{"gitId":"blaukc"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":103,"author":{"gitId":"blaukc"},"content":"            case \"event\": {","lastModifiedDate":"2024-01-22"},{"lineNumber":104,"author":{"gitId":"blaukc"},"content":"                if (!Parser.parse(","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"blaukc"},"content":"                        formattedParameters, command, ipArgs,","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"blaukc"},"content":"                        new String[]{\"description\", \"from\", \"to\"},","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"blaukc"},"content":"                        new Parser.ParameterTypes[]{","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"blaukc"},"content":"                                Parser.ParameterTypes.STRING, Parser.ParameterTypes.DATE, Parser.ParameterTypes.DATE})","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"blaukc"},"content":"                ) {","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"blaukc"},"content":"                    continue;","lastModifiedDate":"2024-01-31"},{"lineNumber":111,"author":{"gitId":"blaukc"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":112,"author":{"gitId":"blaukc"},"content":"                Event event \u003d new Event(","lastModifiedDate":"2024-01-22"},{"lineNumber":113,"author":{"gitId":"blaukc"},"content":"                        (String) formattedParameters.get(0),","lastModifiedDate":"2024-01-22"},{"lineNumber":114,"author":{"gitId":"blaukc"},"content":"                        (String) formattedParameters.get(1),","lastModifiedDate":"2024-01-22"},{"lineNumber":115,"author":{"gitId":"blaukc"},"content":"                        (String) formattedParameters.get(2));","lastModifiedDate":"2024-01-22"},{"lineNumber":116,"author":{"gitId":"blaukc"},"content":"                taskList.add(event);","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"blaukc"},"content":"                break;","lastModifiedDate":"2024-01-22"},{"lineNumber":118,"author":{"gitId":"blaukc"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":119,"author":{"gitId":"blaukc"},"content":"            default:","lastModifiedDate":"2024-01-22"},{"lineNumber":120,"author":{"gitId":"blaukc"},"content":"                Ui.print(\"Unknown command detected!\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"blaukc"},"content":"            }","lastModifiedDate":"2024-01-22"},{"lineNumber":122,"author":{"gitId":"blaukc"},"content":"        }","lastModifiedDate":"2024-01-22"},{"lineNumber":123,"author":{"gitId":"blaukc"},"content":"        Ui.goodbye();","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-21"},{"lineNumber":125,"author":{"gitId":"blaukc"},"content":"}","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"blaukc":125}},{"path":"src/main/java/dude/DudeNoStorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blaukc"},"content":"package dude;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"blaukc"},"content":"public class DudeNoStorageException extends RuntimeException {","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"blaukc"},"content":"    public DudeNoStorageException() {","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"blaukc"},"content":"        super(\"dude.Storage could not be created or found.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"blaukc"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"blaukc":8}},{"path":"src/main/java/dude/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blaukc"},"content":"package dude;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"blaukc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"blaukc"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"blaukc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"blaukc"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"blaukc"},"content":"public class Parser {","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"blaukc"},"content":"    /** Enum of parameter types that can be accepted as input. */","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"blaukc"},"content":"    public enum ParameterTypes {","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"blaukc"},"content":"        INTEGER,","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"blaukc"},"content":"        STRING,","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"blaukc"},"content":"        DATE","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"blaukc"},"content":"     * Checks if the string input is numeric.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"blaukc"},"content":"     * @param str String input of a number.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"blaukc"},"content":"     * @return Whether input is numeric.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"blaukc"},"content":"    public static boolean isNumeric(String str) {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"blaukc"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"blaukc"},"content":"            Integer.parseInt(str);","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"blaukc"},"content":"            return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"blaukc"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"blaukc"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"blaukc"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"blaukc"},"content":"     * Checks if the string input is in the yyyy-mm-dd format.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"blaukc"},"content":"     * @param str String input of a date.","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"blaukc"},"content":"     * @return Whether input is in the correct date format.","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"blaukc"},"content":"    public static boolean isDate(String str) {","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"blaukc"},"content":"        String dateString \u003d str.stripTrailing();","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"blaukc"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"blaukc"},"content":"            LocalDate.parse(dateString);","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"blaukc"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"blaukc"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"blaukc"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"blaukc"},"content":"        return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"blaukc"},"content":"    private static boolean checkParameterExists(","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"blaukc"},"content":"            ArrayList\u003cString\u003e output, String command, String parameterName, String parameter) {","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"blaukc"},"content":"        if (!parameter.isEmpty()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"blaukc"},"content":"            output.add(parameter);","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"blaukc"},"content":"            return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"blaukc"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"blaukc"},"content":"        Ui.print(\"Parameter \" + parameterName + \" of \" + command + \" cannot be empty!\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"blaukc"},"content":"        return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"blaukc"},"content":"    private static boolean checkFlagExists(","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"blaukc"},"content":"            ArrayList\u003cString\u003e output, String command, String parameterName, String parameter) {","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"blaukc"},"content":"        String[] parameterSplit \u003d parameter.split(\" \", 2);","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"blaukc"},"content":"        if (!parameterSplit[0].equals(parameterName)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"blaukc"},"content":"            Ui.print(\"Invalid flag name \" + parameterName + \" for command \" + command + \"\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"blaukc"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"blaukc"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"blaukc"},"content":"        String arg \u003d parameterSplit.length \u003e 1 ? parameterSplit[1] : \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"blaukc"},"content":"        return checkParameterExists(output, command, parameterName, arg);","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"blaukc"},"content":"    public static boolean getParameters(","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"blaukc"},"content":"            ArrayList\u003cString\u003e output, String command, String[] parameterNames, String args) {","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"blaukc"},"content":"        String[] argsSplit \u003d args.split(\"/\");","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"blaukc"},"content":"        if (argsSplit.length !\u003d parameterNames.length) {","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"blaukc"},"content":"            Ui.print(\"Invalid number of parameters for \" + command + \", need to have: \"","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"blaukc"},"content":"                    + Arrays.toString(parameterNames) + \"\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"blaukc"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"blaukc"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"blaukc"},"content":"        if (!checkParameterExists(output, command, parameterNames[0], argsSplit[0])) return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"blaukc"},"content":"        for (int i \u003d 1; i \u003c argsSplit.length; i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"blaukc"},"content":"            if (!checkFlagExists(output, command, parameterNames[i], argsSplit[i])) return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":77,"author":{"gitId":"blaukc"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":78,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":79,"author":{"gitId":"blaukc"},"content":"        return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"blaukc"},"content":"    public static boolean formatParameters(","lastModifiedDate":"2024-02-01"},{"lineNumber":83,"author":{"gitId":"blaukc"},"content":"            ArrayList\u003cObject\u003e formattedParameters, ArrayList\u003cString\u003e parameters, ParameterTypes[] formats) {","lastModifiedDate":"2024-02-01"},{"lineNumber":84,"author":{"gitId":"blaukc"},"content":"        for (int i \u003d 0; i \u003c formats.length; i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"blaukc"},"content":"            if (formats[i] \u003d\u003d ParameterTypes.INTEGER) {","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"blaukc"},"content":"                if (isNumeric(parameters.get(i))) {","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"blaukc"},"content":"                    formattedParameters.add(Integer.parseInt(parameters.get(i)));","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"blaukc"},"content":"                } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"blaukc"},"content":"                    Ui.print(\"Format of \" + parameters.get(i) + \" is not an integer\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"blaukc"},"content":"                    return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"blaukc"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"blaukc"},"content":"            } else if  (formats[i] \u003d\u003d ParameterTypes.DATE) {","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"blaukc"},"content":"                if (isDate(parameters.get(i))) {","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"blaukc"},"content":"                    formattedParameters.add(parameters.get(i).stripTrailing());","lastModifiedDate":"2024-01-31"},{"lineNumber":95,"author":{"gitId":"blaukc"},"content":"                } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":96,"author":{"gitId":"blaukc"},"content":"                    Ui.print(\"Format of \" + parameters.get(i) + \" is not a date (yyyy-mm-dd)\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":97,"author":{"gitId":"blaukc"},"content":"                    return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":98,"author":{"gitId":"blaukc"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"blaukc"},"content":"            } else {","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"blaukc"},"content":"                    formattedParameters.add(parameters.get(i).stripTrailing());","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"blaukc"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"blaukc"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"blaukc"},"content":"        return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":107,"author":{"gitId":"blaukc"},"content":"     * Parses the command arguments and adds them to the formattedParameter ArrayList.","lastModifiedDate":"2024-02-01"},{"lineNumber":108,"author":{"gitId":"blaukc"},"content":"     * @param formattedParameters Empty ArrayList to be populated with the formatted parameters.","lastModifiedDate":"2024-02-01"},{"lineNumber":109,"author":{"gitId":"blaukc"},"content":"     * @param command The command given.","lastModifiedDate":"2024-02-01"},{"lineNumber":110,"author":{"gitId":"blaukc"},"content":"     * @param args The arguments following the command.","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"blaukc"},"content":"     * @param parameterNames Array of parameter names.","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"blaukc"},"content":"     * @param formats Array of ParameterTypes corresponding to the parameter names.","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"blaukc"},"content":"     * @return Whether command and arguments could be successfully parsed.","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":115,"author":{"gitId":"blaukc"},"content":"    public static boolean parse(","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"blaukc"},"content":"            ArrayList\u003cObject\u003e formattedParameters,","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"blaukc"},"content":"            String command,","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"blaukc"},"content":"            String args,","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"blaukc"},"content":"            String[] parameterNames,","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"blaukc"},"content":"            ParameterTypes[] formats","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"blaukc"},"content":"    ) {","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"blaukc"},"content":"        ArrayList\u003cString\u003e parameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"blaukc"},"content":"        if (!Parser.getParameters(parameters, command, parameterNames, args)) {","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"blaukc"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"blaukc"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"blaukc"},"content":"        return Parser.formatParameters(formattedParameters, parameters, formats);","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"blaukc"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"blaukc":128}},{"path":"src/main/java/dude/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blaukc"},"content":"package dude;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"blaukc"},"content":"import dude.task.Deadline;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"blaukc"},"content":"import dude.task.Event;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"blaukc"},"content":"import dude.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"blaukc"},"content":"import dude.task.Todo;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"blaukc"},"content":"import java.io.File;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"blaukc"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"blaukc"},"content":"import java.io.IOException;","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"blaukc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"blaukc"},"content":"import java.util.Objects;","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"blaukc"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"blaukc"},"content":"public class Storage {","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"blaukc"},"content":"    private static final String directoryPath \u003d \"./data\";","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"blaukc"},"content":"    private String filePath \u003d \"./data/dude.txt\";","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"blaukc"},"content":"    private boolean createStorageIfNotExists() {","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"blaukc"},"content":"        new File(Storage.directoryPath).mkdirs();","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"blaukc"},"content":"        File storageFile \u003d new File(this.filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"blaukc"},"content":"        if (!storageFile.exists()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"blaukc"},"content":"            System.out.println(\"dude.Storage file not found. Creating storage file...\");","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"blaukc"},"content":"            try {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"blaukc"},"content":"                storageFile.createNewFile();","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"blaukc"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"blaukc"},"content":"                System.out.println(\"An error occurred creating the storage file.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"blaukc"},"content":"                System.out.println(e);","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"blaukc"},"content":"                return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"blaukc"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"blaukc"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"blaukc"},"content":"        return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"blaukc"},"content":"     * Class constructor.","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"blaukc"},"content":"    public Storage() {","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"blaukc"},"content":"        boolean success \u003d createStorageIfNotExists();","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"blaukc"},"content":"        if (!success) {","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"blaukc"},"content":"            throw new DudeNoStorageException();","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"blaukc"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"blaukc"},"content":"     * Class constructor specifying the list name.","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"blaukc"},"content":"     * @param listName List name which will be used as the path for the storage file.","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"blaukc"},"content":"    public Storage(String listName) {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"blaukc"},"content":"        this.filePath \u003d String.format(\"./data/%s.txt\", listName);","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"blaukc"},"content":"        boolean success \u003d createStorageIfNotExists();","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"blaukc"},"content":"        if (!success) {","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"blaukc"},"content":"            throw new DudeNoStorageException();","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"blaukc"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"blaukc"},"content":"     * Creates row in storage file.","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"blaukc"},"content":"     * @param task The task to create a row of.","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"blaukc"},"content":"     * @return Whether creation was successful.","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"blaukc"},"content":"    public boolean createRow(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"blaukc"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"blaukc"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath, true);","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"blaukc"},"content":"            fw.write(task.getStorageString() + System.lineSeparator());","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"blaukc"},"content":"            fw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"blaukc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"blaukc"},"content":"            System.out.println(\"An error occurred writing to the storage file.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"blaukc"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"blaukc"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"blaukc"},"content":"        return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"blaukc"},"content":"     * Creates multiple rows in storage file (clears out whatever data was previously there).","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"blaukc"},"content":"     * @param tasks The ArrayList of tasks to create rows of.","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"blaukc"},"content":"     * @return Whether creation was successful.","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"blaukc"},"content":"    public boolean createRows(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-01-31"},{"lineNumber":80,"author":{"gitId":"blaukc"},"content":"        boolean success \u003d this.clearStorage();","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"blaukc"},"content":"        if (!success) {","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"blaukc"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"blaukc"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"blaukc"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"blaukc"},"content":"            success \u003d this.createRow(tasks.get(i));","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"blaukc"},"content":"            if (!success) {","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"blaukc"},"content":"                return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":89,"author":{"gitId":"blaukc"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":90,"author":{"gitId":"blaukc"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":91,"author":{"gitId":"blaukc"},"content":"        return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":93,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":94,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"blaukc"},"content":"     * Clears the storage file.","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"blaukc"},"content":"     * @return Whether clearing was successful.","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"blaukc"},"content":"    public boolean clearStorage() {","lastModifiedDate":"2024-01-31"},{"lineNumber":99,"author":{"gitId":"blaukc"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":100,"author":{"gitId":"blaukc"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2024-01-31"},{"lineNumber":101,"author":{"gitId":"blaukc"},"content":"            fw.write(\"\");","lastModifiedDate":"2024-01-31"},{"lineNumber":102,"author":{"gitId":"blaukc"},"content":"            fw.close();","lastModifiedDate":"2024-01-31"},{"lineNumber":103,"author":{"gitId":"blaukc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":104,"author":{"gitId":"blaukc"},"content":"            System.out.println(\"An error occurred clearing the storage file.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"blaukc"},"content":"            return false;","lastModifiedDate":"2024-01-31"},{"lineNumber":106,"author":{"gitId":"blaukc"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":107,"author":{"gitId":"blaukc"},"content":"        return true;","lastModifiedDate":"2024-01-31"},{"lineNumber":108,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":109,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":110,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":111,"author":{"gitId":"blaukc"},"content":"     * Lists the current rows in the storage file.","lastModifiedDate":"2024-02-01"},{"lineNumber":112,"author":{"gitId":"blaukc"},"content":"     * @return The ArrayList of Tasks found in the storage file.","lastModifiedDate":"2024-02-01"},{"lineNumber":113,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":114,"author":{"gitId":"blaukc"},"content":"    public ArrayList\u003cTask\u003e listRows() {","lastModifiedDate":"2024-01-31"},{"lineNumber":115,"author":{"gitId":"blaukc"},"content":"        ArrayList\u003cTask\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":116,"author":{"gitId":"blaukc"},"content":"        try {","lastModifiedDate":"2024-01-31"},{"lineNumber":117,"author":{"gitId":"blaukc"},"content":"            File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2024-01-31"},{"lineNumber":118,"author":{"gitId":"blaukc"},"content":"            Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2024-01-31"},{"lineNumber":119,"author":{"gitId":"blaukc"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-01-31"},{"lineNumber":120,"author":{"gitId":"blaukc"},"content":"                String[] rowSplit \u003d s.nextLine().split(\" \\\\| \", 2);","lastModifiedDate":"2024-01-31"},{"lineNumber":121,"author":{"gitId":"blaukc"},"content":"                String taskType \u003d rowSplit[0];","lastModifiedDate":"2024-01-31"},{"lineNumber":122,"author":{"gitId":"blaukc"},"content":"                String[] rowData \u003d rowSplit[1].split(\" \\\\| \");","lastModifiedDate":"2024-01-31"},{"lineNumber":123,"author":{"gitId":"blaukc"},"content":"                boolean done \u003d Objects.equals(rowData[0], \"1\");","lastModifiedDate":"2024-01-31"},{"lineNumber":124,"author":{"gitId":"blaukc"},"content":"                switch (taskType) {","lastModifiedDate":"2024-01-31"},{"lineNumber":125,"author":{"gitId":"blaukc"},"content":"                case \"T\":","lastModifiedDate":"2024-01-31"},{"lineNumber":126,"author":{"gitId":"blaukc"},"content":"                    output.add(new Todo(rowData[1], done));","lastModifiedDate":"2024-01-31"},{"lineNumber":127,"author":{"gitId":"blaukc"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":128,"author":{"gitId":"blaukc"},"content":"                case \"D\":","lastModifiedDate":"2024-01-31"},{"lineNumber":129,"author":{"gitId":"blaukc"},"content":"                    output.add(new Deadline(rowData[1], done, rowData[2]));","lastModifiedDate":"2024-01-31"},{"lineNumber":130,"author":{"gitId":"blaukc"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":131,"author":{"gitId":"blaukc"},"content":"                case \"E\":","lastModifiedDate":"2024-01-31"},{"lineNumber":132,"author":{"gitId":"blaukc"},"content":"                    output.add(new Event(rowData[1], done, rowData[2], rowData[3]));","lastModifiedDate":"2024-01-31"},{"lineNumber":133,"author":{"gitId":"blaukc"},"content":"                    break;","lastModifiedDate":"2024-01-31"},{"lineNumber":134,"author":{"gitId":"blaukc"},"content":"                default:","lastModifiedDate":"2024-01-31"},{"lineNumber":135,"author":{"gitId":"blaukc"},"content":"                    System.out.println(\"Invalid task type found\");","lastModifiedDate":"2024-01-31"},{"lineNumber":136,"author":{"gitId":"blaukc"},"content":"                }","lastModifiedDate":"2024-01-31"},{"lineNumber":137,"author":{"gitId":"blaukc"},"content":"            }","lastModifiedDate":"2024-01-31"},{"lineNumber":138,"author":{"gitId":"blaukc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-01-31"},{"lineNumber":139,"author":{"gitId":"blaukc"},"content":"            System.out.println(\"An error occurred reading from the storage file.\");","lastModifiedDate":"2024-01-31"},{"lineNumber":140,"author":{"gitId":"blaukc"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-01-31"},{"lineNumber":141,"author":{"gitId":"blaukc"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":142,"author":{"gitId":"blaukc"},"content":"        return output;","lastModifiedDate":"2024-01-31"},{"lineNumber":143,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":144,"author":{"gitId":"blaukc"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"blaukc":144}},{"path":"src/main/java/dude/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blaukc"},"content":"package dude;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"blaukc"},"content":"import dude.task.Task;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"blaukc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"blaukc"},"content":"public class TaskList {","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"blaukc"},"content":"    Storage storage;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"blaukc"},"content":"     * Class constructor.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"blaukc"},"content":"    public TaskList() {","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"blaukc"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"blaukc"},"content":"     * Class constructor specifying the name of the task list.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"blaukc"},"content":"     * @param listName List name which will be used as the path for the storage file.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"blaukc"},"content":"    public TaskList(String listName) {","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"blaukc"},"content":"        this.storage \u003d new Storage(listName);","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"blaukc"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"blaukc"},"content":"        storage.createRow(task);","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"blaukc"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.listRows();","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"blaukc"},"content":"        Ui.print(\"Got it. I\u0027ve added this task:\\n\" + task + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"blaukc"},"content":"     * Lists the current tasks.","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"blaukc"},"content":"    public void list() {","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"blaukc"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.listRows();","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"blaukc"},"content":"        String listString \u003d \"\";","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"blaukc"},"content":"        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"blaukc"},"content":"            Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"blaukc"},"content":"            listString +\u003d i + \".\" + task + \"\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"blaukc"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"blaukc"},"content":"        Ui.print(listString);","lastModifiedDate":"2024-01-31"},{"lineNumber":41,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":42,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"blaukc"},"content":"     * Marks task at index as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"blaukc"},"content":"     * @param index Task index to be marked as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"blaukc"},"content":"    public void mark(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":48,"author":{"gitId":"blaukc"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.listRows();","lastModifiedDate":"2024-01-31"},{"lineNumber":49,"author":{"gitId":"blaukc"},"content":"        if (index \u003e\u003d tasks.size() || index \u003c 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":50,"author":{"gitId":"blaukc"},"content":"            Ui.print(\"Invalid index range\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":51,"author":{"gitId":"blaukc"},"content":"            return;","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"blaukc"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"blaukc"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"blaukc"},"content":"        task.mark();","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"blaukc"},"content":"        storage.createRows(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"blaukc"},"content":"        Ui.print(\"Nice! I\u0027ve marked this task as done:\\n\" + task + \"\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"blaukc"},"content":"     * Marks task at index as undone.","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"blaukc"},"content":"     * @param index Task index to be marked as undone.","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"blaukc"},"content":"    public void unmark(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":64,"author":{"gitId":"blaukc"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.listRows();","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"blaukc"},"content":"        if (index \u003e\u003d tasks.size() || index \u003c 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"blaukc"},"content":"            Ui.print(\"Invalid index range\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":67,"author":{"gitId":"blaukc"},"content":"            return;","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"blaukc"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"blaukc"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":70,"author":{"gitId":"blaukc"},"content":"        task.unmark();","lastModifiedDate":"2024-01-31"},{"lineNumber":71,"author":{"gitId":"blaukc"},"content":"        storage.createRows(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":72,"author":{"gitId":"blaukc"},"content":"        Ui.print(\"OK, I\u0027ve marked this task as not done yet:\\n\" + task + \"\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":73,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":74,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":75,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":76,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"blaukc"},"content":"     * Deletes task at index.","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"blaukc"},"content":"     * @param index Index at which task is removed.","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"blaukc"},"content":"    public void delete(int index) {","lastModifiedDate":"2024-01-31"},{"lineNumber":81,"author":{"gitId":"blaukc"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.listRows();","lastModifiedDate":"2024-01-31"},{"lineNumber":82,"author":{"gitId":"blaukc"},"content":"        if (index \u003e\u003d tasks.size() || index \u003c 0) {","lastModifiedDate":"2024-01-31"},{"lineNumber":83,"author":{"gitId":"blaukc"},"content":"            Ui.print(\"Invalid index range\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":84,"author":{"gitId":"blaukc"},"content":"            return;","lastModifiedDate":"2024-01-31"},{"lineNumber":85,"author":{"gitId":"blaukc"},"content":"        }","lastModifiedDate":"2024-01-31"},{"lineNumber":86,"author":{"gitId":"blaukc"},"content":"        Task task \u003d tasks.remove(index);","lastModifiedDate":"2024-01-31"},{"lineNumber":87,"author":{"gitId":"blaukc"},"content":"        storage.createRows(tasks);","lastModifiedDate":"2024-01-31"},{"lineNumber":88,"author":{"gitId":"blaukc"},"content":"        Ui.print(","lastModifiedDate":"2024-02-01"},{"lineNumber":89,"author":{"gitId":"blaukc"},"content":"                \"Noted. I\u0027ve removed this task:\\n\" + task + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":90,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":91,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":92,"author":{"gitId":"blaukc"},"content":"    public void find(String keyword) {","lastModifiedDate":"2024-02-01"},{"lineNumber":93,"author":{"gitId":"blaukc"},"content":"        ArrayList\u003cTask\u003e tasks \u003d storage.listRows();","lastModifiedDate":"2024-02-01"},{"lineNumber":94,"author":{"gitId":"blaukc"},"content":"        String listString \u003d \"\";","lastModifiedDate":"2024-02-01"},{"lineNumber":95,"author":{"gitId":"blaukc"},"content":"        int count \u003d 1;","lastModifiedDate":"2024-02-01"},{"lineNumber":96,"author":{"gitId":"blaukc"},"content":"        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {","lastModifiedDate":"2024-02-01"},{"lineNumber":97,"author":{"gitId":"blaukc"},"content":"            Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":98,"author":{"gitId":"blaukc"},"content":"            if (task.contains(keyword)) {","lastModifiedDate":"2024-02-01"},{"lineNumber":99,"author":{"gitId":"blaukc"},"content":"                listString +\u003d count + \".\" + task + \"\\n\";","lastModifiedDate":"2024-02-01"},{"lineNumber":100,"author":{"gitId":"blaukc"},"content":"                count++;","lastModifiedDate":"2024-02-01"},{"lineNumber":101,"author":{"gitId":"blaukc"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":102,"author":{"gitId":"blaukc"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":103,"author":{"gitId":"blaukc"},"content":"        Ui.print(\"Here are the matching tasks in your list:\\n\" + listString);","lastModifiedDate":"2024-02-01"},{"lineNumber":104,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":105,"author":{"gitId":"blaukc"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"blaukc":105}},{"path":"src/main/java/dude/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blaukc"},"content":"package dude;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"blaukc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"blaukc"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"blaukc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"blaukc"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"blaukc"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"blaukc"},"content":"public class Ui {","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"blaukc"},"content":"    static final String spacer \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"blaukc"},"content":"    static final String name \u003d \"Dude\";","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"blaukc"},"content":"     * Prints text with spacers.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"blaukc"},"content":"     * @param text Text to be printed.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"blaukc"},"content":"    public static void print(String text) {","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"blaukc"},"content":"        System.out.println(spacer + text + spacer);","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"blaukc"},"content":"     * Prints greeting text.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"blaukc"},"content":"    public static void greeting() {","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"blaukc"},"content":"        print(\"Hello! I\u0027m Dude\\nWhat can I do for you?\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"blaukc"},"content":"     * Prints goodbye text.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"blaukc"},"content":"    public static void goodbye() {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"blaukc"},"content":"        print(\"Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"blaukc"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"blaukc":34}},{"path":"src/main/java/dude/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blaukc"},"content":"package dude.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"blaukc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"blaukc"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"blaukc"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"blaukc"},"content":"    protected LocalDate by;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"blaukc"},"content":"     * Creates deadline object.","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"blaukc"},"content":"     * @param description Deadline description.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"blaukc"},"content":"     * @param by Deadline due date.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"blaukc"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-01-22"},{"lineNumber":15,"author":{"gitId":"blaukc"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":16,"author":{"gitId":"blaukc"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"blaukc"},"content":"     * Creates deadline object.","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"blaukc"},"content":"     * @param description Deadline description.","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"blaukc"},"content":"     * @param done Whether task is done.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"blaukc"},"content":"     * @param by Deadline due date.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"blaukc"},"content":"    public Deadline(String description, boolean done, String by) {","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"blaukc"},"content":"        super(description, done);","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"blaukc"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"blaukc"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"blaukc"},"content":"    public String getStorageString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"blaukc"},"content":"        return String.format(\"D | %s | %s\", super.getStorageString(), this.by);","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"blaukc"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":37,"author":{"gitId":"blaukc"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":38,"author":{"gitId":"blaukc"},"content":"        return \"[D]\" + super.toString() +","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"blaukc"},"content":"                \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"blaukc"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"blaukc":41}},{"path":"src/main/java/dude/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blaukc"},"content":"package dude.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"blaukc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"blaukc"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"blaukc"},"content":"public class Event extends Task{","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"blaukc"},"content":"    protected LocalDate from;","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"blaukc"},"content":"    protected LocalDate to;","lastModifiedDate":"2024-01-31"},{"lineNumber":9,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"blaukc"},"content":"     * Creates event object.","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"blaukc"},"content":"     * @param description Event description.","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"blaukc"},"content":"     * @param from Event start date.","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"blaukc"},"content":"     * @param to Event end date.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"blaukc"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-01-22"},{"lineNumber":17,"author":{"gitId":"blaukc"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":18,"author":{"gitId":"blaukc"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"blaukc"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":21,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":22,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"blaukc"},"content":"     * Creates event object.","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"blaukc"},"content":"     * @param description Event description.","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"blaukc"},"content":"     * @param done Whether event is done.","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"blaukc"},"content":"     * @param from Event start date.","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"blaukc"},"content":"     * @param to Event end date.","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"blaukc"},"content":"    public Event(String description, boolean done, String from, String to) {","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"blaukc"},"content":"        super(description, done);","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"blaukc"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"blaukc"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"blaukc"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":36,"author":{"gitId":"blaukc"},"content":"    public String getStorageString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":37,"author":{"gitId":"blaukc"},"content":"        return String.format(\"E | %s | %s | %s\", super.getStorageString(), this.from, this.to);","lastModifiedDate":"2024-01-31"},{"lineNumber":38,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":39,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":40,"author":{"gitId":"blaukc"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"blaukc"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"blaukc"},"content":"        return \"[E]\" + super.toString() +","lastModifiedDate":"2024-01-31"},{"lineNumber":43,"author":{"gitId":"blaukc"},"content":"                \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) +","lastModifiedDate":"2024-01-31"},{"lineNumber":44,"author":{"gitId":"blaukc"},"content":"                \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) +","lastModifiedDate":"2024-01-31"},{"lineNumber":45,"author":{"gitId":"blaukc"},"content":"                \")\";","lastModifiedDate":"2024-01-31"},{"lineNumber":46,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"blaukc"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"blaukc":47}},{"path":"src/main/java/dude/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blaukc"},"content":"package dude.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"blaukc"},"content":"public abstract class Task {","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"blaukc"},"content":"    private boolean done \u003d false;","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"blaukc"},"content":"    private final String name;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"blaukc"},"content":"     * Creates task object.","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"blaukc"},"content":"     * @param name Name of task.","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"blaukc"},"content":"    public Task(String name) {","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"blaukc"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":15,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"blaukc"},"content":"     * Creates task object.","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"blaukc"},"content":"     * @param name Name of task.","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"blaukc"},"content":"     * @param done Whether task is done.","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"blaukc"},"content":"    public Task(String name, boolean done) {","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"blaukc"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-01-22"},{"lineNumber":24,"author":{"gitId":"blaukc"},"content":"        this.done \u003d done;","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":26,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"blaukc"},"content":"     * Returns representative string for storage.","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"blaukc"},"content":"     * @return String to be used in the storage file.","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"blaukc"},"content":"    public String getStorageString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":32,"author":{"gitId":"blaukc"},"content":"        return String.format(\"%s | %s\", this.done ? \"1\" : \"0\", this.name);","lastModifiedDate":"2024-01-31"},{"lineNumber":33,"author":{"gitId":"blaukc"},"content":"    };","lastModifiedDate":"2024-01-31"},{"lineNumber":34,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":35,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"blaukc"},"content":"     * Marks task as done.","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"blaukc"},"content":"    public void mark() {","lastModifiedDate":"2024-01-22"},{"lineNumber":39,"author":{"gitId":"blaukc"},"content":"        this.done \u003d true;","lastModifiedDate":"2024-01-22"},{"lineNumber":40,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":41,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":42,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"blaukc"},"content":"     * Marks task as undone.","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"blaukc"},"content":"    public void unmark() {","lastModifiedDate":"2024-01-22"},{"lineNumber":46,"author":{"gitId":"blaukc"},"content":"        this.done \u003d false;","lastModifiedDate":"2024-01-22"},{"lineNumber":47,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":48,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":49,"author":{"gitId":"blaukc"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"blaukc"},"content":"        return this.name.contains(keyword);","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"blaukc"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":54,"author":{"gitId":"blaukc"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":55,"author":{"gitId":"blaukc"},"content":"        String checkbox \u003d \"[\" + (this.done ? \"x\" : \" \") + \"] \";","lastModifiedDate":"2024-01-22"},{"lineNumber":56,"author":{"gitId":"blaukc"},"content":"        return checkbox + this.name;","lastModifiedDate":"2024-01-22"},{"lineNumber":57,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":58,"author":{"gitId":"blaukc"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"blaukc":58}},{"path":"src/main/java/dude/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blaukc"},"content":"package dude.task;","lastModifiedDate":"2024-01-31"},{"lineNumber":2,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":3,"author":{"gitId":"blaukc"},"content":"public class Todo extends Task{","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"blaukc"},"content":"     * Creates Todo object.","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"blaukc"},"content":"     * @param description Todo description.","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"blaukc"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-01-22"},{"lineNumber":10,"author":{"gitId":"blaukc"},"content":"        super(description);","lastModifiedDate":"2024-01-22"},{"lineNumber":11,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":12,"author":{"gitId":"blaukc"},"content":"    ","lastModifiedDate":"2024-01-22"},{"lineNumber":13,"author":{"gitId":"blaukc"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"blaukc"},"content":"     * Creates Todo object.","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"blaukc"},"content":"     * @param description Todo description.","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"blaukc"},"content":"     * @param done  Whether todo is done.","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"blaukc"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"blaukc"},"content":"    public Todo(String description, boolean done) {","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"blaukc"},"content":"        super(description, done);","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"blaukc"},"content":"    @Override","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"blaukc"},"content":"    public String getStorageString() {","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"blaukc"},"content":"        return String.format(\"T | %s\", super.getStorageString());","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"blaukc"},"content":"    @Override","lastModifiedDate":"2024-01-22"},{"lineNumber":28,"author":{"gitId":"blaukc"},"content":"    public String toString() {","lastModifiedDate":"2024-01-22"},{"lineNumber":29,"author":{"gitId":"blaukc"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-01-22"},{"lineNumber":30,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-01-22"},{"lineNumber":31,"author":{"gitId":"blaukc"},"content":"}","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"blaukc":31}},{"path":"src/test/java/dude/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blaukc"},"content":"package dude;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"blaukc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"blaukc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"blaukc"},"content":"public class ParserTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"blaukc"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"blaukc"},"content":"    public void isNumeric_nonInteger_falseReturned() {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"blaukc"},"content":"        assertEquals(false, Parser.isNumeric(\"a\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"blaukc"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"blaukc"},"content":"    public void isNumeric_integer_trueReturned(){","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"blaukc"},"content":"        assertEquals(true, Parser.isNumeric(\"1234\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"blaukc"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"blaukc"},"content":"    public void isDate_validDate_trueReturned() {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"blaukc"},"content":"        assertEquals(true, Parser.isDate(\"2022-01-01\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"blaukc"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"blaukc"},"content":"    public void isDate_invalidDate_falseReturned(){","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"blaukc"},"content":"        assertEquals(false, Parser.isDate(\"2022-13-01\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"blaukc"},"content":"        assertEquals(false, Parser.isDate(\"2022-1-01\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"blaukc"},"content":"        assertEquals(false, Parser.isDate(\"2022-01-32\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"blaukc"},"content":"        assertEquals(false, Parser.isDate(\"2022-02-30\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"blaukc"},"content":"        assertEquals(false, Parser.isDate(\"202-01-01\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"blaukc"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"blaukc":31}},{"path":"src/test/java/dude/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"blaukc"},"content":"package dude;","lastModifiedDate":"2024-02-01"},{"lineNumber":2,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":3,"author":{"gitId":"blaukc"},"content":"import dude.task.Deadline;","lastModifiedDate":"2024-02-01"},{"lineNumber":4,"author":{"gitId":"blaukc"},"content":"import dude.task.Event;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"blaukc"},"content":"import dude.task.Task;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"blaukc"},"content":"import dude.task.Todo;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"blaukc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"blaukc"},"content":"import java.io.File;","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"blaukc"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-01"},{"lineNumber":11,"author":{"gitId":"blaukc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"blaukc"},"content":"import java.util.Objects;","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"blaukc"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"blaukc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"blaukc"},"content":"public class StorageTest {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"blaukc"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"blaukc"},"content":"    public void Storage_path_noException() {","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"blaukc"},"content":"        Storage storage \u003d new Storage(\"test\");","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"blaukc"},"content":"        assertEquals(false, Parser.isNumeric(\"a\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"blaukc"},"content":"    @Test","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"blaukc"},"content":"    public void createRows_taskList_fileWritten() {","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"blaukc"},"content":"        Storage storage \u003d new Storage(\"test\");","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"blaukc"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"blaukc"},"content":"        taskList.add(new Todo(\"test1\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"blaukc"},"content":"        taskList.add(new Deadline(\"test2\", \"2022-01-01\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"blaukc"},"content":"        taskList.add(new Event(\"test3\", \"2022-02-02\", \"2022-03-03\"));","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"blaukc"},"content":"        storage.createRows(taskList);","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"blaukc"},"content":"        String[] expected \u003d new String[]{","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"blaukc"},"content":"                \"T | 0 | test1\",","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"blaukc"},"content":"                \"D | 0 | test2 | 2022-01-01\",","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"blaukc"},"content":"                \"E | 0 | test3 | 2022-02-02 | 2022-03-03\"","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"blaukc"},"content":"        };","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"blaukc"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"blaukc"},"content":"        try {","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"blaukc"},"content":"            File f \u003d new File(\"./data/test.txt\"); // create a File for the given file path","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"blaukc"},"content":"            Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2024-02-01"},{"lineNumber":41,"author":{"gitId":"blaukc"},"content":"            int i \u003d 0;","lastModifiedDate":"2024-02-01"},{"lineNumber":42,"author":{"gitId":"blaukc"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2024-02-01"},{"lineNumber":43,"author":{"gitId":"blaukc"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"blaukc"},"content":"                assertEquals(expected[i], line);","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"blaukc"},"content":"                i++;","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"blaukc"},"content":"            }","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"blaukc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"blaukc"},"content":"            System.out.println(\"An error occurred reading from the storage file.\");","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"blaukc"},"content":"            assertEquals(0, 1);","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"blaukc"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"blaukc"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"blaukc"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"blaukc":52}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"blaukc"},"content":"todo read book","lastModifiedDate":"2024-01-22"},{"lineNumber":2,"author":{"gitId":"blaukc"},"content":"deadline return book /by June 6th","lastModifiedDate":"2024-01-22"},{"lineNumber":3,"author":{"gitId":"blaukc"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2024-01-22"},{"lineNumber":4,"author":{"gitId":"blaukc"},"content":"todo join sports club","lastModifiedDate":"2024-01-22"},{"lineNumber":5,"author":{"gitId":"blaukc"},"content":"todo borrow book","lastModifiedDate":"2024-01-22"},{"lineNumber":6,"author":{"gitId":"blaukc"},"content":"mark 1","lastModifiedDate":"2024-01-22"},{"lineNumber":7,"author":{"gitId":"blaukc"},"content":"mark 4","lastModifiedDate":"2024-01-22"},{"lineNumber":8,"author":{"gitId":"blaukc"},"content":"list","lastModifiedDate":"2024-01-22"},{"lineNumber":9,"author":{"gitId":"blaukc"},"content":"bye","lastModifiedDate":"2024-01-22"}],"authorContributionMap":{"blaukc":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"blaukc"},"content":"java -classpath ..\\bin Dude \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-01-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"blaukc":1,"-":20}}]
