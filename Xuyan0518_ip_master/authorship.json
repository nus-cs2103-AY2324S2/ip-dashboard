[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"# friday project template","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"3. After that, locate the `src/main/java/friday.java` file, right-click it, and choose `Run friday.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"Xuyan0518":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"    mainClass.set(\"friday.main.Friday\")","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"Xuyan0518"},"content":"//    archiveBaseName \u003d \"Friday\"","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Xuyan0518"},"content":"//    archiveClassifier \u003d null","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"//    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Xuyan0518"},"content":"    archiveFileName \u003d \u0027Friday.jar\u0027","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":46,"author":{"gitId":"Xuyan0518"},"content":"checkstyle {","lastModifiedDate":"2024-02-08"},{"lineNumber":47,"author":{"gitId":"Xuyan0518"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2024-02-08"},{"lineNumber":48,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"-":38,"Xuyan0518":10}},{"path":"src/main/java/data/Friday.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"[T][ ] create file","lastModifiedDate":"2024-02-08"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"[T][X] read","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"[D][X] submit (by: Feb 01 2024 0800)","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"[D][ ] presentation (by: Feb 03 2024 1000)","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"[E][X] running (from: Feb 02 2024 0600 to: Feb 02 2024 0700)","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"[E][ ] meeting (from: Feb 03 2024 1700 to: Feb 02 2024 1900)","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"[E][ ] lesson (from: Jan 19 2024 0800 to: May 01 2024 1900)","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"[T][X] assignment","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"[T][X] sleep","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"[D][ ] wake up (by: Feb 03 2024 0700)","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"[T][X] jump","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"[T][ ] run","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"[T][X] jog","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"Xuyan0518":13}},{"path":"src/main/java/friday/main/Friday.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"package friday.main;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"import friday.parser.Parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"import friday.storage.Storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"import friday.task.Deadline;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"import friday.task.Event;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"import friday.task.TaskList;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"import friday.task.Todo;","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"import friday.ui.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":" * The main class for the Friday task management application.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":" * Friday manages tasks such as Todos, Deadlines, and Events, providing a simple command-line interface for users.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":" * Tasks are stored in a data file, and users can interact with Friday by entering commands.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"public class Friday {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"    private static final String DATA_FILE_PATH \u003d \"./src/main/java/data/Friday.txt\";","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"    private static final String HORIZONTAL_LINE \u003d \"_\".repeat(60);","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"    private final Ui ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"    private final Storage storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"    private Parser parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"     * Constructs a Friday object with necessary components like UI, Storage, and Parser.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"     * Initializes the task list by loading data from a file or creating a new one if the file does not exist.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"    public Friday() {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"        storage \u003d new Storage(DATA_FILE_PATH);","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Xuyan0518"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Xuyan0518"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Xuyan0518"},"content":"            storage.checkFile();","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Xuyan0518"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Xuyan0518"},"content":"            ui.displayMessage(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Xuyan0518"},"content":"        try {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Xuyan0518"},"content":"            tasks \u003d storage.loadDataFromFile();","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Xuyan0518"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Xuyan0518"},"content":"            ui.displayMessage(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Xuyan0518"},"content":"     * Runs the Friday application, interacting with the user through the command-line interface.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Xuyan0518"},"content":"    public void run() {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Xuyan0518"},"content":"        ui.displayMessage(HORIZONTAL_LINE);","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Xuyan0518"},"content":"        ui.displayMessage(\"Hello! I\u0027m Friday\");","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Xuyan0518"},"content":"        ui.displayMessage(\"What can I do for you?\");","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"Xuyan0518"},"content":"        ui.displayMessage(HORIZONTAL_LINE);","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"Xuyan0518"},"content":"        String userInput \u003d ui.getUserInput().trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Xuyan0518"},"content":"        String category \u003d parser.parseCommand(userInput);","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"Xuyan0518"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"Xuyan0518"},"content":"            ui.displayMessage(HORIZONTAL_LINE);","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"Xuyan0518"},"content":"            switch (category) {","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"Xuyan0518"},"content":"            case \"list\":","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"Xuyan0518"},"content":"                ui.displayMessage(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"Xuyan0518"},"content":"                ui.displayTaskList(tasks);","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"Xuyan0518"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"Xuyan0518"},"content":"            case \"mark\":","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"Xuyan0518"},"content":"                tasks.markTask(userInput);","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"Xuyan0518"},"content":"                try {","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"Xuyan0518"},"content":"                    storage.writeToFile(tasks);","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"Xuyan0518"},"content":"                } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"Xuyan0518"},"content":"                    ui.displayMessage(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"Xuyan0518"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"Xuyan0518"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"Xuyan0518"},"content":"            case \"unmark\":","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"Xuyan0518"},"content":"                tasks.unmarkTask(userInput);","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"Xuyan0518"},"content":"                try {","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"Xuyan0518"},"content":"                    storage.writeToFile(tasks);","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"Xuyan0518"},"content":"                } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"Xuyan0518"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"Xuyan0518"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"Xuyan0518"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"Xuyan0518"},"content":"            case \"todo\":","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"Xuyan0518"},"content":"                Todo t \u003d tasks.addTodo(userInput);","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"Xuyan0518"},"content":"                try {","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"Xuyan0518"},"content":"                    storage.appendToFile(t.toString() + System.lineSeparator());","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"Xuyan0518"},"content":"                } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"Xuyan0518"},"content":"                    ui.displayMessage(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"Xuyan0518"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"Xuyan0518"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"Xuyan0518"},"content":"            case \"deadline\":","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"Xuyan0518"},"content":"                Deadline d \u003d tasks.addDeadline(userInput);","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"Xuyan0518"},"content":"                try {","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"Xuyan0518"},"content":"                    storage.appendToFile(d.toString() + System.lineSeparator());","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"Xuyan0518"},"content":"                } catch (IOException e) {","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"Xuyan0518"},"content":"                    ui.displayMessage(e.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"Xuyan0518"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"Xuyan0518"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"Xuyan0518"},"content":"            case \"event\":","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"Xuyan0518"},"content":"                Event e \u003d tasks.addEvent(userInput);","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"Xuyan0518"},"content":"                try {","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"Xuyan0518"},"content":"                    storage.appendToFile(e.toString() + System.lineSeparator());","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"Xuyan0518"},"content":"                } catch (IOException err) {","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"Xuyan0518"},"content":"                    System.out.println(err.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"Xuyan0518"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"Xuyan0518"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"Xuyan0518"},"content":"            case \"delete\":","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"Xuyan0518"},"content":"                tasks.deleteTask(userInput);","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"Xuyan0518"},"content":"                try {","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"Xuyan0518"},"content":"                    storage.writeToFile(tasks);","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"Xuyan0518"},"content":"                } catch (IOException err) {","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"Xuyan0518"},"content":"                    ui.displayMessage(err.getMessage());","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"Xuyan0518"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"Xuyan0518"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"Xuyan0518"},"content":"            case \"find\":","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"Xuyan0518"},"content":"                tasks.searchTask(userInput);","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"Xuyan0518"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"Xuyan0518"},"content":"            default:","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"Xuyan0518"},"content":"                ui.displayMessage(\"HUH? What do you mean?\");","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"Xuyan0518"},"content":"                break;","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"Xuyan0518"},"content":"            ui.displayMessage(HORIZONTAL_LINE);","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"Xuyan0518"},"content":"            userInput \u003d ui.getUserInput().trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"Xuyan0518"},"content":"            category \u003d userInput.split(\" \")[0];","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"Xuyan0518"},"content":"        ui.displayMessage(HORIZONTAL_LINE);","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"Xuyan0518"},"content":"        ui.displayMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"Xuyan0518"},"content":"        ui.displayMessage(HORIZONTAL_LINE);","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"Xuyan0518"},"content":"     * The entry point of the Friday application.","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"Xuyan0518"},"content":"     * @param args The command-line arguments (not used in this application).","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"Xuyan0518"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"Xuyan0518"},"content":"        new Friday().run();","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Xuyan0518":137}},{"path":"src/main/java/friday/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"package friday.parser;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":" * The Parser class is responsible for parsing user commands in the Friday application.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":" * It extracts the command keyword from the user input for further processing.","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"public class Parser {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"     * Parses the user input to extract the command keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"     * @param userInput The user input to be parsed.","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"     * @return The command keyword extracted from the user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"    public String parseCommand(String userInput) {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"        return userInput.split(\" \")[0].toLowerCase().trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Xuyan0518":17}},{"path":"src/main/java/friday/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"package friday.storage;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"import java.io.File;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"import friday.task.Task;","lastModifiedDate":"2024-02-08"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"import friday.task.TaskList;","lastModifiedDate":"2024-02-08"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":" * The Storage class is responsible for handling the reading and writing of task data","lastModifiedDate":"2024-02-08"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":" * to a file in the Friday application.","lastModifiedDate":"2024-02-08"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"public class Storage {","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"    private String filePath;","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"     * @param filePath The path to the file where task data is stored.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"     * Checks if the data file exists; if not, creates a new file.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"     * @throws IOException If an I/O error occurs during file creation.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"    public void checkFile() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Xuyan0518"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Xuyan0518"},"content":"        if (!f.exists()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Xuyan0518"},"content":"            if (f.createNewFile()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Xuyan0518"},"content":"                System.out.println(\"Data file created.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Xuyan0518"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"                System.out.println(\"Error creating data file.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Xuyan0518"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Xuyan0518"},"content":"            System.out.println(\"Loading data from Duke.txt...\");","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Xuyan0518"},"content":"     * Writes the task list data to the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Xuyan0518"},"content":"     * @param tasks The TaskList containing tasks to be written to the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"Xuyan0518"},"content":"     * @throws IOException If an I/O error occurs during file writing.","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Xuyan0518"},"content":"    public void writeToFile(TaskList tasks) throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Xuyan0518"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Xuyan0518"},"content":"        for (int i \u003d 0; i \u003c tasks.getLength(); i++) {","lastModifiedDate":"2024-02-08"},{"lineNumber":54,"author":{"gitId":"Xuyan0518"},"content":"            fw.write(tasks.getTask(i).toString() + System.lineSeparator());","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"Xuyan0518"},"content":"        fw.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"Xuyan0518"},"content":"     * Reads task data from the file and returns a TaskList.","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"Xuyan0518"},"content":"     * @return The TaskList containing tasks loaded from the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"Xuyan0518"},"content":"     * @throws IOException If an I/O error occurs during file reading.","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"Xuyan0518"},"content":"    public TaskList loadDataFromFile() throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"Xuyan0518"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"Xuyan0518"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"Xuyan0518"},"content":"        try (Scanner fileScanner \u003d new Scanner(file)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"Xuyan0518"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"Xuyan0518"},"content":"                String taskData \u003d fileScanner.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"Xuyan0518"},"content":"                if (!taskData.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"Xuyan0518"},"content":"                    Task task \u003d Task.parseTask(taskData);","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"Xuyan0518"},"content":"                    if (task !\u003d null) {","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"Xuyan0518"},"content":"                        tasks.addTaskFromData(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"Xuyan0518"},"content":"                    }","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"Xuyan0518"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"Xuyan0518"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"Xuyan0518"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"Xuyan0518"},"content":"        return tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"Xuyan0518"},"content":"     * Appends text to the end of the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"Xuyan0518"},"content":"     * @param textToAppend The text to append to the file.","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"Xuyan0518"},"content":"     * @throws IOException If an I/O error occurs during file appending.","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"Xuyan0518"},"content":"    public void appendToFile(String textToAppend) throws IOException {","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"Xuyan0518"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"Xuyan0518"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"Xuyan0518"},"content":"        fw.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Xuyan0518":97}},{"path":"src/main/java/friday/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"package friday.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":" * Represents a task with a deadline in the Friday application.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":" * Subclass of the Task class.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"     * Constructs a Deadline object with the specified description and deadline in string format.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"     * @param byString    The deadline in string format (\"yyyy-MM-dd HHmm\").","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"    public Deadline(String description, String byString) {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"        super(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"        this.by \u003d parseDeadline(byString);","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"     * Constructs a Deadline object with the specified description and deadline in LocalDateTime format.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"     * @param by          The deadline in LocalDateTime format.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"        super(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Xuyan0518"},"content":"    private LocalDateTime parseDeadline(String byString) {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Xuyan0518"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Xuyan0518"},"content":"        return LocalDateTime.parse(byString, formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Xuyan0518"},"content":"     * Gets the formatted deadline string (\"MMM dd yyyy HHmm\").","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Xuyan0518"},"content":"     * @return The formatted deadline string.","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Xuyan0518"},"content":"    public String getFormattedDeadline() {","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Xuyan0518"},"content":"        return by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"Xuyan0518"},"content":"     * Overrides the toString method to provide a formatted string representation of the Deadline object.","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Xuyan0518"},"content":"     * @return The formatted string representation of the Deadline object.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Xuyan0518"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"Xuyan0518"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"Xuyan0518"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getFormattedDeadline() + \")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Xuyan0518":57}},{"path":"src/main/java/friday/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"package friday.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":" * Represents an event task in the Friday application.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":" * Subclass of the Task class.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"     * Constructs an Event object with the specified description, start time, and end time in string format.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"     * @param description   The description of the event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"     * @param fromString    The start time of the event in string format (\"yyyy-MM-dd HHmm\").","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"     * @param toTimeString  The end time of the event in string format (\"yyyy-MM-dd HHmm\").","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"    public Event(String description, String fromString, String toTimeString) {","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"        super(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"        this.from \u003d parseDateTime(fromString);","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"        this.to \u003d parseDateTime(toTimeString);","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"     * Constructs an Event object with the specified description, start time, and end time in LocalDateTime format.","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"     * @param from        The start time of the event in LocalDateTime format.","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"     * @param to          The end time of the event in LocalDateTime format.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Xuyan0518"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Xuyan0518"},"content":"        super(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Xuyan0518"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Xuyan0518"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Xuyan0518"},"content":"    private LocalDateTime parseDateTime(String dateTimeString) {","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Xuyan0518"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Xuyan0518"},"content":"        return LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Xuyan0518"},"content":"     * Gets the formatted start time string (\"MMM dd yyyy HHmm\").","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Xuyan0518"},"content":"     * @return The formatted start time string.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Xuyan0518"},"content":"    public String getFormattedFromTime() {","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Xuyan0518"},"content":"        return from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"Xuyan0518"},"content":"     * Gets the formatted end time string (\"MMM dd yyyy HHmm\").","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Xuyan0518"},"content":"     * @return The formatted end time string.","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"Xuyan0518"},"content":"    public String getFormattedToTime() {","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"Xuyan0518"},"content":"        return to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"));","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"Xuyan0518"},"content":"     * Overrides the toString method to provide a formatted string representation of the Event object.","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"Xuyan0518"},"content":"     * @return The formatted string representation of the Event object.","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"Xuyan0518"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"Xuyan0518"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"Xuyan0518"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + getFormattedFromTime()","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"Xuyan0518"},"content":"                        + \" to: \" + getFormattedToTime() + \")\";","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Xuyan0518":73}},{"path":"src/main/java/friday/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"package friday.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":" * Represents a general task in the Friday application.","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":" * This is the base class for different types of tasks such as Todo, Deadline, and Event.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"public class Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"    protected String description;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"     * Constructs a Task object with the specified description.","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"     * Gets the status icon representing whether the task is done or not.","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"     * @return The status icon (\"X\" if done, \" \" if not done).","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Xuyan0518"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Xuyan0518"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Xuyan0518"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Xuyan0518"},"content":"     * Marks the task as undone.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Xuyan0518"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Xuyan0518"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Xuyan0518"},"content":"     * Checks if the task\u0027s description contains the specified keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Xuyan0518"},"content":"     * @param keyword The keyword to search for in the task\u0027s description.","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Xuyan0518"},"content":"     * @return {@code true} if the task\u0027s description contains the keyword (case-insensitive), {@code false} otherwise.","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Xuyan0518"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"Xuyan0518"},"content":"        return description.toLowerCase().contains(keyword);","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"Xuyan0518"},"content":"     * Parses a task from its string representation and returns the corresponding Task object.","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"Xuyan0518"},"content":"     * @param taskString The string representation of the task.","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"Xuyan0518"},"content":"     * @return The parsed Task object.","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"Xuyan0518"},"content":"    public static Task parseTask(String taskString) {","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"Xuyan0518"},"content":"        String cat \u003d taskString.substring(1, 2);","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"Xuyan0518"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"Xuyan0518"},"content":"        switch (cat) {","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"Xuyan0518"},"content":"        case \"T\":","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"Xuyan0518"},"content":"            Todo t \u003d new Todo(taskString.substring(7).trim());","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"Xuyan0518"},"content":"            if (taskString.substring(4, 5).equals(\"X\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"Xuyan0518"},"content":"                t.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"Xuyan0518"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"Xuyan0518"},"content":"                t.markAsUndone();","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":74,"author":{"gitId":"Xuyan0518"},"content":"            return t;","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"Xuyan0518"},"content":"        case \"D\":","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"Xuyan0518"},"content":"            String byString \u003d taskString.split(\":\")[1].split(\"\\\\)\")[0].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"Xuyan0518"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(byString, formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"Xuyan0518"},"content":"            String description \u003d taskString.split(\"\\\\(\")[0].substring(7).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"Xuyan0518"},"content":"            Deadline d \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"Xuyan0518"},"content":"            if (taskString.substring(4, 5).equals(\"X\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"Xuyan0518"},"content":"                d.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"Xuyan0518"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"Xuyan0518"},"content":"                d.markAsUndone();","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"Xuyan0518"},"content":"            return d;","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"Xuyan0518"},"content":"        case \"E\":","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"Xuyan0518"},"content":"            int fromIndex \u003d taskString.indexOf(\"from: \");","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"Xuyan0518"},"content":"            int toIndex \u003d taskString.indexOf(\"to: \");","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"Xuyan0518"},"content":"            String fromString \u003d taskString.substring(fromIndex + 5, toIndex).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"Xuyan0518"},"content":"            LocalDateTime from \u003d LocalDateTime.parse(fromString, formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"Xuyan0518"},"content":"            String toTimeString \u003d taskString.substring(toIndex + 3).split(\"\\\\)\")[0].trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"Xuyan0518"},"content":"            LocalDateTime to \u003d LocalDateTime.parse(toTimeString, formatter);","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"Xuyan0518"},"content":"            String des \u003d taskString.split(\"\\\\(\")[0].substring(7).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"Xuyan0518"},"content":"            Event e \u003d new Event(des, from, to);","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"Xuyan0518"},"content":"            if (taskString.substring(4, 5).equals(\"X\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"Xuyan0518"},"content":"                e.markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":97,"author":{"gitId":"Xuyan0518"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":98,"author":{"gitId":"Xuyan0518"},"content":"                e.markAsUndone();","lastModifiedDate":"2024-02-02"},{"lineNumber":99,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":100,"author":{"gitId":"Xuyan0518"},"content":"            return e;","lastModifiedDate":"2024-02-02"},{"lineNumber":101,"author":{"gitId":"Xuyan0518"},"content":"        default:","lastModifiedDate":"2024-02-02"},{"lineNumber":102,"author":{"gitId":"Xuyan0518"},"content":"            System.out.println(\"Cannot resolve task.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":103,"author":{"gitId":"Xuyan0518"},"content":"            return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":104,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":105,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"Xuyan0518"},"content":"     * Overrides the toString method to provide a formatted string representation of the Task object.","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"Xuyan0518"},"content":"     * @return The formatted string representation of the Task object.","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"Xuyan0518"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"Xuyan0518"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"Xuyan0518"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Xuyan0518":116}},{"path":"src/main/java/friday/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"package friday.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"import friday.ui.Ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":" * Represents a list of tasks in the Friday application.","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"public class TaskList {","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"    private Ui ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"     * Constructs a TaskList object with an empty list of tasks and initializes UI and Storage components.","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"    public TaskList() {","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"     * @return The number of tasks in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"    public int getLength() {","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"        return tasks.size();","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Xuyan0518"},"content":"     * Marks a task as done based on user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Xuyan0518"},"content":"     * @param userInput The user input specifying the task to be marked as done.","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Xuyan0518"},"content":"    public void markTask(String userInput) {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"        String num \u003d userInput.substring(4).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Xuyan0518"},"content":"        if (num.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Xuyan0518"},"content":"            ui.displayMessage(\"Error. Unknown task number to be marked.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Xuyan0518"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Xuyan0518"},"content":"            int id \u003d Integer.parseInt(num);","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Xuyan0518"},"content":"            if (id \u003e tasks.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Xuyan0518"},"content":"                ui.displayMessage(\"Error. Task number does not exist.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":45,"author":{"gitId":"Xuyan0518"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Xuyan0518"},"content":"                ui.displayMessage(\"Nice! I have marked this task as done: \");","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Xuyan0518"},"content":"                tasks.get(id - 1).markAsDone();","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Xuyan0518"},"content":"                ui.displayMessage(tasks.get(id - 1).toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":49,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":51,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":54,"author":{"gitId":"Xuyan0518"},"content":"     * Marks a task as undone based on user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":56,"author":{"gitId":"Xuyan0518"},"content":"     * @param userInput The user input specifying the task to be marked as undone.","lastModifiedDate":"2024-02-02"},{"lineNumber":57,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"Xuyan0518"},"content":"    public void unmarkTask(String userInput) {","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"Xuyan0518"},"content":"        String num \u003d userInput.substring(6).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"Xuyan0518"},"content":"        if (num.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"Xuyan0518"},"content":"            ui.displayMessage(\"Error. Unknown task number to be unmarked.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"Xuyan0518"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":63,"author":{"gitId":"Xuyan0518"},"content":"            int id \u003d Integer.parseInt(num);","lastModifiedDate":"2024-02-02"},{"lineNumber":64,"author":{"gitId":"Xuyan0518"},"content":"            if (id \u003e tasks.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":65,"author":{"gitId":"Xuyan0518"},"content":"                ui.displayMessage(\"Error. Task number does not exist.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":66,"author":{"gitId":"Xuyan0518"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":67,"author":{"gitId":"Xuyan0518"},"content":"                ui.displayMessage(\"Okay. I have unmarked this task: \");","lastModifiedDate":"2024-02-02"},{"lineNumber":68,"author":{"gitId":"Xuyan0518"},"content":"                tasks.get(id - 1).markAsUndone();","lastModifiedDate":"2024-02-02"},{"lineNumber":69,"author":{"gitId":"Xuyan0518"},"content":"                ui.displayMessage(tasks.get(id - 1).toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":70,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":71,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":72,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":73,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":74,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":75,"author":{"gitId":"Xuyan0518"},"content":"     * Deletes a task based on user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":76,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":77,"author":{"gitId":"Xuyan0518"},"content":"     * @param userInput The user input specifying the task number to be deleted.","lastModifiedDate":"2024-02-02"},{"lineNumber":78,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":79,"author":{"gitId":"Xuyan0518"},"content":"    public void deleteTask(String userInput) {","lastModifiedDate":"2024-02-02"},{"lineNumber":80,"author":{"gitId":"Xuyan0518"},"content":"        String num \u003d userInput.substring(6).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":81,"author":{"gitId":"Xuyan0518"},"content":"        if (num.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":82,"author":{"gitId":"Xuyan0518"},"content":"            ui.displayMessage(\"Error. Unknown task number to be deleted.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":83,"author":{"gitId":"Xuyan0518"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":84,"author":{"gitId":"Xuyan0518"},"content":"            int id \u003d Integer.parseInt(num);","lastModifiedDate":"2024-02-02"},{"lineNumber":85,"author":{"gitId":"Xuyan0518"},"content":"            if (id \u003e tasks.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":86,"author":{"gitId":"Xuyan0518"},"content":"                ui.displayMessage(\"Error. Task number does not exist.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":87,"author":{"gitId":"Xuyan0518"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":88,"author":{"gitId":"Xuyan0518"},"content":"                ui.displayMessage(\"Okay. I have deleted this task: \");","lastModifiedDate":"2024-02-02"},{"lineNumber":89,"author":{"gitId":"Xuyan0518"},"content":"                ui.displayMessage(tasks.get(id - 1).toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":90,"author":{"gitId":"Xuyan0518"},"content":"                tasks.remove(id - 1);","lastModifiedDate":"2024-02-02"},{"lineNumber":91,"author":{"gitId":"Xuyan0518"},"content":"                ui.displayMessage(displayCounter(tasks.size()));","lastModifiedDate":"2024-02-02"},{"lineNumber":92,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":93,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":94,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":95,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":96,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-08"},{"lineNumber":97,"author":{"gitId":"Xuyan0518"},"content":"     * Deletes a task from the task list based on user input.","lastModifiedDate":"2024-02-08"},{"lineNumber":98,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-08"},{"lineNumber":99,"author":{"gitId":"Xuyan0518"},"content":"     * @param index The task number to be deleted.","lastModifiedDate":"2024-02-08"},{"lineNumber":100,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-08"},{"lineNumber":101,"author":{"gitId":"Xuyan0518"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-02-08"},{"lineNumber":102,"author":{"gitId":"Xuyan0518"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-02-08"},{"lineNumber":103,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":104,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":105,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":106,"author":{"gitId":"Xuyan0518"},"content":"     * Retrieves a task from the task list based on the specified index.","lastModifiedDate":"2024-02-02"},{"lineNumber":107,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":108,"author":{"gitId":"Xuyan0518"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-02-02"},{"lineNumber":109,"author":{"gitId":"Xuyan0518"},"content":"     * @return The task at the specified index, or null if the index is out of bounds.","lastModifiedDate":"2024-02-02"},{"lineNumber":110,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":111,"author":{"gitId":"Xuyan0518"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-02-02"},{"lineNumber":112,"author":{"gitId":"Xuyan0518"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.size()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":113,"author":{"gitId":"Xuyan0518"},"content":"            return tasks.get(index);","lastModifiedDate":"2024-02-02"},{"lineNumber":114,"author":{"gitId":"Xuyan0518"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":115,"author":{"gitId":"Xuyan0518"},"content":"            ui.displayMessage(\"Error. No such task in the task list.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":116,"author":{"gitId":"Xuyan0518"},"content":"            return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":117,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":118,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":119,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":120,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":121,"author":{"gitId":"Xuyan0518"},"content":"     * Adds a task to the task list based on data loaded from a file.","lastModifiedDate":"2024-02-02"},{"lineNumber":122,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":123,"author":{"gitId":"Xuyan0518"},"content":"     * @param task The task to be added to the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":124,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":125,"author":{"gitId":"Xuyan0518"},"content":"    public void addTaskFromData(Task task) {","lastModifiedDate":"2024-02-02"},{"lineNumber":126,"author":{"gitId":"Xuyan0518"},"content":"        tasks.add(task);","lastModifiedDate":"2024-02-02"},{"lineNumber":127,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":128,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":129,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":130,"author":{"gitId":"Xuyan0518"},"content":"     * Adds a task to the task list based on user input for a Todo.","lastModifiedDate":"2024-02-02"},{"lineNumber":131,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":132,"author":{"gitId":"Xuyan0518"},"content":"     * @param userInput The user input specifying the Todo task to be added.","lastModifiedDate":"2024-02-02"},{"lineNumber":133,"author":{"gitId":"Xuyan0518"},"content":"     * @return The added Todo task.","lastModifiedDate":"2024-02-02"},{"lineNumber":134,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":135,"author":{"gitId":"Xuyan0518"},"content":"    public Todo addTodo(String userInput) {","lastModifiedDate":"2024-02-02"},{"lineNumber":136,"author":{"gitId":"Xuyan0518"},"content":"        String description \u003d userInput.substring(5).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":137,"author":{"gitId":"Xuyan0518"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":138,"author":{"gitId":"Xuyan0518"},"content":"            ui.displayMessage(\"Error. Cannot add empty Todo.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":139,"author":{"gitId":"Xuyan0518"},"content":"            return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":140,"author":{"gitId":"Xuyan0518"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":141,"author":{"gitId":"Xuyan0518"},"content":"            ui.displayMessage(\"Got it. I have added this task: \");","lastModifiedDate":"2024-02-02"},{"lineNumber":142,"author":{"gitId":"Xuyan0518"},"content":"            Todo t \u003d new Todo(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":143,"author":{"gitId":"Xuyan0518"},"content":"            ui.displayMessage(t.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":144,"author":{"gitId":"Xuyan0518"},"content":"            tasks.add(t);","lastModifiedDate":"2024-02-02"},{"lineNumber":145,"author":{"gitId":"Xuyan0518"},"content":"            ui.displayMessage(displayCounter(tasks.size()));","lastModifiedDate":"2024-02-02"},{"lineNumber":146,"author":{"gitId":"Xuyan0518"},"content":"            return t;","lastModifiedDate":"2024-02-02"},{"lineNumber":147,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":148,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":149,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":150,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":151,"author":{"gitId":"Xuyan0518"},"content":"     * Adds a task to the task list based on user input for a Deadline.","lastModifiedDate":"2024-02-02"},{"lineNumber":152,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":153,"author":{"gitId":"Xuyan0518"},"content":"     * @param userInput The user input specifying the Deadline task to be added.","lastModifiedDate":"2024-02-02"},{"lineNumber":154,"author":{"gitId":"Xuyan0518"},"content":"     * @return The added Deadline task.","lastModifiedDate":"2024-02-02"},{"lineNumber":155,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":156,"author":{"gitId":"Xuyan0518"},"content":"    public Deadline addDeadline(String userInput) {","lastModifiedDate":"2024-02-02"},{"lineNumber":157,"author":{"gitId":"Xuyan0518"},"content":"        int id \u003d userInput.indexOf(\"/by\");","lastModifiedDate":"2024-02-02"},{"lineNumber":158,"author":{"gitId":"Xuyan0518"},"content":"        String description \u003d userInput.substring(8, id).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":159,"author":{"gitId":"Xuyan0518"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":160,"author":{"gitId":"Xuyan0518"},"content":"            ui.displayMessage(\"Error. Cannot add empty Deadline.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":161,"author":{"gitId":"Xuyan0518"},"content":"            return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":162,"author":{"gitId":"Xuyan0518"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":163,"author":{"gitId":"Xuyan0518"},"content":"            String by \u003d userInput.substring(id + 3).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":164,"author":{"gitId":"Xuyan0518"},"content":"            if (by.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":165,"author":{"gitId":"Xuyan0518"},"content":"                ui.displayMessage(\"Error. Please indicate end time.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":166,"author":{"gitId":"Xuyan0518"},"content":"                return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":167,"author":{"gitId":"Xuyan0518"},"content":"            } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":168,"author":{"gitId":"Xuyan0518"},"content":"                ui.displayMessage(\"Got it. I have added this task: \");","lastModifiedDate":"2024-02-02"},{"lineNumber":169,"author":{"gitId":"Xuyan0518"},"content":"                Deadline d \u003d new Deadline(description, by);","lastModifiedDate":"2024-02-02"},{"lineNumber":170,"author":{"gitId":"Xuyan0518"},"content":"                ui.displayMessage(d.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":171,"author":{"gitId":"Xuyan0518"},"content":"                tasks.add(d);","lastModifiedDate":"2024-02-02"},{"lineNumber":172,"author":{"gitId":"Xuyan0518"},"content":"                ui.displayMessage(displayCounter(tasks.size()));","lastModifiedDate":"2024-02-02"},{"lineNumber":173,"author":{"gitId":"Xuyan0518"},"content":"                return d;","lastModifiedDate":"2024-02-02"},{"lineNumber":174,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":175,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":176,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":177,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":178,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":179,"author":{"gitId":"Xuyan0518"},"content":"     * Adds a task to the task list based on user input for an Event.","lastModifiedDate":"2024-02-02"},{"lineNumber":180,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":181,"author":{"gitId":"Xuyan0518"},"content":"     * @param userInput The user input specifying the Event task to be added.","lastModifiedDate":"2024-02-02"},{"lineNumber":182,"author":{"gitId":"Xuyan0518"},"content":"     * @return The added Event task.","lastModifiedDate":"2024-02-02"},{"lineNumber":183,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":184,"author":{"gitId":"Xuyan0518"},"content":"    public Event addEvent(String userInput) {","lastModifiedDate":"2024-02-02"},{"lineNumber":185,"author":{"gitId":"Xuyan0518"},"content":"        int idFrom \u003d userInput.indexOf(\"/from\");","lastModifiedDate":"2024-02-02"},{"lineNumber":186,"author":{"gitId":"Xuyan0518"},"content":"        int idTo \u003d userInput.indexOf(\"/to\");","lastModifiedDate":"2024-02-02"},{"lineNumber":187,"author":{"gitId":"Xuyan0518"},"content":"        String description \u003d userInput.substring(5, idFrom).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":188,"author":{"gitId":"Xuyan0518"},"content":"        String fromTime \u003d userInput.substring(idFrom + 5, idTo).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":189,"author":{"gitId":"Xuyan0518"},"content":"        String toTime \u003d userInput.substring(idTo + 3).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":190,"author":{"gitId":"Xuyan0518"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":191,"author":{"gitId":"Xuyan0518"},"content":"            ui.displayMessage(\"Error. Cannot add empty Event.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":192,"author":{"gitId":"Xuyan0518"},"content":"            return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":193,"author":{"gitId":"Xuyan0518"},"content":"        } else if (fromTime.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":194,"author":{"gitId":"Xuyan0518"},"content":"            ui.displayMessage(\"Error. Please indicate start time.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":195,"author":{"gitId":"Xuyan0518"},"content":"            return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":196,"author":{"gitId":"Xuyan0518"},"content":"        } else if (toTime.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":197,"author":{"gitId":"Xuyan0518"},"content":"            ui.displayMessage(\"Error. Please indicate to time.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":198,"author":{"gitId":"Xuyan0518"},"content":"            return null;","lastModifiedDate":"2024-02-02"},{"lineNumber":199,"author":{"gitId":"Xuyan0518"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":200,"author":{"gitId":"Xuyan0518"},"content":"            ui.displayMessage(\"Got it. I have added this task: \");","lastModifiedDate":"2024-02-02"},{"lineNumber":201,"author":{"gitId":"Xuyan0518"},"content":"            Event e \u003d new Event(description, fromTime, toTime);","lastModifiedDate":"2024-02-02"},{"lineNumber":202,"author":{"gitId":"Xuyan0518"},"content":"            ui.displayMessage(e.toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":203,"author":{"gitId":"Xuyan0518"},"content":"            tasks.add(e);","lastModifiedDate":"2024-02-02"},{"lineNumber":204,"author":{"gitId":"Xuyan0518"},"content":"            ui.displayMessage(displayCounter(tasks.size()));","lastModifiedDate":"2024-02-02"},{"lineNumber":205,"author":{"gitId":"Xuyan0518"},"content":"            return e;","lastModifiedDate":"2024-02-02"},{"lineNumber":206,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":207,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":208,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":209,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":210,"author":{"gitId":"Xuyan0518"},"content":"     * Searches for tasks containing the specified keyword in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":211,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":212,"author":{"gitId":"Xuyan0518"},"content":"     * @param userInput The user input containing the search command and keyword.","lastModifiedDate":"2024-02-02"},{"lineNumber":213,"author":{"gitId":"Xuyan0518"},"content":"     *                  Format: \"find keyword\"","lastModifiedDate":"2024-02-02"},{"lineNumber":214,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":215,"author":{"gitId":"Xuyan0518"},"content":"    public void searchTask(String userInput) {","lastModifiedDate":"2024-02-02"},{"lineNumber":216,"author":{"gitId":"Xuyan0518"},"content":"        String keyword \u003d userInput.substring(5).trim();","lastModifiedDate":"2024-02-02"},{"lineNumber":217,"author":{"gitId":"Xuyan0518"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-02"},{"lineNumber":218,"author":{"gitId":"Xuyan0518"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":219,"author":{"gitId":"Xuyan0518"},"content":"            if (t.containsKeyword(keyword)) {","lastModifiedDate":"2024-02-02"},{"lineNumber":220,"author":{"gitId":"Xuyan0518"},"content":"                matchingTasks.add(t);","lastModifiedDate":"2024-02-02"},{"lineNumber":221,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":222,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":223,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":224,"author":{"gitId":"Xuyan0518"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2024-02-02"},{"lineNumber":225,"author":{"gitId":"Xuyan0518"},"content":"            ui.displayMessage(\"Oops. There are no matching tasks.\");","lastModifiedDate":"2024-02-02"},{"lineNumber":226,"author":{"gitId":"Xuyan0518"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":227,"author":{"gitId":"Xuyan0518"},"content":"            ui.displayMessage(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2024-02-02"},{"lineNumber":228,"author":{"gitId":"Xuyan0518"},"content":"            for (int i \u003d 1; i \u003c\u003d matchingTasks.size(); i++) {","lastModifiedDate":"2024-02-02"},{"lineNumber":229,"author":{"gitId":"Xuyan0518"},"content":"                ui.displayMessage(i + \". \" + matchingTasks.get(i - 1).toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":230,"author":{"gitId":"Xuyan0518"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":231,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":232,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":233,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":234,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":235,"author":{"gitId":"Xuyan0518"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2024-02-02"},{"lineNumber":236,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":237,"author":{"gitId":"Xuyan0518"},"content":"     * @return true if the task list is empty, false otherwise.","lastModifiedDate":"2024-02-02"},{"lineNumber":238,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":239,"author":{"gitId":"Xuyan0518"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-02-02"},{"lineNumber":240,"author":{"gitId":"Xuyan0518"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2024-02-02"},{"lineNumber":241,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":242,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":243,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":244,"author":{"gitId":"Xuyan0518"},"content":"     * Generates a message indicating the number of tasks in the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":245,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":246,"author":{"gitId":"Xuyan0518"},"content":"     * @param num The number of tasks in the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":247,"author":{"gitId":"Xuyan0518"},"content":"     * @return A message indicating the number of tasks in the list.","lastModifiedDate":"2024-02-02"},{"lineNumber":248,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":249,"author":{"gitId":"Xuyan0518"},"content":"    private String displayCounter(int num) {","lastModifiedDate":"2024-02-02"},{"lineNumber":250,"author":{"gitId":"Xuyan0518"},"content":"        if (num \u003c\u003d 1) {","lastModifiedDate":"2024-02-02"},{"lineNumber":251,"author":{"gitId":"Xuyan0518"},"content":"            return \"Now you have \" + num + \" task in the list.\";","lastModifiedDate":"2024-02-02"},{"lineNumber":252,"author":{"gitId":"Xuyan0518"},"content":"        } else {","lastModifiedDate":"2024-02-02"},{"lineNumber":253,"author":{"gitId":"Xuyan0518"},"content":"            return \"Now you have \" + num + \" tasks in the list.\";","lastModifiedDate":"2024-02-02"},{"lineNumber":254,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":255,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":256,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Xuyan0518":256}},{"path":"src/main/java/friday/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"package friday.task;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":" * Represents a todo task in the Friday application.","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":" * Subclass of the Task class.","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"     * Constructs a Todo object with the specified description.","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"        super(description);","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"     * Overrides the toString method to provide a formatted string representation of the Todo object.","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"     * @return The formatted string representation of the Todo object.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"    @Override","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"    public String toString() {","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Xuyan0518":27}},{"path":"src/main/java/friday/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"package friday.ui;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"import friday.task.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"/**","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":" * Represents the user interface of the Friday application.","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":" */","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"public class Ui {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"    private Scanner scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"     * Constructs a Ui object with a Scanner for user input.","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"    public Ui() {","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-02"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"     * Reads and returns user input from the console.","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"     * @return The user input as a String.","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"    public String getUserInput() {","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"        return scanner.nextLine();","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"     * Displays a message to the user.","lastModifiedDate":"2024-02-02"},{"lineNumber":31,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"Xuyan0518"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":34,"author":{"gitId":"Xuyan0518"},"content":"    public void displayMessage(String message) {","lastModifiedDate":"2024-02-02"},{"lineNumber":35,"author":{"gitId":"Xuyan0518"},"content":"        System.out.println(message);","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"Xuyan0518"},"content":"    /**","lastModifiedDate":"2024-02-02"},{"lineNumber":39,"author":{"gitId":"Xuyan0518"},"content":"     * Displays the tasks in the task list.","lastModifiedDate":"2024-02-02"},{"lineNumber":40,"author":{"gitId":"Xuyan0518"},"content":"     *","lastModifiedDate":"2024-02-02"},{"lineNumber":41,"author":{"gitId":"Xuyan0518"},"content":"     * @param tasks The TaskList containing tasks to be displayed.","lastModifiedDate":"2024-02-02"},{"lineNumber":42,"author":{"gitId":"Xuyan0518"},"content":"     */","lastModifiedDate":"2024-02-02"},{"lineNumber":43,"author":{"gitId":"Xuyan0518"},"content":"    public void displayTaskList(TaskList tasks) {","lastModifiedDate":"2024-02-02"},{"lineNumber":44,"author":{"gitId":"Xuyan0518"},"content":"        for (int i \u003d 0; i \u003c tasks.getLength(); i++) {","lastModifiedDate":"2024-02-08"},{"lineNumber":45,"author":{"gitId":"Xuyan0518"},"content":"            System.out.println(i + 1 + \". \" + tasks.getTask(i).toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":46,"author":{"gitId":"Xuyan0518"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":47,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":48,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Xuyan0518":48}},{"path":"src/test/java/friday/test/FridayTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"package friday.test;","lastModifiedDate":"2024-02-02"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-02-08"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"import friday.task.TaskList;","lastModifiedDate":"2024-02-02"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"import friday.task.Todo;","lastModifiedDate":"2024-02-02"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"public class FridayTest {","lastModifiedDate":"2024-02-02"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"    public void testAddTodo() {","lastModifiedDate":"2024-02-02"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"        taskList.addTodo(\"todo Testing Todo\");","lastModifiedDate":"2024-02-02"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"        Todo t \u003d new Todo(\"Testing Todo\");","lastModifiedDate":"2024-02-02"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"        assertEquals(1, taskList.getLength());","lastModifiedDate":"2024-02-08"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"        assertEquals(t.toString(), taskList.getTask(0).toString());","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"    @Test","lastModifiedDate":"2024-02-02"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"    public void testDeleteTask() {","lastModifiedDate":"2024-02-02"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-02-02"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"        taskList.addTodo(\"todo Testing Delete\");","lastModifiedDate":"2024-02-02"},{"lineNumber":26,"author":{"gitId":"Xuyan0518"},"content":"        taskList.deleteTask(0);","lastModifiedDate":"2024-02-02"},{"lineNumber":27,"author":{"gitId":"Xuyan0518"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":28,"author":{"gitId":"Xuyan0518"},"content":"        assertEquals(0, taskList.getLength());","lastModifiedDate":"2024-02-08"},{"lineNumber":29,"author":{"gitId":"Xuyan0518"},"content":"    }","lastModifiedDate":"2024-02-02"},{"lineNumber":30,"author":{"gitId":"Xuyan0518"},"content":"}","lastModifiedDate":"2024-02-02"}],"authorContributionMap":{"Xuyan0518":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Xuyan0518"},"content":"todo borrow book","lastModifiedDate":"2024-01-26"},{"lineNumber":2,"author":{"gitId":"Xuyan0518"},"content":"deadline return book /by Sunday","lastModifiedDate":"2024-01-27"},{"lineNumber":3,"author":{"gitId":"Xuyan0518"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2024-01-27"},{"lineNumber":4,"author":{"gitId":"Xuyan0518"},"content":"mark 1","lastModifiedDate":"2024-01-27"},{"lineNumber":5,"author":{"gitId":"Xuyan0518"},"content":"mark 2","lastModifiedDate":"2024-01-27"},{"lineNumber":6,"author":{"gitId":"Xuyan0518"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":7,"author":{"gitId":"Xuyan0518"},"content":"mark 3","lastModifiedDate":"2024-01-27"},{"lineNumber":8,"author":{"gitId":"Xuyan0518"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":9,"author":{"gitId":"Xuyan0518"},"content":"unmark 3","lastModifiedDate":"2024-01-27"},{"lineNumber":10,"author":{"gitId":"Xuyan0518"},"content":"unmark 2","lastModifiedDate":"2024-01-27"},{"lineNumber":11,"author":{"gitId":"Xuyan0518"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":12,"author":{"gitId":"Xuyan0518"},"content":"unmark 1","lastModifiedDate":"2024-01-27"},{"lineNumber":13,"author":{"gitId":"Xuyan0518"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":14,"author":{"gitId":"Xuyan0518"},"content":"todo","lastModifiedDate":"2024-01-27"},{"lineNumber":15,"author":{"gitId":"Xuyan0518"},"content":"deadline","lastModifiedDate":"2024-01-27"},{"lineNumber":16,"author":{"gitId":"Xuyan0518"},"content":"event","lastModifiedDate":"2024-01-27"},{"lineNumber":17,"author":{"gitId":"Xuyan0518"},"content":"deadline /by","lastModifiedDate":"2024-01-27"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"deadline return book /by","lastModifiedDate":"2024-01-27"},{"lineNumber":19,"author":{"gitId":"Xuyan0518"},"content":"event /from /to","lastModifiedDate":"2024-01-27"},{"lineNumber":20,"author":{"gitId":"Xuyan0518"},"content":"event meeting /from /to","lastModifiedDate":"2024-01-27"},{"lineNumber":21,"author":{"gitId":"Xuyan0518"},"content":"event meeting /from Mon 2pm /to","lastModifiedDate":"2024-01-27"},{"lineNumber":22,"author":{"gitId":"Xuyan0518"},"content":"delete 3","lastModifiedDate":"2024-01-27"},{"lineNumber":23,"author":{"gitId":"Xuyan0518"},"content":"list","lastModifiedDate":"2024-01-27"},{"lineNumber":24,"author":{"gitId":"Xuyan0518"},"content":"This is a random command","lastModifiedDate":"2024-01-27"},{"lineNumber":25,"author":{"gitId":"Xuyan0518"},"content":"bye","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"Xuyan0518":25}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Xuyan0518"},"content":"java -classpath ..\\bin friday \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-02-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"Xuyan0518":1}}]
